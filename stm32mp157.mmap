0x40000000 A PERIPHERAL TIM2
0x40000000 B  REGISTER TIM2_CR1 (rw): TIM2 control register 1
0x40000000 C   FIELD 00w01 CEN: CEN
0x40000000 C   FIELD 01w01 UDIS: UDIS
0x40000000 C   FIELD 02w01 URS: URS
0x40000000 C   FIELD 03w01 OPM: OPM
0x40000000 C   FIELD 04w01 DIR: DIR
0x40000000 C   FIELD 05w02 CMS: CMS
0x40000000 C   FIELD 07w01 ARPE: ARPE
0x40000000 C   FIELD 08w02 CKD: CKD
0x40000000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x40000004 B  REGISTER TIM2_CR2 (rw): TIM2 control register 2
0x40000004 C   FIELD 00w01 CCPC: CCPC
0x40000004 C   FIELD 02w01 CCUS: CCUS
0x40000004 C   FIELD 03w01 CCDS: CCDS
0x40000004 C   FIELD 04w03 MMS: MMS
0x40000004 C   FIELD 07w01 TI1S: TI1S
0x40000004 C   FIELD 08w01 OIS1: OIS1
0x40000004 C   FIELD 09w01 OIS1N: OIS1N
0x40000004 C   FIELD 10w01 OIS2: OIS2
0x40000004 C   FIELD 11w01 OIS2N: OIS2N
0x40000004 C   FIELD 12w01 OIS3: OIS3
0x40000004 C   FIELD 13w01 OIS3N: OIS3N
0x40000004 C   FIELD 14w01 OIS4: OIS4
0x40000004 C   FIELD 16w01 OIS5: OIS5
0x40000004 C   FIELD 18w01 OIS6: OIS6
0x40000004 C   FIELD 20w04 MMS2: MMS2
0x40000008 B  REGISTER TIM2_SMCR (rw): TIM2 slave mode control register
0x40000008 C   FIELD 00w03 SMS: SMS
0x40000008 C   FIELD 04w03 TS: TS
0x40000008 C   FIELD 07w01 MSM: MSM
0x40000008 C   FIELD 08w04 ETF: ETF
0x40000008 C   FIELD 12w02 ETPS: ETPS
0x40000008 C   FIELD 14w01 ECE: ECE
0x40000008 C   FIELD 15w01 ETP: ETP
0x40000008 C   FIELD 16w01 SMS3: SMS3
0x40000008 C   FIELD 20w01 TS3: TS3
0x40000008 C   FIELD 21w01 TS4: TS4
0x4000000C B  REGISTER TIM2_DIER (rw): TIM2 DMA/interrupt enable register
0x4000000C C   FIELD 00w01 UIE: UIE
0x4000000C C   FIELD 01w01 CC1IE: CC1IE
0x4000000C C   FIELD 02w01 CC2IE: CC2IE
0x4000000C C   FIELD 03w01 CC3IE: CC3IE
0x4000000C C   FIELD 04w01 CC4IE: CC4IE
0x4000000C C   FIELD 05w01 COMIE: COMIE
0x4000000C C   FIELD 06w01 TIE: TIE
0x4000000C C   FIELD 07w01 BIE: BIE
0x4000000C C   FIELD 08w01 UDE: UDE
0x4000000C C   FIELD 09w01 CC1DE: CC1DE
0x4000000C C   FIELD 10w01 CC2DE: CC2DE
0x4000000C C   FIELD 11w01 CC3DE: CC3DE
0x4000000C C   FIELD 12w01 CC4DE: CC4DE
0x4000000C C   FIELD 13w01 COMDE: COMDE
0x4000000C C   FIELD 14w01 TDE: TDE
0x40000010 B  REGISTER TIM2_SR (rw): TIM2 status register
0x40000010 C   FIELD 00w01 UIF: UIF
0x40000010 C   FIELD 01w01 CC1IF: CC1IF
0x40000010 C   FIELD 02w01 CC2IF: CC2IF
0x40000010 C   FIELD 03w01 CC3IF: CC3IF
0x40000010 C   FIELD 04w01 CC4IF: CC4IF
0x40000010 C   FIELD 05w01 COMIF: COMIF
0x40000010 C   FIELD 06w01 TIF: TIF
0x40000010 C   FIELD 07w01 BIF: BIF
0x40000010 C   FIELD 08w01 B2IF: B2IF
0x40000010 C   FIELD 09w01 CC1OF: CC1OF
0x40000010 C   FIELD 10w01 CC2OF: CC2OF
0x40000010 C   FIELD 11w01 CC3OF: CC3OF
0x40000010 C   FIELD 12w01 CC4OF: CC4OF
0x40000010 C   FIELD 13w01 SBIF: SBIF
0x40000010 C   FIELD 16w01 CC5IF: CC5IF
0x40000010 C   FIELD 17w01 CC6IF: CC6IF
0x40000014 B  REGISTER TIM2_EGR (wo): TIM2 event generation register
0x40000014 C   FIELD 00w01 UG: UG
0x40000014 C   FIELD 01w01 CC1G: CC1G
0x40000014 C   FIELD 02w01 CC2G: CC2G
0x40000014 C   FIELD 03w01 CC3G: CC3G
0x40000014 C   FIELD 04w01 CC4G: CC4G
0x40000014 C   FIELD 05w01 COMG: COMG
0x40000014 C   FIELD 06w01 TG: TG
0x40000014 C   FIELD 07w01 BG: BG
0x40000014 C   FIELD 08w01 B2G: B2G
0x40000018 B  REGISTER TIM2_CCMR1ALTERNATE2 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x40000018 C   FIELD 00w02 CC1S: CC1S
0x40000018 C   FIELD 02w02 IC1PSC: IC1PSC
0x40000018 C   FIELD 04w04 IC1F: IC1F
0x40000018 C   FIELD 08w02 CC2S: CC2S
0x40000018 C   FIELD 10w02 IC2PSC: IC2PSC
0x40000018 C   FIELD 12w04 IC2F: IC2F
0x4000001C B  REGISTER TIM2_CCMR2ALTERNATE18 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x4000001C C   FIELD 00w02 CC3S: CC3S
0x4000001C C   FIELD 02w02 IC3PSC: IC3PSC
0x4000001C C   FIELD 04w04 IC3F: IC3F
0x4000001C C   FIELD 08w02 CC4S: CC4S
0x4000001C C   FIELD 10w02 IC4PSC: IC4PSC
0x4000001C C   FIELD 12w04 IC4F: IC4F
0x40000020 B  REGISTER TIM2_CCER (rw): TIM2 capture/compare enable register
0x40000020 C   FIELD 00w01 CC1E: CC1E
0x40000020 C   FIELD 01w01 CC1P: CC1P
0x40000020 C   FIELD 02w01 CC1NE: CC1NE
0x40000020 C   FIELD 03w01 CC1NP: CC1NP
0x40000020 C   FIELD 04w01 CC2E: CC2E
0x40000020 C   FIELD 05w01 CC2P: CC2P
0x40000020 C   FIELD 06w01 CC2NE: CC2NE
0x40000020 C   FIELD 07w01 CC2NP: CC2NP
0x40000020 C   FIELD 08w01 CC3E: CC3E
0x40000020 C   FIELD 09w01 CC3P: CC3P
0x40000020 C   FIELD 10w01 CC3NE: CC3NE
0x40000020 C   FIELD 11w01 CC3NP: CC3NP
0x40000020 C   FIELD 12w01 CC4E: CC4E
0x40000020 C   FIELD 13w01 CC4P: CC4P
0x40000020 C   FIELD 15w01 CC4NP: CC4NP
0x40000020 C   FIELD 16w01 CC5E: CC5E
0x40000020 C   FIELD 17w01 CC5P: CC5P
0x40000020 C   FIELD 20w01 CC6E: CC6E
0x40000020 C   FIELD 21w01 CC6P: CC6P
0x40000024 B  REGISTER TIM2_CNT: TIM2 counter
0x40000024 C   FIELD 00w16 CNT (rw): CNT
0x40000024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x40000028 B  REGISTER TIM2_PSC (rw): TIM2 prescaler
0x40000028 C   FIELD 00w16 PSC: PSC
0x4000002C B  REGISTER TIM2_ARR (rw): TIM2 auto-reload register
0x4000002C C   FIELD 00w16 ARR: ARR
0x40000030 B  REGISTER TIM2_RCR (rw): TIM2 repetition counter register
0x40000030 C   FIELD 00w16 REP: REP
0x40000034 B  REGISTER TIM2_CCR1 (rw): TIM2 capture/compare register 1
0x40000034 C   FIELD 00w16 CCR1: CCR1
0x40000038 B  REGISTER TIM2_CCR2 (rw): TIM2 capture/compare register 2
0x40000038 C   FIELD 00w16 CCR2: CCR2
0x4000003C B  REGISTER TIM2_CCR3 (rw): TIM2 capture/compare register 3
0x4000003C C   FIELD 00w16 CCR3: CCR3
0x40000040 B  REGISTER TIM2_CCR4 (rw): TIM2 capture/compare register 4
0x40000040 C   FIELD 00w16 CCR4: CCR4
0x40000044 B  REGISTER TIM2_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x40000044 C   FIELD 00w08 DTG: DTG
0x40000044 C   FIELD 08w02 LOCK: LOCK
0x40000044 C   FIELD 10w01 OSSI: OSSI
0x40000044 C   FIELD 11w01 OSSR: OSSR
0x40000044 C   FIELD 12w01 BKE: BKE
0x40000044 C   FIELD 13w01 BKP: BKP
0x40000044 C   FIELD 14w01 AOE: AOE
0x40000044 C   FIELD 15w01 MOE: MOE
0x40000044 C   FIELD 16w04 BKF: BKF
0x40000044 C   FIELD 20w04 BK2F: BK2F
0x40000044 C   FIELD 24w01 BK2E: BK2E
0x40000044 C   FIELD 25w01 BK2P: BK2P
0x40000044 C   FIELD 26w01 BKDSRM: BKDSRM
0x40000044 C   FIELD 27w01 BK2DSRM: BK2DSRM
0x40000044 C   FIELD 28w01 BKBID: BKBID
0x40000044 C   FIELD 29w01 BK2BID: BK2BID
0x40000048 B  REGISTER TIM2_DCR (rw): TIM2 DMA control register
0x40000048 C   FIELD 00w05 DBA: DBA
0x40000048 C   FIELD 08w05 DBL: DBL
0x4000004C B  REGISTER TIM2_DMAR (rw): TIM2 DMA address for full transfer
0x4000004C C   FIELD 00w32 DMAB: DMAB
0x40000054 B  REGISTER TIM2_CCMR3 (rw): The channels 5 and 6 can only be configured in output. Output compare mode:
0x40000054 C   FIELD 02w01 OC5FE: OC5FE
0x40000054 C   FIELD 03w01 OC5PE: OC5PE
0x40000054 C   FIELD 04w03 OC5M: OC5M
0x40000054 C   FIELD 07w01 OC5CE: OC5CE
0x40000054 C   FIELD 10w01 OC6FE: OC6FE
0x40000054 C   FIELD 11w01 OC6PE: OC6PE
0x40000054 C   FIELD 12w03 OC6M: OC6M
0x40000054 C   FIELD 15w01 OC6CE: OC6CE
0x40000054 C   FIELD 16w01 OC5M3: OC5M3
0x40000054 C   FIELD 24w01 OC6M3: OC6M3
0x40000058 B  REGISTER TIM2_CCR5 (rw): TIM2 capture/compare register 5
0x40000058 C   FIELD 00w16 CCR5: CCR5
0x40000058 C   FIELD 29w01 GC5C1: GC5C1
0x40000058 C   FIELD 30w01 GC5C2: GC5C2
0x40000058 C   FIELD 31w01 GC5C3: GC5C3
0x4000005C B  REGISTER TIM2_CCR6 (rw): TIM2 capture/compare register 6
0x4000005C C   FIELD 00w16 CCR6: CCR6
0x40001000 A PERIPHERAL TIM3
0x40001000 B  REGISTER TIM3_CR1 (rw): TIM3 control register 1
0x40001000 C   FIELD 00w01 CEN: CEN
0x40001000 C   FIELD 01w01 UDIS: UDIS
0x40001000 C   FIELD 02w01 URS: URS
0x40001000 C   FIELD 03w01 OPM: OPM
0x40001000 C   FIELD 04w01 DIR: DIR
0x40001000 C   FIELD 05w02 CMS: CMS
0x40001000 C   FIELD 07w01 ARPE: ARPE
0x40001000 C   FIELD 08w02 CKD: CKD
0x40001000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x40001004 B  REGISTER TIM3_CR2 (rw): TIM3 control register 2
0x40001004 C   FIELD 00w01 CCPC: CCPC
0x40001004 C   FIELD 02w01 CCUS: CCUS
0x40001004 C   FIELD 03w01 CCDS: CCDS
0x40001004 C   FIELD 04w03 MMS: MMS
0x40001004 C   FIELD 07w01 TI1S: TI1S
0x40001004 C   FIELD 08w01 OIS1: OIS1
0x40001004 C   FIELD 09w01 OIS1N: OIS1N
0x40001004 C   FIELD 10w01 OIS2: OIS2
0x40001004 C   FIELD 11w01 OIS2N: OIS2N
0x40001004 C   FIELD 12w01 OIS3: OIS3
0x40001004 C   FIELD 13w01 OIS3N: OIS3N
0x40001004 C   FIELD 14w01 OIS4: OIS4
0x40001004 C   FIELD 16w01 OIS5: OIS5
0x40001004 C   FIELD 18w01 OIS6: OIS6
0x40001004 C   FIELD 20w04 MMS2: MMS2
0x40001008 B  REGISTER TIM3_SMCR (rw): TIM3 slave mode control register
0x40001008 C   FIELD 00w03 SMS: SMS
0x40001008 C   FIELD 04w03 TS: TS
0x40001008 C   FIELD 07w01 MSM: MSM
0x40001008 C   FIELD 08w04 ETF: ETF
0x40001008 C   FIELD 12w02 ETPS: ETPS
0x40001008 C   FIELD 14w01 ECE: ECE
0x40001008 C   FIELD 15w01 ETP: ETP
0x40001008 C   FIELD 16w01 SMS3: SMS3
0x40001008 C   FIELD 20w01 TS3: TS3
0x40001008 C   FIELD 21w01 TS4: TS4
0x4000100C B  REGISTER TIM3_DIER (rw): TIM3 DMA/interrupt enable register
0x4000100C C   FIELD 00w01 UIE: UIE
0x4000100C C   FIELD 01w01 CC1IE: CC1IE
0x4000100C C   FIELD 02w01 CC2IE: CC2IE
0x4000100C C   FIELD 03w01 CC3IE: CC3IE
0x4000100C C   FIELD 04w01 CC4IE: CC4IE
0x4000100C C   FIELD 05w01 COMIE: COMIE
0x4000100C C   FIELD 06w01 TIE: TIE
0x4000100C C   FIELD 07w01 BIE: BIE
0x4000100C C   FIELD 08w01 UDE: UDE
0x4000100C C   FIELD 09w01 CC1DE: CC1DE
0x4000100C C   FIELD 10w01 CC2DE: CC2DE
0x4000100C C   FIELD 11w01 CC3DE: CC3DE
0x4000100C C   FIELD 12w01 CC4DE: CC4DE
0x4000100C C   FIELD 13w01 COMDE: COMDE
0x4000100C C   FIELD 14w01 TDE: TDE
0x40001010 B  REGISTER TIM3_SR (rw): TIM3 status register
0x40001010 C   FIELD 00w01 UIF: UIF
0x40001010 C   FIELD 01w01 CC1IF: CC1IF
0x40001010 C   FIELD 02w01 CC2IF: CC2IF
0x40001010 C   FIELD 03w01 CC3IF: CC3IF
0x40001010 C   FIELD 04w01 CC4IF: CC4IF
0x40001010 C   FIELD 05w01 COMIF: COMIF
0x40001010 C   FIELD 06w01 TIF: TIF
0x40001010 C   FIELD 07w01 BIF: BIF
0x40001010 C   FIELD 08w01 B2IF: B2IF
0x40001010 C   FIELD 09w01 CC1OF: CC1OF
0x40001010 C   FIELD 10w01 CC2OF: CC2OF
0x40001010 C   FIELD 11w01 CC3OF: CC3OF
0x40001010 C   FIELD 12w01 CC4OF: CC4OF
0x40001010 C   FIELD 13w01 SBIF: SBIF
0x40001010 C   FIELD 16w01 CC5IF: CC5IF
0x40001010 C   FIELD 17w01 CC6IF: CC6IF
0x40001014 B  REGISTER TIM3_EGR (wo): TIM3 event generation register
0x40001014 C   FIELD 00w01 UG: UG
0x40001014 C   FIELD 01w01 CC1G: CC1G
0x40001014 C   FIELD 02w01 CC2G: CC2G
0x40001014 C   FIELD 03w01 CC3G: CC3G
0x40001014 C   FIELD 04w01 CC4G: CC4G
0x40001014 C   FIELD 05w01 COMG: COMG
0x40001014 C   FIELD 06w01 TG: TG
0x40001014 C   FIELD 07w01 BG: BG
0x40001014 C   FIELD 08w01 B2G: B2G
0x40001018 B  REGISTER TIM3_CCMR1ALTERNATE3 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x40001018 C   FIELD 00w02 CC1S: CC1S
0x40001018 C   FIELD 02w02 IC1PSC: IC1PSC
0x40001018 C   FIELD 04w04 IC1F: IC1F
0x40001018 C   FIELD 08w02 CC2S: CC2S
0x40001018 C   FIELD 10w02 IC2PSC: IC2PSC
0x40001018 C   FIELD 12w04 IC2F: IC2F
0x4000101C B  REGISTER TIM3_CCMR2ALTERNATE19 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x4000101C C   FIELD 00w02 CC3S: CC3S
0x4000101C C   FIELD 02w02 IC3PSC: IC3PSC
0x4000101C C   FIELD 04w04 IC3F: IC3F
0x4000101C C   FIELD 08w02 CC4S: CC4S
0x4000101C C   FIELD 10w02 IC4PSC: IC4PSC
0x4000101C C   FIELD 12w04 IC4F: IC4F
0x40001020 B  REGISTER TIM3_CCER (rw): TIM3 capture/compare enable register
0x40001020 C   FIELD 00w01 CC1E: CC1E
0x40001020 C   FIELD 01w01 CC1P: CC1P
0x40001020 C   FIELD 02w01 CC1NE: CC1NE
0x40001020 C   FIELD 03w01 CC1NP: CC1NP
0x40001020 C   FIELD 04w01 CC2E: CC2E
0x40001020 C   FIELD 05w01 CC2P: CC2P
0x40001020 C   FIELD 06w01 CC2NE: CC2NE
0x40001020 C   FIELD 07w01 CC2NP: CC2NP
0x40001020 C   FIELD 08w01 CC3E: CC3E
0x40001020 C   FIELD 09w01 CC3P: CC3P
0x40001020 C   FIELD 10w01 CC3NE: CC3NE
0x40001020 C   FIELD 11w01 CC3NP: CC3NP
0x40001020 C   FIELD 12w01 CC4E: CC4E
0x40001020 C   FIELD 13w01 CC4P: CC4P
0x40001020 C   FIELD 15w01 CC4NP: CC4NP
0x40001020 C   FIELD 16w01 CC5E: CC5E
0x40001020 C   FIELD 17w01 CC5P: CC5P
0x40001020 C   FIELD 20w01 CC6E: CC6E
0x40001020 C   FIELD 21w01 CC6P: CC6P
0x40001024 B  REGISTER TIM3_CNT: TIM3 counter
0x40001024 C   FIELD 00w16 CNT (rw): CNT
0x40001024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x40001028 B  REGISTER TIM3_PSC (rw): TIM3 prescaler
0x40001028 C   FIELD 00w16 PSC: PSC
0x4000102C B  REGISTER TIM3_ARR (rw): TIM3 auto-reload register
0x4000102C C   FIELD 00w16 ARR: ARR
0x40001030 B  REGISTER TIM3_RCR (rw): TIM3 repetition counter register
0x40001030 C   FIELD 00w16 REP: REP
0x40001034 B  REGISTER TIM3_CCR1 (rw): TIM3 capture/compare register 1
0x40001034 C   FIELD 00w16 CCR1: CCR1
0x40001038 B  REGISTER TIM3_CCR2 (rw): TIM3 capture/compare register 2
0x40001038 C   FIELD 00w16 CCR2: CCR2
0x4000103C B  REGISTER TIM3_CCR3 (rw): TIM3 capture/compare register 3
0x4000103C C   FIELD 00w16 CCR3: CCR3
0x40001040 B  REGISTER TIM3_CCR4 (rw): TIM3 capture/compare register 4
0x40001040 C   FIELD 00w16 CCR4: CCR4
0x40001044 B  REGISTER TIM3_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x40001044 C   FIELD 00w08 DTG: DTG
0x40001044 C   FIELD 08w02 LOCK: LOCK
0x40001044 C   FIELD 10w01 OSSI: OSSI
0x40001044 C   FIELD 11w01 OSSR: OSSR
0x40001044 C   FIELD 12w01 BKE: BKE
0x40001044 C   FIELD 13w01 BKP: BKP
0x40001044 C   FIELD 14w01 AOE: AOE
0x40001044 C   FIELD 15w01 MOE: MOE
0x40001044 C   FIELD 16w04 BKF: BKF
0x40001044 C   FIELD 20w04 BK2F: BK2F
0x40001044 C   FIELD 24w01 BK2E: BK2E
0x40001044 C   FIELD 25w01 BK2P: BK2P
0x40001044 C   FIELD 26w01 BKDSRM: BKDSRM
0x40001044 C   FIELD 27w01 BK2DSRM: BK2DSRM
0x40001044 C   FIELD 28w01 BKBID: BKBID
0x40001044 C   FIELD 29w01 BK2BID: BK2BID
0x40001048 B  REGISTER TIM3_DCR (rw): TIM3 DMA control register
0x40001048 C   FIELD 00w05 DBA: DBA
0x40001048 C   FIELD 08w05 DBL: DBL
0x4000104C B  REGISTER TIM3_DMAR (rw): TIM3 DMA address for full transfer
0x4000104C C   FIELD 00w32 DMAB: DMAB
0x40001054 B  REGISTER TIM3_CCMR3 (rw): The channels 5 and 6 can only be configured in output. Output compare mode:
0x40001054 C   FIELD 02w01 OC5FE: OC5FE
0x40001054 C   FIELD 03w01 OC5PE: OC5PE
0x40001054 C   FIELD 04w03 OC5M: OC5M
0x40001054 C   FIELD 07w01 OC5CE: OC5CE
0x40001054 C   FIELD 10w01 OC6FE: OC6FE
0x40001054 C   FIELD 11w01 OC6PE: OC6PE
0x40001054 C   FIELD 12w03 OC6M: OC6M
0x40001054 C   FIELD 15w01 OC6CE: OC6CE
0x40001054 C   FIELD 16w01 OC5M3: OC5M3
0x40001054 C   FIELD 24w01 OC6M3: OC6M3
0x40001058 B  REGISTER TIM3_CCR5 (rw): TIM3 capture/compare register 5
0x40001058 C   FIELD 00w16 CCR5: CCR5
0x40001058 C   FIELD 29w01 GC5C1: GC5C1
0x40001058 C   FIELD 30w01 GC5C2: GC5C2
0x40001058 C   FIELD 31w01 GC5C3: GC5C3
0x4000105C B  REGISTER TIM3_CCR6 (rw): TIM3 capture/compare register 6
0x4000105C C   FIELD 00w16 CCR6: CCR6
0x40002000 A PERIPHERAL TIM4
0x40002000 B  REGISTER TIM4_CR1 (rw): TIM4 control register 1
0x40002000 C   FIELD 00w01 CEN: CEN
0x40002000 C   FIELD 01w01 UDIS: UDIS
0x40002000 C   FIELD 02w01 URS: URS
0x40002000 C   FIELD 03w01 OPM: OPM
0x40002000 C   FIELD 04w01 DIR: DIR
0x40002000 C   FIELD 05w02 CMS: CMS
0x40002000 C   FIELD 07w01 ARPE: ARPE
0x40002000 C   FIELD 08w02 CKD: CKD
0x40002000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x40002004 B  REGISTER TIM4_CR2 (rw): TIM4 control register 2
0x40002004 C   FIELD 00w01 CCPC: CCPC
0x40002004 C   FIELD 02w01 CCUS: CCUS
0x40002004 C   FIELD 03w01 CCDS: CCDS
0x40002004 C   FIELD 04w03 MMS: MMS
0x40002004 C   FIELD 07w01 TI1S: TI1S
0x40002004 C   FIELD 08w01 OIS1: OIS1
0x40002004 C   FIELD 09w01 OIS1N: OIS1N
0x40002004 C   FIELD 10w01 OIS2: OIS2
0x40002004 C   FIELD 11w01 OIS2N: OIS2N
0x40002004 C   FIELD 12w01 OIS3: OIS3
0x40002004 C   FIELD 13w01 OIS3N: OIS3N
0x40002004 C   FIELD 14w01 OIS4: OIS4
0x40002004 C   FIELD 16w01 OIS5: OIS5
0x40002004 C   FIELD 18w01 OIS6: OIS6
0x40002004 C   FIELD 20w04 MMS2: MMS2
0x40002008 B  REGISTER TIM4_SMCR (rw): TIM4 slave mode control register
0x40002008 C   FIELD 00w03 SMS: SMS
0x40002008 C   FIELD 04w03 TS: TS
0x40002008 C   FIELD 07w01 MSM: MSM
0x40002008 C   FIELD 08w04 ETF: ETF
0x40002008 C   FIELD 12w02 ETPS: ETPS
0x40002008 C   FIELD 14w01 ECE: ECE
0x40002008 C   FIELD 15w01 ETP: ETP
0x40002008 C   FIELD 16w01 SMS3: SMS3
0x40002008 C   FIELD 20w01 TS3: TS3
0x40002008 C   FIELD 21w01 TS4: TS4
0x4000200C B  REGISTER TIM4_DIER (rw): TIM4 DMA/interrupt enable register
0x4000200C C   FIELD 00w01 UIE: UIE
0x4000200C C   FIELD 01w01 CC1IE: CC1IE
0x4000200C C   FIELD 02w01 CC2IE: CC2IE
0x4000200C C   FIELD 03w01 CC3IE: CC3IE
0x4000200C C   FIELD 04w01 CC4IE: CC4IE
0x4000200C C   FIELD 05w01 COMIE: COMIE
0x4000200C C   FIELD 06w01 TIE: TIE
0x4000200C C   FIELD 07w01 BIE: BIE
0x4000200C C   FIELD 08w01 UDE: UDE
0x4000200C C   FIELD 09w01 CC1DE: CC1DE
0x4000200C C   FIELD 10w01 CC2DE: CC2DE
0x4000200C C   FIELD 11w01 CC3DE: CC3DE
0x4000200C C   FIELD 12w01 CC4DE: CC4DE
0x4000200C C   FIELD 13w01 COMDE: COMDE
0x4000200C C   FIELD 14w01 TDE: TDE
0x40002010 B  REGISTER TIM4_SR (rw): TIM4 status register
0x40002010 C   FIELD 00w01 UIF: UIF
0x40002010 C   FIELD 01w01 CC1IF: CC1IF
0x40002010 C   FIELD 02w01 CC2IF: CC2IF
0x40002010 C   FIELD 03w01 CC3IF: CC3IF
0x40002010 C   FIELD 04w01 CC4IF: CC4IF
0x40002010 C   FIELD 05w01 COMIF: COMIF
0x40002010 C   FIELD 06w01 TIF: TIF
0x40002010 C   FIELD 07w01 BIF: BIF
0x40002010 C   FIELD 08w01 B2IF: B2IF
0x40002010 C   FIELD 09w01 CC1OF: CC1OF
0x40002010 C   FIELD 10w01 CC2OF: CC2OF
0x40002010 C   FIELD 11w01 CC3OF: CC3OF
0x40002010 C   FIELD 12w01 CC4OF: CC4OF
0x40002010 C   FIELD 13w01 SBIF: SBIF
0x40002010 C   FIELD 16w01 CC5IF: CC5IF
0x40002010 C   FIELD 17w01 CC6IF: CC6IF
0x40002014 B  REGISTER TIM4_EGR (wo): TIM4 event generation register
0x40002014 C   FIELD 00w01 UG: UG
0x40002014 C   FIELD 01w01 CC1G: CC1G
0x40002014 C   FIELD 02w01 CC2G: CC2G
0x40002014 C   FIELD 03w01 CC3G: CC3G
0x40002014 C   FIELD 04w01 CC4G: CC4G
0x40002014 C   FIELD 05w01 COMG: COMG
0x40002014 C   FIELD 06w01 TG: TG
0x40002014 C   FIELD 07w01 BG: BG
0x40002014 C   FIELD 08w01 B2G: B2G
0x40002018 B  REGISTER TIM4_CCMR1ALTERNATE4 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x40002018 C   FIELD 00w02 CC1S: CC1S
0x40002018 C   FIELD 02w02 IC1PSC: IC1PSC
0x40002018 C   FIELD 04w04 IC1F: IC1F
0x40002018 C   FIELD 08w02 CC2S: CC2S
0x40002018 C   FIELD 10w02 IC2PSC: IC2PSC
0x40002018 C   FIELD 12w04 IC2F: IC2F
0x4000201C B  REGISTER TIM4_CCMR2ALTERNATE20 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x4000201C C   FIELD 00w02 CC3S: CC3S
0x4000201C C   FIELD 02w02 IC3PSC: IC3PSC
0x4000201C C   FIELD 04w04 IC3F: IC3F
0x4000201C C   FIELD 08w02 CC4S: CC4S
0x4000201C C   FIELD 10w02 IC4PSC: IC4PSC
0x4000201C C   FIELD 12w04 IC4F: IC4F
0x40002020 B  REGISTER TIM4_CCER (rw): TIM4 capture/compare enable register
0x40002020 C   FIELD 00w01 CC1E: CC1E
0x40002020 C   FIELD 01w01 CC1P: CC1P
0x40002020 C   FIELD 02w01 CC1NE: CC1NE
0x40002020 C   FIELD 03w01 CC1NP: CC1NP
0x40002020 C   FIELD 04w01 CC2E: CC2E
0x40002020 C   FIELD 05w01 CC2P: CC2P
0x40002020 C   FIELD 06w01 CC2NE: CC2NE
0x40002020 C   FIELD 07w01 CC2NP: CC2NP
0x40002020 C   FIELD 08w01 CC3E: CC3E
0x40002020 C   FIELD 09w01 CC3P: CC3P
0x40002020 C   FIELD 10w01 CC3NE: CC3NE
0x40002020 C   FIELD 11w01 CC3NP: CC3NP
0x40002020 C   FIELD 12w01 CC4E: CC4E
0x40002020 C   FIELD 13w01 CC4P: CC4P
0x40002020 C   FIELD 15w01 CC4NP: CC4NP
0x40002020 C   FIELD 16w01 CC5E: CC5E
0x40002020 C   FIELD 17w01 CC5P: CC5P
0x40002020 C   FIELD 20w01 CC6E: CC6E
0x40002020 C   FIELD 21w01 CC6P: CC6P
0x40002024 B  REGISTER TIM4_CNT: TIM4 counter
0x40002024 C   FIELD 00w16 CNT (rw): CNT
0x40002024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x40002028 B  REGISTER TIM4_PSC (rw): TIM4 prescaler
0x40002028 C   FIELD 00w16 PSC: PSC
0x4000202C B  REGISTER TIM4_ARR (rw): TIM4 auto-reload register
0x4000202C C   FIELD 00w16 ARR: ARR
0x40002030 B  REGISTER TIM4_RCR (rw): TIM4 repetition counter register
0x40002030 C   FIELD 00w16 REP: REP
0x40002034 B  REGISTER TIM4_CCR1 (rw): TIM4 capture/compare register 1
0x40002034 C   FIELD 00w16 CCR1: CCR1
0x40002038 B  REGISTER TIM4_CCR2 (rw): TIM4 capture/compare register 2
0x40002038 C   FIELD 00w16 CCR2: CCR2
0x4000203C B  REGISTER TIM4_CCR3 (rw): TIM4 capture/compare register 3
0x4000203C C   FIELD 00w16 CCR3: CCR3
0x40002040 B  REGISTER TIM4_CCR4 (rw): TIM4 capture/compare register 4
0x40002040 C   FIELD 00w16 CCR4: CCR4
0x40002044 B  REGISTER TIM4_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x40002044 C   FIELD 00w08 DTG: DTG
0x40002044 C   FIELD 08w02 LOCK: LOCK
0x40002044 C   FIELD 10w01 OSSI: OSSI
0x40002044 C   FIELD 11w01 OSSR: OSSR
0x40002044 C   FIELD 12w01 BKE: BKE
0x40002044 C   FIELD 13w01 BKP: BKP
0x40002044 C   FIELD 14w01 AOE: AOE
0x40002044 C   FIELD 15w01 MOE: MOE
0x40002044 C   FIELD 16w04 BKF: BKF
0x40002044 C   FIELD 20w04 BK2F: BK2F
0x40002044 C   FIELD 24w01 BK2E: BK2E
0x40002044 C   FIELD 25w01 BK2P: BK2P
0x40002044 C   FIELD 26w01 BKDSRM: BKDSRM
0x40002044 C   FIELD 27w01 BK2DSRM: BK2DSRM
0x40002044 C   FIELD 28w01 BKBID: BKBID
0x40002044 C   FIELD 29w01 BK2BID: BK2BID
0x40002048 B  REGISTER TIM4_DCR (rw): TIM4 DMA control register
0x40002048 C   FIELD 00w05 DBA: DBA
0x40002048 C   FIELD 08w05 DBL: DBL
0x4000204C B  REGISTER TIM4_DMAR (rw): TIM4 DMA address for full transfer
0x4000204C C   FIELD 00w32 DMAB: DMAB
0x40002054 B  REGISTER TIM4_CCMR3 (rw): The channels 5 and 6 can only be configured in output. Output compare mode:
0x40002054 C   FIELD 02w01 OC5FE: OC5FE
0x40002054 C   FIELD 03w01 OC5PE: OC5PE
0x40002054 C   FIELD 04w03 OC5M: OC5M
0x40002054 C   FIELD 07w01 OC5CE: OC5CE
0x40002054 C   FIELD 10w01 OC6FE: OC6FE
0x40002054 C   FIELD 11w01 OC6PE: OC6PE
0x40002054 C   FIELD 12w03 OC6M: OC6M
0x40002054 C   FIELD 15w01 OC6CE: OC6CE
0x40002054 C   FIELD 16w01 OC5M3: OC5M3
0x40002054 C   FIELD 24w01 OC6M3: OC6M3
0x40002058 B  REGISTER TIM4_CCR5 (rw): TIM4 capture/compare register 5
0x40002058 C   FIELD 00w16 CCR5: CCR5
0x40002058 C   FIELD 29w01 GC5C1: GC5C1
0x40002058 C   FIELD 30w01 GC5C2: GC5C2
0x40002058 C   FIELD 31w01 GC5C3: GC5C3
0x4000205C B  REGISTER TIM4_CCR6 (rw): TIM4 capture/compare register 6
0x4000205C C   FIELD 00w16 CCR6: CCR6
0x40003000 A PERIPHERAL TIM5
0x40003000 B  REGISTER TIM5_CR1 (rw): TIM5 control register 1
0x40003000 C   FIELD 00w01 CEN: CEN
0x40003000 C   FIELD 01w01 UDIS: UDIS
0x40003000 C   FIELD 02w01 URS: URS
0x40003000 C   FIELD 03w01 OPM: OPM
0x40003000 C   FIELD 04w01 DIR: DIR
0x40003000 C   FIELD 05w02 CMS: CMS
0x40003000 C   FIELD 07w01 ARPE: ARPE
0x40003000 C   FIELD 08w02 CKD: CKD
0x40003000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x40003004 B  REGISTER TIM5_CR2 (rw): TIM5 control register 2
0x40003004 C   FIELD 00w01 CCPC: CCPC
0x40003004 C   FIELD 02w01 CCUS: CCUS
0x40003004 C   FIELD 03w01 CCDS: CCDS
0x40003004 C   FIELD 04w03 MMS: MMS
0x40003004 C   FIELD 07w01 TI1S: TI1S
0x40003004 C   FIELD 08w01 OIS1: OIS1
0x40003004 C   FIELD 09w01 OIS1N: OIS1N
0x40003004 C   FIELD 10w01 OIS2: OIS2
0x40003004 C   FIELD 11w01 OIS2N: OIS2N
0x40003004 C   FIELD 12w01 OIS3: OIS3
0x40003004 C   FIELD 13w01 OIS3N: OIS3N
0x40003004 C   FIELD 14w01 OIS4: OIS4
0x40003004 C   FIELD 16w01 OIS5: OIS5
0x40003004 C   FIELD 18w01 OIS6: OIS6
0x40003004 C   FIELD 20w04 MMS2: MMS2
0x40003008 B  REGISTER TIM5_SMCR (rw): TIM5 slave mode control register
0x40003008 C   FIELD 00w03 SMS: SMS
0x40003008 C   FIELD 04w03 TS: TS
0x40003008 C   FIELD 07w01 MSM: MSM
0x40003008 C   FIELD 08w04 ETF: ETF
0x40003008 C   FIELD 12w02 ETPS: ETPS
0x40003008 C   FIELD 14w01 ECE: ECE
0x40003008 C   FIELD 15w01 ETP: ETP
0x40003008 C   FIELD 16w01 SMS3: SMS3
0x40003008 C   FIELD 20w01 TS3: TS3
0x40003008 C   FIELD 21w01 TS4: TS4
0x4000300C B  REGISTER TIM5_DIER (rw): TIM5 DMA/interrupt enable register
0x4000300C C   FIELD 00w01 UIE: UIE
0x4000300C C   FIELD 01w01 CC1IE: CC1IE
0x4000300C C   FIELD 02w01 CC2IE: CC2IE
0x4000300C C   FIELD 03w01 CC3IE: CC3IE
0x4000300C C   FIELD 04w01 CC4IE: CC4IE
0x4000300C C   FIELD 05w01 COMIE: COMIE
0x4000300C C   FIELD 06w01 TIE: TIE
0x4000300C C   FIELD 07w01 BIE: BIE
0x4000300C C   FIELD 08w01 UDE: UDE
0x4000300C C   FIELD 09w01 CC1DE: CC1DE
0x4000300C C   FIELD 10w01 CC2DE: CC2DE
0x4000300C C   FIELD 11w01 CC3DE: CC3DE
0x4000300C C   FIELD 12w01 CC4DE: CC4DE
0x4000300C C   FIELD 13w01 COMDE: COMDE
0x4000300C C   FIELD 14w01 TDE: TDE
0x40003010 B  REGISTER TIM5_SR (rw): TIM5 status register
0x40003010 C   FIELD 00w01 UIF: UIF
0x40003010 C   FIELD 01w01 CC1IF: CC1IF
0x40003010 C   FIELD 02w01 CC2IF: CC2IF
0x40003010 C   FIELD 03w01 CC3IF: CC3IF
0x40003010 C   FIELD 04w01 CC4IF: CC4IF
0x40003010 C   FIELD 05w01 COMIF: COMIF
0x40003010 C   FIELD 06w01 TIF: TIF
0x40003010 C   FIELD 07w01 BIF: BIF
0x40003010 C   FIELD 08w01 B2IF: B2IF
0x40003010 C   FIELD 09w01 CC1OF: CC1OF
0x40003010 C   FIELD 10w01 CC2OF: CC2OF
0x40003010 C   FIELD 11w01 CC3OF: CC3OF
0x40003010 C   FIELD 12w01 CC4OF: CC4OF
0x40003010 C   FIELD 13w01 SBIF: SBIF
0x40003010 C   FIELD 16w01 CC5IF: CC5IF
0x40003010 C   FIELD 17w01 CC6IF: CC6IF
0x40003014 B  REGISTER TIM5_EGR (wo): TIM5 event generation register
0x40003014 C   FIELD 00w01 UG: UG
0x40003014 C   FIELD 01w01 CC1G: CC1G
0x40003014 C   FIELD 02w01 CC2G: CC2G
0x40003014 C   FIELD 03w01 CC3G: CC3G
0x40003014 C   FIELD 04w01 CC4G: CC4G
0x40003014 C   FIELD 05w01 COMG: COMG
0x40003014 C   FIELD 06w01 TG: TG
0x40003014 C   FIELD 07w01 BG: BG
0x40003014 C   FIELD 08w01 B2G: B2G
0x40003018 B  REGISTER TIM5_CCMR1ALTERNATE5 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x40003018 C   FIELD 00w02 CC1S: CC1S
0x40003018 C   FIELD 02w02 IC1PSC: IC1PSC
0x40003018 C   FIELD 04w04 IC1F: IC1F
0x40003018 C   FIELD 08w02 CC2S: CC2S
0x40003018 C   FIELD 10w02 IC2PSC: IC2PSC
0x40003018 C   FIELD 12w04 IC2F: IC2F
0x4000301C B  REGISTER TIM5_CCMR2ALTERNATE21 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x4000301C C   FIELD 00w02 CC3S: CC3S
0x4000301C C   FIELD 02w02 IC3PSC: IC3PSC
0x4000301C C   FIELD 04w04 IC3F: IC3F
0x4000301C C   FIELD 08w02 CC4S: CC4S
0x4000301C C   FIELD 10w02 IC4PSC: IC4PSC
0x4000301C C   FIELD 12w04 IC4F: IC4F
0x40003020 B  REGISTER TIM5_CCER (rw): TIM5 capture/compare enable register
0x40003020 C   FIELD 00w01 CC1E: CC1E
0x40003020 C   FIELD 01w01 CC1P: CC1P
0x40003020 C   FIELD 02w01 CC1NE: CC1NE
0x40003020 C   FIELD 03w01 CC1NP: CC1NP
0x40003020 C   FIELD 04w01 CC2E: CC2E
0x40003020 C   FIELD 05w01 CC2P: CC2P
0x40003020 C   FIELD 06w01 CC2NE: CC2NE
0x40003020 C   FIELD 07w01 CC2NP: CC2NP
0x40003020 C   FIELD 08w01 CC3E: CC3E
0x40003020 C   FIELD 09w01 CC3P: CC3P
0x40003020 C   FIELD 10w01 CC3NE: CC3NE
0x40003020 C   FIELD 11w01 CC3NP: CC3NP
0x40003020 C   FIELD 12w01 CC4E: CC4E
0x40003020 C   FIELD 13w01 CC4P: CC4P
0x40003020 C   FIELD 15w01 CC4NP: CC4NP
0x40003020 C   FIELD 16w01 CC5E: CC5E
0x40003020 C   FIELD 17w01 CC5P: CC5P
0x40003020 C   FIELD 20w01 CC6E: CC6E
0x40003020 C   FIELD 21w01 CC6P: CC6P
0x40003024 B  REGISTER TIM5_CNT: TIM5 counter
0x40003024 C   FIELD 00w16 CNT (rw): CNT
0x40003024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x40003028 B  REGISTER TIM5_PSC (rw): TIM5 prescaler
0x40003028 C   FIELD 00w16 PSC: PSC
0x4000302C B  REGISTER TIM5_ARR (rw): TIM5 auto-reload register
0x4000302C C   FIELD 00w16 ARR: ARR
0x40003030 B  REGISTER TIM5_RCR (rw): TIM5 repetition counter register
0x40003030 C   FIELD 00w16 REP: REP
0x40003034 B  REGISTER TIM5_CCR1 (rw): TIM5 capture/compare register 1
0x40003034 C   FIELD 00w16 CCR1: CCR1
0x40003038 B  REGISTER TIM5_CCR2 (rw): TIM5 capture/compare register 2
0x40003038 C   FIELD 00w16 CCR2: CCR2
0x4000303C B  REGISTER TIM5_CCR3 (rw): TIM5 capture/compare register 3
0x4000303C C   FIELD 00w16 CCR3: CCR3
0x40003040 B  REGISTER TIM5_CCR4 (rw): TIM5 capture/compare register 4
0x40003040 C   FIELD 00w16 CCR4: CCR4
0x40003044 B  REGISTER TIM5_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x40003044 C   FIELD 00w08 DTG: DTG
0x40003044 C   FIELD 08w02 LOCK: LOCK
0x40003044 C   FIELD 10w01 OSSI: OSSI
0x40003044 C   FIELD 11w01 OSSR: OSSR
0x40003044 C   FIELD 12w01 BKE: BKE
0x40003044 C   FIELD 13w01 BKP: BKP
0x40003044 C   FIELD 14w01 AOE: AOE
0x40003044 C   FIELD 15w01 MOE: MOE
0x40003044 C   FIELD 16w04 BKF: BKF
0x40003044 C   FIELD 20w04 BK2F: BK2F
0x40003044 C   FIELD 24w01 BK2E: BK2E
0x40003044 C   FIELD 25w01 BK2P: BK2P
0x40003044 C   FIELD 26w01 BKDSRM: BKDSRM
0x40003044 C   FIELD 27w01 BK2DSRM: BK2DSRM
0x40003044 C   FIELD 28w01 BKBID: BKBID
0x40003044 C   FIELD 29w01 BK2BID: BK2BID
0x40003048 B  REGISTER TIM5_DCR (rw): TIM5 DMA control register
0x40003048 C   FIELD 00w05 DBA: DBA
0x40003048 C   FIELD 08w05 DBL: DBL
0x4000304C B  REGISTER TIM5_DMAR (rw): TIM5 DMA address for full transfer
0x4000304C C   FIELD 00w32 DMAB: DMAB
0x40003054 B  REGISTER TIM5_CCMR3 (rw): The channels 5 and 6 can only be configured in output. Output compare mode:
0x40003054 C   FIELD 02w01 OC5FE: OC5FE
0x40003054 C   FIELD 03w01 OC5PE: OC5PE
0x40003054 C   FIELD 04w03 OC5M: OC5M
0x40003054 C   FIELD 07w01 OC5CE: OC5CE
0x40003054 C   FIELD 10w01 OC6FE: OC6FE
0x40003054 C   FIELD 11w01 OC6PE: OC6PE
0x40003054 C   FIELD 12w03 OC6M: OC6M
0x40003054 C   FIELD 15w01 OC6CE: OC6CE
0x40003054 C   FIELD 16w01 OC5M3: OC5M3
0x40003054 C   FIELD 24w01 OC6M3: OC6M3
0x40003058 B  REGISTER TIM5_CCR5 (rw): TIM5 capture/compare register 5
0x40003058 C   FIELD 00w16 CCR5: CCR5
0x40003058 C   FIELD 29w01 GC5C1: GC5C1
0x40003058 C   FIELD 30w01 GC5C2: GC5C2
0x40003058 C   FIELD 31w01 GC5C3: GC5C3
0x4000305C B  REGISTER TIM5_CCR6 (rw): TIM5 capture/compare register 6
0x4000305C C   FIELD 00w16 CCR6: CCR6
0x40004000 A PERIPHERAL TIM6
0x40004000 B  REGISTER TIM6_CR1 (rw): TIM6 control register 1
0x40004000 C   FIELD 00w01 CEN: CEN
0x40004000 C   FIELD 01w01 UDIS: UDIS
0x40004000 C   FIELD 02w01 URS: URS
0x40004000 C   FIELD 03w01 OPM: OPM
0x40004000 C   FIELD 04w01 DIR: DIR
0x40004000 C   FIELD 05w02 CMS: CMS
0x40004000 C   FIELD 07w01 ARPE: ARPE
0x40004000 C   FIELD 08w02 CKD: CKD
0x40004000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x40004004 B  REGISTER TIM6_CR2 (rw): TIM6 control register 2
0x40004004 C   FIELD 00w01 CCPC: CCPC
0x40004004 C   FIELD 02w01 CCUS: CCUS
0x40004004 C   FIELD 03w01 CCDS: CCDS
0x40004004 C   FIELD 04w03 MMS: MMS
0x40004004 C   FIELD 07w01 TI1S: TI1S
0x40004004 C   FIELD 08w01 OIS1: OIS1
0x40004004 C   FIELD 09w01 OIS1N: OIS1N
0x40004004 C   FIELD 10w01 OIS2: OIS2
0x40004004 C   FIELD 11w01 OIS2N: OIS2N
0x40004004 C   FIELD 12w01 OIS3: OIS3
0x40004004 C   FIELD 13w01 OIS3N: OIS3N
0x40004004 C   FIELD 14w01 OIS4: OIS4
0x40004004 C   FIELD 16w01 OIS5: OIS5
0x40004004 C   FIELD 18w01 OIS6: OIS6
0x40004004 C   FIELD 20w04 MMS2: MMS2
0x40004008 B  REGISTER TIM6_SMCR (rw): TIM6 slave mode control register
0x40004008 C   FIELD 00w03 SMS: SMS
0x40004008 C   FIELD 04w03 TS: TS
0x40004008 C   FIELD 07w01 MSM: MSM
0x40004008 C   FIELD 08w04 ETF: ETF
0x40004008 C   FIELD 12w02 ETPS: ETPS
0x40004008 C   FIELD 14w01 ECE: ECE
0x40004008 C   FIELD 15w01 ETP: ETP
0x40004008 C   FIELD 16w01 SMS3: SMS3
0x40004008 C   FIELD 20w01 TS3: TS3
0x40004008 C   FIELD 21w01 TS4: TS4
0x4000400C B  REGISTER TIM6_DIER (rw): TIM6 DMA/interrupt enable register
0x4000400C C   FIELD 00w01 UIE: UIE
0x4000400C C   FIELD 01w01 CC1IE: CC1IE
0x4000400C C   FIELD 02w01 CC2IE: CC2IE
0x4000400C C   FIELD 03w01 CC3IE: CC3IE
0x4000400C C   FIELD 04w01 CC4IE: CC4IE
0x4000400C C   FIELD 05w01 COMIE: COMIE
0x4000400C C   FIELD 06w01 TIE: TIE
0x4000400C C   FIELD 07w01 BIE: BIE
0x4000400C C   FIELD 08w01 UDE: UDE
0x4000400C C   FIELD 09w01 CC1DE: CC1DE
0x4000400C C   FIELD 10w01 CC2DE: CC2DE
0x4000400C C   FIELD 11w01 CC3DE: CC3DE
0x4000400C C   FIELD 12w01 CC4DE: CC4DE
0x4000400C C   FIELD 13w01 COMDE: COMDE
0x4000400C C   FIELD 14w01 TDE: TDE
0x40004010 B  REGISTER TIM6_SR (rw): TIM6 status register
0x40004010 C   FIELD 00w01 UIF: UIF
0x40004010 C   FIELD 01w01 CC1IF: CC1IF
0x40004010 C   FIELD 02w01 CC2IF: CC2IF
0x40004010 C   FIELD 03w01 CC3IF: CC3IF
0x40004010 C   FIELD 04w01 CC4IF: CC4IF
0x40004010 C   FIELD 05w01 COMIF: COMIF
0x40004010 C   FIELD 06w01 TIF: TIF
0x40004010 C   FIELD 07w01 BIF: BIF
0x40004010 C   FIELD 08w01 B2IF: B2IF
0x40004010 C   FIELD 09w01 CC1OF: CC1OF
0x40004010 C   FIELD 10w01 CC2OF: CC2OF
0x40004010 C   FIELD 11w01 CC3OF: CC3OF
0x40004010 C   FIELD 12w01 CC4OF: CC4OF
0x40004010 C   FIELD 13w01 SBIF: SBIF
0x40004010 C   FIELD 16w01 CC5IF: CC5IF
0x40004010 C   FIELD 17w01 CC6IF: CC6IF
0x40004014 B  REGISTER TIM6_EGR (wo): TIM6 event generation register
0x40004014 C   FIELD 00w01 UG: UG
0x40004014 C   FIELD 01w01 CC1G: CC1G
0x40004014 C   FIELD 02w01 CC2G: CC2G
0x40004014 C   FIELD 03w01 CC3G: CC3G
0x40004014 C   FIELD 04w01 CC4G: CC4G
0x40004014 C   FIELD 05w01 COMG: COMG
0x40004014 C   FIELD 06w01 TG: TG
0x40004014 C   FIELD 07w01 BG: BG
0x40004014 C   FIELD 08w01 B2G: B2G
0x40004018 B  REGISTER TIM6_CCMR1ALTERNATE6 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x40004018 C   FIELD 00w02 CC1S: CC1S
0x40004018 C   FIELD 02w02 IC1PSC: IC1PSC
0x40004018 C   FIELD 04w04 IC1F: IC1F
0x40004018 C   FIELD 08w02 CC2S: CC2S
0x40004018 C   FIELD 10w02 IC2PSC: IC2PSC
0x40004018 C   FIELD 12w04 IC2F: IC2F
0x4000401C B  REGISTER TIM6_CCMR2ALTERNATE22 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x4000401C C   FIELD 00w02 CC3S: CC3S
0x4000401C C   FIELD 02w02 IC3PSC: IC3PSC
0x4000401C C   FIELD 04w04 IC3F: IC3F
0x4000401C C   FIELD 08w02 CC4S: CC4S
0x4000401C C   FIELD 10w02 IC4PSC: IC4PSC
0x4000401C C   FIELD 12w04 IC4F: IC4F
0x40004020 B  REGISTER TIM6_CCER (rw): TIM6 capture/compare enable register
0x40004020 C   FIELD 00w01 CC1E: CC1E
0x40004020 C   FIELD 01w01 CC1P: CC1P
0x40004020 C   FIELD 02w01 CC1NE: CC1NE
0x40004020 C   FIELD 03w01 CC1NP: CC1NP
0x40004020 C   FIELD 04w01 CC2E: CC2E
0x40004020 C   FIELD 05w01 CC2P: CC2P
0x40004020 C   FIELD 06w01 CC2NE: CC2NE
0x40004020 C   FIELD 07w01 CC2NP: CC2NP
0x40004020 C   FIELD 08w01 CC3E: CC3E
0x40004020 C   FIELD 09w01 CC3P: CC3P
0x40004020 C   FIELD 10w01 CC3NE: CC3NE
0x40004020 C   FIELD 11w01 CC3NP: CC3NP
0x40004020 C   FIELD 12w01 CC4E: CC4E
0x40004020 C   FIELD 13w01 CC4P: CC4P
0x40004020 C   FIELD 15w01 CC4NP: CC4NP
0x40004020 C   FIELD 16w01 CC5E: CC5E
0x40004020 C   FIELD 17w01 CC5P: CC5P
0x40004020 C   FIELD 20w01 CC6E: CC6E
0x40004020 C   FIELD 21w01 CC6P: CC6P
0x40004024 B  REGISTER TIM6_CNT: TIM6 counter
0x40004024 C   FIELD 00w16 CNT (rw): CNT
0x40004024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x40004028 B  REGISTER TIM6_PSC (rw): TIM6 prescaler
0x40004028 C   FIELD 00w16 PSC: PSC
0x4000402C B  REGISTER TIM6_ARR (rw): TIM6 auto-reload register
0x4000402C C   FIELD 00w16 ARR: ARR
0x40004030 B  REGISTER TIM6_RCR (rw): TIM6 repetition counter register
0x40004030 C   FIELD 00w16 REP: REP
0x40004034 B  REGISTER TIM6_CCR1 (rw): TIM6 capture/compare register 1
0x40004034 C   FIELD 00w16 CCR1: CCR1
0x40004038 B  REGISTER TIM6_CCR2 (rw): TIM6 capture/compare register 2
0x40004038 C   FIELD 00w16 CCR2: CCR2
0x4000403C B  REGISTER TIM6_CCR3 (rw): TIM6 capture/compare register 3
0x4000403C C   FIELD 00w16 CCR3: CCR3
0x40004040 B  REGISTER TIM6_CCR4 (rw): TIM6 capture/compare register 4
0x40004040 C   FIELD 00w16 CCR4: CCR4
0x40004044 B  REGISTER TIM6_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x40004044 C   FIELD 00w08 DTG: DTG
0x40004044 C   FIELD 08w02 LOCK: LOCK
0x40004044 C   FIELD 10w01 OSSI: OSSI
0x40004044 C   FIELD 11w01 OSSR: OSSR
0x40004044 C   FIELD 12w01 BKE: BKE
0x40004044 C   FIELD 13w01 BKP: BKP
0x40004044 C   FIELD 14w01 AOE: AOE
0x40004044 C   FIELD 15w01 MOE: MOE
0x40004044 C   FIELD 16w04 BKF: BKF
0x40004044 C   FIELD 20w04 BK2F: BK2F
0x40004044 C   FIELD 24w01 BK2E: BK2E
0x40004044 C   FIELD 25w01 BK2P: BK2P
0x40004044 C   FIELD 26w01 BKDSRM: BKDSRM
0x40004044 C   FIELD 27w01 BK2DSRM: BK2DSRM
0x40004044 C   FIELD 28w01 BKBID: BKBID
0x40004044 C   FIELD 29w01 BK2BID: BK2BID
0x40004048 B  REGISTER TIM6_DCR (rw): TIM6 DMA control register
0x40004048 C   FIELD 00w05 DBA: DBA
0x40004048 C   FIELD 08w05 DBL: DBL
0x4000404C B  REGISTER TIM6_DMAR (rw): TIM6 DMA address for full transfer
0x4000404C C   FIELD 00w32 DMAB: DMAB
0x40004054 B  REGISTER TIM6_CCMR3 (rw): The channels 5 and 6 can only be configured in output. Output compare mode:
0x40004054 C   FIELD 02w01 OC5FE: OC5FE
0x40004054 C   FIELD 03w01 OC5PE: OC5PE
0x40004054 C   FIELD 04w03 OC5M: OC5M
0x40004054 C   FIELD 07w01 OC5CE: OC5CE
0x40004054 C   FIELD 10w01 OC6FE: OC6FE
0x40004054 C   FIELD 11w01 OC6PE: OC6PE
0x40004054 C   FIELD 12w03 OC6M: OC6M
0x40004054 C   FIELD 15w01 OC6CE: OC6CE
0x40004054 C   FIELD 16w01 OC5M3: OC5M3
0x40004054 C   FIELD 24w01 OC6M3: OC6M3
0x40004058 B  REGISTER TIM6_CCR5 (rw): TIM6 capture/compare register 5
0x40004058 C   FIELD 00w16 CCR5: CCR5
0x40004058 C   FIELD 29w01 GC5C1: GC5C1
0x40004058 C   FIELD 30w01 GC5C2: GC5C2
0x40004058 C   FIELD 31w01 GC5C3: GC5C3
0x4000405C B  REGISTER TIM6_CCR6 (rw): TIM6 capture/compare register 6
0x4000405C C   FIELD 00w16 CCR6: CCR6
0x40005000 A PERIPHERAL TIM7
0x40005000 B  REGISTER TIM7_CR1 (rw): TIM7 control register 1
0x40005000 C   FIELD 00w01 CEN: CEN
0x40005000 C   FIELD 01w01 UDIS: UDIS
0x40005000 C   FIELD 02w01 URS: URS
0x40005000 C   FIELD 03w01 OPM: OPM
0x40005000 C   FIELD 04w01 DIR: DIR
0x40005000 C   FIELD 05w02 CMS: CMS
0x40005000 C   FIELD 07w01 ARPE: ARPE
0x40005000 C   FIELD 08w02 CKD: CKD
0x40005000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x40005004 B  REGISTER TIM7_CR2 (rw): TIM7 control register 2
0x40005004 C   FIELD 00w01 CCPC: CCPC
0x40005004 C   FIELD 02w01 CCUS: CCUS
0x40005004 C   FIELD 03w01 CCDS: CCDS
0x40005004 C   FIELD 04w03 MMS: MMS
0x40005004 C   FIELD 07w01 TI1S: TI1S
0x40005004 C   FIELD 08w01 OIS1: OIS1
0x40005004 C   FIELD 09w01 OIS1N: OIS1N
0x40005004 C   FIELD 10w01 OIS2: OIS2
0x40005004 C   FIELD 11w01 OIS2N: OIS2N
0x40005004 C   FIELD 12w01 OIS3: OIS3
0x40005004 C   FIELD 13w01 OIS3N: OIS3N
0x40005004 C   FIELD 14w01 OIS4: OIS4
0x40005004 C   FIELD 16w01 OIS5: OIS5
0x40005004 C   FIELD 18w01 OIS6: OIS6
0x40005004 C   FIELD 20w04 MMS2: MMS2
0x40005008 B  REGISTER TIM7_SMCR (rw): TIM7 slave mode control register
0x40005008 C   FIELD 00w03 SMS: SMS
0x40005008 C   FIELD 04w03 TS: TS
0x40005008 C   FIELD 07w01 MSM: MSM
0x40005008 C   FIELD 08w04 ETF: ETF
0x40005008 C   FIELD 12w02 ETPS: ETPS
0x40005008 C   FIELD 14w01 ECE: ECE
0x40005008 C   FIELD 15w01 ETP: ETP
0x40005008 C   FIELD 16w01 SMS3: SMS3
0x40005008 C   FIELD 20w01 TS3: TS3
0x40005008 C   FIELD 21w01 TS4: TS4
0x4000500C B  REGISTER TIM7_DIER (rw): TIM7 DMA/interrupt enable register
0x4000500C C   FIELD 00w01 UIE: UIE
0x4000500C C   FIELD 01w01 CC1IE: CC1IE
0x4000500C C   FIELD 02w01 CC2IE: CC2IE
0x4000500C C   FIELD 03w01 CC3IE: CC3IE
0x4000500C C   FIELD 04w01 CC4IE: CC4IE
0x4000500C C   FIELD 05w01 COMIE: COMIE
0x4000500C C   FIELD 06w01 TIE: TIE
0x4000500C C   FIELD 07w01 BIE: BIE
0x4000500C C   FIELD 08w01 UDE: UDE
0x4000500C C   FIELD 09w01 CC1DE: CC1DE
0x4000500C C   FIELD 10w01 CC2DE: CC2DE
0x4000500C C   FIELD 11w01 CC3DE: CC3DE
0x4000500C C   FIELD 12w01 CC4DE: CC4DE
0x4000500C C   FIELD 13w01 COMDE: COMDE
0x4000500C C   FIELD 14w01 TDE: TDE
0x40005010 B  REGISTER TIM7_SR (rw): TIM7 status register
0x40005010 C   FIELD 00w01 UIF: UIF
0x40005010 C   FIELD 01w01 CC1IF: CC1IF
0x40005010 C   FIELD 02w01 CC2IF: CC2IF
0x40005010 C   FIELD 03w01 CC3IF: CC3IF
0x40005010 C   FIELD 04w01 CC4IF: CC4IF
0x40005010 C   FIELD 05w01 COMIF: COMIF
0x40005010 C   FIELD 06w01 TIF: TIF
0x40005010 C   FIELD 07w01 BIF: BIF
0x40005010 C   FIELD 08w01 B2IF: B2IF
0x40005010 C   FIELD 09w01 CC1OF: CC1OF
0x40005010 C   FIELD 10w01 CC2OF: CC2OF
0x40005010 C   FIELD 11w01 CC3OF: CC3OF
0x40005010 C   FIELD 12w01 CC4OF: CC4OF
0x40005010 C   FIELD 13w01 SBIF: SBIF
0x40005010 C   FIELD 16w01 CC5IF: CC5IF
0x40005010 C   FIELD 17w01 CC6IF: CC6IF
0x40005014 B  REGISTER TIM7_EGR (wo): TIM7 event generation register
0x40005014 C   FIELD 00w01 UG: UG
0x40005014 C   FIELD 01w01 CC1G: CC1G
0x40005014 C   FIELD 02w01 CC2G: CC2G
0x40005014 C   FIELD 03w01 CC3G: CC3G
0x40005014 C   FIELD 04w01 CC4G: CC4G
0x40005014 C   FIELD 05w01 COMG: COMG
0x40005014 C   FIELD 06w01 TG: TG
0x40005014 C   FIELD 07w01 BG: BG
0x40005014 C   FIELD 08w01 B2G: B2G
0x40005018 B  REGISTER TIM7_CCMR1ALTERNATE7 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x40005018 C   FIELD 00w02 CC1S: CC1S
0x40005018 C   FIELD 02w02 IC1PSC: IC1PSC
0x40005018 C   FIELD 04w04 IC1F: IC1F
0x40005018 C   FIELD 08w02 CC2S: CC2S
0x40005018 C   FIELD 10w02 IC2PSC: IC2PSC
0x40005018 C   FIELD 12w04 IC2F: IC2F
0x4000501C B  REGISTER TIM7_CCMR2ALTERNATE23 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x4000501C C   FIELD 00w02 CC3S: CC3S
0x4000501C C   FIELD 02w02 IC3PSC: IC3PSC
0x4000501C C   FIELD 04w04 IC3F: IC3F
0x4000501C C   FIELD 08w02 CC4S: CC4S
0x4000501C C   FIELD 10w02 IC4PSC: IC4PSC
0x4000501C C   FIELD 12w04 IC4F: IC4F
0x40005020 B  REGISTER TIM7_CCER (rw): TIM7 capture/compare enable register
0x40005020 C   FIELD 00w01 CC1E: CC1E
0x40005020 C   FIELD 01w01 CC1P: CC1P
0x40005020 C   FIELD 02w01 CC1NE: CC1NE
0x40005020 C   FIELD 03w01 CC1NP: CC1NP
0x40005020 C   FIELD 04w01 CC2E: CC2E
0x40005020 C   FIELD 05w01 CC2P: CC2P
0x40005020 C   FIELD 06w01 CC2NE: CC2NE
0x40005020 C   FIELD 07w01 CC2NP: CC2NP
0x40005020 C   FIELD 08w01 CC3E: CC3E
0x40005020 C   FIELD 09w01 CC3P: CC3P
0x40005020 C   FIELD 10w01 CC3NE: CC3NE
0x40005020 C   FIELD 11w01 CC3NP: CC3NP
0x40005020 C   FIELD 12w01 CC4E: CC4E
0x40005020 C   FIELD 13w01 CC4P: CC4P
0x40005020 C   FIELD 15w01 CC4NP: CC4NP
0x40005020 C   FIELD 16w01 CC5E: CC5E
0x40005020 C   FIELD 17w01 CC5P: CC5P
0x40005020 C   FIELD 20w01 CC6E: CC6E
0x40005020 C   FIELD 21w01 CC6P: CC6P
0x40005024 B  REGISTER TIM7_CNT: TIM7 counter
0x40005024 C   FIELD 00w16 CNT (rw): CNT
0x40005024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x40005028 B  REGISTER TIM7_PSC (rw): TIM7 prescaler
0x40005028 C   FIELD 00w16 PSC: PSC
0x4000502C B  REGISTER TIM7_ARR (rw): TIM7 auto-reload register
0x4000502C C   FIELD 00w16 ARR: ARR
0x40005030 B  REGISTER TIM7_RCR (rw): TIM7 repetition counter register
0x40005030 C   FIELD 00w16 REP: REP
0x40005034 B  REGISTER TIM7_CCR1 (rw): TIM7 capture/compare register 1
0x40005034 C   FIELD 00w16 CCR1: CCR1
0x40005038 B  REGISTER TIM7_CCR2 (rw): TIM7 capture/compare register 2
0x40005038 C   FIELD 00w16 CCR2: CCR2
0x4000503C B  REGISTER TIM7_CCR3 (rw): TIM7 capture/compare register 3
0x4000503C C   FIELD 00w16 CCR3: CCR3
0x40005040 B  REGISTER TIM7_CCR4 (rw): TIM7 capture/compare register 4
0x40005040 C   FIELD 00w16 CCR4: CCR4
0x40005044 B  REGISTER TIM7_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x40005044 C   FIELD 00w08 DTG: DTG
0x40005044 C   FIELD 08w02 LOCK: LOCK
0x40005044 C   FIELD 10w01 OSSI: OSSI
0x40005044 C   FIELD 11w01 OSSR: OSSR
0x40005044 C   FIELD 12w01 BKE: BKE
0x40005044 C   FIELD 13w01 BKP: BKP
0x40005044 C   FIELD 14w01 AOE: AOE
0x40005044 C   FIELD 15w01 MOE: MOE
0x40005044 C   FIELD 16w04 BKF: BKF
0x40005044 C   FIELD 20w04 BK2F: BK2F
0x40005044 C   FIELD 24w01 BK2E: BK2E
0x40005044 C   FIELD 25w01 BK2P: BK2P
0x40005044 C   FIELD 26w01 BKDSRM: BKDSRM
0x40005044 C   FIELD 27w01 BK2DSRM: BK2DSRM
0x40005044 C   FIELD 28w01 BKBID: BKBID
0x40005044 C   FIELD 29w01 BK2BID: BK2BID
0x40005048 B  REGISTER TIM7_DCR (rw): TIM7 DMA control register
0x40005048 C   FIELD 00w05 DBA: DBA
0x40005048 C   FIELD 08w05 DBL: DBL
0x4000504C B  REGISTER TIM7_DMAR (rw): TIM7 DMA address for full transfer
0x4000504C C   FIELD 00w32 DMAB: DMAB
0x40005054 B  REGISTER TIM7_CCMR3 (rw): The channels 5 and 6 can only be configured in output. Output compare mode:
0x40005054 C   FIELD 02w01 OC5FE: OC5FE
0x40005054 C   FIELD 03w01 OC5PE: OC5PE
0x40005054 C   FIELD 04w03 OC5M: OC5M
0x40005054 C   FIELD 07w01 OC5CE: OC5CE
0x40005054 C   FIELD 10w01 OC6FE: OC6FE
0x40005054 C   FIELD 11w01 OC6PE: OC6PE
0x40005054 C   FIELD 12w03 OC6M: OC6M
0x40005054 C   FIELD 15w01 OC6CE: OC6CE
0x40005054 C   FIELD 16w01 OC5M3: OC5M3
0x40005054 C   FIELD 24w01 OC6M3: OC6M3
0x40005058 B  REGISTER TIM7_CCR5 (rw): TIM7 capture/compare register 5
0x40005058 C   FIELD 00w16 CCR5: CCR5
0x40005058 C   FIELD 29w01 GC5C1: GC5C1
0x40005058 C   FIELD 30w01 GC5C2: GC5C2
0x40005058 C   FIELD 31w01 GC5C3: GC5C3
0x4000505C B  REGISTER TIM7_CCR6 (rw): TIM7 capture/compare register 6
0x4000505C C   FIELD 00w16 CCR6: CCR6
0x40006000 A PERIPHERAL TIM12
0x40006000 B  REGISTER TIM12_CR1 (rw): TIM12 control register 1
0x40006000 C   FIELD 00w01 CEN: CEN
0x40006000 C   FIELD 01w01 UDIS: UDIS
0x40006000 C   FIELD 02w01 URS: URS
0x40006000 C   FIELD 03w01 OPM: OPM
0x40006000 C   FIELD 07w01 ARPE: ARPE
0x40006000 C   FIELD 08w02 CKD: CKD
0x40006000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x40006004 B  REGISTER TIM12_CR2 (rw): TIM12 control register 2
0x40006004 C   FIELD 04w03 MMS: MMS
0x40006004 C   FIELD 07w01 TI1S: TI1S
0x40006008 B  REGISTER TIM12_SMCR (rw): TIM12 slave mode control register
0x40006008 C   FIELD 00w03 SMS: SMS
0x40006008 C   FIELD 04w03 TS: TS
0x40006008 C   FIELD 07w01 MSM: MSM
0x40006008 C   FIELD 16w01 SMS_3: SMS_3
0x40006008 C   FIELD 20w01 TS_3: TS_3
0x40006008 C   FIELD 21w01 TS_4: TS_4
0x4000600C B  REGISTER TIM12_DIER (rw): TIM12 interrupt enable register
0x4000600C C   FIELD 00w01 UIE: UIE
0x4000600C C   FIELD 01w01 CC1IE: CC1IE
0x4000600C C   FIELD 02w01 CC2IE: CC2IE
0x4000600C C   FIELD 06w01 TIE: TIE
0x40006010 B  REGISTER TIM12_SR (rw): TIM12 status register
0x40006010 C   FIELD 00w01 UIF: UIF
0x40006010 C   FIELD 01w01 CC1IF: CC1IF
0x40006010 C   FIELD 02w01 CC2IF: CC2IF
0x40006010 C   FIELD 06w01 TIF: TIF
0x40006010 C   FIELD 09w01 CC1OF: CC1OF
0x40006010 C   FIELD 10w01 CC2OF: CC2OF
0x40006014 B  REGISTER TIM12_EGR (wo): TIM12 event generation register
0x40006014 C   FIELD 00w01 UG: UG
0x40006014 C   FIELD 01w01 CC1G: CC1G
0x40006014 C   FIELD 02w01 CC2G: CC2G
0x40006014 C   FIELD 06w01 TG: TG
0x40006018 B  REGISTER TIM12_CCMR1_input (rw): TIM12 capture/compare mode register 1
0x40006018 B  REGISTER TIM12_CCMR1_output (rw): TIM12 capture/compare mode register 1
0x40006018 C   FIELD 00w02 CC1S: CC1S
0x40006018 C   FIELD 00w02 CC1S: CC1S
0x40006018 C   FIELD 02w01 OC1FE: OC1FE
0x40006018 C   FIELD 02w02 IC1PSC: IC1PSC
0x40006018 C   FIELD 03w01 OC1PE: OC1FE
0x40006018 C   FIELD 04w03 OC1M: OC1M
0x40006018 C   FIELD 04w04 IC1F: IC1F
0x40006018 C   FIELD 08w02 CC2S: CC2S
0x40006018 C   FIELD 08w02 CC2S: CC2S
0x40006018 C   FIELD 10w01 OC2FE: OC2FE
0x40006018 C   FIELD 10w02 IC2PSC: IC2PSC
0x40006018 C   FIELD 11w01 OC2PE: OC2PE
0x40006018 C   FIELD 12w03 OC2M: OC2M
0x40006018 C   FIELD 12w04 IC2F: IC2F
0x40006018 C   FIELD 16w01 OC1M_3: OC1M_3
0x40006018 C   FIELD 24w01 OC2M_3: OC2M_3
0x40006020 B  REGISTER TIM12_CCER (rw): TIM12 capture/compare enable register
0x40006020 C   FIELD 00w01 CC1E: CC1E
0x40006020 C   FIELD 01w01 CC1P: CC1P
0x40006020 C   FIELD 03w01 CC1NP: CC1NP
0x40006020 C   FIELD 04w01 CC2E: CC2E
0x40006020 C   FIELD 05w01 CC2P: CC2P
0x40006020 C   FIELD 07w01 CC2NP: CC2NP
0x40006024 B  REGISTER TIM12_CNT: TIM12 counter
0x40006024 C   FIELD 00w16 CNT (rw): CNT
0x40006024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x40006028 B  REGISTER TIM12_PSC (rw): TIM12 prescaler
0x40006028 C   FIELD 00w16 PSC: PSC
0x4000602C B  REGISTER TIM12_ARR (rw): TIM12 auto-reload register
0x4000602C C   FIELD 00w16 ARR: ARR
0x40006034 B  REGISTER TIM12_CCR1 (rw): TIM12 capture/compare register 1
0x40006034 C   FIELD 00w16 CCR1: CCR1
0x40006038 B  REGISTER TIM12_CCR2 (rw): TIM12 capture/compare register 2
0x40006038 C   FIELD 00w16 CCR2: CCR2
0x40006068 B  REGISTER TIM12_TISEL (rw): TIM12 timer input selection register
0x40006068 C   FIELD 00w04 TI1SEL: TI1SEL
0x40006068 C   FIELD 08w04 TI2SEL: TI2SEL
0x40007000 A PERIPHERAL TIM13
0x40007000 B  REGISTER TIM13_CR1 (rw): TIM13 control register 1
0x40007000 C   FIELD 00w01 CEN: CEN
0x40007000 C   FIELD 01w01 UDIS: UDIS
0x40007000 C   FIELD 02w01 URS: URS
0x40007000 C   FIELD 03w01 OPM: OPM
0x40007000 C   FIELD 07w01 ARPE: ARPE
0x40007000 C   FIELD 08w02 CKD: CKD
0x40007000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x4000700C B  REGISTER TIM13_DIER (rw): TIM13 Interrupt enable register
0x4000700C C   FIELD 00w01 UIE: UIE
0x4000700C C   FIELD 01w01 CC1IE: CC1IE
0x40007010 B  REGISTER TIM13_SR (rw): TIM13 status register
0x40007010 C   FIELD 00w01 UIF: UIF
0x40007010 C   FIELD 01w01 CC1IF: CC1IF
0x40007010 C   FIELD 09w01 CC1OF: CC1OF
0x40007014 B  REGISTER TIM13_EGR (wo): TIM13 event generation register
0x40007014 C   FIELD 00w01 UG: UG
0x40007014 C   FIELD 01w01 CC1G: CC1G
0x40007018 B  REGISTER TIM13_CCMR1 (rw): The channels can be used in input (capture mode) or in output (compare mode). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function in input and in output mode. For a given bit, OCxx describes its function when the channel is configured in output, ICxx describes its function when the channel is configured in input. So one must take care that the same bit can have a different meaning for the input stage and for the output stage. Output compare mode
0x40007018 C   FIELD 00w02 CC1S: CC1S
0x40007018 C   FIELD 02w01 OC1FE: OC1FE
0x40007018 C   FIELD 03w01 OC1PE: OC1PE
0x40007018 C   FIELD 04w03 OC1M: OC1M
0x40007018 C   FIELD 16w01 OC1M3: OC1M3
0x40007020 B  REGISTER TIM13_CCER (rw): TIM13 capture/compare enable register
0x40007020 C   FIELD 00w01 CC1E: CC1E
0x40007020 C   FIELD 01w01 CC1P: CC1P
0x40007020 C   FIELD 03w01 CC1NP: CC1NP
0x40007024 B  REGISTER TIM13_CNT (rw): TIM13 counter
0x40007024 C   FIELD 00w16 CNT: CNT
0x40007024 C   FIELD 31w01 UIFCPY: UIFCPY
0x40007028 B  REGISTER TIM13_PSC (rw): TIM13 prescaler
0x40007028 C   FIELD 00w16 PSC: PSC
0x4000702C B  REGISTER TIM13_ARR (rw): TIM13 auto-reload register
0x4000702C C   FIELD 00w16 ARR: ARR
0x40007034 B  REGISTER TIM13_CCR1 (rw): TIM13 capture/compare register 1
0x40007034 C   FIELD 00w16 CCR1: CCR1
0x40007068 B  REGISTER TIM13_TISEL (rw): TIM13 timer input selection register
0x40007068 C   FIELD 00w04 TI1SEL: TI1SEL
0x40008000 A PERIPHERAL TIM14
0x40008000 B  REGISTER TIM14_CR1 (rw): TIM14 control register 1
0x40008000 C   FIELD 00w01 CEN: CEN
0x40008000 C   FIELD 01w01 UDIS: UDIS
0x40008000 C   FIELD 02w01 URS: URS
0x40008000 C   FIELD 03w01 OPM: OPM
0x40008000 C   FIELD 07w01 ARPE: ARPE
0x40008000 C   FIELD 08w02 CKD: CKD
0x40008000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x4000800C B  REGISTER TIM14_DIER (rw): TIM14 Interrupt enable register
0x4000800C C   FIELD 00w01 UIE: UIE
0x4000800C C   FIELD 01w01 CC1IE: CC1IE
0x40008010 B  REGISTER TIM14_SR (rw): TIM14 status register
0x40008010 C   FIELD 00w01 UIF: UIF
0x40008010 C   FIELD 01w01 CC1IF: CC1IF
0x40008010 C   FIELD 09w01 CC1OF: CC1OF
0x40008014 B  REGISTER TIM14_EGR (wo): TIM14 event generation register
0x40008014 C   FIELD 00w01 UG: UG
0x40008014 C   FIELD 01w01 CC1G: CC1G
0x40008018 B  REGISTER TIM14_CCMR1 (rw): The channels can be used in input (capture mode) or in output (compare mode). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function in input and in output mode. For a given bit, OCxx describes its function when the channel is configured in output, ICxx describes its function when the channel is configured in input. So one must take care that the same bit can have a different meaning for the input stage and for the output stage. Output compare mode
0x40008018 C   FIELD 00w02 CC1S: CC1S
0x40008018 C   FIELD 02w01 OC1FE: OC1FE
0x40008018 C   FIELD 03w01 OC1PE: OC1PE
0x40008018 C   FIELD 04w03 OC1M: OC1M
0x40008018 C   FIELD 16w01 OC1M3: OC1M3
0x40008020 B  REGISTER TIM14_CCER (rw): TIM14 capture/compare enable register
0x40008020 C   FIELD 00w01 CC1E: CC1E
0x40008020 C   FIELD 01w01 CC1P: CC1P
0x40008020 C   FIELD 03w01 CC1NP: CC1NP
0x40008024 B  REGISTER TIM14_CNT (rw): TIM14 counter
0x40008024 C   FIELD 00w16 CNT: CNT
0x40008024 C   FIELD 31w01 UIFCPY: UIFCPY
0x40008028 B  REGISTER TIM14_PSC (rw): TIM14 prescaler
0x40008028 C   FIELD 00w16 PSC: PSC
0x4000802C B  REGISTER TIM14_ARR (rw): TIM14 auto-reload register
0x4000802C C   FIELD 00w16 ARR: ARR
0x40008034 B  REGISTER TIM14_CCR1 (rw): TIM14 capture/compare register 1
0x40008034 C   FIELD 00w16 CCR1: CCR1
0x40008068 B  REGISTER TIM14_TISEL (rw): TIM14 timer input selection register
0x40008068 C   FIELD 00w04 TI1SEL: TI1SEL
0x40009000 A PERIPHERAL LPTIM1
0x40009000 B  REGISTER LPTIM_ISR (ro): LPTIM interrupt and status register
0x40009000 C   FIELD 00w01 CMPM: CMPM
0x40009000 C   FIELD 01w01 ARRM: ARRM
0x40009000 C   FIELD 02w01 EXTTRIG: EXTTRIG
0x40009000 C   FIELD 03w01 CMPOK: CMPOK
0x40009000 C   FIELD 04w01 ARROK: ARROK
0x40009000 C   FIELD 05w01 UP: UP
0x40009000 C   FIELD 06w01 DOWN: DOWN
0x40009004 B  REGISTER LPTIM_ICR (wo): LPTIM interrupt clear register
0x40009004 C   FIELD 00w01 CMPMCF: CMPMCF
0x40009004 C   FIELD 01w01 ARRMCF: ARRMCF
0x40009004 C   FIELD 02w01 EXTTRIGCF: EXTTRIGCF
0x40009004 C   FIELD 03w01 CMPOKCF: CMPOKCF
0x40009004 C   FIELD 04w01 ARROKCF: ARROKCF
0x40009004 C   FIELD 05w01 UPCF: UPCF
0x40009004 C   FIELD 06w01 DOWNCF: DOWNCF
0x40009008 B  REGISTER LPTIM_IER (rw): LPTIM interrupt enable register
0x40009008 C   FIELD 00w01 CMPMIE: CMPMIE
0x40009008 C   FIELD 01w01 ARRMIE: ARRMIE
0x40009008 C   FIELD 02w01 EXTTRIGIE: EXTTRIGIE
0x40009008 C   FIELD 03w01 CMPOKIE: CMPOKIE
0x40009008 C   FIELD 04w01 ARROKIE: ARROKIE
0x40009008 C   FIELD 05w01 UPIE: UPIE
0x40009008 C   FIELD 06w01 DOWNIE: DOWNIE
0x4000900C B  REGISTER LPTIM_CFGR (rw): LPTIM configuration register
0x4000900C C   FIELD 00w01 CKSEL: CKSEL
0x4000900C C   FIELD 01w02 CKPOL: CKPOL
0x4000900C C   FIELD 03w02 CKFLT: CKFLT
0x4000900C C   FIELD 06w02 TRGFLT: TRGFLT
0x4000900C C   FIELD 09w03 PRESC: PRESC
0x4000900C C   FIELD 13w03 TRIGSEL: TRIGSEL
0x4000900C C   FIELD 17w02 TRIGEN: TRIGEN
0x4000900C C   FIELD 19w01 TIMOUT: TIMOUT
0x4000900C C   FIELD 20w01 WAVE: WAVE
0x4000900C C   FIELD 21w01 WAVPOL: WAVPOL
0x4000900C C   FIELD 22w01 PRELOAD: PRELOAD
0x4000900C C   FIELD 23w01 COUNTMODE: COUNTMODE
0x4000900C C   FIELD 24w01 ENC: ENC
0x40009010 B  REGISTER LPTIM_CR (rw): LPTIM control register
0x40009010 C   FIELD 00w01 ENABLE: ENABLE
0x40009010 C   FIELD 01w01 SNGSTRT: SNGSTRT
0x40009010 C   FIELD 02w01 CNTSTRT: CNTSTRT
0x40009010 C   FIELD 03w01 COUNTRST: COUNTRST
0x40009010 C   FIELD 04w01 RSTARE: RSTARE
0x40009014 B  REGISTER LPTIM_CMP (rw): LPTIM compare register
0x40009014 C   FIELD 00w16 CMP: CMP
0x40009018 B  REGISTER LPTIM_ARR (rw): LPTIM autoreload register
0x40009018 C   FIELD 00w16 ARR: ARR
0x4000901C B  REGISTER LPTIM_CNT (ro): LPTIM counter register
0x4000901C C   FIELD 00w16 CNT: CNT
0x40009024 B  REGISTER LPTIM_CFGR2 (rw): LPTIM configuration register 2
0x40009024 C   FIELD 00w02 IN1SEL: IN1SEL
0x40009024 C   FIELD 04w02 IN2SEL: IN2SEL
0x400093F0 B  REGISTER LPTIM1_HWCFGR (ro): LPTIM 1 peripheral hardware configuration register
0x400093F0 C   FIELD 00w08 CFG1: CFG1
0x400093F0 C   FIELD 08w08 CFG2: CFG2
0x400093F0 C   FIELD 16w04 CFG3: CFG3
0x400093F0 C   FIELD 24w08 CFG4: CFG4
0x400093F4 B  REGISTER LPTIM_VERR (ro): LPTIM peripheral version identification register
0x400093F4 C   FIELD 00w04 MINREV: MINREV
0x400093F4 C   FIELD 04w04 MAJREV: MAJREV
0x400093F8 B  REGISTER LPTIM_PIDR (ro): LPTIM peripheral type identification register
0x400093F8 C   FIELD 00w32 P_ID: P_ID
0x400093FC B  REGISTER LPTIM_SIDR (ro): LPTIM registers map size identification register
0x400093FC C   FIELD 00w32 S_ID: S_ID
0x4000A000 A PERIPHERAL WWDG1
0x4000A000 B  REGISTER WWDG_CR (rw): Control register
0x4000A000 C   FIELD 00w07 T (rw): T
0x4000A000 C   FIELD 07w01 WDGA (rw): WDGA
0x4000A004 B  REGISTER WWDG_CFR (rw): Configuration register
0x4000A004 C   FIELD 00w07 W (rw): W
0x4000A004 C   FIELD 09w01 EWI (rw): EWI
0x4000A004 C   FIELD 11w03 WDGTB (rw): WDGTB
0x4000A008 B  REGISTER WWDG_SR (rw): Status register
0x4000A008 C   FIELD 00w01 EWIF (rw): EWIF
0x4000A3F0 B  REGISTER WWDG_HWCFGR (ro): WWDG hardware configuration register
0x4000A3F0 C   FIELD 00w16 PREDIV (ro): PREDIV
0x4000A3F4 B  REGISTER WWDG_VERR (ro): WWDG version register
0x4000A3F4 C   FIELD 00w04 MINREV (ro): MINREV
0x4000A3F4 C   FIELD 04w04 MAJREV (ro): MAJREV
0x4000A3F8 B  REGISTER WWDG_IPIDR (ro): WWDG ID register
0x4000A3F8 C   FIELD 00w32 ID (ro): ID
0x4000A3FC B  REGISTER WWDG_SIDR (ro): WWDG size ID register
0x4000A3FC C   FIELD 00w32 SID (ro): SID
0x4000B000 A PERIPHERAL SPI2
0x4000B000 B  REGISTER SPI2S_CR1: SPI/I2S control register 1
0x4000B000 C   FIELD 00w01 SPE (rw): SPE
0x4000B000 C   FIELD 08w01 MASRX (rw): MASRX
0x4000B000 C   FIELD 09w01 CSTART (rw): CSTART
0x4000B000 C   FIELD 10w01 CSUSP (wo): CSUSP
0x4000B000 C   FIELD 11w01 HDDIR (rw): HDDIR
0x4000B000 C   FIELD 12w01 SSI (rw): SSI
0x4000B000 C   FIELD 13w01 CRC33_17 (rw): CRC33_17
0x4000B000 C   FIELD 14w01 RCRCINI (rw): RCRCINI
0x4000B000 C   FIELD 15w01 TCRCINI (rw): TCRCINI
0x4000B000 C   FIELD 16w01 IOLOCK (rw): IOLOCK
0x4000B004 B  REGISTER SPI_CR2 (rw): SPI control register 2
0x4000B004 C   FIELD 00w16 TSIZE: TSIZE
0x4000B004 C   FIELD 16w16 TSER: TSER
0x4000B008 B  REGISTER SPI_CFG1 (rw): Content of this register is write protected when SPI is enabled
0x4000B008 C   FIELD 00w05 DSIZE: DSIZE
0x4000B008 C   FIELD 05w04 FTHLV: FTHLV
0x4000B008 C   FIELD 09w02 UDRCFG: UDRCFG
0x4000B008 C   FIELD 11w02 UDRDET: UDRDET
0x4000B008 C   FIELD 14w01 RXDMAEN: RXDMAEN
0x4000B008 C   FIELD 15w01 TXDMAEN: TXDMAEN
0x4000B008 C   FIELD 16w05 CRCSIZE: CRCSIZE
0x4000B008 C   FIELD 22w01 CRCEN: CRCEN
0x4000B008 C   FIELD 28w03 MBR: MBR
0x4000B00C B  REGISTER SPI_CFG2 (rw): The content of this register is write protected when SPI is enabled or IOLOCK bit is set at SPI2S_CR1 register.
0x4000B00C C   FIELD 00w04 MSSI: MSSI
0x4000B00C C   FIELD 04w04 MIDI: MIDI
0x4000B00C C   FIELD 15w01 IOSWP: IOSWP
0x4000B00C C   FIELD 17w02 COMM: COMM
0x4000B00C C   FIELD 19w03 SP: SP
0x4000B00C C   FIELD 22w01 MASTER: MASTER
0x4000B00C C   FIELD 23w01 LSBFRST: LSBFRST
0x4000B00C C   FIELD 24w01 CPHA: CPHA
0x4000B00C C   FIELD 25w01 CPOL: CPOL
0x4000B00C C   FIELD 26w01 SSM: SSM
0x4000B00C C   FIELD 28w01 SSIOP: SSIOP
0x4000B00C C   FIELD 29w01 SSOE: SSOE
0x4000B00C C   FIELD 30w01 SSOM: SSOM
0x4000B00C C   FIELD 31w01 AFCNTR: AFCNTR
0x4000B010 B  REGISTER SPI2S_IER (rw): SPI/I2S interrupt enable register
0x4000B010 C   FIELD 00w01 RXPIE: RXPIE
0x4000B010 C   FIELD 01w01 TXPIE: TXPIE
0x4000B010 C   FIELD 02w01 DXPIE: DXPIE
0x4000B010 C   FIELD 03w01 EOTIE: EOTIE
0x4000B010 C   FIELD 04w01 TXTFIE: TXTFIE
0x4000B010 C   FIELD 05w01 UDRIE: UDRIE
0x4000B010 C   FIELD 06w01 OVRIE: OVRIE
0x4000B010 C   FIELD 07w01 CRCEIE: CRCEIE
0x4000B010 C   FIELD 08w01 TIFREIE: TIFREIE
0x4000B010 C   FIELD 09w01 MODFIE: MODFIE
0x4000B010 C   FIELD 10w01 TSERFIE: TSERFIE
0x4000B014 B  REGISTER SPI2S_SR (ro): SPI/I2S status register
0x4000B014 C   FIELD 00w01 RXP: RXP
0x4000B014 C   FIELD 01w01 TXP: TXP
0x4000B014 C   FIELD 02w01 DXP: DXP
0x4000B014 C   FIELD 03w01 EOT: EOT
0x4000B014 C   FIELD 04w01 TXTF: TXTF
0x4000B014 C   FIELD 05w01 UDR: UDR
0x4000B014 C   FIELD 06w01 OVR: OVR
0x4000B014 C   FIELD 07w01 CRCE: CRCE
0x4000B014 C   FIELD 08w01 TIFRE: TIFRE
0x4000B014 C   FIELD 09w01 MODF: MODF
0x4000B014 C   FIELD 10w01 TSERF: TSERF
0x4000B014 C   FIELD 11w01 SUSP: SUSP
0x4000B014 C   FIELD 12w01 TXC: TXC
0x4000B014 C   FIELD 13w02 RXPLVL: RXPLVL
0x4000B014 C   FIELD 15w01 RXWNE: RXWNE
0x4000B014 C   FIELD 16w16 CTSIZE: CTSIZE
0x4000B018 B  REGISTER SPI2S_IFCR (wo): SPI/I2S interrupt/status flags clear register
0x4000B018 C   FIELD 03w01 EOTC: EOTC
0x4000B018 C   FIELD 04w01 TXTFC: TXTFC
0x4000B018 C   FIELD 05w01 UDRC: UDRC
0x4000B018 C   FIELD 06w01 OVRC: OVRC
0x4000B018 C   FIELD 07w01 CRCEC: CRCEC
0x4000B018 C   FIELD 08w01 TIFREC: TIFREC
0x4000B018 C   FIELD 09w01 MODFC: MODFC
0x4000B018 C   FIELD 10w01 TSERFC: TSERFC
0x4000B018 C   FIELD 11w01 SUSPC: SUSPC
0x4000B020 B  REGISTER SPI2S_TXDR (wo): SPI/I2S transmit data register
0x4000B020 C   FIELD 00w32 TXDR: TXDR
0x4000B030 B  REGISTER SPI2S_RXDR (ro): SPI/I2S receive data register
0x4000B030 C   FIELD 00w32 RXDR: RXDR
0x4000B040 B  REGISTER SPI_CRCPOLY (rw): SPI polynomial register
0x4000B040 C   FIELD 00w32 CRCPOLY: CRCPOLY
0x4000B044 B  REGISTER SPI_TXCRC (ro): SPI transmitter CRC register
0x4000B044 C   FIELD 00w32 TXCRC: TXCRC
0x4000B048 B  REGISTER SPI_RXCRC (ro): SPI receiver CRC register
0x4000B048 C   FIELD 00w32 RXCRC: RXCRC
0x4000B04C B  REGISTER SPI_UDRDR (rw): SPI underrun data register
0x4000B04C C   FIELD 00w32 UDRDR: UDRDR
0x4000B050 B  REGISTER SPI_I2SCFGR (rw): All documented bits in this register must be configured when the I2S is disabled (SPE = 0).These bits are not used in SPI mode except for I2SMOD which needs to be set to 0 in SPI mode.
0x4000B050 C   FIELD 00w01 I2SMOD: I2SMOD
0x4000B050 C   FIELD 01w03 I2SCFG: I2SCFG
0x4000B050 C   FIELD 04w02 I2SSTD: I2SSTD
0x4000B050 C   FIELD 07w01 PCMSYNC: PCMSYNC
0x4000B050 C   FIELD 08w02 DATLEN: DATLEN
0x4000B050 C   FIELD 10w01 CHLEN: CHLEN
0x4000B050 C   FIELD 11w01 CKPOL: CKPOL
0x4000B050 C   FIELD 12w01 FIXCH: FIXCH
0x4000B050 C   FIELD 13w01 WSINV: WSINV
0x4000B050 C   FIELD 14w01 DATFMT: DATFMT
0x4000B050 C   FIELD 16w08 I2SDIV: I2SDIV
0x4000B050 C   FIELD 24w01 ODD: ODD
0x4000B050 C   FIELD 25w01 MCKOE: MCKOE
0x4000B3F0 B  REGISTER SPI_I2S_HWCFGR (ro): SPI/I2S hardware configuration register
0x4000B3F0 C   FIELD 00w04 TXFCFG: TXFCFG
0x4000B3F0 C   FIELD 04w04 RXFCFG: RXFCFG
0x4000B3F0 C   FIELD 08w04 CRCCFG: CRCCFG
0x4000B3F0 C   FIELD 12w04 I2SCFG: I2SCFG
0x4000B3F0 C   FIELD 16w04 DSCFG: DSCFG
0x4000B3F4 B  REGISTER SPI_VERR (ro): SPI/I2S version register
0x4000B3F4 C   FIELD 00w04 MINREV: MINREV
0x4000B3F4 C   FIELD 04w04 MAJREV: MAJREV
0x4000B3F8 B  REGISTER SPI_IPIDR (ro): SPI/I2S identification register
0x4000B3F8 C   FIELD 00w32 ID: ID
0x4000B3FC B  REGISTER SPI_SIDR (ro): SPI/I2S size identification register
0x4000B3FC C   FIELD 00w32 SID: SID
0x4000C000 A PERIPHERAL SPI3
0x4000C000 B  REGISTER SPI2S_CR1: SPI/I2S control register 1
0x4000C000 C   FIELD 00w01 SPE (rw): SPE
0x4000C000 C   FIELD 08w01 MASRX (rw): MASRX
0x4000C000 C   FIELD 09w01 CSTART (rw): CSTART
0x4000C000 C   FIELD 10w01 CSUSP (wo): CSUSP
0x4000C000 C   FIELD 11w01 HDDIR (rw): HDDIR
0x4000C000 C   FIELD 12w01 SSI (rw): SSI
0x4000C000 C   FIELD 13w01 CRC33_17 (rw): CRC33_17
0x4000C000 C   FIELD 14w01 RCRCINI (rw): RCRCINI
0x4000C000 C   FIELD 15w01 TCRCINI (rw): TCRCINI
0x4000C000 C   FIELD 16w01 IOLOCK (rw): IOLOCK
0x4000C004 B  REGISTER SPI_CR2 (rw): SPI control register 2
0x4000C004 C   FIELD 00w16 TSIZE: TSIZE
0x4000C004 C   FIELD 16w16 TSER: TSER
0x4000C008 B  REGISTER SPI_CFG1 (rw): Content of this register is write protected when SPI is enabled
0x4000C008 C   FIELD 00w05 DSIZE: DSIZE
0x4000C008 C   FIELD 05w04 FTHLV: FTHLV
0x4000C008 C   FIELD 09w02 UDRCFG: UDRCFG
0x4000C008 C   FIELD 11w02 UDRDET: UDRDET
0x4000C008 C   FIELD 14w01 RXDMAEN: RXDMAEN
0x4000C008 C   FIELD 15w01 TXDMAEN: TXDMAEN
0x4000C008 C   FIELD 16w05 CRCSIZE: CRCSIZE
0x4000C008 C   FIELD 22w01 CRCEN: CRCEN
0x4000C008 C   FIELD 28w03 MBR: MBR
0x4000C00C B  REGISTER SPI_CFG2 (rw): The content of this register is write protected when SPI is enabled or IOLOCK bit is set at SPI2S_CR1 register.
0x4000C00C C   FIELD 00w04 MSSI: MSSI
0x4000C00C C   FIELD 04w04 MIDI: MIDI
0x4000C00C C   FIELD 15w01 IOSWP: IOSWP
0x4000C00C C   FIELD 17w02 COMM: COMM
0x4000C00C C   FIELD 19w03 SP: SP
0x4000C00C C   FIELD 22w01 MASTER: MASTER
0x4000C00C C   FIELD 23w01 LSBFRST: LSBFRST
0x4000C00C C   FIELD 24w01 CPHA: CPHA
0x4000C00C C   FIELD 25w01 CPOL: CPOL
0x4000C00C C   FIELD 26w01 SSM: SSM
0x4000C00C C   FIELD 28w01 SSIOP: SSIOP
0x4000C00C C   FIELD 29w01 SSOE: SSOE
0x4000C00C C   FIELD 30w01 SSOM: SSOM
0x4000C00C C   FIELD 31w01 AFCNTR: AFCNTR
0x4000C010 B  REGISTER SPI2S_IER (rw): SPI/I2S interrupt enable register
0x4000C010 C   FIELD 00w01 RXPIE: RXPIE
0x4000C010 C   FIELD 01w01 TXPIE: TXPIE
0x4000C010 C   FIELD 02w01 DXPIE: DXPIE
0x4000C010 C   FIELD 03w01 EOTIE: EOTIE
0x4000C010 C   FIELD 04w01 TXTFIE: TXTFIE
0x4000C010 C   FIELD 05w01 UDRIE: UDRIE
0x4000C010 C   FIELD 06w01 OVRIE: OVRIE
0x4000C010 C   FIELD 07w01 CRCEIE: CRCEIE
0x4000C010 C   FIELD 08w01 TIFREIE: TIFREIE
0x4000C010 C   FIELD 09w01 MODFIE: MODFIE
0x4000C010 C   FIELD 10w01 TSERFIE: TSERFIE
0x4000C014 B  REGISTER SPI2S_SR (ro): SPI/I2S status register
0x4000C014 C   FIELD 00w01 RXP: RXP
0x4000C014 C   FIELD 01w01 TXP: TXP
0x4000C014 C   FIELD 02w01 DXP: DXP
0x4000C014 C   FIELD 03w01 EOT: EOT
0x4000C014 C   FIELD 04w01 TXTF: TXTF
0x4000C014 C   FIELD 05w01 UDR: UDR
0x4000C014 C   FIELD 06w01 OVR: OVR
0x4000C014 C   FIELD 07w01 CRCE: CRCE
0x4000C014 C   FIELD 08w01 TIFRE: TIFRE
0x4000C014 C   FIELD 09w01 MODF: MODF
0x4000C014 C   FIELD 10w01 TSERF: TSERF
0x4000C014 C   FIELD 11w01 SUSP: SUSP
0x4000C014 C   FIELD 12w01 TXC: TXC
0x4000C014 C   FIELD 13w02 RXPLVL: RXPLVL
0x4000C014 C   FIELD 15w01 RXWNE: RXWNE
0x4000C014 C   FIELD 16w16 CTSIZE: CTSIZE
0x4000C018 B  REGISTER SPI2S_IFCR (wo): SPI/I2S interrupt/status flags clear register
0x4000C018 C   FIELD 03w01 EOTC: EOTC
0x4000C018 C   FIELD 04w01 TXTFC: TXTFC
0x4000C018 C   FIELD 05w01 UDRC: UDRC
0x4000C018 C   FIELD 06w01 OVRC: OVRC
0x4000C018 C   FIELD 07w01 CRCEC: CRCEC
0x4000C018 C   FIELD 08w01 TIFREC: TIFREC
0x4000C018 C   FIELD 09w01 MODFC: MODFC
0x4000C018 C   FIELD 10w01 TSERFC: TSERFC
0x4000C018 C   FIELD 11w01 SUSPC: SUSPC
0x4000C020 B  REGISTER SPI2S_TXDR (wo): SPI/I2S transmit data register
0x4000C020 C   FIELD 00w32 TXDR: TXDR
0x4000C030 B  REGISTER SPI2S_RXDR (ro): SPI/I2S receive data register
0x4000C030 C   FIELD 00w32 RXDR: RXDR
0x4000C040 B  REGISTER SPI_CRCPOLY (rw): SPI polynomial register
0x4000C040 C   FIELD 00w32 CRCPOLY: CRCPOLY
0x4000C044 B  REGISTER SPI_TXCRC (ro): SPI transmitter CRC register
0x4000C044 C   FIELD 00w32 TXCRC: TXCRC
0x4000C048 B  REGISTER SPI_RXCRC (ro): SPI receiver CRC register
0x4000C048 C   FIELD 00w32 RXCRC: RXCRC
0x4000C04C B  REGISTER SPI_UDRDR (rw): SPI underrun data register
0x4000C04C C   FIELD 00w32 UDRDR: UDRDR
0x4000C050 B  REGISTER SPI_I2SCFGR (rw): All documented bits in this register must be configured when the I2S is disabled (SPE = 0).These bits are not used in SPI mode except for I2SMOD which needs to be set to 0 in SPI mode.
0x4000C050 C   FIELD 00w01 I2SMOD: I2SMOD
0x4000C050 C   FIELD 01w03 I2SCFG: I2SCFG
0x4000C050 C   FIELD 04w02 I2SSTD: I2SSTD
0x4000C050 C   FIELD 07w01 PCMSYNC: PCMSYNC
0x4000C050 C   FIELD 08w02 DATLEN: DATLEN
0x4000C050 C   FIELD 10w01 CHLEN: CHLEN
0x4000C050 C   FIELD 11w01 CKPOL: CKPOL
0x4000C050 C   FIELD 12w01 FIXCH: FIXCH
0x4000C050 C   FIELD 13w01 WSINV: WSINV
0x4000C050 C   FIELD 14w01 DATFMT: DATFMT
0x4000C050 C   FIELD 16w08 I2SDIV: I2SDIV
0x4000C050 C   FIELD 24w01 ODD: ODD
0x4000C050 C   FIELD 25w01 MCKOE: MCKOE
0x4000C3F0 B  REGISTER SPI_I2S_HWCFGR (ro): SPI/I2S hardware configuration register
0x4000C3F0 C   FIELD 00w04 TXFCFG: TXFCFG
0x4000C3F0 C   FIELD 04w04 RXFCFG: RXFCFG
0x4000C3F0 C   FIELD 08w04 CRCCFG: CRCCFG
0x4000C3F0 C   FIELD 12w04 I2SCFG: I2SCFG
0x4000C3F0 C   FIELD 16w04 DSCFG: DSCFG
0x4000C3F4 B  REGISTER SPI_VERR (ro): SPI/I2S version register
0x4000C3F4 C   FIELD 00w04 MINREV: MINREV
0x4000C3F4 C   FIELD 04w04 MAJREV: MAJREV
0x4000C3F8 B  REGISTER SPI_IPIDR (ro): SPI/I2S identification register
0x4000C3F8 C   FIELD 00w32 ID: ID
0x4000C3FC B  REGISTER SPI_SIDR (ro): SPI/I2S size identification register
0x4000C3FC C   FIELD 00w32 SID: SID
0x4000D000 A PERIPHERAL SPDIFRX
0x4000D000 B  REGISTER SPDIFRX_CR (rw): Control register
0x4000D000 C   FIELD 00w02 SPDIFRXEN (rw): SPDIFRXEN
0x4000D000 C   FIELD 02w01 RXDMAEN (rw): RXDMAEN
0x4000D000 C   FIELD 03w01 RXSTEO (rw): RXSTEO
0x4000D000 C   FIELD 04w02 DRFMT (rw): DRFMT
0x4000D000 C   FIELD 06w01 PMSK (rw): PMSK
0x4000D000 C   FIELD 07w01 VMSK (rw): VMSK
0x4000D000 C   FIELD 08w01 CUMSK (rw): CUMSK
0x4000D000 C   FIELD 09w01 PTMSK (rw): PTMSK
0x4000D000 C   FIELD 10w01 CBDMAEN (rw): CBDMAEN
0x4000D000 C   FIELD 11w01 CHSEL (rw): CHSEL
0x4000D000 C   FIELD 12w02 NBTR (rw): NBTR
0x4000D000 C   FIELD 14w01 WFA (rw): WFA
0x4000D000 C   FIELD 16w03 INSEL (rw): INSEL
0x4000D000 C   FIELD 20w01 CKSEN (rw): CKSEN
0x4000D000 C   FIELD 21w01 CKSBKPEN (rw): CKSBKPEN
0x4000D004 B  REGISTER SPDIFRX_IMR (rw): Interrupt mask register
0x4000D004 C   FIELD 00w01 RXNEIE (rw): RXNEIE
0x4000D004 C   FIELD 01w01 CSRNEIE (rw): CSRNEIE
0x4000D004 C   FIELD 02w01 PERRIE (rw): PERRIE
0x4000D004 C   FIELD 03w01 OVRIE (rw): OVRIE
0x4000D004 C   FIELD 04w01 SBLKIE (rw): SBLKIE
0x4000D004 C   FIELD 05w01 SYNCDIE (rw): SYNCDIE
0x4000D004 C   FIELD 06w01 IFEIE (rw): IFEIE
0x4000D008 B  REGISTER SPDIFRX_SR (ro): Status register
0x4000D008 C   FIELD 00w01 RXNE (ro): RXNE
0x4000D008 C   FIELD 01w01 CSRNE (ro): CSRNE
0x4000D008 C   FIELD 02w01 PERR (ro): PERR
0x4000D008 C   FIELD 03w01 OVR (ro): OVR
0x4000D008 C   FIELD 04w01 SBD (ro): SBD
0x4000D008 C   FIELD 05w01 SYNCD (ro): SYNCD
0x4000D008 C   FIELD 06w01 FERR (ro): FERR
0x4000D008 C   FIELD 07w01 SERR (ro): SERR
0x4000D008 C   FIELD 08w01 TERR (ro): TERR
0x4000D008 C   FIELD 16w15 WIDTH5 (ro): WIDTH5
0x4000D00C B  REGISTER SPDIFRX_IFCR (rw): Interrupt flag clear register
0x4000D00C C   FIELD 02w01 PERRCF (wo): PERRCF
0x4000D00C C   FIELD 03w01 OVRCF (wo): OVRCF
0x4000D00C C   FIELD 04w01 SBDCF (wo): SBDCF
0x4000D00C C   FIELD 05w01 SYNCDCF (wo): SYNCDCF
0x4000D010 B  REGISTER SPDIFRX_FMT0_DR (ro): This register can take 3 different formats according to DRFMT. Here is the format when DRFMT = 00:
0x4000D010 C   FIELD 00w24 DR (ro): DR
0x4000D010 C   FIELD 24w01 PE (ro): PE
0x4000D010 C   FIELD 25w01 V (ro): V
0x4000D010 C   FIELD 26w01 U (ro): U
0x4000D010 C   FIELD 27w01 C (ro): C
0x4000D010 C   FIELD 28w02 PT (ro): PT
0x4000D014 B  REGISTER SPDIFRX_CSR (ro): Channel status register
0x4000D014 C   FIELD 00w16 USR (ro): USR
0x4000D014 C   FIELD 16w08 CS (ro): CS
0x4000D014 C   FIELD 24w01 SOB (ro): SOB
0x4000D018 B  REGISTER SPDIFRX_DIR (ro): Debug information register
0x4000D018 C   FIELD 00w13 THI (ro): THI
0x4000D018 C   FIELD 16w13 TLO (ro): TLO
0x4000D3F4 B  REGISTER SPDIFRX_VERR (ro): SPDIFRX version register
0x4000D3F4 C   FIELD 00w04 MINREV (ro): MINREV
0x4000D3F4 C   FIELD 04w04 MAJREV (ro): MAJREV
0x4000D3F8 B  REGISTER SPDIFRX_IPIDR (ro): SPDIFRX identification register
0x4000D3F8 C   FIELD 00w32 ID (ro): ID
0x4000D3FC B  REGISTER SPDIFRX_SIDR (ro): SPDIFRX size identification register
0x4000D3FC C   FIELD 00w32 SID (ro): SID
0x4000E000 A PERIPHERAL USART2
0x4000E000 B  REGISTER CR1 (rw): Control register 1
0x4000E000 C   FIELD 00w01 UE: USART enable
0x4000E000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x4000E000 C   FIELD 02w01 RE: Receiver enable
0x4000E000 C   FIELD 03w01 TE: Transmitter enable
0x4000E000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x4000E000 C   FIELD 05w01 RXNEIE: RXNE interrupt enable
0x4000E000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x4000E000 C   FIELD 07w01 TXEIE: interrupt enable
0x4000E000 C   FIELD 08w01 PEIE: PE interrupt enable
0x4000E000 C   FIELD 09w01 PS: Parity selection
0x4000E000 C   FIELD 10w01 PCE: Parity control enable
0x4000E000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x4000E000 C   FIELD 12w01 M0: Word length
0x4000E000 C   FIELD 13w01 MME: Mute mode enable
0x4000E000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x4000E000 C   FIELD 15w01 OVER8: Oversampling mode
0x4000E000 C   FIELD 16w05 DEDT: DEDT
0x4000E000 C   FIELD 21w05 DEAT: DEAT
0x4000E000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x4000E000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x4000E000 C   FIELD 28w01 M1: Word length
0x4000E000 C   FIELD 29w01 FIFOEN: FIFO mode enable
0x4000E000 C   FIELD 30w01 TXFEIE: TXFIFO empty interrupt enable
0x4000E000 C   FIELD 31w01 RXFFIE: RXFIFO Full interrupt enable
0x4000E004 B  REGISTER CR2 (rw): Control register 2
0x4000E004 C   FIELD 00w01 SLVEN: Synchronous Slave mode enable
0x4000E004 C   FIELD 03w01 DIS_NSS: When the DSI_NSS bit is set, the NSS pin input will be ignored
0x4000E004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x4000E004 C   FIELD 05w01 LBDL: LIN break detection length
0x4000E004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x4000E004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x4000E004 C   FIELD 09w01 CPHA: Clock phase
0x4000E004 C   FIELD 10w01 CPOL: Clock polarity
0x4000E004 C   FIELD 11w01 CLKEN: Clock enable
0x4000E004 C   FIELD 12w02 STOP: STOP bits
0x4000E004 C   FIELD 14w01 LINEN: LIN mode enable
0x4000E004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x4000E004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x4000E004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x4000E004 C   FIELD 18w01 TAINV: Binary data inversion
0x4000E004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x4000E004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x4000E004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x4000E004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x4000E004 C   FIELD 24w04 ADD0_3: Address of the USART node
0x4000E004 C   FIELD 28w04 ADD4_7: Address of the USART node
0x4000E008 B  REGISTER CR3 (rw): Control register 3
0x4000E008 C   FIELD 00w01 EIE: Error interrupt enable
0x4000E008 C   FIELD 01w01 IREN: Ir mode enable
0x4000E008 C   FIELD 02w01 IRLP: Ir low-power
0x4000E008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x4000E008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x4000E008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x4000E008 C   FIELD 06w01 DMAR: DMA enable receiver
0x4000E008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x4000E008 C   FIELD 08w01 RTSE: RTS enable
0x4000E008 C   FIELD 09w01 CTSE: CTS enable
0x4000E008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x4000E008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x4000E008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x4000E008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x4000E008 C   FIELD 14w01 DEM: Driver enable mode
0x4000E008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x4000E008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x4000E008 C   FIELD 20w02 WUS: Wakeup from Stop mode interrupt flag selection
0x4000E008 C   FIELD 22w01 WUFIE: Wakeup from Stop mode interrupt enable
0x4000E008 C   FIELD 23w01 TXFTIE: threshold interrupt enable
0x4000E008 C   FIELD 24w01 TCBGTIE: Tr Complete before guard time, interrupt enable
0x4000E008 C   FIELD 25w03 RXFTCFG: Receive FIFO threshold configuration
0x4000E008 C   FIELD 28w01 RXFTIE: RXFIFO threshold interrupt enable
0x4000E008 C   FIELD 29w03 TXFTCFG: TXFIFO threshold configuration
0x4000E00C B  REGISTER BRR (rw): Baud rate register
0x4000E00C C   FIELD 00w04 BRR_0_3: BRR_0_3
0x4000E00C C   FIELD 04w12 BRR_4_15: BRR_4_15
0x4000E010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x4000E010 C   FIELD 00w08 PSC: Prescaler value
0x4000E010 C   FIELD 08w08 GT: Guard time value
0x4000E014 B  REGISTER RTOR (rw): Receiver timeout register
0x4000E014 C   FIELD 00w24 RTO: Receiver timeout value
0x4000E014 C   FIELD 24w08 BLEN: Block Length
0x4000E018 B  REGISTER RQR (wo): Request register
0x4000E018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x4000E018 C   FIELD 01w01 SBKRQ: Send break request
0x4000E018 C   FIELD 02w01 MMRQ: Mute mode request
0x4000E018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x4000E018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4000E01C B  REGISTER ISR (ro): Interrupt & status register
0x4000E01C C   FIELD 00w01 PE: PE
0x4000E01C C   FIELD 01w01 FE: FE
0x4000E01C C   FIELD 02w01 NF: NF
0x4000E01C C   FIELD 03w01 ORE: ORE
0x4000E01C C   FIELD 04w01 IDLE: IDLE
0x4000E01C C   FIELD 05w01 RXNE: RXNE
0x4000E01C C   FIELD 06w01 TC: TC
0x4000E01C C   FIELD 07w01 TXE: TXE
0x4000E01C C   FIELD 08w01 LBDF: LBDF
0x4000E01C C   FIELD 09w01 CTSIF: CTSIF
0x4000E01C C   FIELD 10w01 CTS: CTS
0x4000E01C C   FIELD 11w01 RTOF: RTOF
0x4000E01C C   FIELD 12w01 EOBF: EOBF
0x4000E01C C   FIELD 13w01 UDR: SPI slave underrun error flag
0x4000E01C C   FIELD 14w01 ABRE: ABRE
0x4000E01C C   FIELD 15w01 ABRF: ABRF
0x4000E01C C   FIELD 16w01 BUSY: BUSY
0x4000E01C C   FIELD 17w01 CMF: CMF
0x4000E01C C   FIELD 18w01 SBKF: SBKF
0x4000E01C C   FIELD 19w01 RWU: RWU
0x4000E01C C   FIELD 20w01 WUF: WUF
0x4000E01C C   FIELD 21w01 TEACK: TEACK
0x4000E01C C   FIELD 22w01 REACK: REACK
0x4000E01C C   FIELD 23w01 TXFE: TXFIFO Empty
0x4000E01C C   FIELD 24w01 RXFF: RXFIFO Full
0x4000E01C C   FIELD 25w01 TCBGT: Transmission complete before guard time flag
0x4000E01C C   FIELD 26w01 RXFT: RXFIFO threshold flag
0x4000E01C C   FIELD 27w01 TXFT: TXFIFO threshold flag
0x4000E020 B  REGISTER ICR (wo): Interrupt flag clear register
0x4000E020 C   FIELD 00w01 PECF: Parity error clear flag
0x4000E020 C   FIELD 01w01 FECF: Framing error clear flag
0x4000E020 C   FIELD 02w01 NCF: Noise detected clear flag
0x4000E020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x4000E020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x4000E020 C   FIELD 05w01 TXFECF: TXFIFO empty clear flag
0x4000E020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x4000E020 C   FIELD 07w01 TCBGTCF: Transmission complete before Guard time clear flag
0x4000E020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x4000E020 C   FIELD 09w01 CTSCF: CTS clear flag
0x4000E020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x4000E020 C   FIELD 12w01 EOBCF: End of block clear flag
0x4000E020 C   FIELD 13w01 UDRCF: SPI slave underrun clear flag
0x4000E020 C   FIELD 17w01 CMCF: Character match clear flag
0x4000E020 C   FIELD 20w01 WUCF: Wakeup from Stop mode clear flag
0x4000E024 B  REGISTER RDR (ro): Receive data register
0x4000E024 C   FIELD 00w09 RDR: Receive data value
0x4000E028 B  REGISTER TDR (rw): Transmit data register
0x4000E028 C   FIELD 00w09 TDR: Transmit data value
0x4000E02C B  REGISTER PRESC (rw): Prescaler register
0x4000E02C C   FIELD 00w04 PRESCALER: Clock prescaler
0x4000E3EC B  REGISTER HWCFGR2 (ro): USART Hardware Configuration register 2
0x4000E3EC C   FIELD 00w04 CFG1: CFG1
0x4000E3EC C   FIELD 04w04 CFG2: CFG2
0x4000E3F0 B  REGISTER HWCFGR1 (ro): USART Hardware Configuration register 1
0x4000E3F0 C   FIELD 00w04 CFG1: CFG1
0x4000E3F0 C   FIELD 04w04 CFG2: CFG2
0x4000E3F0 C   FIELD 08w04 CFG3: CFG3
0x4000E3F0 C   FIELD 12w04 CFG4: CFG4
0x4000E3F0 C   FIELD 16w04 CFG5: CFG5
0x4000E3F0 C   FIELD 20w04 CFG6: CFG6
0x4000E3F0 C   FIELD 24w04 CFG7: CFG7
0x4000E3F0 C   FIELD 28w04 CFG8: CFG8
0x4000E3F4 B  REGISTER VERR (ro): EXTI IP Version register
0x4000E3F4 C   FIELD 00w04 MINREV: Minor Revision number
0x4000E3F4 C   FIELD 04w04 MAJREV: Major Revision number
0x4000E3F8 B  REGISTER IPIDR (ro): EXTI Identification register
0x4000E3F8 C   FIELD 00w32 IPID: IP Identification
0x4000E3FC B  REGISTER SIDR (ro): EXTI Size ID register
0x4000E3FC C   FIELD 00w32 SID: Size Identification
0x4000F000 A PERIPHERAL USART3
0x4000F000 B  REGISTER CR1 (rw): Control register 1
0x4000F000 C   FIELD 00w01 UE: USART enable
0x4000F000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x4000F000 C   FIELD 02w01 RE: Receiver enable
0x4000F000 C   FIELD 03w01 TE: Transmitter enable
0x4000F000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x4000F000 C   FIELD 05w01 RXNEIE: RXNE interrupt enable
0x4000F000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x4000F000 C   FIELD 07w01 TXEIE: interrupt enable
0x4000F000 C   FIELD 08w01 PEIE: PE interrupt enable
0x4000F000 C   FIELD 09w01 PS: Parity selection
0x4000F000 C   FIELD 10w01 PCE: Parity control enable
0x4000F000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x4000F000 C   FIELD 12w01 M0: Word length
0x4000F000 C   FIELD 13w01 MME: Mute mode enable
0x4000F000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x4000F000 C   FIELD 15w01 OVER8: Oversampling mode
0x4000F000 C   FIELD 16w05 DEDT: DEDT
0x4000F000 C   FIELD 21w05 DEAT: DEAT
0x4000F000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x4000F000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x4000F000 C   FIELD 28w01 M1: Word length
0x4000F000 C   FIELD 29w01 FIFOEN: FIFO mode enable
0x4000F000 C   FIELD 30w01 TXFEIE: TXFIFO empty interrupt enable
0x4000F000 C   FIELD 31w01 RXFFIE: RXFIFO Full interrupt enable
0x4000F004 B  REGISTER CR2 (rw): Control register 2
0x4000F004 C   FIELD 00w01 SLVEN: Synchronous Slave mode enable
0x4000F004 C   FIELD 03w01 DIS_NSS: When the DSI_NSS bit is set, the NSS pin input will be ignored
0x4000F004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x4000F004 C   FIELD 05w01 LBDL: LIN break detection length
0x4000F004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x4000F004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x4000F004 C   FIELD 09w01 CPHA: Clock phase
0x4000F004 C   FIELD 10w01 CPOL: Clock polarity
0x4000F004 C   FIELD 11w01 CLKEN: Clock enable
0x4000F004 C   FIELD 12w02 STOP: STOP bits
0x4000F004 C   FIELD 14w01 LINEN: LIN mode enable
0x4000F004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x4000F004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x4000F004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x4000F004 C   FIELD 18w01 TAINV: Binary data inversion
0x4000F004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x4000F004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x4000F004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x4000F004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x4000F004 C   FIELD 24w04 ADD0_3: Address of the USART node
0x4000F004 C   FIELD 28w04 ADD4_7: Address of the USART node
0x4000F008 B  REGISTER CR3 (rw): Control register 3
0x4000F008 C   FIELD 00w01 EIE: Error interrupt enable
0x4000F008 C   FIELD 01w01 IREN: Ir mode enable
0x4000F008 C   FIELD 02w01 IRLP: Ir low-power
0x4000F008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x4000F008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x4000F008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x4000F008 C   FIELD 06w01 DMAR: DMA enable receiver
0x4000F008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x4000F008 C   FIELD 08w01 RTSE: RTS enable
0x4000F008 C   FIELD 09w01 CTSE: CTS enable
0x4000F008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x4000F008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x4000F008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x4000F008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x4000F008 C   FIELD 14w01 DEM: Driver enable mode
0x4000F008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x4000F008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x4000F008 C   FIELD 20w02 WUS: Wakeup from Stop mode interrupt flag selection
0x4000F008 C   FIELD 22w01 WUFIE: Wakeup from Stop mode interrupt enable
0x4000F008 C   FIELD 23w01 TXFTIE: threshold interrupt enable
0x4000F008 C   FIELD 24w01 TCBGTIE: Tr Complete before guard time, interrupt enable
0x4000F008 C   FIELD 25w03 RXFTCFG: Receive FIFO threshold configuration
0x4000F008 C   FIELD 28w01 RXFTIE: RXFIFO threshold interrupt enable
0x4000F008 C   FIELD 29w03 TXFTCFG: TXFIFO threshold configuration
0x4000F00C B  REGISTER BRR (rw): Baud rate register
0x4000F00C C   FIELD 00w04 BRR_0_3: BRR_0_3
0x4000F00C C   FIELD 04w12 BRR_4_15: BRR_4_15
0x4000F010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x4000F010 C   FIELD 00w08 PSC: Prescaler value
0x4000F010 C   FIELD 08w08 GT: Guard time value
0x4000F014 B  REGISTER RTOR (rw): Receiver timeout register
0x4000F014 C   FIELD 00w24 RTO: Receiver timeout value
0x4000F014 C   FIELD 24w08 BLEN: Block Length
0x4000F018 B  REGISTER RQR (wo): Request register
0x4000F018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x4000F018 C   FIELD 01w01 SBKRQ: Send break request
0x4000F018 C   FIELD 02w01 MMRQ: Mute mode request
0x4000F018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x4000F018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4000F01C B  REGISTER ISR (ro): Interrupt & status register
0x4000F01C C   FIELD 00w01 PE: PE
0x4000F01C C   FIELD 01w01 FE: FE
0x4000F01C C   FIELD 02w01 NF: NF
0x4000F01C C   FIELD 03w01 ORE: ORE
0x4000F01C C   FIELD 04w01 IDLE: IDLE
0x4000F01C C   FIELD 05w01 RXNE: RXNE
0x4000F01C C   FIELD 06w01 TC: TC
0x4000F01C C   FIELD 07w01 TXE: TXE
0x4000F01C C   FIELD 08w01 LBDF: LBDF
0x4000F01C C   FIELD 09w01 CTSIF: CTSIF
0x4000F01C C   FIELD 10w01 CTS: CTS
0x4000F01C C   FIELD 11w01 RTOF: RTOF
0x4000F01C C   FIELD 12w01 EOBF: EOBF
0x4000F01C C   FIELD 13w01 UDR: SPI slave underrun error flag
0x4000F01C C   FIELD 14w01 ABRE: ABRE
0x4000F01C C   FIELD 15w01 ABRF: ABRF
0x4000F01C C   FIELD 16w01 BUSY: BUSY
0x4000F01C C   FIELD 17w01 CMF: CMF
0x4000F01C C   FIELD 18w01 SBKF: SBKF
0x4000F01C C   FIELD 19w01 RWU: RWU
0x4000F01C C   FIELD 20w01 WUF: WUF
0x4000F01C C   FIELD 21w01 TEACK: TEACK
0x4000F01C C   FIELD 22w01 REACK: REACK
0x4000F01C C   FIELD 23w01 TXFE: TXFIFO Empty
0x4000F01C C   FIELD 24w01 RXFF: RXFIFO Full
0x4000F01C C   FIELD 25w01 TCBGT: Transmission complete before guard time flag
0x4000F01C C   FIELD 26w01 RXFT: RXFIFO threshold flag
0x4000F01C C   FIELD 27w01 TXFT: TXFIFO threshold flag
0x4000F020 B  REGISTER ICR (wo): Interrupt flag clear register
0x4000F020 C   FIELD 00w01 PECF: Parity error clear flag
0x4000F020 C   FIELD 01w01 FECF: Framing error clear flag
0x4000F020 C   FIELD 02w01 NCF: Noise detected clear flag
0x4000F020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x4000F020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x4000F020 C   FIELD 05w01 TXFECF: TXFIFO empty clear flag
0x4000F020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x4000F020 C   FIELD 07w01 TCBGTCF: Transmission complete before Guard time clear flag
0x4000F020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x4000F020 C   FIELD 09w01 CTSCF: CTS clear flag
0x4000F020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x4000F020 C   FIELD 12w01 EOBCF: End of block clear flag
0x4000F020 C   FIELD 13w01 UDRCF: SPI slave underrun clear flag
0x4000F020 C   FIELD 17w01 CMCF: Character match clear flag
0x4000F020 C   FIELD 20w01 WUCF: Wakeup from Stop mode clear flag
0x4000F024 B  REGISTER RDR (ro): Receive data register
0x4000F024 C   FIELD 00w09 RDR: Receive data value
0x4000F028 B  REGISTER TDR (rw): Transmit data register
0x4000F028 C   FIELD 00w09 TDR: Transmit data value
0x4000F02C B  REGISTER PRESC (rw): Prescaler register
0x4000F02C C   FIELD 00w04 PRESCALER: Clock prescaler
0x4000F3EC B  REGISTER HWCFGR2 (ro): USART Hardware Configuration register 2
0x4000F3EC C   FIELD 00w04 CFG1: CFG1
0x4000F3EC C   FIELD 04w04 CFG2: CFG2
0x4000F3F0 B  REGISTER HWCFGR1 (ro): USART Hardware Configuration register 1
0x4000F3F0 C   FIELD 00w04 CFG1: CFG1
0x4000F3F0 C   FIELD 04w04 CFG2: CFG2
0x4000F3F0 C   FIELD 08w04 CFG3: CFG3
0x4000F3F0 C   FIELD 12w04 CFG4: CFG4
0x4000F3F0 C   FIELD 16w04 CFG5: CFG5
0x4000F3F0 C   FIELD 20w04 CFG6: CFG6
0x4000F3F0 C   FIELD 24w04 CFG7: CFG7
0x4000F3F0 C   FIELD 28w04 CFG8: CFG8
0x4000F3F4 B  REGISTER VERR (ro): EXTI IP Version register
0x4000F3F4 C   FIELD 00w04 MINREV: Minor Revision number
0x4000F3F4 C   FIELD 04w04 MAJREV: Major Revision number
0x4000F3F8 B  REGISTER IPIDR (ro): EXTI Identification register
0x4000F3F8 C   FIELD 00w32 IPID: IP Identification
0x4000F3FC B  REGISTER SIDR (ro): EXTI Size ID register
0x4000F3FC C   FIELD 00w32 SID: Size Identification
0x40010000 A PERIPHERAL USART4
0x40010000 B  REGISTER CR1 (rw): Control register 1
0x40010000 C   FIELD 00w01 UE: USART enable
0x40010000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40010000 C   FIELD 02w01 RE: Receiver enable
0x40010000 C   FIELD 03w01 TE: Transmitter enable
0x40010000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40010000 C   FIELD 05w01 RXNEIE: RXNE interrupt enable
0x40010000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40010000 C   FIELD 07w01 TXEIE: interrupt enable
0x40010000 C   FIELD 08w01 PEIE: PE interrupt enable
0x40010000 C   FIELD 09w01 PS: Parity selection
0x40010000 C   FIELD 10w01 PCE: Parity control enable
0x40010000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40010000 C   FIELD 12w01 M0: Word length
0x40010000 C   FIELD 13w01 MME: Mute mode enable
0x40010000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40010000 C   FIELD 15w01 OVER8: Oversampling mode
0x40010000 C   FIELD 16w05 DEDT: DEDT
0x40010000 C   FIELD 21w05 DEAT: DEAT
0x40010000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40010000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40010000 C   FIELD 28w01 M1: Word length
0x40010000 C   FIELD 29w01 FIFOEN: FIFO mode enable
0x40010000 C   FIELD 30w01 TXFEIE: TXFIFO empty interrupt enable
0x40010000 C   FIELD 31w01 RXFFIE: RXFIFO Full interrupt enable
0x40010004 B  REGISTER CR2 (rw): Control register 2
0x40010004 C   FIELD 00w01 SLVEN: Synchronous Slave mode enable
0x40010004 C   FIELD 03w01 DIS_NSS: When the DSI_NSS bit is set, the NSS pin input will be ignored
0x40010004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40010004 C   FIELD 05w01 LBDL: LIN break detection length
0x40010004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40010004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40010004 C   FIELD 09w01 CPHA: Clock phase
0x40010004 C   FIELD 10w01 CPOL: Clock polarity
0x40010004 C   FIELD 11w01 CLKEN: Clock enable
0x40010004 C   FIELD 12w02 STOP: STOP bits
0x40010004 C   FIELD 14w01 LINEN: LIN mode enable
0x40010004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40010004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40010004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40010004 C   FIELD 18w01 TAINV: Binary data inversion
0x40010004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40010004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40010004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40010004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40010004 C   FIELD 24w04 ADD0_3: Address of the USART node
0x40010004 C   FIELD 28w04 ADD4_7: Address of the USART node
0x40010008 B  REGISTER CR3 (rw): Control register 3
0x40010008 C   FIELD 00w01 EIE: Error interrupt enable
0x40010008 C   FIELD 01w01 IREN: Ir mode enable
0x40010008 C   FIELD 02w01 IRLP: Ir low-power
0x40010008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40010008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40010008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40010008 C   FIELD 06w01 DMAR: DMA enable receiver
0x40010008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40010008 C   FIELD 08w01 RTSE: RTS enable
0x40010008 C   FIELD 09w01 CTSE: CTS enable
0x40010008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40010008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40010008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40010008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40010008 C   FIELD 14w01 DEM: Driver enable mode
0x40010008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40010008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40010008 C   FIELD 20w02 WUS: Wakeup from Stop mode interrupt flag selection
0x40010008 C   FIELD 22w01 WUFIE: Wakeup from Stop mode interrupt enable
0x40010008 C   FIELD 23w01 TXFTIE: threshold interrupt enable
0x40010008 C   FIELD 24w01 TCBGTIE: Tr Complete before guard time, interrupt enable
0x40010008 C   FIELD 25w03 RXFTCFG: Receive FIFO threshold configuration
0x40010008 C   FIELD 28w01 RXFTIE: RXFIFO threshold interrupt enable
0x40010008 C   FIELD 29w03 TXFTCFG: TXFIFO threshold configuration
0x4001000C B  REGISTER BRR (rw): Baud rate register
0x4001000C C   FIELD 00w04 BRR_0_3: BRR_0_3
0x4001000C C   FIELD 04w12 BRR_4_15: BRR_4_15
0x40010010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40010010 C   FIELD 00w08 PSC: Prescaler value
0x40010010 C   FIELD 08w08 GT: Guard time value
0x40010014 B  REGISTER RTOR (rw): Receiver timeout register
0x40010014 C   FIELD 00w24 RTO: Receiver timeout value
0x40010014 C   FIELD 24w08 BLEN: Block Length
0x40010018 B  REGISTER RQR (wo): Request register
0x40010018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40010018 C   FIELD 01w01 SBKRQ: Send break request
0x40010018 C   FIELD 02w01 MMRQ: Mute mode request
0x40010018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40010018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4001001C B  REGISTER ISR (ro): Interrupt & status register
0x4001001C C   FIELD 00w01 PE: PE
0x4001001C C   FIELD 01w01 FE: FE
0x4001001C C   FIELD 02w01 NF: NF
0x4001001C C   FIELD 03w01 ORE: ORE
0x4001001C C   FIELD 04w01 IDLE: IDLE
0x4001001C C   FIELD 05w01 RXNE: RXNE
0x4001001C C   FIELD 06w01 TC: TC
0x4001001C C   FIELD 07w01 TXE: TXE
0x4001001C C   FIELD 08w01 LBDF: LBDF
0x4001001C C   FIELD 09w01 CTSIF: CTSIF
0x4001001C C   FIELD 10w01 CTS: CTS
0x4001001C C   FIELD 11w01 RTOF: RTOF
0x4001001C C   FIELD 12w01 EOBF: EOBF
0x4001001C C   FIELD 13w01 UDR: SPI slave underrun error flag
0x4001001C C   FIELD 14w01 ABRE: ABRE
0x4001001C C   FIELD 15w01 ABRF: ABRF
0x4001001C C   FIELD 16w01 BUSY: BUSY
0x4001001C C   FIELD 17w01 CMF: CMF
0x4001001C C   FIELD 18w01 SBKF: SBKF
0x4001001C C   FIELD 19w01 RWU: RWU
0x4001001C C   FIELD 20w01 WUF: WUF
0x4001001C C   FIELD 21w01 TEACK: TEACK
0x4001001C C   FIELD 22w01 REACK: REACK
0x4001001C C   FIELD 23w01 TXFE: TXFIFO Empty
0x4001001C C   FIELD 24w01 RXFF: RXFIFO Full
0x4001001C C   FIELD 25w01 TCBGT: Transmission complete before guard time flag
0x4001001C C   FIELD 26w01 RXFT: RXFIFO threshold flag
0x4001001C C   FIELD 27w01 TXFT: TXFIFO threshold flag
0x40010020 B  REGISTER ICR (wo): Interrupt flag clear register
0x40010020 C   FIELD 00w01 PECF: Parity error clear flag
0x40010020 C   FIELD 01w01 FECF: Framing error clear flag
0x40010020 C   FIELD 02w01 NCF: Noise detected clear flag
0x40010020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40010020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40010020 C   FIELD 05w01 TXFECF: TXFIFO empty clear flag
0x40010020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40010020 C   FIELD 07w01 TCBGTCF: Transmission complete before Guard time clear flag
0x40010020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40010020 C   FIELD 09w01 CTSCF: CTS clear flag
0x40010020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40010020 C   FIELD 12w01 EOBCF: End of block clear flag
0x40010020 C   FIELD 13w01 UDRCF: SPI slave underrun clear flag
0x40010020 C   FIELD 17w01 CMCF: Character match clear flag
0x40010020 C   FIELD 20w01 WUCF: Wakeup from Stop mode clear flag
0x40010024 B  REGISTER RDR (ro): Receive data register
0x40010024 C   FIELD 00w09 RDR: Receive data value
0x40010028 B  REGISTER TDR (rw): Transmit data register
0x40010028 C   FIELD 00w09 TDR: Transmit data value
0x4001002C B  REGISTER PRESC (rw): Prescaler register
0x4001002C C   FIELD 00w04 PRESCALER: Clock prescaler
0x400103EC B  REGISTER HWCFGR2 (ro): USART Hardware Configuration register 2
0x400103EC C   FIELD 00w04 CFG1: CFG1
0x400103EC C   FIELD 04w04 CFG2: CFG2
0x400103F0 B  REGISTER HWCFGR1 (ro): USART Hardware Configuration register 1
0x400103F0 C   FIELD 00w04 CFG1: CFG1
0x400103F0 C   FIELD 04w04 CFG2: CFG2
0x400103F0 C   FIELD 08w04 CFG3: CFG3
0x400103F0 C   FIELD 12w04 CFG4: CFG4
0x400103F0 C   FIELD 16w04 CFG5: CFG5
0x400103F0 C   FIELD 20w04 CFG6: CFG6
0x400103F0 C   FIELD 24w04 CFG7: CFG7
0x400103F0 C   FIELD 28w04 CFG8: CFG8
0x400103F4 B  REGISTER VERR (ro): EXTI IP Version register
0x400103F4 C   FIELD 00w04 MINREV: Minor Revision number
0x400103F4 C   FIELD 04w04 MAJREV: Major Revision number
0x400103F8 B  REGISTER IPIDR (ro): EXTI Identification register
0x400103F8 C   FIELD 00w32 IPID: IP Identification
0x400103FC B  REGISTER SIDR (ro): EXTI Size ID register
0x400103FC C   FIELD 00w32 SID: Size Identification
0x40011000 A PERIPHERAL USART5
0x40011000 B  REGISTER CR1 (rw): Control register 1
0x40011000 C   FIELD 00w01 UE: USART enable
0x40011000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40011000 C   FIELD 02w01 RE: Receiver enable
0x40011000 C   FIELD 03w01 TE: Transmitter enable
0x40011000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40011000 C   FIELD 05w01 RXNEIE: RXNE interrupt enable
0x40011000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40011000 C   FIELD 07w01 TXEIE: interrupt enable
0x40011000 C   FIELD 08w01 PEIE: PE interrupt enable
0x40011000 C   FIELD 09w01 PS: Parity selection
0x40011000 C   FIELD 10w01 PCE: Parity control enable
0x40011000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40011000 C   FIELD 12w01 M0: Word length
0x40011000 C   FIELD 13w01 MME: Mute mode enable
0x40011000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40011000 C   FIELD 15w01 OVER8: Oversampling mode
0x40011000 C   FIELD 16w05 DEDT: DEDT
0x40011000 C   FIELD 21w05 DEAT: DEAT
0x40011000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40011000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40011000 C   FIELD 28w01 M1: Word length
0x40011000 C   FIELD 29w01 FIFOEN: FIFO mode enable
0x40011000 C   FIELD 30w01 TXFEIE: TXFIFO empty interrupt enable
0x40011000 C   FIELD 31w01 RXFFIE: RXFIFO Full interrupt enable
0x40011004 B  REGISTER CR2 (rw): Control register 2
0x40011004 C   FIELD 00w01 SLVEN: Synchronous Slave mode enable
0x40011004 C   FIELD 03w01 DIS_NSS: When the DSI_NSS bit is set, the NSS pin input will be ignored
0x40011004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40011004 C   FIELD 05w01 LBDL: LIN break detection length
0x40011004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40011004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40011004 C   FIELD 09w01 CPHA: Clock phase
0x40011004 C   FIELD 10w01 CPOL: Clock polarity
0x40011004 C   FIELD 11w01 CLKEN: Clock enable
0x40011004 C   FIELD 12w02 STOP: STOP bits
0x40011004 C   FIELD 14w01 LINEN: LIN mode enable
0x40011004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40011004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40011004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40011004 C   FIELD 18w01 TAINV: Binary data inversion
0x40011004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40011004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40011004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40011004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40011004 C   FIELD 24w04 ADD0_3: Address of the USART node
0x40011004 C   FIELD 28w04 ADD4_7: Address of the USART node
0x40011008 B  REGISTER CR3 (rw): Control register 3
0x40011008 C   FIELD 00w01 EIE: Error interrupt enable
0x40011008 C   FIELD 01w01 IREN: Ir mode enable
0x40011008 C   FIELD 02w01 IRLP: Ir low-power
0x40011008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40011008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40011008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40011008 C   FIELD 06w01 DMAR: DMA enable receiver
0x40011008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40011008 C   FIELD 08w01 RTSE: RTS enable
0x40011008 C   FIELD 09w01 CTSE: CTS enable
0x40011008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40011008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40011008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40011008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40011008 C   FIELD 14w01 DEM: Driver enable mode
0x40011008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40011008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40011008 C   FIELD 20w02 WUS: Wakeup from Stop mode interrupt flag selection
0x40011008 C   FIELD 22w01 WUFIE: Wakeup from Stop mode interrupt enable
0x40011008 C   FIELD 23w01 TXFTIE: threshold interrupt enable
0x40011008 C   FIELD 24w01 TCBGTIE: Tr Complete before guard time, interrupt enable
0x40011008 C   FIELD 25w03 RXFTCFG: Receive FIFO threshold configuration
0x40011008 C   FIELD 28w01 RXFTIE: RXFIFO threshold interrupt enable
0x40011008 C   FIELD 29w03 TXFTCFG: TXFIFO threshold configuration
0x4001100C B  REGISTER BRR (rw): Baud rate register
0x4001100C C   FIELD 00w04 BRR_0_3: BRR_0_3
0x4001100C C   FIELD 04w12 BRR_4_15: BRR_4_15
0x40011010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40011010 C   FIELD 00w08 PSC: Prescaler value
0x40011010 C   FIELD 08w08 GT: Guard time value
0x40011014 B  REGISTER RTOR (rw): Receiver timeout register
0x40011014 C   FIELD 00w24 RTO: Receiver timeout value
0x40011014 C   FIELD 24w08 BLEN: Block Length
0x40011018 B  REGISTER RQR (wo): Request register
0x40011018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40011018 C   FIELD 01w01 SBKRQ: Send break request
0x40011018 C   FIELD 02w01 MMRQ: Mute mode request
0x40011018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40011018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4001101C B  REGISTER ISR (ro): Interrupt & status register
0x4001101C C   FIELD 00w01 PE: PE
0x4001101C C   FIELD 01w01 FE: FE
0x4001101C C   FIELD 02w01 NF: NF
0x4001101C C   FIELD 03w01 ORE: ORE
0x4001101C C   FIELD 04w01 IDLE: IDLE
0x4001101C C   FIELD 05w01 RXNE: RXNE
0x4001101C C   FIELD 06w01 TC: TC
0x4001101C C   FIELD 07w01 TXE: TXE
0x4001101C C   FIELD 08w01 LBDF: LBDF
0x4001101C C   FIELD 09w01 CTSIF: CTSIF
0x4001101C C   FIELD 10w01 CTS: CTS
0x4001101C C   FIELD 11w01 RTOF: RTOF
0x4001101C C   FIELD 12w01 EOBF: EOBF
0x4001101C C   FIELD 13w01 UDR: SPI slave underrun error flag
0x4001101C C   FIELD 14w01 ABRE: ABRE
0x4001101C C   FIELD 15w01 ABRF: ABRF
0x4001101C C   FIELD 16w01 BUSY: BUSY
0x4001101C C   FIELD 17w01 CMF: CMF
0x4001101C C   FIELD 18w01 SBKF: SBKF
0x4001101C C   FIELD 19w01 RWU: RWU
0x4001101C C   FIELD 20w01 WUF: WUF
0x4001101C C   FIELD 21w01 TEACK: TEACK
0x4001101C C   FIELD 22w01 REACK: REACK
0x4001101C C   FIELD 23w01 TXFE: TXFIFO Empty
0x4001101C C   FIELD 24w01 RXFF: RXFIFO Full
0x4001101C C   FIELD 25w01 TCBGT: Transmission complete before guard time flag
0x4001101C C   FIELD 26w01 RXFT: RXFIFO threshold flag
0x4001101C C   FIELD 27w01 TXFT: TXFIFO threshold flag
0x40011020 B  REGISTER ICR (wo): Interrupt flag clear register
0x40011020 C   FIELD 00w01 PECF: Parity error clear flag
0x40011020 C   FIELD 01w01 FECF: Framing error clear flag
0x40011020 C   FIELD 02w01 NCF: Noise detected clear flag
0x40011020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40011020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40011020 C   FIELD 05w01 TXFECF: TXFIFO empty clear flag
0x40011020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40011020 C   FIELD 07w01 TCBGTCF: Transmission complete before Guard time clear flag
0x40011020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40011020 C   FIELD 09w01 CTSCF: CTS clear flag
0x40011020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40011020 C   FIELD 12w01 EOBCF: End of block clear flag
0x40011020 C   FIELD 13w01 UDRCF: SPI slave underrun clear flag
0x40011020 C   FIELD 17w01 CMCF: Character match clear flag
0x40011020 C   FIELD 20w01 WUCF: Wakeup from Stop mode clear flag
0x40011024 B  REGISTER RDR (ro): Receive data register
0x40011024 C   FIELD 00w09 RDR: Receive data value
0x40011028 B  REGISTER TDR (rw): Transmit data register
0x40011028 C   FIELD 00w09 TDR: Transmit data value
0x4001102C B  REGISTER PRESC (rw): Prescaler register
0x4001102C C   FIELD 00w04 PRESCALER: Clock prescaler
0x400113EC B  REGISTER HWCFGR2 (ro): USART Hardware Configuration register 2
0x400113EC C   FIELD 00w04 CFG1: CFG1
0x400113EC C   FIELD 04w04 CFG2: CFG2
0x400113F0 B  REGISTER HWCFGR1 (ro): USART Hardware Configuration register 1
0x400113F0 C   FIELD 00w04 CFG1: CFG1
0x400113F0 C   FIELD 04w04 CFG2: CFG2
0x400113F0 C   FIELD 08w04 CFG3: CFG3
0x400113F0 C   FIELD 12w04 CFG4: CFG4
0x400113F0 C   FIELD 16w04 CFG5: CFG5
0x400113F0 C   FIELD 20w04 CFG6: CFG6
0x400113F0 C   FIELD 24w04 CFG7: CFG7
0x400113F0 C   FIELD 28w04 CFG8: CFG8
0x400113F4 B  REGISTER VERR (ro): EXTI IP Version register
0x400113F4 C   FIELD 00w04 MINREV: Minor Revision number
0x400113F4 C   FIELD 04w04 MAJREV: Major Revision number
0x400113F8 B  REGISTER IPIDR (ro): EXTI Identification register
0x400113F8 C   FIELD 00w32 IPID: IP Identification
0x400113FC B  REGISTER SIDR (ro): EXTI Size ID register
0x400113FC C   FIELD 00w32 SID: Size Identification
0x40012000 A PERIPHERAL I2C1
0x40012000 B  REGISTER I2C_CR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2xi2c_pclk+6xi2c_ker_ck.
0x40012000 C   FIELD 00w01 PE: PE
0x40012000 C   FIELD 01w01 TXIE: TXIE
0x40012000 C   FIELD 02w01 RXIE: RXIE
0x40012000 C   FIELD 03w01 ADDRIE: ADDRIE
0x40012000 C   FIELD 04w01 NACKIE: NACKIE
0x40012000 C   FIELD 05w01 STOPIE: STOPIE
0x40012000 C   FIELD 06w01 TCIE: TCIE
0x40012000 C   FIELD 07w01 ERRIE: ERRIE
0x40012000 C   FIELD 08w04 DNF: DNF
0x40012000 C   FIELD 12w01 ANFOFF: ANFOFF
0x40012000 C   FIELD 14w01 TXDMAEN: TXDMAEN
0x40012000 C   FIELD 15w01 RXDMAEN: RXDMAEN
0x40012000 C   FIELD 16w01 SBC: SBC
0x40012000 C   FIELD 17w01 NOSTRETCH: NOSTRETCH
0x40012000 C   FIELD 18w01 WUPEN: WUPEN
0x40012000 C   FIELD 19w01 GCEN: GCEN
0x40012000 C   FIELD 20w01 SMBHEN: SMBHEN
0x40012000 C   FIELD 21w01 SMBDEN: SMBDEN
0x40012000 C   FIELD 22w01 ALERTEN: ALERTEN
0x40012000 C   FIELD 23w01 PECEN: PECEN
0x40012004 B  REGISTER I2C_CR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40012004 C   FIELD 00w10 SADD: SADD
0x40012004 C   FIELD 10w01 RD_WRN: RD_WRN
0x40012004 C   FIELD 11w01 ADD10: ADD10
0x40012004 C   FIELD 12w01 HEAD10R: HEAD10R
0x40012004 C   FIELD 13w01 START: START
0x40012004 C   FIELD 14w01 STOP: STOP
0x40012004 C   FIELD 15w01 NACK: NACK
0x40012004 C   FIELD 16w08 NBYTES: NBYTES
0x40012004 C   FIELD 24w01 RELOAD: RELOAD
0x40012004 C   FIELD 25w01 AUTOEND: AUTOEND
0x40012004 C   FIELD 26w01 PECBYTE: PECBYTE
0x40012008 B  REGISTER I2C_OAR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40012008 C   FIELD 00w10 OA1: OA1
0x40012008 C   FIELD 10w01 OA1MODE: OA1MODE
0x40012008 C   FIELD 15w01 OA1EN: OA1EN
0x4001200C B  REGISTER I2C_OAR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x4001200C C   FIELD 01w07 OA2: OA2
0x4001200C C   FIELD 08w03 OA2MSK: OA2MSK
0x4001200C C   FIELD 15w01 OA2EN: OA2EN
0x40012010 B  REGISTER I2C_TIMINGR (rw): Access: No wait states
0x40012010 C   FIELD 00w08 SCLL: SCLL
0x40012010 C   FIELD 08w08 SCLH: SCLH
0x40012010 C   FIELD 16w04 SDADEL: SDADEL
0x40012010 C   FIELD 20w04 SCLDEL: SCLDEL
0x40012010 C   FIELD 28w04 PRESC: PRESC
0x40012014 B  REGISTER I2C_TIMEOUTR (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40012014 C   FIELD 00w12 TIMEOUTA: TIMEOUTA
0x40012014 C   FIELD 12w01 TIDLE: TIDLE
0x40012014 C   FIELD 15w01 TIMOUTEN: TIMOUTEN
0x40012014 C   FIELD 16w12 TIMEOUTB: TIMEOUTB
0x40012014 C   FIELD 31w01 TEXTEN: TEXTEN
0x40012018 B  REGISTER I2C_ISR: Access: No wait states
0x40012018 C   FIELD 00w01 TXE (rw): TXE
0x40012018 C   FIELD 01w01 TXIS (rw): TXIS
0x40012018 C   FIELD 02w01 RXNE (ro): RXNE
0x40012018 C   FIELD 03w01 ADDR (ro): ADDR
0x40012018 C   FIELD 04w01 NACKF (ro): NACKF
0x40012018 C   FIELD 05w01 STOPF (ro): STOPF
0x40012018 C   FIELD 06w01 TC (ro): TC
0x40012018 C   FIELD 07w01 TCR (ro): TCR
0x40012018 C   FIELD 08w01 BERR (ro): BERR
0x40012018 C   FIELD 09w01 ARLO (ro): ARLO
0x40012018 C   FIELD 10w01 OVR (ro): OVR
0x40012018 C   FIELD 11w01 PECERR (ro): PECERR
0x40012018 C   FIELD 12w01 TIMEOUT (ro): TIMEOUT
0x40012018 C   FIELD 13w01 ALERT (ro): ALERT
0x40012018 C   FIELD 15w01 BUSY (ro): BUSY
0x40012018 C   FIELD 16w01 DIR (ro): DIR
0x40012018 C   FIELD 17w07 ADDCODE (ro): ADDCODE
0x4001201C B  REGISTER I2C_ICR (wo): Access: No wait states
0x4001201C C   FIELD 03w01 ADDRCF: ADDRCF
0x4001201C C   FIELD 04w01 NACKCF: NACKCF
0x4001201C C   FIELD 05w01 STOPCF: STOPCF
0x4001201C C   FIELD 08w01 BERRCF: BERRCF
0x4001201C C   FIELD 09w01 ARLOCF: ARLOCF
0x4001201C C   FIELD 10w01 OVRCF: OVRCF
0x4001201C C   FIELD 11w01 PECCF: PECCF
0x4001201C C   FIELD 12w01 TIMOUTCF: TIMOUTCF
0x4001201C C   FIELD 13w01 ALERTCF: ALERTCF
0x40012020 B  REGISTER I2C_PECR (ro): Access: No wait states
0x40012020 C   FIELD 00w08 PEC: PEC
0x40012024 B  REGISTER I2C_RXDR (ro): Access: No wait states
0x40012024 C   FIELD 00w08 RXDATA: RXDATA
0x40012028 B  REGISTER I2C_TXDR (rw): Access: No wait states
0x40012028 C   FIELD 00w08 TXDATA: TXDATA
0x400123F0 B  REGISTER I2C_HWCFGR (ro): I2C hardware configuration register
0x400123F0 C   FIELD 00w04 SMBUS: SMBUS
0x400123F0 C   FIELD 04w04 ASYN: ASYN
0x400123F0 C   FIELD 08w04 WKP: WKP
0x400123F4 B  REGISTER I2C_VERR (ro): I2C version register
0x400123F4 C   FIELD 00w04 MINREV: MINREV
0x400123F4 C   FIELD 04w04 MAJREV: MAJREV
0x400123F8 B  REGISTER I2C_IPIDR (ro): I2C identification register
0x400123F8 C   FIELD 00w32 ID: ID
0x400123FC B  REGISTER I2C_SIDR (ro): I2C size identification register
0x400123FC C   FIELD 00w32 SID: SID
0x40013000 A PERIPHERAL I2C2
0x40013000 B  REGISTER I2C_CR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2xi2c_pclk+6xi2c_ker_ck.
0x40013000 C   FIELD 00w01 PE: PE
0x40013000 C   FIELD 01w01 TXIE: TXIE
0x40013000 C   FIELD 02w01 RXIE: RXIE
0x40013000 C   FIELD 03w01 ADDRIE: ADDRIE
0x40013000 C   FIELD 04w01 NACKIE: NACKIE
0x40013000 C   FIELD 05w01 STOPIE: STOPIE
0x40013000 C   FIELD 06w01 TCIE: TCIE
0x40013000 C   FIELD 07w01 ERRIE: ERRIE
0x40013000 C   FIELD 08w04 DNF: DNF
0x40013000 C   FIELD 12w01 ANFOFF: ANFOFF
0x40013000 C   FIELD 14w01 TXDMAEN: TXDMAEN
0x40013000 C   FIELD 15w01 RXDMAEN: RXDMAEN
0x40013000 C   FIELD 16w01 SBC: SBC
0x40013000 C   FIELD 17w01 NOSTRETCH: NOSTRETCH
0x40013000 C   FIELD 18w01 WUPEN: WUPEN
0x40013000 C   FIELD 19w01 GCEN: GCEN
0x40013000 C   FIELD 20w01 SMBHEN: SMBHEN
0x40013000 C   FIELD 21w01 SMBDEN: SMBDEN
0x40013000 C   FIELD 22w01 ALERTEN: ALERTEN
0x40013000 C   FIELD 23w01 PECEN: PECEN
0x40013004 B  REGISTER I2C_CR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40013004 C   FIELD 00w10 SADD: SADD
0x40013004 C   FIELD 10w01 RD_WRN: RD_WRN
0x40013004 C   FIELD 11w01 ADD10: ADD10
0x40013004 C   FIELD 12w01 HEAD10R: HEAD10R
0x40013004 C   FIELD 13w01 START: START
0x40013004 C   FIELD 14w01 STOP: STOP
0x40013004 C   FIELD 15w01 NACK: NACK
0x40013004 C   FIELD 16w08 NBYTES: NBYTES
0x40013004 C   FIELD 24w01 RELOAD: RELOAD
0x40013004 C   FIELD 25w01 AUTOEND: AUTOEND
0x40013004 C   FIELD 26w01 PECBYTE: PECBYTE
0x40013008 B  REGISTER I2C_OAR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40013008 C   FIELD 00w10 OA1: OA1
0x40013008 C   FIELD 10w01 OA1MODE: OA1MODE
0x40013008 C   FIELD 15w01 OA1EN: OA1EN
0x4001300C B  REGISTER I2C_OAR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x4001300C C   FIELD 01w07 OA2: OA2
0x4001300C C   FIELD 08w03 OA2MSK: OA2MSK
0x4001300C C   FIELD 15w01 OA2EN: OA2EN
0x40013010 B  REGISTER I2C_TIMINGR (rw): Access: No wait states
0x40013010 C   FIELD 00w08 SCLL: SCLL
0x40013010 C   FIELD 08w08 SCLH: SCLH
0x40013010 C   FIELD 16w04 SDADEL: SDADEL
0x40013010 C   FIELD 20w04 SCLDEL: SCLDEL
0x40013010 C   FIELD 28w04 PRESC: PRESC
0x40013014 B  REGISTER I2C_TIMEOUTR (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40013014 C   FIELD 00w12 TIMEOUTA: TIMEOUTA
0x40013014 C   FIELD 12w01 TIDLE: TIDLE
0x40013014 C   FIELD 15w01 TIMOUTEN: TIMOUTEN
0x40013014 C   FIELD 16w12 TIMEOUTB: TIMEOUTB
0x40013014 C   FIELD 31w01 TEXTEN: TEXTEN
0x40013018 B  REGISTER I2C_ISR: Access: No wait states
0x40013018 C   FIELD 00w01 TXE (rw): TXE
0x40013018 C   FIELD 01w01 TXIS (rw): TXIS
0x40013018 C   FIELD 02w01 RXNE (ro): RXNE
0x40013018 C   FIELD 03w01 ADDR (ro): ADDR
0x40013018 C   FIELD 04w01 NACKF (ro): NACKF
0x40013018 C   FIELD 05w01 STOPF (ro): STOPF
0x40013018 C   FIELD 06w01 TC (ro): TC
0x40013018 C   FIELD 07w01 TCR (ro): TCR
0x40013018 C   FIELD 08w01 BERR (ro): BERR
0x40013018 C   FIELD 09w01 ARLO (ro): ARLO
0x40013018 C   FIELD 10w01 OVR (ro): OVR
0x40013018 C   FIELD 11w01 PECERR (ro): PECERR
0x40013018 C   FIELD 12w01 TIMEOUT (ro): TIMEOUT
0x40013018 C   FIELD 13w01 ALERT (ro): ALERT
0x40013018 C   FIELD 15w01 BUSY (ro): BUSY
0x40013018 C   FIELD 16w01 DIR (ro): DIR
0x40013018 C   FIELD 17w07 ADDCODE (ro): ADDCODE
0x4001301C B  REGISTER I2C_ICR (wo): Access: No wait states
0x4001301C C   FIELD 03w01 ADDRCF: ADDRCF
0x4001301C C   FIELD 04w01 NACKCF: NACKCF
0x4001301C C   FIELD 05w01 STOPCF: STOPCF
0x4001301C C   FIELD 08w01 BERRCF: BERRCF
0x4001301C C   FIELD 09w01 ARLOCF: ARLOCF
0x4001301C C   FIELD 10w01 OVRCF: OVRCF
0x4001301C C   FIELD 11w01 PECCF: PECCF
0x4001301C C   FIELD 12w01 TIMOUTCF: TIMOUTCF
0x4001301C C   FIELD 13w01 ALERTCF: ALERTCF
0x40013020 B  REGISTER I2C_PECR (ro): Access: No wait states
0x40013020 C   FIELD 00w08 PEC: PEC
0x40013024 B  REGISTER I2C_RXDR (ro): Access: No wait states
0x40013024 C   FIELD 00w08 RXDATA: RXDATA
0x40013028 B  REGISTER I2C_TXDR (rw): Access: No wait states
0x40013028 C   FIELD 00w08 TXDATA: TXDATA
0x400133F0 B  REGISTER I2C_HWCFGR (ro): I2C hardware configuration register
0x400133F0 C   FIELD 00w04 SMBUS: SMBUS
0x400133F0 C   FIELD 04w04 ASYN: ASYN
0x400133F0 C   FIELD 08w04 WKP: WKP
0x400133F4 B  REGISTER I2C_VERR (ro): I2C version register
0x400133F4 C   FIELD 00w04 MINREV: MINREV
0x400133F4 C   FIELD 04w04 MAJREV: MAJREV
0x400133F8 B  REGISTER I2C_IPIDR (ro): I2C identification register
0x400133F8 C   FIELD 00w32 ID: ID
0x400133FC B  REGISTER I2C_SIDR (ro): I2C size identification register
0x400133FC C   FIELD 00w32 SID: SID
0x40014000 A PERIPHERAL I2C3
0x40014000 B  REGISTER I2C_CR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2xi2c_pclk+6xi2c_ker_ck.
0x40014000 C   FIELD 00w01 PE: PE
0x40014000 C   FIELD 01w01 TXIE: TXIE
0x40014000 C   FIELD 02w01 RXIE: RXIE
0x40014000 C   FIELD 03w01 ADDRIE: ADDRIE
0x40014000 C   FIELD 04w01 NACKIE: NACKIE
0x40014000 C   FIELD 05w01 STOPIE: STOPIE
0x40014000 C   FIELD 06w01 TCIE: TCIE
0x40014000 C   FIELD 07w01 ERRIE: ERRIE
0x40014000 C   FIELD 08w04 DNF: DNF
0x40014000 C   FIELD 12w01 ANFOFF: ANFOFF
0x40014000 C   FIELD 14w01 TXDMAEN: TXDMAEN
0x40014000 C   FIELD 15w01 RXDMAEN: RXDMAEN
0x40014000 C   FIELD 16w01 SBC: SBC
0x40014000 C   FIELD 17w01 NOSTRETCH: NOSTRETCH
0x40014000 C   FIELD 18w01 WUPEN: WUPEN
0x40014000 C   FIELD 19w01 GCEN: GCEN
0x40014000 C   FIELD 20w01 SMBHEN: SMBHEN
0x40014000 C   FIELD 21w01 SMBDEN: SMBDEN
0x40014000 C   FIELD 22w01 ALERTEN: ALERTEN
0x40014000 C   FIELD 23w01 PECEN: PECEN
0x40014004 B  REGISTER I2C_CR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40014004 C   FIELD 00w10 SADD: SADD
0x40014004 C   FIELD 10w01 RD_WRN: RD_WRN
0x40014004 C   FIELD 11w01 ADD10: ADD10
0x40014004 C   FIELD 12w01 HEAD10R: HEAD10R
0x40014004 C   FIELD 13w01 START: START
0x40014004 C   FIELD 14w01 STOP: STOP
0x40014004 C   FIELD 15w01 NACK: NACK
0x40014004 C   FIELD 16w08 NBYTES: NBYTES
0x40014004 C   FIELD 24w01 RELOAD: RELOAD
0x40014004 C   FIELD 25w01 AUTOEND: AUTOEND
0x40014004 C   FIELD 26w01 PECBYTE: PECBYTE
0x40014008 B  REGISTER I2C_OAR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40014008 C   FIELD 00w10 OA1: OA1
0x40014008 C   FIELD 10w01 OA1MODE: OA1MODE
0x40014008 C   FIELD 15w01 OA1EN: OA1EN
0x4001400C B  REGISTER I2C_OAR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x4001400C C   FIELD 01w07 OA2: OA2
0x4001400C C   FIELD 08w03 OA2MSK: OA2MSK
0x4001400C C   FIELD 15w01 OA2EN: OA2EN
0x40014010 B  REGISTER I2C_TIMINGR (rw): Access: No wait states
0x40014010 C   FIELD 00w08 SCLL: SCLL
0x40014010 C   FIELD 08w08 SCLH: SCLH
0x40014010 C   FIELD 16w04 SDADEL: SDADEL
0x40014010 C   FIELD 20w04 SCLDEL: SCLDEL
0x40014010 C   FIELD 28w04 PRESC: PRESC
0x40014014 B  REGISTER I2C_TIMEOUTR (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40014014 C   FIELD 00w12 TIMEOUTA: TIMEOUTA
0x40014014 C   FIELD 12w01 TIDLE: TIDLE
0x40014014 C   FIELD 15w01 TIMOUTEN: TIMOUTEN
0x40014014 C   FIELD 16w12 TIMEOUTB: TIMEOUTB
0x40014014 C   FIELD 31w01 TEXTEN: TEXTEN
0x40014018 B  REGISTER I2C_ISR: Access: No wait states
0x40014018 C   FIELD 00w01 TXE (rw): TXE
0x40014018 C   FIELD 01w01 TXIS (rw): TXIS
0x40014018 C   FIELD 02w01 RXNE (ro): RXNE
0x40014018 C   FIELD 03w01 ADDR (ro): ADDR
0x40014018 C   FIELD 04w01 NACKF (ro): NACKF
0x40014018 C   FIELD 05w01 STOPF (ro): STOPF
0x40014018 C   FIELD 06w01 TC (ro): TC
0x40014018 C   FIELD 07w01 TCR (ro): TCR
0x40014018 C   FIELD 08w01 BERR (ro): BERR
0x40014018 C   FIELD 09w01 ARLO (ro): ARLO
0x40014018 C   FIELD 10w01 OVR (ro): OVR
0x40014018 C   FIELD 11w01 PECERR (ro): PECERR
0x40014018 C   FIELD 12w01 TIMEOUT (ro): TIMEOUT
0x40014018 C   FIELD 13w01 ALERT (ro): ALERT
0x40014018 C   FIELD 15w01 BUSY (ro): BUSY
0x40014018 C   FIELD 16w01 DIR (ro): DIR
0x40014018 C   FIELD 17w07 ADDCODE (ro): ADDCODE
0x4001401C B  REGISTER I2C_ICR (wo): Access: No wait states
0x4001401C C   FIELD 03w01 ADDRCF: ADDRCF
0x4001401C C   FIELD 04w01 NACKCF: NACKCF
0x4001401C C   FIELD 05w01 STOPCF: STOPCF
0x4001401C C   FIELD 08w01 BERRCF: BERRCF
0x4001401C C   FIELD 09w01 ARLOCF: ARLOCF
0x4001401C C   FIELD 10w01 OVRCF: OVRCF
0x4001401C C   FIELD 11w01 PECCF: PECCF
0x4001401C C   FIELD 12w01 TIMOUTCF: TIMOUTCF
0x4001401C C   FIELD 13w01 ALERTCF: ALERTCF
0x40014020 B  REGISTER I2C_PECR (ro): Access: No wait states
0x40014020 C   FIELD 00w08 PEC: PEC
0x40014024 B  REGISTER I2C_RXDR (ro): Access: No wait states
0x40014024 C   FIELD 00w08 RXDATA: RXDATA
0x40014028 B  REGISTER I2C_TXDR (rw): Access: No wait states
0x40014028 C   FIELD 00w08 TXDATA: TXDATA
0x400143F0 B  REGISTER I2C_HWCFGR (ro): I2C hardware configuration register
0x400143F0 C   FIELD 00w04 SMBUS: SMBUS
0x400143F0 C   FIELD 04w04 ASYN: ASYN
0x400143F0 C   FIELD 08w04 WKP: WKP
0x400143F4 B  REGISTER I2C_VERR (ro): I2C version register
0x400143F4 C   FIELD 00w04 MINREV: MINREV
0x400143F4 C   FIELD 04w04 MAJREV: MAJREV
0x400143F8 B  REGISTER I2C_IPIDR (ro): I2C identification register
0x400143F8 C   FIELD 00w32 ID: ID
0x400143FC B  REGISTER I2C_SIDR (ro): I2C size identification register
0x400143FC C   FIELD 00w32 SID: SID
0x40015000 A PERIPHERAL I2C5
0x40015000 B  REGISTER I2C_CR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2xi2c_pclk+6xi2c_ker_ck.
0x40015000 C   FIELD 00w01 PE: PE
0x40015000 C   FIELD 01w01 TXIE: TXIE
0x40015000 C   FIELD 02w01 RXIE: RXIE
0x40015000 C   FIELD 03w01 ADDRIE: ADDRIE
0x40015000 C   FIELD 04w01 NACKIE: NACKIE
0x40015000 C   FIELD 05w01 STOPIE: STOPIE
0x40015000 C   FIELD 06w01 TCIE: TCIE
0x40015000 C   FIELD 07w01 ERRIE: ERRIE
0x40015000 C   FIELD 08w04 DNF: DNF
0x40015000 C   FIELD 12w01 ANFOFF: ANFOFF
0x40015000 C   FIELD 14w01 TXDMAEN: TXDMAEN
0x40015000 C   FIELD 15w01 RXDMAEN: RXDMAEN
0x40015000 C   FIELD 16w01 SBC: SBC
0x40015000 C   FIELD 17w01 NOSTRETCH: NOSTRETCH
0x40015000 C   FIELD 18w01 WUPEN: WUPEN
0x40015000 C   FIELD 19w01 GCEN: GCEN
0x40015000 C   FIELD 20w01 SMBHEN: SMBHEN
0x40015000 C   FIELD 21w01 SMBDEN: SMBDEN
0x40015000 C   FIELD 22w01 ALERTEN: ALERTEN
0x40015000 C   FIELD 23w01 PECEN: PECEN
0x40015004 B  REGISTER I2C_CR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40015004 C   FIELD 00w10 SADD: SADD
0x40015004 C   FIELD 10w01 RD_WRN: RD_WRN
0x40015004 C   FIELD 11w01 ADD10: ADD10
0x40015004 C   FIELD 12w01 HEAD10R: HEAD10R
0x40015004 C   FIELD 13w01 START: START
0x40015004 C   FIELD 14w01 STOP: STOP
0x40015004 C   FIELD 15w01 NACK: NACK
0x40015004 C   FIELD 16w08 NBYTES: NBYTES
0x40015004 C   FIELD 24w01 RELOAD: RELOAD
0x40015004 C   FIELD 25w01 AUTOEND: AUTOEND
0x40015004 C   FIELD 26w01 PECBYTE: PECBYTE
0x40015008 B  REGISTER I2C_OAR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40015008 C   FIELD 00w10 OA1: OA1
0x40015008 C   FIELD 10w01 OA1MODE: OA1MODE
0x40015008 C   FIELD 15w01 OA1EN: OA1EN
0x4001500C B  REGISTER I2C_OAR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x4001500C C   FIELD 01w07 OA2: OA2
0x4001500C C   FIELD 08w03 OA2MSK: OA2MSK
0x4001500C C   FIELD 15w01 OA2EN: OA2EN
0x40015010 B  REGISTER I2C_TIMINGR (rw): Access: No wait states
0x40015010 C   FIELD 00w08 SCLL: SCLL
0x40015010 C   FIELD 08w08 SCLH: SCLH
0x40015010 C   FIELD 16w04 SDADEL: SDADEL
0x40015010 C   FIELD 20w04 SCLDEL: SCLDEL
0x40015010 C   FIELD 28w04 PRESC: PRESC
0x40015014 B  REGISTER I2C_TIMEOUTR (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x40015014 C   FIELD 00w12 TIMEOUTA: TIMEOUTA
0x40015014 C   FIELD 12w01 TIDLE: TIDLE
0x40015014 C   FIELD 15w01 TIMOUTEN: TIMOUTEN
0x40015014 C   FIELD 16w12 TIMEOUTB: TIMEOUTB
0x40015014 C   FIELD 31w01 TEXTEN: TEXTEN
0x40015018 B  REGISTER I2C_ISR: Access: No wait states
0x40015018 C   FIELD 00w01 TXE (rw): TXE
0x40015018 C   FIELD 01w01 TXIS (rw): TXIS
0x40015018 C   FIELD 02w01 RXNE (ro): RXNE
0x40015018 C   FIELD 03w01 ADDR (ro): ADDR
0x40015018 C   FIELD 04w01 NACKF (ro): NACKF
0x40015018 C   FIELD 05w01 STOPF (ro): STOPF
0x40015018 C   FIELD 06w01 TC (ro): TC
0x40015018 C   FIELD 07w01 TCR (ro): TCR
0x40015018 C   FIELD 08w01 BERR (ro): BERR
0x40015018 C   FIELD 09w01 ARLO (ro): ARLO
0x40015018 C   FIELD 10w01 OVR (ro): OVR
0x40015018 C   FIELD 11w01 PECERR (ro): PECERR
0x40015018 C   FIELD 12w01 TIMEOUT (ro): TIMEOUT
0x40015018 C   FIELD 13w01 ALERT (ro): ALERT
0x40015018 C   FIELD 15w01 BUSY (ro): BUSY
0x40015018 C   FIELD 16w01 DIR (ro): DIR
0x40015018 C   FIELD 17w07 ADDCODE (ro): ADDCODE
0x4001501C B  REGISTER I2C_ICR (wo): Access: No wait states
0x4001501C C   FIELD 03w01 ADDRCF: ADDRCF
0x4001501C C   FIELD 04w01 NACKCF: NACKCF
0x4001501C C   FIELD 05w01 STOPCF: STOPCF
0x4001501C C   FIELD 08w01 BERRCF: BERRCF
0x4001501C C   FIELD 09w01 ARLOCF: ARLOCF
0x4001501C C   FIELD 10w01 OVRCF: OVRCF
0x4001501C C   FIELD 11w01 PECCF: PECCF
0x4001501C C   FIELD 12w01 TIMOUTCF: TIMOUTCF
0x4001501C C   FIELD 13w01 ALERTCF: ALERTCF
0x40015020 B  REGISTER I2C_PECR (ro): Access: No wait states
0x40015020 C   FIELD 00w08 PEC: PEC
0x40015024 B  REGISTER I2C_RXDR (ro): Access: No wait states
0x40015024 C   FIELD 00w08 RXDATA: RXDATA
0x40015028 B  REGISTER I2C_TXDR (rw): Access: No wait states
0x40015028 C   FIELD 00w08 TXDATA: TXDATA
0x400153F0 B  REGISTER I2C_HWCFGR (ro): I2C hardware configuration register
0x400153F0 C   FIELD 00w04 SMBUS: SMBUS
0x400153F0 C   FIELD 04w04 ASYN: ASYN
0x400153F0 C   FIELD 08w04 WKP: WKP
0x400153F4 B  REGISTER I2C_VERR (ro): I2C version register
0x400153F4 C   FIELD 00w04 MINREV: MINREV
0x400153F4 C   FIELD 04w04 MAJREV: MAJREV
0x400153F8 B  REGISTER I2C_IPIDR (ro): I2C identification register
0x400153F8 C   FIELD 00w32 ID: ID
0x400153FC B  REGISTER I2C_SIDR (ro): I2C size identification register
0x400153FC C   FIELD 00w32 SID: SID
0x40016000 A PERIPHERAL HDMI_CEC
0x40016000 B  REGISTER CEC_CR (rw): CEC control register
0x40016000 C   FIELD 00w01 CECEN (rw): CECEN
0x40016000 C   FIELD 01w01 TXSOM (rw): TXSOM
0x40016000 C   FIELD 02w01 TXEOM (rw): TXEOM
0x40016004 B  REGISTER CEC_CFGR (rw): This register is used to configure the HDMI-CEC controller. It is mandatory to write CEC_CFGR only when CECEN=0.
0x40016004 C   FIELD 00w03 SFT (rw): SFT
0x40016004 C   FIELD 03w01 RXTOL (rw): RXTOL
0x40016004 C   FIELD 04w01 BRESTP (rw): BRESTP
0x40016004 C   FIELD 05w01 BREGEN (rw): BREGEN
0x40016004 C   FIELD 06w01 LBPEGEN (rw): LBPEGEN
0x40016004 C   FIELD 07w01 BRDNOGEN (rw): BRDNOGEN
0x40016004 C   FIELD 08w01 SFTOP (rw): SFTOP
0x40016004 C   FIELD 16w15 OAR (rw): OAR
0x40016004 C   FIELD 31w01 LSTN (rw): LSTN
0x40016008 B  REGISTER CEC_TXDR (rw): CEC Tx data register
0x40016008 C   FIELD 00w08 TXD (wo): TXD
0x4001600C B  REGISTER CEC_RXDR (ro): CEC Rx data register
0x4001600C C   FIELD 00w08 RXD (ro): RXD
0x40016010 B  REGISTER CEC_ISR (rw): CEC Interrupt and Status Register
0x40016010 C   FIELD 00w01 RXBR (rw): RXBR
0x40016010 C   FIELD 01w01 RXEND (rw): RXEND
0x40016010 C   FIELD 02w01 RXOVR (rw): RXOVR
0x40016010 C   FIELD 03w01 BRE (rw): BRE
0x40016010 C   FIELD 04w01 SBPE (rw): SBPE
0x40016010 C   FIELD 05w01 LBPE (rw): LBPE
0x40016010 C   FIELD 06w01 RXACKE (rw): RXACKE
0x40016010 C   FIELD 07w01 ARBLST (rw): ARBLST
0x40016010 C   FIELD 08w01 TXBR (rw): TXBR
0x40016010 C   FIELD 09w01 TXEND (rw): TXEND
0x40016010 C   FIELD 10w01 TXUDR (rw): TXUDR
0x40016010 C   FIELD 11w01 TXERR (rw): TXERR
0x40016010 C   FIELD 12w01 TXACKE (rw): TXACKE
0x40016014 B  REGISTER CEC_IER (rw): CEC interrupt enable register
0x40016014 C   FIELD 00w01 RXBRIE (rw): RXBRIE
0x40016014 C   FIELD 01w01 RXENDIE (rw): RXENDIE
0x40016014 C   FIELD 02w01 RXOVRIE (rw): RXOVRIE
0x40016014 C   FIELD 03w01 BREIE (rw): BREIE
0x40016014 C   FIELD 04w01 SBPEIE (rw): SBPEIE
0x40016014 C   FIELD 05w01 LBPEIE (rw): LBPEIE
0x40016014 C   FIELD 06w01 RXACKIE (rw): RXACKIE
0x40016014 C   FIELD 07w01 ARBLSTIE (rw): ARBLSTIE
0x40016014 C   FIELD 08w01 TXBRIE (rw): TXBRIE
0x40016014 C   FIELD 09w01 TXENDIE (rw): TXENDIE
0x40016014 C   FIELD 10w01 TXUDRIE (rw): TXUDRIE
0x40016014 C   FIELD 11w01 TXERRIE (rw): TXERRIE
0x40016014 C   FIELD 12w01 TXACKIE (rw): TXACKIE
0x40017000 A PERIPHERAL DAC1
0x40017000 B  REGISTER DAC_CR (rw): DAC control register
0x40017000 C   FIELD 00w01 EN1: EN1
0x40017000 C   FIELD 01w01 TEN1: TEN1
0x40017000 C   FIELD 02w01 TSEL10: TSEL10
0x40017000 C   FIELD 03w01 TSEL11: TSEL11
0x40017000 C   FIELD 04w01 TSEL12: TSEL12
0x40017000 C   FIELD 05w01 TSEL13: TSEL13
0x40017000 C   FIELD 06w02 WAVE1: WAVE1
0x40017000 C   FIELD 08w04 MAMP1: MAMP1
0x40017000 C   FIELD 12w01 DMAEN1: DMAEN1
0x40017000 C   FIELD 13w01 DMAUDRIE1: DMAUDRIE1
0x40017000 C   FIELD 14w01 CEN1: CEN1
0x40017000 C   FIELD 15w01 HFSEL: HFSEL
0x40017000 C   FIELD 16w01 EN2: EN2
0x40017000 C   FIELD 17w01 TEN2: TEN2
0x40017000 C   FIELD 18w01 TSEL20: TSEL20
0x40017000 C   FIELD 19w01 TSEL21: TSEL21
0x40017000 C   FIELD 20w01 TSEL22: TSEL22
0x40017000 C   FIELD 21w01 TSEL23: TSEL23
0x40017000 C   FIELD 22w02 WAVE2: WAVE2
0x40017000 C   FIELD 24w04 MAMP2: MAMP2
0x40017000 C   FIELD 28w01 DMAEN2: DMAEN2
0x40017000 C   FIELD 29w01 DMAUDRIE2: DMAUDRIE2
0x40017000 C   FIELD 30w01 CEN2: CEN2
0x40017004 B  REGISTER DAC_SWTRGR (wo): DAC software trigger register
0x40017004 C   FIELD 00w01 SWTRIG1: SWTRIG1
0x40017004 C   FIELD 01w01 SWTRIG2: SWTRIG2
0x40017008 B  REGISTER DAC_DHR12R1 (rw): DAC channel1 12-bit right-aligned data holding register
0x40017008 C   FIELD 00w12 DACC1DHR: DACC1DHR
0x4001700C B  REGISTER DAC_DHR12L1 (rw): DAC channel1 12-bit left aligned data holding register
0x4001700C C   FIELD 04w12 DACC1DHR: DACC1DHR
0x40017010 B  REGISTER DAC_DHR8R1 (rw): DAC channel1 8-bit right aligned data holding register
0x40017010 C   FIELD 00w08 DACC1DHR: DACC1DHR
0x40017014 B  REGISTER DAC_DHR12R2 (rw): This register is available only on dual-channel DACs. Refer to Section29.3: DAC implementation.
0x40017014 C   FIELD 00w12 DACC2DHR: DACC2DHR
0x40017018 B  REGISTER DAC_DHR12L2 (rw): This register is available only on dual-channel DACs. Refer to Section29.3: DAC implementation.
0x40017018 C   FIELD 04w12 DACC2DHR: DACC2DHR
0x4001701C B  REGISTER DAC_DHR8R2 (rw): This register is available only on dual-channel DACs. Refer to Section29.3: DAC implementation.
0x4001701C C   FIELD 00w08 DACC2DHR: DACC2DHR
0x40017020 B  REGISTER DAC_DHR12RD (rw): Dual DAC 12-bit right-aligned data holding register
0x40017020 C   FIELD 00w12 DACC1DHR: DACC1DHR
0x40017020 C   FIELD 16w12 DACC2DHR: DACC2DHR
0x40017024 B  REGISTER DAC_DHR12LD (rw): Dual DAC 12-bit left aligned data holding register
0x40017024 C   FIELD 04w12 DACC1DHR: DACC1DHR
0x40017024 C   FIELD 20w12 DACC2DHR: DACC2DHR
0x40017028 B  REGISTER DAC_DHR8RD (rw): Dual DAC 8-bit right aligned data holding register
0x40017028 C   FIELD 00w08 DACC1DHR: DACC1DHR
0x40017028 C   FIELD 08w08 DACC2DHR: DACC2DHR
0x4001702C B  REGISTER DAC_DOR1 (ro): DAC channel1 data output register
0x4001702C C   FIELD 00w12 DACC1DOR: DACC1DOR
0x40017030 B  REGISTER DAC_DOR2 (ro): This register is available only on dual-channel DACs. Refer to Section29.3: DAC implementation.
0x40017030 C   FIELD 00w12 DACC2DOR: DACC2DOR
0x40017034 B  REGISTER DAC_SR: DAC status register
0x40017034 C   FIELD 13w01 DMAUDR1 (rw): DMAUDR1
0x40017034 C   FIELD 14w01 CAL_FLAG1 (ro): CAL_FLAG1
0x40017034 C   FIELD 15w01 BWST1 (ro): BWST1
0x40017034 C   FIELD 29w01 DMAUDR2 (rw): DMAUDR2
0x40017034 C   FIELD 30w01 CAL_FLAG2 (ro): CAL_FLAG2
0x40017034 C   FIELD 31w01 BWST2 (ro): BWST2
0x40017038 B  REGISTER DAC_CCR (rw): DAC calibration control register
0x40017038 C   FIELD 00w05 OTRIM1: OTRIM1
0x40017038 C   FIELD 16w05 OTRIM2: OTRIM2
0x4001703C B  REGISTER DAC_MCR (rw): DAC mode control register
0x4001703C C   FIELD 00w03 MODE1: MODE1
0x4001703C C   FIELD 16w03 MODE2: MODE2
0x40017040 B  REGISTER DAC_SHSR1 (rw): DAC channel 1 sample and hold sample time register
0x40017040 C   FIELD 00w10 TSAMPLE1: TSAMPLE1
0x40017044 B  REGISTER DAC_SHSR2 (rw): This register is available only on dual-channel DACs. Refer to Section29.3: DAC implementation.
0x40017044 C   FIELD 00w10 TSAMPLE2: TSAMPLE2
0x40017048 B  REGISTER DAC_SHHR (rw): DAC sample and hold time register
0x40017048 C   FIELD 00w10 THOLD1: THOLD1
0x40017048 C   FIELD 16w10 THOLD2: THOLD2
0x4001704C B  REGISTER DAC_SHRR (rw): DAC sample and hold refresh time register
0x4001704C C   FIELD 00w08 TREFRESH1: TREFRESH1
0x4001704C C   FIELD 16w08 TREFRESH2: TREFRESH2
0x400173F0 B  REGISTER DAC_HWCFGR0 (ro): DAC IP hardware configuration register
0x400173F0 C   FIELD 00w04 DUAL: DUAL
0x400173F0 C   FIELD 04w04 LFSR: LFSR
0x400173F0 C   FIELD 08w04 TRIANGLE: TRIANGLE
0x400173F0 C   FIELD 12w04 SAMPLE: SAMPLE
0x400173F0 C   FIELD 16w08 OR_CFG: OR_CFG
0x400173F4 B  REGISTER DAC_VERR (ro): No
0x400173F4 C   FIELD 00w04 MINREV: MINREV
0x400173F4 C   FIELD 04w04 MAJREV: MAJREV
0x400173F8 B  REGISTER DAC_IPIDR (ro): No
0x400173F8 C   FIELD 00w32 ID: ID
0x400173FC B  REGISTER DAC_SIDR (ro): No
0x400173FC C   FIELD 00w32 SID: SID
0x40018000 A PERIPHERAL USART7
0x40018000 B  REGISTER CR1 (rw): Control register 1
0x40018000 C   FIELD 00w01 UE: USART enable
0x40018000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40018000 C   FIELD 02w01 RE: Receiver enable
0x40018000 C   FIELD 03w01 TE: Transmitter enable
0x40018000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40018000 C   FIELD 05w01 RXNEIE: RXNE interrupt enable
0x40018000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40018000 C   FIELD 07w01 TXEIE: interrupt enable
0x40018000 C   FIELD 08w01 PEIE: PE interrupt enable
0x40018000 C   FIELD 09w01 PS: Parity selection
0x40018000 C   FIELD 10w01 PCE: Parity control enable
0x40018000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40018000 C   FIELD 12w01 M0: Word length
0x40018000 C   FIELD 13w01 MME: Mute mode enable
0x40018000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40018000 C   FIELD 15w01 OVER8: Oversampling mode
0x40018000 C   FIELD 16w05 DEDT: DEDT
0x40018000 C   FIELD 21w05 DEAT: DEAT
0x40018000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40018000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40018000 C   FIELD 28w01 M1: Word length
0x40018000 C   FIELD 29w01 FIFOEN: FIFO mode enable
0x40018000 C   FIELD 30w01 TXFEIE: TXFIFO empty interrupt enable
0x40018000 C   FIELD 31w01 RXFFIE: RXFIFO Full interrupt enable
0x40018004 B  REGISTER CR2 (rw): Control register 2
0x40018004 C   FIELD 00w01 SLVEN: Synchronous Slave mode enable
0x40018004 C   FIELD 03w01 DIS_NSS: When the DSI_NSS bit is set, the NSS pin input will be ignored
0x40018004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40018004 C   FIELD 05w01 LBDL: LIN break detection length
0x40018004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40018004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40018004 C   FIELD 09w01 CPHA: Clock phase
0x40018004 C   FIELD 10w01 CPOL: Clock polarity
0x40018004 C   FIELD 11w01 CLKEN: Clock enable
0x40018004 C   FIELD 12w02 STOP: STOP bits
0x40018004 C   FIELD 14w01 LINEN: LIN mode enable
0x40018004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40018004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40018004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40018004 C   FIELD 18w01 TAINV: Binary data inversion
0x40018004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40018004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40018004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40018004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40018004 C   FIELD 24w04 ADD0_3: Address of the USART node
0x40018004 C   FIELD 28w04 ADD4_7: Address of the USART node
0x40018008 B  REGISTER CR3 (rw): Control register 3
0x40018008 C   FIELD 00w01 EIE: Error interrupt enable
0x40018008 C   FIELD 01w01 IREN: Ir mode enable
0x40018008 C   FIELD 02w01 IRLP: Ir low-power
0x40018008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40018008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40018008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40018008 C   FIELD 06w01 DMAR: DMA enable receiver
0x40018008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40018008 C   FIELD 08w01 RTSE: RTS enable
0x40018008 C   FIELD 09w01 CTSE: CTS enable
0x40018008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40018008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40018008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40018008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40018008 C   FIELD 14w01 DEM: Driver enable mode
0x40018008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40018008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40018008 C   FIELD 20w02 WUS: Wakeup from Stop mode interrupt flag selection
0x40018008 C   FIELD 22w01 WUFIE: Wakeup from Stop mode interrupt enable
0x40018008 C   FIELD 23w01 TXFTIE: threshold interrupt enable
0x40018008 C   FIELD 24w01 TCBGTIE: Tr Complete before guard time, interrupt enable
0x40018008 C   FIELD 25w03 RXFTCFG: Receive FIFO threshold configuration
0x40018008 C   FIELD 28w01 RXFTIE: RXFIFO threshold interrupt enable
0x40018008 C   FIELD 29w03 TXFTCFG: TXFIFO threshold configuration
0x4001800C B  REGISTER BRR (rw): Baud rate register
0x4001800C C   FIELD 00w04 BRR_0_3: BRR_0_3
0x4001800C C   FIELD 04w12 BRR_4_15: BRR_4_15
0x40018010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40018010 C   FIELD 00w08 PSC: Prescaler value
0x40018010 C   FIELD 08w08 GT: Guard time value
0x40018014 B  REGISTER RTOR (rw): Receiver timeout register
0x40018014 C   FIELD 00w24 RTO: Receiver timeout value
0x40018014 C   FIELD 24w08 BLEN: Block Length
0x40018018 B  REGISTER RQR (wo): Request register
0x40018018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40018018 C   FIELD 01w01 SBKRQ: Send break request
0x40018018 C   FIELD 02w01 MMRQ: Mute mode request
0x40018018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40018018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4001801C B  REGISTER ISR (ro): Interrupt & status register
0x4001801C C   FIELD 00w01 PE: PE
0x4001801C C   FIELD 01w01 FE: FE
0x4001801C C   FIELD 02w01 NF: NF
0x4001801C C   FIELD 03w01 ORE: ORE
0x4001801C C   FIELD 04w01 IDLE: IDLE
0x4001801C C   FIELD 05w01 RXNE: RXNE
0x4001801C C   FIELD 06w01 TC: TC
0x4001801C C   FIELD 07w01 TXE: TXE
0x4001801C C   FIELD 08w01 LBDF: LBDF
0x4001801C C   FIELD 09w01 CTSIF: CTSIF
0x4001801C C   FIELD 10w01 CTS: CTS
0x4001801C C   FIELD 11w01 RTOF: RTOF
0x4001801C C   FIELD 12w01 EOBF: EOBF
0x4001801C C   FIELD 13w01 UDR: SPI slave underrun error flag
0x4001801C C   FIELD 14w01 ABRE: ABRE
0x4001801C C   FIELD 15w01 ABRF: ABRF
0x4001801C C   FIELD 16w01 BUSY: BUSY
0x4001801C C   FIELD 17w01 CMF: CMF
0x4001801C C   FIELD 18w01 SBKF: SBKF
0x4001801C C   FIELD 19w01 RWU: RWU
0x4001801C C   FIELD 20w01 WUF: WUF
0x4001801C C   FIELD 21w01 TEACK: TEACK
0x4001801C C   FIELD 22w01 REACK: REACK
0x4001801C C   FIELD 23w01 TXFE: TXFIFO Empty
0x4001801C C   FIELD 24w01 RXFF: RXFIFO Full
0x4001801C C   FIELD 25w01 TCBGT: Transmission complete before guard time flag
0x4001801C C   FIELD 26w01 RXFT: RXFIFO threshold flag
0x4001801C C   FIELD 27w01 TXFT: TXFIFO threshold flag
0x40018020 B  REGISTER ICR (wo): Interrupt flag clear register
0x40018020 C   FIELD 00w01 PECF: Parity error clear flag
0x40018020 C   FIELD 01w01 FECF: Framing error clear flag
0x40018020 C   FIELD 02w01 NCF: Noise detected clear flag
0x40018020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40018020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40018020 C   FIELD 05w01 TXFECF: TXFIFO empty clear flag
0x40018020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40018020 C   FIELD 07w01 TCBGTCF: Transmission complete before Guard time clear flag
0x40018020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40018020 C   FIELD 09w01 CTSCF: CTS clear flag
0x40018020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40018020 C   FIELD 12w01 EOBCF: End of block clear flag
0x40018020 C   FIELD 13w01 UDRCF: SPI slave underrun clear flag
0x40018020 C   FIELD 17w01 CMCF: Character match clear flag
0x40018020 C   FIELD 20w01 WUCF: Wakeup from Stop mode clear flag
0x40018024 B  REGISTER RDR (ro): Receive data register
0x40018024 C   FIELD 00w09 RDR: Receive data value
0x40018028 B  REGISTER TDR (rw): Transmit data register
0x40018028 C   FIELD 00w09 TDR: Transmit data value
0x4001802C B  REGISTER PRESC (rw): Prescaler register
0x4001802C C   FIELD 00w04 PRESCALER: Clock prescaler
0x400183EC B  REGISTER HWCFGR2 (ro): USART Hardware Configuration register 2
0x400183EC C   FIELD 00w04 CFG1: CFG1
0x400183EC C   FIELD 04w04 CFG2: CFG2
0x400183F0 B  REGISTER HWCFGR1 (ro): USART Hardware Configuration register 1
0x400183F0 C   FIELD 00w04 CFG1: CFG1
0x400183F0 C   FIELD 04w04 CFG2: CFG2
0x400183F0 C   FIELD 08w04 CFG3: CFG3
0x400183F0 C   FIELD 12w04 CFG4: CFG4
0x400183F0 C   FIELD 16w04 CFG5: CFG5
0x400183F0 C   FIELD 20w04 CFG6: CFG6
0x400183F0 C   FIELD 24w04 CFG7: CFG7
0x400183F0 C   FIELD 28w04 CFG8: CFG8
0x400183F4 B  REGISTER VERR (ro): EXTI IP Version register
0x400183F4 C   FIELD 00w04 MINREV: Minor Revision number
0x400183F4 C   FIELD 04w04 MAJREV: Major Revision number
0x400183F8 B  REGISTER IPIDR (ro): EXTI Identification register
0x400183F8 C   FIELD 00w32 IPID: IP Identification
0x400183FC B  REGISTER SIDR (ro): EXTI Size ID register
0x400183FC C   FIELD 00w32 SID: Size Identification
0x40019000 A PERIPHERAL USART8
0x40019000 B  REGISTER CR1 (rw): Control register 1
0x40019000 C   FIELD 00w01 UE: USART enable
0x40019000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40019000 C   FIELD 02w01 RE: Receiver enable
0x40019000 C   FIELD 03w01 TE: Transmitter enable
0x40019000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40019000 C   FIELD 05w01 RXNEIE: RXNE interrupt enable
0x40019000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40019000 C   FIELD 07w01 TXEIE: interrupt enable
0x40019000 C   FIELD 08w01 PEIE: PE interrupt enable
0x40019000 C   FIELD 09w01 PS: Parity selection
0x40019000 C   FIELD 10w01 PCE: Parity control enable
0x40019000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40019000 C   FIELD 12w01 M0: Word length
0x40019000 C   FIELD 13w01 MME: Mute mode enable
0x40019000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40019000 C   FIELD 15w01 OVER8: Oversampling mode
0x40019000 C   FIELD 16w05 DEDT: DEDT
0x40019000 C   FIELD 21w05 DEAT: DEAT
0x40019000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40019000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40019000 C   FIELD 28w01 M1: Word length
0x40019000 C   FIELD 29w01 FIFOEN: FIFO mode enable
0x40019000 C   FIELD 30w01 TXFEIE: TXFIFO empty interrupt enable
0x40019000 C   FIELD 31w01 RXFFIE: RXFIFO Full interrupt enable
0x40019004 B  REGISTER CR2 (rw): Control register 2
0x40019004 C   FIELD 00w01 SLVEN: Synchronous Slave mode enable
0x40019004 C   FIELD 03w01 DIS_NSS: When the DSI_NSS bit is set, the NSS pin input will be ignored
0x40019004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40019004 C   FIELD 05w01 LBDL: LIN break detection length
0x40019004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40019004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40019004 C   FIELD 09w01 CPHA: Clock phase
0x40019004 C   FIELD 10w01 CPOL: Clock polarity
0x40019004 C   FIELD 11w01 CLKEN: Clock enable
0x40019004 C   FIELD 12w02 STOP: STOP bits
0x40019004 C   FIELD 14w01 LINEN: LIN mode enable
0x40019004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40019004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40019004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40019004 C   FIELD 18w01 TAINV: Binary data inversion
0x40019004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40019004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40019004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40019004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40019004 C   FIELD 24w04 ADD0_3: Address of the USART node
0x40019004 C   FIELD 28w04 ADD4_7: Address of the USART node
0x40019008 B  REGISTER CR3 (rw): Control register 3
0x40019008 C   FIELD 00w01 EIE: Error interrupt enable
0x40019008 C   FIELD 01w01 IREN: Ir mode enable
0x40019008 C   FIELD 02w01 IRLP: Ir low-power
0x40019008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40019008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40019008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40019008 C   FIELD 06w01 DMAR: DMA enable receiver
0x40019008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40019008 C   FIELD 08w01 RTSE: RTS enable
0x40019008 C   FIELD 09w01 CTSE: CTS enable
0x40019008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40019008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40019008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40019008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40019008 C   FIELD 14w01 DEM: Driver enable mode
0x40019008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40019008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40019008 C   FIELD 20w02 WUS: Wakeup from Stop mode interrupt flag selection
0x40019008 C   FIELD 22w01 WUFIE: Wakeup from Stop mode interrupt enable
0x40019008 C   FIELD 23w01 TXFTIE: threshold interrupt enable
0x40019008 C   FIELD 24w01 TCBGTIE: Tr Complete before guard time, interrupt enable
0x40019008 C   FIELD 25w03 RXFTCFG: Receive FIFO threshold configuration
0x40019008 C   FIELD 28w01 RXFTIE: RXFIFO threshold interrupt enable
0x40019008 C   FIELD 29w03 TXFTCFG: TXFIFO threshold configuration
0x4001900C B  REGISTER BRR (rw): Baud rate register
0x4001900C C   FIELD 00w04 BRR_0_3: BRR_0_3
0x4001900C C   FIELD 04w12 BRR_4_15: BRR_4_15
0x40019010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40019010 C   FIELD 00w08 PSC: Prescaler value
0x40019010 C   FIELD 08w08 GT: Guard time value
0x40019014 B  REGISTER RTOR (rw): Receiver timeout register
0x40019014 C   FIELD 00w24 RTO: Receiver timeout value
0x40019014 C   FIELD 24w08 BLEN: Block Length
0x40019018 B  REGISTER RQR (wo): Request register
0x40019018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40019018 C   FIELD 01w01 SBKRQ: Send break request
0x40019018 C   FIELD 02w01 MMRQ: Mute mode request
0x40019018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40019018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4001901C B  REGISTER ISR (ro): Interrupt & status register
0x4001901C C   FIELD 00w01 PE: PE
0x4001901C C   FIELD 01w01 FE: FE
0x4001901C C   FIELD 02w01 NF: NF
0x4001901C C   FIELD 03w01 ORE: ORE
0x4001901C C   FIELD 04w01 IDLE: IDLE
0x4001901C C   FIELD 05w01 RXNE: RXNE
0x4001901C C   FIELD 06w01 TC: TC
0x4001901C C   FIELD 07w01 TXE: TXE
0x4001901C C   FIELD 08w01 LBDF: LBDF
0x4001901C C   FIELD 09w01 CTSIF: CTSIF
0x4001901C C   FIELD 10w01 CTS: CTS
0x4001901C C   FIELD 11w01 RTOF: RTOF
0x4001901C C   FIELD 12w01 EOBF: EOBF
0x4001901C C   FIELD 13w01 UDR: SPI slave underrun error flag
0x4001901C C   FIELD 14w01 ABRE: ABRE
0x4001901C C   FIELD 15w01 ABRF: ABRF
0x4001901C C   FIELD 16w01 BUSY: BUSY
0x4001901C C   FIELD 17w01 CMF: CMF
0x4001901C C   FIELD 18w01 SBKF: SBKF
0x4001901C C   FIELD 19w01 RWU: RWU
0x4001901C C   FIELD 20w01 WUF: WUF
0x4001901C C   FIELD 21w01 TEACK: TEACK
0x4001901C C   FIELD 22w01 REACK: REACK
0x4001901C C   FIELD 23w01 TXFE: TXFIFO Empty
0x4001901C C   FIELD 24w01 RXFF: RXFIFO Full
0x4001901C C   FIELD 25w01 TCBGT: Transmission complete before guard time flag
0x4001901C C   FIELD 26w01 RXFT: RXFIFO threshold flag
0x4001901C C   FIELD 27w01 TXFT: TXFIFO threshold flag
0x40019020 B  REGISTER ICR (wo): Interrupt flag clear register
0x40019020 C   FIELD 00w01 PECF: Parity error clear flag
0x40019020 C   FIELD 01w01 FECF: Framing error clear flag
0x40019020 C   FIELD 02w01 NCF: Noise detected clear flag
0x40019020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40019020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40019020 C   FIELD 05w01 TXFECF: TXFIFO empty clear flag
0x40019020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40019020 C   FIELD 07w01 TCBGTCF: Transmission complete before Guard time clear flag
0x40019020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40019020 C   FIELD 09w01 CTSCF: CTS clear flag
0x40019020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40019020 C   FIELD 12w01 EOBCF: End of block clear flag
0x40019020 C   FIELD 13w01 UDRCF: SPI slave underrun clear flag
0x40019020 C   FIELD 17w01 CMCF: Character match clear flag
0x40019020 C   FIELD 20w01 WUCF: Wakeup from Stop mode clear flag
0x40019024 B  REGISTER RDR (ro): Receive data register
0x40019024 C   FIELD 00w09 RDR: Receive data value
0x40019028 B  REGISTER TDR (rw): Transmit data register
0x40019028 C   FIELD 00w09 TDR: Transmit data value
0x4001902C B  REGISTER PRESC (rw): Prescaler register
0x4001902C C   FIELD 00w04 PRESCALER: Clock prescaler
0x400193EC B  REGISTER HWCFGR2 (ro): USART Hardware Configuration register 2
0x400193EC C   FIELD 00w04 CFG1: CFG1
0x400193EC C   FIELD 04w04 CFG2: CFG2
0x400193F0 B  REGISTER HWCFGR1 (ro): USART Hardware Configuration register 1
0x400193F0 C   FIELD 00w04 CFG1: CFG1
0x400193F0 C   FIELD 04w04 CFG2: CFG2
0x400193F0 C   FIELD 08w04 CFG3: CFG3
0x400193F0 C   FIELD 12w04 CFG4: CFG4
0x400193F0 C   FIELD 16w04 CFG5: CFG5
0x400193F0 C   FIELD 20w04 CFG6: CFG6
0x400193F0 C   FIELD 24w04 CFG7: CFG7
0x400193F0 C   FIELD 28w04 CFG8: CFG8
0x400193F4 B  REGISTER VERR (ro): EXTI IP Version register
0x400193F4 C   FIELD 00w04 MINREV: Minor Revision number
0x400193F4 C   FIELD 04w04 MAJREV: Major Revision number
0x400193F8 B  REGISTER IPIDR (ro): EXTI Identification register
0x400193F8 C   FIELD 00w32 IPID: IP Identification
0x400193FC B  REGISTER SIDR (ro): EXTI Size ID register
0x400193FC C   FIELD 00w32 SID: Size Identification
0x4001C000 A PERIPHERAL MDIOS
0x4001C000 B  REGISTER MDIOS_CR (rw): MDIOS configuration register
0x4001C000 C   FIELD 00w01 EN (rw): EN
0x4001C000 C   FIELD 01w01 WRIE (rw): WRIE
0x4001C000 C   FIELD 02w01 RDIE (rw): RDIE
0x4001C000 C   FIELD 03w01 EIE (rw): EIE
0x4001C000 C   FIELD 07w01 DPC (rw): DPC
0x4001C000 C   FIELD 08w05 PORT_ADDRESS (rw): PORT_ADDRESS
0x4001C004 B  REGISTER MDIOS_WRFR (ro): MDIOS write flag register
0x4001C004 C   FIELD 00w32 WRF (ro): WRF
0x4001C008 B  REGISTER MDIOS_CWRFR (rw): MDIOS clear write flag register
0x4001C008 C   FIELD 00w32 CWRF (rw): CWRF
0x4001C00C B  REGISTER MDIOS_RDFR (ro): MDIOS read flag register
0x4001C00C C   FIELD 00w32 RDF (ro): RDF
0x4001C010 B  REGISTER MDIOS_CRDFR (rw): MDIOS clear read flag register
0x4001C010 C   FIELD 00w32 CRDF (rw): CRDF
0x4001C014 B  REGISTER MDIOS_SR (ro): MDIOS status register
0x4001C014 C   FIELD 00w01 PERF (ro): PERF
0x4001C014 C   FIELD 01w01 SERF (ro): SERF
0x4001C014 C   FIELD 02w01 TERF (ro): TERF
0x4001C018 B  REGISTER MDIOS_CLRFR (rw): MDIOS clear flag register
0x4001C018 C   FIELD 00w01 CPERF (rw): CPERF
0x4001C018 C   FIELD 01w01 CSERF (rw): CSERF
0x4001C018 C   FIELD 02w01 CTERF (rw): CTERF
0x4001C100 B  REGISTER MDIOS_DINR0 (ro): MDIOS input data register
0x4001C100 C   FIELD 00w16 DIN (ro): DIN
0x4001C104 B  REGISTER MDIOS_DINR1 (ro): MDIOS input data register
0x4001C104 C   FIELD 00w16 DIN (ro): DIN
0x4001C108 B  REGISTER MDIOS_DINR2 (ro): MDIOS input data register
0x4001C108 C   FIELD 00w16 DIN (ro): DIN
0x4001C10C B  REGISTER MDIOS_DINR3 (ro): MDIOS input data register
0x4001C10C C   FIELD 00w16 DIN (ro): DIN
0x4001C110 B  REGISTER MDIOS_DINR4 (ro): MDIOS input data register
0x4001C110 C   FIELD 00w16 DIN (ro): DIN
0x4001C114 B  REGISTER MDIOS_DINR5 (ro): MDIOS input data register
0x4001C114 C   FIELD 00w16 DIN (ro): DIN
0x4001C118 B  REGISTER MDIOS_DINR6 (ro): MDIOS input data register
0x4001C118 C   FIELD 00w16 DIN (ro): DIN
0x4001C11C B  REGISTER MDIOS_DINR7 (ro): MDIOS input data register
0x4001C11C C   FIELD 00w16 DIN (ro): DIN
0x4001C120 B  REGISTER MDIOS_DINR8 (ro): MDIOS input data register
0x4001C120 C   FIELD 00w16 DIN (ro): DIN
0x4001C124 B  REGISTER MDIOS_DINR9 (ro): MDIOS input data register
0x4001C124 C   FIELD 00w16 DIN (ro): DIN
0x4001C128 B  REGISTER MDIOS_DINR10 (ro): MDIOS input data register
0x4001C128 C   FIELD 00w16 DIN (ro): DIN
0x4001C12C B  REGISTER MDIOS_DINR11 (ro): MDIOS input data register
0x4001C12C C   FIELD 00w16 DIN (ro): DIN
0x4001C130 B  REGISTER MDIOS_DINR12 (ro): MDIOS input data register
0x4001C130 C   FIELD 00w16 DIN (ro): DIN
0x4001C134 B  REGISTER MDIOS_DINR13 (ro): MDIOS input data register
0x4001C134 C   FIELD 00w16 DIN (ro): DIN
0x4001C138 B  REGISTER MDIOS_DINR14 (ro): MDIOS input data register
0x4001C138 C   FIELD 00w16 DIN (ro): DIN
0x4001C13C B  REGISTER MDIOS_DINR15 (ro): MDIOS input data register
0x4001C13C C   FIELD 00w16 DIN (ro): DIN
0x4001C140 B  REGISTER MDIOS_DINR16 (ro): MDIOS input data register
0x4001C140 C   FIELD 00w16 DIN (ro): DIN
0x4001C144 B  REGISTER MDIOS_DINR17 (ro): MDIOS input data register
0x4001C144 C   FIELD 00w16 DIN (ro): DIN
0x4001C148 B  REGISTER MDIOS_DINR18 (ro): MDIOS input data register
0x4001C148 C   FIELD 00w16 DIN (ro): DIN
0x4001C14C B  REGISTER MDIOS_DINR19 (ro): MDIOS input data register
0x4001C14C C   FIELD 00w16 DIN (ro): DIN
0x4001C150 B  REGISTER MDIOS_DINR20 (ro): MDIOS input data register
0x4001C150 C   FIELD 00w16 DIN (ro): DIN
0x4001C154 B  REGISTER MDIOS_DINR21 (ro): MDIOS input data register
0x4001C154 C   FIELD 00w16 DIN (ro): DIN
0x4001C158 B  REGISTER MDIOS_DINR22 (ro): MDIOS input data register
0x4001C158 C   FIELD 00w16 DIN (ro): DIN
0x4001C15C B  REGISTER MDIOS_DINR23 (ro): MDIOS input data register
0x4001C15C C   FIELD 00w16 DIN (ro): DIN
0x4001C160 B  REGISTER MDIOS_DINR24 (ro): MDIOS input data register
0x4001C160 C   FIELD 00w16 DIN (ro): DIN
0x4001C164 B  REGISTER MDIOS_DINR25 (ro): MDIOS input data register
0x4001C164 C   FIELD 00w16 DIN (ro): DIN
0x4001C168 B  REGISTER MDIOS_DINR26 (ro): MDIOS input data register
0x4001C168 C   FIELD 00w16 DIN (ro): DIN
0x4001C16C B  REGISTER MDIOS_DINR27 (ro): MDIOS input data register
0x4001C16C C   FIELD 00w16 DIN (ro): DIN
0x4001C170 B  REGISTER MDIOS_DINR28 (ro): MDIOS input data register
0x4001C170 C   FIELD 00w16 DIN (ro): DIN
0x4001C174 B  REGISTER MDIOS_DINR29 (ro): MDIOS input data register
0x4001C174 C   FIELD 00w16 DIN (ro): DIN
0x4001C178 B  REGISTER MDIOS_DINR30 (ro): MDIOS input data register
0x4001C178 C   FIELD 00w16 DIN (ro): DIN
0x4001C17C B  REGISTER MDIOS_DINR31 (ro): MDIOS input data register
0x4001C17C C   FIELD 00w16 DIN (ro): DIN
0x4001C180 B  REGISTER MDIOS_DOUTR0 (ro): MDIOS input data register
0x4001C180 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C184 B  REGISTER MDIOS_DOUTR1 (ro): MDIOS input data register
0x4001C184 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C188 B  REGISTER MDIOS_DOUTR2 (ro): MDIOS output data register
0x4001C188 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C18C B  REGISTER MDIOS_DOUTR3 (ro): MDIOS output data register
0x4001C18C C   FIELD 00w16 DOUT (ro): DOUT
0x4001C190 B  REGISTER MDIOS_DOUTR4 (ro): MDIOS output data register
0x4001C190 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C194 B  REGISTER MDIOS_DOUTR5 (ro): MDIOS output data register
0x4001C194 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C198 B  REGISTER MDIOS_DOUTR6 (ro): MDIOS output data register
0x4001C198 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C19C B  REGISTER MDIOS_DOUTR7 (ro): MDIOS output data register
0x4001C19C C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1A0 B  REGISTER MDIOS_DOUTR8 (ro): MDIOS output data register
0x4001C1A0 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1A4 B  REGISTER MDIOS_DOUTR9 (ro): MDIOS output data register
0x4001C1A4 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1A8 B  REGISTER MDIOS_DOUTR10 (ro): MDIOS output data register
0x4001C1A8 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1AC B  REGISTER MDIOS_DOUTR11 (ro): MDIOS output data register
0x4001C1AC C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1B0 B  REGISTER MDIOS_DOUTR12 (ro): MDIOS output data register
0x4001C1B0 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1B4 B  REGISTER MDIOS_DOUTR13 (ro): MDIOS output data register
0x4001C1B4 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1B8 B  REGISTER MDIOS_DOUTR14 (ro): MDIOS output data register
0x4001C1B8 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1BC B  REGISTER MDIOS_DOUTR15 (ro): MDIOS output data register
0x4001C1BC C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1C0 B  REGISTER MDIOS_DOUTR16 (ro): MDIOS output data register
0x4001C1C0 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1C4 B  REGISTER MDIOS_DOUTR17 (ro): MDIOS output data register
0x4001C1C4 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1C8 B  REGISTER MDIOS_DOUTR18 (ro): MDIOS output data register
0x4001C1C8 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1CC B  REGISTER MDIOS_DOUTR19 (ro): MDIOS output data register
0x4001C1CC C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1D0 B  REGISTER MDIOS_DOUTR20 (ro): MDIOS output data register
0x4001C1D0 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1D4 B  REGISTER MDIOS_DOUTR21 (ro): MDIOS output data register
0x4001C1D4 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1D8 B  REGISTER MDIOS_DOUTR22 (ro): MDIOS output data register
0x4001C1D8 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1DC B  REGISTER MDIOS_DOUTR23 (ro): MDIOS output data register
0x4001C1DC C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1E0 B  REGISTER MDIOS_DOUTR24 (ro): MDIOS output data register
0x4001C1E0 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1E4 B  REGISTER MDIOS_DOUTR25 (ro): MDIOS output data register
0x4001C1E4 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1E8 B  REGISTER MDIOS_DOUTR26 (ro): MDIOS output data register
0x4001C1E8 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1EC B  REGISTER MDIOS_DOUTR27 (ro): MDIOS output data register
0x4001C1EC C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1F0 B  REGISTER MDIOS_DOUTR28 (ro): MDIOS output data register
0x4001C1F0 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1F4 B  REGISTER MDIOS_DOUTR29 (ro): MDIOS output data register
0x4001C1F4 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1F8 B  REGISTER MDIOS_DOUTR30 (ro): MDIOS output data register
0x4001C1F8 C   FIELD 00w16 DOUT (ro): DOUT
0x4001C1FC B  REGISTER MDIOS_DOUTR31 (ro): MDIOS output data register
0x4001C1FC C   FIELD 00w16 DOUT (ro): DOUT
0x4001C3F0 B  REGISTER MDIOS_HWCFGR (ro): MDIOS HW configuration register
0x4001C3F0 C   FIELD 00w08 NBREG (ro): NBREG
0x4001C3F4 B  REGISTER MDIOS_VERR (ro): MDIOS version register
0x4001C3F4 C   FIELD 00w04 MINREV (ro): MINREV
0x4001C3F4 C   FIELD 04w04 MAJREV (ro): MAJREV
0x4001C3F8 B  REGISTER MDIOS_IPIDR (ro): MDIOS identification register
0x4001C3F8 C   FIELD 00w32 ID (ro): ID
0x4001C3FC B  REGISTER MDIOS_SIDR (ro): MDIOS size identification register
0x4001C3FC C   FIELD 00w32 SID (ro): SID
0x44000000 A PERIPHERAL TIM1
0x44000000 B  REGISTER TIM1_CR1 (rw): TIM1 control register 1
0x44000000 C   FIELD 00w01 CEN: CEN
0x44000000 C   FIELD 01w01 UDIS: UDIS
0x44000000 C   FIELD 02w01 URS: URS
0x44000000 C   FIELD 03w01 OPM: OPM
0x44000000 C   FIELD 04w01 DIR: DIR
0x44000000 C   FIELD 05w02 CMS: CMS
0x44000000 C   FIELD 07w01 ARPE: ARPE
0x44000000 C   FIELD 08w02 CKD: CKD
0x44000000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x44000004 B  REGISTER TIM1_CR2 (rw): TIM1 control register 2
0x44000004 C   FIELD 00w01 CCPC: CCPC
0x44000004 C   FIELD 02w01 CCUS: CCUS
0x44000004 C   FIELD 03w01 CCDS: CCDS
0x44000004 C   FIELD 04w03 MMS: MMS
0x44000004 C   FIELD 07w01 TI1S: TI1S
0x44000004 C   FIELD 08w01 OIS1: OIS1
0x44000004 C   FIELD 09w01 OIS1N: OIS1N
0x44000004 C   FIELD 10w01 OIS2: OIS2
0x44000004 C   FIELD 11w01 OIS2N: OIS2N
0x44000004 C   FIELD 12w01 OIS3: OIS3
0x44000004 C   FIELD 13w01 OIS3N: OIS3N
0x44000004 C   FIELD 14w01 OIS4: OIS4
0x44000004 C   FIELD 16w01 OIS5: OIS5
0x44000004 C   FIELD 18w01 OIS6: OIS6
0x44000004 C   FIELD 20w04 MMS2: MMS2
0x44000008 B  REGISTER TIM1_SMCR (rw): TIM1 slave mode control register
0x44000008 C   FIELD 00w03 SMS: SMS
0x44000008 C   FIELD 04w03 TS: TS
0x44000008 C   FIELD 07w01 MSM: MSM
0x44000008 C   FIELD 08w04 ETF: ETF
0x44000008 C   FIELD 12w02 ETPS: ETPS
0x44000008 C   FIELD 14w01 ECE: ECE
0x44000008 C   FIELD 15w01 ETP: ETP
0x44000008 C   FIELD 16w01 SMS3: SMS3
0x44000008 C   FIELD 20w01 TS3: TS3
0x44000008 C   FIELD 21w01 TS4: TS4
0x4400000C B  REGISTER TIM1_DIER (rw): TIM1 DMA/interrupt enable register
0x4400000C C   FIELD 00w01 UIE: UIE
0x4400000C C   FIELD 01w01 CC1IE: CC1IE
0x4400000C C   FIELD 02w01 CC2IE: CC2IE
0x4400000C C   FIELD 03w01 CC3IE: CC3IE
0x4400000C C   FIELD 04w01 CC4IE: CC4IE
0x4400000C C   FIELD 05w01 COMIE: COMIE
0x4400000C C   FIELD 06w01 TIE: TIE
0x4400000C C   FIELD 07w01 BIE: BIE
0x4400000C C   FIELD 08w01 UDE: UDE
0x4400000C C   FIELD 09w01 CC1DE: CC1DE
0x4400000C C   FIELD 10w01 CC2DE: CC2DE
0x4400000C C   FIELD 11w01 CC3DE: CC3DE
0x4400000C C   FIELD 12w01 CC4DE: CC4DE
0x4400000C C   FIELD 13w01 COMDE: COMDE
0x4400000C C   FIELD 14w01 TDE: TDE
0x44000010 B  REGISTER TIM1_SR (rw): TIM1 status register
0x44000010 C   FIELD 00w01 UIF: UIF
0x44000010 C   FIELD 01w01 CC1IF: CC1IF
0x44000010 C   FIELD 02w01 CC2IF: CC2IF
0x44000010 C   FIELD 03w01 CC3IF: CC3IF
0x44000010 C   FIELD 04w01 CC4IF: CC4IF
0x44000010 C   FIELD 05w01 COMIF: COMIF
0x44000010 C   FIELD 06w01 TIF: TIF
0x44000010 C   FIELD 07w01 BIF: BIF
0x44000010 C   FIELD 08w01 B2IF: B2IF
0x44000010 C   FIELD 09w01 CC1OF: CC1OF
0x44000010 C   FIELD 10w01 CC2OF: CC2OF
0x44000010 C   FIELD 11w01 CC3OF: CC3OF
0x44000010 C   FIELD 12w01 CC4OF: CC4OF
0x44000010 C   FIELD 13w01 SBIF: SBIF
0x44000010 C   FIELD 16w01 CC5IF: CC5IF
0x44000010 C   FIELD 17w01 CC6IF: CC6IF
0x44000014 B  REGISTER TIM1_EGR (wo): TIM1 event generation register
0x44000014 C   FIELD 00w01 UG: UG
0x44000014 C   FIELD 01w01 CC1G: CC1G
0x44000014 C   FIELD 02w01 CC2G: CC2G
0x44000014 C   FIELD 03w01 CC3G: CC3G
0x44000014 C   FIELD 04w01 CC4G: CC4G
0x44000014 C   FIELD 05w01 COMG: COMG
0x44000014 C   FIELD 06w01 TG: TG
0x44000014 C   FIELD 07w01 BG: BG
0x44000014 C   FIELD 08w01 B2G: B2G
0x44000018 B  REGISTER TIM1_CCMR1ALTERNATE1 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x44000018 C   FIELD 00w02 CC1S: CC1S
0x44000018 C   FIELD 02w02 IC1PSC: IC1PSC
0x44000018 C   FIELD 04w04 IC1F: IC1F
0x44000018 C   FIELD 08w02 CC2S: CC2S
0x44000018 C   FIELD 10w02 IC2PSC: IC2PSC
0x44000018 C   FIELD 12w04 IC2F: IC2F
0x4400001C B  REGISTER TIM1_CCMR2ALTERNATE17 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x4400001C C   FIELD 00w02 CC3S: CC3S
0x4400001C C   FIELD 02w02 IC3PSC: IC3PSC
0x4400001C C   FIELD 04w04 IC3F: IC3F
0x4400001C C   FIELD 08w02 CC4S: CC4S
0x4400001C C   FIELD 10w02 IC4PSC: IC4PSC
0x4400001C C   FIELD 12w04 IC4F: IC4F
0x44000020 B  REGISTER TIM1_CCER (rw): TIM1 capture/compare enable register
0x44000020 C   FIELD 00w01 CC1E: CC1E
0x44000020 C   FIELD 01w01 CC1P: CC1P
0x44000020 C   FIELD 02w01 CC1NE: CC1NE
0x44000020 C   FIELD 03w01 CC1NP: CC1NP
0x44000020 C   FIELD 04w01 CC2E: CC2E
0x44000020 C   FIELD 05w01 CC2P: CC2P
0x44000020 C   FIELD 06w01 CC2NE: CC2NE
0x44000020 C   FIELD 07w01 CC2NP: CC2NP
0x44000020 C   FIELD 08w01 CC3E: CC3E
0x44000020 C   FIELD 09w01 CC3P: CC3P
0x44000020 C   FIELD 10w01 CC3NE: CC3NE
0x44000020 C   FIELD 11w01 CC3NP: CC3NP
0x44000020 C   FIELD 12w01 CC4E: CC4E
0x44000020 C   FIELD 13w01 CC4P: CC4P
0x44000020 C   FIELD 15w01 CC4NP: CC4NP
0x44000020 C   FIELD 16w01 CC5E: CC5E
0x44000020 C   FIELD 17w01 CC5P: CC5P
0x44000020 C   FIELD 20w01 CC6E: CC6E
0x44000020 C   FIELD 21w01 CC6P: CC6P
0x44000024 B  REGISTER TIM1_CNT: TIM1 counter
0x44000024 C   FIELD 00w16 CNT (rw): CNT
0x44000024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x44000028 B  REGISTER TIM1_PSC (rw): TIM1 prescaler
0x44000028 C   FIELD 00w16 PSC: PSC
0x4400002C B  REGISTER TIM1_ARR (rw): TIM1 auto-reload register
0x4400002C C   FIELD 00w16 ARR: ARR
0x44000030 B  REGISTER TIM1_RCR (rw): TIM1 repetition counter register
0x44000030 C   FIELD 00w16 REP: REP
0x44000034 B  REGISTER TIM1_CCR1 (rw): TIM1 capture/compare register 1
0x44000034 C   FIELD 00w16 CCR1: CCR1
0x44000038 B  REGISTER TIM1_CCR2 (rw): TIM1 capture/compare register 2
0x44000038 C   FIELD 00w16 CCR2: CCR2
0x4400003C B  REGISTER TIM1_CCR3 (rw): TIM1 capture/compare register 3
0x4400003C C   FIELD 00w16 CCR3: CCR3
0x44000040 B  REGISTER TIM1_CCR4 (rw): TIM1 capture/compare register 4
0x44000040 C   FIELD 00w16 CCR4: CCR4
0x44000044 B  REGISTER TIM1_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x44000044 C   FIELD 00w08 DTG: DTG
0x44000044 C   FIELD 08w02 LOCK: LOCK
0x44000044 C   FIELD 10w01 OSSI: OSSI
0x44000044 C   FIELD 11w01 OSSR: OSSR
0x44000044 C   FIELD 12w01 BKE: BKE
0x44000044 C   FIELD 13w01 BKP: BKP
0x44000044 C   FIELD 14w01 AOE: AOE
0x44000044 C   FIELD 15w01 MOE: MOE
0x44000044 C   FIELD 16w04 BKF: BKF
0x44000044 C   FIELD 20w04 BK2F: BK2F
0x44000044 C   FIELD 24w01 BK2E: BK2E
0x44000044 C   FIELD 25w01 BK2P: BK2P
0x44000044 C   FIELD 26w01 BKDSRM: BKDSRM
0x44000044 C   FIELD 27w01 BK2DSRM: BK2DSRM
0x44000044 C   FIELD 28w01 BKBID: BKBID
0x44000044 C   FIELD 29w01 BK2BID: BK2BID
0x44000048 B  REGISTER TIM1_DCR (rw): TIM1 DMA control register
0x44000048 C   FIELD 00w05 DBA: DBA
0x44000048 C   FIELD 08w05 DBL: DBL
0x4400004C B  REGISTER TIM1_DMAR (rw): TIM1 DMA address for full transfer
0x4400004C C   FIELD 00w32 DMAB: DMAB
0x44000054 B  REGISTER TIM1_CCMR3 (rw): The channels 5 and 6 can only be configured in output. Output compare mode:
0x44000054 C   FIELD 02w01 OC5FE: OC5FE
0x44000054 C   FIELD 03w01 OC5PE: OC5PE
0x44000054 C   FIELD 04w03 OC5M: OC5M
0x44000054 C   FIELD 07w01 OC5CE: OC5CE
0x44000054 C   FIELD 10w01 OC6FE: OC6FE
0x44000054 C   FIELD 11w01 OC6PE: OC6PE
0x44000054 C   FIELD 12w03 OC6M: OC6M
0x44000054 C   FIELD 15w01 OC6CE: OC6CE
0x44000054 C   FIELD 16w01 OC5M3: OC5M3
0x44000054 C   FIELD 24w01 OC6M3: OC6M3
0x44000058 B  REGISTER TIM1_CCR5 (rw): TIM1 capture/compare register 5
0x44000058 C   FIELD 00w16 CCR5: CCR5
0x44000058 C   FIELD 29w01 GC5C1: GC5C1
0x44000058 C   FIELD 30w01 GC5C2: GC5C2
0x44000058 C   FIELD 31w01 GC5C3: GC5C3
0x4400005C B  REGISTER TIM1_CCR6 (rw): TIM1 capture/compare register 6
0x4400005C C   FIELD 00w16 CCR6: CCR6
0x44000060 B  REGISTER TIM1_AF1 (rw): TIM1 alternate function option register 1
0x44000060 C   FIELD 00w01 BKINE: BKINE
0x44000060 C   FIELD 08w01 BKDF1BK0E: BKDF1BK0E
0x44000060 C   FIELD 09w01 BKINP: BKINP
0x44000060 C   FIELD 14w04 ETRSEL: ETRSEL
0x44000064 B  REGISTER TIM1_AF2 (rw): TIM1 Alternate function register 2
0x44000064 C   FIELD 00w01 BK2INE: BK2INE
0x44000064 C   FIELD 08w01 BK2DF1BK1E: BK2DF1BK1E
0x44000064 C   FIELD 09w01 BK2INP: BK2INP
0x44000068 B  REGISTER TIM1_TISEL (rw): TIM1 timer input selection register
0x44000068 C   FIELD 00w04 TI1SEL: TI1SEL
0x44000068 C   FIELD 08w04 TI2SEL: TI2SEL
0x44000068 C   FIELD 16w04 TI3SEL: TI3SEL
0x44000068 C   FIELD 24w04 TI4SEL: TI4SEL
0x44001000 A PERIPHERAL TIM8
0x44001000 B  REGISTER TIM8_CR1 (rw): TIM8 control register 1
0x44001000 C   FIELD 00w01 CEN: CEN
0x44001000 C   FIELD 01w01 UDIS: UDIS
0x44001000 C   FIELD 02w01 URS: URS
0x44001000 C   FIELD 03w01 OPM: OPM
0x44001000 C   FIELD 04w01 DIR: DIR
0x44001000 C   FIELD 05w02 CMS: CMS
0x44001000 C   FIELD 07w01 ARPE: ARPE
0x44001000 C   FIELD 08w02 CKD: CKD
0x44001000 C   FIELD 11w01 UIFREMAP: UIFREMAP
0x44001004 B  REGISTER TIM8_CR2 (rw): TIM8 control register 2
0x44001004 C   FIELD 00w01 CCPC: CCPC
0x44001004 C   FIELD 02w01 CCUS: CCUS
0x44001004 C   FIELD 03w01 CCDS: CCDS
0x44001004 C   FIELD 04w03 MMS: MMS
0x44001004 C   FIELD 07w01 TI1S: TI1S
0x44001004 C   FIELD 08w01 OIS1: OIS1
0x44001004 C   FIELD 09w01 OIS1N: OIS1N
0x44001004 C   FIELD 10w01 OIS2: OIS2
0x44001004 C   FIELD 11w01 OIS2N: OIS2N
0x44001004 C   FIELD 12w01 OIS3: OIS3
0x44001004 C   FIELD 13w01 OIS3N: OIS3N
0x44001004 C   FIELD 14w01 OIS4: OIS4
0x44001004 C   FIELD 16w01 OIS5: OIS5
0x44001004 C   FIELD 18w01 OIS6: OIS6
0x44001004 C   FIELD 20w04 MMS2: MMS2
0x44001008 B  REGISTER TIM8_SMCR (rw): TIM8 slave mode control register
0x44001008 C   FIELD 00w03 SMS: SMS
0x44001008 C   FIELD 04w03 TS: TS
0x44001008 C   FIELD 07w01 MSM: MSM
0x44001008 C   FIELD 08w04 ETF: ETF
0x44001008 C   FIELD 12w02 ETPS: ETPS
0x44001008 C   FIELD 14w01 ECE: ECE
0x44001008 C   FIELD 15w01 ETP: ETP
0x44001008 C   FIELD 16w01 SMS3: SMS3
0x44001008 C   FIELD 20w01 TS3: TS3
0x44001008 C   FIELD 21w01 TS4: TS4
0x4400100C B  REGISTER TIM8_DIER (rw): TIM8 DMA/interrupt enable register
0x4400100C C   FIELD 00w01 UIE: UIE
0x4400100C C   FIELD 01w01 CC1IE: CC1IE
0x4400100C C   FIELD 02w01 CC2IE: CC2IE
0x4400100C C   FIELD 03w01 CC3IE: CC3IE
0x4400100C C   FIELD 04w01 CC4IE: CC4IE
0x4400100C C   FIELD 05w01 COMIE: COMIE
0x4400100C C   FIELD 06w01 TIE: TIE
0x4400100C C   FIELD 07w01 BIE: BIE
0x4400100C C   FIELD 08w01 UDE: UDE
0x4400100C C   FIELD 09w01 CC1DE: CC1DE
0x4400100C C   FIELD 10w01 CC2DE: CC2DE
0x4400100C C   FIELD 11w01 CC3DE: CC3DE
0x4400100C C   FIELD 12w01 CC4DE: CC4DE
0x4400100C C   FIELD 13w01 COMDE: COMDE
0x4400100C C   FIELD 14w01 TDE: TDE
0x44001010 B  REGISTER TIM8_SR (rw): TIM8 status register
0x44001010 C   FIELD 00w01 UIF: UIF
0x44001010 C   FIELD 01w01 CC1IF: CC1IF
0x44001010 C   FIELD 02w01 CC2IF: CC2IF
0x44001010 C   FIELD 03w01 CC3IF: CC3IF
0x44001010 C   FIELD 04w01 CC4IF: CC4IF
0x44001010 C   FIELD 05w01 COMIF: COMIF
0x44001010 C   FIELD 06w01 TIF: TIF
0x44001010 C   FIELD 07w01 BIF: BIF
0x44001010 C   FIELD 08w01 B2IF: B2IF
0x44001010 C   FIELD 09w01 CC1OF: CC1OF
0x44001010 C   FIELD 10w01 CC2OF: CC2OF
0x44001010 C   FIELD 11w01 CC3OF: CC3OF
0x44001010 C   FIELD 12w01 CC4OF: CC4OF
0x44001010 C   FIELD 13w01 SBIF: SBIF
0x44001010 C   FIELD 16w01 CC5IF: CC5IF
0x44001010 C   FIELD 17w01 CC6IF: CC6IF
0x44001014 B  REGISTER TIM8_EGR (wo): TIM8 event generation register
0x44001014 C   FIELD 00w01 UG: UG
0x44001014 C   FIELD 01w01 CC1G: CC1G
0x44001014 C   FIELD 02w01 CC2G: CC2G
0x44001014 C   FIELD 03w01 CC3G: CC3G
0x44001014 C   FIELD 04w01 CC4G: CC4G
0x44001014 C   FIELD 05w01 COMG: COMG
0x44001014 C   FIELD 06w01 TG: TG
0x44001014 C   FIELD 07w01 BG: BG
0x44001014 C   FIELD 08w01 B2G: B2G
0x44001018 B  REGISTER TIM8_CCMR1ALTERNATE8 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x44001018 C   FIELD 00w02 CC1S: CC1S
0x44001018 C   FIELD 02w02 IC1PSC: IC1PSC
0x44001018 C   FIELD 04w04 IC1F: IC1F
0x44001018 C   FIELD 08w02 CC2S: CC2S
0x44001018 C   FIELD 10w02 IC2PSC: IC2PSC
0x44001018 C   FIELD 12w04 IC2F: IC2F
0x4400101C B  REGISTER TIM8_CCMR2ALTERNATE24 (rw): The same register can be used for input capture mode (this section) or for output compare mode (next section). The direction of a channel is defined by configuring the corresponding CCxS bits. All the other bits of this register have a different function for input capture and for output compare modes. It is possible to combine both modes independently (e.g. channel 1 in input capture mode and channel 2 in output compare mode). Input capture mode:
0x4400101C C   FIELD 00w02 CC3S: CC3S
0x4400101C C   FIELD 02w02 IC3PSC: IC3PSC
0x4400101C C   FIELD 04w04 IC3F: IC3F
0x4400101C C   FIELD 08w02 CC4S: CC4S
0x4400101C C   FIELD 10w02 IC4PSC: IC4PSC
0x4400101C C   FIELD 12w04 IC4F: IC4F
0x44001020 B  REGISTER TIM8_CCER (rw): TIM8 capture/compare enable register
0x44001020 C   FIELD 00w01 CC1E: CC1E
0x44001020 C   FIELD 01w01 CC1P: CC1P
0x44001020 C   FIELD 02w01 CC1NE: CC1NE
0x44001020 C   FIELD 03w01 CC1NP: CC1NP
0x44001020 C   FIELD 04w01 CC2E: CC2E
0x44001020 C   FIELD 05w01 CC2P: CC2P
0x44001020 C   FIELD 06w01 CC2NE: CC2NE
0x44001020 C   FIELD 07w01 CC2NP: CC2NP
0x44001020 C   FIELD 08w01 CC3E: CC3E
0x44001020 C   FIELD 09w01 CC3P: CC3P
0x44001020 C   FIELD 10w01 CC3NE: CC3NE
0x44001020 C   FIELD 11w01 CC3NP: CC3NP
0x44001020 C   FIELD 12w01 CC4E: CC4E
0x44001020 C   FIELD 13w01 CC4P: CC4P
0x44001020 C   FIELD 15w01 CC4NP: CC4NP
0x44001020 C   FIELD 16w01 CC5E: CC5E
0x44001020 C   FIELD 17w01 CC5P: CC5P
0x44001020 C   FIELD 20w01 CC6E: CC6E
0x44001020 C   FIELD 21w01 CC6P: CC6P
0x44001024 B  REGISTER TIM8_CNT: TIM8 counter
0x44001024 C   FIELD 00w16 CNT (rw): CNT
0x44001024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x44001028 B  REGISTER TIM8_PSC (rw): TIM8 prescaler
0x44001028 C   FIELD 00w16 PSC: PSC
0x4400102C B  REGISTER TIM8_ARR (rw): TIM8 auto-reload register
0x4400102C C   FIELD 00w16 ARR: ARR
0x44001030 B  REGISTER TIM8_RCR (rw): TIM8 repetition counter register
0x44001030 C   FIELD 00w16 REP: REP
0x44001034 B  REGISTER TIM8_CCR1 (rw): TIM8 capture/compare register 1
0x44001034 C   FIELD 00w16 CCR1: CCR1
0x44001038 B  REGISTER TIM8_CCR2 (rw): TIM8 capture/compare register 2
0x44001038 C   FIELD 00w16 CCR2: CCR2
0x4400103C B  REGISTER TIM8_CCR3 (rw): TIM8 capture/compare register 3
0x4400103C C   FIELD 00w16 CCR3: CCR3
0x44001040 B  REGISTER TIM8_CCR4 (rw): TIM8 capture/compare register 4
0x44001040 C   FIELD 00w16 CCR4: CCR4
0x44001044 B  REGISTER TIM8_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x44001044 C   FIELD 00w08 DTG: DTG
0x44001044 C   FIELD 08w02 LOCK: LOCK
0x44001044 C   FIELD 10w01 OSSI: OSSI
0x44001044 C   FIELD 11w01 OSSR: OSSR
0x44001044 C   FIELD 12w01 BKE: BKE
0x44001044 C   FIELD 13w01 BKP: BKP
0x44001044 C   FIELD 14w01 AOE: AOE
0x44001044 C   FIELD 15w01 MOE: MOE
0x44001044 C   FIELD 16w04 BKF: BKF
0x44001044 C   FIELD 20w04 BK2F: BK2F
0x44001044 C   FIELD 24w01 BK2E: BK2E
0x44001044 C   FIELD 25w01 BK2P: BK2P
0x44001044 C   FIELD 26w01 BKDSRM: BKDSRM
0x44001044 C   FIELD 27w01 BK2DSRM: BK2DSRM
0x44001044 C   FIELD 28w01 BKBID: BKBID
0x44001044 C   FIELD 29w01 BK2BID: BK2BID
0x44001048 B  REGISTER TIM8_DCR (rw): TIM8 DMA control register
0x44001048 C   FIELD 00w05 DBA: DBA
0x44001048 C   FIELD 08w05 DBL: DBL
0x4400104C B  REGISTER TIM8_DMAR (rw): TIM8 DMA address for full transfer
0x4400104C C   FIELD 00w32 DMAB: DMAB
0x44001054 B  REGISTER TIM8_CCMR3 (rw): The channels 5 and 6 can only be configured in output. Output compare mode:
0x44001054 C   FIELD 02w01 OC5FE: OC5FE
0x44001054 C   FIELD 03w01 OC5PE: OC5PE
0x44001054 C   FIELD 04w03 OC5M: OC5M
0x44001054 C   FIELD 07w01 OC5CE: OC5CE
0x44001054 C   FIELD 10w01 OC6FE: OC6FE
0x44001054 C   FIELD 11w01 OC6PE: OC6PE
0x44001054 C   FIELD 12w03 OC6M: OC6M
0x44001054 C   FIELD 15w01 OC6CE: OC6CE
0x44001054 C   FIELD 16w01 OC5M3: OC5M3
0x44001054 C   FIELD 24w01 OC6M3: OC6M3
0x44001058 B  REGISTER TIM8_CCR5 (rw): TIM8 capture/compare register 5
0x44001058 C   FIELD 00w16 CCR5: CCR5
0x44001058 C   FIELD 29w01 GC5C1: GC5C1
0x44001058 C   FIELD 30w01 GC5C2: GC5C2
0x44001058 C   FIELD 31w01 GC5C3: GC5C3
0x4400105C B  REGISTER TIM8_CCR6 (rw): TIM8 capture/compare register 6
0x4400105C C   FIELD 00w16 CCR6: CCR6
0x44001060 B  REGISTER TIM8_AF1 (rw): TIM8 Alternate function option register 1
0x44001060 C   FIELD 00w01 BKINE: BKINE
0x44001060 C   FIELD 08w01 BKDF1BK2E: BKDF1BK2E
0x44001060 C   FIELD 09w01 BKINP: BKINP
0x44001060 C   FIELD 14w04 ETRSEL: ETRSEL
0x44001064 B  REGISTER TIM8_AF2 (rw): TIM8 Alternate function option register 2
0x44001064 C   FIELD 00w01 BK2INE: BK2INE
0x44001064 C   FIELD 08w01 BK2DF1BK3E: BK2DF1BK3E
0x44001064 C   FIELD 09w01 BK2INP: BK2INP
0x44001068 B  REGISTER TIM8_TISEL (rw): TIM8 timer input selection register
0x44001068 C   FIELD 00w04 TI1SEL: TI1SEL
0x44001068 C   FIELD 08w04 TI2SEL: TI2SEL
0x44001068 C   FIELD 16w04 TI3SEL: TI3SEL
0x44001068 C   FIELD 24w04 TI4SEL: TI4SEL
0x44003000 A PERIPHERAL USART6
0x44003000 B  REGISTER CR1 (rw): Control register 1
0x44003000 C   FIELD 00w01 UE: USART enable
0x44003000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x44003000 C   FIELD 02w01 RE: Receiver enable
0x44003000 C   FIELD 03w01 TE: Transmitter enable
0x44003000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x44003000 C   FIELD 05w01 RXNEIE: RXNE interrupt enable
0x44003000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x44003000 C   FIELD 07w01 TXEIE: interrupt enable
0x44003000 C   FIELD 08w01 PEIE: PE interrupt enable
0x44003000 C   FIELD 09w01 PS: Parity selection
0x44003000 C   FIELD 10w01 PCE: Parity control enable
0x44003000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x44003000 C   FIELD 12w01 M0: Word length
0x44003000 C   FIELD 13w01 MME: Mute mode enable
0x44003000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x44003000 C   FIELD 15w01 OVER8: Oversampling mode
0x44003000 C   FIELD 16w05 DEDT: DEDT
0x44003000 C   FIELD 21w05 DEAT: DEAT
0x44003000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x44003000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x44003000 C   FIELD 28w01 M1: Word length
0x44003000 C   FIELD 29w01 FIFOEN: FIFO mode enable
0x44003000 C   FIELD 30w01 TXFEIE: TXFIFO empty interrupt enable
0x44003000 C   FIELD 31w01 RXFFIE: RXFIFO Full interrupt enable
0x44003004 B  REGISTER CR2 (rw): Control register 2
0x44003004 C   FIELD 00w01 SLVEN: Synchronous Slave mode enable
0x44003004 C   FIELD 03w01 DIS_NSS: When the DSI_NSS bit is set, the NSS pin input will be ignored
0x44003004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x44003004 C   FIELD 05w01 LBDL: LIN break detection length
0x44003004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x44003004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x44003004 C   FIELD 09w01 CPHA: Clock phase
0x44003004 C   FIELD 10w01 CPOL: Clock polarity
0x44003004 C   FIELD 11w01 CLKEN: Clock enable
0x44003004 C   FIELD 12w02 STOP: STOP bits
0x44003004 C   FIELD 14w01 LINEN: LIN mode enable
0x44003004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x44003004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x44003004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x44003004 C   FIELD 18w01 TAINV: Binary data inversion
0x44003004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x44003004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x44003004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x44003004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x44003004 C   FIELD 24w04 ADD0_3: Address of the USART node
0x44003004 C   FIELD 28w04 ADD4_7: Address of the USART node
0x44003008 B  REGISTER CR3 (rw): Control register 3
0x44003008 C   FIELD 00w01 EIE: Error interrupt enable
0x44003008 C   FIELD 01w01 IREN: Ir mode enable
0x44003008 C   FIELD 02w01 IRLP: Ir low-power
0x44003008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x44003008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x44003008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x44003008 C   FIELD 06w01 DMAR: DMA enable receiver
0x44003008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x44003008 C   FIELD 08w01 RTSE: RTS enable
0x44003008 C   FIELD 09w01 CTSE: CTS enable
0x44003008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x44003008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x44003008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x44003008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x44003008 C   FIELD 14w01 DEM: Driver enable mode
0x44003008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x44003008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x44003008 C   FIELD 20w02 WUS: Wakeup from Stop mode interrupt flag selection
0x44003008 C   FIELD 22w01 WUFIE: Wakeup from Stop mode interrupt enable
0x44003008 C   FIELD 23w01 TXFTIE: threshold interrupt enable
0x44003008 C   FIELD 24w01 TCBGTIE: Tr Complete before guard time, interrupt enable
0x44003008 C   FIELD 25w03 RXFTCFG: Receive FIFO threshold configuration
0x44003008 C   FIELD 28w01 RXFTIE: RXFIFO threshold interrupt enable
0x44003008 C   FIELD 29w03 TXFTCFG: TXFIFO threshold configuration
0x4400300C B  REGISTER BRR (rw): Baud rate register
0x4400300C C   FIELD 00w04 BRR_0_3: BRR_0_3
0x4400300C C   FIELD 04w12 BRR_4_15: BRR_4_15
0x44003010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x44003010 C   FIELD 00w08 PSC: Prescaler value
0x44003010 C   FIELD 08w08 GT: Guard time value
0x44003014 B  REGISTER RTOR (rw): Receiver timeout register
0x44003014 C   FIELD 00w24 RTO: Receiver timeout value
0x44003014 C   FIELD 24w08 BLEN: Block Length
0x44003018 B  REGISTER RQR (wo): Request register
0x44003018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x44003018 C   FIELD 01w01 SBKRQ: Send break request
0x44003018 C   FIELD 02w01 MMRQ: Mute mode request
0x44003018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x44003018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4400301C B  REGISTER ISR (ro): Interrupt & status register
0x4400301C C   FIELD 00w01 PE: PE
0x4400301C C   FIELD 01w01 FE: FE
0x4400301C C   FIELD 02w01 NF: NF
0x4400301C C   FIELD 03w01 ORE: ORE
0x4400301C C   FIELD 04w01 IDLE: IDLE
0x4400301C C   FIELD 05w01 RXNE: RXNE
0x4400301C C   FIELD 06w01 TC: TC
0x4400301C C   FIELD 07w01 TXE: TXE
0x4400301C C   FIELD 08w01 LBDF: LBDF
0x4400301C C   FIELD 09w01 CTSIF: CTSIF
0x4400301C C   FIELD 10w01 CTS: CTS
0x4400301C C   FIELD 11w01 RTOF: RTOF
0x4400301C C   FIELD 12w01 EOBF: EOBF
0x4400301C C   FIELD 13w01 UDR: SPI slave underrun error flag
0x4400301C C   FIELD 14w01 ABRE: ABRE
0x4400301C C   FIELD 15w01 ABRF: ABRF
0x4400301C C   FIELD 16w01 BUSY: BUSY
0x4400301C C   FIELD 17w01 CMF: CMF
0x4400301C C   FIELD 18w01 SBKF: SBKF
0x4400301C C   FIELD 19w01 RWU: RWU
0x4400301C C   FIELD 20w01 WUF: WUF
0x4400301C C   FIELD 21w01 TEACK: TEACK
0x4400301C C   FIELD 22w01 REACK: REACK
0x4400301C C   FIELD 23w01 TXFE: TXFIFO Empty
0x4400301C C   FIELD 24w01 RXFF: RXFIFO Full
0x4400301C C   FIELD 25w01 TCBGT: Transmission complete before guard time flag
0x4400301C C   FIELD 26w01 RXFT: RXFIFO threshold flag
0x4400301C C   FIELD 27w01 TXFT: TXFIFO threshold flag
0x44003020 B  REGISTER ICR (wo): Interrupt flag clear register
0x44003020 C   FIELD 00w01 PECF: Parity error clear flag
0x44003020 C   FIELD 01w01 FECF: Framing error clear flag
0x44003020 C   FIELD 02w01 NCF: Noise detected clear flag
0x44003020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x44003020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x44003020 C   FIELD 05w01 TXFECF: TXFIFO empty clear flag
0x44003020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x44003020 C   FIELD 07w01 TCBGTCF: Transmission complete before Guard time clear flag
0x44003020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x44003020 C   FIELD 09w01 CTSCF: CTS clear flag
0x44003020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x44003020 C   FIELD 12w01 EOBCF: End of block clear flag
0x44003020 C   FIELD 13w01 UDRCF: SPI slave underrun clear flag
0x44003020 C   FIELD 17w01 CMCF: Character match clear flag
0x44003020 C   FIELD 20w01 WUCF: Wakeup from Stop mode clear flag
0x44003024 B  REGISTER RDR (ro): Receive data register
0x44003024 C   FIELD 00w09 RDR: Receive data value
0x44003028 B  REGISTER TDR (rw): Transmit data register
0x44003028 C   FIELD 00w09 TDR: Transmit data value
0x4400302C B  REGISTER PRESC (rw): Prescaler register
0x4400302C C   FIELD 00w04 PRESCALER: Clock prescaler
0x440033EC B  REGISTER HWCFGR2 (ro): USART Hardware Configuration register 2
0x440033EC C   FIELD 00w04 CFG1: CFG1
0x440033EC C   FIELD 04w04 CFG2: CFG2
0x440033F0 B  REGISTER HWCFGR1 (ro): USART Hardware Configuration register 1
0x440033F0 C   FIELD 00w04 CFG1: CFG1
0x440033F0 C   FIELD 04w04 CFG2: CFG2
0x440033F0 C   FIELD 08w04 CFG3: CFG3
0x440033F0 C   FIELD 12w04 CFG4: CFG4
0x440033F0 C   FIELD 16w04 CFG5: CFG5
0x440033F0 C   FIELD 20w04 CFG6: CFG6
0x440033F0 C   FIELD 24w04 CFG7: CFG7
0x440033F0 C   FIELD 28w04 CFG8: CFG8
0x440033F4 B  REGISTER VERR (ro): EXTI IP Version register
0x440033F4 C   FIELD 00w04 MINREV: Minor Revision number
0x440033F4 C   FIELD 04w04 MAJREV: Major Revision number
0x440033F8 B  REGISTER IPIDR (ro): EXTI Identification register
0x440033F8 C   FIELD 00w32 IPID: IP Identification
0x440033FC B  REGISTER SIDR (ro): EXTI Size ID register
0x440033FC C   FIELD 00w32 SID: Size Identification
0x44004000 A PERIPHERAL SPI1
0x44004000 B  REGISTER SPI2S_CR1: SPI/I2S control register 1
0x44004000 C   FIELD 00w01 SPE (rw): SPE
0x44004000 C   FIELD 08w01 MASRX (rw): MASRX
0x44004000 C   FIELD 09w01 CSTART (rw): CSTART
0x44004000 C   FIELD 10w01 CSUSP (wo): CSUSP
0x44004000 C   FIELD 11w01 HDDIR (rw): HDDIR
0x44004000 C   FIELD 12w01 SSI (rw): SSI
0x44004000 C   FIELD 13w01 CRC33_17 (rw): CRC33_17
0x44004000 C   FIELD 14w01 RCRCINI (rw): RCRCINI
0x44004000 C   FIELD 15w01 TCRCINI (rw): TCRCINI
0x44004000 C   FIELD 16w01 IOLOCK (rw): IOLOCK
0x44004004 B  REGISTER SPI_CR2 (rw): SPI control register 2
0x44004004 C   FIELD 00w16 TSIZE: TSIZE
0x44004004 C   FIELD 16w16 TSER: TSER
0x44004008 B  REGISTER SPI_CFG1 (rw): Content of this register is write protected when SPI is enabled
0x44004008 C   FIELD 00w05 DSIZE: DSIZE
0x44004008 C   FIELD 05w04 FTHLV: FTHLV
0x44004008 C   FIELD 09w02 UDRCFG: UDRCFG
0x44004008 C   FIELD 11w02 UDRDET: UDRDET
0x44004008 C   FIELD 14w01 RXDMAEN: RXDMAEN
0x44004008 C   FIELD 15w01 TXDMAEN: TXDMAEN
0x44004008 C   FIELD 16w05 CRCSIZE: CRCSIZE
0x44004008 C   FIELD 22w01 CRCEN: CRCEN
0x44004008 C   FIELD 28w03 MBR: MBR
0x4400400C B  REGISTER SPI_CFG2 (rw): The content of this register is write protected when SPI is enabled or IOLOCK bit is set at SPI2S_CR1 register.
0x4400400C C   FIELD 00w04 MSSI: MSSI
0x4400400C C   FIELD 04w04 MIDI: MIDI
0x4400400C C   FIELD 15w01 IOSWP: IOSWP
0x4400400C C   FIELD 17w02 COMM: COMM
0x4400400C C   FIELD 19w03 SP: SP
0x4400400C C   FIELD 22w01 MASTER: MASTER
0x4400400C C   FIELD 23w01 LSBFRST: LSBFRST
0x4400400C C   FIELD 24w01 CPHA: CPHA
0x4400400C C   FIELD 25w01 CPOL: CPOL
0x4400400C C   FIELD 26w01 SSM: SSM
0x4400400C C   FIELD 28w01 SSIOP: SSIOP
0x4400400C C   FIELD 29w01 SSOE: SSOE
0x4400400C C   FIELD 30w01 SSOM: SSOM
0x4400400C C   FIELD 31w01 AFCNTR: AFCNTR
0x44004010 B  REGISTER SPI2S_IER (rw): SPI/I2S interrupt enable register
0x44004010 C   FIELD 00w01 RXPIE: RXPIE
0x44004010 C   FIELD 01w01 TXPIE: TXPIE
0x44004010 C   FIELD 02w01 DXPIE: DXPIE
0x44004010 C   FIELD 03w01 EOTIE: EOTIE
0x44004010 C   FIELD 04w01 TXTFIE: TXTFIE
0x44004010 C   FIELD 05w01 UDRIE: UDRIE
0x44004010 C   FIELD 06w01 OVRIE: OVRIE
0x44004010 C   FIELD 07w01 CRCEIE: CRCEIE
0x44004010 C   FIELD 08w01 TIFREIE: TIFREIE
0x44004010 C   FIELD 09w01 MODFIE: MODFIE
0x44004010 C   FIELD 10w01 TSERFIE: TSERFIE
0x44004014 B  REGISTER SPI2S_SR (ro): SPI/I2S status register
0x44004014 C   FIELD 00w01 RXP: RXP
0x44004014 C   FIELD 01w01 TXP: TXP
0x44004014 C   FIELD 02w01 DXP: DXP
0x44004014 C   FIELD 03w01 EOT: EOT
0x44004014 C   FIELD 04w01 TXTF: TXTF
0x44004014 C   FIELD 05w01 UDR: UDR
0x44004014 C   FIELD 06w01 OVR: OVR
0x44004014 C   FIELD 07w01 CRCE: CRCE
0x44004014 C   FIELD 08w01 TIFRE: TIFRE
0x44004014 C   FIELD 09w01 MODF: MODF
0x44004014 C   FIELD 10w01 TSERF: TSERF
0x44004014 C   FIELD 11w01 SUSP: SUSP
0x44004014 C   FIELD 12w01 TXC: TXC
0x44004014 C   FIELD 13w02 RXPLVL: RXPLVL
0x44004014 C   FIELD 15w01 RXWNE: RXWNE
0x44004014 C   FIELD 16w16 CTSIZE: CTSIZE
0x44004018 B  REGISTER SPI2S_IFCR (wo): SPI/I2S interrupt/status flags clear register
0x44004018 C   FIELD 03w01 EOTC: EOTC
0x44004018 C   FIELD 04w01 TXTFC: TXTFC
0x44004018 C   FIELD 05w01 UDRC: UDRC
0x44004018 C   FIELD 06w01 OVRC: OVRC
0x44004018 C   FIELD 07w01 CRCEC: CRCEC
0x44004018 C   FIELD 08w01 TIFREC: TIFREC
0x44004018 C   FIELD 09w01 MODFC: MODFC
0x44004018 C   FIELD 10w01 TSERFC: TSERFC
0x44004018 C   FIELD 11w01 SUSPC: SUSPC
0x44004020 B  REGISTER SPI2S_TXDR (wo): SPI/I2S transmit data register
0x44004020 C   FIELD 00w32 TXDR: TXDR
0x44004030 B  REGISTER SPI2S_RXDR (ro): SPI/I2S receive data register
0x44004030 C   FIELD 00w32 RXDR: RXDR
0x44004040 B  REGISTER SPI_CRCPOLY (rw): SPI polynomial register
0x44004040 C   FIELD 00w32 CRCPOLY: CRCPOLY
0x44004044 B  REGISTER SPI_TXCRC (ro): SPI transmitter CRC register
0x44004044 C   FIELD 00w32 TXCRC: TXCRC
0x44004048 B  REGISTER SPI_RXCRC (ro): SPI receiver CRC register
0x44004048 C   FIELD 00w32 RXCRC: RXCRC
0x4400404C B  REGISTER SPI_UDRDR (rw): SPI underrun data register
0x4400404C C   FIELD 00w32 UDRDR: UDRDR
0x44004050 B  REGISTER SPI_I2SCFGR (rw): All documented bits in this register must be configured when the I2S is disabled (SPE = 0).These bits are not used in SPI mode except for I2SMOD which needs to be set to 0 in SPI mode.
0x44004050 C   FIELD 00w01 I2SMOD: I2SMOD
0x44004050 C   FIELD 01w03 I2SCFG: I2SCFG
0x44004050 C   FIELD 04w02 I2SSTD: I2SSTD
0x44004050 C   FIELD 07w01 PCMSYNC: PCMSYNC
0x44004050 C   FIELD 08w02 DATLEN: DATLEN
0x44004050 C   FIELD 10w01 CHLEN: CHLEN
0x44004050 C   FIELD 11w01 CKPOL: CKPOL
0x44004050 C   FIELD 12w01 FIXCH: FIXCH
0x44004050 C   FIELD 13w01 WSINV: WSINV
0x44004050 C   FIELD 14w01 DATFMT: DATFMT
0x44004050 C   FIELD 16w08 I2SDIV: I2SDIV
0x44004050 C   FIELD 24w01 ODD: ODD
0x44004050 C   FIELD 25w01 MCKOE: MCKOE
0x440043F0 B  REGISTER SPI_I2S_HWCFGR (ro): SPI/I2S hardware configuration register
0x440043F0 C   FIELD 00w04 TXFCFG: TXFCFG
0x440043F0 C   FIELD 04w04 RXFCFG: RXFCFG
0x440043F0 C   FIELD 08w04 CRCCFG: CRCCFG
0x440043F0 C   FIELD 12w04 I2SCFG: I2SCFG
0x440043F0 C   FIELD 16w04 DSCFG: DSCFG
0x440043F4 B  REGISTER SPI_VERR (ro): SPI/I2S version register
0x440043F4 C   FIELD 00w04 MINREV: MINREV
0x440043F4 C   FIELD 04w04 MAJREV: MAJREV
0x440043F8 B  REGISTER SPI_IPIDR (ro): SPI/I2S identification register
0x440043F8 C   FIELD 00w32 ID: ID
0x440043FC B  REGISTER SPI_SIDR (ro): SPI/I2S size identification register
0x440043FC C   FIELD 00w32 SID: SID
0x44005000 A PERIPHERAL SPI4
0x44005000 B  REGISTER SPI2S_CR1: SPI/I2S control register 1
0x44005000 C   FIELD 00w01 SPE (rw): SPE
0x44005000 C   FIELD 08w01 MASRX (rw): MASRX
0x44005000 C   FIELD 09w01 CSTART (rw): CSTART
0x44005000 C   FIELD 10w01 CSUSP (wo): CSUSP
0x44005000 C   FIELD 11w01 HDDIR (rw): HDDIR
0x44005000 C   FIELD 12w01 SSI (rw): SSI
0x44005000 C   FIELD 13w01 CRC33_17 (rw): CRC33_17
0x44005000 C   FIELD 14w01 RCRCINI (rw): RCRCINI
0x44005000 C   FIELD 15w01 TCRCINI (rw): TCRCINI
0x44005000 C   FIELD 16w01 IOLOCK (rw): IOLOCK
0x44005004 B  REGISTER SPI_CR2 (rw): SPI control register 2
0x44005004 C   FIELD 00w16 TSIZE: TSIZE
0x44005004 C   FIELD 16w16 TSER: TSER
0x44005008 B  REGISTER SPI_CFG1 (rw): Content of this register is write protected when SPI is enabled
0x44005008 C   FIELD 00w05 DSIZE: DSIZE
0x44005008 C   FIELD 05w04 FTHLV: FTHLV
0x44005008 C   FIELD 09w02 UDRCFG: UDRCFG
0x44005008 C   FIELD 11w02 UDRDET: UDRDET
0x44005008 C   FIELD 14w01 RXDMAEN: RXDMAEN
0x44005008 C   FIELD 15w01 TXDMAEN: TXDMAEN
0x44005008 C   FIELD 16w05 CRCSIZE: CRCSIZE
0x44005008 C   FIELD 22w01 CRCEN: CRCEN
0x44005008 C   FIELD 28w03 MBR: MBR
0x4400500C B  REGISTER SPI_CFG2 (rw): The content of this register is write protected when SPI is enabled or IOLOCK bit is set at SPI2S_CR1 register.
0x4400500C C   FIELD 00w04 MSSI: MSSI
0x4400500C C   FIELD 04w04 MIDI: MIDI
0x4400500C C   FIELD 15w01 IOSWP: IOSWP
0x4400500C C   FIELD 17w02 COMM: COMM
0x4400500C C   FIELD 19w03 SP: SP
0x4400500C C   FIELD 22w01 MASTER: MASTER
0x4400500C C   FIELD 23w01 LSBFRST: LSBFRST
0x4400500C C   FIELD 24w01 CPHA: CPHA
0x4400500C C   FIELD 25w01 CPOL: CPOL
0x4400500C C   FIELD 26w01 SSM: SSM
0x4400500C C   FIELD 28w01 SSIOP: SSIOP
0x4400500C C   FIELD 29w01 SSOE: SSOE
0x4400500C C   FIELD 30w01 SSOM: SSOM
0x4400500C C   FIELD 31w01 AFCNTR: AFCNTR
0x44005010 B  REGISTER SPI2S_IER (rw): SPI/I2S interrupt enable register
0x44005010 C   FIELD 00w01 RXPIE: RXPIE
0x44005010 C   FIELD 01w01 TXPIE: TXPIE
0x44005010 C   FIELD 02w01 DXPIE: DXPIE
0x44005010 C   FIELD 03w01 EOTIE: EOTIE
0x44005010 C   FIELD 04w01 TXTFIE: TXTFIE
0x44005010 C   FIELD 05w01 UDRIE: UDRIE
0x44005010 C   FIELD 06w01 OVRIE: OVRIE
0x44005010 C   FIELD 07w01 CRCEIE: CRCEIE
0x44005010 C   FIELD 08w01 TIFREIE: TIFREIE
0x44005010 C   FIELD 09w01 MODFIE: MODFIE
0x44005010 C   FIELD 10w01 TSERFIE: TSERFIE
0x44005014 B  REGISTER SPI2S_SR (ro): SPI/I2S status register
0x44005014 C   FIELD 00w01 RXP: RXP
0x44005014 C   FIELD 01w01 TXP: TXP
0x44005014 C   FIELD 02w01 DXP: DXP
0x44005014 C   FIELD 03w01 EOT: EOT
0x44005014 C   FIELD 04w01 TXTF: TXTF
0x44005014 C   FIELD 05w01 UDR: UDR
0x44005014 C   FIELD 06w01 OVR: OVR
0x44005014 C   FIELD 07w01 CRCE: CRCE
0x44005014 C   FIELD 08w01 TIFRE: TIFRE
0x44005014 C   FIELD 09w01 MODF: MODF
0x44005014 C   FIELD 10w01 TSERF: TSERF
0x44005014 C   FIELD 11w01 SUSP: SUSP
0x44005014 C   FIELD 12w01 TXC: TXC
0x44005014 C   FIELD 13w02 RXPLVL: RXPLVL
0x44005014 C   FIELD 15w01 RXWNE: RXWNE
0x44005014 C   FIELD 16w16 CTSIZE: CTSIZE
0x44005018 B  REGISTER SPI2S_IFCR (wo): SPI/I2S interrupt/status flags clear register
0x44005018 C   FIELD 03w01 EOTC: EOTC
0x44005018 C   FIELD 04w01 TXTFC: TXTFC
0x44005018 C   FIELD 05w01 UDRC: UDRC
0x44005018 C   FIELD 06w01 OVRC: OVRC
0x44005018 C   FIELD 07w01 CRCEC: CRCEC
0x44005018 C   FIELD 08w01 TIFREC: TIFREC
0x44005018 C   FIELD 09w01 MODFC: MODFC
0x44005018 C   FIELD 10w01 TSERFC: TSERFC
0x44005018 C   FIELD 11w01 SUSPC: SUSPC
0x44005020 B  REGISTER SPI2S_TXDR (wo): SPI/I2S transmit data register
0x44005020 C   FIELD 00w32 TXDR: TXDR
0x44005030 B  REGISTER SPI2S_RXDR (ro): SPI/I2S receive data register
0x44005030 C   FIELD 00w32 RXDR: RXDR
0x44005040 B  REGISTER SPI_CRCPOLY (rw): SPI polynomial register
0x44005040 C   FIELD 00w32 CRCPOLY: CRCPOLY
0x44005044 B  REGISTER SPI_TXCRC (ro): SPI transmitter CRC register
0x44005044 C   FIELD 00w32 TXCRC: TXCRC
0x44005048 B  REGISTER SPI_RXCRC (ro): SPI receiver CRC register
0x44005048 C   FIELD 00w32 RXCRC: RXCRC
0x4400504C B  REGISTER SPI_UDRDR (rw): SPI underrun data register
0x4400504C C   FIELD 00w32 UDRDR: UDRDR
0x44005050 B  REGISTER SPI_I2SCFGR (rw): All documented bits in this register must be configured when the I2S is disabled (SPE = 0).These bits are not used in SPI mode except for I2SMOD which needs to be set to 0 in SPI mode.
0x44005050 C   FIELD 00w01 I2SMOD: I2SMOD
0x44005050 C   FIELD 01w03 I2SCFG: I2SCFG
0x44005050 C   FIELD 04w02 I2SSTD: I2SSTD
0x44005050 C   FIELD 07w01 PCMSYNC: PCMSYNC
0x44005050 C   FIELD 08w02 DATLEN: DATLEN
0x44005050 C   FIELD 10w01 CHLEN: CHLEN
0x44005050 C   FIELD 11w01 CKPOL: CKPOL
0x44005050 C   FIELD 12w01 FIXCH: FIXCH
0x44005050 C   FIELD 13w01 WSINV: WSINV
0x44005050 C   FIELD 14w01 DATFMT: DATFMT
0x44005050 C   FIELD 16w08 I2SDIV: I2SDIV
0x44005050 C   FIELD 24w01 ODD: ODD
0x44005050 C   FIELD 25w01 MCKOE: MCKOE
0x440053F0 B  REGISTER SPI_I2S_HWCFGR (ro): SPI/I2S hardware configuration register
0x440053F0 C   FIELD 00w04 TXFCFG: TXFCFG
0x440053F0 C   FIELD 04w04 RXFCFG: RXFCFG
0x440053F0 C   FIELD 08w04 CRCCFG: CRCCFG
0x440053F0 C   FIELD 12w04 I2SCFG: I2SCFG
0x440053F0 C   FIELD 16w04 DSCFG: DSCFG
0x440053F4 B  REGISTER SPI_VERR (ro): SPI/I2S version register
0x440053F4 C   FIELD 00w04 MINREV: MINREV
0x440053F4 C   FIELD 04w04 MAJREV: MAJREV
0x440053F8 B  REGISTER SPI_IPIDR (ro): SPI/I2S identification register
0x440053F8 C   FIELD 00w32 ID: ID
0x440053FC B  REGISTER SPI_SIDR (ro): SPI/I2S size identification register
0x440053FC C   FIELD 00w32 SID: SID
0x44006000 A PERIPHERAL TIM15
0x44006000 B  REGISTER TIM15_CR1 (rw): TIM15 control register 1
0x44006000 C   FIELD 00w01 CEN (rw): CEN
0x44006000 C   FIELD 01w01 UDIS (rw): UDIS
0x44006000 C   FIELD 02w01 URS (rw): URS
0x44006000 C   FIELD 03w01 OPM (rw): OPM
0x44006000 C   FIELD 07w01 ARPE (rw): ARPE
0x44006000 C   FIELD 08w02 CKD (rw): CKD
0x44006000 C   FIELD 11w01 UIFREMAP (rw): UIFREMAP
0x44006004 B  REGISTER TIM15_CR2 (rw): TIM15 control register 2
0x44006004 C   FIELD 00w01 CCPC (rw): CCPC
0x44006004 C   FIELD 02w01 CCUS (rw): CCUS
0x44006004 C   FIELD 03w01 CCDS (rw): CCDS
0x44006004 C   FIELD 04w03 MMS (rw): MMS
0x44006004 C   FIELD 07w01 TI1S (rw): TI1S
0x44006004 C   FIELD 08w01 OIS1 (rw): OIS1
0x44006004 C   FIELD 09w01 OIS1N (rw): OIS1N
0x44006004 C   FIELD 10w01 OIS2 (rw): OIS2
0x44006008 B  REGISTER TIMx_SMCR (rw): slave mode control register
0x44006008 C   FIELD 00w03 SMS: Slave mode selection
0x44006008 C   FIELD 04w03 TS: Trigger selection
0x44006008 C   FIELD 07w01 MSM: Master/Slave mode
0x44006008 C   FIELD 16w01 SMS_3: Slave mode selection - bit 3
0x44006008 C   FIELD 20w02 TS_4_3: Trigger selection
0x4400600C B  REGISTER TIM15_DIER (rw): TIM15 DMA/interrupt enable register
0x4400600C C   FIELD 00w01 UIE (rw): UIE
0x4400600C C   FIELD 01w01 CC1IE (rw): CC1IE
0x4400600C C   FIELD 02w01 CC2IE (rw): CC2IE
0x4400600C C   FIELD 05w01 COMIE (rw): COMIE
0x4400600C C   FIELD 06w01 TIE (rw): TIE
0x4400600C C   FIELD 07w01 BIE (rw): BIE
0x4400600C C   FIELD 08w01 UDE (rw): UDE
0x4400600C C   FIELD 09w01 CC1DE (rw): CC1DE
0x4400600C C   FIELD 10w01 CC2DE (rw): CC2DE
0x4400600C C   FIELD 13w01 COMDE (rw): COMDE
0x4400600C C   FIELD 14w01 TDE (rw): TDE
0x44006010 B  REGISTER TIM15_SR (rw): TIM15 status register
0x44006010 C   FIELD 00w01 UIF (rw): UIF
0x44006010 C   FIELD 01w01 CC1IF (rw): CC1IF
0x44006010 C   FIELD 02w01 CC2IF (rw): CC2IF
0x44006010 C   FIELD 05w01 COMIF (rw): COMIF
0x44006010 C   FIELD 06w01 TIF (rw): TIF
0x44006010 C   FIELD 07w01 BIF (rw): BIF
0x44006010 C   FIELD 09w01 CC1OF (rw): CC1OF
0x44006010 C   FIELD 10w01 CC2OF (rw): CC2OF
0x44006014 B  REGISTER TIMx_EGR (wo): event generation register
0x44006014 C   FIELD 00w01 UG: Update generation
0x44006014 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x44006014 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x44006014 C   FIELD 05w01 COMG: COMG
0x44006014 C   FIELD 06w01 TG: Trigger generation
0x44006014 C   FIELD 07w01 BG: BG
0x44006018 B  REGISTER TIMx_CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x44006018 B  REGISTER TIMx_CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x44006018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x44006018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x44006018 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x44006018 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x44006018 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x44006018 C   FIELD 04w03 OC1M: Output compare 1 mode
0x44006018 C   FIELD 04w04 IC1F: Input capture 1 filter
0x44006018 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x44006018 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x44006018 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x44006018 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x44006018 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x44006018 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x44006018 C   FIELD 12w03 OC2M: Output compare 2 mode
0x44006018 C   FIELD 12w04 IC2F: Input capture 2 filter
0x44006018 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x44006018 C   FIELD 16w01 OC1M_3: Output Compare 1 mode - bit 3
0x44006018 C   FIELD 24w01 OC2M_3: Output Compare 2 mode - bit 3
0x44006020 B  REGISTER TIM15_CCER (rw): TIM15 capture/compare enable register
0x44006020 C   FIELD 00w01 CC1E (rw): CC1E
0x44006020 C   FIELD 01w01 CC1P (rw): CC1P
0x44006020 C   FIELD 02w01 CC1NE (rw): CC1NE
0x44006020 C   FIELD 03w01 CC1NP (rw): CC1NP
0x44006020 C   FIELD 04w01 CC2E (rw): CC2E
0x44006020 C   FIELD 05w01 CC2P (rw): CC2P
0x44006020 C   FIELD 07w01 CC2NP (rw): CC2NP
0x44006024 B  REGISTER TIM15_CNT (rw): TIM15 counter
0x44006024 C   FIELD 00w16 CNT (rw): CNT
0x44006024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x44006028 B  REGISTER TIM15_PSC (rw): TIM15 prescaler
0x44006028 C   FIELD 00w16 PSC (rw): PSC
0x4400602C B  REGISTER TIM15_ARR (rw): TIM15 auto-reload register
0x4400602C C   FIELD 00w16 ARR (rw): ARR
0x44006030 B  REGISTER TIM15_RCR (rw): TIM15 repetition counter register
0x44006030 C   FIELD 00w08 REP (rw): REP
0x44006034 B  REGISTER TIM15_CCR1 (rw): TIM15 capture/compare register 1
0x44006034 C   FIELD 00w16 CCR1 (rw): CCR1
0x44006038 B  REGISTER TIM15_CCR2 (rw): TIM15 capture/compare register 2
0x44006038 C   FIELD 00w16 CCR2 (rw): CCR2
0x44006044 B  REGISTER TIMx_BDTR (rw): As the bits BK2BID, BKBID, BK2DSRM, BKDSRM, BK2P, BK2E, BK2F[3:0], BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] can be write-locked depending on the LOCK configuration, it can be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x44006044 C   FIELD 00w08 DTG (rw): DTG
0x44006044 C   FIELD 08w02 LOCK (rw): LOCK
0x44006044 C   FIELD 10w01 OSSI (rw): OSSI
0x44006044 C   FIELD 11w01 OSSR (rw): OSSR
0x44006044 C   FIELD 12w01 BKE (rw): BKE
0x44006044 C   FIELD 13w01 BKP (rw): BKP
0x44006044 C   FIELD 14w01 AOE (rw): AOE
0x44006044 C   FIELD 15w01 MOE (rw): MOE
0x44006044 C   FIELD 16w04 BKF (rw): BKF
0x44006044 C   FIELD 26w01 BKDSRM (rw): BKDSRM
0x44006044 C   FIELD 28w01 BKBID (rw): BKBID
0x44006048 B  REGISTER TIM15_DCR (rw): TIM15 DMA control register
0x44006048 C   FIELD 00w05 DBA (rw): DBA
0x44006048 C   FIELD 08w05 DBL (rw): DBL
0x4400604C B  REGISTER TIM15_DMAR (rw): TIM15 DMA address for full transfer
0x4400604C C   FIELD 00w16 DMAB (rw): DMAB
0x44006060 B  REGISTER TIM15_AF1 (rw): TIM15 alternate register 1
0x44006060 C   FIELD 00w01 BKINE (rw): BKINE
0x44006060 C   FIELD 08w01 BKDF1BK0E (rw): BKDF1BK0E
0x44006060 C   FIELD 09w01 BKINP (rw): BKINP
0x44006068 B  REGISTER TIM15_TISEL (rw): TIM15 input selection register
0x44006068 C   FIELD 00w04 TI1SEL (rw): TI1SEL
0x44006068 C   FIELD 08w04 TI2SEL (rw): TI2SEL
0x44007000 A PERIPHERAL TIM16
0x44007000 B  REGISTER TIMx_CR1 (rw): TIM16/TIM17 control register 1
0x44007000 C   FIELD 00w01 CEN (rw): CEN
0x44007000 C   FIELD 01w01 UDIS (rw): UDIS
0x44007000 C   FIELD 02w01 URS (rw): URS
0x44007000 C   FIELD 03w01 OPM (rw): OPM
0x44007000 C   FIELD 07w01 ARPE (rw): ARPE
0x44007000 C   FIELD 08w02 CKD (rw): CKD
0x44007000 C   FIELD 11w01 UIFREMAP (rw): UIFREMAP
0x44007004 B  REGISTER TIMx_CR2 (rw): TIM16/TIM17 control register 2
0x44007004 C   FIELD 00w01 CCPC (rw): CCPC
0x44007004 C   FIELD 02w01 CCUS (rw): CCUS
0x44007004 C   FIELD 03w01 CCDS (rw): CCDS
0x44007004 C   FIELD 08w01 OIS1 (rw): OIS1
0x44007004 C   FIELD 09w01 OIS1N (rw): OIS1N
0x4400700C B  REGISTER TIMx_DIER (rw): TIM16/TIM17 DMA/interrupt enable register
0x4400700C C   FIELD 00w01 UIE (rw): UIE
0x4400700C C   FIELD 01w01 CC1IE (rw): CC1IE
0x4400700C C   FIELD 05w01 COMIE (rw): COMIE
0x4400700C C   FIELD 07w01 BIE (rw): BIE
0x4400700C C   FIELD 08w01 UDE (rw): UDE
0x4400700C C   FIELD 09w01 CC1DE (rw): CC1DE
0x4400700C C   FIELD 13w01 COMDE (rw): COMDE
0x44007010 B  REGISTER TIMx_SR (rw): TIM16/TIM17 status register
0x44007010 C   FIELD 00w01 UIF (rw): UIF
0x44007010 C   FIELD 01w01 CC1IF (rw): CC1IF
0x44007010 C   FIELD 05w01 COMIF (rw): COMIF
0x44007010 C   FIELD 07w01 BIF (rw): BIF
0x44007010 C   FIELD 09w01 CC1OF (rw): CC1OF
0x44007014 B  REGISTER TIMx_EGR (wo): event generation register
0x44007014 C   FIELD 00w01 UG: Update generation
0x44007020 B  REGISTER TIMx_CCER (rw): TIM16/TIM17 capture/compare enable register
0x44007020 C   FIELD 00w01 CC1E (rw): CC1E
0x44007020 C   FIELD 01w01 CC1P (rw): CC1P
0x44007020 C   FIELD 02w01 CC1NE (rw): CC1NE
0x44007020 C   FIELD 03w01 CC1NP (rw): CC1NP
0x44007024 B  REGISTER TIMx_CNT (rw): TIM16/TIM17 counter
0x44007024 C   FIELD 00w16 CNT (rw): CNT
0x44007024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x44007028 B  REGISTER TIMx_PSC (rw): TIM16/TIM17 prescaler
0x44007028 C   FIELD 00w16 PSC (rw): PSC
0x4400702C B  REGISTER TIMx_ARR (rw): TIM16/TIM17 auto-reload register
0x4400702C C   FIELD 00w16 ARR (rw): ARR
0x44007030 B  REGISTER TIMx_RCR (rw): TIM16/TIM17 repetition counter register
0x44007030 C   FIELD 00w08 REP (rw): REP
0x44007034 B  REGISTER TIMx_CCR1 (rw): TIM16/TIM17 capture/compare register 1
0x44007034 C   FIELD 00w16 CCR1 (rw): CCR1
0x44007044 B  REGISTER TIMx_BDTR (rw): As the BKBID, BKDSRM, BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] bits may be write-locked depending on the LOCK configuration, it may be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x44007044 C   FIELD 00w08 DTG (rw): DTG
0x44007044 C   FIELD 08w02 LOCK (rw): LOCK
0x44007044 C   FIELD 10w01 OSSI (rw): OSSI
0x44007044 C   FIELD 11w01 OSSR (rw): OSSR
0x44007044 C   FIELD 12w01 BKE (rw): BKE
0x44007044 C   FIELD 13w01 BKP (rw): BKP
0x44007044 C   FIELD 14w01 AOE (rw): AOE
0x44007044 C   FIELD 15w01 MOE (rw): MOE
0x44007044 C   FIELD 16w04 BKF (rw): BKF
0x44007044 C   FIELD 26w01 BKDSRM (rw): BKDSRM
0x44007044 C   FIELD 28w01 BKBID (rw): BKBID
0x44007048 B  REGISTER TIMx_DCR (rw): TIM16/TIM17 DMA control register
0x44007048 C   FIELD 00w05 DBA (rw): DBA
0x44007048 C   FIELD 08w05 DBL (rw): DBL
0x4400704C B  REGISTER TIMx_DMAR (rw): TIM16/TIM17 DMA address for full transfer
0x4400704C C   FIELD 00w16 DMAB (rw): DMAB
0x44007060 B  REGISTER TIMx_AF1 (rw): TIM17 alternate function register 1
0x44007060 C   FIELD 00w01 BKINE (rw): BKINE
0x44007060 C   FIELD 08w01 BKDF1BK2E (rw): BKDF1BK2E
0x44007060 C   FIELD 09w01 BKINP (rw): BKINP
0x44007068 B  REGISTER TIMx_TISEL (rw): TIM17 input selection register
0x44007068 C   FIELD 00w04 TI1SEL (rw): TI1SEL
0x44008000 A PERIPHERAL TIM17
0x44008000 B  REGISTER TIMx_CR1 (rw): TIM16/TIM17 control register 1
0x44008000 C   FIELD 00w01 CEN (rw): CEN
0x44008000 C   FIELD 01w01 UDIS (rw): UDIS
0x44008000 C   FIELD 02w01 URS (rw): URS
0x44008000 C   FIELD 03w01 OPM (rw): OPM
0x44008000 C   FIELD 07w01 ARPE (rw): ARPE
0x44008000 C   FIELD 08w02 CKD (rw): CKD
0x44008000 C   FIELD 11w01 UIFREMAP (rw): UIFREMAP
0x44008004 B  REGISTER TIMx_CR2 (rw): TIM16/TIM17 control register 2
0x44008004 C   FIELD 00w01 CCPC (rw): CCPC
0x44008004 C   FIELD 02w01 CCUS (rw): CCUS
0x44008004 C   FIELD 03w01 CCDS (rw): CCDS
0x44008004 C   FIELD 08w01 OIS1 (rw): OIS1
0x44008004 C   FIELD 09w01 OIS1N (rw): OIS1N
0x4400800C B  REGISTER TIMx_DIER (rw): TIM16/TIM17 DMA/interrupt enable register
0x4400800C C   FIELD 00w01 UIE (rw): UIE
0x4400800C C   FIELD 01w01 CC1IE (rw): CC1IE
0x4400800C C   FIELD 05w01 COMIE (rw): COMIE
0x4400800C C   FIELD 07w01 BIE (rw): BIE
0x4400800C C   FIELD 08w01 UDE (rw): UDE
0x4400800C C   FIELD 09w01 CC1DE (rw): CC1DE
0x4400800C C   FIELD 13w01 COMDE (rw): COMDE
0x44008010 B  REGISTER TIMx_SR (rw): TIM16/TIM17 status register
0x44008010 C   FIELD 00w01 UIF (rw): UIF
0x44008010 C   FIELD 01w01 CC1IF (rw): CC1IF
0x44008010 C   FIELD 05w01 COMIF (rw): COMIF
0x44008010 C   FIELD 07w01 BIF (rw): BIF
0x44008010 C   FIELD 09w01 CC1OF (rw): CC1OF
0x44008014 B  REGISTER TIMx_EGR (wo): event generation register
0x44008014 C   FIELD 00w01 UG: Update generation
0x44008020 B  REGISTER TIMx_CCER (rw): TIM16/TIM17 capture/compare enable register
0x44008020 C   FIELD 00w01 CC1E (rw): CC1E
0x44008020 C   FIELD 01w01 CC1P (rw): CC1P
0x44008020 C   FIELD 02w01 CC1NE (rw): CC1NE
0x44008020 C   FIELD 03w01 CC1NP (rw): CC1NP
0x44008024 B  REGISTER TIMx_CNT (rw): TIM16/TIM17 counter
0x44008024 C   FIELD 00w16 CNT (rw): CNT
0x44008024 C   FIELD 31w01 UIFCPY (ro): UIFCPY
0x44008028 B  REGISTER TIMx_PSC (rw): TIM16/TIM17 prescaler
0x44008028 C   FIELD 00w16 PSC (rw): PSC
0x4400802C B  REGISTER TIMx_ARR (rw): TIM16/TIM17 auto-reload register
0x4400802C C   FIELD 00w16 ARR (rw): ARR
0x44008030 B  REGISTER TIMx_RCR (rw): TIM16/TIM17 repetition counter register
0x44008030 C   FIELD 00w08 REP (rw): REP
0x44008034 B  REGISTER TIMx_CCR1 (rw): TIM16/TIM17 capture/compare register 1
0x44008034 C   FIELD 00w16 CCR1 (rw): CCR1
0x44008044 B  REGISTER TIMx_BDTR (rw): As the BKBID, BKDSRM, BKF[3:0], AOE, BKP, BKE, OSSI, OSSR and DTG[7:0] bits may be write-locked depending on the LOCK configuration, it may be necessary to configure all of them during the first write access to the TIMx_BDTR register.
0x44008044 C   FIELD 00w08 DTG (rw): DTG
0x44008044 C   FIELD 08w02 LOCK (rw): LOCK
0x44008044 C   FIELD 10w01 OSSI (rw): OSSI
0x44008044 C   FIELD 11w01 OSSR (rw): OSSR
0x44008044 C   FIELD 12w01 BKE (rw): BKE
0x44008044 C   FIELD 13w01 BKP (rw): BKP
0x44008044 C   FIELD 14w01 AOE (rw): AOE
0x44008044 C   FIELD 15w01 MOE (rw): MOE
0x44008044 C   FIELD 16w04 BKF (rw): BKF
0x44008044 C   FIELD 26w01 BKDSRM (rw): BKDSRM
0x44008044 C   FIELD 28w01 BKBID (rw): BKBID
0x44008048 B  REGISTER TIMx_DCR (rw): TIM16/TIM17 DMA control register
0x44008048 C   FIELD 00w05 DBA (rw): DBA
0x44008048 C   FIELD 08w05 DBL (rw): DBL
0x4400804C B  REGISTER TIMx_DMAR (rw): TIM16/TIM17 DMA address for full transfer
0x4400804C C   FIELD 00w16 DMAB (rw): DMAB
0x44008060 B  REGISTER TIMx_AF1 (rw): TIM17 alternate function register 1
0x44008060 C   FIELD 00w01 BKINE (rw): BKINE
0x44008060 C   FIELD 08w01 BKDF1BK2E (rw): BKDF1BK2E
0x44008060 C   FIELD 09w01 BKINP (rw): BKINP
0x44008068 B  REGISTER TIMx_TISEL (rw): TIM17 input selection register
0x44008068 C   FIELD 00w04 TI1SEL (rw): TI1SEL
0x44009000 A PERIPHERAL SPI5
0x44009000 B  REGISTER SPI2S_CR1: SPI/I2S control register 1
0x44009000 C   FIELD 00w01 SPE (rw): SPE
0x44009000 C   FIELD 08w01 MASRX (rw): MASRX
0x44009000 C   FIELD 09w01 CSTART (rw): CSTART
0x44009000 C   FIELD 10w01 CSUSP (wo): CSUSP
0x44009000 C   FIELD 11w01 HDDIR (rw): HDDIR
0x44009000 C   FIELD 12w01 SSI (rw): SSI
0x44009000 C   FIELD 13w01 CRC33_17 (rw): CRC33_17
0x44009000 C   FIELD 14w01 RCRCINI (rw): RCRCINI
0x44009000 C   FIELD 15w01 TCRCINI (rw): TCRCINI
0x44009000 C   FIELD 16w01 IOLOCK (rw): IOLOCK
0x44009004 B  REGISTER SPI_CR2 (rw): SPI control register 2
0x44009004 C   FIELD 00w16 TSIZE: TSIZE
0x44009004 C   FIELD 16w16 TSER: TSER
0x44009008 B  REGISTER SPI_CFG1 (rw): Content of this register is write protected when SPI is enabled
0x44009008 C   FIELD 00w05 DSIZE: DSIZE
0x44009008 C   FIELD 05w04 FTHLV: FTHLV
0x44009008 C   FIELD 09w02 UDRCFG: UDRCFG
0x44009008 C   FIELD 11w02 UDRDET: UDRDET
0x44009008 C   FIELD 14w01 RXDMAEN: RXDMAEN
0x44009008 C   FIELD 15w01 TXDMAEN: TXDMAEN
0x44009008 C   FIELD 16w05 CRCSIZE: CRCSIZE
0x44009008 C   FIELD 22w01 CRCEN: CRCEN
0x44009008 C   FIELD 28w03 MBR: MBR
0x4400900C B  REGISTER SPI_CFG2 (rw): The content of this register is write protected when SPI is enabled or IOLOCK bit is set at SPI2S_CR1 register.
0x4400900C C   FIELD 00w04 MSSI: MSSI
0x4400900C C   FIELD 04w04 MIDI: MIDI
0x4400900C C   FIELD 15w01 IOSWP: IOSWP
0x4400900C C   FIELD 17w02 COMM: COMM
0x4400900C C   FIELD 19w03 SP: SP
0x4400900C C   FIELD 22w01 MASTER: MASTER
0x4400900C C   FIELD 23w01 LSBFRST: LSBFRST
0x4400900C C   FIELD 24w01 CPHA: CPHA
0x4400900C C   FIELD 25w01 CPOL: CPOL
0x4400900C C   FIELD 26w01 SSM: SSM
0x4400900C C   FIELD 28w01 SSIOP: SSIOP
0x4400900C C   FIELD 29w01 SSOE: SSOE
0x4400900C C   FIELD 30w01 SSOM: SSOM
0x4400900C C   FIELD 31w01 AFCNTR: AFCNTR
0x44009010 B  REGISTER SPI2S_IER (rw): SPI/I2S interrupt enable register
0x44009010 C   FIELD 00w01 RXPIE: RXPIE
0x44009010 C   FIELD 01w01 TXPIE: TXPIE
0x44009010 C   FIELD 02w01 DXPIE: DXPIE
0x44009010 C   FIELD 03w01 EOTIE: EOTIE
0x44009010 C   FIELD 04w01 TXTFIE: TXTFIE
0x44009010 C   FIELD 05w01 UDRIE: UDRIE
0x44009010 C   FIELD 06w01 OVRIE: OVRIE
0x44009010 C   FIELD 07w01 CRCEIE: CRCEIE
0x44009010 C   FIELD 08w01 TIFREIE: TIFREIE
0x44009010 C   FIELD 09w01 MODFIE: MODFIE
0x44009010 C   FIELD 10w01 TSERFIE: TSERFIE
0x44009014 B  REGISTER SPI2S_SR (ro): SPI/I2S status register
0x44009014 C   FIELD 00w01 RXP: RXP
0x44009014 C   FIELD 01w01 TXP: TXP
0x44009014 C   FIELD 02w01 DXP: DXP
0x44009014 C   FIELD 03w01 EOT: EOT
0x44009014 C   FIELD 04w01 TXTF: TXTF
0x44009014 C   FIELD 05w01 UDR: UDR
0x44009014 C   FIELD 06w01 OVR: OVR
0x44009014 C   FIELD 07w01 CRCE: CRCE
0x44009014 C   FIELD 08w01 TIFRE: TIFRE
0x44009014 C   FIELD 09w01 MODF: MODF
0x44009014 C   FIELD 10w01 TSERF: TSERF
0x44009014 C   FIELD 11w01 SUSP: SUSP
0x44009014 C   FIELD 12w01 TXC: TXC
0x44009014 C   FIELD 13w02 RXPLVL: RXPLVL
0x44009014 C   FIELD 15w01 RXWNE: RXWNE
0x44009014 C   FIELD 16w16 CTSIZE: CTSIZE
0x44009018 B  REGISTER SPI2S_IFCR (wo): SPI/I2S interrupt/status flags clear register
0x44009018 C   FIELD 03w01 EOTC: EOTC
0x44009018 C   FIELD 04w01 TXTFC: TXTFC
0x44009018 C   FIELD 05w01 UDRC: UDRC
0x44009018 C   FIELD 06w01 OVRC: OVRC
0x44009018 C   FIELD 07w01 CRCEC: CRCEC
0x44009018 C   FIELD 08w01 TIFREC: TIFREC
0x44009018 C   FIELD 09w01 MODFC: MODFC
0x44009018 C   FIELD 10w01 TSERFC: TSERFC
0x44009018 C   FIELD 11w01 SUSPC: SUSPC
0x44009020 B  REGISTER SPI2S_TXDR (wo): SPI/I2S transmit data register
0x44009020 C   FIELD 00w32 TXDR: TXDR
0x44009030 B  REGISTER SPI2S_RXDR (ro): SPI/I2S receive data register
0x44009030 C   FIELD 00w32 RXDR: RXDR
0x44009040 B  REGISTER SPI_CRCPOLY (rw): SPI polynomial register
0x44009040 C   FIELD 00w32 CRCPOLY: CRCPOLY
0x44009044 B  REGISTER SPI_TXCRC (ro): SPI transmitter CRC register
0x44009044 C   FIELD 00w32 TXCRC: TXCRC
0x44009048 B  REGISTER SPI_RXCRC (ro): SPI receiver CRC register
0x44009048 C   FIELD 00w32 RXCRC: RXCRC
0x4400904C B  REGISTER SPI_UDRDR (rw): SPI underrun data register
0x4400904C C   FIELD 00w32 UDRDR: UDRDR
0x44009050 B  REGISTER SPI_I2SCFGR (rw): All documented bits in this register must be configured when the I2S is disabled (SPE = 0).These bits are not used in SPI mode except for I2SMOD which needs to be set to 0 in SPI mode.
0x44009050 C   FIELD 00w01 I2SMOD: I2SMOD
0x44009050 C   FIELD 01w03 I2SCFG: I2SCFG
0x44009050 C   FIELD 04w02 I2SSTD: I2SSTD
0x44009050 C   FIELD 07w01 PCMSYNC: PCMSYNC
0x44009050 C   FIELD 08w02 DATLEN: DATLEN
0x44009050 C   FIELD 10w01 CHLEN: CHLEN
0x44009050 C   FIELD 11w01 CKPOL: CKPOL
0x44009050 C   FIELD 12w01 FIXCH: FIXCH
0x44009050 C   FIELD 13w01 WSINV: WSINV
0x44009050 C   FIELD 14w01 DATFMT: DATFMT
0x44009050 C   FIELD 16w08 I2SDIV: I2SDIV
0x44009050 C   FIELD 24w01 ODD: ODD
0x44009050 C   FIELD 25w01 MCKOE: MCKOE
0x440093F0 B  REGISTER SPI_I2S_HWCFGR (ro): SPI/I2S hardware configuration register
0x440093F0 C   FIELD 00w04 TXFCFG: TXFCFG
0x440093F0 C   FIELD 04w04 RXFCFG: RXFCFG
0x440093F0 C   FIELD 08w04 CRCCFG: CRCCFG
0x440093F0 C   FIELD 12w04 I2SCFG: I2SCFG
0x440093F0 C   FIELD 16w04 DSCFG: DSCFG
0x440093F4 B  REGISTER SPI_VERR (ro): SPI/I2S version register
0x440093F4 C   FIELD 00w04 MINREV: MINREV
0x440093F4 C   FIELD 04w04 MAJREV: MAJREV
0x440093F8 B  REGISTER SPI_IPIDR (ro): SPI/I2S identification register
0x440093F8 C   FIELD 00w32 ID: ID
0x440093FC B  REGISTER SPI_SIDR (ro): SPI/I2S size identification register
0x440093FC C   FIELD 00w32 SID: SID
0x4400A000 A PERIPHERAL SAI1
0x4400A000 B  REGISTER SAI_GCR (rw): Global configuration register
0x4400A000 C   FIELD 00w02 SYNCIN: SYNCIN
0x4400A000 C   FIELD 04w02 SYNCOUT: SYNCOUT
0x4400A004 B  REGISTER SAI_ACR1 (rw): Configuration register 1
0x4400A004 C   FIELD 00w02 MODE: MODE
0x4400A004 C   FIELD 02w02 PRTCFG: PRTCFG
0x4400A004 C   FIELD 05w03 DS: DS
0x4400A004 C   FIELD 08w01 LSBFIRST: LSBFIRST
0x4400A004 C   FIELD 09w01 CKSTR: CKSTR
0x4400A004 C   FIELD 10w02 SYNCEN: SYNCEN
0x4400A004 C   FIELD 12w01 MONO: MONO
0x4400A004 C   FIELD 13w01 OUTDRIV: OUTDRIV
0x4400A004 C   FIELD 16w01 SAIEN: SAIEN
0x4400A004 C   FIELD 17w01 DMAEN: DMAEN
0x4400A004 C   FIELD 19w01 NODIV: NODIV
0x4400A004 C   FIELD 20w06 MCKDIV: MCKDIV
0x4400A004 C   FIELD 26w01 OSR: OSR
0x4400A004 C   FIELD 27w01 MCKEN: MCKEN
0x4400A008 B  REGISTER SAI_ACR2: Configuration register 2
0x4400A008 C   FIELD 00w03 FTH (rw): FTH
0x4400A008 C   FIELD 03w01 FFLUSH (wo): FFLUSH
0x4400A008 C   FIELD 04w01 TRIS (rw): TRIS
0x4400A008 C   FIELD 05w01 MUTE (rw): MUTE
0x4400A008 C   FIELD 06w01 MUTEVAL (rw): MUTEVAL
0x4400A008 C   FIELD 07w06 MUTECNT (rw): MUTECNT
0x4400A008 C   FIELD 13w01 CPL (rw): CPL
0x4400A008 C   FIELD 14w02 COMP (rw): COMP
0x4400A00C B  REGISTER SAI_AFRCR: This register has no meaning in and SPDIF audio protocol
0x4400A00C C   FIELD 00w08 FRL (rw): FRL
0x4400A00C C   FIELD 08w07 FSALL (rw): FSALL
0x4400A00C C   FIELD 16w01 FSDEF (ro): FSDEF
0x4400A00C C   FIELD 17w01 FSPOL (rw): FSPOL
0x4400A00C C   FIELD 18w01 FSOFF (rw): FSOFF
0x4400A010 B  REGISTER SAI_ASLOTR (rw): This register has no meaning in and SPDIF audio protocol
0x4400A010 C   FIELD 00w05 FBOFF: FBOFF
0x4400A010 C   FIELD 06w02 SLOTSZ: SLOTSZ
0x4400A010 C   FIELD 08w04 NBSLOT: NBSLOT
0x4400A010 C   FIELD 16w16 SLOTEN: SLOTEN
0x4400A014 B  REGISTER SAI_AIM (rw): Interrupt mask register
0x4400A014 C   FIELD 00w01 OVRUDRIE: OVRUDRIE
0x4400A014 C   FIELD 01w01 MUTEDETIE: MUTEDETIE
0x4400A014 C   FIELD 02w01 WCKCFGIE: WCKCFGIE
0x4400A014 C   FIELD 03w01 FREQIE: FREQIE
0x4400A014 C   FIELD 04w01 CNRDYIE: CNRDYIE
0x4400A014 C   FIELD 05w01 AFSDETIE: AFSDETIE
0x4400A014 C   FIELD 06w01 LFSDETIE: LFSDETIE
0x4400A018 B  REGISTER SAI_ASR (ro): Status register
0x4400A018 C   FIELD 00w01 OVRUDR: OVRUDR
0x4400A018 C   FIELD 01w01 MUTEDET: MUTEDET
0x4400A018 C   FIELD 02w01 WCKCFG: WCKCFG
0x4400A018 C   FIELD 03w01 FREQ: FREQ
0x4400A018 C   FIELD 04w01 CNRDY: CNRDY
0x4400A018 C   FIELD 05w01 AFSDET: AFSDET
0x4400A018 C   FIELD 06w01 LFSDET: LFSDET
0x4400A018 C   FIELD 16w03 FLVL: FLVL
0x4400A01C B  REGISTER SAI_ACLRFR (wo): Clear flag register
0x4400A01C C   FIELD 00w01 COVRUDR: COVRUDR
0x4400A01C C   FIELD 01w01 CMUTEDET: CMUTEDET
0x4400A01C C   FIELD 02w01 CWCKCFG: CWCKCFG
0x4400A01C C   FIELD 04w01 CCNRDY: CCNRDY
0x4400A01C C   FIELD 05w01 CAFSDET: CAFSDET
0x4400A01C C   FIELD 06w01 CLFSDET: CLFSDET
0x4400A020 B  REGISTER SAI_ADR (rw): Data register
0x4400A020 C   FIELD 00w32 DATA: DATA
0x4400A024 B  REGISTER SAI_BCR1 (rw): Configuration register 1
0x4400A024 C   FIELD 00w02 MODE: MODE
0x4400A024 C   FIELD 02w02 PRTCFG: PRTCFG
0x4400A024 C   FIELD 05w03 DS: DS
0x4400A024 C   FIELD 08w01 LSBFIRST: LSBFIRST
0x4400A024 C   FIELD 09w01 CKSTR: CKSTR
0x4400A024 C   FIELD 10w02 SYNCEN: SYNCEN
0x4400A024 C   FIELD 12w01 MONO: MONO
0x4400A024 C   FIELD 13w01 OUTDRIV: OUTDRIV
0x4400A024 C   FIELD 16w01 SAIEN: SAIEN
0x4400A024 C   FIELD 17w01 DMAEN: DMAEN
0x4400A024 C   FIELD 19w01 NODIV: NODIV
0x4400A024 C   FIELD 20w06 MCKDIV: MCKDIV
0x4400A024 C   FIELD 26w01 OSR: OSR
0x4400A024 C   FIELD 27w01 MCKEN: MCKEN
0x4400A028 B  REGISTER SAI_BCR2: Configuration register 2
0x4400A028 C   FIELD 00w03 FTH (rw): FTH
0x4400A028 C   FIELD 03w01 FFLUSH (wo): FFLUSH
0x4400A028 C   FIELD 04w01 TRIS (rw): TRIS
0x4400A028 C   FIELD 05w01 MUTE (rw): MUTE
0x4400A028 C   FIELD 06w01 MUTEVAL (rw): MUTEVAL
0x4400A028 C   FIELD 07w06 MUTECNT (rw): MUTECNT
0x4400A028 C   FIELD 13w01 CPL (rw): CPL
0x4400A028 C   FIELD 14w02 COMP (rw): COMP
0x4400A02C B  REGISTER SAI_BFRCR: This register has no meaning in and SPDIF audio protocol
0x4400A02C C   FIELD 00w08 FRL (rw): FRL
0x4400A02C C   FIELD 08w07 FSALL (rw): FSALL
0x4400A02C C   FIELD 16w01 FSDEF (ro): FSDEF
0x4400A02C C   FIELD 17w01 FSPOL (rw): FSPOL
0x4400A02C C   FIELD 18w01 FSOFF (rw): FSOFF
0x4400A030 B  REGISTER SAI_BSLOTR (rw): This register has no meaning in and SPDIF audio protocol
0x4400A030 C   FIELD 00w05 FBOFF: FBOFF
0x4400A030 C   FIELD 06w02 SLOTSZ: SLOTSZ
0x4400A030 C   FIELD 08w04 NBSLOT: NBSLOT
0x4400A030 C   FIELD 16w16 SLOTEN: SLOTEN
0x4400A034 B  REGISTER SAI_BIM (rw): Interrupt mask register
0x4400A034 C   FIELD 00w01 OVRUDRIE: OVRUDRIE
0x4400A034 C   FIELD 01w01 MUTEDETIE: MUTEDETIE
0x4400A034 C   FIELD 02w01 WCKCFGIE: WCKCFGIE
0x4400A034 C   FIELD 03w01 FREQIE: FREQIE
0x4400A034 C   FIELD 04w01 CNRDYIE: CNRDYIE
0x4400A034 C   FIELD 05w01 AFSDETIE: AFSDETIE
0x4400A034 C   FIELD 06w01 LFSDETIE: LFSDETIE
0x4400A038 B  REGISTER SAI_BSR (ro): Status register
0x4400A038 C   FIELD 00w01 OVRUDR: OVRUDR
0x4400A038 C   FIELD 01w01 MUTEDET: MUTEDET
0x4400A038 C   FIELD 02w01 WCKCFG: WCKCFG
0x4400A038 C   FIELD 03w01 FREQ: FREQ
0x4400A038 C   FIELD 04w01 CNRDY: CNRDY
0x4400A038 C   FIELD 05w01 AFSDET: AFSDET
0x4400A038 C   FIELD 06w01 LFSDET: LFSDET
0x4400A038 C   FIELD 16w03 FLVL: FLVL
0x4400A03C B  REGISTER SAI_BCLRFR (wo): Clear flag register
0x4400A03C C   FIELD 00w01 COVRUDR: COVRUDR
0x4400A03C C   FIELD 01w01 CMUTEDET: CMUTEDET
0x4400A03C C   FIELD 02w01 CWCKCFG: CWCKCFG
0x4400A03C C   FIELD 04w01 CCNRDY: CCNRDY
0x4400A03C C   FIELD 05w01 CAFSDET: CAFSDET
0x4400A03C C   FIELD 06w01 CLFSDET: CLFSDET
0x4400A040 B  REGISTER SAI_BDR (rw): Data register
0x4400A040 C   FIELD 00w32 DATA: DATA
0x4400A044 B  REGISTER SAI_PDMCR (rw): PDM control register
0x4400A044 C   FIELD 00w01 PDMEN: PDMEN
0x4400A044 C   FIELD 04w02 MICNBR: MICNBR
0x4400A044 C   FIELD 08w01 CKEN1: CKEN1
0x4400A044 C   FIELD 09w01 CKEN2: CKEN2
0x4400A044 C   FIELD 10w01 CKEN3: CKEN3
0x4400A044 C   FIELD 11w01 CKEN4: CKEN4
0x4400A048 B  REGISTER SAI_PDMDLY (rw): PDM delay register
0x4400A048 C   FIELD 00w03 DLYM1L: DLYM1L
0x4400A048 C   FIELD 04w03 DLYM1R: DLYM1R
0x4400A048 C   FIELD 08w03 DLYM2L: DLYM2L
0x4400A048 C   FIELD 12w03 DLYM2R: DLYM2R
0x4400A048 C   FIELD 16w03 DLYM3L: DLYM3L
0x4400A048 C   FIELD 20w03 DLYM3R: DLYM3R
0x4400A048 C   FIELD 24w03 DLYM4L: DLYM4L
0x4400A048 C   FIELD 28w03 DLYM4R: DLYM4R
0x4400A3F0 B  REGISTER SAI_HWCFGR (ro): SAI hardware configuration register
0x4400A3F0 C   FIELD 00w08 FIFO_SIZE: FIFO_SIZE
0x4400A3F0 C   FIELD 08w04 SPDIF_PDM: SPDIF_PDM
0x4400A3F0 C   FIELD 12w08 OPTION_REGOUT: OPTION_REGOUT
0x4400A3F4 B  REGISTER SAI_VERR (ro): SAI version register
0x4400A3F4 C   FIELD 00w04 MINREV: MINREV
0x4400A3F4 C   FIELD 04w04 MAJREV: MAJREV
0x4400A3F8 B  REGISTER SAI_IPIDR (ro): SAI identification register
0x4400A3F8 C   FIELD 00w32 ID: ID
0x4400A3FC B  REGISTER SAI_SIDR (ro): SAI size identification register
0x4400A3FC C   FIELD 00w32 SID: SID
0x4400B000 A PERIPHERAL SAI2
0x4400B000 B  REGISTER SAI_GCR (rw): Global configuration register
0x4400B000 C   FIELD 00w02 SYNCIN: SYNCIN
0x4400B000 C   FIELD 04w02 SYNCOUT: SYNCOUT
0x4400B004 B  REGISTER SAI_ACR1 (rw): Configuration register 1
0x4400B004 C   FIELD 00w02 MODE: MODE
0x4400B004 C   FIELD 02w02 PRTCFG: PRTCFG
0x4400B004 C   FIELD 05w03 DS: DS
0x4400B004 C   FIELD 08w01 LSBFIRST: LSBFIRST
0x4400B004 C   FIELD 09w01 CKSTR: CKSTR
0x4400B004 C   FIELD 10w02 SYNCEN: SYNCEN
0x4400B004 C   FIELD 12w01 MONO: MONO
0x4400B004 C   FIELD 13w01 OUTDRIV: OUTDRIV
0x4400B004 C   FIELD 16w01 SAIEN: SAIEN
0x4400B004 C   FIELD 17w01 DMAEN: DMAEN
0x4400B004 C   FIELD 19w01 NODIV: NODIV
0x4400B004 C   FIELD 20w06 MCKDIV: MCKDIV
0x4400B004 C   FIELD 26w01 OSR: OSR
0x4400B004 C   FIELD 27w01 MCKEN: MCKEN
0x4400B008 B  REGISTER SAI_ACR2: Configuration register 2
0x4400B008 C   FIELD 00w03 FTH (rw): FTH
0x4400B008 C   FIELD 03w01 FFLUSH (wo): FFLUSH
0x4400B008 C   FIELD 04w01 TRIS (rw): TRIS
0x4400B008 C   FIELD 05w01 MUTE (rw): MUTE
0x4400B008 C   FIELD 06w01 MUTEVAL (rw): MUTEVAL
0x4400B008 C   FIELD 07w06 MUTECNT (rw): MUTECNT
0x4400B008 C   FIELD 13w01 CPL (rw): CPL
0x4400B008 C   FIELD 14w02 COMP (rw): COMP
0x4400B00C B  REGISTER SAI_AFRCR: This register has no meaning in and SPDIF audio protocol
0x4400B00C C   FIELD 00w08 FRL (rw): FRL
0x4400B00C C   FIELD 08w07 FSALL (rw): FSALL
0x4400B00C C   FIELD 16w01 FSDEF (ro): FSDEF
0x4400B00C C   FIELD 17w01 FSPOL (rw): FSPOL
0x4400B00C C   FIELD 18w01 FSOFF (rw): FSOFF
0x4400B010 B  REGISTER SAI_ASLOTR (rw): This register has no meaning in and SPDIF audio protocol
0x4400B010 C   FIELD 00w05 FBOFF: FBOFF
0x4400B010 C   FIELD 06w02 SLOTSZ: SLOTSZ
0x4400B010 C   FIELD 08w04 NBSLOT: NBSLOT
0x4400B010 C   FIELD 16w16 SLOTEN: SLOTEN
0x4400B014 B  REGISTER SAI_AIM (rw): Interrupt mask register
0x4400B014 C   FIELD 00w01 OVRUDRIE: OVRUDRIE
0x4400B014 C   FIELD 01w01 MUTEDETIE: MUTEDETIE
0x4400B014 C   FIELD 02w01 WCKCFGIE: WCKCFGIE
0x4400B014 C   FIELD 03w01 FREQIE: FREQIE
0x4400B014 C   FIELD 04w01 CNRDYIE: CNRDYIE
0x4400B014 C   FIELD 05w01 AFSDETIE: AFSDETIE
0x4400B014 C   FIELD 06w01 LFSDETIE: LFSDETIE
0x4400B018 B  REGISTER SAI_ASR (ro): Status register
0x4400B018 C   FIELD 00w01 OVRUDR: OVRUDR
0x4400B018 C   FIELD 01w01 MUTEDET: MUTEDET
0x4400B018 C   FIELD 02w01 WCKCFG: WCKCFG
0x4400B018 C   FIELD 03w01 FREQ: FREQ
0x4400B018 C   FIELD 04w01 CNRDY: CNRDY
0x4400B018 C   FIELD 05w01 AFSDET: AFSDET
0x4400B018 C   FIELD 06w01 LFSDET: LFSDET
0x4400B018 C   FIELD 16w03 FLVL: FLVL
0x4400B01C B  REGISTER SAI_ACLRFR (wo): Clear flag register
0x4400B01C C   FIELD 00w01 COVRUDR: COVRUDR
0x4400B01C C   FIELD 01w01 CMUTEDET: CMUTEDET
0x4400B01C C   FIELD 02w01 CWCKCFG: CWCKCFG
0x4400B01C C   FIELD 04w01 CCNRDY: CCNRDY
0x4400B01C C   FIELD 05w01 CAFSDET: CAFSDET
0x4400B01C C   FIELD 06w01 CLFSDET: CLFSDET
0x4400B020 B  REGISTER SAI_ADR (rw): Data register
0x4400B020 C   FIELD 00w32 DATA: DATA
0x4400B024 B  REGISTER SAI_BCR1 (rw): Configuration register 1
0x4400B024 C   FIELD 00w02 MODE: MODE
0x4400B024 C   FIELD 02w02 PRTCFG: PRTCFG
0x4400B024 C   FIELD 05w03 DS: DS
0x4400B024 C   FIELD 08w01 LSBFIRST: LSBFIRST
0x4400B024 C   FIELD 09w01 CKSTR: CKSTR
0x4400B024 C   FIELD 10w02 SYNCEN: SYNCEN
0x4400B024 C   FIELD 12w01 MONO: MONO
0x4400B024 C   FIELD 13w01 OUTDRIV: OUTDRIV
0x4400B024 C   FIELD 16w01 SAIEN: SAIEN
0x4400B024 C   FIELD 17w01 DMAEN: DMAEN
0x4400B024 C   FIELD 19w01 NODIV: NODIV
0x4400B024 C   FIELD 20w06 MCKDIV: MCKDIV
0x4400B024 C   FIELD 26w01 OSR: OSR
0x4400B024 C   FIELD 27w01 MCKEN: MCKEN
0x4400B028 B  REGISTER SAI_BCR2: Configuration register 2
0x4400B028 C   FIELD 00w03 FTH (rw): FTH
0x4400B028 C   FIELD 03w01 FFLUSH (wo): FFLUSH
0x4400B028 C   FIELD 04w01 TRIS (rw): TRIS
0x4400B028 C   FIELD 05w01 MUTE (rw): MUTE
0x4400B028 C   FIELD 06w01 MUTEVAL (rw): MUTEVAL
0x4400B028 C   FIELD 07w06 MUTECNT (rw): MUTECNT
0x4400B028 C   FIELD 13w01 CPL (rw): CPL
0x4400B028 C   FIELD 14w02 COMP (rw): COMP
0x4400B02C B  REGISTER SAI_BFRCR: This register has no meaning in and SPDIF audio protocol
0x4400B02C C   FIELD 00w08 FRL (rw): FRL
0x4400B02C C   FIELD 08w07 FSALL (rw): FSALL
0x4400B02C C   FIELD 16w01 FSDEF (ro): FSDEF
0x4400B02C C   FIELD 17w01 FSPOL (rw): FSPOL
0x4400B02C C   FIELD 18w01 FSOFF (rw): FSOFF
0x4400B030 B  REGISTER SAI_BSLOTR (rw): This register has no meaning in and SPDIF audio protocol
0x4400B030 C   FIELD 00w05 FBOFF: FBOFF
0x4400B030 C   FIELD 06w02 SLOTSZ: SLOTSZ
0x4400B030 C   FIELD 08w04 NBSLOT: NBSLOT
0x4400B030 C   FIELD 16w16 SLOTEN: SLOTEN
0x4400B034 B  REGISTER SAI_BIM (rw): Interrupt mask register
0x4400B034 C   FIELD 00w01 OVRUDRIE: OVRUDRIE
0x4400B034 C   FIELD 01w01 MUTEDETIE: MUTEDETIE
0x4400B034 C   FIELD 02w01 WCKCFGIE: WCKCFGIE
0x4400B034 C   FIELD 03w01 FREQIE: FREQIE
0x4400B034 C   FIELD 04w01 CNRDYIE: CNRDYIE
0x4400B034 C   FIELD 05w01 AFSDETIE: AFSDETIE
0x4400B034 C   FIELD 06w01 LFSDETIE: LFSDETIE
0x4400B038 B  REGISTER SAI_BSR (ro): Status register
0x4400B038 C   FIELD 00w01 OVRUDR: OVRUDR
0x4400B038 C   FIELD 01w01 MUTEDET: MUTEDET
0x4400B038 C   FIELD 02w01 WCKCFG: WCKCFG
0x4400B038 C   FIELD 03w01 FREQ: FREQ
0x4400B038 C   FIELD 04w01 CNRDY: CNRDY
0x4400B038 C   FIELD 05w01 AFSDET: AFSDET
0x4400B038 C   FIELD 06w01 LFSDET: LFSDET
0x4400B038 C   FIELD 16w03 FLVL: FLVL
0x4400B03C B  REGISTER SAI_BCLRFR (wo): Clear flag register
0x4400B03C C   FIELD 00w01 COVRUDR: COVRUDR
0x4400B03C C   FIELD 01w01 CMUTEDET: CMUTEDET
0x4400B03C C   FIELD 02w01 CWCKCFG: CWCKCFG
0x4400B03C C   FIELD 04w01 CCNRDY: CCNRDY
0x4400B03C C   FIELD 05w01 CAFSDET: CAFSDET
0x4400B03C C   FIELD 06w01 CLFSDET: CLFSDET
0x4400B040 B  REGISTER SAI_BDR (rw): Data register
0x4400B040 C   FIELD 00w32 DATA: DATA
0x4400B044 B  REGISTER SAI_PDMCR (rw): PDM control register
0x4400B044 C   FIELD 00w01 PDMEN: PDMEN
0x4400B044 C   FIELD 04w02 MICNBR: MICNBR
0x4400B044 C   FIELD 08w01 CKEN1: CKEN1
0x4400B044 C   FIELD 09w01 CKEN2: CKEN2
0x4400B044 C   FIELD 10w01 CKEN3: CKEN3
0x4400B044 C   FIELD 11w01 CKEN4: CKEN4
0x4400B048 B  REGISTER SAI_PDMDLY (rw): PDM delay register
0x4400B048 C   FIELD 00w03 DLYM1L: DLYM1L
0x4400B048 C   FIELD 04w03 DLYM1R: DLYM1R
0x4400B048 C   FIELD 08w03 DLYM2L: DLYM2L
0x4400B048 C   FIELD 12w03 DLYM2R: DLYM2R
0x4400B048 C   FIELD 16w03 DLYM3L: DLYM3L
0x4400B048 C   FIELD 20w03 DLYM3R: DLYM3R
0x4400B048 C   FIELD 24w03 DLYM4L: DLYM4L
0x4400B048 C   FIELD 28w03 DLYM4R: DLYM4R
0x4400B3F0 B  REGISTER SAI_HWCFGR (ro): SAI hardware configuration register
0x4400B3F0 C   FIELD 00w08 FIFO_SIZE: FIFO_SIZE
0x4400B3F0 C   FIELD 08w04 SPDIF_PDM: SPDIF_PDM
0x4400B3F0 C   FIELD 12w08 OPTION_REGOUT: OPTION_REGOUT
0x4400B3F4 B  REGISTER SAI_VERR (ro): SAI version register
0x4400B3F4 C   FIELD 00w04 MINREV: MINREV
0x4400B3F4 C   FIELD 04w04 MAJREV: MAJREV
0x4400B3F8 B  REGISTER SAI_IPIDR (ro): SAI identification register
0x4400B3F8 C   FIELD 00w32 ID: ID
0x4400B3FC B  REGISTER SAI_SIDR (ro): SAI size identification register
0x4400B3FC C   FIELD 00w32 SID: SID
0x4400C000 A PERIPHERAL SAI3
0x4400C000 B  REGISTER SAI_GCR (rw): Global configuration register
0x4400C000 C   FIELD 00w02 SYNCIN: SYNCIN
0x4400C000 C   FIELD 04w02 SYNCOUT: SYNCOUT
0x4400C004 B  REGISTER SAI_ACR1 (rw): Configuration register 1
0x4400C004 C   FIELD 00w02 MODE: MODE
0x4400C004 C   FIELD 02w02 PRTCFG: PRTCFG
0x4400C004 C   FIELD 05w03 DS: DS
0x4400C004 C   FIELD 08w01 LSBFIRST: LSBFIRST
0x4400C004 C   FIELD 09w01 CKSTR: CKSTR
0x4400C004 C   FIELD 10w02 SYNCEN: SYNCEN
0x4400C004 C   FIELD 12w01 MONO: MONO
0x4400C004 C   FIELD 13w01 OUTDRIV: OUTDRIV
0x4400C004 C   FIELD 16w01 SAIEN: SAIEN
0x4400C004 C   FIELD 17w01 DMAEN: DMAEN
0x4400C004 C   FIELD 19w01 NODIV: NODIV
0x4400C004 C   FIELD 20w06 MCKDIV: MCKDIV
0x4400C004 C   FIELD 26w01 OSR: OSR
0x4400C004 C   FIELD 27w01 MCKEN: MCKEN
0x4400C008 B  REGISTER SAI_ACR2: Configuration register 2
0x4400C008 C   FIELD 00w03 FTH (rw): FTH
0x4400C008 C   FIELD 03w01 FFLUSH (wo): FFLUSH
0x4400C008 C   FIELD 04w01 TRIS (rw): TRIS
0x4400C008 C   FIELD 05w01 MUTE (rw): MUTE
0x4400C008 C   FIELD 06w01 MUTEVAL (rw): MUTEVAL
0x4400C008 C   FIELD 07w06 MUTECNT (rw): MUTECNT
0x4400C008 C   FIELD 13w01 CPL (rw): CPL
0x4400C008 C   FIELD 14w02 COMP (rw): COMP
0x4400C00C B  REGISTER SAI_AFRCR: This register has no meaning in and SPDIF audio protocol
0x4400C00C C   FIELD 00w08 FRL (rw): FRL
0x4400C00C C   FIELD 08w07 FSALL (rw): FSALL
0x4400C00C C   FIELD 16w01 FSDEF (ro): FSDEF
0x4400C00C C   FIELD 17w01 FSPOL (rw): FSPOL
0x4400C00C C   FIELD 18w01 FSOFF (rw): FSOFF
0x4400C010 B  REGISTER SAI_ASLOTR (rw): This register has no meaning in and SPDIF audio protocol
0x4400C010 C   FIELD 00w05 FBOFF: FBOFF
0x4400C010 C   FIELD 06w02 SLOTSZ: SLOTSZ
0x4400C010 C   FIELD 08w04 NBSLOT: NBSLOT
0x4400C010 C   FIELD 16w16 SLOTEN: SLOTEN
0x4400C014 B  REGISTER SAI_AIM (rw): Interrupt mask register
0x4400C014 C   FIELD 00w01 OVRUDRIE: OVRUDRIE
0x4400C014 C   FIELD 01w01 MUTEDETIE: MUTEDETIE
0x4400C014 C   FIELD 02w01 WCKCFGIE: WCKCFGIE
0x4400C014 C   FIELD 03w01 FREQIE: FREQIE
0x4400C014 C   FIELD 04w01 CNRDYIE: CNRDYIE
0x4400C014 C   FIELD 05w01 AFSDETIE: AFSDETIE
0x4400C014 C   FIELD 06w01 LFSDETIE: LFSDETIE
0x4400C018 B  REGISTER SAI_ASR (ro): Status register
0x4400C018 C   FIELD 00w01 OVRUDR: OVRUDR
0x4400C018 C   FIELD 01w01 MUTEDET: MUTEDET
0x4400C018 C   FIELD 02w01 WCKCFG: WCKCFG
0x4400C018 C   FIELD 03w01 FREQ: FREQ
0x4400C018 C   FIELD 04w01 CNRDY: CNRDY
0x4400C018 C   FIELD 05w01 AFSDET: AFSDET
0x4400C018 C   FIELD 06w01 LFSDET: LFSDET
0x4400C018 C   FIELD 16w03 FLVL: FLVL
0x4400C01C B  REGISTER SAI_ACLRFR (wo): Clear flag register
0x4400C01C C   FIELD 00w01 COVRUDR: COVRUDR
0x4400C01C C   FIELD 01w01 CMUTEDET: CMUTEDET
0x4400C01C C   FIELD 02w01 CWCKCFG: CWCKCFG
0x4400C01C C   FIELD 04w01 CCNRDY: CCNRDY
0x4400C01C C   FIELD 05w01 CAFSDET: CAFSDET
0x4400C01C C   FIELD 06w01 CLFSDET: CLFSDET
0x4400C020 B  REGISTER SAI_ADR (rw): Data register
0x4400C020 C   FIELD 00w32 DATA: DATA
0x4400C024 B  REGISTER SAI_BCR1 (rw): Configuration register 1
0x4400C024 C   FIELD 00w02 MODE: MODE
0x4400C024 C   FIELD 02w02 PRTCFG: PRTCFG
0x4400C024 C   FIELD 05w03 DS: DS
0x4400C024 C   FIELD 08w01 LSBFIRST: LSBFIRST
0x4400C024 C   FIELD 09w01 CKSTR: CKSTR
0x4400C024 C   FIELD 10w02 SYNCEN: SYNCEN
0x4400C024 C   FIELD 12w01 MONO: MONO
0x4400C024 C   FIELD 13w01 OUTDRIV: OUTDRIV
0x4400C024 C   FIELD 16w01 SAIEN: SAIEN
0x4400C024 C   FIELD 17w01 DMAEN: DMAEN
0x4400C024 C   FIELD 19w01 NODIV: NODIV
0x4400C024 C   FIELD 20w06 MCKDIV: MCKDIV
0x4400C024 C   FIELD 26w01 OSR: OSR
0x4400C024 C   FIELD 27w01 MCKEN: MCKEN
0x4400C028 B  REGISTER SAI_BCR2: Configuration register 2
0x4400C028 C   FIELD 00w03 FTH (rw): FTH
0x4400C028 C   FIELD 03w01 FFLUSH (wo): FFLUSH
0x4400C028 C   FIELD 04w01 TRIS (rw): TRIS
0x4400C028 C   FIELD 05w01 MUTE (rw): MUTE
0x4400C028 C   FIELD 06w01 MUTEVAL (rw): MUTEVAL
0x4400C028 C   FIELD 07w06 MUTECNT (rw): MUTECNT
0x4400C028 C   FIELD 13w01 CPL (rw): CPL
0x4400C028 C   FIELD 14w02 COMP (rw): COMP
0x4400C02C B  REGISTER SAI_BFRCR: This register has no meaning in and SPDIF audio protocol
0x4400C02C C   FIELD 00w08 FRL (rw): FRL
0x4400C02C C   FIELD 08w07 FSALL (rw): FSALL
0x4400C02C C   FIELD 16w01 FSDEF (ro): FSDEF
0x4400C02C C   FIELD 17w01 FSPOL (rw): FSPOL
0x4400C02C C   FIELD 18w01 FSOFF (rw): FSOFF
0x4400C030 B  REGISTER SAI_BSLOTR (rw): This register has no meaning in and SPDIF audio protocol
0x4400C030 C   FIELD 00w05 FBOFF: FBOFF
0x4400C030 C   FIELD 06w02 SLOTSZ: SLOTSZ
0x4400C030 C   FIELD 08w04 NBSLOT: NBSLOT
0x4400C030 C   FIELD 16w16 SLOTEN: SLOTEN
0x4400C034 B  REGISTER SAI_BIM (rw): Interrupt mask register
0x4400C034 C   FIELD 00w01 OVRUDRIE: OVRUDRIE
0x4400C034 C   FIELD 01w01 MUTEDETIE: MUTEDETIE
0x4400C034 C   FIELD 02w01 WCKCFGIE: WCKCFGIE
0x4400C034 C   FIELD 03w01 FREQIE: FREQIE
0x4400C034 C   FIELD 04w01 CNRDYIE: CNRDYIE
0x4400C034 C   FIELD 05w01 AFSDETIE: AFSDETIE
0x4400C034 C   FIELD 06w01 LFSDETIE: LFSDETIE
0x4400C038 B  REGISTER SAI_BSR (ro): Status register
0x4400C038 C   FIELD 00w01 OVRUDR: OVRUDR
0x4400C038 C   FIELD 01w01 MUTEDET: MUTEDET
0x4400C038 C   FIELD 02w01 WCKCFG: WCKCFG
0x4400C038 C   FIELD 03w01 FREQ: FREQ
0x4400C038 C   FIELD 04w01 CNRDY: CNRDY
0x4400C038 C   FIELD 05w01 AFSDET: AFSDET
0x4400C038 C   FIELD 06w01 LFSDET: LFSDET
0x4400C038 C   FIELD 16w03 FLVL: FLVL
0x4400C03C B  REGISTER SAI_BCLRFR (wo): Clear flag register
0x4400C03C C   FIELD 00w01 COVRUDR: COVRUDR
0x4400C03C C   FIELD 01w01 CMUTEDET: CMUTEDET
0x4400C03C C   FIELD 02w01 CWCKCFG: CWCKCFG
0x4400C03C C   FIELD 04w01 CCNRDY: CCNRDY
0x4400C03C C   FIELD 05w01 CAFSDET: CAFSDET
0x4400C03C C   FIELD 06w01 CLFSDET: CLFSDET
0x4400C040 B  REGISTER SAI_BDR (rw): Data register
0x4400C040 C   FIELD 00w32 DATA: DATA
0x4400C044 B  REGISTER SAI_PDMCR (rw): PDM control register
0x4400C044 C   FIELD 00w01 PDMEN: PDMEN
0x4400C044 C   FIELD 04w02 MICNBR: MICNBR
0x4400C044 C   FIELD 08w01 CKEN1: CKEN1
0x4400C044 C   FIELD 09w01 CKEN2: CKEN2
0x4400C044 C   FIELD 10w01 CKEN3: CKEN3
0x4400C044 C   FIELD 11w01 CKEN4: CKEN4
0x4400C048 B  REGISTER SAI_PDMDLY (rw): PDM delay register
0x4400C048 C   FIELD 00w03 DLYM1L: DLYM1L
0x4400C048 C   FIELD 04w03 DLYM1R: DLYM1R
0x4400C048 C   FIELD 08w03 DLYM2L: DLYM2L
0x4400C048 C   FIELD 12w03 DLYM2R: DLYM2R
0x4400C048 C   FIELD 16w03 DLYM3L: DLYM3L
0x4400C048 C   FIELD 20w03 DLYM3R: DLYM3R
0x4400C048 C   FIELD 24w03 DLYM4L: DLYM4L
0x4400C048 C   FIELD 28w03 DLYM4R: DLYM4R
0x4400C3F0 B  REGISTER SAI_HWCFGR (ro): SAI hardware configuration register
0x4400C3F0 C   FIELD 00w08 FIFO_SIZE: FIFO_SIZE
0x4400C3F0 C   FIELD 08w04 SPDIF_PDM: SPDIF_PDM
0x4400C3F0 C   FIELD 12w08 OPTION_REGOUT: OPTION_REGOUT
0x4400C3F4 B  REGISTER SAI_VERR (ro): SAI version register
0x4400C3F4 C   FIELD 00w04 MINREV: MINREV
0x4400C3F4 C   FIELD 04w04 MAJREV: MAJREV
0x4400C3F8 B  REGISTER SAI_IPIDR (ro): SAI identification register
0x4400C3F8 C   FIELD 00w32 ID: ID
0x4400C3FC B  REGISTER SAI_SIDR (ro): SAI size identification register
0x4400C3FC C   FIELD 00w32 SID: SID
0x4400D000 A PERIPHERAL DFSDM1
0x4400D000 B  REGISTER DFSDM_CH0CFGR1 (rw): This register specifies the parameters used by channel y.
0x4400D000 C   FIELD 00w02 SITP: SITP
0x4400D000 C   FIELD 02w02 SPICKSEL: SPICKSEL
0x4400D000 C   FIELD 05w01 SCDEN: SCDEN
0x4400D000 C   FIELD 06w01 CKABEN: CKABEN
0x4400D000 C   FIELD 07w01 CHEN: CHEN
0x4400D000 C   FIELD 08w01 CHINSEL: CHINSEL
0x4400D000 C   FIELD 12w02 DATMPX: DATMPX
0x4400D000 C   FIELD 14w02 DATPACK: DATPACK
0x4400D000 C   FIELD 16w08 CKOUTDIV: CKOUTDIV
0x4400D000 C   FIELD 30w01 CKOUTSRC: CKOUTSRC
0x4400D000 C   FIELD 31w01 DFSDMEN: DFSDMEN
0x4400D004 B  REGISTER DFSDM_CH0CFGR2 (rw): This register specifies the parameters used by channel y.
0x4400D004 C   FIELD 03w05 DTRBS: DTRBS
0x4400D004 C   FIELD 08w24 OFFSET: OFFSET
0x4400D008 B  REGISTER DFSDM_CH0AWSCDR (rw): Short-circuit detector and analog watchdog settings for channel y.
0x4400D008 C   FIELD 00w08 SCDT: SCDT
0x4400D008 C   FIELD 12w04 BKSCD: BKSCD
0x4400D008 C   FIELD 16w05 AWFOSR: AWFOSR
0x4400D008 C   FIELD 22w02 AWFORD: AWFORD
0x4400D00C B  REGISTER DFSDM_CH0WDATR (ro): This register contains the data resulting from the analog watchdog filter associated to the input channel y.
0x4400D00C C   FIELD 00w16 WDATA: WDATA
0x4400D010 B  REGISTER DFSDM_CH0DATINR (rw): This register contains 16-bit input data to be processed by DFSDM filter module.
0x4400D010 C   FIELD 00w16 INDAT0: INDAT0
0x4400D010 C   FIELD 16w16 INDAT1: INDAT1
0x4400D014 B  REGISTER DFSDM_CH0DLYR (rw): DFSDM channel 0 delay register
0x4400D014 C   FIELD 00w06 PLSSKP: PLSSKP
0x4400D020 B  REGISTER DFSDM_CH1CFGR1 (rw): This register specifies the parameters used by channel y.
0x4400D020 C   FIELD 00w02 SITP: SITP
0x4400D020 C   FIELD 02w02 SPICKSEL: SPICKSEL
0x4400D020 C   FIELD 05w01 SCDEN: SCDEN
0x4400D020 C   FIELD 06w01 CKABEN: CKABEN
0x4400D020 C   FIELD 07w01 CHEN: CHEN
0x4400D020 C   FIELD 08w01 CHINSEL: CHINSEL
0x4400D020 C   FIELD 12w02 DATMPX: DATMPX
0x4400D020 C   FIELD 14w02 DATPACK: DATPACK
0x4400D020 C   FIELD 16w08 CKOUTDIV: CKOUTDIV
0x4400D020 C   FIELD 30w01 CKOUTSRC: CKOUTSRC
0x4400D020 C   FIELD 31w01 DFSDMEN: DFSDMEN
0x4400D024 B  REGISTER DFSDM_CH1CFGR2 (rw): This register specifies the parameters used by channel y.
0x4400D024 C   FIELD 03w05 DTRBS: DTRBS
0x4400D024 C   FIELD 08w24 OFFSET: OFFSET
0x4400D028 B  REGISTER DFSDM_CH1AWSCDR (rw): Short-circuit detector and analog watchdog settings for channel y.
0x4400D028 C   FIELD 00w08 SCDT: SCDT
0x4400D028 C   FIELD 12w04 BKSCD: BKSCD
0x4400D028 C   FIELD 16w05 AWFOSR: AWFOSR
0x4400D028 C   FIELD 22w02 AWFORD: AWFORD
0x4400D02C B  REGISTER DFSDM_CH1WDATR (ro): This register contains the data resulting from the analog watchdog filter associated to the input channel y.
0x4400D02C C   FIELD 00w16 WDATA: WDATA
0x4400D030 B  REGISTER DFSDM_CH1DATINR (rw): This register contains 16-bit input data to be processed by DFSDM filter module.
0x4400D030 C   FIELD 00w16 INDAT0: INDAT0
0x4400D030 C   FIELD 16w16 INDAT1: INDAT1
0x4400D034 B  REGISTER DFSDM_CH1DLYR (rw): DFSDM channel 1 delay register
0x4400D034 C   FIELD 00w06 PLSSKP: PLSSKP
0x4400D040 B  REGISTER DFSDM_CH2CFGR1 (rw): This register specifies the parameters used by channel y.
0x4400D040 C   FIELD 00w02 SITP: SITP
0x4400D040 C   FIELD 02w02 SPICKSEL: SPICKSEL
0x4400D040 C   FIELD 05w01 SCDEN: SCDEN
0x4400D040 C   FIELD 06w01 CKABEN: CKABEN
0x4400D040 C   FIELD 07w01 CHEN: CHEN
0x4400D040 C   FIELD 08w01 CHINSEL: CHINSEL
0x4400D040 C   FIELD 12w02 DATMPX: DATMPX
0x4400D040 C   FIELD 14w02 DATPACK: DATPACK
0x4400D040 C   FIELD 16w08 CKOUTDIV: CKOUTDIV
0x4400D040 C   FIELD 30w01 CKOUTSRC: CKOUTSRC
0x4400D040 C   FIELD 31w01 DFSDMEN: DFSDMEN
0x4400D044 B  REGISTER DFSDM_CH2CFGR2 (rw): This register specifies the parameters used by channel y.
0x4400D044 C   FIELD 03w05 DTRBS: DTRBS
0x4400D044 C   FIELD 08w24 OFFSET: OFFSET
0x4400D048 B  REGISTER DFSDM_CH2AWSCDR (rw): Short-circuit detector and analog watchdog settings for channel y.
0x4400D048 C   FIELD 00w08 SCDT: SCDT
0x4400D048 C   FIELD 12w04 BKSCD: BKSCD
0x4400D048 C   FIELD 16w05 AWFOSR: AWFOSR
0x4400D048 C   FIELD 22w02 AWFORD: AWFORD
0x4400D04C B  REGISTER DFSDM_CH2WDATR (ro): This register contains the data resulting from the analog watchdog filter associated to the input channel y.
0x4400D04C C   FIELD 00w16 WDATA: WDATA
0x4400D050 B  REGISTER DFSDM_CH2DATINR (rw): This register contains 16-bit input data to be processed by DFSDM filter module.
0x4400D050 C   FIELD 00w16 INDAT0: INDAT0
0x4400D050 C   FIELD 16w16 INDAT1: INDAT1
0x4400D054 B  REGISTER DFSDM_CH2DLYR (rw): DFSDM channel 2 delay register
0x4400D054 C   FIELD 00w06 PLSSKP: PLSSKP
0x4400D060 B  REGISTER DFSDM_CH3CFGR1 (rw): This register specifies the parameters used by channel y.
0x4400D060 C   FIELD 00w02 SITP: SITP
0x4400D060 C   FIELD 02w02 SPICKSEL: SPICKSEL
0x4400D060 C   FIELD 05w01 SCDEN: SCDEN
0x4400D060 C   FIELD 06w01 CKABEN: CKABEN
0x4400D060 C   FIELD 07w01 CHEN: CHEN
0x4400D060 C   FIELD 08w01 CHINSEL: CHINSEL
0x4400D060 C   FIELD 12w02 DATMPX: DATMPX
0x4400D060 C   FIELD 14w02 DATPACK: DATPACK
0x4400D060 C   FIELD 16w08 CKOUTDIV: CKOUTDIV
0x4400D060 C   FIELD 30w01 CKOUTSRC: CKOUTSRC
0x4400D060 C   FIELD 31w01 DFSDMEN: DFSDMEN
0x4400D064 B  REGISTER DFSDM_CH3CFGR2 (rw): This register specifies the parameters used by channel y.
0x4400D064 C   FIELD 03w05 DTRBS: DTRBS
0x4400D064 C   FIELD 08w24 OFFSET: OFFSET
0x4400D068 B  REGISTER DFSDM_CH3AWSCDR (rw): Short-circuit detector and analog watchdog settings for channel y.
0x4400D068 C   FIELD 00w08 SCDT: SCDT
0x4400D068 C   FIELD 12w04 BKSCD: BKSCD
0x4400D068 C   FIELD 16w05 AWFOSR: AWFOSR
0x4400D068 C   FIELD 22w02 AWFORD: AWFORD
0x4400D06C B  REGISTER DFSDM_CH3WDATR (ro): This register contains the data resulting from the analog watchdog filter associated to the input channel y.
0x4400D06C C   FIELD 00w16 WDATA: WDATA
0x4400D070 B  REGISTER DFSDM_CH3DATINR (rw): This register contains 16-bit input data to be processed by DFSDM filter module.
0x4400D070 C   FIELD 00w16 INDAT0: INDAT0
0x4400D070 C   FIELD 16w16 INDAT1: INDAT1
0x4400D074 B  REGISTER DFSDM_CH3DLYR (rw): DFSDM channel 3 delay register
0x4400D074 C   FIELD 00w06 PLSSKP: PLSSKP
0x4400D080 B  REGISTER DFSDM_CH4CFGR1 (rw): This register specifies the parameters used by channel y.
0x4400D080 C   FIELD 00w02 SITP: SITP
0x4400D080 C   FIELD 02w02 SPICKSEL: SPICKSEL
0x4400D080 C   FIELD 05w01 SCDEN: SCDEN
0x4400D080 C   FIELD 06w01 CKABEN: CKABEN
0x4400D080 C   FIELD 07w01 CHEN: CHEN
0x4400D080 C   FIELD 08w01 CHINSEL: CHINSEL
0x4400D080 C   FIELD 12w02 DATMPX: DATMPX
0x4400D080 C   FIELD 14w02 DATPACK: DATPACK
0x4400D080 C   FIELD 16w08 CKOUTDIV: CKOUTDIV
0x4400D080 C   FIELD 30w01 CKOUTSRC: CKOUTSRC
0x4400D080 C   FIELD 31w01 DFSDMEN: DFSDMEN
0x4400D084 B  REGISTER DFSDM_CH4CFGR2 (rw): This register specifies the parameters used by channel y.
0x4400D084 C   FIELD 03w05 DTRBS: DTRBS
0x4400D084 C   FIELD 08w24 OFFSET: OFFSET
0x4400D088 B  REGISTER DFSDM_CH4AWSCDR (rw): Short-circuit detector and analog watchdog settings for channel y.
0x4400D088 C   FIELD 00w08 SCDT: SCDT
0x4400D088 C   FIELD 12w04 BKSCD: BKSCD
0x4400D088 C   FIELD 16w05 AWFOSR: AWFOSR
0x4400D088 C   FIELD 22w02 AWFORD: AWFORD
0x4400D08C B  REGISTER DFSDM_CH4WDATR (ro): This register contains the data resulting from the analog watchdog filter associated to the input channel y.
0x4400D08C C   FIELD 00w16 WDATA: WDATA
0x4400D090 B  REGISTER DFSDM_CH4DATINR (rw): This register contains 16-bit input data to be processed by DFSDM filter module.
0x4400D090 C   FIELD 00w16 INDAT0: INDAT0
0x4400D090 C   FIELD 16w16 INDAT1: INDAT1
0x4400D094 B  REGISTER DFSDM_CH4DLYR (rw): DFSDM channel 4 delay register
0x4400D094 C   FIELD 00w06 PLSSKP: PLSSKP
0x4400D0A0 B  REGISTER DFSDM_CH5CFGR1 (rw): This register specifies the parameters used by channel y.
0x4400D0A0 C   FIELD 00w02 SITP: SITP
0x4400D0A0 C   FIELD 02w02 SPICKSEL: SPICKSEL
0x4400D0A0 C   FIELD 05w01 SCDEN: SCDEN
0x4400D0A0 C   FIELD 06w01 CKABEN: CKABEN
0x4400D0A0 C   FIELD 07w01 CHEN: CHEN
0x4400D0A0 C   FIELD 08w01 CHINSEL: CHINSEL
0x4400D0A0 C   FIELD 12w02 DATMPX: DATMPX
0x4400D0A0 C   FIELD 14w02 DATPACK: DATPACK
0x4400D0A0 C   FIELD 16w08 CKOUTDIV: CKOUTDIV
0x4400D0A0 C   FIELD 30w01 CKOUTSRC: CKOUTSRC
0x4400D0A0 C   FIELD 31w01 DFSDMEN: DFSDMEN
0x4400D0A4 B  REGISTER DFSDM_CH5CFGR2 (rw): This register specifies the parameters used by channel y.
0x4400D0A4 C   FIELD 03w05 DTRBS: DTRBS
0x4400D0A4 C   FIELD 08w24 OFFSET: OFFSET
0x4400D0A8 B  REGISTER DFSDM_CH5AWSCDR (rw): Short-circuit detector and analog watchdog settings for channel y.
0x4400D0A8 C   FIELD 00w08 SCDT: SCDT
0x4400D0A8 C   FIELD 12w04 BKSCD: BKSCD
0x4400D0A8 C   FIELD 16w05 AWFOSR: AWFOSR
0x4400D0A8 C   FIELD 22w02 AWFORD: AWFORD
0x4400D0AC B  REGISTER DFSDM_CH5WDATR (ro): This register contains the data resulting from the analog watchdog filter associated to the input channel y.
0x4400D0AC C   FIELD 00w16 WDATA: WDATA
0x4400D0B0 B  REGISTER DFSDM_CH5DATINR (rw): This register contains 16-bit input data to be processed by DFSDM filter module.
0x4400D0B0 C   FIELD 00w16 INDAT0: INDAT0
0x4400D0B0 C   FIELD 16w16 INDAT1: INDAT1
0x4400D0B4 B  REGISTER DFSDM_CH5DLYR (rw): DFSDM channel 5 delay register
0x4400D0B4 C   FIELD 00w06 PLSSKP: PLSSKP
0x4400D0C0 B  REGISTER DFSDM_CH6CFGR1 (rw): This register specifies the parameters used by channel y.
0x4400D0C0 C   FIELD 00w02 SITP: SITP
0x4400D0C0 C   FIELD 02w02 SPICKSEL: SPICKSEL
0x4400D0C0 C   FIELD 05w01 SCDEN: SCDEN
0x4400D0C0 C   FIELD 06w01 CKABEN: CKABEN
0x4400D0C0 C   FIELD 07w01 CHEN: CHEN
0x4400D0C0 C   FIELD 08w01 CHINSEL: CHINSEL
0x4400D0C0 C   FIELD 12w02 DATMPX: DATMPX
0x4400D0C0 C   FIELD 14w02 DATPACK: DATPACK
0x4400D0C0 C   FIELD 16w08 CKOUTDIV: CKOUTDIV
0x4400D0C0 C   FIELD 30w01 CKOUTSRC: CKOUTSRC
0x4400D0C0 C   FIELD 31w01 DFSDMEN: DFSDMEN
0x4400D0C4 B  REGISTER DFSDM_CH6CFGR2 (rw): This register specifies the parameters used by channel y.
0x4400D0C4 C   FIELD 03w05 DTRBS: DTRBS
0x4400D0C4 C   FIELD 08w24 OFFSET: OFFSET
0x4400D0C8 B  REGISTER DFSDM_CH6AWSCDR (rw): Short-circuit detector and analog watchdog settings for channel y.
0x4400D0C8 C   FIELD 00w08 SCDT: SCDT
0x4400D0C8 C   FIELD 12w04 BKSCD: BKSCD
0x4400D0C8 C   FIELD 16w05 AWFOSR: AWFOSR
0x4400D0C8 C   FIELD 22w02 AWFORD: AWFORD
0x4400D0CC B  REGISTER DFSDM_CH6WDATR (ro): This register contains the data resulting from the analog watchdog filter associated to the input channel y.
0x4400D0CC C   FIELD 00w16 WDATA: WDATA
0x4400D0D0 B  REGISTER DFSDM_CH6DATINR (rw): This register contains 16-bit input data to be processed by DFSDM filter module.
0x4400D0D0 C   FIELD 00w16 INDAT0: INDAT0
0x4400D0D0 C   FIELD 16w16 INDAT1: INDAT1
0x4400D0D4 B  REGISTER DFSDM_CH6DLYR (rw): DFSDM channel 6 delay register
0x4400D0D4 C   FIELD 00w06 PLSSKP: PLSSKP
0x4400D0E0 B  REGISTER DFSDM_CH7CFGR1 (rw): This register specifies the parameters used by channel y.
0x4400D0E0 C   FIELD 00w02 SITP: SITP
0x4400D0E0 C   FIELD 02w02 SPICKSEL: SPICKSEL
0x4400D0E0 C   FIELD 05w01 SCDEN: SCDEN
0x4400D0E0 C   FIELD 06w01 CKABEN: CKABEN
0x4400D0E0 C   FIELD 07w01 CHEN: CHEN
0x4400D0E0 C   FIELD 08w01 CHINSEL: CHINSEL
0x4400D0E0 C   FIELD 12w02 DATMPX: DATMPX
0x4400D0E0 C   FIELD 14w02 DATPACK: DATPACK
0x4400D0E0 C   FIELD 16w08 CKOUTDIV: CKOUTDIV
0x4400D0E0 C   FIELD 30w01 CKOUTSRC: CKOUTSRC
0x4400D0E0 C   FIELD 31w01 DFSDMEN: DFSDMEN
0x4400D0E4 B  REGISTER DFSDM_CH7CFGR2 (rw): This register specifies the parameters used by channel y.
0x4400D0E4 C   FIELD 03w05 DTRBS: DTRBS
0x4400D0E4 C   FIELD 08w24 OFFSET: OFFSET
0x4400D0E8 B  REGISTER DFSDM_CH7AWSCDR (rw): Short-circuit detector and analog watchdog settings for channel y.
0x4400D0E8 C   FIELD 00w08 SCDT: SCDT
0x4400D0E8 C   FIELD 12w04 BKSCD: BKSCD
0x4400D0E8 C   FIELD 16w05 AWFOSR: AWFOSR
0x4400D0E8 C   FIELD 22w02 AWFORD: AWFORD
0x4400D0EC B  REGISTER DFSDM_CH7WDATR (ro): This register contains the data resulting from the analog watchdog filter associated to the input channel y.
0x4400D0EC C   FIELD 00w16 WDATA: WDATA
0x4400D0F0 B  REGISTER DFSDM_CH7DATINR (rw): This register contains 16-bit input data to be processed by DFSDM filter module.
0x4400D0F0 C   FIELD 00w16 INDAT0: INDAT0
0x4400D0F0 C   FIELD 16w16 INDAT1: INDAT1
0x4400D0F4 B  REGISTER DFSDM_CH7DLYR (rw): DFSDM channel 7 delay register
0x4400D0F4 C   FIELD 00w06 PLSSKP: PLSSKP
0x4400D100 B  REGISTER DFSDM_FLT0CR1 (rw): DFSDM filter 0 control register 1
0x4400D100 C   FIELD 00w01 DFEN: DFEN
0x4400D100 C   FIELD 01w01 JSWSTART: JSWSTART
0x4400D100 C   FIELD 03w01 JSYNC: JSYNC
0x4400D100 C   FIELD 04w01 JSCAN: JSCAN
0x4400D100 C   FIELD 05w01 JDMAEN: JDMAEN
0x4400D100 C   FIELD 08w05 JEXTSEL: JEXTSEL
0x4400D100 C   FIELD 13w02 JEXTEN: JEXTEN
0x4400D100 C   FIELD 17w01 RSWSTART: RSWSTART
0x4400D100 C   FIELD 18w01 RCONT: RCONT
0x4400D100 C   FIELD 19w01 RSYNC: RSYNC
0x4400D100 C   FIELD 21w01 RDMAEN: RDMAEN
0x4400D100 C   FIELD 24w03 RCH: RCH
0x4400D100 C   FIELD 29w01 FAST: FAST
0x4400D100 C   FIELD 30w01 AWFSEL: AWFSEL
0x4400D104 B  REGISTER DFSDM_FLT0CR2 (rw): DFSDM filter 0 control register 2
0x4400D104 C   FIELD 00w01 JEOCIE: JEOCIE
0x4400D104 C   FIELD 01w01 REOCIE: REOCIE
0x4400D104 C   FIELD 02w01 JOVRIE: JOVRIE
0x4400D104 C   FIELD 03w01 ROVRIE: ROVRIE
0x4400D104 C   FIELD 04w01 AWDIE: AWDIE
0x4400D104 C   FIELD 05w01 SCDIE: SCDIE
0x4400D104 C   FIELD 06w01 CKABIE: CKABIE
0x4400D104 C   FIELD 08w08 EXCH: EXCH
0x4400D104 C   FIELD 16w08 AWDCH: AWDCH
0x4400D108 B  REGISTER DFSDM_FLT0ISR (ro): DFSDM filter 0 interrupt and status register
0x4400D108 C   FIELD 00w01 JEOCF: JEOCF
0x4400D108 C   FIELD 01w01 REOCF: REOCF
0x4400D108 C   FIELD 02w01 JOVRF: JOVRF
0x4400D108 C   FIELD 03w01 ROVRF: ROVRF
0x4400D108 C   FIELD 04w01 AWDF: AWDF
0x4400D108 C   FIELD 13w01 JCIP: JCIP
0x4400D108 C   FIELD 14w01 RCIP: RCIP
0x4400D108 C   FIELD 16w08 CKABF: CKABF
0x4400D108 C   FIELD 24w08 SCDF: SCDF
0x4400D10C B  REGISTER DFSDM_FLT0ICR (rw): DFSDM filter 0 interrupt flag clear register
0x4400D10C C   FIELD 02w01 CLRJOVRF: CLRJOVRF
0x4400D10C C   FIELD 03w01 CLRROVRF: CLRROVRF
0x4400D10C C   FIELD 16w08 CLRCKABF: CLRCKABF
0x4400D10C C   FIELD 24w08 CLRSCDF: CLRSCDF
0x4400D110 B  REGISTER DFSDM_FLT0JCHGR (rw): DFSDM filter 0 injected channel group selection register
0x4400D110 C   FIELD 00w08 JCHG: JCHG
0x4400D114 B  REGISTER DFSDM_FLT0FCR (rw): DFSDM filter 0 control register
0x4400D114 C   FIELD 00w08 IOSR: IOSR
0x4400D114 C   FIELD 16w10 FOSR: FOSR
0x4400D114 C   FIELD 29w03 FORD: FORD
0x4400D118 B  REGISTER DFSDM_FLT0JDATAR (ro): DFSDM filter 0 data register for injected group
0x4400D118 C   FIELD 00w03 JDATACH: JDATACH
0x4400D118 C   FIELD 08w24 JDATA: JDATA
0x4400D11C B  REGISTER DFSDM_FLT0RDATAR (ro): DFSDM filter 0 data register for the regular channel
0x4400D11C C   FIELD 00w03 RDATACH: RDATACH
0x4400D11C C   FIELD 04w01 RPEND: RPEND
0x4400D11C C   FIELD 08w24 RDATA: RDATA
0x4400D120 B  REGISTER DFSDM_FLT0AWHTR (rw): DFSDM filter 0 analog watchdog high threshold register
0x4400D120 C   FIELD 00w04 BKAWH: BKAWH
0x4400D120 C   FIELD 08w24 AWHT: AWHT
0x4400D124 B  REGISTER DFSDM_FLT0AWLTR (rw): DFSDM filter 0 analog watchdog low threshold register
0x4400D124 C   FIELD 00w04 BKAWL: BKAWL
0x4400D124 C   FIELD 08w24 AWLT: AWLT
0x4400D128 B  REGISTER DFSDM_FLT0AWSR (ro): DFSDM filter 0 analog watchdog status register
0x4400D128 C   FIELD 00w08 AWLTF: AWLTF
0x4400D128 C   FIELD 08w08 AWHTF: AWHTF
0x4400D12C B  REGISTER DFSDM_FLT0AWCFR (rw): DFSDM filter 0 analog watchdog clear flag register
0x4400D12C C   FIELD 00w08 CLRAWLTF: CLRAWLTF
0x4400D12C C   FIELD 08w08 CLRAWHTF: CLRAWHTF
0x4400D130 B  REGISTER DFSDM_FLT0EXMAX (ro): DFSDM filter 0 extremes detector maximum register
0x4400D130 C   FIELD 00w03 EXMAXCH: EXMAXCH
0x4400D130 C   FIELD 08w24 EXMAX: EXMAX
0x4400D134 B  REGISTER DFSDM_FLT0EXMIN: DFSDM filter 0 extremes detector minimum register
0x4400D134 C   FIELD 00w03 EXMINCH (ro): EXMINCH
0x4400D134 C   FIELD 08w24 EXMIN (rw): EXMIN
0x4400D138 B  REGISTER DFSDM_FLT0CNVTIMR (ro): DFSDM filter 0 conversion timer register
0x4400D138 C   FIELD 04w28 CNVCNT: CNVCNT
0x4400D180 B  REGISTER DFSDM_FLT1CR1 (rw): DFSDM filter 1 control register 1
0x4400D180 C   FIELD 00w01 DFEN: DFEN
0x4400D180 C   FIELD 01w01 JSWSTART: JSWSTART
0x4400D180 C   FIELD 03w01 JSYNC: JSYNC
0x4400D180 C   FIELD 04w01 JSCAN: JSCAN
0x4400D180 C   FIELD 05w01 JDMAEN: JDMAEN
0x4400D180 C   FIELD 08w05 JEXTSEL: JEXTSEL
0x4400D180 C   FIELD 13w02 JEXTEN: JEXTEN
0x4400D180 C   FIELD 17w01 RSWSTART: RSWSTART
0x4400D180 C   FIELD 18w01 RCONT: RCONT
0x4400D180 C   FIELD 19w01 RSYNC: RSYNC
0x4400D180 C   FIELD 21w01 RDMAEN: RDMAEN
0x4400D180 C   FIELD 24w03 RCH: RCH
0x4400D180 C   FIELD 29w01 FAST: FAST
0x4400D180 C   FIELD 30w01 AWFSEL: AWFSEL
0x4400D184 B  REGISTER DFSDM_FLT1CR2 (rw): DFSDM filter 1 control register 2
0x4400D184 C   FIELD 00w01 JEOCIE: JEOCIE
0x4400D184 C   FIELD 01w01 REOCIE: REOCIE
0x4400D184 C   FIELD 02w01 JOVRIE: JOVRIE
0x4400D184 C   FIELD 03w01 ROVRIE: ROVRIE
0x4400D184 C   FIELD 04w01 AWDIE: AWDIE
0x4400D184 C   FIELD 05w01 SCDIE: SCDIE
0x4400D184 C   FIELD 06w01 CKABIE: CKABIE
0x4400D184 C   FIELD 08w08 EXCH: EXCH
0x4400D184 C   FIELD 16w08 AWDCH: AWDCH
0x4400D188 B  REGISTER DFSDM_FLT1ISR (ro): DFSDM filter 1 interrupt and status register
0x4400D188 C   FIELD 00w01 JEOCF: JEOCF
0x4400D188 C   FIELD 01w01 REOCF: REOCF
0x4400D188 C   FIELD 02w01 JOVRF: JOVRF
0x4400D188 C   FIELD 03w01 ROVRF: ROVRF
0x4400D188 C   FIELD 04w01 AWDF: AWDF
0x4400D188 C   FIELD 13w01 JCIP: JCIP
0x4400D188 C   FIELD 14w01 RCIP: RCIP
0x4400D188 C   FIELD 16w08 CKABF: CKABF
0x4400D188 C   FIELD 24w08 SCDF: SCDF
0x4400D18C B  REGISTER DFSDM_FLT1ICR (rw): DFSDM filter 1 interrupt flag clear register
0x4400D18C C   FIELD 02w01 CLRJOVRF: CLRJOVRF
0x4400D18C C   FIELD 03w01 CLRROVRF: CLRROVRF
0x4400D18C C   FIELD 16w08 CLRCKABF: CLRCKABF
0x4400D18C C   FIELD 24w08 CLRSCDF: CLRSCDF
0x4400D190 B  REGISTER DFSDM_FLT1JCHGR (rw): DFSDM filter 1 injected channel group selection register
0x4400D190 C   FIELD 00w08 JCHG: JCHG
0x4400D194 B  REGISTER DFSDM_FLT1FCR (rw): DFSDM filter 1 control register
0x4400D194 C   FIELD 00w08 IOSR: IOSR
0x4400D194 C   FIELD 16w10 FOSR: FOSR
0x4400D194 C   FIELD 29w03 FORD: FORD
0x4400D198 B  REGISTER DFSDM_FLT1JDATAR (ro): DFSDM filter 1 data register for injected group
0x4400D198 C   FIELD 00w03 JDATACH: JDATACH
0x4400D198 C   FIELD 08w24 JDATA: JDATA
0x4400D19C B  REGISTER DFSDM_FLT1RDATAR (ro): DFSDM filter 1 data register for the regular channel
0x4400D19C C   FIELD 00w03 RDATACH: RDATACH
0x4400D19C C   FIELD 04w01 RPEND: RPEND
0x4400D19C C   FIELD 08w24 RDATA: RDATA
0x4400D1A0 B  REGISTER DFSDM_FLT1AWHTR (rw): DFSDM filter 1 analog watchdog high threshold register
0x4400D1A0 C   FIELD 00w04 BKAWH: BKAWH
0x4400D1A0 C   FIELD 08w24 AWHT: AWHT
0x4400D1A4 B  REGISTER DFSDM_FLT1AWLTR (rw): DFSDM filter 1 analog watchdog low threshold register
0x4400D1A4 C   FIELD 00w04 BKAWL: BKAWL
0x4400D1A4 C   FIELD 08w24 AWLT: AWLT
0x4400D1A8 B  REGISTER DFSDM_FLT1AWSR (ro): DFSDM filter 1 analog watchdog status register
0x4400D1A8 C   FIELD 00w08 AWLTF: AWLTF
0x4400D1A8 C   FIELD 08w08 AWHTF: AWHTF
0x4400D1AC B  REGISTER DFSDM_FLT1AWCFR (rw): DFSDM filter 1 analog watchdog clear flag register
0x4400D1AC C   FIELD 00w08 CLRAWLTF: CLRAWLTF
0x4400D1AC C   FIELD 08w08 CLRAWHTF: CLRAWHTF
0x4400D1B0 B  REGISTER DFSDM_FLT1EXMAX (ro): DFSDM filter 1 extremes detector maximum register
0x4400D1B0 C   FIELD 00w03 EXMAXCH: EXMAXCH
0x4400D1B0 C   FIELD 08w24 EXMAX: EXMAX
0x4400D1B4 B  REGISTER DFSDM_FLT1EXMIN: DFSDM filter 1 extremes detector minimum register
0x4400D1B4 C   FIELD 00w03 EXMINCH (ro): EXMINCH
0x4400D1B4 C   FIELD 08w24 EXMIN (rw): EXMIN
0x4400D1B8 B  REGISTER DFSDM_FLT1CNVTIMR (ro): DFSDM filter 1 conversion timer register
0x4400D1B8 C   FIELD 04w28 CNVCNT: CNVCNT
0x4400D200 B  REGISTER DFSDM_FLT2CR1 (rw): DFSDM filter 2 control register 1
0x4400D200 C   FIELD 00w01 DFEN: DFEN
0x4400D200 C   FIELD 01w01 JSWSTART: JSWSTART
0x4400D200 C   FIELD 03w01 JSYNC: JSYNC
0x4400D200 C   FIELD 04w01 JSCAN: JSCAN
0x4400D200 C   FIELD 05w01 JDMAEN: JDMAEN
0x4400D200 C   FIELD 08w05 JEXTSEL: JEXTSEL
0x4400D200 C   FIELD 13w02 JEXTEN: JEXTEN
0x4400D200 C   FIELD 17w01 RSWSTART: RSWSTART
0x4400D200 C   FIELD 18w01 RCONT: RCONT
0x4400D200 C   FIELD 19w01 RSYNC: RSYNC
0x4400D200 C   FIELD 21w01 RDMAEN: RDMAEN
0x4400D200 C   FIELD 24w03 RCH: RCH
0x4400D200 C   FIELD 29w01 FAST: FAST
0x4400D200 C   FIELD 30w01 AWFSEL: AWFSEL
0x4400D204 B  REGISTER DFSDM_FLT2CR2 (rw): DFSDM filter 2 control register 2
0x4400D204 C   FIELD 00w01 JEOCIE: JEOCIE
0x4400D204 C   FIELD 01w01 REOCIE: REOCIE
0x4400D204 C   FIELD 02w01 JOVRIE: JOVRIE
0x4400D204 C   FIELD 03w01 ROVRIE: ROVRIE
0x4400D204 C   FIELD 04w01 AWDIE: AWDIE
0x4400D204 C   FIELD 05w01 SCDIE: SCDIE
0x4400D204 C   FIELD 06w01 CKABIE: CKABIE
0x4400D204 C   FIELD 08w08 EXCH: EXCH
0x4400D204 C   FIELD 16w08 AWDCH: AWDCH
0x4400D208 B  REGISTER DFSDM_FLT2ISR (ro): DFSDM filter 2 interrupt and status register
0x4400D208 C   FIELD 00w01 JEOCF: JEOCF
0x4400D208 C   FIELD 01w01 REOCF: REOCF
0x4400D208 C   FIELD 02w01 JOVRF: JOVRF
0x4400D208 C   FIELD 03w01 ROVRF: ROVRF
0x4400D208 C   FIELD 04w01 AWDF: AWDF
0x4400D208 C   FIELD 13w01 JCIP: JCIP
0x4400D208 C   FIELD 14w01 RCIP: RCIP
0x4400D208 C   FIELD 16w08 CKABF: CKABF
0x4400D208 C   FIELD 24w08 SCDF: SCDF
0x4400D20C B  REGISTER DFSDM_FLT2ICR (rw): DFSDM filter 2 interrupt flag clear register
0x4400D20C C   FIELD 02w01 CLRJOVRF: CLRJOVRF
0x4400D20C C   FIELD 03w01 CLRROVRF: CLRROVRF
0x4400D20C C   FIELD 16w08 CLRCKABF: CLRCKABF
0x4400D20C C   FIELD 24w08 CLRSCDF: CLRSCDF
0x4400D210 B  REGISTER DFSDM_FLT2JCHGR (rw): DFSDM filter 2 injected channel group selection register
0x4400D210 C   FIELD 00w08 JCHG: JCHG
0x4400D214 B  REGISTER DFSDM_FLT2FCR (rw): DFSDM filter 2 control register
0x4400D214 C   FIELD 00w08 IOSR: IOSR
0x4400D214 C   FIELD 16w10 FOSR: FOSR
0x4400D214 C   FIELD 29w03 FORD: FORD
0x4400D218 B  REGISTER DFSDM_FLT2JDATAR (ro): DFSDM filter 2 data register for injected group
0x4400D218 C   FIELD 00w03 JDATACH: JDATACH
0x4400D218 C   FIELD 08w24 JDATA: JDATA
0x4400D21C B  REGISTER DFSDM_FLT2RDATAR (ro): DFSDM filter 2 data register for the regular channel
0x4400D21C C   FIELD 00w03 RDATACH: RDATACH
0x4400D21C C   FIELD 04w01 RPEND: RPEND
0x4400D21C C   FIELD 08w24 RDATA: RDATA
0x4400D220 B  REGISTER DFSDM_FLT2AWHTR (rw): DFSDM filter 2 analog watchdog high threshold register
0x4400D220 C   FIELD 00w04 BKAWH: BKAWH
0x4400D220 C   FIELD 08w24 AWHT: AWHT
0x4400D224 B  REGISTER DFSDM_FLT2AWLTR (rw): DFSDM filter 2 analog watchdog low threshold register
0x4400D224 C   FIELD 00w04 BKAWL: BKAWL
0x4400D224 C   FIELD 08w24 AWLT: AWLT
0x4400D228 B  REGISTER DFSDM_FLT2AWSR (ro): DFSDM filter 2 analog watchdog status register
0x4400D228 C   FIELD 00w08 AWLTF: AWLTF
0x4400D228 C   FIELD 08w08 AWHTF: AWHTF
0x4400D22C B  REGISTER DFSDM_FLT2AWCFR (rw): DFSDM filter 2 analog watchdog clear flag register
0x4400D22C C   FIELD 00w08 CLRAWLTF: CLRAWLTF
0x4400D22C C   FIELD 08w08 CLRAWHTF: CLRAWHTF
0x4400D230 B  REGISTER DFSDM_FLT2EXMAX (ro): DFSDM filter 2 extremes detector maximum register
0x4400D230 C   FIELD 00w03 EXMAXCH: EXMAXCH
0x4400D230 C   FIELD 08w24 EXMAX: EXMAX
0x4400D234 B  REGISTER DFSDM_FLT2EXMIN: DFSDM filter 2 extremes detector minimum register
0x4400D234 C   FIELD 00w03 EXMINCH (ro): EXMINCH
0x4400D234 C   FIELD 08w24 EXMIN (rw): EXMIN
0x4400D238 B  REGISTER DFSDM_FLT2CNVTIMR (ro): DFSDM filter 2 conversion timer register
0x4400D238 C   FIELD 04w28 CNVCNT: CNVCNT
0x4400D280 B  REGISTER DFSDM_FLT3CR1 (rw): DFSDM filter 3 control register 1
0x4400D280 C   FIELD 00w01 DFEN: DFEN
0x4400D280 C   FIELD 01w01 JSWSTART: JSWSTART
0x4400D280 C   FIELD 03w01 JSYNC: JSYNC
0x4400D280 C   FIELD 04w01 JSCAN: JSCAN
0x4400D280 C   FIELD 05w01 JDMAEN: JDMAEN
0x4400D280 C   FIELD 08w05 JEXTSEL: JEXTSEL
0x4400D280 C   FIELD 13w02 JEXTEN: JEXTEN
0x4400D280 C   FIELD 17w01 RSWSTART: RSWSTART
0x4400D280 C   FIELD 18w01 RCONT: RCONT
0x4400D280 C   FIELD 19w01 RSYNC: RSYNC
0x4400D280 C   FIELD 21w01 RDMAEN: RDMAEN
0x4400D280 C   FIELD 24w03 RCH: RCH
0x4400D280 C   FIELD 29w01 FAST: FAST
0x4400D280 C   FIELD 30w01 AWFSEL: AWFSEL
0x4400D284 B  REGISTER DFSDM_FLT3CR2 (rw): DFSDM filter 3 control register 2
0x4400D284 C   FIELD 00w01 JEOCIE: JEOCIE
0x4400D284 C   FIELD 01w01 REOCIE: REOCIE
0x4400D284 C   FIELD 02w01 JOVRIE: JOVRIE
0x4400D284 C   FIELD 03w01 ROVRIE: ROVRIE
0x4400D284 C   FIELD 04w01 AWDIE: AWDIE
0x4400D284 C   FIELD 05w01 SCDIE: SCDIE
0x4400D284 C   FIELD 06w01 CKABIE: CKABIE
0x4400D284 C   FIELD 08w08 EXCH: EXCH
0x4400D284 C   FIELD 16w08 AWDCH: AWDCH
0x4400D288 B  REGISTER DFSDM_FLT3ISR (ro): DFSDM filter 3 interrupt and status register
0x4400D288 C   FIELD 00w01 JEOCF: JEOCF
0x4400D288 C   FIELD 01w01 REOCF: REOCF
0x4400D288 C   FIELD 02w01 JOVRF: JOVRF
0x4400D288 C   FIELD 03w01 ROVRF: ROVRF
0x4400D288 C   FIELD 04w01 AWDF: AWDF
0x4400D288 C   FIELD 13w01 JCIP: JCIP
0x4400D288 C   FIELD 14w01 RCIP: RCIP
0x4400D288 C   FIELD 16w08 CKABF: CKABF
0x4400D288 C   FIELD 24w08 SCDF: SCDF
0x4400D28C B  REGISTER DFSDM_FLT3ICR (rw): DFSDM filter 3 interrupt flag clear register
0x4400D28C C   FIELD 02w01 CLRJOVRF: CLRJOVRF
0x4400D28C C   FIELD 03w01 CLRROVRF: CLRROVRF
0x4400D28C C   FIELD 16w08 CLRCKABF: CLRCKABF
0x4400D28C C   FIELD 24w08 CLRSCDF: CLRSCDF
0x4400D290 B  REGISTER DFSDM_FLT3JCHGR (rw): DFSDM filter 3 injected channel group selection register
0x4400D290 C   FIELD 00w08 JCHG: JCHG
0x4400D294 B  REGISTER DFSDM_FLT3FCR (rw): DFSDM filter 3 control register
0x4400D294 C   FIELD 00w08 IOSR: IOSR
0x4400D294 C   FIELD 16w10 FOSR: FOSR
0x4400D294 C   FIELD 29w03 FORD: FORD
0x4400D298 B  REGISTER DFSDM_FLT3JDATAR (ro): DFSDM filter 3 data register for injected group
0x4400D298 C   FIELD 00w03 JDATACH: JDATACH
0x4400D298 C   FIELD 08w24 JDATA: JDATA
0x4400D29C B  REGISTER DFSDM_FLT3RDATAR (ro): DFSDM filter 3 data register for the regular channel
0x4400D29C C   FIELD 00w03 RDATACH: RDATACH
0x4400D29C C   FIELD 04w01 RPEND: RPEND
0x4400D29C C   FIELD 08w24 RDATA: RDATA
0x4400D2A0 B  REGISTER DFSDM_FLT3AWHTR (rw): DFSDM filter 3 analog watchdog high threshold register
0x4400D2A0 C   FIELD 00w04 BKAWH: BKAWH
0x4400D2A0 C   FIELD 08w24 AWHT: AWHT
0x4400D2A4 B  REGISTER DFSDM_FLT3AWLTR (rw): DFSDM filter 3 analog watchdog low threshold register
0x4400D2A4 C   FIELD 00w04 BKAWL: BKAWL
0x4400D2A4 C   FIELD 08w24 AWLT: AWLT
0x4400D2A8 B  REGISTER DFSDM_FLT3AWSR (ro): DFSDM filter 3 analog watchdog status register
0x4400D2A8 C   FIELD 00w08 AWLTF: AWLTF
0x4400D2A8 C   FIELD 08w08 AWHTF: AWHTF
0x4400D2AC B  REGISTER DFSDM_FLT3AWCFR (rw): DFSDM filter 3 analog watchdog clear flag register
0x4400D2AC C   FIELD 00w08 CLRAWLTF: CLRAWLTF
0x4400D2AC C   FIELD 08w08 CLRAWHTF: CLRAWHTF
0x4400D2B0 B  REGISTER DFSDM_FLT3EXMAX (ro): DFSDM filter 3 extremes detector maximum register
0x4400D2B0 C   FIELD 00w03 EXMAXCH: EXMAXCH
0x4400D2B0 C   FIELD 08w24 EXMAX: EXMAX
0x4400D2B4 B  REGISTER DFSDM_FLT3EXMIN: DFSDM filter 3 extremes detector minimum register
0x4400D2B4 C   FIELD 00w03 EXMINCH (ro): EXMINCH
0x4400D2B4 C   FIELD 08w24 EXMIN (rw): EXMIN
0x4400D2B8 B  REGISTER DFSDM_FLT3CNVTIMR (ro): DFSDM filter 3 conversion timer register
0x4400D2B8 C   FIELD 04w28 CNVCNT: CNVCNT
0x4400D300 B  REGISTER DFSDM_FLT4CR1 (rw): DFSDM filter 4 control register 1
0x4400D300 C   FIELD 00w01 DFEN: DFEN
0x4400D300 C   FIELD 01w01 JSWSTART: JSWSTART
0x4400D300 C   FIELD 03w01 JSYNC: JSYNC
0x4400D300 C   FIELD 04w01 JSCAN: JSCAN
0x4400D300 C   FIELD 05w01 JDMAEN: JDMAEN
0x4400D300 C   FIELD 08w05 JEXTSEL: JEXTSEL
0x4400D300 C   FIELD 13w02 JEXTEN: JEXTEN
0x4400D300 C   FIELD 17w01 RSWSTART: RSWSTART
0x4400D300 C   FIELD 18w01 RCONT: RCONT
0x4400D300 C   FIELD 19w01 RSYNC: RSYNC
0x4400D300 C   FIELD 21w01 RDMAEN: RDMAEN
0x4400D300 C   FIELD 24w03 RCH: RCH
0x4400D300 C   FIELD 29w01 FAST: FAST
0x4400D300 C   FIELD 30w01 AWFSEL: AWFSEL
0x4400D304 B  REGISTER DFSDM_FLT4CR2 (rw): DFSDM filter 4 control register 2
0x4400D304 C   FIELD 00w01 JEOCIE: JEOCIE
0x4400D304 C   FIELD 01w01 REOCIE: REOCIE
0x4400D304 C   FIELD 02w01 JOVRIE: JOVRIE
0x4400D304 C   FIELD 03w01 ROVRIE: ROVRIE
0x4400D304 C   FIELD 04w01 AWDIE: AWDIE
0x4400D304 C   FIELD 05w01 SCDIE: SCDIE
0x4400D304 C   FIELD 06w01 CKABIE: CKABIE
0x4400D304 C   FIELD 08w08 EXCH: EXCH
0x4400D304 C   FIELD 16w08 AWDCH: AWDCH
0x4400D308 B  REGISTER DFSDM_FLT4ISR (ro): DFSDM filter 4 interrupt and status register
0x4400D308 C   FIELD 00w01 JEOCF: JEOCF
0x4400D308 C   FIELD 01w01 REOCF: REOCF
0x4400D308 C   FIELD 02w01 JOVRF: JOVRF
0x4400D308 C   FIELD 03w01 ROVRF: ROVRF
0x4400D308 C   FIELD 04w01 AWDF: AWDF
0x4400D308 C   FIELD 13w01 JCIP: JCIP
0x4400D308 C   FIELD 14w01 RCIP: RCIP
0x4400D308 C   FIELD 16w08 CKABF: CKABF
0x4400D308 C   FIELD 24w08 SCDF: SCDF
0x4400D30C B  REGISTER DFSDM_FLT4ICR (rw): DFSDM filter 4 interrupt flag clear register
0x4400D30C C   FIELD 02w01 CLRJOVRF: CLRJOVRF
0x4400D30C C   FIELD 03w01 CLRROVRF: CLRROVRF
0x4400D30C C   FIELD 16w08 CLRCKABF: CLRCKABF
0x4400D30C C   FIELD 24w08 CLRSCDF: CLRSCDF
0x4400D310 B  REGISTER DFSDM_FLT4JCHGR (rw): DFSDM filter 4 injected channel group selection register
0x4400D310 C   FIELD 00w08 JCHG: JCHG
0x4400D314 B  REGISTER DFSDM_FLT4FCR (rw): DFSDM filter 4 control register
0x4400D314 C   FIELD 00w08 IOSR: IOSR
0x4400D314 C   FIELD 16w10 FOSR: FOSR
0x4400D314 C   FIELD 29w03 FORD: FORD
0x4400D318 B  REGISTER DFSDM_FLT4JDATAR (ro): DFSDM filter 4 data register for injected group
0x4400D318 C   FIELD 00w03 JDATACH: JDATACH
0x4400D318 C   FIELD 08w24 JDATA: JDATA
0x4400D31C B  REGISTER DFSDM_FLT4RDATAR (ro): DFSDM filter 4 data register for the regular channel
0x4400D31C C   FIELD 00w03 RDATACH: RDATACH
0x4400D31C C   FIELD 04w01 RPEND: RPEND
0x4400D31C C   FIELD 08w24 RDATA: RDATA
0x4400D320 B  REGISTER DFSDM_FLT4AWHTR (rw): DFSDM filter 4 analog watchdog high threshold register
0x4400D320 C   FIELD 00w04 BKAWH: BKAWH
0x4400D320 C   FIELD 08w24 AWHT: AWHT
0x4400D324 B  REGISTER DFSDM_FLT4AWLTR (rw): DFSDM filter 4 analog watchdog low threshold register
0x4400D324 C   FIELD 00w04 BKAWL: BKAWL
0x4400D324 C   FIELD 08w24 AWLT: AWLT
0x4400D328 B  REGISTER DFSDM_FLT4AWSR (ro): DFSDM filter 4 analog watchdog status register
0x4400D328 C   FIELD 00w08 AWLTF: AWLTF
0x4400D328 C   FIELD 08w08 AWHTF: AWHTF
0x4400D32C B  REGISTER DFSDM_FLT4AWCFR (rw): DFSDM filter 4 analog watchdog clear flag register
0x4400D32C C   FIELD 00w08 CLRAWLTF: CLRAWLTF
0x4400D32C C   FIELD 08w08 CLRAWHTF: CLRAWHTF
0x4400D330 B  REGISTER DFSDM_FLT4EXMAX (ro): DFSDM filter 4 extremes detector maximum register
0x4400D330 C   FIELD 00w03 EXMAXCH: EXMAXCH
0x4400D330 C   FIELD 08w24 EXMAX: EXMAX
0x4400D334 B  REGISTER DFSDM_FLT4EXMIN: DFSDM filter 4 extremes detector minimum register
0x4400D334 C   FIELD 00w03 EXMINCH (ro): EXMINCH
0x4400D334 C   FIELD 08w24 EXMIN (rw): EXMIN
0x4400D338 B  REGISTER DFSDM_FLT4CNVTIMR (ro): DFSDM filter 4 conversion timer register
0x4400D338 C   FIELD 04w28 CNVCNT: CNVCNT
0x4400D380 B  REGISTER DFSDM_FLT5CR1 (rw): DFSDM filter 5 control register 1
0x4400D380 C   FIELD 00w01 DFEN: DFEN
0x4400D380 C   FIELD 01w01 JSWSTART: JSWSTART
0x4400D380 C   FIELD 03w01 JSYNC: JSYNC
0x4400D380 C   FIELD 04w01 JSCAN: JSCAN
0x4400D380 C   FIELD 05w01 JDMAEN: JDMAEN
0x4400D380 C   FIELD 08w05 JEXTSEL: JEXTSEL
0x4400D380 C   FIELD 13w02 JEXTEN: JEXTEN
0x4400D380 C   FIELD 17w01 RSWSTART: RSWSTART
0x4400D380 C   FIELD 18w01 RCONT: RCONT
0x4400D380 C   FIELD 19w01 RSYNC: RSYNC
0x4400D380 C   FIELD 21w01 RDMAEN: RDMAEN
0x4400D380 C   FIELD 24w03 RCH: RCH
0x4400D380 C   FIELD 29w01 FAST: FAST
0x4400D380 C   FIELD 30w01 AWFSEL: AWFSEL
0x4400D384 B  REGISTER DFSDM_FLT5CR2 (rw): DFSDM filter 5 control register 2
0x4400D384 C   FIELD 00w01 JEOCIE: JEOCIE
0x4400D384 C   FIELD 01w01 REOCIE: REOCIE
0x4400D384 C   FIELD 02w01 JOVRIE: JOVRIE
0x4400D384 C   FIELD 03w01 ROVRIE: ROVRIE
0x4400D384 C   FIELD 04w01 AWDIE: AWDIE
0x4400D384 C   FIELD 05w01 SCDIE: SCDIE
0x4400D384 C   FIELD 06w01 CKABIE: CKABIE
0x4400D384 C   FIELD 08w08 EXCH: EXCH
0x4400D384 C   FIELD 16w08 AWDCH: AWDCH
0x4400D388 B  REGISTER DFSDM_FLT5ISR (ro): DFSDM filter 5 interrupt and status register
0x4400D388 C   FIELD 00w01 JEOCF: JEOCF
0x4400D388 C   FIELD 01w01 REOCF: REOCF
0x4400D388 C   FIELD 02w01 JOVRF: JOVRF
0x4400D388 C   FIELD 03w01 ROVRF: ROVRF
0x4400D388 C   FIELD 04w01 AWDF: AWDF
0x4400D388 C   FIELD 13w01 JCIP: JCIP
0x4400D388 C   FIELD 14w01 RCIP: RCIP
0x4400D388 C   FIELD 16w08 CKABF: CKABF
0x4400D388 C   FIELD 24w08 SCDF: SCDF
0x4400D38C B  REGISTER DFSDM_FLT5ICR (rw): DFSDM filter 5 interrupt flag clear register
0x4400D38C C   FIELD 02w01 CLRJOVRF: CLRJOVRF
0x4400D38C C   FIELD 03w01 CLRROVRF: CLRROVRF
0x4400D38C C   FIELD 16w08 CLRCKABF: CLRCKABF
0x4400D38C C   FIELD 24w08 CLRSCDF: CLRSCDF
0x4400D390 B  REGISTER DFSDM_FLT5JCHGR (rw): DFSDM filter 5 injected channel group selection register
0x4400D390 C   FIELD 00w08 JCHG: JCHG
0x4400D394 B  REGISTER DFSDM_FLT5FCR (rw): DFSDM filter 5 control register
0x4400D394 C   FIELD 00w08 IOSR: IOSR
0x4400D394 C   FIELD 16w10 FOSR: FOSR
0x4400D394 C   FIELD 29w03 FORD: FORD
0x4400D398 B  REGISTER DFSDM_FLT5JDATAR (ro): DFSDM filter 5 data register for injected group
0x4400D398 C   FIELD 00w03 JDATACH: JDATACH
0x4400D398 C   FIELD 08w24 JDATA: JDATA
0x4400D39C B  REGISTER DFSDM_FLT5RDATAR (ro): DFSDM filter 5 data register for the regular channel
0x4400D39C C   FIELD 00w03 RDATACH: RDATACH
0x4400D39C C   FIELD 04w01 RPEND: RPEND
0x4400D39C C   FIELD 08w24 RDATA: RDATA
0x4400D3A0 B  REGISTER DFSDM_FLT5AWHTR (rw): DFSDM filter 5 analog watchdog high threshold register
0x4400D3A0 C   FIELD 00w04 BKAWH: BKAWH
0x4400D3A0 C   FIELD 08w24 AWHT: AWHT
0x4400D3A4 B  REGISTER DFSDM_FLT5AWLTR (rw): DFSDM filter 5 analog watchdog low threshold register
0x4400D3A4 C   FIELD 00w04 BKAWL: BKAWL
0x4400D3A4 C   FIELD 08w24 AWLT: AWLT
0x4400D3A8 B  REGISTER DFSDM_FLT5AWSR (ro): DFSDM filter 5 analog watchdog status register
0x4400D3A8 C   FIELD 00w08 AWLTF: AWLTF
0x4400D3A8 C   FIELD 08w08 AWHTF: AWHTF
0x4400D3AC B  REGISTER DFSDM_FLT5AWCFR (rw): DFSDM filter 5 analog watchdog clear flag register
0x4400D3AC C   FIELD 00w08 CLRAWLTF: CLRAWLTF
0x4400D3AC C   FIELD 08w08 CLRAWHTF: CLRAWHTF
0x4400D3B0 B  REGISTER DFSDM_FLT5EXMAX (ro): DFSDM filter 5 extremes detector maximum register
0x4400D3B0 C   FIELD 00w03 EXMAXCH: EXMAXCH
0x4400D3B0 C   FIELD 08w24 EXMAX: EXMAX
0x4400D3B4 B  REGISTER DFSDM_FLT5EXMIN: DFSDM filter 5 extremes detector minimum register
0x4400D3B4 C   FIELD 00w03 EXMINCH (ro): EXMINCH
0x4400D3B4 C   FIELD 08w24 EXMIN (rw): EXMIN
0x4400D3B8 B  REGISTER DFSDM_FLT5CNVTIMR (ro): DFSDM filter 5 conversion timer register
0x4400D3B8 C   FIELD 04w28 CNVCNT: CNVCNT
0x4400D7F0 B  REGISTER DFSDM_HWCFGR (ro): This register specifies the hardware configuration of DFSDM peripheral.
0x4400D7F0 C   FIELD 00w08 NBT: NBT
0x4400D7F0 C   FIELD 08w08 NBF: NBF
0x4400D7F4 B  REGISTER DFSDM_VERR (ro): This register specifies the version of DFSDM peripheral.
0x4400D7F4 C   FIELD 00w04 MINREV: MINREV
0x4400D7F4 C   FIELD 04w04 MAJREV: MAJREV
0x4400D7F8 B  REGISTER DFSDM_IPIDR (ro): This register specifies the identification of DFSDM peripheral.
0x4400D7F8 C   FIELD 00w32 ID: ID
0x4400D7FC B  REGISTER DFSDM_SIDR (ro): This register specifies the size allocated to DFSDM registers.
0x4400D7FC C   FIELD 00w32 SID: SID
0x4400E000 A PERIPHERAL FDCAN1
0x4400E000 B  REGISTER FDCAN_CREL (ro): FDCAN core release register
0x4400E000 C   FIELD 00w08 DAY: DAY
0x4400E000 C   FIELD 08w08 MON: MON
0x4400E000 C   FIELD 16w04 YEAR: YEAR
0x4400E000 C   FIELD 20w04 SUBSTEP: SUBSTEP
0x4400E000 C   FIELD 24w04 STEP: STEP
0x4400E000 C   FIELD 28w04 REL: REL
0x4400E004 B  REGISTER FDCAN_ENDN (ro): FDCAN Endian register
0x4400E004 C   FIELD 00w32 ETV: ETV
0x4400E00C B  REGISTER FDCAN_DBTP (rw): This register is dedicated to data bit timing phase and only writable if bits FDCAN_CCCR.CCE and FDCAN_CCCR.INIT are set. The CAN time quantum may be programmed in the range from 1 to 32 FDCAN clock periods. tq = (DBRP + 1) FDCAN clock periods. DTSEG1 is the sum of Prop_Seg and Phase_Seg1. DTSEG2 is Phase_Seg2. Therefore the length of the bit time is (DTSEG1 + DTSEG2 + 3) tq for programmed values, or (Sync_Seg+Prop_Seg+Phase_Seg1+Phase_Seg2) tq for functional values. The information processing time (IPT) is zero, meaning the data for the next bit is available at the first clock edge after the sample point.
0x4400E00C C   FIELD 00w04 DSJW: DSJW
0x4400E00C C   FIELD 04w04 DTSEG2: DTSEG2
0x4400E00C C   FIELD 08w05 DTSEG1: DTSEG1
0x4400E00C C   FIELD 16w05 DBRP: DBRP
0x4400E00C C   FIELD 23w01 TDC: TDC
0x4400E010 B  REGISTER FDCAN_TEST: Write access to this register has to be enabled by setting bit FDCAN_CCCR.TEST to 1. All register functions are set to their reset values when bit FDCAN_CCCR.TEST is reset. Loop back mode and software control of Tx pin FDCANx_TX are hardware test modes. Programming TX differently from 00 may disturb the message transfer on the CAN bus.
0x4400E010 C   FIELD 04w01 LBCK (rw): LBCK
0x4400E010 C   FIELD 05w02 TX (rw): TX
0x4400E010 C   FIELD 07w01 RX (ro): RX
0x4400E014 B  REGISTER FDCAN_RWD: The RAM watchdog monitors the READY output of the message RAM. A message RAM access starts the message RAM watchdog counter with the value configured by the FDCAN_RWD.WDC bits. The counter is reloaded with FDCAN_RWD.WDC bits when the message RAM signals successful completion by activating its READY output. In case there is no response from the message RAM until the counter has counted down to 0, the counter stops and interrupt flag FDCAN_IR.WDI bit is set. The RAM watchdog counter is clocked by the fdcan_pclk clock.
0x4400E014 C   FIELD 00w08 WDC (rw): WDC
0x4400E014 C   FIELD 08w08 WDV (ro): WDV
0x4400E018 B  REGISTER FDCAN_CCCR: For details about setting and resetting of single bits see Software initialization.
0x4400E018 C   FIELD 00w01 INIT (rw): INIT
0x4400E018 C   FIELD 01w01 CCE (rw): CCE
0x4400E018 C   FIELD 02w01 ASM (rw): ASM
0x4400E018 C   FIELD 03w01 CSA (ro): CSA
0x4400E018 C   FIELD 04w01 CSR (rw): CSR
0x4400E018 C   FIELD 05w01 MON (rw): MON
0x4400E018 C   FIELD 06w01 DAR (rw): DAR
0x4400E018 C   FIELD 07w01 TEST (rw): TEST
0x4400E018 C   FIELD 08w01 FDOE (rw): FDOE
0x4400E018 C   FIELD 09w01 BRSE (rw): BRSE
0x4400E018 C   FIELD 12w01 PXHD (rw): PXHD
0x4400E018 C   FIELD 13w01 EFBI (rw): EFBI
0x4400E018 C   FIELD 14w01 TXP (rw): TXP
0x4400E018 C   FIELD 15w01 NISO (rw): NISO
0x4400E01C B  REGISTER FDCAN_NBTP (rw): This register is dedicated to the nominal bit timing used during the arbitration phase.
0x4400E01C C   FIELD 00w07 NTSEG2: NTSEG2
0x4400E01C C   FIELD 08w08 NTSEG1: NTSEG1
0x4400E01C C   FIELD 16w09 NBRP: NBRP
0x4400E01C C   FIELD 25w07 NSJW: NSJW
0x4400E020 B  REGISTER FDCAN_TSCC (rw): FDCAN timestamp counter configuration register
0x4400E020 C   FIELD 00w02 TSS: TSS
0x4400E020 C   FIELD 16w04 TCP: TCP
0x4400E024 B  REGISTER FDCAN_TSCV (rw): FDCAN timestamp counter value register
0x4400E024 C   FIELD 00w16 TSC: TSC
0x4400E028 B  REGISTER FDCAN_TOCC (rw): FDCAN timeout counter configuration register
0x4400E028 C   FIELD 00w01 ETOC: ETOC
0x4400E028 C   FIELD 01w02 TOS: TOS
0x4400E028 C   FIELD 16w16 TOP: TOP
0x4400E02C B  REGISTER FDCAN_TOCV (rw): FDCAN timeout counter value register
0x4400E02C C   FIELD 00w16 TOC: TOC
0x4400E040 B  REGISTER FDCAN_ECR: FDCAN error counter register
0x4400E040 C   FIELD 00w08 TEC (ro): TEC
0x4400E040 C   FIELD 08w07 TREC (ro): TREC
0x4400E040 C   FIELD 15w01 RP (ro): RP
0x4400E040 C   FIELD 16w08 CEL (rw): CEL
0x4400E044 B  REGISTER FDCAN_PSR: FDCAN protocol status register
0x4400E044 C   FIELD 00w03 LEC (ro): LEC
0x4400E044 C   FIELD 03w02 ACT (ro): ACT
0x4400E044 C   FIELD 05w01 EP (ro): EP
0x4400E044 C   FIELD 06w01 EW (ro): EW
0x4400E044 C   FIELD 07w01 BO (ro): BO
0x4400E044 C   FIELD 08w03 DLEC (ro): DLEC
0x4400E044 C   FIELD 11w01 RESI (rw): RESI
0x4400E044 C   FIELD 12w01 RBRS (rw): RBRS
0x4400E044 C   FIELD 13w01 REDL (rw): REDL
0x4400E044 C   FIELD 14w01 PXE (rw): PXE
0x4400E044 C   FIELD 16w07 TDCV (ro): TDCV
0x4400E048 B  REGISTER FDCAN_TDCR (rw): FDCAN transmitter delay compensation register
0x4400E048 C   FIELD 00w07 TDCF: TDCF
0x4400E048 C   FIELD 08w07 TDCO: TDCO
0x4400E050 B  REGISTER FDCAN_IR (rw): The flags are set when one of the listed conditions is detected (edge-sensitive). The flags remain set until the Host clears them. A flag is cleared by writing a 1 to the corresponding bit position. Writing a 0 has no effect. A hard reset will clear the register. The configuration of IE controls whether an interrupt is generated. The configuration of ILS controls on which interrupt line an interrupt is signaled.
0x4400E050 C   FIELD 00w01 RF0N: RF0N
0x4400E050 C   FIELD 01w01 RF0W: RF0W
0x4400E050 C   FIELD 02w01 RF0F: RF0F
0x4400E050 C   FIELD 03w01 RF0L: RF0L
0x4400E050 C   FIELD 04w01 RF1N: RF1N
0x4400E050 C   FIELD 05w01 RF1W: RF1W
0x4400E050 C   FIELD 06w01 RF1F: RF1F
0x4400E050 C   FIELD 07w01 RF1L: RF1L
0x4400E050 C   FIELD 08w01 HPM: HPM
0x4400E050 C   FIELD 09w01 TC: TC
0x4400E050 C   FIELD 10w01 TCF: TCF
0x4400E050 C   FIELD 11w01 TFE: TFE
0x4400E050 C   FIELD 12w01 TEFN: TEFN
0x4400E050 C   FIELD 13w01 TEFW: TEFW
0x4400E050 C   FIELD 14w01 TEFF: TEFF
0x4400E050 C   FIELD 15w01 TEFL: TEFL
0x4400E050 C   FIELD 16w01 TSW: TSW
0x4400E050 C   FIELD 17w01 MRAF: MRAF
0x4400E050 C   FIELD 18w01 TOO: TOO
0x4400E050 C   FIELD 19w01 DRX: DRX
0x4400E050 C   FIELD 22w01 ELO: ELO
0x4400E050 C   FIELD 23w01 EP: EP
0x4400E050 C   FIELD 24w01 EW: EW
0x4400E050 C   FIELD 25w01 BO: BO
0x4400E050 C   FIELD 26w01 WDI: WDI
0x4400E050 C   FIELD 27w01 PEA: PEA
0x4400E050 C   FIELD 28w01 PED: PED
0x4400E050 C   FIELD 29w01 ARA: ARA
0x4400E054 B  REGISTER FDCAN_IE (rw): The settings in the interrupt enable register determine which status changes in the interrupt register will be signaled on an interrupt line.
0x4400E054 C   FIELD 00w01 RF0NE: RF0NE
0x4400E054 C   FIELD 01w01 RF0WE: RF0WE
0x4400E054 C   FIELD 02w01 RF0FE: RF0FE
0x4400E054 C   FIELD 03w01 RF0LE: RF0LE
0x4400E054 C   FIELD 04w01 RF1NE: RF1NE
0x4400E054 C   FIELD 05w01 RF1WE: RF1WE
0x4400E054 C   FIELD 06w01 RF1FE: RF1FE
0x4400E054 C   FIELD 07w01 RF1LE: RF1LE
0x4400E054 C   FIELD 08w01 HPME: HPME
0x4400E054 C   FIELD 09w01 TCE: TCE
0x4400E054 C   FIELD 10w01 TCFE: TCFE
0x4400E054 C   FIELD 11w01 TFEE: TFEE
0x4400E054 C   FIELD 12w01 TEFNE: TEFNE
0x4400E054 C   FIELD 13w01 TEFWE: TEFWE
0x4400E054 C   FIELD 14w01 TEFFE: TEFFE
0x4400E054 C   FIELD 15w01 TEFLE: TEFLE
0x4400E054 C   FIELD 16w01 TSWE: TSWE
0x4400E054 C   FIELD 17w01 MRAFE: MRAFE
0x4400E054 C   FIELD 18w01 TOOE: TOOE
0x4400E054 C   FIELD 19w01 DRXE: DRXE
0x4400E054 C   FIELD 20w01 BECE: BECE
0x4400E054 C   FIELD 21w01 BEUE: BEUE
0x4400E054 C   FIELD 22w01 ELOE: ELOE
0x4400E054 C   FIELD 23w01 EPE: EPE
0x4400E054 C   FIELD 24w01 EWE: EWE
0x4400E054 C   FIELD 25w01 BOE: BOE
0x4400E054 C   FIELD 26w01 WDIE: WDIE
0x4400E054 C   FIELD 27w01 PEAE: PEAE
0x4400E054 C   FIELD 28w01 PEDE: PEDE
0x4400E054 C   FIELD 29w01 ARAE: ARAE
0x4400E058 B  REGISTER FDCAN_ILS (rw): This register assigns an interrupt generated by a specific interrupt flag from the interrupt register to one of the two module interrupt lines. For interrupt generation the respective interrupt line has to be enabled via FDCAN_ILE.EINT0 and FDCAN_ILE.EINT1.
0x4400E058 C   FIELD 00w01 RF0NL: RF0NL
0x4400E058 C   FIELD 01w01 RF0WL: RF0WL
0x4400E058 C   FIELD 02w01 RF0FL: RF0FL
0x4400E058 C   FIELD 03w01 RF0LL: RF0LL
0x4400E058 C   FIELD 04w01 RF1NL: RF1NL
0x4400E058 C   FIELD 05w01 RF1WL: RF1WL
0x4400E058 C   FIELD 06w01 RF1FL: RF1FL
0x4400E058 C   FIELD 07w01 RF1LL: RF1LL
0x4400E058 C   FIELD 08w01 HPML: HPML
0x4400E058 C   FIELD 09w01 TCL: TCL
0x4400E058 C   FIELD 10w01 TCFL: TCFL
0x4400E058 C   FIELD 11w01 TFEL: TFEL
0x4400E058 C   FIELD 12w01 TEFNL: TEFNL
0x4400E058 C   FIELD 13w01 TEFWL: TEFWL
0x4400E058 C   FIELD 14w01 TEFFL: TEFFL
0x4400E058 C   FIELD 15w01 TEFLL: TEFLL
0x4400E058 C   FIELD 16w01 TSWL: TSWL
0x4400E058 C   FIELD 17w01 MRAFL: MRAFL
0x4400E058 C   FIELD 18w01 TOOL: TOOL
0x4400E058 C   FIELD 19w01 DRXL: DRXL
0x4400E058 C   FIELD 20w01 BECL: BECL
0x4400E058 C   FIELD 21w01 BEUL: BEUL
0x4400E058 C   FIELD 22w01 ELOL: ELOL
0x4400E058 C   FIELD 23w01 EPL: EPL
0x4400E058 C   FIELD 24w01 EWL: EWL
0x4400E058 C   FIELD 25w01 BOL: BOL
0x4400E058 C   FIELD 26w01 WDIL: WDIL
0x4400E058 C   FIELD 27w01 PEAL: PEAL
0x4400E058 C   FIELD 28w01 PEDL: PEDL
0x4400E058 C   FIELD 29w01 ARAL: ARAL
0x4400E05C B  REGISTER FDCAN_ILE (rw): Each of the two interrupt lines to the CPU can be enabled/disabled separately by programming bits EINT0 and EINT1.
0x4400E05C C   FIELD 00w01 EINT0: EINT0
0x4400E05C C   FIELD 01w01 EINT1: EINT1
0x4400E080 B  REGISTER FDCAN_GFC (rw): Global settings for message ID filtering. The global filter configuration register controls the filter path for standard and extended messages as described in Figure708: Standard message ID filter path and Figure709: Extended message ID filter path.
0x4400E080 C   FIELD 00w01 RRFE: RRFE
0x4400E080 C   FIELD 01w01 RRFS: RRFS
0x4400E080 C   FIELD 02w02 ANFE: ANFE
0x4400E080 C   FIELD 04w02 ANFS: ANFS
0x4400E084 B  REGISTER FDCAN_SIDFC (rw): Settings for 11-bit standard message ID filtering.The standard ID filter configuration register controls the filter path for standard messages as described in Figure708.
0x4400E084 C   FIELD 02w14 FLSSA: FLSSA
0x4400E084 C   FIELD 16w08 LSS: LSS
0x4400E088 B  REGISTER FDCAN_XIDFC (rw): Settings for 29-bit extended message ID filtering. The FDCAN extended ID filter configuration register controls the filter path for standard messages as described in Figure709: Extended message ID filter path.
0x4400E088 C   FIELD 02w14 FLESA: FLESA
0x4400E088 C   FIELD 16w08 LSE: LSE
0x4400E090 B  REGISTER FDCAN_XIDAM (rw): FDCAN extended ID and mask register
0x4400E090 C   FIELD 00w29 EIDM: EIDM
0x4400E094 B  REGISTER FDCAN_HPMS (ro): This register is updated every time a message ID filter element configured to generate a priority event match. This can be used to monitor the status of incoming high priority messages and to enable fast access to these messages.
0x4400E094 C   FIELD 00w06 BIDX: BIDX
0x4400E094 C   FIELD 06w02 MSI: MSI
0x4400E094 C   FIELD 08w07 FIDX: FIDX
0x4400E094 C   FIELD 15w01 FLST: FLST
0x4400E098 B  REGISTER FDCAN_NDAT1 (rw): FDCAN new data 1 register
0x4400E098 C   FIELD 00w01 ND0: ND0
0x4400E098 C   FIELD 01w01 ND1: ND1
0x4400E098 C   FIELD 02w01 ND2: ND2
0x4400E098 C   FIELD 03w01 ND3: ND3
0x4400E098 C   FIELD 04w01 ND4: ND4
0x4400E098 C   FIELD 05w01 ND5: ND5
0x4400E098 C   FIELD 06w01 ND6: ND6
0x4400E098 C   FIELD 07w01 ND7: ND7
0x4400E098 C   FIELD 08w01 ND8: ND8
0x4400E098 C   FIELD 09w01 ND9: ND9
0x4400E098 C   FIELD 10w01 ND10: ND10
0x4400E098 C   FIELD 11w01 ND11: ND11
0x4400E098 C   FIELD 12w01 ND12: ND12
0x4400E098 C   FIELD 13w01 ND13: ND13
0x4400E098 C   FIELD 14w01 ND14: ND14
0x4400E098 C   FIELD 15w01 ND15: ND15
0x4400E098 C   FIELD 16w01 ND16: ND16
0x4400E098 C   FIELD 17w01 ND17: ND17
0x4400E098 C   FIELD 18w01 ND18: ND18
0x4400E098 C   FIELD 19w01 ND19: ND19
0x4400E098 C   FIELD 20w01 ND20: ND20
0x4400E098 C   FIELD 21w01 ND21: ND21
0x4400E098 C   FIELD 22w01 ND22: ND22
0x4400E098 C   FIELD 23w01 ND23: ND23
0x4400E098 C   FIELD 24w01 ND24: ND24
0x4400E098 C   FIELD 25w01 ND25: ND25
0x4400E098 C   FIELD 26w01 ND26: ND26
0x4400E098 C   FIELD 27w01 ND27: ND27
0x4400E098 C   FIELD 28w01 ND28: ND28
0x4400E098 C   FIELD 29w01 ND29: ND29
0x4400E098 C   FIELD 30w01 ND30: ND30
0x4400E098 C   FIELD 31w01 ND31: ND31
0x4400E09C B  REGISTER FDCAN_NDAT2 (rw): FDCAN new data 2 register
0x4400E09C C   FIELD 00w01 ND32: ND32
0x4400E09C C   FIELD 01w01 ND33: ND33
0x4400E09C C   FIELD 02w01 ND34: ND34
0x4400E09C C   FIELD 03w01 ND35: ND35
0x4400E09C C   FIELD 04w01 ND36: ND36
0x4400E09C C   FIELD 05w01 ND37: ND37
0x4400E09C C   FIELD 06w01 ND38: ND38
0x4400E09C C   FIELD 07w01 ND39: ND39
0x4400E09C C   FIELD 08w01 ND40: ND40
0x4400E09C C   FIELD 09w01 ND41: ND41
0x4400E09C C   FIELD 10w01 ND42: ND42
0x4400E09C C   FIELD 11w01 ND43: ND43
0x4400E09C C   FIELD 12w01 ND44: ND44
0x4400E09C C   FIELD 13w01 ND45: ND45
0x4400E09C C   FIELD 14w01 ND46: ND46
0x4400E09C C   FIELD 15w01 ND47: ND47
0x4400E09C C   FIELD 16w01 ND48: ND48
0x4400E09C C   FIELD 17w01 ND49: ND49
0x4400E09C C   FIELD 18w01 ND50: ND50
0x4400E09C C   FIELD 19w01 ND51: ND51
0x4400E09C C   FIELD 20w01 ND52: ND52
0x4400E09C C   FIELD 21w01 ND53: ND53
0x4400E09C C   FIELD 22w01 ND54: ND54
0x4400E09C C   FIELD 23w01 ND55: ND55
0x4400E09C C   FIELD 24w01 ND56: ND56
0x4400E09C C   FIELD 25w01 ND57: ND57
0x4400E09C C   FIELD 26w01 ND58: ND58
0x4400E09C C   FIELD 27w01 ND59: ND59
0x4400E09C C   FIELD 28w01 ND60: ND60
0x4400E09C C   FIELD 29w01 ND61: ND61
0x4400E09C C   FIELD 30w01 ND62: ND62
0x4400E09C C   FIELD 31w01 ND63: ND63
0x4400E0A0 B  REGISTER FDCAN_RXF0C (rw): FDCAN Rx FIFO 0 configuration register
0x4400E0A0 C   FIELD 02w14 F0SA: F0SA
0x4400E0A0 C   FIELD 16w07 F0S: F0S
0x4400E0A0 C   FIELD 24w07 F0WM: F0WM
0x4400E0A0 C   FIELD 31w01 F0OM: F0OM
0x4400E0A4 B  REGISTER FDCAN_RXF0S (rw): FDCAN Rx FIFO 0 status register
0x4400E0A4 C   FIELD 00w07 F0FL: F0FL
0x4400E0A4 C   FIELD 08w06 F0GI: F0GI
0x4400E0A4 C   FIELD 16w06 F0PI: F0PI
0x4400E0A4 C   FIELD 24w01 F0F: F0F
0x4400E0A4 C   FIELD 25w01 RF0L: RF0L
0x4400E0A8 B  REGISTER FDCAN_RXF0A (rw): FDCAN Rx FIFO 0 acknowledge register
0x4400E0A8 C   FIELD 00w06 F0AI: F0AI
0x4400E0AC B  REGISTER FDCAN_RXBC (rw): FDCAN Rx buffer configuration register
0x4400E0AC C   FIELD 02w14 RBSA: RBSA
0x4400E0B0 B  REGISTER FDCAN_RXF1C (rw): FDCAN Rx FIFO 1 configuration register
0x4400E0B0 C   FIELD 02w14 F1SA: F1SA
0x4400E0B0 C   FIELD 16w07 F1S: F1S
0x4400E0B0 C   FIELD 24w07 F1WM: F1WM
0x4400E0B0 C   FIELD 31w01 F1OM: F1OM
0x4400E0B4 B  REGISTER FDCAN_RXF1S (ro): FDCAN Rx FIFO 1 status register
0x4400E0B4 C   FIELD 00w07 F1FL: F1FL
0x4400E0B4 C   FIELD 08w06 F1GI: F1GI
0x4400E0B4 C   FIELD 16w06 F1PI: F1PI
0x4400E0B4 C   FIELD 24w01 F1F: F1F
0x4400E0B4 C   FIELD 25w01 RF1L: RF1L
0x4400E0B4 C   FIELD 30w02 DMS: DMS
0x4400E0B8 B  REGISTER FDCAN_RXF1A (rw): FDCAN Rx FIFO 1 acknowledge register
0x4400E0B8 C   FIELD 00w06 F1AI: F1AI
0x4400E0BC B  REGISTER FDCAN_RXESC (ro): Configures the number of data bytes belonging to an Rx buffer / Rx FIFO element. Data field sizes higher than 8 bytes are intended for CAN FD operation only.
0x4400E0BC C   FIELD 00w03 F0DS: F0DS
0x4400E0BC C   FIELD 04w03 F1DS: F1DS
0x4400E0BC C   FIELD 08w03 RBDS: RBDS
0x4400E0C0 B  REGISTER FDCAN_TXBC (rw): FDCAN Tx buffer configuration register
0x4400E0C0 C   FIELD 02w14 TBSA: TBSA
0x4400E0C0 C   FIELD 16w06 NDTB: NDTB
0x4400E0C0 C   FIELD 24w06 TFQS: TFQS
0x4400E0C0 C   FIELD 30w01 TFQM: TFQM
0x4400E0C4 B  REGISTER FDCAN_TXFQS (ro): The Tx FIFO/queue status is related to the pending Tx requests listed in register FDCAN_TXBRP. Therefore the effect of add/cancellation requests may be delayed due to a running Tx scan (FDCAN_TXBRP not yet updated).
0x4400E0C4 C   FIELD 00w06 TFFL: TFFL
0x4400E0C4 C   FIELD 08w05 TFGI: TFGI
0x4400E0C4 C   FIELD 16w05 TFQPI: TFQPI
0x4400E0C4 C   FIELD 21w01 TFQF: TFQF
0x4400E0C8 B  REGISTER FDCAN_TXESC (ro): Configures the number of data bytes belonging to a Tx buffer element. Data field sizes &gt;8 bytes are intended for CAN FD operation only.
0x4400E0C8 C   FIELD 00w03 TBDS: TBDS
0x4400E0D0 B  REGISTER FDCAN_TXBAR (rw): FDCAN Tx buffer add request register
0x4400E0D0 C   FIELD 00w32 AR: AR
0x4400E0D4 B  REGISTER FDCAN_TXBCR (rw): FDCAN Tx buffer cancellation request register
0x4400E0D4 C   FIELD 00w32 CR: CR
0x4400E0D8 B  REGISTER FDCAN_TXBTO (ro): FDCAN Tx buffer transmission occurred register
0x4400E0D8 C   FIELD 00w32 TO: TO
0x4400E0DC B  REGISTER FDCAN_TXBCF (ro): FDCAN Tx buffer cancellation finished register
0x4400E0DC C   FIELD 00w32 CF: CF
0x4400E0E0 B  REGISTER FDCAN_TXBTIE (rw): FDCAN Tx buffer transmission interrupt enable register
0x4400E0E0 C   FIELD 00w32 TIE: TIE
0x4400E0E4 B  REGISTER FDCAN_TXBCIE (rw): FDCAN Tx buffer cancellation finished interrupt enable register
0x4400E0E4 C   FIELD 00w32 CFIE: CFIE
0x4400E0F0 B  REGISTER FDCAN_TXEFC (rw): FDCAN Tx event FIFO configuration register
0x4400E0F0 C   FIELD 02w14 EFSA: EFSA
0x4400E0F0 C   FIELD 16w06 EFS: EFS
0x4400E0F0 C   FIELD 24w06 EFWM: EFWM
0x4400E0F4 B  REGISTER FDCAN_TXEFS (ro): FDCAN Tx event FIFO status register
0x4400E0F4 C   FIELD 00w06 EFFL: EFFL
0x4400E0F4 C   FIELD 08w05 EFGI: EFGI
0x4400E0F4 C   FIELD 16w05 EFPI: EFPI
0x4400E0F4 C   FIELD 24w01 EFF: EFF
0x4400E0F4 C   FIELD 25w01 TEFL: TEFL
0x4400E0F8 B  REGISTER FDCAN_TXEFA (rw): FDCAN Tx event FIFO acknowledge register
0x4400E0F8 C   FIELD 00w05 EFAI: EFAI
0x4400E100 B  REGISTER FDCAN_TTTMC (rw): FDCAN TT trigger memory configuration register
0x4400E100 C   FIELD 02w14 TMSA: TMSA
0x4400E100 C   FIELD 16w07 TME: TME
0x4400E104 B  REGISTER FDCAN_TTRMC (rw): FDCAN TT reference message configuration register
0x4400E104 C   FIELD 00w29 RID: RID
0x4400E104 C   FIELD 30w01 XTD: XTD
0x4400E104 C   FIELD 31w01 RMPS: RMPS
0x4400E108 B  REGISTER FDCAN_TTOCF (rw): FDCAN TT operation configuration register
0x4400E108 C   FIELD 00w02 OM: OM
0x4400E108 C   FIELD 03w01 GEN: GEN
0x4400E108 C   FIELD 04w01 TM: TM
0x4400E108 C   FIELD 05w03 LDSDL: LDSDL
0x4400E108 C   FIELD 08w07 IRTO: IRTO
0x4400E108 C   FIELD 15w01 EECS: EECS
0x4400E108 C   FIELD 16w08 AWL: AWL
0x4400E108 C   FIELD 24w01 EGTF: EGTF
0x4400E108 C   FIELD 25w01 ECC: ECC
0x4400E108 C   FIELD 26w01 EVTP: EVTP
0x4400E10C B  REGISTER FDCAN_TTMLM (rw): FDCAN TT matrix limits register
0x4400E10C C   FIELD 00w06 CCM: CCM
0x4400E10C C   FIELD 06w02 CSS: CSS
0x4400E10C C   FIELD 08w04 TXEW: TXEW
0x4400E10C C   FIELD 16w12 ENTT: ENTT
0x4400E110 B  REGISTER FDCAN_TURCF (rw): The length of the NTU is given by: NTU = CAN clock period x NC/DC. NC is an 18-bit value. Its high part, NCH[17:16] is hard wired to 0b01. Therefore the range of NC extends from 0x10000 to 0x1FFFF. The value configured by NCL is the initial value for FDCAN_TURNA.NAV[15:0]. DC is set to 0x1000 by hardware reset and it may not be written to 0x0000. Level 1: NC 4 * DC and NTU = CAN bit time Levels 0 and 2: NC 8 * DC The actual value of FDCAN_TUR may be changed by the clock drift compensation function of TTCAN level 0 and level 2 in order to adjust the node local view of the NTU to the time master view of the NTU. DC will not be changed by the automatic drift compensation, FDCAN_TURNA.NAV may be adjusted around NC in the range of the synchronization deviation limit given by FDCAN_TTOCF.LDSDL. NC and DC should be programmed to the largest suitable values in achieve the best computational accuracy for the drift compensation process.
0x4400E110 C   FIELD 00w16 NCL: NCL
0x4400E110 C   FIELD 16w14 DC: DC
0x4400E110 C   FIELD 31w01 ELT: ELT
0x4400E114 B  REGISTER FDCAN_TTOCN: FDCAN TT operation control register
0x4400E114 C   FIELD 00w01 SGT (rw): SGT
0x4400E114 C   FIELD 01w01 ECS (rw): ECS
0x4400E114 C   FIELD 02w01 SWP (rw): SWP
0x4400E114 C   FIELD 03w02 SWS (rw): SWS
0x4400E114 C   FIELD 05w01 RTIE (rw): RTIE
0x4400E114 C   FIELD 06w02 TMC (rw): TMC
0x4400E114 C   FIELD 08w01 TTIE (rw): TTIE
0x4400E114 C   FIELD 09w01 GCS (rw): GCS
0x4400E114 C   FIELD 10w01 FGP (rw): FGP
0x4400E114 C   FIELD 11w01 TMG (rw): TMG
0x4400E114 C   FIELD 12w01 NIG (rw): NIG
0x4400E114 C   FIELD 13w01 ESCN (rw): ESCN
0x4400E114 C   FIELD 15w01 LCKC (ro): LCKC
0x4400E118 B  REGISTER FDCAN_TTGTP (rw): If TTOST.WGDT is set, the next reference message will be transmitted with the Master_Ref_Mark modified by the preset value and with Disc_Bit = 1, presetting the global time in all nodes simultaneously. TP is reset to 0x0000 each time a reference message with Disc_Bit = 1 becomes valid or if the node is not the current time master. TP is locked while FDCAN_TTOST.WGTD = 1 after setting FDCAN_TTOCN.SGT until the reference message with Disc_Bit = 1 becomes valid or until the node is no longer the current time master.
0x4400E118 C   FIELD 00w16 TP: TP
0x4400E118 C   FIELD 16w16 CTP: CTP
0x4400E11C B  REGISTER FDCAN_TTTMK: A time mark interrupt (FDCAN_TTIR.TMI = 1) is generated when the time base indicated by FDCAN_TTOCN.TMC (cycle time, local time, or global time) has the same value as TM.
0x4400E11C C   FIELD 00w16 TM (rw): TM
0x4400E11C C   FIELD 16w07 TICC (rw): TICC
0x4400E11C C   FIELD 31w01 LCKM (ro): LCKM
0x4400E120 B  REGISTER FDCAN_TTIR (rw): The flags are set when one of the listed conditions is detected (edge-sensitive). The flags remain set until the Host clears them. A flag is cleared by writing a 1 to the corresponding bit position. Writing a 0 has no effect. A hard reset will clear the register.
0x4400E120 C   FIELD 00w01 SBC: SBC
0x4400E120 C   FIELD 01w01 SMC: SMC
0x4400E120 C   FIELD 02w01 CSM: CSM
0x4400E120 C   FIELD 03w01 SOG: SOG
0x4400E120 C   FIELD 04w01 RTMI: RTMI
0x4400E120 C   FIELD 05w01 TTMI: TTMI
0x4400E120 C   FIELD 06w01 SWE: SWE
0x4400E120 C   FIELD 07w01 GTW: GTW
0x4400E120 C   FIELD 08w01 GTD: GTD
0x4400E120 C   FIELD 09w01 GTE: GTE
0x4400E120 C   FIELD 10w01 TXU: TXU
0x4400E120 C   FIELD 11w01 TXO: TXO
0x4400E120 C   FIELD 12w01 SE1: SE1
0x4400E120 C   FIELD 13w01 SE2: SE2
0x4400E120 C   FIELD 14w01 ELC: ELC
0x4400E120 C   FIELD 15w01 IWTG: IWTG
0x4400E120 C   FIELD 16w01 WT: WT
0x4400E120 C   FIELD 17w01 AW: AW
0x4400E120 C   FIELD 18w01 CER: CER
0x4400E124 B  REGISTER FDCAN_TTIE (rw): The settings in the TT interrupt enable register determine which status changes in the TT interrupt register will result in an interrupt.
0x4400E124 C   FIELD 00w01 SBCE: SBCE
0x4400E124 C   FIELD 01w01 SMCE: SMCE
0x4400E124 C   FIELD 02w01 CSME: CSME
0x4400E124 C   FIELD 03w01 SOGE: SOGE
0x4400E124 C   FIELD 04w01 RTMIE: RTMIE
0x4400E124 C   FIELD 05w01 TTMIE: TTMIE
0x4400E124 C   FIELD 06w01 SWEE: SWEE
0x4400E124 C   FIELD 07w01 GTWE: GTWE
0x4400E124 C   FIELD 08w01 GTDE: GTDE
0x4400E124 C   FIELD 09w01 GTEE: GTEE
0x4400E124 C   FIELD 10w01 TXUE: TXUE
0x4400E124 C   FIELD 11w01 TXOE: TXOE
0x4400E124 C   FIELD 12w01 SE1E: SE1E
0x4400E124 C   FIELD 13w01 SE2E: SE2E
0x4400E124 C   FIELD 14w01 ELCE: ELCE
0x4400E124 C   FIELD 15w01 IWTE: IWTE
0x4400E124 C   FIELD 16w01 WTE: WTE
0x4400E124 C   FIELD 17w01 AWE: AWE
0x4400E124 C   FIELD 18w01 CERE: CERE
0x4400E128 B  REGISTER FDCAN_TTILS (rw): The TT interrupt Line select register assigns an interrupt generated by a specific interrupt flag from the TT interrupt register to one of the two module interrupt lines. For interrupt generation the respective interrupt line has to be enabled via FDCAN_ILE.EINT0 and FDCAN_ILE.EINT1.
0x4400E128 C   FIELD 00w01 SBCL: SBCL
0x4400E128 C   FIELD 01w01 SMCL: SMCL
0x4400E128 C   FIELD 02w01 CSML: CSML
0x4400E128 C   FIELD 03w01 SOGL: SOGL
0x4400E128 C   FIELD 04w01 RTMIL: RTMIL
0x4400E128 C   FIELD 05w01 TTMIL: TTMIL
0x4400E128 C   FIELD 06w01 SWEL: SWEL
0x4400E128 C   FIELD 07w01 GTWL: GTWL
0x4400E128 C   FIELD 08w01 GTDL: GTDL
0x4400E128 C   FIELD 09w01 GTEL: GTEL
0x4400E128 C   FIELD 10w01 TXUL: TXUL
0x4400E128 C   FIELD 11w01 TXOL: TXOL
0x4400E128 C   FIELD 12w01 SE1L: SE1L
0x4400E128 C   FIELD 13w01 SE2L: SE2L
0x4400E128 C   FIELD 14w01 ELCL: ELCL
0x4400E128 C   FIELD 15w01 IWTL: IWTL
0x4400E128 C   FIELD 16w01 WTL: WTL
0x4400E128 C   FIELD 17w01 AWL: AWL
0x4400E128 C   FIELD 18w01 CERL: CERL
0x4400E12C B  REGISTER FDCAN_TTOST (ro): FDCAN TT operation status register
0x4400E12C C   FIELD 00w02 EL: EL
0x4400E12C C   FIELD 02w02 MS: MS
0x4400E12C C   FIELD 04w02 SYS: SYS
0x4400E12C C   FIELD 06w01 QGTP: QGTP
0x4400E12C C   FIELD 07w01 QCS: QCS
0x4400E12C C   FIELD 08w08 RTO: RTO
0x4400E12C C   FIELD 22w01 WGTD: WGTD
0x4400E12C C   FIELD 23w01 GFI: GFI
0x4400E12C C   FIELD 24w03 TMP: TMP
0x4400E12C C   FIELD 27w01 GSI: GSI
0x4400E12C C   FIELD 28w01 WFE: WFE
0x4400E12C C   FIELD 29w01 AWE: AWE
0x4400E12C C   FIELD 30w01 WECS: WECS
0x4400E12C C   FIELD 31w01 SPL: SPL
0x4400E130 B  REGISTER FDCAN_TURNA (ro): There is no drift compensation in TTCAN level 1.
0x4400E130 C   FIELD 00w18 NAV: NAV
0x4400E134 B  REGISTER FDCAN_TTLGT (ro): FDCAN TT local and global time register
0x4400E134 C   FIELD 00w16 LT: LT
0x4400E134 C   FIELD 16w16 GT: GT
0x4400E138 B  REGISTER FDCAN_TTCTC (ro): FDCAN TT cycle time and count register
0x4400E138 C   FIELD 00w16 CT: CT
0x4400E138 C   FIELD 16w06 CC: CC
0x4400E13C B  REGISTER FDCAN_TTCPT (ro): FDCAN TT capture time register
0x4400E13C C   FIELD 00w06 CCV: CCV
0x4400E13C C   FIELD 16w16 SWV: SWV
0x4400E140 B  REGISTER FDCAN_TTCSM (ro): FDCAN TT cycle sync mark register
0x4400E140 C   FIELD 00w16 CSM: CSM
0x4400E300 B  REGISTER FDCAN_TTTS (rw): The settings in the FDCAN_TTTS register select the input to be used as event trigger and stop watch trigger.
0x4400E300 C   FIELD 00w02 SWTDEL: SWTDEL
0x4400E300 C   FIELD 04w02 EVTSEL: EVTSEL
0x4400F000 A PERIPHERAL FDCAN2
0x4400F000 B  REGISTER FDCAN_CREL (ro): FDCAN core release register
0x4400F000 C   FIELD 00w08 DAY: DAY
0x4400F000 C   FIELD 08w08 MON: MON
0x4400F000 C   FIELD 16w04 YEAR: YEAR
0x4400F000 C   FIELD 20w04 SUBSTEP: SUBSTEP
0x4400F000 C   FIELD 24w04 STEP: STEP
0x4400F000 C   FIELD 28w04 REL: REL
0x4400F004 B  REGISTER FDCAN_ENDN (ro): FDCAN Endian register
0x4400F004 C   FIELD 00w32 ETV: ETV
0x4400F00C B  REGISTER FDCAN_DBTP (rw): This register is dedicated to data bit timing phase and only writable if bits FDCAN_CCCR.CCE and FDCAN_CCCR.INIT are set. The CAN time quantum may be programmed in the range from 1 to 32 FDCAN clock periods. tq = (DBRP + 1) FDCAN clock periods. DTSEG1 is the sum of Prop_Seg and Phase_Seg1. DTSEG2 is Phase_Seg2. Therefore the length of the bit time is (DTSEG1 + DTSEG2 + 3) tq for programmed values, or (Sync_Seg+Prop_Seg+Phase_Seg1+Phase_Seg2) tq for functional values. The information processing time (IPT) is zero, meaning the data for the next bit is available at the first clock edge after the sample point.
0x4400F00C C   FIELD 00w04 DSJW: DSJW
0x4400F00C C   FIELD 04w04 DTSEG2: DTSEG2
0x4400F00C C   FIELD 08w05 DTSEG1: DTSEG1
0x4400F00C C   FIELD 16w05 DBRP: DBRP
0x4400F00C C   FIELD 23w01 TDC: TDC
0x4400F010 B  REGISTER FDCAN_TEST: Write access to this register has to be enabled by setting bit FDCAN_CCCR.TEST to 1. All register functions are set to their reset values when bit FDCAN_CCCR.TEST is reset. Loop back mode and software control of Tx pin FDCANx_TX are hardware test modes. Programming TX differently from 00 may disturb the message transfer on the CAN bus.
0x4400F010 C   FIELD 04w01 LBCK (rw): LBCK
0x4400F010 C   FIELD 05w02 TX (rw): TX
0x4400F010 C   FIELD 07w01 RX (ro): RX
0x4400F014 B  REGISTER FDCAN_RWD: The RAM watchdog monitors the READY output of the message RAM. A message RAM access starts the message RAM watchdog counter with the value configured by the FDCAN_RWD.WDC bits. The counter is reloaded with FDCAN_RWD.WDC bits when the message RAM signals successful completion by activating its READY output. In case there is no response from the message RAM until the counter has counted down to 0, the counter stops and interrupt flag FDCAN_IR.WDI bit is set. The RAM watchdog counter is clocked by the fdcan_pclk clock.
0x4400F014 C   FIELD 00w08 WDC (rw): WDC
0x4400F014 C   FIELD 08w08 WDV (ro): WDV
0x4400F018 B  REGISTER FDCAN_CCCR: For details about setting and resetting of single bits see Software initialization.
0x4400F018 C   FIELD 00w01 INIT (rw): INIT
0x4400F018 C   FIELD 01w01 CCE (rw): CCE
0x4400F018 C   FIELD 02w01 ASM (rw): ASM
0x4400F018 C   FIELD 03w01 CSA (ro): CSA
0x4400F018 C   FIELD 04w01 CSR (rw): CSR
0x4400F018 C   FIELD 05w01 MON (rw): MON
0x4400F018 C   FIELD 06w01 DAR (rw): DAR
0x4400F018 C   FIELD 07w01 TEST (rw): TEST
0x4400F018 C   FIELD 08w01 FDOE (rw): FDOE
0x4400F018 C   FIELD 09w01 BRSE (rw): BRSE
0x4400F018 C   FIELD 12w01 PXHD (rw): PXHD
0x4400F018 C   FIELD 13w01 EFBI (rw): EFBI
0x4400F018 C   FIELD 14w01 TXP (rw): TXP
0x4400F018 C   FIELD 15w01 NISO (rw): NISO
0x4400F01C B  REGISTER FDCAN_NBTP (rw): This register is dedicated to the nominal bit timing used during the arbitration phase.
0x4400F01C C   FIELD 00w07 NTSEG2: NTSEG2
0x4400F01C C   FIELD 08w08 NTSEG1: NTSEG1
0x4400F01C C   FIELD 16w09 NBRP: NBRP
0x4400F01C C   FIELD 25w07 NSJW: NSJW
0x4400F020 B  REGISTER FDCAN_TSCC (rw): FDCAN timestamp counter configuration register
0x4400F020 C   FIELD 00w02 TSS: TSS
0x4400F020 C   FIELD 16w04 TCP: TCP
0x4400F024 B  REGISTER FDCAN_TSCV (rw): FDCAN timestamp counter value register
0x4400F024 C   FIELD 00w16 TSC: TSC
0x4400F028 B  REGISTER FDCAN_TOCC (rw): FDCAN timeout counter configuration register
0x4400F028 C   FIELD 00w01 ETOC: ETOC
0x4400F028 C   FIELD 01w02 TOS: TOS
0x4400F028 C   FIELD 16w16 TOP: TOP
0x4400F02C B  REGISTER FDCAN_TOCV (rw): FDCAN timeout counter value register
0x4400F02C C   FIELD 00w16 TOC: TOC
0x4400F040 B  REGISTER FDCAN_ECR: FDCAN error counter register
0x4400F040 C   FIELD 00w08 TEC (ro): TEC
0x4400F040 C   FIELD 08w07 TREC (ro): TREC
0x4400F040 C   FIELD 15w01 RP (ro): RP
0x4400F040 C   FIELD 16w08 CEL (rw): CEL
0x4400F044 B  REGISTER FDCAN_PSR: FDCAN protocol status register
0x4400F044 C   FIELD 00w03 LEC (ro): LEC
0x4400F044 C   FIELD 03w02 ACT (ro): ACT
0x4400F044 C   FIELD 05w01 EP (ro): EP
0x4400F044 C   FIELD 06w01 EW (ro): EW
0x4400F044 C   FIELD 07w01 BO (ro): BO
0x4400F044 C   FIELD 08w03 DLEC (ro): DLEC
0x4400F044 C   FIELD 11w01 RESI (rw): RESI
0x4400F044 C   FIELD 12w01 RBRS (rw): RBRS
0x4400F044 C   FIELD 13w01 REDL (rw): REDL
0x4400F044 C   FIELD 14w01 PXE (rw): PXE
0x4400F044 C   FIELD 16w07 TDCV (ro): TDCV
0x4400F048 B  REGISTER FDCAN_TDCR (rw): FDCAN transmitter delay compensation register
0x4400F048 C   FIELD 00w07 TDCF: TDCF
0x4400F048 C   FIELD 08w07 TDCO: TDCO
0x4400F050 B  REGISTER FDCAN_IR (rw): The flags are set when one of the listed conditions is detected (edge-sensitive). The flags remain set until the Host clears them. A flag is cleared by writing a 1 to the corresponding bit position. Writing a 0 has no effect. A hard reset will clear the register. The configuration of IE controls whether an interrupt is generated. The configuration of ILS controls on which interrupt line an interrupt is signaled.
0x4400F050 C   FIELD 00w01 RF0N: RF0N
0x4400F050 C   FIELD 01w01 RF0W: RF0W
0x4400F050 C   FIELD 02w01 RF0F: RF0F
0x4400F050 C   FIELD 03w01 RF0L: RF0L
0x4400F050 C   FIELD 04w01 RF1N: RF1N
0x4400F050 C   FIELD 05w01 RF1W: RF1W
0x4400F050 C   FIELD 06w01 RF1F: RF1F
0x4400F050 C   FIELD 07w01 RF1L: RF1L
0x4400F050 C   FIELD 08w01 HPM: HPM
0x4400F050 C   FIELD 09w01 TC: TC
0x4400F050 C   FIELD 10w01 TCF: TCF
0x4400F050 C   FIELD 11w01 TFE: TFE
0x4400F050 C   FIELD 12w01 TEFN: TEFN
0x4400F050 C   FIELD 13w01 TEFW: TEFW
0x4400F050 C   FIELD 14w01 TEFF: TEFF
0x4400F050 C   FIELD 15w01 TEFL: TEFL
0x4400F050 C   FIELD 16w01 TSW: TSW
0x4400F050 C   FIELD 17w01 MRAF: MRAF
0x4400F050 C   FIELD 18w01 TOO: TOO
0x4400F050 C   FIELD 19w01 DRX: DRX
0x4400F050 C   FIELD 22w01 ELO: ELO
0x4400F050 C   FIELD 23w01 EP: EP
0x4400F050 C   FIELD 24w01 EW: EW
0x4400F050 C   FIELD 25w01 BO: BO
0x4400F050 C   FIELD 26w01 WDI: WDI
0x4400F050 C   FIELD 27w01 PEA: PEA
0x4400F050 C   FIELD 28w01 PED: PED
0x4400F050 C   FIELD 29w01 ARA: ARA
0x4400F054 B  REGISTER FDCAN_IE (rw): The settings in the interrupt enable register determine which status changes in the interrupt register will be signaled on an interrupt line.
0x4400F054 C   FIELD 00w01 RF0NE: RF0NE
0x4400F054 C   FIELD 01w01 RF0WE: RF0WE
0x4400F054 C   FIELD 02w01 RF0FE: RF0FE
0x4400F054 C   FIELD 03w01 RF0LE: RF0LE
0x4400F054 C   FIELD 04w01 RF1NE: RF1NE
0x4400F054 C   FIELD 05w01 RF1WE: RF1WE
0x4400F054 C   FIELD 06w01 RF1FE: RF1FE
0x4400F054 C   FIELD 07w01 RF1LE: RF1LE
0x4400F054 C   FIELD 08w01 HPME: HPME
0x4400F054 C   FIELD 09w01 TCE: TCE
0x4400F054 C   FIELD 10w01 TCFE: TCFE
0x4400F054 C   FIELD 11w01 TFEE: TFEE
0x4400F054 C   FIELD 12w01 TEFNE: TEFNE
0x4400F054 C   FIELD 13w01 TEFWE: TEFWE
0x4400F054 C   FIELD 14w01 TEFFE: TEFFE
0x4400F054 C   FIELD 15w01 TEFLE: TEFLE
0x4400F054 C   FIELD 16w01 TSWE: TSWE
0x4400F054 C   FIELD 17w01 MRAFE: MRAFE
0x4400F054 C   FIELD 18w01 TOOE: TOOE
0x4400F054 C   FIELD 19w01 DRXE: DRXE
0x4400F054 C   FIELD 20w01 BECE: BECE
0x4400F054 C   FIELD 21w01 BEUE: BEUE
0x4400F054 C   FIELD 22w01 ELOE: ELOE
0x4400F054 C   FIELD 23w01 EPE: EPE
0x4400F054 C   FIELD 24w01 EWE: EWE
0x4400F054 C   FIELD 25w01 BOE: BOE
0x4400F054 C   FIELD 26w01 WDIE: WDIE
0x4400F054 C   FIELD 27w01 PEAE: PEAE
0x4400F054 C   FIELD 28w01 PEDE: PEDE
0x4400F054 C   FIELD 29w01 ARAE: ARAE
0x4400F058 B  REGISTER FDCAN_ILS (rw): This register assigns an interrupt generated by a specific interrupt flag from the interrupt register to one of the two module interrupt lines. For interrupt generation the respective interrupt line has to be enabled via FDCAN_ILE.EINT0 and FDCAN_ILE.EINT1.
0x4400F058 C   FIELD 00w01 RF0NL: RF0NL
0x4400F058 C   FIELD 01w01 RF0WL: RF0WL
0x4400F058 C   FIELD 02w01 RF0FL: RF0FL
0x4400F058 C   FIELD 03w01 RF0LL: RF0LL
0x4400F058 C   FIELD 04w01 RF1NL: RF1NL
0x4400F058 C   FIELD 05w01 RF1WL: RF1WL
0x4400F058 C   FIELD 06w01 RF1FL: RF1FL
0x4400F058 C   FIELD 07w01 RF1LL: RF1LL
0x4400F058 C   FIELD 08w01 HPML: HPML
0x4400F058 C   FIELD 09w01 TCL: TCL
0x4400F058 C   FIELD 10w01 TCFL: TCFL
0x4400F058 C   FIELD 11w01 TFEL: TFEL
0x4400F058 C   FIELD 12w01 TEFNL: TEFNL
0x4400F058 C   FIELD 13w01 TEFWL: TEFWL
0x4400F058 C   FIELD 14w01 TEFFL: TEFFL
0x4400F058 C   FIELD 15w01 TEFLL: TEFLL
0x4400F058 C   FIELD 16w01 TSWL: TSWL
0x4400F058 C   FIELD 17w01 MRAFL: MRAFL
0x4400F058 C   FIELD 18w01 TOOL: TOOL
0x4400F058 C   FIELD 19w01 DRXL: DRXL
0x4400F058 C   FIELD 20w01 BECL: BECL
0x4400F058 C   FIELD 21w01 BEUL: BEUL
0x4400F058 C   FIELD 22w01 ELOL: ELOL
0x4400F058 C   FIELD 23w01 EPL: EPL
0x4400F058 C   FIELD 24w01 EWL: EWL
0x4400F058 C   FIELD 25w01 BOL: BOL
0x4400F058 C   FIELD 26w01 WDIL: WDIL
0x4400F058 C   FIELD 27w01 PEAL: PEAL
0x4400F058 C   FIELD 28w01 PEDL: PEDL
0x4400F058 C   FIELD 29w01 ARAL: ARAL
0x4400F05C B  REGISTER FDCAN_ILE (rw): Each of the two interrupt lines to the CPU can be enabled/disabled separately by programming bits EINT0 and EINT1.
0x4400F05C C   FIELD 00w01 EINT0: EINT0
0x4400F05C C   FIELD 01w01 EINT1: EINT1
0x4400F080 B  REGISTER FDCAN_GFC (rw): Global settings for message ID filtering. The global filter configuration register controls the filter path for standard and extended messages as described in Figure708: Standard message ID filter path and Figure709: Extended message ID filter path.
0x4400F080 C   FIELD 00w01 RRFE: RRFE
0x4400F080 C   FIELD 01w01 RRFS: RRFS
0x4400F080 C   FIELD 02w02 ANFE: ANFE
0x4400F080 C   FIELD 04w02 ANFS: ANFS
0x4400F084 B  REGISTER FDCAN_SIDFC (rw): Settings for 11-bit standard message ID filtering.The standard ID filter configuration register controls the filter path for standard messages as described in Figure708.
0x4400F084 C   FIELD 02w14 FLSSA: FLSSA
0x4400F084 C   FIELD 16w08 LSS: LSS
0x4400F088 B  REGISTER FDCAN_XIDFC (rw): Settings for 29-bit extended message ID filtering. The FDCAN extended ID filter configuration register controls the filter path for standard messages as described in Figure709: Extended message ID filter path.
0x4400F088 C   FIELD 02w14 FLESA: FLESA
0x4400F088 C   FIELD 16w08 LSE: LSE
0x4400F090 B  REGISTER FDCAN_XIDAM (rw): FDCAN extended ID and mask register
0x4400F090 C   FIELD 00w29 EIDM: EIDM
0x4400F094 B  REGISTER FDCAN_HPMS (ro): This register is updated every time a message ID filter element configured to generate a priority event match. This can be used to monitor the status of incoming high priority messages and to enable fast access to these messages.
0x4400F094 C   FIELD 00w06 BIDX: BIDX
0x4400F094 C   FIELD 06w02 MSI: MSI
0x4400F094 C   FIELD 08w07 FIDX: FIDX
0x4400F094 C   FIELD 15w01 FLST: FLST
0x4400F098 B  REGISTER FDCAN_NDAT1 (rw): FDCAN new data 1 register
0x4400F098 C   FIELD 00w01 ND0: ND0
0x4400F098 C   FIELD 01w01 ND1: ND1
0x4400F098 C   FIELD 02w01 ND2: ND2
0x4400F098 C   FIELD 03w01 ND3: ND3
0x4400F098 C   FIELD 04w01 ND4: ND4
0x4400F098 C   FIELD 05w01 ND5: ND5
0x4400F098 C   FIELD 06w01 ND6: ND6
0x4400F098 C   FIELD 07w01 ND7: ND7
0x4400F098 C   FIELD 08w01 ND8: ND8
0x4400F098 C   FIELD 09w01 ND9: ND9
0x4400F098 C   FIELD 10w01 ND10: ND10
0x4400F098 C   FIELD 11w01 ND11: ND11
0x4400F098 C   FIELD 12w01 ND12: ND12
0x4400F098 C   FIELD 13w01 ND13: ND13
0x4400F098 C   FIELD 14w01 ND14: ND14
0x4400F098 C   FIELD 15w01 ND15: ND15
0x4400F098 C   FIELD 16w01 ND16: ND16
0x4400F098 C   FIELD 17w01 ND17: ND17
0x4400F098 C   FIELD 18w01 ND18: ND18
0x4400F098 C   FIELD 19w01 ND19: ND19
0x4400F098 C   FIELD 20w01 ND20: ND20
0x4400F098 C   FIELD 21w01 ND21: ND21
0x4400F098 C   FIELD 22w01 ND22: ND22
0x4400F098 C   FIELD 23w01 ND23: ND23
0x4400F098 C   FIELD 24w01 ND24: ND24
0x4400F098 C   FIELD 25w01 ND25: ND25
0x4400F098 C   FIELD 26w01 ND26: ND26
0x4400F098 C   FIELD 27w01 ND27: ND27
0x4400F098 C   FIELD 28w01 ND28: ND28
0x4400F098 C   FIELD 29w01 ND29: ND29
0x4400F098 C   FIELD 30w01 ND30: ND30
0x4400F098 C   FIELD 31w01 ND31: ND31
0x4400F09C B  REGISTER FDCAN_NDAT2 (rw): FDCAN new data 2 register
0x4400F09C C   FIELD 00w01 ND32: ND32
0x4400F09C C   FIELD 01w01 ND33: ND33
0x4400F09C C   FIELD 02w01 ND34: ND34
0x4400F09C C   FIELD 03w01 ND35: ND35
0x4400F09C C   FIELD 04w01 ND36: ND36
0x4400F09C C   FIELD 05w01 ND37: ND37
0x4400F09C C   FIELD 06w01 ND38: ND38
0x4400F09C C   FIELD 07w01 ND39: ND39
0x4400F09C C   FIELD 08w01 ND40: ND40
0x4400F09C C   FIELD 09w01 ND41: ND41
0x4400F09C C   FIELD 10w01 ND42: ND42
0x4400F09C C   FIELD 11w01 ND43: ND43
0x4400F09C C   FIELD 12w01 ND44: ND44
0x4400F09C C   FIELD 13w01 ND45: ND45
0x4400F09C C   FIELD 14w01 ND46: ND46
0x4400F09C C   FIELD 15w01 ND47: ND47
0x4400F09C C   FIELD 16w01 ND48: ND48
0x4400F09C C   FIELD 17w01 ND49: ND49
0x4400F09C C   FIELD 18w01 ND50: ND50
0x4400F09C C   FIELD 19w01 ND51: ND51
0x4400F09C C   FIELD 20w01 ND52: ND52
0x4400F09C C   FIELD 21w01 ND53: ND53
0x4400F09C C   FIELD 22w01 ND54: ND54
0x4400F09C C   FIELD 23w01 ND55: ND55
0x4400F09C C   FIELD 24w01 ND56: ND56
0x4400F09C C   FIELD 25w01 ND57: ND57
0x4400F09C C   FIELD 26w01 ND58: ND58
0x4400F09C C   FIELD 27w01 ND59: ND59
0x4400F09C C   FIELD 28w01 ND60: ND60
0x4400F09C C   FIELD 29w01 ND61: ND61
0x4400F09C C   FIELD 30w01 ND62: ND62
0x4400F09C C   FIELD 31w01 ND63: ND63
0x4400F0A0 B  REGISTER FDCAN_RXF0C (rw): FDCAN Rx FIFO 0 configuration register
0x4400F0A0 C   FIELD 02w14 F0SA: F0SA
0x4400F0A0 C   FIELD 16w07 F0S: F0S
0x4400F0A0 C   FIELD 24w07 F0WM: F0WM
0x4400F0A0 C   FIELD 31w01 F0OM: F0OM
0x4400F0A4 B  REGISTER FDCAN_RXF0S (rw): FDCAN Rx FIFO 0 status register
0x4400F0A4 C   FIELD 00w07 F0FL: F0FL
0x4400F0A4 C   FIELD 08w06 F0GI: F0GI
0x4400F0A4 C   FIELD 16w06 F0PI: F0PI
0x4400F0A4 C   FIELD 24w01 F0F: F0F
0x4400F0A4 C   FIELD 25w01 RF0L: RF0L
0x4400F0A8 B  REGISTER FDCAN_RXF0A (rw): FDCAN Rx FIFO 0 acknowledge register
0x4400F0A8 C   FIELD 00w06 F0AI: F0AI
0x4400F0AC B  REGISTER FDCAN_RXBC (rw): FDCAN Rx buffer configuration register
0x4400F0AC C   FIELD 02w14 RBSA: RBSA
0x4400F0B0 B  REGISTER FDCAN_RXF1C (rw): FDCAN Rx FIFO 1 configuration register
0x4400F0B0 C   FIELD 02w14 F1SA: F1SA
0x4400F0B0 C   FIELD 16w07 F1S: F1S
0x4400F0B0 C   FIELD 24w07 F1WM: F1WM
0x4400F0B0 C   FIELD 31w01 F1OM: F1OM
0x4400F0B4 B  REGISTER FDCAN_RXF1S (ro): FDCAN Rx FIFO 1 status register
0x4400F0B4 C   FIELD 00w07 F1FL: F1FL
0x4400F0B4 C   FIELD 08w06 F1GI: F1GI
0x4400F0B4 C   FIELD 16w06 F1PI: F1PI
0x4400F0B4 C   FIELD 24w01 F1F: F1F
0x4400F0B4 C   FIELD 25w01 RF1L: RF1L
0x4400F0B4 C   FIELD 30w02 DMS: DMS
0x4400F0B8 B  REGISTER FDCAN_RXF1A (rw): FDCAN Rx FIFO 1 acknowledge register
0x4400F0B8 C   FIELD 00w06 F1AI: F1AI
0x4400F0BC B  REGISTER FDCAN_RXESC (ro): Configures the number of data bytes belonging to an Rx buffer / Rx FIFO element. Data field sizes higher than 8 bytes are intended for CAN FD operation only.
0x4400F0BC C   FIELD 00w03 F0DS: F0DS
0x4400F0BC C   FIELD 04w03 F1DS: F1DS
0x4400F0BC C   FIELD 08w03 RBDS: RBDS
0x4400F0C0 B  REGISTER FDCAN_TXBC (rw): FDCAN Tx buffer configuration register
0x4400F0C0 C   FIELD 02w14 TBSA: TBSA
0x4400F0C0 C   FIELD 16w06 NDTB: NDTB
0x4400F0C0 C   FIELD 24w06 TFQS: TFQS
0x4400F0C0 C   FIELD 30w01 TFQM: TFQM
0x4400F0C4 B  REGISTER FDCAN_TXFQS (ro): The Tx FIFO/queue status is related to the pending Tx requests listed in register FDCAN_TXBRP. Therefore the effect of add/cancellation requests may be delayed due to a running Tx scan (FDCAN_TXBRP not yet updated).
0x4400F0C4 C   FIELD 00w06 TFFL: TFFL
0x4400F0C4 C   FIELD 08w05 TFGI: TFGI
0x4400F0C4 C   FIELD 16w05 TFQPI: TFQPI
0x4400F0C4 C   FIELD 21w01 TFQF: TFQF
0x4400F0C8 B  REGISTER FDCAN_TXESC (ro): Configures the number of data bytes belonging to a Tx buffer element. Data field sizes &gt;8 bytes are intended for CAN FD operation only.
0x4400F0C8 C   FIELD 00w03 TBDS: TBDS
0x4400F0D0 B  REGISTER FDCAN_TXBAR (rw): FDCAN Tx buffer add request register
0x4400F0D0 C   FIELD 00w32 AR: AR
0x4400F0D4 B  REGISTER FDCAN_TXBCR (rw): FDCAN Tx buffer cancellation request register
0x4400F0D4 C   FIELD 00w32 CR: CR
0x4400F0D8 B  REGISTER FDCAN_TXBTO (ro): FDCAN Tx buffer transmission occurred register
0x4400F0D8 C   FIELD 00w32 TO: TO
0x4400F0DC B  REGISTER FDCAN_TXBCF (ro): FDCAN Tx buffer cancellation finished register
0x4400F0DC C   FIELD 00w32 CF: CF
0x4400F0E0 B  REGISTER FDCAN_TXBTIE (rw): FDCAN Tx buffer transmission interrupt enable register
0x4400F0E0 C   FIELD 00w32 TIE: TIE
0x4400F0E4 B  REGISTER FDCAN_TXBCIE (rw): FDCAN Tx buffer cancellation finished interrupt enable register
0x4400F0E4 C   FIELD 00w32 CFIE: CFIE
0x4400F0F0 B  REGISTER FDCAN_TXEFC (rw): FDCAN Tx event FIFO configuration register
0x4400F0F0 C   FIELD 02w14 EFSA: EFSA
0x4400F0F0 C   FIELD 16w06 EFS: EFS
0x4400F0F0 C   FIELD 24w06 EFWM: EFWM
0x4400F0F4 B  REGISTER FDCAN_TXEFS (ro): FDCAN Tx event FIFO status register
0x4400F0F4 C   FIELD 00w06 EFFL: EFFL
0x4400F0F4 C   FIELD 08w05 EFGI: EFGI
0x4400F0F4 C   FIELD 16w05 EFPI: EFPI
0x4400F0F4 C   FIELD 24w01 EFF: EFF
0x4400F0F4 C   FIELD 25w01 TEFL: TEFL
0x4400F0F8 B  REGISTER FDCAN_TXEFA (rw): FDCAN Tx event FIFO acknowledge register
0x4400F0F8 C   FIELD 00w05 EFAI: EFAI
0x4400F100 B  REGISTER FDCAN_TTTMC (rw): FDCAN TT trigger memory configuration register
0x4400F100 C   FIELD 02w14 TMSA: TMSA
0x4400F100 C   FIELD 16w07 TME: TME
0x4400F104 B  REGISTER FDCAN_TTRMC (rw): FDCAN TT reference message configuration register
0x4400F104 C   FIELD 00w29 RID: RID
0x4400F104 C   FIELD 30w01 XTD: XTD
0x4400F104 C   FIELD 31w01 RMPS: RMPS
0x4400F108 B  REGISTER FDCAN_TTOCF (rw): FDCAN TT operation configuration register
0x4400F108 C   FIELD 00w02 OM: OM
0x4400F108 C   FIELD 03w01 GEN: GEN
0x4400F108 C   FIELD 04w01 TM: TM
0x4400F108 C   FIELD 05w03 LDSDL: LDSDL
0x4400F108 C   FIELD 08w07 IRTO: IRTO
0x4400F108 C   FIELD 15w01 EECS: EECS
0x4400F108 C   FIELD 16w08 AWL: AWL
0x4400F108 C   FIELD 24w01 EGTF: EGTF
0x4400F108 C   FIELD 25w01 ECC: ECC
0x4400F108 C   FIELD 26w01 EVTP: EVTP
0x4400F10C B  REGISTER FDCAN_TTMLM (rw): FDCAN TT matrix limits register
0x4400F10C C   FIELD 00w06 CCM: CCM
0x4400F10C C   FIELD 06w02 CSS: CSS
0x4400F10C C   FIELD 08w04 TXEW: TXEW
0x4400F10C C   FIELD 16w12 ENTT: ENTT
0x4400F110 B  REGISTER FDCAN_TURCF (rw): The length of the NTU is given by: NTU = CAN clock period x NC/DC. NC is an 18-bit value. Its high part, NCH[17:16] is hard wired to 0b01. Therefore the range of NC extends from 0x10000 to 0x1FFFF. The value configured by NCL is the initial value for FDCAN_TURNA.NAV[15:0]. DC is set to 0x1000 by hardware reset and it may not be written to 0x0000. Level 1: NC 4 * DC and NTU = CAN bit time Levels 0 and 2: NC 8 * DC The actual value of FDCAN_TUR may be changed by the clock drift compensation function of TTCAN level 0 and level 2 in order to adjust the node local view of the NTU to the time master view of the NTU. DC will not be changed by the automatic drift compensation, FDCAN_TURNA.NAV may be adjusted around NC in the range of the synchronization deviation limit given by FDCAN_TTOCF.LDSDL. NC and DC should be programmed to the largest suitable values in achieve the best computational accuracy for the drift compensation process.
0x4400F110 C   FIELD 00w16 NCL: NCL
0x4400F110 C   FIELD 16w14 DC: DC
0x4400F110 C   FIELD 31w01 ELT: ELT
0x4400F114 B  REGISTER FDCAN_TTOCN: FDCAN TT operation control register
0x4400F114 C   FIELD 00w01 SGT (rw): SGT
0x4400F114 C   FIELD 01w01 ECS (rw): ECS
0x4400F114 C   FIELD 02w01 SWP (rw): SWP
0x4400F114 C   FIELD 03w02 SWS (rw): SWS
0x4400F114 C   FIELD 05w01 RTIE (rw): RTIE
0x4400F114 C   FIELD 06w02 TMC (rw): TMC
0x4400F114 C   FIELD 08w01 TTIE (rw): TTIE
0x4400F114 C   FIELD 09w01 GCS (rw): GCS
0x4400F114 C   FIELD 10w01 FGP (rw): FGP
0x4400F114 C   FIELD 11w01 TMG (rw): TMG
0x4400F114 C   FIELD 12w01 NIG (rw): NIG
0x4400F114 C   FIELD 13w01 ESCN (rw): ESCN
0x4400F114 C   FIELD 15w01 LCKC (ro): LCKC
0x4400F118 B  REGISTER FDCAN_TTGTP (rw): If TTOST.WGDT is set, the next reference message will be transmitted with the Master_Ref_Mark modified by the preset value and with Disc_Bit = 1, presetting the global time in all nodes simultaneously. TP is reset to 0x0000 each time a reference message with Disc_Bit = 1 becomes valid or if the node is not the current time master. TP is locked while FDCAN_TTOST.WGTD = 1 after setting FDCAN_TTOCN.SGT until the reference message with Disc_Bit = 1 becomes valid or until the node is no longer the current time master.
0x4400F118 C   FIELD 00w16 TP: TP
0x4400F118 C   FIELD 16w16 CTP: CTP
0x4400F11C B  REGISTER FDCAN_TTTMK: A time mark interrupt (FDCAN_TTIR.TMI = 1) is generated when the time base indicated by FDCAN_TTOCN.TMC (cycle time, local time, or global time) has the same value as TM.
0x4400F11C C   FIELD 00w16 TM (rw): TM
0x4400F11C C   FIELD 16w07 TICC (rw): TICC
0x4400F11C C   FIELD 31w01 LCKM (ro): LCKM
0x4400F120 B  REGISTER FDCAN_TTIR (rw): The flags are set when one of the listed conditions is detected (edge-sensitive). The flags remain set until the Host clears them. A flag is cleared by writing a 1 to the corresponding bit position. Writing a 0 has no effect. A hard reset will clear the register.
0x4400F120 C   FIELD 00w01 SBC: SBC
0x4400F120 C   FIELD 01w01 SMC: SMC
0x4400F120 C   FIELD 02w01 CSM: CSM
0x4400F120 C   FIELD 03w01 SOG: SOG
0x4400F120 C   FIELD 04w01 RTMI: RTMI
0x4400F120 C   FIELD 05w01 TTMI: TTMI
0x4400F120 C   FIELD 06w01 SWE: SWE
0x4400F120 C   FIELD 07w01 GTW: GTW
0x4400F120 C   FIELD 08w01 GTD: GTD
0x4400F120 C   FIELD 09w01 GTE: GTE
0x4400F120 C   FIELD 10w01 TXU: TXU
0x4400F120 C   FIELD 11w01 TXO: TXO
0x4400F120 C   FIELD 12w01 SE1: SE1
0x4400F120 C   FIELD 13w01 SE2: SE2
0x4400F120 C   FIELD 14w01 ELC: ELC
0x4400F120 C   FIELD 15w01 IWTG: IWTG
0x4400F120 C   FIELD 16w01 WT: WT
0x4400F120 C   FIELD 17w01 AW: AW
0x4400F120 C   FIELD 18w01 CER: CER
0x4400F124 B  REGISTER FDCAN_TTIE (rw): The settings in the TT interrupt enable register determine which status changes in the TT interrupt register will result in an interrupt.
0x4400F124 C   FIELD 00w01 SBCE: SBCE
0x4400F124 C   FIELD 01w01 SMCE: SMCE
0x4400F124 C   FIELD 02w01 CSME: CSME
0x4400F124 C   FIELD 03w01 SOGE: SOGE
0x4400F124 C   FIELD 04w01 RTMIE: RTMIE
0x4400F124 C   FIELD 05w01 TTMIE: TTMIE
0x4400F124 C   FIELD 06w01 SWEE: SWEE
0x4400F124 C   FIELD 07w01 GTWE: GTWE
0x4400F124 C   FIELD 08w01 GTDE: GTDE
0x4400F124 C   FIELD 09w01 GTEE: GTEE
0x4400F124 C   FIELD 10w01 TXUE: TXUE
0x4400F124 C   FIELD 11w01 TXOE: TXOE
0x4400F124 C   FIELD 12w01 SE1E: SE1E
0x4400F124 C   FIELD 13w01 SE2E: SE2E
0x4400F124 C   FIELD 14w01 ELCE: ELCE
0x4400F124 C   FIELD 15w01 IWTE: IWTE
0x4400F124 C   FIELD 16w01 WTE: WTE
0x4400F124 C   FIELD 17w01 AWE: AWE
0x4400F124 C   FIELD 18w01 CERE: CERE
0x4400F128 B  REGISTER FDCAN_TTILS (rw): The TT interrupt Line select register assigns an interrupt generated by a specific interrupt flag from the TT interrupt register to one of the two module interrupt lines. For interrupt generation the respective interrupt line has to be enabled via FDCAN_ILE.EINT0 and FDCAN_ILE.EINT1.
0x4400F128 C   FIELD 00w01 SBCL: SBCL
0x4400F128 C   FIELD 01w01 SMCL: SMCL
0x4400F128 C   FIELD 02w01 CSML: CSML
0x4400F128 C   FIELD 03w01 SOGL: SOGL
0x4400F128 C   FIELD 04w01 RTMIL: RTMIL
0x4400F128 C   FIELD 05w01 TTMIL: TTMIL
0x4400F128 C   FIELD 06w01 SWEL: SWEL
0x4400F128 C   FIELD 07w01 GTWL: GTWL
0x4400F128 C   FIELD 08w01 GTDL: GTDL
0x4400F128 C   FIELD 09w01 GTEL: GTEL
0x4400F128 C   FIELD 10w01 TXUL: TXUL
0x4400F128 C   FIELD 11w01 TXOL: TXOL
0x4400F128 C   FIELD 12w01 SE1L: SE1L
0x4400F128 C   FIELD 13w01 SE2L: SE2L
0x4400F128 C   FIELD 14w01 ELCL: ELCL
0x4400F128 C   FIELD 15w01 IWTL: IWTL
0x4400F128 C   FIELD 16w01 WTL: WTL
0x4400F128 C   FIELD 17w01 AWL: AWL
0x4400F128 C   FIELD 18w01 CERL: CERL
0x4400F12C B  REGISTER FDCAN_TTOST (ro): FDCAN TT operation status register
0x4400F12C C   FIELD 00w02 EL: EL
0x4400F12C C   FIELD 02w02 MS: MS
0x4400F12C C   FIELD 04w02 SYS: SYS
0x4400F12C C   FIELD 06w01 QGTP: QGTP
0x4400F12C C   FIELD 07w01 QCS: QCS
0x4400F12C C   FIELD 08w08 RTO: RTO
0x4400F12C C   FIELD 22w01 WGTD: WGTD
0x4400F12C C   FIELD 23w01 GFI: GFI
0x4400F12C C   FIELD 24w03 TMP: TMP
0x4400F12C C   FIELD 27w01 GSI: GSI
0x4400F12C C   FIELD 28w01 WFE: WFE
0x4400F12C C   FIELD 29w01 AWE: AWE
0x4400F12C C   FIELD 30w01 WECS: WECS
0x4400F12C C   FIELD 31w01 SPL: SPL
0x4400F130 B  REGISTER FDCAN_TURNA (ro): There is no drift compensation in TTCAN level 1.
0x4400F130 C   FIELD 00w18 NAV: NAV
0x4400F134 B  REGISTER FDCAN_TTLGT (ro): FDCAN TT local and global time register
0x4400F134 C   FIELD 00w16 LT: LT
0x4400F134 C   FIELD 16w16 GT: GT
0x4400F138 B  REGISTER FDCAN_TTCTC (ro): FDCAN TT cycle time and count register
0x4400F138 C   FIELD 00w16 CT: CT
0x4400F138 C   FIELD 16w06 CC: CC
0x4400F13C B  REGISTER FDCAN_TTCPT (ro): FDCAN TT capture time register
0x4400F13C C   FIELD 00w06 CCV: CCV
0x4400F13C C   FIELD 16w16 SWV: SWV
0x4400F140 B  REGISTER FDCAN_TTCSM (ro): FDCAN TT cycle sync mark register
0x4400F140 C   FIELD 00w16 CSM: CSM
0x4400F300 B  REGISTER FDCAN_TTTS (rw): The settings in the FDCAN_TTTS register select the input to be used as event trigger and stop watch trigger.
0x4400F300 C   FIELD 00w02 SWTDEL: SWTDEL
0x4400F300 C   FIELD 04w02 EVTSEL: EVTSEL
0x44010000 A PERIPHERAL CCU
0x44010000 B  REGISTER FCCAN_CCU_CREL (ro): Clock calibration unit core release register
0x44010000 C   FIELD 00w08 DAY: DAY
0x44010000 C   FIELD 08w08 MON: MON
0x44010000 C   FIELD 16w04 YEAR: YEAR
0x44010000 C   FIELD 20w04 SUBSTEP: SUBSTEP
0x44010000 C   FIELD 24w04 STEP: STEP
0x44010000 C   FIELD 28w04 REL: REL
0x44010004 B  REGISTER FCCAN_CCU_CCFG (rw): Calibration configuration register
0x44010004 C   FIELD 00w05 TQBT: TQBT
0x44010004 C   FIELD 06w01 BCC: BCC
0x44010004 C   FIELD 07w01 CFL: CFL
0x44010004 C   FIELD 08w08 OCPM: OCPM
0x44010004 C   FIELD 16w04 CDIV: CDIV
0x44010004 C   FIELD 31w01 SWR: SWR
0x44010008 B  REGISTER FCCAN_CCU_CSTAT (ro): Calibration status register
0x44010008 C   FIELD 00w18 OCPC: OCPC
0x44010008 C   FIELD 18w11 TQC: TQC
0x44010008 C   FIELD 30w02 CALS: CALS
0x4401000C B  REGISTER FCCAN_CCU_CWD: The calibration watchdog is started after the first falling edge when the calibration FSM is in state Not_Calibrated (CCU_CSTAT.CALS = 00). In this state the calibration watchdog monitors the message received. In case no message was received until the calibration watchdog has counted down to 0, the calibration FSM stays in state Not_Calibrated (CCU_CSTAT.CALS = 00), the counter is reloaded with FDCAN_RWD.WDC and basic calibration is restarted after the next falling edge. When in state Basic_Calibrated (CCU_CSTAT.CALS = 01), the calibration watchdog is restarted with each received message . In case no message was received until the calibration watchdog has counted down to 0, the calibration FSM returns to state Not_Calibrated (CCU_CSTAT.CALS = 00), the counter is reloaded with FDCAN_RWD.WDC and basic calibration is restarted after the next falling edge. When a quartz message is received, state Precision_Calibrated (CCU_CSTAT.CALS = 10) is entered and the calibration watchdog is restarted. In this state the calibration watchdog monitors the quartz message received input. In case no message from a quartz controlled node is received by the attached TTCAN until the calibration watchdog has counted down to 0, the calibration FSM transits back to state Basic_Calibrated (CCU_CSTAT.CALS = 01). The signal is active when the CAN protocol engine on the attached TTCAN is started i.e. when the INIT bit is reset. A calibration watchdog event also sets interrupt flag CCU_IR.CWE. If enabled by CCU_IE.CWEE, interrupt line is activated (set to high). Interrupt line remains active until interrupt flag CCU_IR.CWE is reset.
0x4401000C C   FIELD 00w16 WDC (rw): WDC
0x4401000C C   FIELD 16w16 WDV (ro): WDV
0x44010010 B  REGISTER FCCAN_CCU_IR (rw): The flags are set when one of the listed conditions is detected (edge-sensitive). The flags remain set until the Host clears them. A flag is cleared by writing a 1 to the corresponding bit position. Writing a 0 has no effect. A hard reset will clear the register. The configuration of CCU_IE controls whether an interrupt is generated or not.
0x44010010 C   FIELD 00w01 CWE: CWE
0x44010010 C   FIELD 01w01 CSC: CSC
0x44010014 B  REGISTER FCCAN_CCU_IE (rw): The settings in the CU interrupt enable register determine whether a status change in the CU interrupt register will be signaled on an interrupt line.
0x44010014 C   FIELD 00w01 CWEE: CWEE
0x44010014 C   FIELD 01w01 CSCE: CSCE
0x48000000 A PERIPHERAL DMA1
0x48000000 B  REGISTER DMA_LISR (ro): DMA low interrupt status register
0x48000000 C   FIELD 00w01 FEIF0: FEIF0
0x48000000 C   FIELD 02w01 DMEIF0: DMEIF0
0x48000000 C   FIELD 03w01 TEIF0: TEIF0
0x48000000 C   FIELD 04w01 HTIF0: HTIF0
0x48000000 C   FIELD 05w01 TCIF0: TCIF0
0x48000000 C   FIELD 06w01 FEIF1: FEIF1
0x48000000 C   FIELD 08w01 DMEIF1: DMEIF1
0x48000000 C   FIELD 09w01 TEIF1: TEIF1
0x48000000 C   FIELD 10w01 HTIF1: HTIF1
0x48000000 C   FIELD 11w01 TCIF1: TCIF1
0x48000000 C   FIELD 16w01 FEIF2: FEIF2
0x48000000 C   FIELD 18w01 DMEIF2: DMEIF2
0x48000000 C   FIELD 19w01 TEIF2: TEIF2
0x48000000 C   FIELD 20w01 HTIF2: HTIF2
0x48000000 C   FIELD 21w01 TCIF2: TCIF2
0x48000000 C   FIELD 22w01 FEIF3: FEIF3
0x48000000 C   FIELD 24w01 DMEIF3: DMEIF3
0x48000000 C   FIELD 25w01 TEIF3: TEIF3
0x48000000 C   FIELD 26w01 HTIF3: HTIF3
0x48000000 C   FIELD 27w01 TCIF3: TCIF3
0x48000004 B  REGISTER DMA_HISR (ro): DMA high interrupt status register
0x48000004 C   FIELD 00w01 FEIF4: FEIF4
0x48000004 C   FIELD 02w01 DMEIF4: DMEIF4
0x48000004 C   FIELD 03w01 TEIF4: TEIF4
0x48000004 C   FIELD 04w01 HTIF4: HTIF4
0x48000004 C   FIELD 05w01 TCIF4: TCIF4
0x48000004 C   FIELD 06w01 FEIF5: FEIF5
0x48000004 C   FIELD 08w01 DMEIF5: DMEIF5
0x48000004 C   FIELD 09w01 TEIF5: TEIF5
0x48000004 C   FIELD 10w01 HTIF5: HTIF5
0x48000004 C   FIELD 11w01 TCIF5: TCIF5
0x48000004 C   FIELD 16w01 FEIF6: FEIF6
0x48000004 C   FIELD 18w01 DMEIF6: DMEIF6
0x48000004 C   FIELD 19w01 TEIF6: TEIF6
0x48000004 C   FIELD 20w01 HTIF6: HTIF6
0x48000004 C   FIELD 21w01 TCIF6: TCIF6
0x48000004 C   FIELD 22w01 FEIF7: FEIF7
0x48000004 C   FIELD 24w01 DMEIF7: DMEIF7
0x48000004 C   FIELD 25w01 TEIF7: TEIF7
0x48000004 C   FIELD 26w01 HTIF7: HTIF7
0x48000004 C   FIELD 27w01 TCIF7: TCIF7
0x48000008 B  REGISTER DMA_LIFCR (wo): DMA low interrupt flag clear register
0x48000008 C   FIELD 00w01 CFEIF0: CFEIF0
0x48000008 C   FIELD 02w01 CDMEIF0: CDMEIF0
0x48000008 C   FIELD 03w01 CTEIF0: CTEIF0
0x48000008 C   FIELD 04w01 CHTIF0: CHTIF0
0x48000008 C   FIELD 05w01 CTCIF0: CTCIF0
0x48000008 C   FIELD 06w01 CFEIF1: CFEIF1
0x48000008 C   FIELD 08w01 CDMEIF1: CDMEIF1
0x48000008 C   FIELD 09w01 CTEIF1: CTEIF1
0x48000008 C   FIELD 10w01 CHTIF1: CHTIF1
0x48000008 C   FIELD 11w01 CTCIF1: CTCIF1
0x48000008 C   FIELD 16w01 CFEIF2: CFEIF2
0x48000008 C   FIELD 18w01 CDMEIF2: CDMEIF2
0x48000008 C   FIELD 19w01 CTEIF2: CTEIF2
0x48000008 C   FIELD 20w01 CHTIF2: CHTIF2
0x48000008 C   FIELD 21w01 CTCIF2: CTCIF2
0x48000008 C   FIELD 22w01 CFEIF3: CFEIF3
0x48000008 C   FIELD 24w01 CDMEIF3: CDMEIF3
0x48000008 C   FIELD 25w01 CTEIF3: CTEIF3
0x48000008 C   FIELD 26w01 CHTIF3: CHTIF3
0x48000008 C   FIELD 27w01 CTCIF3: CTCIF3
0x4800000C B  REGISTER DMA_HIFCR (wo): DMA high interrupt flag clear register
0x4800000C C   FIELD 00w01 CFEIF4: CFEIF4
0x4800000C C   FIELD 02w01 CDMEIF4: CDMEIF4
0x4800000C C   FIELD 03w01 CTEIF4: CTEIF4
0x4800000C C   FIELD 04w01 CHTIF4: CHTIF4
0x4800000C C   FIELD 05w01 CTCIF4: CTCIF4
0x4800000C C   FIELD 06w01 CFEIF5: CFEIF5
0x4800000C C   FIELD 08w01 CDMEIF5: CDMEIF5
0x4800000C C   FIELD 09w01 CTEIF5: CTEIF5
0x4800000C C   FIELD 10w01 CHTIF5: CHTIF5
0x4800000C C   FIELD 11w01 CTCIF5: CTCIF5
0x4800000C C   FIELD 16w01 CFEIF6: CFEIF6
0x4800000C C   FIELD 18w01 CDMEIF6: CDMEIF6
0x4800000C C   FIELD 19w01 CTEIF6: CTEIF6
0x4800000C C   FIELD 20w01 CHTIF6: CHTIF6
0x4800000C C   FIELD 21w01 CTCIF6: CTCIF6
0x4800000C C   FIELD 22w01 CFEIF7: CFEIF7
0x4800000C C   FIELD 24w01 CDMEIF7: CDMEIF7
0x4800000C C   FIELD 25w01 CTEIF7: CTEIF7
0x4800000C C   FIELD 26w01 CHTIF7: CHTIF7
0x4800000C C   FIELD 27w01 CTCIF7: CTCIF7
0x48000010 B  REGISTER DMA_S0CR (rw): This register is used to configure the concerned stream.
0x48000010 C   FIELD 00w01 EN: EN
0x48000010 C   FIELD 01w01 DMEIE: DMEIE
0x48000010 C   FIELD 02w01 TEIE: TEIE
0x48000010 C   FIELD 03w01 HTIE: HTIE
0x48000010 C   FIELD 04w01 TCIE: TCIE
0x48000010 C   FIELD 05w01 PFCTRL: PFCTRL
0x48000010 C   FIELD 06w02 DIR: DIR
0x48000010 C   FIELD 08w01 CIRC: CIRC
0x48000010 C   FIELD 09w01 PINC: PINC
0x48000010 C   FIELD 10w01 MINC: MINC
0x48000010 C   FIELD 11w02 PSIZE: PSIZE
0x48000010 C   FIELD 13w02 MSIZE: MSIZE
0x48000010 C   FIELD 15w01 PINCOS: PINCOS
0x48000010 C   FIELD 16w02 PL: PL
0x48000010 C   FIELD 18w01 DBM: DBM
0x48000010 C   FIELD 19w01 CT: CT
0x48000010 C   FIELD 21w02 PBURST: PBURST
0x48000010 C   FIELD 23w02 MBURST: MBURST
0x48000014 B  REGISTER DMA_S0NDTR (rw): DMA stream 0 number of data register
0x48000014 C   FIELD 00w16 NDT: NDT
0x48000018 B  REGISTER DMA_S0PAR (rw): DMA stream 0 peripheral address register
0x48000018 C   FIELD 00w32 PAR: PAR
0x4800001C B  REGISTER DMA_S0M0AR (rw): DMA stream 0 memory 0 address register
0x4800001C C   FIELD 00w32 M0A: M0A
0x48000020 B  REGISTER DMA_S0M1AR (rw): DMA stream 0 memory 1 address register
0x48000020 C   FIELD 00w32 M1A: M1A
0x48000024 B  REGISTER DMA_S0FCR: DMA stream 0 FIFO control register
0x48000024 C   FIELD 00w02 FTH (rw): FTH
0x48000024 C   FIELD 02w01 DMDIS (rw): DMDIS
0x48000024 C   FIELD 03w03 FS (ro): FS
0x48000024 C   FIELD 07w01 FEIE (rw): FEIE
0x48000028 B  REGISTER DMA_S1CR (rw): This register is used to configure the concerned stream.
0x48000028 C   FIELD 00w01 EN: EN
0x48000028 C   FIELD 01w01 DMEIE: DMEIE
0x48000028 C   FIELD 02w01 TEIE: TEIE
0x48000028 C   FIELD 03w01 HTIE: HTIE
0x48000028 C   FIELD 04w01 TCIE: TCIE
0x48000028 C   FIELD 05w01 PFCTRL: PFCTRL
0x48000028 C   FIELD 06w02 DIR: DIR
0x48000028 C   FIELD 08w01 CIRC: CIRC
0x48000028 C   FIELD 09w01 PINC: PINC
0x48000028 C   FIELD 10w01 MINC: MINC
0x48000028 C   FIELD 11w02 PSIZE: PSIZE
0x48000028 C   FIELD 13w02 MSIZE: MSIZE
0x48000028 C   FIELD 15w01 PINCOS: PINCOS
0x48000028 C   FIELD 16w02 PL: PL
0x48000028 C   FIELD 18w01 DBM: DBM
0x48000028 C   FIELD 19w01 CT: CT
0x48000028 C   FIELD 21w02 PBURST: PBURST
0x48000028 C   FIELD 23w02 MBURST: MBURST
0x4800002C B  REGISTER DMA_S1NDTR (rw): DMA stream 1 number of data register
0x4800002C C   FIELD 00w16 NDT: NDT
0x48000030 B  REGISTER DMA_S1PAR (rw): DMA stream 1 peripheral address register
0x48000030 C   FIELD 00w32 PAR: PAR
0x48000034 B  REGISTER DMA_S1M0AR (rw): DMA stream 1 memory 0 address register
0x48000034 C   FIELD 00w32 M0A: M0A
0x48000038 B  REGISTER DMA_S1M1AR (rw): DMA stream 1 memory 1 address register
0x48000038 C   FIELD 00w32 M1A: M1A
0x4800003C B  REGISTER DMA_S1FCR: DMA stream 1 FIFO control register
0x4800003C C   FIELD 00w02 FTH (rw): FTH
0x4800003C C   FIELD 02w01 DMDIS (rw): DMDIS
0x4800003C C   FIELD 03w03 FS (ro): FS
0x4800003C C   FIELD 07w01 FEIE (rw): FEIE
0x48000040 B  REGISTER DMA_S2CR (rw): This register is used to configure the concerned stream.
0x48000040 C   FIELD 00w01 EN: EN
0x48000040 C   FIELD 01w01 DMEIE: DMEIE
0x48000040 C   FIELD 02w01 TEIE: TEIE
0x48000040 C   FIELD 03w01 HTIE: HTIE
0x48000040 C   FIELD 04w01 TCIE: TCIE
0x48000040 C   FIELD 05w01 PFCTRL: PFCTRL
0x48000040 C   FIELD 06w02 DIR: DIR
0x48000040 C   FIELD 08w01 CIRC: CIRC
0x48000040 C   FIELD 09w01 PINC: PINC
0x48000040 C   FIELD 10w01 MINC: MINC
0x48000040 C   FIELD 11w02 PSIZE: PSIZE
0x48000040 C   FIELD 13w02 MSIZE: MSIZE
0x48000040 C   FIELD 15w01 PINCOS: PINCOS
0x48000040 C   FIELD 16w02 PL: PL
0x48000040 C   FIELD 18w01 DBM: DBM
0x48000040 C   FIELD 19w01 CT: CT
0x48000040 C   FIELD 21w02 PBURST: PBURST
0x48000040 C   FIELD 23w02 MBURST: MBURST
0x48000044 B  REGISTER DMA_S2NDTR (rw): DMA stream 2 number of data register
0x48000044 C   FIELD 00w16 NDT: NDT
0x48000048 B  REGISTER DMA_S2PAR (rw): DMA stream 2 peripheral address register
0x48000048 C   FIELD 00w32 PAR: PAR
0x4800004C B  REGISTER DMA_S2M0AR (rw): DMA stream 2 memory 0 address register
0x4800004C C   FIELD 00w32 M0A: M0A
0x48000050 B  REGISTER DMA_S2M1AR (rw): DMA stream 2 memory 1 address register
0x48000050 C   FIELD 00w32 M1A: M1A
0x48000054 B  REGISTER DMA_S2FCR: DMA stream 2 FIFO control register
0x48000054 C   FIELD 00w02 FTH (rw): FTH
0x48000054 C   FIELD 02w01 DMDIS (rw): DMDIS
0x48000054 C   FIELD 03w03 FS (ro): FS
0x48000054 C   FIELD 07w01 FEIE (rw): FEIE
0x48000058 B  REGISTER DMA_S3CR (rw): This register is used to configure the concerned stream.
0x48000058 C   FIELD 00w01 EN: EN
0x48000058 C   FIELD 01w01 DMEIE: DMEIE
0x48000058 C   FIELD 02w01 TEIE: TEIE
0x48000058 C   FIELD 03w01 HTIE: HTIE
0x48000058 C   FIELD 04w01 TCIE: TCIE
0x48000058 C   FIELD 05w01 PFCTRL: PFCTRL
0x48000058 C   FIELD 06w02 DIR: DIR
0x48000058 C   FIELD 08w01 CIRC: CIRC
0x48000058 C   FIELD 09w01 PINC: PINC
0x48000058 C   FIELD 10w01 MINC: MINC
0x48000058 C   FIELD 11w02 PSIZE: PSIZE
0x48000058 C   FIELD 13w02 MSIZE: MSIZE
0x48000058 C   FIELD 15w01 PINCOS: PINCOS
0x48000058 C   FIELD 16w02 PL: PL
0x48000058 C   FIELD 18w01 DBM: DBM
0x48000058 C   FIELD 19w01 CT: CT
0x48000058 C   FIELD 21w02 PBURST: PBURST
0x48000058 C   FIELD 23w02 MBURST: MBURST
0x4800005C B  REGISTER DMA_S3NDTR (rw): DMA stream 3 number of data register
0x4800005C C   FIELD 00w16 NDT: NDT
0x48000060 B  REGISTER DMA_S3PAR (rw): DMA stream 3 peripheral address register
0x48000060 C   FIELD 00w32 PAR: PAR
0x48000064 B  REGISTER DMA_S3M0AR (rw): DMA stream 3 memory 0 address register
0x48000064 C   FIELD 00w32 M0A: M0A
0x48000068 B  REGISTER DMA_S3M1AR (rw): DMA stream 3 memory 1 address register
0x48000068 C   FIELD 00w32 M1A: M1A
0x4800006C B  REGISTER DMA_S3FCR: DMA stream 3 FIFO control register
0x4800006C C   FIELD 00w02 FTH (rw): FTH
0x4800006C C   FIELD 02w01 DMDIS (rw): DMDIS
0x4800006C C   FIELD 03w03 FS (ro): FS
0x4800006C C   FIELD 07w01 FEIE (rw): FEIE
0x48000070 B  REGISTER DMA_S4CR (rw): This register is used to configure the concerned stream.
0x48000070 C   FIELD 00w01 EN: EN
0x48000070 C   FIELD 01w01 DMEIE: DMEIE
0x48000070 C   FIELD 02w01 TEIE: TEIE
0x48000070 C   FIELD 03w01 HTIE: HTIE
0x48000070 C   FIELD 04w01 TCIE: TCIE
0x48000070 C   FIELD 05w01 PFCTRL: PFCTRL
0x48000070 C   FIELD 06w02 DIR: DIR
0x48000070 C   FIELD 08w01 CIRC: CIRC
0x48000070 C   FIELD 09w01 PINC: PINC
0x48000070 C   FIELD 10w01 MINC: MINC
0x48000070 C   FIELD 11w02 PSIZE: PSIZE
0x48000070 C   FIELD 13w02 MSIZE: MSIZE
0x48000070 C   FIELD 15w01 PINCOS: PINCOS
0x48000070 C   FIELD 16w02 PL: PL
0x48000070 C   FIELD 18w01 DBM: DBM
0x48000070 C   FIELD 19w01 CT: CT
0x48000070 C   FIELD 21w02 PBURST: PBURST
0x48000070 C   FIELD 23w02 MBURST: MBURST
0x48000074 B  REGISTER DMA_S4NDTR (rw): DMA stream 4 number of data register
0x48000074 C   FIELD 00w16 NDT: NDT
0x48000078 B  REGISTER DMA_S4PAR (rw): DMA stream 4 peripheral address register
0x48000078 C   FIELD 00w32 PAR: PAR
0x4800007C B  REGISTER DMA_S4M0AR (rw): DMA stream 4 memory 0 address register
0x4800007C C   FIELD 00w32 M0A: M0A
0x48000080 B  REGISTER DMA_S4M1AR (rw): DMA stream 4 memory 1 address register
0x48000080 C   FIELD 00w32 M1A: M1A
0x48000084 B  REGISTER DMA_S4FCR: DMA stream 4 FIFO control register
0x48000084 C   FIELD 00w02 FTH (rw): FTH
0x48000084 C   FIELD 02w01 DMDIS (rw): DMDIS
0x48000084 C   FIELD 03w03 FS (ro): FS
0x48000084 C   FIELD 07w01 FEIE (rw): FEIE
0x48000088 B  REGISTER DMA_S5CR (rw): This register is used to configure the concerned stream.
0x48000088 C   FIELD 00w01 EN: EN
0x48000088 C   FIELD 01w01 DMEIE: DMEIE
0x48000088 C   FIELD 02w01 TEIE: TEIE
0x48000088 C   FIELD 03w01 HTIE: HTIE
0x48000088 C   FIELD 04w01 TCIE: TCIE
0x48000088 C   FIELD 05w01 PFCTRL: PFCTRL
0x48000088 C   FIELD 06w02 DIR: DIR
0x48000088 C   FIELD 08w01 CIRC: CIRC
0x48000088 C   FIELD 09w01 PINC: PINC
0x48000088 C   FIELD 10w01 MINC: MINC
0x48000088 C   FIELD 11w02 PSIZE: PSIZE
0x48000088 C   FIELD 13w02 MSIZE: MSIZE
0x48000088 C   FIELD 15w01 PINCOS: PINCOS
0x48000088 C   FIELD 16w02 PL: PL
0x48000088 C   FIELD 18w01 DBM: DBM
0x48000088 C   FIELD 19w01 CT: CT
0x48000088 C   FIELD 21w02 PBURST: PBURST
0x48000088 C   FIELD 23w02 MBURST: MBURST
0x4800008C B  REGISTER DMA_S5NDTR (rw): DMA stream 5 number of data register
0x4800008C C   FIELD 00w16 NDT: NDT
0x48000090 B  REGISTER DMA_S5PAR (rw): DMA stream 5 peripheral address register
0x48000090 C   FIELD 00w32 PAR: PAR
0x48000094 B  REGISTER DMA_S5M0AR (rw): DMA stream 5 memory 0 address register
0x48000094 C   FIELD 00w32 M0A: M0A
0x48000098 B  REGISTER DMA_S5M1AR (rw): DMA stream 5 memory 1 address register
0x48000098 C   FIELD 00w32 M1A: M1A
0x4800009C B  REGISTER DMA_S5FCR: DMA stream 5 FIFO control register
0x4800009C C   FIELD 00w02 FTH (rw): FTH
0x4800009C C   FIELD 02w01 DMDIS (rw): DMDIS
0x4800009C C   FIELD 03w03 FS (ro): FS
0x4800009C C   FIELD 07w01 FEIE (rw): FEIE
0x480000A0 B  REGISTER DMA_S6CR (rw): This register is used to configure the concerned stream.
0x480000A0 C   FIELD 00w01 EN: EN
0x480000A0 C   FIELD 01w01 DMEIE: DMEIE
0x480000A0 C   FIELD 02w01 TEIE: TEIE
0x480000A0 C   FIELD 03w01 HTIE: HTIE
0x480000A0 C   FIELD 04w01 TCIE: TCIE
0x480000A0 C   FIELD 05w01 PFCTRL: PFCTRL
0x480000A0 C   FIELD 06w02 DIR: DIR
0x480000A0 C   FIELD 08w01 CIRC: CIRC
0x480000A0 C   FIELD 09w01 PINC: PINC
0x480000A0 C   FIELD 10w01 MINC: MINC
0x480000A0 C   FIELD 11w02 PSIZE: PSIZE
0x480000A0 C   FIELD 13w02 MSIZE: MSIZE
0x480000A0 C   FIELD 15w01 PINCOS: PINCOS
0x480000A0 C   FIELD 16w02 PL: PL
0x480000A0 C   FIELD 18w01 DBM: DBM
0x480000A0 C   FIELD 19w01 CT: CT
0x480000A0 C   FIELD 21w02 PBURST: PBURST
0x480000A0 C   FIELD 23w02 MBURST: MBURST
0x480000A4 B  REGISTER DMA_S6NDTR (rw): DMA stream 6 number of data register
0x480000A4 C   FIELD 00w16 NDT: NDT
0x480000A8 B  REGISTER DMA_S6PAR (rw): DMA stream 6 peripheral address register
0x480000A8 C   FIELD 00w32 PAR: PAR
0x480000AC B  REGISTER DMA_S6M0AR (rw): DMA stream 6 memory 0 address register
0x480000AC C   FIELD 00w32 M0A: M0A
0x480000B0 B  REGISTER DMA_S6M1AR (rw): DMA stream 6 memory 1 address register
0x480000B0 C   FIELD 00w32 M1A: M1A
0x480000B4 B  REGISTER DMA_S6FCR: DMA stream 6 FIFO control register
0x480000B4 C   FIELD 00w02 FTH (rw): FTH
0x480000B4 C   FIELD 02w01 DMDIS (rw): DMDIS
0x480000B4 C   FIELD 03w03 FS (ro): FS
0x480000B4 C   FIELD 07w01 FEIE (rw): FEIE
0x480000B8 B  REGISTER DMA_S7CR (rw): This register is used to configure the concerned stream.
0x480000B8 C   FIELD 00w01 EN: EN
0x480000B8 C   FIELD 01w01 DMEIE: DMEIE
0x480000B8 C   FIELD 02w01 TEIE: TEIE
0x480000B8 C   FIELD 03w01 HTIE: HTIE
0x480000B8 C   FIELD 04w01 TCIE: TCIE
0x480000B8 C   FIELD 05w01 PFCTRL: PFCTRL
0x480000B8 C   FIELD 06w02 DIR: DIR
0x480000B8 C   FIELD 08w01 CIRC: CIRC
0x480000B8 C   FIELD 09w01 PINC: PINC
0x480000B8 C   FIELD 10w01 MINC: MINC
0x480000B8 C   FIELD 11w02 PSIZE: PSIZE
0x480000B8 C   FIELD 13w02 MSIZE: MSIZE
0x480000B8 C   FIELD 15w01 PINCOS: PINCOS
0x480000B8 C   FIELD 16w02 PL: PL
0x480000B8 C   FIELD 18w01 DBM: DBM
0x480000B8 C   FIELD 19w01 CT: CT
0x480000B8 C   FIELD 21w02 PBURST: PBURST
0x480000B8 C   FIELD 23w02 MBURST: MBURST
0x480000BC B  REGISTER DMA_S7NDTR (rw): DMA stream 7 number of data register
0x480000BC C   FIELD 00w16 NDT: NDT
0x480000C0 B  REGISTER DMA_S7PAR (rw): DMA stream 7 peripheral address register
0x480000C0 C   FIELD 00w32 PAR: PAR
0x480000C4 B  REGISTER DMA_S7M0AR (rw): DMA stream 7 memory 0 address register
0x480000C4 C   FIELD 00w32 M0A: M0A
0x480000C8 B  REGISTER DMA_S7M1AR (rw): DMA stream 7 memory 1 address register
0x480000C8 C   FIELD 00w32 M1A: M1A
0x480000CC B  REGISTER DMA_S7FCR: DMA stream 7 FIFO control register
0x480000CC C   FIELD 00w02 FTH (rw): FTH
0x480000CC C   FIELD 02w01 DMDIS (rw): DMDIS
0x480000CC C   FIELD 03w03 FS (ro): FS
0x480000CC C   FIELD 07w01 FEIE (rw): FEIE
0x480003EC B  REGISTER DMA_HWCFGR2 (ro): DMA hardware configuration 2register
0x480003EC C   FIELD 00w02 FIFO_SIZE: FIFO_SIZE
0x480003EC C   FIELD 04w01 WRITE_BUFFERABLE: WRITE_BUFFERABLE
0x480003EC C   FIELD 08w03 CHSEL_WIDTH: CHSEL_WIDTH
0x480003F0 B  REGISTER DMA_HWCFGR1 (ro): DMA hardware configuration 1 register
0x480003F0 C   FIELD 00w02 DMA_DEF0: DMA_DEF0
0x480003F0 C   FIELD 04w02 DMA_DEF1: DMA_DEF1
0x480003F0 C   FIELD 08w02 DMA_DEF2: DMA_DEF2
0x480003F0 C   FIELD 12w02 DMA_DEF3: DMA_DEF3
0x480003F0 C   FIELD 16w02 DMA_DEF4: DMA_DEF4
0x480003F0 C   FIELD 20w02 DMA_DEF5: DMA_DEF5
0x480003F0 C   FIELD 24w02 DMA_DEF6: DMA_DEF6
0x480003F0 C   FIELD 28w02 DMA_DEF7: DMA_DEF7
0x480003F4 B  REGISTER DMA_VERR (ro): This register identifies the version of the IP.
0x480003F4 C   FIELD 00w04 MINREV: MINREV
0x480003F4 C   FIELD 04w04 MAJREV: MAJREV
0x480003F8 B  REGISTER DMA_IPDR (ro): DMA IP identification register
0x480003F8 C   FIELD 00w32 ID: ID
0x480003FC B  REGISTER DMA_SIDR (ro): DMA size identification register
0x480003FC C   FIELD 00w32 SID: SID
0x48001000 A PERIPHERAL DMA2
0x48001000 B  REGISTER DMA_LISR (ro): DMA low interrupt status register
0x48001000 C   FIELD 00w01 FEIF0: FEIF0
0x48001000 C   FIELD 02w01 DMEIF0: DMEIF0
0x48001000 C   FIELD 03w01 TEIF0: TEIF0
0x48001000 C   FIELD 04w01 HTIF0: HTIF0
0x48001000 C   FIELD 05w01 TCIF0: TCIF0
0x48001000 C   FIELD 06w01 FEIF1: FEIF1
0x48001000 C   FIELD 08w01 DMEIF1: DMEIF1
0x48001000 C   FIELD 09w01 TEIF1: TEIF1
0x48001000 C   FIELD 10w01 HTIF1: HTIF1
0x48001000 C   FIELD 11w01 TCIF1: TCIF1
0x48001000 C   FIELD 16w01 FEIF2: FEIF2
0x48001000 C   FIELD 18w01 DMEIF2: DMEIF2
0x48001000 C   FIELD 19w01 TEIF2: TEIF2
0x48001000 C   FIELD 20w01 HTIF2: HTIF2
0x48001000 C   FIELD 21w01 TCIF2: TCIF2
0x48001000 C   FIELD 22w01 FEIF3: FEIF3
0x48001000 C   FIELD 24w01 DMEIF3: DMEIF3
0x48001000 C   FIELD 25w01 TEIF3: TEIF3
0x48001000 C   FIELD 26w01 HTIF3: HTIF3
0x48001000 C   FIELD 27w01 TCIF3: TCIF3
0x48001004 B  REGISTER DMA_HISR (ro): DMA high interrupt status register
0x48001004 C   FIELD 00w01 FEIF4: FEIF4
0x48001004 C   FIELD 02w01 DMEIF4: DMEIF4
0x48001004 C   FIELD 03w01 TEIF4: TEIF4
0x48001004 C   FIELD 04w01 HTIF4: HTIF4
0x48001004 C   FIELD 05w01 TCIF4: TCIF4
0x48001004 C   FIELD 06w01 FEIF5: FEIF5
0x48001004 C   FIELD 08w01 DMEIF5: DMEIF5
0x48001004 C   FIELD 09w01 TEIF5: TEIF5
0x48001004 C   FIELD 10w01 HTIF5: HTIF5
0x48001004 C   FIELD 11w01 TCIF5: TCIF5
0x48001004 C   FIELD 16w01 FEIF6: FEIF6
0x48001004 C   FIELD 18w01 DMEIF6: DMEIF6
0x48001004 C   FIELD 19w01 TEIF6: TEIF6
0x48001004 C   FIELD 20w01 HTIF6: HTIF6
0x48001004 C   FIELD 21w01 TCIF6: TCIF6
0x48001004 C   FIELD 22w01 FEIF7: FEIF7
0x48001004 C   FIELD 24w01 DMEIF7: DMEIF7
0x48001004 C   FIELD 25w01 TEIF7: TEIF7
0x48001004 C   FIELD 26w01 HTIF7: HTIF7
0x48001004 C   FIELD 27w01 TCIF7: TCIF7
0x48001008 B  REGISTER DMA_LIFCR (wo): DMA low interrupt flag clear register
0x48001008 C   FIELD 00w01 CFEIF0: CFEIF0
0x48001008 C   FIELD 02w01 CDMEIF0: CDMEIF0
0x48001008 C   FIELD 03w01 CTEIF0: CTEIF0
0x48001008 C   FIELD 04w01 CHTIF0: CHTIF0
0x48001008 C   FIELD 05w01 CTCIF0: CTCIF0
0x48001008 C   FIELD 06w01 CFEIF1: CFEIF1
0x48001008 C   FIELD 08w01 CDMEIF1: CDMEIF1
0x48001008 C   FIELD 09w01 CTEIF1: CTEIF1
0x48001008 C   FIELD 10w01 CHTIF1: CHTIF1
0x48001008 C   FIELD 11w01 CTCIF1: CTCIF1
0x48001008 C   FIELD 16w01 CFEIF2: CFEIF2
0x48001008 C   FIELD 18w01 CDMEIF2: CDMEIF2
0x48001008 C   FIELD 19w01 CTEIF2: CTEIF2
0x48001008 C   FIELD 20w01 CHTIF2: CHTIF2
0x48001008 C   FIELD 21w01 CTCIF2: CTCIF2
0x48001008 C   FIELD 22w01 CFEIF3: CFEIF3
0x48001008 C   FIELD 24w01 CDMEIF3: CDMEIF3
0x48001008 C   FIELD 25w01 CTEIF3: CTEIF3
0x48001008 C   FIELD 26w01 CHTIF3: CHTIF3
0x48001008 C   FIELD 27w01 CTCIF3: CTCIF3
0x4800100C B  REGISTER DMA_HIFCR (wo): DMA high interrupt flag clear register
0x4800100C C   FIELD 00w01 CFEIF4: CFEIF4
0x4800100C C   FIELD 02w01 CDMEIF4: CDMEIF4
0x4800100C C   FIELD 03w01 CTEIF4: CTEIF4
0x4800100C C   FIELD 04w01 CHTIF4: CHTIF4
0x4800100C C   FIELD 05w01 CTCIF4: CTCIF4
0x4800100C C   FIELD 06w01 CFEIF5: CFEIF5
0x4800100C C   FIELD 08w01 CDMEIF5: CDMEIF5
0x4800100C C   FIELD 09w01 CTEIF5: CTEIF5
0x4800100C C   FIELD 10w01 CHTIF5: CHTIF5
0x4800100C C   FIELD 11w01 CTCIF5: CTCIF5
0x4800100C C   FIELD 16w01 CFEIF6: CFEIF6
0x4800100C C   FIELD 18w01 CDMEIF6: CDMEIF6
0x4800100C C   FIELD 19w01 CTEIF6: CTEIF6
0x4800100C C   FIELD 20w01 CHTIF6: CHTIF6
0x4800100C C   FIELD 21w01 CTCIF6: CTCIF6
0x4800100C C   FIELD 22w01 CFEIF7: CFEIF7
0x4800100C C   FIELD 24w01 CDMEIF7: CDMEIF7
0x4800100C C   FIELD 25w01 CTEIF7: CTEIF7
0x4800100C C   FIELD 26w01 CHTIF7: CHTIF7
0x4800100C C   FIELD 27w01 CTCIF7: CTCIF7
0x48001010 B  REGISTER DMA_S0CR (rw): This register is used to configure the concerned stream.
0x48001010 C   FIELD 00w01 EN: EN
0x48001010 C   FIELD 01w01 DMEIE: DMEIE
0x48001010 C   FIELD 02w01 TEIE: TEIE
0x48001010 C   FIELD 03w01 HTIE: HTIE
0x48001010 C   FIELD 04w01 TCIE: TCIE
0x48001010 C   FIELD 05w01 PFCTRL: PFCTRL
0x48001010 C   FIELD 06w02 DIR: DIR
0x48001010 C   FIELD 08w01 CIRC: CIRC
0x48001010 C   FIELD 09w01 PINC: PINC
0x48001010 C   FIELD 10w01 MINC: MINC
0x48001010 C   FIELD 11w02 PSIZE: PSIZE
0x48001010 C   FIELD 13w02 MSIZE: MSIZE
0x48001010 C   FIELD 15w01 PINCOS: PINCOS
0x48001010 C   FIELD 16w02 PL: PL
0x48001010 C   FIELD 18w01 DBM: DBM
0x48001010 C   FIELD 19w01 CT: CT
0x48001010 C   FIELD 21w02 PBURST: PBURST
0x48001010 C   FIELD 23w02 MBURST: MBURST
0x48001014 B  REGISTER DMA_S0NDTR (rw): DMA stream 0 number of data register
0x48001014 C   FIELD 00w16 NDT: NDT
0x48001018 B  REGISTER DMA_S0PAR (rw): DMA stream 0 peripheral address register
0x48001018 C   FIELD 00w32 PAR: PAR
0x4800101C B  REGISTER DMA_S0M0AR (rw): DMA stream 0 memory 0 address register
0x4800101C C   FIELD 00w32 M0A: M0A
0x48001020 B  REGISTER DMA_S0M1AR (rw): DMA stream 0 memory 1 address register
0x48001020 C   FIELD 00w32 M1A: M1A
0x48001024 B  REGISTER DMA_S0FCR: DMA stream 0 FIFO control register
0x48001024 C   FIELD 00w02 FTH (rw): FTH
0x48001024 C   FIELD 02w01 DMDIS (rw): DMDIS
0x48001024 C   FIELD 03w03 FS (ro): FS
0x48001024 C   FIELD 07w01 FEIE (rw): FEIE
0x48001028 B  REGISTER DMA_S1CR (rw): This register is used to configure the concerned stream.
0x48001028 C   FIELD 00w01 EN: EN
0x48001028 C   FIELD 01w01 DMEIE: DMEIE
0x48001028 C   FIELD 02w01 TEIE: TEIE
0x48001028 C   FIELD 03w01 HTIE: HTIE
0x48001028 C   FIELD 04w01 TCIE: TCIE
0x48001028 C   FIELD 05w01 PFCTRL: PFCTRL
0x48001028 C   FIELD 06w02 DIR: DIR
0x48001028 C   FIELD 08w01 CIRC: CIRC
0x48001028 C   FIELD 09w01 PINC: PINC
0x48001028 C   FIELD 10w01 MINC: MINC
0x48001028 C   FIELD 11w02 PSIZE: PSIZE
0x48001028 C   FIELD 13w02 MSIZE: MSIZE
0x48001028 C   FIELD 15w01 PINCOS: PINCOS
0x48001028 C   FIELD 16w02 PL: PL
0x48001028 C   FIELD 18w01 DBM: DBM
0x48001028 C   FIELD 19w01 CT: CT
0x48001028 C   FIELD 21w02 PBURST: PBURST
0x48001028 C   FIELD 23w02 MBURST: MBURST
0x4800102C B  REGISTER DMA_S1NDTR (rw): DMA stream 1 number of data register
0x4800102C C   FIELD 00w16 NDT: NDT
0x48001030 B  REGISTER DMA_S1PAR (rw): DMA stream 1 peripheral address register
0x48001030 C   FIELD 00w32 PAR: PAR
0x48001034 B  REGISTER DMA_S1M0AR (rw): DMA stream 1 memory 0 address register
0x48001034 C   FIELD 00w32 M0A: M0A
0x48001038 B  REGISTER DMA_S1M1AR (rw): DMA stream 1 memory 1 address register
0x48001038 C   FIELD 00w32 M1A: M1A
0x4800103C B  REGISTER DMA_S1FCR: DMA stream 1 FIFO control register
0x4800103C C   FIELD 00w02 FTH (rw): FTH
0x4800103C C   FIELD 02w01 DMDIS (rw): DMDIS
0x4800103C C   FIELD 03w03 FS (ro): FS
0x4800103C C   FIELD 07w01 FEIE (rw): FEIE
0x48001040 B  REGISTER DMA_S2CR (rw): This register is used to configure the concerned stream.
0x48001040 C   FIELD 00w01 EN: EN
0x48001040 C   FIELD 01w01 DMEIE: DMEIE
0x48001040 C   FIELD 02w01 TEIE: TEIE
0x48001040 C   FIELD 03w01 HTIE: HTIE
0x48001040 C   FIELD 04w01 TCIE: TCIE
0x48001040 C   FIELD 05w01 PFCTRL: PFCTRL
0x48001040 C   FIELD 06w02 DIR: DIR
0x48001040 C   FIELD 08w01 CIRC: CIRC
0x48001040 C   FIELD 09w01 PINC: PINC
0x48001040 C   FIELD 10w01 MINC: MINC
0x48001040 C   FIELD 11w02 PSIZE: PSIZE
0x48001040 C   FIELD 13w02 MSIZE: MSIZE
0x48001040 C   FIELD 15w01 PINCOS: PINCOS
0x48001040 C   FIELD 16w02 PL: PL
0x48001040 C   FIELD 18w01 DBM: DBM
0x48001040 C   FIELD 19w01 CT: CT
0x48001040 C   FIELD 21w02 PBURST: PBURST
0x48001040 C   FIELD 23w02 MBURST: MBURST
0x48001044 B  REGISTER DMA_S2NDTR (rw): DMA stream 2 number of data register
0x48001044 C   FIELD 00w16 NDT: NDT
0x48001048 B  REGISTER DMA_S2PAR (rw): DMA stream 2 peripheral address register
0x48001048 C   FIELD 00w32 PAR: PAR
0x4800104C B  REGISTER DMA_S2M0AR (rw): DMA stream 2 memory 0 address register
0x4800104C C   FIELD 00w32 M0A: M0A
0x48001050 B  REGISTER DMA_S2M1AR (rw): DMA stream 2 memory 1 address register
0x48001050 C   FIELD 00w32 M1A: M1A
0x48001054 B  REGISTER DMA_S2FCR: DMA stream 2 FIFO control register
0x48001054 C   FIELD 00w02 FTH (rw): FTH
0x48001054 C   FIELD 02w01 DMDIS (rw): DMDIS
0x48001054 C   FIELD 03w03 FS (ro): FS
0x48001054 C   FIELD 07w01 FEIE (rw): FEIE
0x48001058 B  REGISTER DMA_S3CR (rw): This register is used to configure the concerned stream.
0x48001058 C   FIELD 00w01 EN: EN
0x48001058 C   FIELD 01w01 DMEIE: DMEIE
0x48001058 C   FIELD 02w01 TEIE: TEIE
0x48001058 C   FIELD 03w01 HTIE: HTIE
0x48001058 C   FIELD 04w01 TCIE: TCIE
0x48001058 C   FIELD 05w01 PFCTRL: PFCTRL
0x48001058 C   FIELD 06w02 DIR: DIR
0x48001058 C   FIELD 08w01 CIRC: CIRC
0x48001058 C   FIELD 09w01 PINC: PINC
0x48001058 C   FIELD 10w01 MINC: MINC
0x48001058 C   FIELD 11w02 PSIZE: PSIZE
0x48001058 C   FIELD 13w02 MSIZE: MSIZE
0x48001058 C   FIELD 15w01 PINCOS: PINCOS
0x48001058 C   FIELD 16w02 PL: PL
0x48001058 C   FIELD 18w01 DBM: DBM
0x48001058 C   FIELD 19w01 CT: CT
0x48001058 C   FIELD 21w02 PBURST: PBURST
0x48001058 C   FIELD 23w02 MBURST: MBURST
0x4800105C B  REGISTER DMA_S3NDTR (rw): DMA stream 3 number of data register
0x4800105C C   FIELD 00w16 NDT: NDT
0x48001060 B  REGISTER DMA_S3PAR (rw): DMA stream 3 peripheral address register
0x48001060 C   FIELD 00w32 PAR: PAR
0x48001064 B  REGISTER DMA_S3M0AR (rw): DMA stream 3 memory 0 address register
0x48001064 C   FIELD 00w32 M0A: M0A
0x48001068 B  REGISTER DMA_S3M1AR (rw): DMA stream 3 memory 1 address register
0x48001068 C   FIELD 00w32 M1A: M1A
0x4800106C B  REGISTER DMA_S3FCR: DMA stream 3 FIFO control register
0x4800106C C   FIELD 00w02 FTH (rw): FTH
0x4800106C C   FIELD 02w01 DMDIS (rw): DMDIS
0x4800106C C   FIELD 03w03 FS (ro): FS
0x4800106C C   FIELD 07w01 FEIE (rw): FEIE
0x48001070 B  REGISTER DMA_S4CR (rw): This register is used to configure the concerned stream.
0x48001070 C   FIELD 00w01 EN: EN
0x48001070 C   FIELD 01w01 DMEIE: DMEIE
0x48001070 C   FIELD 02w01 TEIE: TEIE
0x48001070 C   FIELD 03w01 HTIE: HTIE
0x48001070 C   FIELD 04w01 TCIE: TCIE
0x48001070 C   FIELD 05w01 PFCTRL: PFCTRL
0x48001070 C   FIELD 06w02 DIR: DIR
0x48001070 C   FIELD 08w01 CIRC: CIRC
0x48001070 C   FIELD 09w01 PINC: PINC
0x48001070 C   FIELD 10w01 MINC: MINC
0x48001070 C   FIELD 11w02 PSIZE: PSIZE
0x48001070 C   FIELD 13w02 MSIZE: MSIZE
0x48001070 C   FIELD 15w01 PINCOS: PINCOS
0x48001070 C   FIELD 16w02 PL: PL
0x48001070 C   FIELD 18w01 DBM: DBM
0x48001070 C   FIELD 19w01 CT: CT
0x48001070 C   FIELD 21w02 PBURST: PBURST
0x48001070 C   FIELD 23w02 MBURST: MBURST
0x48001074 B  REGISTER DMA_S4NDTR (rw): DMA stream 4 number of data register
0x48001074 C   FIELD 00w16 NDT: NDT
0x48001078 B  REGISTER DMA_S4PAR (rw): DMA stream 4 peripheral address register
0x48001078 C   FIELD 00w32 PAR: PAR
0x4800107C B  REGISTER DMA_S4M0AR (rw): DMA stream 4 memory 0 address register
0x4800107C C   FIELD 00w32 M0A: M0A
0x48001080 B  REGISTER DMA_S4M1AR (rw): DMA stream 4 memory 1 address register
0x48001080 C   FIELD 00w32 M1A: M1A
0x48001084 B  REGISTER DMA_S4FCR: DMA stream 4 FIFO control register
0x48001084 C   FIELD 00w02 FTH (rw): FTH
0x48001084 C   FIELD 02w01 DMDIS (rw): DMDIS
0x48001084 C   FIELD 03w03 FS (ro): FS
0x48001084 C   FIELD 07w01 FEIE (rw): FEIE
0x48001088 B  REGISTER DMA_S5CR (rw): This register is used to configure the concerned stream.
0x48001088 C   FIELD 00w01 EN: EN
0x48001088 C   FIELD 01w01 DMEIE: DMEIE
0x48001088 C   FIELD 02w01 TEIE: TEIE
0x48001088 C   FIELD 03w01 HTIE: HTIE
0x48001088 C   FIELD 04w01 TCIE: TCIE
0x48001088 C   FIELD 05w01 PFCTRL: PFCTRL
0x48001088 C   FIELD 06w02 DIR: DIR
0x48001088 C   FIELD 08w01 CIRC: CIRC
0x48001088 C   FIELD 09w01 PINC: PINC
0x48001088 C   FIELD 10w01 MINC: MINC
0x48001088 C   FIELD 11w02 PSIZE: PSIZE
0x48001088 C   FIELD 13w02 MSIZE: MSIZE
0x48001088 C   FIELD 15w01 PINCOS: PINCOS
0x48001088 C   FIELD 16w02 PL: PL
0x48001088 C   FIELD 18w01 DBM: DBM
0x48001088 C   FIELD 19w01 CT: CT
0x48001088 C   FIELD 21w02 PBURST: PBURST
0x48001088 C   FIELD 23w02 MBURST: MBURST
0x4800108C B  REGISTER DMA_S5NDTR (rw): DMA stream 5 number of data register
0x4800108C C   FIELD 00w16 NDT: NDT
0x48001090 B  REGISTER DMA_S5PAR (rw): DMA stream 5 peripheral address register
0x48001090 C   FIELD 00w32 PAR: PAR
0x48001094 B  REGISTER DMA_S5M0AR (rw): DMA stream 5 memory 0 address register
0x48001094 C   FIELD 00w32 M0A: M0A
0x48001098 B  REGISTER DMA_S5M1AR (rw): DMA stream 5 memory 1 address register
0x48001098 C   FIELD 00w32 M1A: M1A
0x4800109C B  REGISTER DMA_S5FCR: DMA stream 5 FIFO control register
0x4800109C C   FIELD 00w02 FTH (rw): FTH
0x4800109C C   FIELD 02w01 DMDIS (rw): DMDIS
0x4800109C C   FIELD 03w03 FS (ro): FS
0x4800109C C   FIELD 07w01 FEIE (rw): FEIE
0x480010A0 B  REGISTER DMA_S6CR (rw): This register is used to configure the concerned stream.
0x480010A0 C   FIELD 00w01 EN: EN
0x480010A0 C   FIELD 01w01 DMEIE: DMEIE
0x480010A0 C   FIELD 02w01 TEIE: TEIE
0x480010A0 C   FIELD 03w01 HTIE: HTIE
0x480010A0 C   FIELD 04w01 TCIE: TCIE
0x480010A0 C   FIELD 05w01 PFCTRL: PFCTRL
0x480010A0 C   FIELD 06w02 DIR: DIR
0x480010A0 C   FIELD 08w01 CIRC: CIRC
0x480010A0 C   FIELD 09w01 PINC: PINC
0x480010A0 C   FIELD 10w01 MINC: MINC
0x480010A0 C   FIELD 11w02 PSIZE: PSIZE
0x480010A0 C   FIELD 13w02 MSIZE: MSIZE
0x480010A0 C   FIELD 15w01 PINCOS: PINCOS
0x480010A0 C   FIELD 16w02 PL: PL
0x480010A0 C   FIELD 18w01 DBM: DBM
0x480010A0 C   FIELD 19w01 CT: CT
0x480010A0 C   FIELD 21w02 PBURST: PBURST
0x480010A0 C   FIELD 23w02 MBURST: MBURST
0x480010A4 B  REGISTER DMA_S6NDTR (rw): DMA stream 6 number of data register
0x480010A4 C   FIELD 00w16 NDT: NDT
0x480010A8 B  REGISTER DMA_S6PAR (rw): DMA stream 6 peripheral address register
0x480010A8 C   FIELD 00w32 PAR: PAR
0x480010AC B  REGISTER DMA_S6M0AR (rw): DMA stream 6 memory 0 address register
0x480010AC C   FIELD 00w32 M0A: M0A
0x480010B0 B  REGISTER DMA_S6M1AR (rw): DMA stream 6 memory 1 address register
0x480010B0 C   FIELD 00w32 M1A: M1A
0x480010B4 B  REGISTER DMA_S6FCR: DMA stream 6 FIFO control register
0x480010B4 C   FIELD 00w02 FTH (rw): FTH
0x480010B4 C   FIELD 02w01 DMDIS (rw): DMDIS
0x480010B4 C   FIELD 03w03 FS (ro): FS
0x480010B4 C   FIELD 07w01 FEIE (rw): FEIE
0x480010B8 B  REGISTER DMA_S7CR (rw): This register is used to configure the concerned stream.
0x480010B8 C   FIELD 00w01 EN: EN
0x480010B8 C   FIELD 01w01 DMEIE: DMEIE
0x480010B8 C   FIELD 02w01 TEIE: TEIE
0x480010B8 C   FIELD 03w01 HTIE: HTIE
0x480010B8 C   FIELD 04w01 TCIE: TCIE
0x480010B8 C   FIELD 05w01 PFCTRL: PFCTRL
0x480010B8 C   FIELD 06w02 DIR: DIR
0x480010B8 C   FIELD 08w01 CIRC: CIRC
0x480010B8 C   FIELD 09w01 PINC: PINC
0x480010B8 C   FIELD 10w01 MINC: MINC
0x480010B8 C   FIELD 11w02 PSIZE: PSIZE
0x480010B8 C   FIELD 13w02 MSIZE: MSIZE
0x480010B8 C   FIELD 15w01 PINCOS: PINCOS
0x480010B8 C   FIELD 16w02 PL: PL
0x480010B8 C   FIELD 18w01 DBM: DBM
0x480010B8 C   FIELD 19w01 CT: CT
0x480010B8 C   FIELD 21w02 PBURST: PBURST
0x480010B8 C   FIELD 23w02 MBURST: MBURST
0x480010BC B  REGISTER DMA_S7NDTR (rw): DMA stream 7 number of data register
0x480010BC C   FIELD 00w16 NDT: NDT
0x480010C0 B  REGISTER DMA_S7PAR (rw): DMA stream 7 peripheral address register
0x480010C0 C   FIELD 00w32 PAR: PAR
0x480010C4 B  REGISTER DMA_S7M0AR (rw): DMA stream 7 memory 0 address register
0x480010C4 C   FIELD 00w32 M0A: M0A
0x480010C8 B  REGISTER DMA_S7M1AR (rw): DMA stream 7 memory 1 address register
0x480010C8 C   FIELD 00w32 M1A: M1A
0x480010CC B  REGISTER DMA_S7FCR: DMA stream 7 FIFO control register
0x480010CC C   FIELD 00w02 FTH (rw): FTH
0x480010CC C   FIELD 02w01 DMDIS (rw): DMDIS
0x480010CC C   FIELD 03w03 FS (ro): FS
0x480010CC C   FIELD 07w01 FEIE (rw): FEIE
0x480013EC B  REGISTER DMA_HWCFGR2 (ro): DMA hardware configuration 2register
0x480013EC C   FIELD 00w02 FIFO_SIZE: FIFO_SIZE
0x480013EC C   FIELD 04w01 WRITE_BUFFERABLE: WRITE_BUFFERABLE
0x480013EC C   FIELD 08w03 CHSEL_WIDTH: CHSEL_WIDTH
0x480013F0 B  REGISTER DMA_HWCFGR1 (ro): DMA hardware configuration 1 register
0x480013F0 C   FIELD 00w02 DMA_DEF0: DMA_DEF0
0x480013F0 C   FIELD 04w02 DMA_DEF1: DMA_DEF1
0x480013F0 C   FIELD 08w02 DMA_DEF2: DMA_DEF2
0x480013F0 C   FIELD 12w02 DMA_DEF3: DMA_DEF3
0x480013F0 C   FIELD 16w02 DMA_DEF4: DMA_DEF4
0x480013F0 C   FIELD 20w02 DMA_DEF5: DMA_DEF5
0x480013F0 C   FIELD 24w02 DMA_DEF6: DMA_DEF6
0x480013F0 C   FIELD 28w02 DMA_DEF7: DMA_DEF7
0x480013F4 B  REGISTER DMA_VERR (ro): This register identifies the version of the IP.
0x480013F4 C   FIELD 00w04 MINREV: MINREV
0x480013F4 C   FIELD 04w04 MAJREV: MAJREV
0x480013F8 B  REGISTER DMA_IPDR (ro): DMA IP identification register
0x480013F8 C   FIELD 00w32 ID: ID
0x480013FC B  REGISTER DMA_SIDR (ro): DMA size identification register
0x480013FC C   FIELD 00w32 SID: SID
0x48002000 A PERIPHERAL DMAMUX1
0x48002000 B  REGISTER DMAMUX_C0CR (rw): DMAMUX request line multiplexer channel 0 configuration register
0x48002000 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002000 C   FIELD 08w01 SOIE: SOIE
0x48002000 C   FIELD 09w01 EGE: EGE
0x48002000 C   FIELD 16w01 SE: SE
0x48002000 C   FIELD 17w02 SPOL: SPOL
0x48002000 C   FIELD 19w05 NBREQ: NBREQ
0x48002000 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002004 B  REGISTER DMAMUX_C1CR (rw): DMAMUX request line multiplexer channel 1 configuration register
0x48002004 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002004 C   FIELD 08w01 SOIE: SOIE
0x48002004 C   FIELD 09w01 EGE: EGE
0x48002004 C   FIELD 16w01 SE: SE
0x48002004 C   FIELD 17w02 SPOL: SPOL
0x48002004 C   FIELD 19w05 NBREQ: NBREQ
0x48002004 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002008 B  REGISTER DMAMUX_C2CR (rw): DMAMUX request line multiplexer channel 2 configuration register
0x48002008 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002008 C   FIELD 08w01 SOIE: SOIE
0x48002008 C   FIELD 09w01 EGE: EGE
0x48002008 C   FIELD 16w01 SE: SE
0x48002008 C   FIELD 17w02 SPOL: SPOL
0x48002008 C   FIELD 19w05 NBREQ: NBREQ
0x48002008 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x4800200C B  REGISTER DMAMUX_C3CR (rw): DMAMUX request line multiplexer channel 3 configuration register
0x4800200C C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x4800200C C   FIELD 08w01 SOIE: SOIE
0x4800200C C   FIELD 09w01 EGE: EGE
0x4800200C C   FIELD 16w01 SE: SE
0x4800200C C   FIELD 17w02 SPOL: SPOL
0x4800200C C   FIELD 19w05 NBREQ: NBREQ
0x4800200C C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002010 B  REGISTER DMAMUX_C4CR (rw): DMAMUX request line multiplexer channel 4 configuration register
0x48002010 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002010 C   FIELD 08w01 SOIE: SOIE
0x48002010 C   FIELD 09w01 EGE: EGE
0x48002010 C   FIELD 16w01 SE: SE
0x48002010 C   FIELD 17w02 SPOL: SPOL
0x48002010 C   FIELD 19w05 NBREQ: NBREQ
0x48002010 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002014 B  REGISTER DMAMUX_C5CR (rw): DMAMUX request line multiplexer channel 5 configuration register
0x48002014 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002014 C   FIELD 08w01 SOIE: SOIE
0x48002014 C   FIELD 09w01 EGE: EGE
0x48002014 C   FIELD 16w01 SE: SE
0x48002014 C   FIELD 17w02 SPOL: SPOL
0x48002014 C   FIELD 19w05 NBREQ: NBREQ
0x48002014 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002018 B  REGISTER DMAMUX_C6CR (rw): DMAMUX request line multiplexer channel 6 configuration register
0x48002018 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002018 C   FIELD 08w01 SOIE: SOIE
0x48002018 C   FIELD 09w01 EGE: EGE
0x48002018 C   FIELD 16w01 SE: SE
0x48002018 C   FIELD 17w02 SPOL: SPOL
0x48002018 C   FIELD 19w05 NBREQ: NBREQ
0x48002018 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x4800201C B  REGISTER DMAMUX_C7CR (rw): DMAMUX request line multiplexer channel 7 configuration register
0x4800201C C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x4800201C C   FIELD 08w01 SOIE: SOIE
0x4800201C C   FIELD 09w01 EGE: EGE
0x4800201C C   FIELD 16w01 SE: SE
0x4800201C C   FIELD 17w02 SPOL: SPOL
0x4800201C C   FIELD 19w05 NBREQ: NBREQ
0x4800201C C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002020 B  REGISTER DMAMUX_C8CR (rw): DMAMUX request line multiplexer channel 8 configuration register
0x48002020 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002020 C   FIELD 08w01 SOIE: SOIE
0x48002020 C   FIELD 09w01 EGE: EGE
0x48002020 C   FIELD 16w01 SE: SE
0x48002020 C   FIELD 17w02 SPOL: SPOL
0x48002020 C   FIELD 19w05 NBREQ: NBREQ
0x48002020 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002024 B  REGISTER DMAMUX_C9CR (rw): DMAMUX request line multiplexer channel 9 configuration register
0x48002024 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002024 C   FIELD 08w01 SOIE: SOIE
0x48002024 C   FIELD 09w01 EGE: EGE
0x48002024 C   FIELD 16w01 SE: SE
0x48002024 C   FIELD 17w02 SPOL: SPOL
0x48002024 C   FIELD 19w05 NBREQ: NBREQ
0x48002024 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002028 B  REGISTER DMAMUX_C10CR (rw): DMAMUX request line multiplexer channel 10 configuration register
0x48002028 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002028 C   FIELD 08w01 SOIE: SOIE
0x48002028 C   FIELD 09w01 EGE: EGE
0x48002028 C   FIELD 16w01 SE: SE
0x48002028 C   FIELD 17w02 SPOL: SPOL
0x48002028 C   FIELD 19w05 NBREQ: NBREQ
0x48002028 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x4800202C B  REGISTER DMAMUX_C11CR (rw): DMAMUX request line multiplexer channel 11 configuration register
0x4800202C C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x4800202C C   FIELD 08w01 SOIE: SOIE
0x4800202C C   FIELD 09w01 EGE: EGE
0x4800202C C   FIELD 16w01 SE: SE
0x4800202C C   FIELD 17w02 SPOL: SPOL
0x4800202C C   FIELD 19w05 NBREQ: NBREQ
0x4800202C C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002030 B  REGISTER DMAMUX_C12CR (rw): DMAMUX request line multiplexer channel 12 configuration register
0x48002030 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002030 C   FIELD 08w01 SOIE: SOIE
0x48002030 C   FIELD 09w01 EGE: EGE
0x48002030 C   FIELD 16w01 SE: SE
0x48002030 C   FIELD 17w02 SPOL: SPOL
0x48002030 C   FIELD 19w05 NBREQ: NBREQ
0x48002030 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002034 B  REGISTER DMAMUX_C13CR (rw): DMAMUX request line multiplexer channel 13 configuration register
0x48002034 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002034 C   FIELD 08w01 SOIE: SOIE
0x48002034 C   FIELD 09w01 EGE: EGE
0x48002034 C   FIELD 16w01 SE: SE
0x48002034 C   FIELD 17w02 SPOL: SPOL
0x48002034 C   FIELD 19w05 NBREQ: NBREQ
0x48002034 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002038 B  REGISTER DMAMUX_C14CR (rw): DMAMUX request line multiplexer channel 14 configuration register
0x48002038 C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x48002038 C   FIELD 08w01 SOIE: SOIE
0x48002038 C   FIELD 09w01 EGE: EGE
0x48002038 C   FIELD 16w01 SE: SE
0x48002038 C   FIELD 17w02 SPOL: SPOL
0x48002038 C   FIELD 19w05 NBREQ: NBREQ
0x48002038 C   FIELD 24w03 SYNC_ID: SYNC_ID
0x4800203C B  REGISTER DMAMUX_C15CR (rw): DMAMUX request line multiplexer channel 15 configuration register
0x4800203C C   FIELD 00w07 DMAREQ_ID: DMAREQ_ID
0x4800203C C   FIELD 08w01 SOIE: SOIE
0x4800203C C   FIELD 09w01 EGE: EGE
0x4800203C C   FIELD 16w01 SE: SE
0x4800203C C   FIELD 17w02 SPOL: SPOL
0x4800203C C   FIELD 19w05 NBREQ: NBREQ
0x4800203C C   FIELD 24w03 SYNC_ID: SYNC_ID
0x48002080 B  REGISTER DMAMUX_CSR (ro): DMAMUX request line multiplexer interrupt channel status register
0x48002080 C   FIELD 00w01 SOF0: SOF0
0x48002080 C   FIELD 01w01 SOF1: SOF1
0x48002080 C   FIELD 02w01 SOF2: SOF2
0x48002080 C   FIELD 03w01 SOF3: SOF3
0x48002080 C   FIELD 04w01 SOF4: SOF4
0x48002080 C   FIELD 05w01 SOF5: SOF5
0x48002080 C   FIELD 06w01 SOF6: SOF6
0x48002080 C   FIELD 07w01 SOF7: SOF7
0x48002080 C   FIELD 08w01 SOF8: SOF8
0x48002080 C   FIELD 09w01 SOF9: SOF9
0x48002080 C   FIELD 10w01 SOF10: SOF10
0x48002080 C   FIELD 11w01 SOF11: SOF11
0x48002080 C   FIELD 12w01 SOF12: SOF12
0x48002080 C   FIELD 13w01 SOF13: SOF13
0x48002080 C   FIELD 14w01 SOF14: SOF14
0x48002080 C   FIELD 15w01 SOF15: SOF15
0x48002084 B  REGISTER DMAMUX_CFR (wo): DMAMUX request line multiplexer interrupt clear flag register
0x48002084 C   FIELD 00w01 CSOF0: CSOF0
0x48002084 C   FIELD 01w01 CSOF1: CSOF1
0x48002084 C   FIELD 02w01 CSOF2: CSOF2
0x48002084 C   FIELD 03w01 CSOF3: CSOF3
0x48002084 C   FIELD 04w01 CSOF4: CSOF4
0x48002084 C   FIELD 05w01 CSOF5: CSOF5
0x48002084 C   FIELD 06w01 CSOF6: CSOF6
0x48002084 C   FIELD 07w01 CSOF7: CSOF7
0x48002084 C   FIELD 08w01 CSOF8: CSOF8
0x48002084 C   FIELD 09w01 CSOF9: CSOF9
0x48002084 C   FIELD 10w01 CSOF10: CSOF10
0x48002084 C   FIELD 11w01 CSOF11: CSOF11
0x48002084 C   FIELD 12w01 CSOF12: CSOF12
0x48002084 C   FIELD 13w01 CSOF13: CSOF13
0x48002084 C   FIELD 14w01 CSOF14: CSOF14
0x48002084 C   FIELD 15w01 CSOF15: CSOF15
0x48002100 B  REGISTER DMAMUX_RG0CR (rw): DMAMUX request generator channel 0 configuration register
0x48002100 C   FIELD 00w03 SIG_ID: SIG_ID
0x48002100 C   FIELD 08w01 OIE: OIE
0x48002100 C   FIELD 16w01 GE: GE
0x48002100 C   FIELD 17w02 GPOL: GPOL
0x48002100 C   FIELD 19w05 GNBREQ: GNBREQ
0x48002104 B  REGISTER DMAMUX_RG1CR (rw): DMAMUX request generator channel 1 configuration register
0x48002104 C   FIELD 00w03 SIG_ID: SIG_ID
0x48002104 C   FIELD 08w01 OIE: OIE
0x48002104 C   FIELD 16w01 GE: GE
0x48002104 C   FIELD 17w02 GPOL: GPOL
0x48002104 C   FIELD 19w05 GNBREQ: GNBREQ
0x48002108 B  REGISTER DMAMUX_RG2CR (rw): DMAMUX request generator channel 2 configuration register
0x48002108 C   FIELD 00w03 SIG_ID: SIG_ID
0x48002108 C   FIELD 08w01 OIE: OIE
0x48002108 C   FIELD 16w01 GE: GE
0x48002108 C   FIELD 17w02 GPOL: GPOL
0x48002108 C   FIELD 19w05 GNBREQ: GNBREQ
0x4800210C B  REGISTER DMAMUX_RG3CR (rw): DMAMUX request generator channel 3 configuration register
0x4800210C C   FIELD 00w03 SIG_ID: SIG_ID
0x4800210C C   FIELD 08w01 OIE: OIE
0x4800210C C   FIELD 16w01 GE: GE
0x4800210C C   FIELD 17w02 GPOL: GPOL
0x4800210C C   FIELD 19w05 GNBREQ: GNBREQ
0x48002110 B  REGISTER DMAMUX_RG4CR (rw): DMAMUX request generator channel 4 configuration register
0x48002110 C   FIELD 00w03 SIG_ID: SIG_ID
0x48002110 C   FIELD 08w01 OIE: OIE
0x48002110 C   FIELD 16w01 GE: GE
0x48002110 C   FIELD 17w02 GPOL: GPOL
0x48002110 C   FIELD 19w05 GNBREQ: GNBREQ
0x48002114 B  REGISTER DMAMUX_RG5CR (rw): DMAMUX request generator channel 5 configuration register
0x48002114 C   FIELD 00w03 SIG_ID: SIG_ID
0x48002114 C   FIELD 08w01 OIE: OIE
0x48002114 C   FIELD 16w01 GE: GE
0x48002114 C   FIELD 17w02 GPOL: GPOL
0x48002114 C   FIELD 19w05 GNBREQ: GNBREQ
0x48002118 B  REGISTER DMAMUX_RG6CR (rw): DMAMUX request generator channel 6 configuration register
0x48002118 C   FIELD 00w03 SIG_ID: SIG_ID
0x48002118 C   FIELD 08w01 OIE: OIE
0x48002118 C   FIELD 16w01 GE: GE
0x48002118 C   FIELD 17w02 GPOL: GPOL
0x48002118 C   FIELD 19w05 GNBREQ: GNBREQ
0x4800211C B  REGISTER DMAMUX_RG7CR (rw): DMAMUX request generator channel 7 configuration register
0x4800211C C   FIELD 00w03 SIG_ID: SIG_ID
0x4800211C C   FIELD 08w01 OIE: OIE
0x4800211C C   FIELD 16w01 GE: GE
0x4800211C C   FIELD 17w02 GPOL: GPOL
0x4800211C C   FIELD 19w05 GNBREQ: GNBREQ
0x48002140 B  REGISTER DMAMUX_RGSR (ro): DMAMUX request generator interrupt status register
0x48002140 C   FIELD 00w01 OF0: OF0
0x48002140 C   FIELD 01w01 OF1: OF1
0x48002140 C   FIELD 02w01 OF2: OF2
0x48002140 C   FIELD 03w01 OF3: OF3
0x48002140 C   FIELD 04w01 OF4: OF4
0x48002140 C   FIELD 05w01 OF5: OF5
0x48002140 C   FIELD 06w01 OF6: OF6
0x48002140 C   FIELD 07w01 OF7: OF7
0x48002144 B  REGISTER DMAMUX_RGCFR (wo): DMAMUX request generator interrupt clear flag register
0x48002144 C   FIELD 00w01 COF0: COF0
0x48002144 C   FIELD 01w01 COF1: COF1
0x48002144 C   FIELD 02w01 COF2: COF2
0x48002144 C   FIELD 03w01 COF3: COF3
0x48002144 C   FIELD 04w01 COF4: COF4
0x48002144 C   FIELD 05w01 COF5: COF5
0x48002144 C   FIELD 06w01 COF6: COF6
0x48002144 C   FIELD 07w01 COF7: COF7
0x480023EC B  REGISTER DMAMUX_HWCFGR2 (ro): DMAMUX hardware configuration 2 register
0x480023EC C   FIELD 00w08 NUM_DMA_EXT_REQ: NUM_DMA_EXT_REQ
0x480023F0 B  REGISTER DMAMUX_HWCFGR1 (ro): DMAMUX hardware configuration 1 register
0x480023F0 C   FIELD 00w08 NUM_DMA_STREAMS: NUM_DMA_STREAMS
0x480023F0 C   FIELD 08w08 NUM_DMA_PERIPH_REQ: NUM_DMA_PERIPH_REQ
0x480023F0 C   FIELD 16w08 NUM_DMA_TRIG: NUM_DMA_TRIG
0x480023F0 C   FIELD 24w08 NUM_DMA_REQGEN: NUM_DMA_REQGEN
0x480023F4 B  REGISTER DMAMUX_VERR (ro): This register identifies the IP version.
0x480023F4 C   FIELD 00w04 MINREV: MINREV
0x480023F4 C   FIELD 04w04 MAJREV: MAJREV
0x480023F8 B  REGISTER DMAMUX_IPIDR (ro): This register identifies the IP.
0x480023F8 C   FIELD 00w32 ID: ID
0x480023FC B  REGISTER DMAMUX_SIDR (ro): DMAMUX size identification register
0x480023FC C   FIELD 00w32 SID: SID
0x48003000 A PERIPHERAL ADC
0x48003000 B  REGISTER ADC_ISR (rw): ADC interrupt and status register
0x48003000 C   FIELD 00w01 ADRDY: ADRDY
0x48003000 C   FIELD 01w01 EOSMP: EOSMP
0x48003000 C   FIELD 02w01 EOC: EOC
0x48003000 C   FIELD 03w01 EOS: EOS
0x48003000 C   FIELD 04w01 OVR: OVR
0x48003000 C   FIELD 05w01 JEOC: JEOC
0x48003000 C   FIELD 06w01 JEOS: JEOS
0x48003000 C   FIELD 07w01 AWD1: AWD1
0x48003000 C   FIELD 08w01 AWD2: AWD2
0x48003000 C   FIELD 09w01 AWD3: AWD3
0x48003000 C   FIELD 10w01 JQOVF: JQOVF
0x48003004 B  REGISTER ADC_IER (rw): ADC interrupt enable register
0x48003004 C   FIELD 00w01 ADRDYIE: ADRDYIE
0x48003004 C   FIELD 01w01 EOSMPIE: EOSMPIE
0x48003004 C   FIELD 02w01 EOCIE: EOCIE
0x48003004 C   FIELD 03w01 EOSIE: EOSIE
0x48003004 C   FIELD 04w01 OVRIE: OVRIE
0x48003004 C   FIELD 05w01 JEOCIE: JEOCIE
0x48003004 C   FIELD 06w01 JEOSIE: JEOSIE
0x48003004 C   FIELD 07w01 AWD1IE: AWD1IE
0x48003004 C   FIELD 08w01 AWD2IE: AWD2IE
0x48003004 C   FIELD 09w01 AWD3IE: AWD3IE
0x48003004 C   FIELD 10w01 JQOVFIE: JQOVFIE
0x48003008 B  REGISTER ADC_CR (rw): ADC control register
0x48003008 C   FIELD 00w01 ADEN: ADEN
0x48003008 C   FIELD 01w01 ADDIS: ADDIS
0x48003008 C   FIELD 02w01 ADSTART: ADSTART
0x48003008 C   FIELD 03w01 JADSTART: JADSTART
0x48003008 C   FIELD 04w01 ADSTP: ADSTP
0x48003008 C   FIELD 05w01 JADSTP: JADSTP
0x48003008 C   FIELD 08w01 BOOST: BOOST
0x48003008 C   FIELD 16w01 ADCALLIN: ADCALLIN
0x48003008 C   FIELD 22w01 LINCALRDYW1: LINCALRDYW1
0x48003008 C   FIELD 23w01 LINCALRDYW2: LINCALRDYW2
0x48003008 C   FIELD 24w01 LINCALRDYW3: LINCALRDYW3
0x48003008 C   FIELD 25w01 LINCALRDYW4: LINCALRDYW4
0x48003008 C   FIELD 26w01 LINCALRDYW5: LINCALRDYW5
0x48003008 C   FIELD 27w01 LINCALRDYW6: LINCALRDYW6
0x48003008 C   FIELD 28w01 ADVREGEN: ADVREGEN
0x48003008 C   FIELD 29w01 DEEPPWD: DEEPPWD
0x48003008 C   FIELD 30w01 ADCALDIF: ADCALDIF
0x48003008 C   FIELD 31w01 ADCAL: ADCAL
0x4800300C B  REGISTER ADC_CFGR (rw): ADC configuration register
0x4800300C C   FIELD 00w02 DMNGT: DMNGT
0x4800300C C   FIELD 02w03 RES: RES
0x4800300C C   FIELD 05w05 EXTSEL: EXTSEL
0x4800300C C   FIELD 10w02 EXTEN: EXTEN
0x4800300C C   FIELD 12w01 OVRMOD: OVRMOD
0x4800300C C   FIELD 13w01 CONT: CONT
0x4800300C C   FIELD 14w01 AUTDLY: AUTDLY
0x4800300C C   FIELD 16w01 DISCEN: DISCEN
0x4800300C C   FIELD 17w03 DISCNUM: DISCNUM
0x4800300C C   FIELD 20w01 JDISCEN: JDISCEN
0x4800300C C   FIELD 21w01 JQM: JQM
0x4800300C C   FIELD 22w01 AWD1SGL: AWD1SGL
0x4800300C C   FIELD 23w01 AWD1EN: AWD1EN
0x4800300C C   FIELD 24w01 JAWD1EN: JAWD1EN
0x4800300C C   FIELD 25w01 JAUTO: JAUTO
0x4800300C C   FIELD 26w05 AWD1CH: AWD1CH
0x4800300C C   FIELD 31w01 JQDIS: JQDIS
0x48003010 B  REGISTER ADC_CFGR2 (rw): ADC configuration register 2
0x48003010 C   FIELD 00w01 ROVSE: ROVSE
0x48003010 C   FIELD 01w01 JOVSE: JOVSE
0x48003010 C   FIELD 05w04 OVSS: OVSS
0x48003010 C   FIELD 09w01 TROVS: TROVS
0x48003010 C   FIELD 10w01 ROVSM: ROVSM
0x48003010 C   FIELD 11w01 RSHIFT1: RSHIFT1
0x48003010 C   FIELD 12w01 RSHIFT2: RSHIFT2
0x48003010 C   FIELD 13w01 RSHIFT3: RSHIFT3
0x48003010 C   FIELD 14w01 RSHIFT4: RSHIFT4
0x48003010 C   FIELD 16w10 OSVR: OSVR
0x48003010 C   FIELD 28w04 LSHIFT: LSHIFT
0x48003014 B  REGISTER ADC_SMPR1 (rw): ADC sample time register 1
0x48003014 C   FIELD 00w03 SMP0: SMP0
0x48003014 C   FIELD 03w03 SMP1: SMP1
0x48003014 C   FIELD 06w03 SMP2: SMP2
0x48003014 C   FIELD 09w03 SMP3: SMP3
0x48003014 C   FIELD 12w03 SMP4: SMP4
0x48003014 C   FIELD 15w03 SMP5: SMP5
0x48003014 C   FIELD 18w03 SMP6: SMP6
0x48003014 C   FIELD 21w03 SMP7: SMP7
0x48003014 C   FIELD 24w03 SMP8: SMP8
0x48003014 C   FIELD 27w03 SMP9: SMP9
0x48003018 B  REGISTER ADC_SMPR2 (rw): ADC sample time register 2
0x48003018 C   FIELD 00w03 SMP10: SMP10
0x48003018 C   FIELD 03w03 SMP11: SMP11
0x48003018 C   FIELD 06w03 SMP12: SMP12
0x48003018 C   FIELD 09w03 SMP13: SMP13
0x48003018 C   FIELD 12w03 SMP14: SMP14
0x48003018 C   FIELD 15w03 SMP15: SMP15
0x48003018 C   FIELD 18w03 SMP16: SMP16
0x48003018 C   FIELD 21w03 SMP17: SMP17
0x48003018 C   FIELD 24w03 SMP18: SMP18
0x48003018 C   FIELD 27w03 SMP19: SMP19
0x4800301C B  REGISTER ADC_PCSEL (rw): ADC channel preselection register
0x4800301C C   FIELD 00w01 PCSEL0: PCSEL0
0x4800301C C   FIELD 01w01 PCSEL1: PCSEL1
0x4800301C C   FIELD 02w01 PCSEL2: PCSEL2
0x4800301C C   FIELD 03w01 PCSEL3: PCSEL3
0x4800301C C   FIELD 04w01 PCSEL4: PCSEL4
0x4800301C C   FIELD 05w01 PCSEL5: PCSEL5
0x4800301C C   FIELD 06w01 PCSEL6: PCSEL6
0x4800301C C   FIELD 07w01 PCSEL7: PCSEL7
0x4800301C C   FIELD 08w01 PCSEL8: PCSEL8
0x4800301C C   FIELD 09w01 PCSEL9: PCSEL9
0x4800301C C   FIELD 10w01 PCSEL10: PCSEL10
0x4800301C C   FIELD 11w01 PCSEL11: PCSEL11
0x4800301C C   FIELD 12w01 PCSEL12: PCSEL12
0x4800301C C   FIELD 13w01 PCSEL13: PCSEL13
0x4800301C C   FIELD 14w01 PCSEL14: PCSEL14
0x4800301C C   FIELD 15w01 PCSEL15: PCSEL15
0x4800301C C   FIELD 16w01 PCSEL16: PCSEL16
0x4800301C C   FIELD 17w01 PCSEL17: PCSEL17
0x4800301C C   FIELD 18w01 PCSEL18: PCSEL18
0x4800301C C   FIELD 19w01 PCSEL19: PCSEL19
0x48003020 B  REGISTER ADC_LTR1 (rw): ADC watchdog threshold register 1
0x48003020 C   FIELD 00w26 LTR1: LTR1
0x48003024 B  REGISTER ADC_HTR1 (rw): ADC watchdog threshold register 1
0x48003024 C   FIELD 00w26 HTR1: HTR1
0x48003030 B  REGISTER ADC_SQR1 (rw): ADC regular sequence register 1
0x48003030 C   FIELD 00w04 L: L
0x48003030 C   FIELD 06w05 SQ1: SQ1
0x48003030 C   FIELD 12w05 SQ2: SQ2
0x48003030 C   FIELD 18w05 SQ3: SQ3
0x48003030 C   FIELD 24w05 SQ4: SQ4
0x48003034 B  REGISTER ADC_SQR2 (rw): ADC regular sequence register 2
0x48003034 C   FIELD 00w05 SQ5: SQ5
0x48003034 C   FIELD 06w05 SQ6: SQ6
0x48003034 C   FIELD 12w05 SQ7: SQ7
0x48003034 C   FIELD 18w05 SQ8: SQ8
0x48003034 C   FIELD 24w05 SQ9: SQ9
0x48003038 B  REGISTER ADC_SQR3 (rw): ADC regular sequence register 3
0x48003038 C   FIELD 00w05 SQ10: SQ10
0x48003038 C   FIELD 06w05 SQ11: SQ11
0x48003038 C   FIELD 12w05 SQ12: SQ12
0x48003038 C   FIELD 18w05 SQ13: SQ13
0x48003038 C   FIELD 24w05 SQ14: SQ14
0x4800303C B  REGISTER ADC_SQR4 (rw): ADC regular sequence register 4
0x4800303C C   FIELD 00w05 SQ15: SQ15
0x4800303C C   FIELD 06w05 SQ16: SQ16
0x48003040 B  REGISTER ADC_DR (ro): ADC regular Data Register
0x48003040 C   FIELD 00w32 RDATA: RDATA
0x4800304C B  REGISTER ADC_JSQR (rw): ADC injected sequence register
0x4800304C C   FIELD 00w02 JL: JL
0x4800304C C   FIELD 02w05 JEXTSEL: JEXTSEL
0x4800304C C   FIELD 07w02 JEXTEN: JEXTEN
0x4800304C C   FIELD 09w05 JSQ1: JSQ1
0x4800304C C   FIELD 15w05 JSQ2: JSQ2
0x4800304C C   FIELD 21w05 JSQ3: JSQ3
0x4800304C C   FIELD 27w05 JSQ4: JSQ4
0x48003060 B  REGISTER ADC_OFR1 (rw): ADC offset register
0x48003060 C   FIELD 00w26 OFFSET1: OFFSET1
0x48003060 C   FIELD 26w05 OFFSET1_CH: OFFSET1_CH
0x48003060 C   FIELD 31w01 SSATE: SSATE
0x48003064 B  REGISTER ADC_OFR2 (rw): ADC offset register
0x48003064 C   FIELD 00w26 OFFSET2: OFFSET2
0x48003064 C   FIELD 26w05 OFFSET2_CH: OFFSET2_CH
0x48003064 C   FIELD 31w01 SSATE: SSATE
0x48003068 B  REGISTER ADC_OFR3 (rw): ADC offset register
0x48003068 C   FIELD 00w26 OFFSET3: OFFSET3
0x48003068 C   FIELD 26w05 OFFSET3_CH: OFFSET3_CH
0x48003068 C   FIELD 31w01 SSATE: SSATE
0x4800306C B  REGISTER ADC_OFR4 (rw): ADC offset register
0x4800306C C   FIELD 00w26 OFFSET4: OFFSET4
0x4800306C C   FIELD 26w05 OFFSET4_CH: OFFSET4_CH
0x4800306C C   FIELD 31w01 SSATE: SSATE
0x48003080 B  REGISTER ADC_JDR1 (ro): ADC injected data register
0x48003080 C   FIELD 00w32 JDATA: JDATA
0x48003084 B  REGISTER ADC_JDR2 (ro): ADC injected data register
0x48003084 C   FIELD 00w32 JDATA: JDATA
0x48003088 B  REGISTER ADC_JDR3 (ro): ADC injected data register
0x48003088 C   FIELD 00w32 JDATA: JDATA
0x4800308C B  REGISTER ADC_JDR4 (ro): ADC injected data register
0x4800308C C   FIELD 00w32 JDATA: JDATA
0x480030A0 B  REGISTER ADC_AWD2CR (rw): ADC analog watchdog 2 configuration register
0x480030A0 C   FIELD 00w20 AWD2CH: AWD2CH
0x480030A4 B  REGISTER ADC_AWD3CR (rw): ADC analog watchdog 3 configuration register
0x480030A4 C   FIELD 00w20 AWD3CH: AWD3CH
0x480030B0 B  REGISTER ADC_LTR2 (rw): ADC watchdog lower threshold register 2
0x480030B0 C   FIELD 00w26 LTR2: LTR2
0x480030B4 B  REGISTER ADC_HTR2 (rw): ADC watchdog higher threshold register 2
0x480030B4 C   FIELD 00w26 HTR2: HTR2
0x480030B8 B  REGISTER ADC_LTR3 (rw): ADC watchdog lower threshold register 3
0x480030B8 C   FIELD 00w26 LTR3: LTR3
0x480030BC B  REGISTER ADC_HTR3 (rw): ADC watchdog higher threshold register 3
0x480030BC C   FIELD 00w26 HTR3: HTR3
0x480030C0 B  REGISTER ADC_DIFSEL (rw): ADC differential mode selection register
0x480030C0 C   FIELD 00w20 DIFSEL: DIFSEL
0x480030C4 B  REGISTER ADC_CALFACT (rw): ADC calibration factors register
0x480030C4 C   FIELD 00w11 CALFACT_S: CALFACT_S
0x480030C4 C   FIELD 16w11 CALFACT_D: CALFACT_D
0x480030C8 B  REGISTER ADC_CALFACT2 (rw): ADC calibration factor register 2
0x480030C8 C   FIELD 00w30 LINCALFACT: LINCALFACT
0x48003100 A PERIPHERAL ADC2
0x48003100 B  REGISTER ADC_ISR (rw): ADC interrupt and status register
0x48003100 C   FIELD 00w01 ADRDY: ADRDY
0x48003100 C   FIELD 01w01 EOSMP: EOSMP
0x48003100 C   FIELD 02w01 EOC: EOC
0x48003100 C   FIELD 03w01 EOS: EOS
0x48003100 C   FIELD 04w01 OVR: OVR
0x48003100 C   FIELD 05w01 JEOC: JEOC
0x48003100 C   FIELD 06w01 JEOS: JEOS
0x48003100 C   FIELD 07w01 AWD1: AWD1
0x48003100 C   FIELD 08w01 AWD2: AWD2
0x48003100 C   FIELD 09w01 AWD3: AWD3
0x48003100 C   FIELD 10w01 JQOVF: JQOVF
0x48003104 B  REGISTER ADC_IER (rw): ADC interrupt enable register
0x48003104 C   FIELD 00w01 ADRDYIE: ADRDYIE
0x48003104 C   FIELD 01w01 EOSMPIE: EOSMPIE
0x48003104 C   FIELD 02w01 EOCIE: EOCIE
0x48003104 C   FIELD 03w01 EOSIE: EOSIE
0x48003104 C   FIELD 04w01 OVRIE: OVRIE
0x48003104 C   FIELD 05w01 JEOCIE: JEOCIE
0x48003104 C   FIELD 06w01 JEOSIE: JEOSIE
0x48003104 C   FIELD 07w01 AWD1IE: AWD1IE
0x48003104 C   FIELD 08w01 AWD2IE: AWD2IE
0x48003104 C   FIELD 09w01 AWD3IE: AWD3IE
0x48003104 C   FIELD 10w01 JQOVFIE: JQOVFIE
0x48003108 B  REGISTER ADC_CR (rw): ADC control register
0x48003108 C   FIELD 00w01 ADEN: ADEN
0x48003108 C   FIELD 01w01 ADDIS: ADDIS
0x48003108 C   FIELD 02w01 ADSTART: ADSTART
0x48003108 C   FIELD 03w01 JADSTART: JADSTART
0x48003108 C   FIELD 04w01 ADSTP: ADSTP
0x48003108 C   FIELD 05w01 JADSTP: JADSTP
0x48003108 C   FIELD 08w01 BOOST: BOOST
0x48003108 C   FIELD 16w01 ADCALLIN: ADCALLIN
0x48003108 C   FIELD 22w01 LINCALRDYW1: LINCALRDYW1
0x48003108 C   FIELD 23w01 LINCALRDYW2: LINCALRDYW2
0x48003108 C   FIELD 24w01 LINCALRDYW3: LINCALRDYW3
0x48003108 C   FIELD 25w01 LINCALRDYW4: LINCALRDYW4
0x48003108 C   FIELD 26w01 LINCALRDYW5: LINCALRDYW5
0x48003108 C   FIELD 27w01 LINCALRDYW6: LINCALRDYW6
0x48003108 C   FIELD 28w01 ADVREGEN: ADVREGEN
0x48003108 C   FIELD 29w01 DEEPPWD: DEEPPWD
0x48003108 C   FIELD 30w01 ADCALDIF: ADCALDIF
0x48003108 C   FIELD 31w01 ADCAL: ADCAL
0x4800310C B  REGISTER ADC_CFGR (rw): ADC configuration register
0x4800310C C   FIELD 00w02 DMNGT: DMNGT
0x4800310C C   FIELD 02w03 RES: RES
0x4800310C C   FIELD 05w05 EXTSEL: EXTSEL
0x4800310C C   FIELD 10w02 EXTEN: EXTEN
0x4800310C C   FIELD 12w01 OVRMOD: OVRMOD
0x4800310C C   FIELD 13w01 CONT: CONT
0x4800310C C   FIELD 14w01 AUTDLY: AUTDLY
0x4800310C C   FIELD 16w01 DISCEN: DISCEN
0x4800310C C   FIELD 17w03 DISCNUM: DISCNUM
0x4800310C C   FIELD 20w01 JDISCEN: JDISCEN
0x4800310C C   FIELD 21w01 JQM: JQM
0x4800310C C   FIELD 22w01 AWD1SGL: AWD1SGL
0x4800310C C   FIELD 23w01 AWD1EN: AWD1EN
0x4800310C C   FIELD 24w01 JAWD1EN: JAWD1EN
0x4800310C C   FIELD 25w01 JAUTO: JAUTO
0x4800310C C   FIELD 26w05 AWD1CH: AWD1CH
0x4800310C C   FIELD 31w01 JQDIS: JQDIS
0x48003110 B  REGISTER ADC_CFGR2 (rw): ADC configuration register 2
0x48003110 C   FIELD 00w01 ROVSE: ROVSE
0x48003110 C   FIELD 01w01 JOVSE: JOVSE
0x48003110 C   FIELD 05w04 OVSS: OVSS
0x48003110 C   FIELD 09w01 TROVS: TROVS
0x48003110 C   FIELD 10w01 ROVSM: ROVSM
0x48003110 C   FIELD 11w01 RSHIFT1: RSHIFT1
0x48003110 C   FIELD 12w01 RSHIFT2: RSHIFT2
0x48003110 C   FIELD 13w01 RSHIFT3: RSHIFT3
0x48003110 C   FIELD 14w01 RSHIFT4: RSHIFT4
0x48003110 C   FIELD 16w10 OSVR: OSVR
0x48003110 C   FIELD 28w04 LSHIFT: LSHIFT
0x48003114 B  REGISTER ADC_SMPR1 (rw): ADC sample time register 1
0x48003114 C   FIELD 00w03 SMP0: SMP0
0x48003114 C   FIELD 03w03 SMP1: SMP1
0x48003114 C   FIELD 06w03 SMP2: SMP2
0x48003114 C   FIELD 09w03 SMP3: SMP3
0x48003114 C   FIELD 12w03 SMP4: SMP4
0x48003114 C   FIELD 15w03 SMP5: SMP5
0x48003114 C   FIELD 18w03 SMP6: SMP6
0x48003114 C   FIELD 21w03 SMP7: SMP7
0x48003114 C   FIELD 24w03 SMP8: SMP8
0x48003114 C   FIELD 27w03 SMP9: SMP9
0x48003118 B  REGISTER ADC_SMPR2 (rw): ADC sample time register 2
0x48003118 C   FIELD 00w03 SMP10: SMP10
0x48003118 C   FIELD 03w03 SMP11: SMP11
0x48003118 C   FIELD 06w03 SMP12: SMP12
0x48003118 C   FIELD 09w03 SMP13: SMP13
0x48003118 C   FIELD 12w03 SMP14: SMP14
0x48003118 C   FIELD 15w03 SMP15: SMP15
0x48003118 C   FIELD 18w03 SMP16: SMP16
0x48003118 C   FIELD 21w03 SMP17: SMP17
0x48003118 C   FIELD 24w03 SMP18: SMP18
0x48003118 C   FIELD 27w03 SMP19: SMP19
0x4800311C B  REGISTER ADC_PCSEL (rw): ADC channel preselection register
0x4800311C C   FIELD 00w01 PCSEL0: PCSEL0
0x4800311C C   FIELD 01w01 PCSEL1: PCSEL1
0x4800311C C   FIELD 02w01 PCSEL2: PCSEL2
0x4800311C C   FIELD 03w01 PCSEL3: PCSEL3
0x4800311C C   FIELD 04w01 PCSEL4: PCSEL4
0x4800311C C   FIELD 05w01 PCSEL5: PCSEL5
0x4800311C C   FIELD 06w01 PCSEL6: PCSEL6
0x4800311C C   FIELD 07w01 PCSEL7: PCSEL7
0x4800311C C   FIELD 08w01 PCSEL8: PCSEL8
0x4800311C C   FIELD 09w01 PCSEL9: PCSEL9
0x4800311C C   FIELD 10w01 PCSEL10: PCSEL10
0x4800311C C   FIELD 11w01 PCSEL11: PCSEL11
0x4800311C C   FIELD 12w01 PCSEL12: PCSEL12
0x4800311C C   FIELD 13w01 PCSEL13: PCSEL13
0x4800311C C   FIELD 14w01 PCSEL14: PCSEL14
0x4800311C C   FIELD 15w01 PCSEL15: PCSEL15
0x4800311C C   FIELD 16w01 PCSEL16: PCSEL16
0x4800311C C   FIELD 17w01 PCSEL17: PCSEL17
0x4800311C C   FIELD 18w01 PCSEL18: PCSEL18
0x4800311C C   FIELD 19w01 PCSEL19: PCSEL19
0x48003120 B  REGISTER ADC_LTR1 (rw): ADC watchdog threshold register 1
0x48003120 C   FIELD 00w26 LTR1: LTR1
0x48003124 B  REGISTER ADC_HTR1 (rw): ADC watchdog threshold register 1
0x48003124 C   FIELD 00w26 HTR1: HTR1
0x48003130 B  REGISTER ADC_SQR1 (rw): ADC regular sequence register 1
0x48003130 C   FIELD 00w04 L: L
0x48003130 C   FIELD 06w05 SQ1: SQ1
0x48003130 C   FIELD 12w05 SQ2: SQ2
0x48003130 C   FIELD 18w05 SQ3: SQ3
0x48003130 C   FIELD 24w05 SQ4: SQ4
0x48003134 B  REGISTER ADC_SQR2 (rw): ADC regular sequence register 2
0x48003134 C   FIELD 00w05 SQ5: SQ5
0x48003134 C   FIELD 06w05 SQ6: SQ6
0x48003134 C   FIELD 12w05 SQ7: SQ7
0x48003134 C   FIELD 18w05 SQ8: SQ8
0x48003134 C   FIELD 24w05 SQ9: SQ9
0x48003138 B  REGISTER ADC_SQR3 (rw): ADC regular sequence register 3
0x48003138 C   FIELD 00w05 SQ10: SQ10
0x48003138 C   FIELD 06w05 SQ11: SQ11
0x48003138 C   FIELD 12w05 SQ12: SQ12
0x48003138 C   FIELD 18w05 SQ13: SQ13
0x48003138 C   FIELD 24w05 SQ14: SQ14
0x4800313C B  REGISTER ADC_SQR4 (rw): ADC regular sequence register 4
0x4800313C C   FIELD 00w05 SQ15: SQ15
0x4800313C C   FIELD 06w05 SQ16: SQ16
0x48003140 B  REGISTER ADC_DR (ro): ADC regular Data Register
0x48003140 C   FIELD 00w32 RDATA: RDATA
0x4800314C B  REGISTER ADC_JSQR (rw): ADC injected sequence register
0x4800314C C   FIELD 00w02 JL: JL
0x4800314C C   FIELD 02w05 JEXTSEL: JEXTSEL
0x4800314C C   FIELD 07w02 JEXTEN: JEXTEN
0x4800314C C   FIELD 09w05 JSQ1: JSQ1
0x4800314C C   FIELD 15w05 JSQ2: JSQ2
0x4800314C C   FIELD 21w05 JSQ3: JSQ3
0x4800314C C   FIELD 27w05 JSQ4: JSQ4
0x48003160 B  REGISTER ADC_OFR1 (rw): ADC offset register
0x48003160 C   FIELD 00w26 OFFSET1: OFFSET1
0x48003160 C   FIELD 26w05 OFFSET1_CH: OFFSET1_CH
0x48003160 C   FIELD 31w01 SSATE: SSATE
0x48003164 B  REGISTER ADC_OFR2 (rw): ADC offset register
0x48003164 C   FIELD 00w26 OFFSET2: OFFSET2
0x48003164 C   FIELD 26w05 OFFSET2_CH: OFFSET2_CH
0x48003164 C   FIELD 31w01 SSATE: SSATE
0x48003168 B  REGISTER ADC_OFR3 (rw): ADC offset register
0x48003168 C   FIELD 00w26 OFFSET3: OFFSET3
0x48003168 C   FIELD 26w05 OFFSET3_CH: OFFSET3_CH
0x48003168 C   FIELD 31w01 SSATE: SSATE
0x4800316C B  REGISTER ADC_OFR4 (rw): ADC offset register
0x4800316C C   FIELD 00w26 OFFSET4: OFFSET4
0x4800316C C   FIELD 26w05 OFFSET4_CH: OFFSET4_CH
0x4800316C C   FIELD 31w01 SSATE: SSATE
0x48003180 B  REGISTER ADC_JDR1 (ro): ADC injected data register
0x48003180 C   FIELD 00w32 JDATA: JDATA
0x48003184 B  REGISTER ADC_JDR2 (ro): ADC injected data register
0x48003184 C   FIELD 00w32 JDATA: JDATA
0x48003188 B  REGISTER ADC_JDR3 (ro): ADC injected data register
0x48003188 C   FIELD 00w32 JDATA: JDATA
0x4800318C B  REGISTER ADC_JDR4 (ro): ADC injected data register
0x4800318C C   FIELD 00w32 JDATA: JDATA
0x480031A0 B  REGISTER ADC_AWD2CR (rw): ADC analog watchdog 2 configuration register
0x480031A0 C   FIELD 00w20 AWD2CH: AWD2CH
0x480031A4 B  REGISTER ADC_AWD3CR (rw): ADC analog watchdog 3 configuration register
0x480031A4 C   FIELD 00w20 AWD3CH: AWD3CH
0x480031B0 B  REGISTER ADC_LTR2 (rw): ADC watchdog lower threshold register 2
0x480031B0 C   FIELD 00w26 LTR2: LTR2
0x480031B4 B  REGISTER ADC_HTR2 (rw): ADC watchdog higher threshold register 2
0x480031B4 C   FIELD 00w26 HTR2: HTR2
0x480031B8 B  REGISTER ADC_LTR3 (rw): ADC watchdog lower threshold register 3
0x480031B8 C   FIELD 00w26 LTR3: LTR3
0x480031BC B  REGISTER ADC_HTR3 (rw): ADC watchdog higher threshold register 3
0x480031BC C   FIELD 00w26 HTR3: HTR3
0x480031C0 B  REGISTER ADC_DIFSEL (rw): ADC differential mode selection register
0x480031C0 C   FIELD 00w20 DIFSEL: DIFSEL
0x480031C4 B  REGISTER ADC_CALFACT (rw): ADC calibration factors register
0x480031C4 C   FIELD 00w11 CALFACT_S: CALFACT_S
0x480031C4 C   FIELD 16w11 CALFACT_D: CALFACT_D
0x480031C8 B  REGISTER ADC_CALFACT2 (rw): ADC calibration factor register 2
0x480031C8 C   FIELD 00w30 LINCALFACT: LINCALFACT
0x480031D0 B  REGISTER ADC2_OR (rw): ADC2 option register
0x480031D0 C   FIELD 00w01 VDDCOREEN: VDDCOREEN
0x48003300 A PERIPHERAL ADC_common
0x48003300 B  REGISTER CSR (ro): ADC Common status register
0x48003300 C   FIELD 00w01 ADDRDY_MST: ADDRDY_MST
0x48003300 C   FIELD 01w01 EOSMP_MST: EOSMP_MST
0x48003300 C   FIELD 02w01 EOC_MST: EOC_MST
0x48003300 C   FIELD 03w01 EOS_MST: EOS_MST
0x48003300 C   FIELD 04w01 OVR_MST: OVR_MST
0x48003300 C   FIELD 05w01 JEOC_MST: JEOC_MST
0x48003300 C   FIELD 06w01 JEOS_MST: JEOS_MST
0x48003300 C   FIELD 07w01 AWD1_MST: AWD1_MST
0x48003300 C   FIELD 08w01 AWD2_MST: AWD2_MST
0x48003300 C   FIELD 09w01 AWD3_MST: AWD3_MST
0x48003300 C   FIELD 10w01 JQOVF_MST: JQOVF_MST
0x48003300 C   FIELD 16w01 ADRDY_SLV: ADRDY_SLV
0x48003300 C   FIELD 17w01 EOSMP_SLV: EOSMP_SLV
0x48003300 C   FIELD 18w01 EOC_SLV: EOC_SLV
0x48003300 C   FIELD 19w01 EOS_SLV: EOS_SLV
0x48003300 C   FIELD 20w01 OVR_SLV: OVR_SLV
0x48003300 C   FIELD 21w01 JEOC_SLV: JEOC_SLV
0x48003300 C   FIELD 22w01 JEOS_SLV: JEOS_SLV
0x48003300 C   FIELD 23w01 AWD1_SLV: AWD1_SLV
0x48003300 C   FIELD 24w01 AWD2_SLV: AWD2_SLV
0x48003300 C   FIELD 25w01 AWD3_SLV: AWD3_SLV
0x48003300 C   FIELD 26w01 JQOVF_SLV: JQOVF_SLV
0x48003308 B  REGISTER CCR (rw): ADC common control register
0x48003308 C   FIELD 00w05 DUAL: DUAL
0x48003308 C   FIELD 08w03 DELAY: DELAY
0x48003308 C   FIELD 13w01 DMACFG: DMACFG
0x48003308 C   FIELD 14w02 MDMA: MDMA
0x48003308 C   FIELD 16w02 CKMODE: ADC clock mode
0x48003308 C   FIELD 18w04 PRESC: ADC prescaler
0x48003308 C   FIELD 22w01 VREFEN: VREFINT enable
0x48003308 C   FIELD 23w01 CH17SEL: CH17SEL
0x48003308 C   FIELD 24w01 CH18SEL: CH18SEL
0x4800330C B  REGISTER CDR (ro): Common regular data register for dual mode
0x4800330C C   FIELD 00w16 RDATA_MST: RDATA_MST
0x4800330C C   FIELD 16w16 RDATA_SLV: RDATA_SLV
0x48003310 B  REGISTER CDR2 (ro): Common regular data register for dual mode
0x48003310 C   FIELD 00w32 RDATA_ALT: RDATA_ALT
0x48004000 A PERIPHERAL SDMMC3
0x48004000 B  REGISTER SDMMC_POWER (rw): SDMMC power control register
0x48004000 C   FIELD 00w02 PWRCTRL: PWRCTRL
0x48004000 C   FIELD 02w01 VSWITCH: VSWITCH
0x48004000 C   FIELD 03w01 VSWITCHEN: VSWITCHEN
0x48004000 C   FIELD 04w01 DIRPOL: DIRPOL
0x48004004 B  REGISTER SDMMC_CLKCR (rw): The SDMMC_CLKCR register controls the SDMMC_CK output clock, the sdmmc_rx_ck receive clock, and the bus width.
0x48004004 C   FIELD 00w10 CLKDIV: CLKDIV
0x48004004 C   FIELD 12w01 PWRSAV: PWRSAV
0x48004004 C   FIELD 14w02 WIDBUS: WIDBUS
0x48004004 C   FIELD 16w01 NEGEDGE: NEGEDGE
0x48004004 C   FIELD 17w01 HWFC_EN: HWFC_EN
0x48004004 C   FIELD 18w01 DDR: DDR
0x48004004 C   FIELD 19w01 BUSSPEED: BUSSPEED
0x48004004 C   FIELD 20w02 SELCLKRX: SELCLKRX
0x48004008 B  REGISTER SDMMC_ARGR (rw): The SDMMC_ARGR register contains a 32-bit command argument, which is sent to a card as part of a command message.
0x48004008 C   FIELD 00w32 CMDARG: CMDARG
0x4800400C B  REGISTER SDMMC_CMDR (rw): The SDMMC_CMDR register contains the command index and command type bits. The command index is sent to a card as part of a command message. The command type bits control the command path state machine (CPSM).
0x4800400C C   FIELD 00w06 CMDINDEX: CMDINDEX
0x4800400C C   FIELD 06w01 CMDTRANS: CMDTRANS
0x4800400C C   FIELD 07w01 CMDSTOP: CMDSTOP
0x4800400C C   FIELD 08w02 WAITRESP: WAITRESP
0x4800400C C   FIELD 10w01 WAITINT: WAITINT
0x4800400C C   FIELD 11w01 WAITPEND: WAITPEND
0x4800400C C   FIELD 12w01 CPSMEN: CPSMEN
0x4800400C C   FIELD 13w01 DTHOLD: DTHOLD
0x4800400C C   FIELD 14w01 BOOTMODE: BOOTMODE
0x4800400C C   FIELD 15w01 BOOTEN: BOOTEN
0x4800400C C   FIELD 16w01 CMDSUSPEND: CMDSUSPEND
0x48004010 B  REGISTER SDMMC_RESPCMDR (ro): The SDMMC_RESPCMDR register contains the command index field of the last command response received. If the command response transmission does not contain the command index field (long or OCR response), the RESPCMD field is unknown, although it must contain 111111b (the value of the reserved field from the response).
0x48004010 C   FIELD 00w06 RESPCMD: RESPCMD
0x48004014 B  REGISTER SDMMC_RESP1R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x48004014 C   FIELD 00w32 CARDSTATUS1: CARDSTATUS1
0x48004018 B  REGISTER SDMMC_RESP2R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x48004018 C   FIELD 00w32 CARDSTATUS2: CARDSTATUS2
0x4800401C B  REGISTER SDMMC_RESP3R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x4800401C C   FIELD 00w32 CARDSTATUS3: CARDSTATUS3
0x48004020 B  REGISTER SDMMC_RESP4R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x48004020 C   FIELD 00w32 CARDSTATUS4: CARDSTATUS4
0x48004024 B  REGISTER SDMMC_DTIMER (rw): The SDMMC_DTIMER register contains the data timeout period, in card bus clock periods. A counter loads the value from the SDMMC_DTIMER register, and starts decrementing when the data path state machine (DPSM) enters the Wait_R or Busy state. If the timer reaches 0 while the DPSM is in either of these states, the timeout status flag is set.
0x48004024 C   FIELD 00w32 DATATIME: DATATIME
0x48004028 B  REGISTER SDMMC_DLENR (rw): The SDMMC_DLENR register contains the number of data bytes to be transferred. The value is loaded into the data counter when data transfer starts.
0x48004028 C   FIELD 00w25 DATALENGTH: DATALENGTH
0x4800402C B  REGISTER SDMMC_DCTRL (rw): The SDMMC_DCTRL register control the data path state machine (DPSM).
0x4800402C C   FIELD 00w01 DTEN: DTEN
0x4800402C C   FIELD 01w01 DTDIR: DTDIR
0x4800402C C   FIELD 02w02 DTMODE: DTMODE
0x4800402C C   FIELD 04w04 DBLOCKSIZE: DBLOCKSIZE
0x4800402C C   FIELD 08w01 RWSTART: RWSTART
0x4800402C C   FIELD 09w01 RWSTOP: RWSTOP
0x4800402C C   FIELD 10w01 RWMOD: RWMOD
0x4800402C C   FIELD 11w01 SDIOEN: SDIOEN
0x4800402C C   FIELD 12w01 BOOTACKEN: BOOTACKEN
0x4800402C C   FIELD 13w01 FIFORST: FIFORST
0x48004030 B  REGISTER SDMMC_DCNTR (ro): The SDMMC_DCNTR register loads the value from the data length register (see SDMMC_DLENR) when the DPSM moves from the Idle state to the Wait_R or Wait_S state. As data is transferred, the counter decrements the value until it reaches 0. The DPSM then moves to the Idle state and when there has been no error, the data status end flag (DATAEND) is set.
0x48004030 C   FIELD 00w25 DATACOUNT: DATACOUNT
0x48004034 B  REGISTER SDMMC_STAR (ro): The SDMMC_STAR register is a read-only register. It contains two types of flag: Static flags (bits [28, 21, 11:0]): these bits remain asserted until they are cleared by writing to the SDMMC interrupt Clear register (see SDMMC_ICR) Dynamic flags (bits [20:12]): these bits change state depending on the state of the underlying logic (for example, FIFO full and empty flags are asserted and de-asserted as data while written to the FIFO)
0x48004034 C   FIELD 00w01 CCRCFAIL: CCRCFAIL
0x48004034 C   FIELD 01w01 DCRCFAIL: DCRCFAIL
0x48004034 C   FIELD 02w01 CTIMEOUT: CTIMEOUT
0x48004034 C   FIELD 03w01 DTIMEOUT: DTIMEOUT
0x48004034 C   FIELD 04w01 TXUNDERR: TXUNDERR
0x48004034 C   FIELD 05w01 RXOVERR: RXOVERR
0x48004034 C   FIELD 06w01 CMDREND: CMDREND
0x48004034 C   FIELD 07w01 CMDSENT: CMDSENT
0x48004034 C   FIELD 08w01 DATAEND: DATAEND
0x48004034 C   FIELD 09w01 DHOLD: DHOLD
0x48004034 C   FIELD 10w01 DBCKEND: DBCKEND
0x48004034 C   FIELD 11w01 DABORT: DABORT
0x48004034 C   FIELD 12w01 DPSMACT: DPSMACT
0x48004034 C   FIELD 13w01 CPSMACT: CPSMACT
0x48004034 C   FIELD 14w01 TXFIFOHE: TXFIFOHE
0x48004034 C   FIELD 15w01 RXFIFOHF: RXFIFOHF
0x48004034 C   FIELD 16w01 TXFIFOF: TXFIFOF
0x48004034 C   FIELD 17w01 RXFIFOF: RXFIFOF
0x48004034 C   FIELD 18w01 TXFIFOE: TXFIFOE
0x48004034 C   FIELD 19w01 RXFIFOE: RXFIFOE
0x48004034 C   FIELD 20w01 BUSYD0: BUSYD0
0x48004034 C   FIELD 21w01 BUSYD0END: BUSYD0END
0x48004034 C   FIELD 22w01 SDIOIT: SDIOIT
0x48004034 C   FIELD 23w01 ACKFAIL: ACKFAIL
0x48004034 C   FIELD 24w01 ACKTIMEOUT: ACKTIMEOUT
0x48004034 C   FIELD 25w01 VSWEND: VSWEND
0x48004034 C   FIELD 26w01 CKSTOP: CKSTOP
0x48004034 C   FIELD 27w01 IDMATE: IDMATE
0x48004034 C   FIELD 28w01 IDMABTC: IDMABTC
0x48004038 B  REGISTER SDMMC_ICR (rw): The SDMMC_ICR register is a write-only register. Writing a bit with 1 clears the corresponding bit in the SDMMC_STAR status register.
0x48004038 C   FIELD 00w01 CCRCFAILC: CCRCFAILC
0x48004038 C   FIELD 01w01 DCRCFAILC: DCRCFAILC
0x48004038 C   FIELD 02w01 CTIMEOUTC: CTIMEOUTC
0x48004038 C   FIELD 03w01 DTIMEOUTC: DTIMEOUTC
0x48004038 C   FIELD 04w01 TXUNDERRC: TXUNDERRC
0x48004038 C   FIELD 05w01 RXOVERRC: RXOVERRC
0x48004038 C   FIELD 06w01 CMDRENDC: CMDRENDC
0x48004038 C   FIELD 07w01 CMDSENTC: CMDSENTC
0x48004038 C   FIELD 08w01 DATAENDC: DATAENDC
0x48004038 C   FIELD 09w01 DHOLDC: DHOLDC
0x48004038 C   FIELD 10w01 DBCKENDC: DBCKENDC
0x48004038 C   FIELD 11w01 DABORTC: DABORTC
0x48004038 C   FIELD 21w01 BUSYD0ENDC: BUSYD0ENDC
0x48004038 C   FIELD 22w01 SDIOITC: SDIOITC
0x48004038 C   FIELD 23w01 ACKFAILC: ACKFAILC
0x48004038 C   FIELD 24w01 ACKTIMEOUTC: ACKTIMEOUTC
0x48004038 C   FIELD 25w01 VSWENDC: VSWENDC
0x48004038 C   FIELD 26w01 CKSTOPC: CKSTOPC
0x48004038 C   FIELD 27w01 IDMATEC: IDMATEC
0x48004038 C   FIELD 28w01 IDMABTCC: IDMABTCC
0x4800403C B  REGISTER SDMMC_MASKR (rw): The interrupt mask register determines which status flags generate an interrupt request by setting the corresponding bit to 1.
0x4800403C C   FIELD 00w01 CCRCFAILIE: CCRCFAILIE
0x4800403C C   FIELD 01w01 DCRCFAILIE: DCRCFAILIE
0x4800403C C   FIELD 02w01 CTIMEOUTIE: CTIMEOUTIE
0x4800403C C   FIELD 03w01 DTIMEOUTIE: DTIMEOUTIE
0x4800403C C   FIELD 04w01 TXUNDERRIE: TXUNDERRIE
0x4800403C C   FIELD 05w01 RXOVERRIE: RXOVERRIE
0x4800403C C   FIELD 06w01 CMDRENDIE: CMDRENDIE
0x4800403C C   FIELD 07w01 CMDSENTIE: CMDSENTIE
0x4800403C C   FIELD 08w01 DATAENDIE: DATAENDIE
0x4800403C C   FIELD 09w01 DHOLDIE: DHOLDIE
0x4800403C C   FIELD 10w01 DBCKENDIE: DBCKENDIE
0x4800403C C   FIELD 11w01 DABORTIE: DABORTIE
0x4800403C C   FIELD 14w01 TXFIFOHEIE: TXFIFOHEIE
0x4800403C C   FIELD 15w01 RXFIFOHFIE: RXFIFOHFIE
0x4800403C C   FIELD 17w01 RXFIFOFIE: RXFIFOFIE
0x4800403C C   FIELD 18w01 TXFIFOEIE: TXFIFOEIE
0x4800403C C   FIELD 21w01 BUSYD0ENDIE: BUSYD0ENDIE
0x4800403C C   FIELD 22w01 SDIOITIE: SDIOITIE
0x4800403C C   FIELD 23w01 ACKFAILIE: ACKFAILIE
0x4800403C C   FIELD 24w01 ACKTIMEOUTIE: ACKTIMEOUTIE
0x4800403C C   FIELD 25w01 VSWENDIE: VSWENDIE
0x4800403C C   FIELD 26w01 CKSTOPIE: CKSTOPIE
0x4800403C C   FIELD 28w01 IDMABTCIE: IDMABTCIE
0x48004040 B  REGISTER SDMMC_ACKTIMER (rw): The SDMMC_ACKTIMER register contains the acknowledgment timeout period, in SDMMC_CK bus clock periods. A counter loads the value from the SDMMC_ACKTIMER register, and starts decrementing when the data path state machine (DPSM) enters the Wait_Ack state. If the timer reaches 0 while the DPSM is in this states, the acknowledgment timeout status flag is set.
0x48004040 C   FIELD 00w25 ACKTIME: ACKTIME
0x48004050 B  REGISTER SDMMC_IDMACTRLR (rw): The receive and transmit FIFOs can be read or written as 32-bit wide registers. The FIFOs contain 32 entries on 32 sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO.
0x48004050 C   FIELD 00w01 IDMAEN: IDMAEN
0x48004050 C   FIELD 01w01 IDMABMODE: IDMABMODE
0x48004054 B  REGISTER SDMMC_IDMABSIZER (rw): The SDMMC_IDMABSIZER register contains the buffer size when in linked list configuration.
0x48004054 C   FIELD 05w12 IDMABNDT: IDMABNDT
0x48004058 B  REGISTER SDMMC_IDMABASER (rw): The SDMMC_IDMABASER register contains the memory buffer base address in single buffer configuration and linked list configuration.
0x48004058 C   FIELD 00w32 IDMABASE: IDMABASE
0x48004064 B  REGISTER SDMMC_IDMALAR (rw): SDMMC IDMA linked list address register
0x48004064 C   FIELD 02w14 IDMALA: IDMALA
0x48004064 C   FIELD 29w01 ABR: ABR
0x48004064 C   FIELD 30w01 ULS: ULS
0x48004064 C   FIELD 31w01 ULA: ULA
0x48004068 B  REGISTER SDMMC_IDMABAR (rw): SDMMC IDMA linked list memory base register
0x48004068 C   FIELD 02w30 IDMABA: IDMABA
0x48004080 B  REGISTER SDMMC_FIFOR0 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x48004080 C   FIELD 00w32 FIFODATA: FIFODATA
0x48004084 B  REGISTER SDMMC_FIFOR1 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x48004084 C   FIELD 00w32 FIFODATA: FIFODATA
0x48004088 B  REGISTER SDMMC_FIFOR2 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x48004088 C   FIELD 00w32 FIFODATA: FIFODATA
0x4800408C B  REGISTER SDMMC_FIFOR3 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x4800408C C   FIELD 00w32 FIFODATA: FIFODATA
0x48004090 B  REGISTER SDMMC_FIFOR4 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x48004090 C   FIELD 00w32 FIFODATA: FIFODATA
0x48004094 B  REGISTER SDMMC_FIFOR5 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x48004094 C   FIELD 00w32 FIFODATA: FIFODATA
0x48004098 B  REGISTER SDMMC_FIFOR6 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x48004098 C   FIELD 00w32 FIFODATA: FIFODATA
0x4800409C B  REGISTER SDMMC_FIFOR7 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x4800409C C   FIELD 00w32 FIFODATA: FIFODATA
0x480040A0 B  REGISTER SDMMC_FIFOR8 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x480040A0 C   FIELD 00w32 FIFODATA: FIFODATA
0x480040A4 B  REGISTER SDMMC_FIFOR9 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x480040A4 C   FIELD 00w32 FIFODATA: FIFODATA
0x480040A8 B  REGISTER SDMMC_FIFOR10 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x480040A8 C   FIELD 00w32 FIFODATA: FIFODATA
0x480040AC B  REGISTER SDMMC_FIFOR11 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x480040AC C   FIELD 00w32 FIFODATA: FIFODATA
0x480040B0 B  REGISTER SDMMC_FIFOR12 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x480040B0 C   FIELD 00w32 FIFODATA: FIFODATA
0x480040B4 B  REGISTER SDMMC_FIFOR13 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x480040B4 C   FIELD 00w32 FIFODATA: FIFODATA
0x480040B8 B  REGISTER SDMMC_FIFOR14 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x480040B8 C   FIELD 00w32 FIFODATA: FIFODATA
0x480040BC B  REGISTER SDMMC_FIFOR15 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x480040BC C   FIELD 00w32 FIFODATA: FIFODATA
0x480043F4 B  REGISTER SDMMC_VERR (ro): SDMMC version register
0x480043F4 C   FIELD 00w04 MINREV: MINREV
0x480043F4 C   FIELD 04w04 MAJREV: MAJREV
0x480043F8 B  REGISTER SDMMC_IPIDR (ro): SDMMC identification register
0x480043F8 C   FIELD 00w32 IP_ID: IP_ID
0x480043FC B  REGISTER SDMMC_SIDR (ro): SDMMC size ID register
0x480043FC C   FIELD 00w32 SID: SID
0x48005000 A PERIPHERAL DLYBSD3
0x48005000 B  REGISTER DLYB_CR (rw): DLYB control register
0x48005000 C   FIELD 00w01 DEN: DEN
0x48005000 C   FIELD 01w01 SEN: SEN
0x48005004 B  REGISTER DLYB_CFGR: DLYB configuration register
0x48005004 C   FIELD 00w04 SEL (rw): SEL
0x48005004 C   FIELD 08w07 UNIT (rw): UNIT
0x48005004 C   FIELD 16w12 LNG (ro): LNG
0x48005004 C   FIELD 31w01 LNGF (ro): LNGF
0x480053F4 B  REGISTER DLYB_VERR (ro): DLYB IP version register
0x480053F4 C   FIELD 00w04 MINREV: MINREV
0x480053F4 C   FIELD 04w04 MAJREV: MAJREV
0x480053F8 B  REGISTER DLYB_IPIDR (ro): DLYB IP identification register
0x480053F8 C   FIELD 00w32 ID: ID
0x480053FC B  REGISTER DLYB_SIDR (ro): DLYB size ID register
0x480053FC C   FIELD 00w32 SID: SID
0x49000000 A PERIPHERAL OTG
0x49000000 B  REGISTER OTG_GOTGCTL: The OTG_GOTGCTL register controls the behavior and reflects the status of the OTG function of the core.
0x49000000 C   FIELD 00w01 SRQSCS (ro): SRQSCS
0x49000000 C   FIELD 01w01 SRQ (rw): SRQ
0x49000000 C   FIELD 02w01 VBVALOEN (rw): VBVALOEN
0x49000000 C   FIELD 03w01 VBVALOVAL (rw): VBVALOVAL
0x49000000 C   FIELD 04w01 AVALOEN (rw): AVALOEN
0x49000000 C   FIELD 05w01 AVALOVAL (rw): AVALOVAL
0x49000000 C   FIELD 06w01 BVALOEN (rw): BVALOEN
0x49000000 C   FIELD 07w01 BVALOVAL (rw): BVALOVAL
0x49000000 C   FIELD 08w01 HNGSCS (ro): HNGSCS
0x49000000 C   FIELD 09w01 HNPRQ (rw): HNPRQ
0x49000000 C   FIELD 10w01 HSHNPEN (rw): HSHNPEN
0x49000000 C   FIELD 11w01 DHNPEN (rw): DHNPEN
0x49000000 C   FIELD 12w01 EHEN (rw): EHEN
0x49000000 C   FIELD 16w01 CIDSTS (ro): CIDSTS
0x49000000 C   FIELD 17w01 DBCT (ro): DBCT
0x49000000 C   FIELD 18w01 ASVLD (ro): ASVLD
0x49000000 C   FIELD 19w01 BSVLD (ro): BSVLD
0x49000000 C   FIELD 20w01 OTGVER (rw): OTGVER
0x49000000 C   FIELD 21w01 CURMOD (ro): CURMOD
0x49000004 B  REGISTER OTG_GOTGINT (rw): The application reads this register whenever there is an OTG interrupt and clears the bits in this register to clear the OTG interrupt.
0x49000004 C   FIELD 02w01 SEDET: SEDET
0x49000004 C   FIELD 08w01 SRSSCHG: SRSSCHG
0x49000004 C   FIELD 09w01 HNSSCHG: HNSSCHG
0x49000004 C   FIELD 17w01 HNGDET: HNGDET
0x49000004 C   FIELD 18w01 ADTOCHG: ADTOCHG
0x49000004 C   FIELD 19w01 DBCDNE: DBCDNE
0x49000004 C   FIELD 20w01 IDCHNG: IDCHNG
0x49000008 B  REGISTER OTG_GAHBCFG (rw): This register can be used to configure the core after power-on or a change in mode. This register mainly contains AHB system-related configuration parameters. Do not change this register after the initial programming. The application must program this register before starting any transactions on either the AHB or the USB.
0x49000008 C   FIELD 00w01 GINTMSK: GINTMSK
0x49000008 C   FIELD 01w04 HBSTLEN: HBSTLEN
0x49000008 C   FIELD 05w01 DMAEN: DMAEN
0x49000008 C   FIELD 07w01 TXFELVL: TXFELVL
0x49000008 C   FIELD 08w01 PTXFELVL: PTXFELVL
0x4900000C B  REGISTER OTG_GUSBCFG (rw): This register can be used to configure the core after power-on or a changing to host mode or device mode. It contains USB and USB-PHY related configuration parameters. The application must program this register before starting any transactions on either the AHB or the USB. Do not make changes to this register after the initial programming.
0x4900000C C   FIELD 00w03 TOCAL: TOCAL
0x4900000C C   FIELD 06w01 PHYSEL: PHYSEL
0x4900000C C   FIELD 08w01 SRPCAP: SRPCAP
0x4900000C C   FIELD 09w01 HNPCAP: HNPCAP
0x4900000C C   FIELD 10w04 TRDT: TRDT
0x4900000C C   FIELD 15w01 PHYLPC: PHYLPC
0x4900000C C   FIELD 22w01 TSDPS: TSDPS
0x4900000C C   FIELD 29w01 FHMOD: FHMOD
0x4900000C C   FIELD 30w01 FDMOD: FDMOD
0x49000010 B  REGISTER OTG_GRSTCTL: The application uses this register to reset various hardware features inside the core.
0x49000010 C   FIELD 00w01 CSRST (rw): CSRST
0x49000010 C   FIELD 01w01 PSRST (rw): PSRST
0x49000010 C   FIELD 04w01 RXFFLSH (rw): RXFFLSH
0x49000010 C   FIELD 05w01 TXFFLSH (rw): TXFFLSH
0x49000010 C   FIELD 06w05 TXFNUM (rw): TXFNUM
0x49000010 C   FIELD 30w01 DMAREQ (ro): DMAREQ
0x49000010 C   FIELD 31w01 AHBIDL (ro): AHBIDL
0x49000014 B  REGISTER OTG_GINTSTS: This register interrupts the application for system-level events in the current mode (device mode or host mode). Some of the bits in this register are valid only in host mode, while others are valid in device mode only. This register also indicates the current mode. To clear the interrupt status bits of the rc_w1 type, the application must write 1 into the bit. The FIFO status interrupts are read-only; once software reads from or writes to the FIFO while servicing these interrupts, FIFO interrupt conditions are cleared automatically. The application must clear the OTG_GINTSTS register at initialization before unmasking the interrupt bit to avoid any interrupts generated prior to initialization.
0x49000014 C   FIELD 00w01 CMOD (ro): CMOD
0x49000014 C   FIELD 01w01 MMIS (rw): MMIS
0x49000014 C   FIELD 02w01 OTGINT (ro): OTGINT
0x49000014 C   FIELD 03w01 SOF (rw): SOF
0x49000014 C   FIELD 04w01 RXFLVL (ro): RXFLVL
0x49000014 C   FIELD 05w01 NPTXFE (ro): NPTXFE
0x49000014 C   FIELD 06w01 GINAKEFF (ro): GINAKEFF
0x49000014 C   FIELD 07w01 GONAKEFF (ro): GONAKEFF
0x49000014 C   FIELD 10w01 ESUSP (rw): ESUSP
0x49000014 C   FIELD 11w01 USBSUSP (rw): USBSUSP
0x49000014 C   FIELD 12w01 USBRST (rw): USBRST
0x49000014 C   FIELD 13w01 ENUMDNE (rw): ENUMDNE
0x49000014 C   FIELD 14w01 ISOODRP (rw): ISOODRP
0x49000014 C   FIELD 15w01 EOPF (rw): EOPF
0x49000014 C   FIELD 18w01 IEPINT (ro): IEPINT
0x49000014 C   FIELD 19w01 OEPINT (ro): OEPINT
0x49000014 C   FIELD 20w01 IISOIXFR (rw): IISOIXFR
0x49000014 C   FIELD 21w01 IPXFR (rw): IPXFR
0x49000014 C   FIELD 22w01 DATAFSUSP (rw): DATAFSUSP
0x49000014 C   FIELD 24w01 HPRTINT (ro): HPRTINT
0x49000014 C   FIELD 25w01 HCINT (ro): HCINT
0x49000014 C   FIELD 26w01 PTXFE (ro): PTXFE
0x49000014 C   FIELD 28w01 CIDSCHG (rw): CIDSCHG
0x49000014 C   FIELD 29w01 DISCINT (rw): DISCINT
0x49000014 C   FIELD 30w01 SRQINT (rw): SRQINT
0x49000014 C   FIELD 31w01 WKUPINT (rw): WKUPINT
0x49000018 B  REGISTER OTG_GINTMSK: This register works with the core interrupt register to interrupt the application. When an interrupt bit is masked, the interrupt associated with that bit is not generated. However, the core interrupt (OTG_GINTSTS) register bit corresponding to that interrupt is still set.
0x49000018 C   FIELD 01w01 MMISM (rw): MMISM
0x49000018 C   FIELD 02w01 OTGINT (rw): OTGINT
0x49000018 C   FIELD 03w01 SOFM (rw): SOFM
0x49000018 C   FIELD 04w01 RXFLVLM (rw): RXFLVLM
0x49000018 C   FIELD 05w01 NPTXFEM (rw): NPTXFEM
0x49000018 C   FIELD 06w01 GINAKEFFM (rw): GINAKEFFM
0x49000018 C   FIELD 07w01 GONAKEFFM (rw): GONAKEFFM
0x49000018 C   FIELD 10w01 ESUSPM (rw): ESUSPM
0x49000018 C   FIELD 11w01 USBSUSPM (rw): USBSUSPM
0x49000018 C   FIELD 12w01 USBRST (rw): USBRST
0x49000018 C   FIELD 13w01 ENUMDNEM (rw): ENUMDNEM
0x49000018 C   FIELD 14w01 ISOODRPM (rw): ISOODRPM
0x49000018 C   FIELD 15w01 EOPFM (rw): EOPFM
0x49000018 C   FIELD 18w01 IEPINT (rw): IEPINT
0x49000018 C   FIELD 19w01 OEPINT (rw): OEPINT
0x49000018 C   FIELD 20w01 IISOIXFRM (rw): IISOIXFRM
0x49000018 C   FIELD 21w01 IPXFRM (rw): IPXFRM
0x49000018 C   FIELD 22w01 FSUSPM (rw): FSUSPM
0x49000018 C   FIELD 23w01 RSTDETM (rw): RSTDETM
0x49000018 C   FIELD 24w01 PRTIM (ro): PRTIM
0x49000018 C   FIELD 25w01 HCIM (rw): HCIM
0x49000018 C   FIELD 26w01 PTXFEM (rw): PTXFEM
0x49000018 C   FIELD 27w01 LPMINTM (rw): LPMINTM
0x49000018 C   FIELD 28w01 CIDSCHGM (rw): CIDSCHGM
0x49000018 C   FIELD 29w01 DISCINT (rw): DISCINT
0x49000018 C   FIELD 30w01 SRQIM (rw): SRQIM
0x49000018 C   FIELD 31w01 WUIM (rw): WUIM
0x4900001C B  REGISTER OTG_GRXSTSR (ro): This description is for register OTG_GRXSTSR in Device mode. A read to the receive status debug read register returns the contents of the top of the receive FIFO. The core ignores the receive status read when the receive FIFO is empty and returns a value of 0x00000000.
0x4900001C C   FIELD 00w04 EPNUM: EPNUM
0x4900001C C   FIELD 04w11 BCNT: BCNT
0x4900001C C   FIELD 15w02 DPID: DPID
0x4900001C C   FIELD 17w04 PKTSTS: PKTSTS
0x4900001C C   FIELD 21w04 FRMNUM: FRMNUM
0x4900001C C   FIELD 27w01 STSPHST: STSPHST
0x49000020 B  REGISTER OTG_GRXSTSP (ro): This description is for register OTG_GRXSTSP in Device mode. Similarly to OTG_GRXSTSR (receive status debug read register) where a read returns the contents of the top of the receive FIFO, a read to OTG_GRXSTSP (receive status read and pop register) additionally pops the top data entry out of the Rx FIFO. The core ignores the receive status pop/read when the receive FIFO is empty and returns a value of 0x00000000. The application must only pop the receive status FIFO when the receive FIFO non-empty bit of the core interrupt register (RXFLVL bit in OTG_GINTSTS) is asserted.
0x49000020 C   FIELD 00w04 EPNUM: EPNUM
0x49000020 C   FIELD 04w11 BCNT: BCNT
0x49000020 C   FIELD 15w02 DPID: DPID
0x49000020 C   FIELD 17w04 PKTSTS: PKTSTS
0x49000020 C   FIELD 21w04 FRMNUM: FRMNUM
0x49000020 C   FIELD 27w01 STSPHST: STSPHST
0x49000024 B  REGISTER OTG_GRXFSIZ (rw): The application can program the RAM size that must be allocated to the Rx FIFO.
0x49000024 C   FIELD 00w16 RXFD: RXFD
0x49000028 B  REGISTER OTG_HNPTXFSIZ (rw): Host mode
0x49000028 C   FIELD 00w16 NPTXFSA: NPTXFSA
0x49000028 C   FIELD 16w16 NPTXFD: NPTXFD
0x4900002C B  REGISTER OTG_HNPTXSTS (ro): In device mode, this register is not valid. This read-only register contains the free space information for the non-periodic Tx FIFO and the non-periodic transmit request queue.
0x4900002C C   FIELD 00w16 NPTXFSAV: NPTXFSAV
0x4900002C C   FIELD 16w08 NPTQXSAV: NPTQXSAV
0x4900002C C   FIELD 24w07 NPTXQTOP: NPTXQTOP
0x49000038 B  REGISTER OTG_GCCFG: OTG general core configuration register
0x49000038 C   FIELD 01w01 PDET (ro): PDET
0x49000038 C   FIELD 02w01 SDET (ro): SDET
0x49000038 C   FIELD 03w01 PS2DET (ro): PS2DET
0x49000038 C   FIELD 16w01 PWRDWN (rw): PWRDWN
0x49000038 C   FIELD 17w01 BCDEN (rw): BCDEN
0x49000038 C   FIELD 19w01 PDEN (rw): PDEN
0x49000038 C   FIELD 20w01 SDEN (rw): SDEN
0x49000038 C   FIELD 21w01 VBDEN (rw): VBDEN
0x49000038 C   FIELD 22w01 IDEN (rw): IDEN
0x4900003C B  REGISTER OTG_CID (rw): This is a register containing the Product ID as reset value.
0x4900003C C   FIELD 00w32 PRODUCT_ID: PRODUCT_ID
0x49000054 B  REGISTER OTG_GLPMCFG: OTG core LPM configuration register
0x49000054 C   FIELD 00w01 LPMEN (rw): LPMEN
0x49000054 C   FIELD 01w01 LPMACK (rw): LPMACK
0x49000054 C   FIELD 02w04 BESL (rw): BESL
0x49000054 C   FIELD 06w01 REMWAKE (rw): REMWAKE
0x49000054 C   FIELD 07w01 L1SSEN (rw): L1SSEN
0x49000054 C   FIELD 08w04 BESLTHRS (rw): BESLTHRS
0x49000054 C   FIELD 12w01 L1DSEN (rw): L1DSEN
0x49000054 C   FIELD 13w02 LPMRSP (ro): LPMRSP
0x49000054 C   FIELD 15w01 SLPSTS (ro): SLPSTS
0x49000054 C   FIELD 16w01 L1RSMOK (ro): L1RSMOK
0x49000054 C   FIELD 17w04 LPMCHIDX (rw): LPMCHIDX
0x49000054 C   FIELD 21w03 LPMRCNT (rw): LPMRCNT
0x49000054 C   FIELD 24w01 SNDLPM (rw): SNDLPM
0x49000054 C   FIELD 25w03 LPMRCNTSTS (ro): LPMRCNTSTS
0x49000054 C   FIELD 28w01 ENBESL (rw): ENBESL
0x49000100 B  REGISTER OTG_HPTXFSIZ (rw): OTG host periodic transmit FIFO size register
0x49000100 C   FIELD 00w16 PTXSA: PTXSA
0x49000100 C   FIELD 16w16 PTXFSIZ: PTXFSIZ
0x49000104 B  REGISTER OTG_DIEPTXF1 (rw): OTG device IN endpoint transmit FIFO 1 size register
0x49000104 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x49000104 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x49000108 B  REGISTER OTG_DIEPTXF2 (rw): OTG device IN endpoint transmit FIFO 2 size register
0x49000108 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x49000108 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x4900010C B  REGISTER OTG_DIEPTXF3 (rw): OTG device IN endpoint transmit FIFO 3 size register
0x4900010C C   FIELD 00w16 INEPTXSA: INEPTXSA
0x4900010C C   FIELD 16w16 INEPTXFD: INEPTXFD
0x49000110 B  REGISTER OTG_DIEPTXF4 (rw): OTG device IN endpoint transmit FIFO 4 size register
0x49000110 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x49000110 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x49000114 B  REGISTER OTG_DIEPTXF5 (rw): OTG device IN endpoint transmit FIFO 5 size register
0x49000114 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x49000114 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x49000118 B  REGISTER OTG_DIEPTXF6 (rw): OTG device IN endpoint transmit FIFO 6 size register
0x49000118 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x49000118 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x4900011C B  REGISTER OTG_DIEPTXF7 (rw): OTG device IN endpoint transmit FIFO 7 size register
0x4900011C C   FIELD 00w16 INEPTXSA: INEPTXSA
0x4900011C C   FIELD 16w16 INEPTXFD: INEPTXFD
0x49000120 B  REGISTER OTG_DIEPTXF8 (rw): OTG device IN endpoint transmit FIFO 8 size register
0x49000120 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x49000120 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x49000400 B  REGISTER OTG_HCFG: This register configures the core after power-on. Do not make changes to this register after initializing the host.
0x49000400 C   FIELD 00w02 FSLSPCS (rw): FSLSPCS
0x49000400 C   FIELD 02w01 FSLSS (ro): FSLSS
0x49000400 C   FIELD 23w01 DESCDMA (rw): DESCDMA
0x49000400 C   FIELD 24w02 FRLSTEN (rw): FRLSTEN
0x49000400 C   FIELD 26w01 PERSSCHEDENA (rw): PERSSCHEDENA
0x49000404 B  REGISTER OTG_HFIR (rw): This register stores the frame interval information for the current speed to which the OTG controller has enumerated.
0x49000404 C   FIELD 00w16 FRIVL: FRIVL
0x49000404 C   FIELD 16w01 RLDCTRL: RLDCTRL
0x49000408 B  REGISTER OTG_HFNUM (ro): This register indicates the current frame number. It also indicates the time remaining (in terms of the number of PHY clocks) in the current frame.
0x49000408 C   FIELD 00w16 FRNUM: FRNUM
0x49000408 C   FIELD 16w16 FTREM: FTREM
0x49000410 B  REGISTER OTG_HPTXSTS (ro): This read-only register contains the free space information for the periodic Tx FIFO and the periodic transmit request queue.
0x49000410 C   FIELD 00w16 PTXFSAVL: PTXFSAVL
0x49000410 C   FIELD 16w08 PTXQSAV: PTXQSAV
0x49000410 C   FIELD 24w08 PTXQTOP: PTXQTOP
0x49000414 B  REGISTER OTG_HAINT (ro): When a significant event occurs on a channel, the host all channels interrupt register interrupts the application using the host channels interrupt bit of the core interrupt register (HCINT bit in OTG_GINTSTS). This is shown in Figure724. There is one interrupt bit per channel, up to a maximum of 16 bits. Bits in this register are set and cleared when the application sets and clears bits in the corresponding host channel-x interrupt register.
0x49000414 C   FIELD 00w16 HAINT: HAINT
0x49000418 B  REGISTER OTG_HAINTMSK (rw): The host all channel interrupt mask register works with the host all channel interrupt register to interrupt the application when an event occurs on a channel. There is one interrupt mask bit per channel, up to a maximum of 16 bits.
0x49000418 C   FIELD 00w16 HAINTM: HAINTM
0x4900041C B  REGISTER OTG_HFLBADDR (rw): This register holds the starting address of the frame list information (scatter/gather mode).
0x4900041C C   FIELD 00w32 HFLBADDR: HFLBADDR
0x49000440 B  REGISTER OTG_HPRT: This register is available only in host mode. Currently, the OTG host supports only one port. A single register holds USB port-related information such as USB reset, enable, suspend, resume, connect status, and test mode for each port. It is shown in Figure724. The rc_w1 bits in this register can trigger an interrupt to the application through the host port interrupt bit of the core interrupt register (HPRTINT bit in OTG_GINTSTS). On a port interrupt, the application must read this register and clear the bit that caused the interrupt. For the rc_w1 bits, the application must write a 1 to the bit to clear the interrupt.
0x49000440 C   FIELD 00w01 PCSTS (ro): PCSTS
0x49000440 C   FIELD 01w01 PCDET (rw): PCDET
0x49000440 C   FIELD 02w01 PENA (rw): PENA
0x49000440 C   FIELD 03w01 PENCHNG (rw): PENCHNG
0x49000440 C   FIELD 04w01 POCA (ro): POCA
0x49000440 C   FIELD 05w01 POCCHNG (rw): POCCHNG
0x49000440 C   FIELD 06w01 PRES (rw): PRES
0x49000440 C   FIELD 07w01 PSUSP (rw): PSUSP
0x49000440 C   FIELD 08w01 PRST (rw): PRST
0x49000440 C   FIELD 10w02 PLSTS (ro): PLSTS
0x49000440 C   FIELD 12w01 PPWR (rw): PPWR
0x49000440 C   FIELD 13w04 PTCTL (rw): PTCTL
0x49000440 C   FIELD 17w02 PSPD (ro): PSPD
0x49000500 B  REGISTER OTG_HCCHAR0 (rw): OTG host channel 0 characteristics register
0x49000500 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000500 C   FIELD 11w04 EPNUM: EPNUM
0x49000500 C   FIELD 15w01 EPDIR: EPDIR
0x49000500 C   FIELD 17w01 LSDEV: LSDEV
0x49000500 C   FIELD 18w02 EPTYP: EPTYP
0x49000500 C   FIELD 20w02 MCNT: MCNT
0x49000500 C   FIELD 22w07 DAD: DAD
0x49000500 C   FIELD 30w01 CHDIS: CHDIS
0x49000500 C   FIELD 31w01 CHENA: CHENA
0x49000504 B  REGISTER OTG_HCSPLT0 (rw): OTG host channel 0 split control register
0x49000504 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000504 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000504 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000504 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000504 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000508 B  REGISTER OTG_HCINT0 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000508 C   FIELD 00w01 XFRC: XFRC
0x49000508 C   FIELD 01w01 CHH: CHH
0x49000508 C   FIELD 02w01 AHBERR: AHBERR
0x49000508 C   FIELD 03w01 STALL: STALL
0x49000508 C   FIELD 04w01 NAK: NAK
0x49000508 C   FIELD 05w01 ACK: ACK
0x49000508 C   FIELD 06w01 NYET: NYET
0x49000508 C   FIELD 07w01 TXERR: TXERR
0x49000508 C   FIELD 08w01 BBERR: BBERR
0x49000508 C   FIELD 09w01 FRMOR: FRMOR
0x49000508 C   FIELD 10w01 DTERR: DTERR
0x49000508 C   FIELD 11w01 BNA: BNA
0x49000508 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000508 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900050C B  REGISTER OTG_HCINTMSK0 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900050C C   FIELD 00w01 XFRCM: XFRCM
0x4900050C C   FIELD 01w01 CHHM: CHHM
0x4900050C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900050C C   FIELD 03w01 STALLM: STALLM
0x4900050C C   FIELD 04w01 NAKM: NAKM
0x4900050C C   FIELD 05w01 ACKM: ACKM
0x4900050C C   FIELD 06w01 NYET: NYET
0x4900050C C   FIELD 07w01 TXERRM: TXERRM
0x4900050C C   FIELD 08w01 BBERRM: BBERRM
0x4900050C C   FIELD 09w01 FRMORM: FRMORM
0x4900050C C   FIELD 10w01 DTERRM: DTERRM
0x4900050C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900050C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000510 B  REGISTER OTG_HCTSIZ0 (rw): OTG host channel 0 transfer size register
0x49000510 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000510 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000510 C   FIELD 29w02 DPID: DPID
0x49000514 B  REGISTER OTG_HCDMA0 (rw): OTG host channel 0 DMA address register in buffer DMA [alternate]
0x49000514 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900051C B  REGISTER OTG_HCDMAB0 (ro): OTG host channel-n DMA address buffer register
0x4900051C C   FIELD 00w32 HCDMAB: HCDMAB
0x49000520 B  REGISTER OTG_HCCHAR1 (rw): OTG host channel 1 characteristics register
0x49000520 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000520 C   FIELD 11w04 EPNUM: EPNUM
0x49000520 C   FIELD 15w01 EPDIR: EPDIR
0x49000520 C   FIELD 17w01 LSDEV: LSDEV
0x49000520 C   FIELD 18w02 EPTYP: EPTYP
0x49000520 C   FIELD 20w02 MCNT: MCNT
0x49000520 C   FIELD 22w07 DAD: DAD
0x49000520 C   FIELD 30w01 CHDIS: CHDIS
0x49000520 C   FIELD 31w01 CHENA: CHENA
0x49000524 B  REGISTER OTG_HCSPLT1 (rw): OTG host channel 1 split control register
0x49000524 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000524 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000524 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000524 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000524 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000528 B  REGISTER OTG_HCINT1 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000528 C   FIELD 00w01 XFRC: XFRC
0x49000528 C   FIELD 01w01 CHH: CHH
0x49000528 C   FIELD 02w01 AHBERR: AHBERR
0x49000528 C   FIELD 03w01 STALL: STALL
0x49000528 C   FIELD 04w01 NAK: NAK
0x49000528 C   FIELD 05w01 ACK: ACK
0x49000528 C   FIELD 06w01 NYET: NYET
0x49000528 C   FIELD 07w01 TXERR: TXERR
0x49000528 C   FIELD 08w01 BBERR: BBERR
0x49000528 C   FIELD 09w01 FRMOR: FRMOR
0x49000528 C   FIELD 10w01 DTERR: DTERR
0x49000528 C   FIELD 11w01 BNA: BNA
0x49000528 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000528 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900052C B  REGISTER OTG_HCINTMSK1 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900052C C   FIELD 00w01 XFRCM: XFRCM
0x4900052C C   FIELD 01w01 CHHM: CHHM
0x4900052C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900052C C   FIELD 03w01 STALLM: STALLM
0x4900052C C   FIELD 04w01 NAKM: NAKM
0x4900052C C   FIELD 05w01 ACKM: ACKM
0x4900052C C   FIELD 06w01 NYET: NYET
0x4900052C C   FIELD 07w01 TXERRM: TXERRM
0x4900052C C   FIELD 08w01 BBERRM: BBERRM
0x4900052C C   FIELD 09w01 FRMORM: FRMORM
0x4900052C C   FIELD 10w01 DTERRM: DTERRM
0x4900052C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900052C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000530 B  REGISTER OTG_HCTSIZ1 (rw): OTG host channel 1 transfer size register
0x49000530 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000530 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000530 C   FIELD 29w02 DPID: DPID
0x49000534 B  REGISTER OTG_HCDMA1 (rw): OTG host channel 1 DMA address register in buffer DMA [alternate]
0x49000534 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900053C B  REGISTER OTG_HCDMAB1 (ro): OTG host channel-n DMA address buffer register
0x4900053C C   FIELD 00w32 HCDMAB: HCDMAB
0x49000540 B  REGISTER OTG_HCCHAR2 (rw): OTG host channel 2 characteristics register
0x49000540 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000540 C   FIELD 11w04 EPNUM: EPNUM
0x49000540 C   FIELD 15w01 EPDIR: EPDIR
0x49000540 C   FIELD 17w01 LSDEV: LSDEV
0x49000540 C   FIELD 18w02 EPTYP: EPTYP
0x49000540 C   FIELD 20w02 MCNT: MCNT
0x49000540 C   FIELD 22w07 DAD: DAD
0x49000540 C   FIELD 30w01 CHDIS: CHDIS
0x49000540 C   FIELD 31w01 CHENA: CHENA
0x49000544 B  REGISTER OTG_HCSPLT2 (rw): OTG host channel 2 split control register
0x49000544 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000544 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000544 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000544 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000544 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000548 B  REGISTER OTG_HCINT2 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000548 C   FIELD 00w01 XFRC: XFRC
0x49000548 C   FIELD 01w01 CHH: CHH
0x49000548 C   FIELD 02w01 AHBERR: AHBERR
0x49000548 C   FIELD 03w01 STALL: STALL
0x49000548 C   FIELD 04w01 NAK: NAK
0x49000548 C   FIELD 05w01 ACK: ACK
0x49000548 C   FIELD 06w01 NYET: NYET
0x49000548 C   FIELD 07w01 TXERR: TXERR
0x49000548 C   FIELD 08w01 BBERR: BBERR
0x49000548 C   FIELD 09w01 FRMOR: FRMOR
0x49000548 C   FIELD 10w01 DTERR: DTERR
0x49000548 C   FIELD 11w01 BNA: BNA
0x49000548 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000548 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900054C B  REGISTER OTG_HCINTMSK2 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900054C C   FIELD 00w01 XFRCM: XFRCM
0x4900054C C   FIELD 01w01 CHHM: CHHM
0x4900054C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900054C C   FIELD 03w01 STALLM: STALLM
0x4900054C C   FIELD 04w01 NAKM: NAKM
0x4900054C C   FIELD 05w01 ACKM: ACKM
0x4900054C C   FIELD 06w01 NYET: NYET
0x4900054C C   FIELD 07w01 TXERRM: TXERRM
0x4900054C C   FIELD 08w01 BBERRM: BBERRM
0x4900054C C   FIELD 09w01 FRMORM: FRMORM
0x4900054C C   FIELD 10w01 DTERRM: DTERRM
0x4900054C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900054C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000550 B  REGISTER OTG_HCTSIZ2 (rw): OTG host channel 2 transfer size register
0x49000550 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000550 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000550 C   FIELD 29w02 DPID: DPID
0x49000554 B  REGISTER OTG_HCDMA2 (rw): OTG host channel 2 DMA address register in buffer DMA [alternate]
0x49000554 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900055C B  REGISTER OTG_HCDMAB2 (ro): OTG host channel-n DMA address buffer register
0x4900055C C   FIELD 00w32 HCDMAB: HCDMAB
0x49000560 B  REGISTER OTG_HCCHAR3 (rw): OTG host channel 3 characteristics register
0x49000560 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000560 C   FIELD 11w04 EPNUM: EPNUM
0x49000560 C   FIELD 15w01 EPDIR: EPDIR
0x49000560 C   FIELD 17w01 LSDEV: LSDEV
0x49000560 C   FIELD 18w02 EPTYP: EPTYP
0x49000560 C   FIELD 20w02 MCNT: MCNT
0x49000560 C   FIELD 22w07 DAD: DAD
0x49000560 C   FIELD 30w01 CHDIS: CHDIS
0x49000560 C   FIELD 31w01 CHENA: CHENA
0x49000564 B  REGISTER OTG_HCSPLT3 (rw): OTG host channel 3 split control register
0x49000564 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000564 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000564 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000564 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000564 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000568 B  REGISTER OTG_HCINT3 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000568 C   FIELD 00w01 XFRC: XFRC
0x49000568 C   FIELD 01w01 CHH: CHH
0x49000568 C   FIELD 02w01 AHBERR: AHBERR
0x49000568 C   FIELD 03w01 STALL: STALL
0x49000568 C   FIELD 04w01 NAK: NAK
0x49000568 C   FIELD 05w01 ACK: ACK
0x49000568 C   FIELD 06w01 NYET: NYET
0x49000568 C   FIELD 07w01 TXERR: TXERR
0x49000568 C   FIELD 08w01 BBERR: BBERR
0x49000568 C   FIELD 09w01 FRMOR: FRMOR
0x49000568 C   FIELD 10w01 DTERR: DTERR
0x49000568 C   FIELD 11w01 BNA: BNA
0x49000568 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000568 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900056C B  REGISTER OTG_HCINTMSK3 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900056C C   FIELD 00w01 XFRCM: XFRCM
0x4900056C C   FIELD 01w01 CHHM: CHHM
0x4900056C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900056C C   FIELD 03w01 STALLM: STALLM
0x4900056C C   FIELD 04w01 NAKM: NAKM
0x4900056C C   FIELD 05w01 ACKM: ACKM
0x4900056C C   FIELD 06w01 NYET: NYET
0x4900056C C   FIELD 07w01 TXERRM: TXERRM
0x4900056C C   FIELD 08w01 BBERRM: BBERRM
0x4900056C C   FIELD 09w01 FRMORM: FRMORM
0x4900056C C   FIELD 10w01 DTERRM: DTERRM
0x4900056C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900056C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000570 B  REGISTER OTG_HCTSIZ3 (rw): OTG host channel 3 transfer size register
0x49000570 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000570 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000570 C   FIELD 29w02 DPID: DPID
0x49000574 B  REGISTER OTG_HCDMA3 (rw): OTG host channel 3 DMA address register in buffer DMA [alternate]
0x49000574 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900057C B  REGISTER OTG_HCDMAB3 (ro): OTG host channel-n DMA address buffer register
0x4900057C C   FIELD 00w32 HCDMAB: HCDMAB
0x49000580 B  REGISTER OTG_HCCHAR4 (rw): OTG host channel 4 characteristics register
0x49000580 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000580 C   FIELD 11w04 EPNUM: EPNUM
0x49000580 C   FIELD 15w01 EPDIR: EPDIR
0x49000580 C   FIELD 17w01 LSDEV: LSDEV
0x49000580 C   FIELD 18w02 EPTYP: EPTYP
0x49000580 C   FIELD 20w02 MCNT: MCNT
0x49000580 C   FIELD 22w07 DAD: DAD
0x49000580 C   FIELD 30w01 CHDIS: CHDIS
0x49000580 C   FIELD 31w01 CHENA: CHENA
0x49000584 B  REGISTER OTG_HCSPLT4 (rw): OTG host channel 4 split control register
0x49000584 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000584 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000584 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000584 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000584 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000588 B  REGISTER OTG_HCINT4 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000588 C   FIELD 00w01 XFRC: XFRC
0x49000588 C   FIELD 01w01 CHH: CHH
0x49000588 C   FIELD 02w01 AHBERR: AHBERR
0x49000588 C   FIELD 03w01 STALL: STALL
0x49000588 C   FIELD 04w01 NAK: NAK
0x49000588 C   FIELD 05w01 ACK: ACK
0x49000588 C   FIELD 06w01 NYET: NYET
0x49000588 C   FIELD 07w01 TXERR: TXERR
0x49000588 C   FIELD 08w01 BBERR: BBERR
0x49000588 C   FIELD 09w01 FRMOR: FRMOR
0x49000588 C   FIELD 10w01 DTERR: DTERR
0x49000588 C   FIELD 11w01 BNA: BNA
0x49000588 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000588 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900058C B  REGISTER OTG_HCINTMSK4 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900058C C   FIELD 00w01 XFRCM: XFRCM
0x4900058C C   FIELD 01w01 CHHM: CHHM
0x4900058C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900058C C   FIELD 03w01 STALLM: STALLM
0x4900058C C   FIELD 04w01 NAKM: NAKM
0x4900058C C   FIELD 05w01 ACKM: ACKM
0x4900058C C   FIELD 06w01 NYET: NYET
0x4900058C C   FIELD 07w01 TXERRM: TXERRM
0x4900058C C   FIELD 08w01 BBERRM: BBERRM
0x4900058C C   FIELD 09w01 FRMORM: FRMORM
0x4900058C C   FIELD 10w01 DTERRM: DTERRM
0x4900058C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900058C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000590 B  REGISTER OTG_HCTSIZ4 (rw): OTG host channel 4 transfer size register
0x49000590 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000590 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000590 C   FIELD 29w02 DPID: DPID
0x49000594 B  REGISTER OTG_HCDMA4 (rw): OTG host channel 4 DMA address register in buffer DMA [alternate]
0x49000594 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900059C B  REGISTER OTG_HCDMAB4 (ro): OTG host channel-n DMA address buffer register
0x4900059C C   FIELD 00w32 HCDMAB: HCDMAB
0x490005A0 B  REGISTER OTG_HCCHAR5 (rw): OTG host channel 5 characteristics register
0x490005A0 C   FIELD 00w11 MPSIZ: MPSIZ
0x490005A0 C   FIELD 11w04 EPNUM: EPNUM
0x490005A0 C   FIELD 15w01 EPDIR: EPDIR
0x490005A0 C   FIELD 17w01 LSDEV: LSDEV
0x490005A0 C   FIELD 18w02 EPTYP: EPTYP
0x490005A0 C   FIELD 20w02 MCNT: MCNT
0x490005A0 C   FIELD 22w07 DAD: DAD
0x490005A0 C   FIELD 30w01 CHDIS: CHDIS
0x490005A0 C   FIELD 31w01 CHENA: CHENA
0x490005A4 B  REGISTER OTG_HCSPLT5 (rw): OTG host channel 5 split control register
0x490005A4 C   FIELD 00w07 PRTADDR: PRTADDR
0x490005A4 C   FIELD 07w07 HUBADDR: HUBADDR
0x490005A4 C   FIELD 14w02 XACTPOS: XACTPOS
0x490005A4 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x490005A4 C   FIELD 31w01 SPLITEN: SPLITEN
0x490005A8 B  REGISTER OTG_HCINT5 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x490005A8 C   FIELD 00w01 XFRC: XFRC
0x490005A8 C   FIELD 01w01 CHH: CHH
0x490005A8 C   FIELD 02w01 AHBERR: AHBERR
0x490005A8 C   FIELD 03w01 STALL: STALL
0x490005A8 C   FIELD 04w01 NAK: NAK
0x490005A8 C   FIELD 05w01 ACK: ACK
0x490005A8 C   FIELD 06w01 NYET: NYET
0x490005A8 C   FIELD 07w01 TXERR: TXERR
0x490005A8 C   FIELD 08w01 BBERR: BBERR
0x490005A8 C   FIELD 09w01 FRMOR: FRMOR
0x490005A8 C   FIELD 10w01 DTERR: DTERR
0x490005A8 C   FIELD 11w01 BNA: BNA
0x490005A8 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x490005A8 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x490005AC B  REGISTER OTG_HCINTMSK5 (rw): This register reflects the mask for each channel status described in the previous section.
0x490005AC C   FIELD 00w01 XFRCM: XFRCM
0x490005AC C   FIELD 01w01 CHHM: CHHM
0x490005AC C   FIELD 02w01 AHBERRM: AHBERRM
0x490005AC C   FIELD 03w01 STALLM: STALLM
0x490005AC C   FIELD 04w01 NAKM: NAKM
0x490005AC C   FIELD 05w01 ACKM: ACKM
0x490005AC C   FIELD 06w01 NYET: NYET
0x490005AC C   FIELD 07w01 TXERRM: TXERRM
0x490005AC C   FIELD 08w01 BBERRM: BBERRM
0x490005AC C   FIELD 09w01 FRMORM: FRMORM
0x490005AC C   FIELD 10w01 DTERRM: DTERRM
0x490005AC C   FIELD 11w01 BNAMSK: BNAMSK
0x490005AC C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x490005B0 B  REGISTER OTG_HCTSIZ5 (rw): OTG host channel 5 transfer size register
0x490005B0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490005B0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490005B0 C   FIELD 29w02 DPID: DPID
0x490005B4 B  REGISTER OTG_HCDMA5 (rw): OTG host channel 5 DMA address register in buffer DMA [alternate]
0x490005B4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490005BC B  REGISTER OTG_HCDMAB5 (ro): OTG host channel-n DMA address buffer register
0x490005BC C   FIELD 00w32 HCDMAB: HCDMAB
0x490005C0 B  REGISTER OTG_HCCHAR6 (rw): OTG host channel 6 characteristics register
0x490005C0 C   FIELD 00w11 MPSIZ: MPSIZ
0x490005C0 C   FIELD 11w04 EPNUM: EPNUM
0x490005C0 C   FIELD 15w01 EPDIR: EPDIR
0x490005C0 C   FIELD 17w01 LSDEV: LSDEV
0x490005C0 C   FIELD 18w02 EPTYP: EPTYP
0x490005C0 C   FIELD 20w02 MCNT: MCNT
0x490005C0 C   FIELD 22w07 DAD: DAD
0x490005C0 C   FIELD 30w01 CHDIS: CHDIS
0x490005C0 C   FIELD 31w01 CHENA: CHENA
0x490005C4 B  REGISTER OTG_HCSPLT6 (rw): OTG host channel 6 split control register
0x490005C4 C   FIELD 00w07 PRTADDR: PRTADDR
0x490005C4 C   FIELD 07w07 HUBADDR: HUBADDR
0x490005C4 C   FIELD 14w02 XACTPOS: XACTPOS
0x490005C4 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x490005C4 C   FIELD 31w01 SPLITEN: SPLITEN
0x490005C8 B  REGISTER OTG_HCINT6 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x490005C8 C   FIELD 00w01 XFRC: XFRC
0x490005C8 C   FIELD 01w01 CHH: CHH
0x490005C8 C   FIELD 02w01 AHBERR: AHBERR
0x490005C8 C   FIELD 03w01 STALL: STALL
0x490005C8 C   FIELD 04w01 NAK: NAK
0x490005C8 C   FIELD 05w01 ACK: ACK
0x490005C8 C   FIELD 06w01 NYET: NYET
0x490005C8 C   FIELD 07w01 TXERR: TXERR
0x490005C8 C   FIELD 08w01 BBERR: BBERR
0x490005C8 C   FIELD 09w01 FRMOR: FRMOR
0x490005C8 C   FIELD 10w01 DTERR: DTERR
0x490005C8 C   FIELD 11w01 BNA: BNA
0x490005C8 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x490005C8 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x490005CC B  REGISTER OTG_HCINTMSK6 (rw): This register reflects the mask for each channel status described in the previous section.
0x490005CC C   FIELD 00w01 XFRCM: XFRCM
0x490005CC C   FIELD 01w01 CHHM: CHHM
0x490005CC C   FIELD 02w01 AHBERRM: AHBERRM
0x490005CC C   FIELD 03w01 STALLM: STALLM
0x490005CC C   FIELD 04w01 NAKM: NAKM
0x490005CC C   FIELD 05w01 ACKM: ACKM
0x490005CC C   FIELD 06w01 NYET: NYET
0x490005CC C   FIELD 07w01 TXERRM: TXERRM
0x490005CC C   FIELD 08w01 BBERRM: BBERRM
0x490005CC C   FIELD 09w01 FRMORM: FRMORM
0x490005CC C   FIELD 10w01 DTERRM: DTERRM
0x490005CC C   FIELD 11w01 BNAMSK: BNAMSK
0x490005CC C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x490005D0 B  REGISTER OTG_HCTSIZ6 (rw): OTG host channel 6 transfer size register
0x490005D0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490005D0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490005D0 C   FIELD 29w02 DPID: DPID
0x490005D4 B  REGISTER OTG_HCDMA6 (rw): OTG host channel 6 DMA address register in buffer DMA [alternate]
0x490005D4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490005DC B  REGISTER OTG_HCDMAB6 (ro): OTG host channel-n DMA address buffer register
0x490005DC C   FIELD 00w32 HCDMAB: HCDMAB
0x490005E0 B  REGISTER OTG_HCCHAR7 (rw): OTG host channel 7 characteristics register
0x490005E0 C   FIELD 00w11 MPSIZ: MPSIZ
0x490005E0 C   FIELD 11w04 EPNUM: EPNUM
0x490005E0 C   FIELD 15w01 EPDIR: EPDIR
0x490005E0 C   FIELD 17w01 LSDEV: LSDEV
0x490005E0 C   FIELD 18w02 EPTYP: EPTYP
0x490005E0 C   FIELD 20w02 MCNT: MCNT
0x490005E0 C   FIELD 22w07 DAD: DAD
0x490005E0 C   FIELD 30w01 CHDIS: CHDIS
0x490005E0 C   FIELD 31w01 CHENA: CHENA
0x490005E4 B  REGISTER OTG_HCSPLT7 (rw): OTG host channel 7 split control register
0x490005E4 C   FIELD 00w07 PRTADDR: PRTADDR
0x490005E4 C   FIELD 07w07 HUBADDR: HUBADDR
0x490005E4 C   FIELD 14w02 XACTPOS: XACTPOS
0x490005E4 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x490005E4 C   FIELD 31w01 SPLITEN: SPLITEN
0x490005E8 B  REGISTER OTG_HCINT7 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x490005E8 C   FIELD 00w01 XFRC: XFRC
0x490005E8 C   FIELD 01w01 CHH: CHH
0x490005E8 C   FIELD 02w01 AHBERR: AHBERR
0x490005E8 C   FIELD 03w01 STALL: STALL
0x490005E8 C   FIELD 04w01 NAK: NAK
0x490005E8 C   FIELD 05w01 ACK: ACK
0x490005E8 C   FIELD 06w01 NYET: NYET
0x490005E8 C   FIELD 07w01 TXERR: TXERR
0x490005E8 C   FIELD 08w01 BBERR: BBERR
0x490005E8 C   FIELD 09w01 FRMOR: FRMOR
0x490005E8 C   FIELD 10w01 DTERR: DTERR
0x490005E8 C   FIELD 11w01 BNA: BNA
0x490005E8 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x490005E8 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x490005EC B  REGISTER OTG_HCINTMSK7 (rw): This register reflects the mask for each channel status described in the previous section.
0x490005EC C   FIELD 00w01 XFRCM: XFRCM
0x490005EC C   FIELD 01w01 CHHM: CHHM
0x490005EC C   FIELD 02w01 AHBERRM: AHBERRM
0x490005EC C   FIELD 03w01 STALLM: STALLM
0x490005EC C   FIELD 04w01 NAKM: NAKM
0x490005EC C   FIELD 05w01 ACKM: ACKM
0x490005EC C   FIELD 06w01 NYET: NYET
0x490005EC C   FIELD 07w01 TXERRM: TXERRM
0x490005EC C   FIELD 08w01 BBERRM: BBERRM
0x490005EC C   FIELD 09w01 FRMORM: FRMORM
0x490005EC C   FIELD 10w01 DTERRM: DTERRM
0x490005EC C   FIELD 11w01 BNAMSK: BNAMSK
0x490005EC C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x490005F0 B  REGISTER OTG_HCTSIZ7 (rw): OTG host channel 7 transfer size register
0x490005F0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490005F0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490005F0 C   FIELD 29w02 DPID: DPID
0x490005F4 B  REGISTER OTG_HCDMA7 (rw): OTG host channel 7 DMA address register in buffer DMA [alternate]
0x490005F4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490005FC B  REGISTER OTG_HCDMAB7 (ro): OTG host channel-n DMA address buffer register
0x490005FC C   FIELD 00w32 HCDMAB: HCDMAB
0x49000600 B  REGISTER OTG_HCCHAR8 (rw): OTG host channel 8 characteristics register
0x49000600 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000600 C   FIELD 11w04 EPNUM: EPNUM
0x49000600 C   FIELD 15w01 EPDIR: EPDIR
0x49000600 C   FIELD 17w01 LSDEV: LSDEV
0x49000600 C   FIELD 18w02 EPTYP: EPTYP
0x49000600 C   FIELD 20w02 MCNT: MCNT
0x49000600 C   FIELD 22w07 DAD: DAD
0x49000600 C   FIELD 30w01 CHDIS: CHDIS
0x49000600 C   FIELD 31w01 CHENA: CHENA
0x49000604 B  REGISTER OTG_HCSPLT8 (rw): OTG host channel 8 split control register
0x49000604 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000604 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000604 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000604 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000604 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000608 B  REGISTER OTG_HCINT8 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000608 C   FIELD 00w01 XFRC: XFRC
0x49000608 C   FIELD 01w01 CHH: CHH
0x49000608 C   FIELD 02w01 AHBERR: AHBERR
0x49000608 C   FIELD 03w01 STALL: STALL
0x49000608 C   FIELD 04w01 NAK: NAK
0x49000608 C   FIELD 05w01 ACK: ACK
0x49000608 C   FIELD 06w01 NYET: NYET
0x49000608 C   FIELD 07w01 TXERR: TXERR
0x49000608 C   FIELD 08w01 BBERR: BBERR
0x49000608 C   FIELD 09w01 FRMOR: FRMOR
0x49000608 C   FIELD 10w01 DTERR: DTERR
0x49000608 C   FIELD 11w01 BNA: BNA
0x49000608 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000608 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900060C B  REGISTER OTG_HCINTMSK8 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900060C C   FIELD 00w01 XFRCM: XFRCM
0x4900060C C   FIELD 01w01 CHHM: CHHM
0x4900060C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900060C C   FIELD 03w01 STALLM: STALLM
0x4900060C C   FIELD 04w01 NAKM: NAKM
0x4900060C C   FIELD 05w01 ACKM: ACKM
0x4900060C C   FIELD 06w01 NYET: NYET
0x4900060C C   FIELD 07w01 TXERRM: TXERRM
0x4900060C C   FIELD 08w01 BBERRM: BBERRM
0x4900060C C   FIELD 09w01 FRMORM: FRMORM
0x4900060C C   FIELD 10w01 DTERRM: DTERRM
0x4900060C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900060C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000610 B  REGISTER OTG_HCTSIZ8 (rw): OTG host channel 8 transfer size register
0x49000610 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000610 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000610 C   FIELD 29w02 DPID: DPID
0x49000614 B  REGISTER OTG_HCDMA8 (rw): OTG host channel 8 DMA address register in buffer DMA [alternate]
0x49000614 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900061C B  REGISTER OTG_HCDMAB8 (ro): OTG host channel-n DMA address buffer register
0x4900061C C   FIELD 00w32 HCDMAB: HCDMAB
0x49000620 B  REGISTER OTG_HCCHAR9 (rw): OTG host channel 9 characteristics register
0x49000620 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000620 C   FIELD 11w04 EPNUM: EPNUM
0x49000620 C   FIELD 15w01 EPDIR: EPDIR
0x49000620 C   FIELD 17w01 LSDEV: LSDEV
0x49000620 C   FIELD 18w02 EPTYP: EPTYP
0x49000620 C   FIELD 20w02 MCNT: MCNT
0x49000620 C   FIELD 22w07 DAD: DAD
0x49000620 C   FIELD 30w01 CHDIS: CHDIS
0x49000620 C   FIELD 31w01 CHENA: CHENA
0x49000624 B  REGISTER OTG_HCSPLT9 (rw): OTG host channel 9 split control register
0x49000624 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000624 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000624 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000624 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000624 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000628 B  REGISTER OTG_HCINT9 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000628 C   FIELD 00w01 XFRC: XFRC
0x49000628 C   FIELD 01w01 CHH: CHH
0x49000628 C   FIELD 02w01 AHBERR: AHBERR
0x49000628 C   FIELD 03w01 STALL: STALL
0x49000628 C   FIELD 04w01 NAK: NAK
0x49000628 C   FIELD 05w01 ACK: ACK
0x49000628 C   FIELD 06w01 NYET: NYET
0x49000628 C   FIELD 07w01 TXERR: TXERR
0x49000628 C   FIELD 08w01 BBERR: BBERR
0x49000628 C   FIELD 09w01 FRMOR: FRMOR
0x49000628 C   FIELD 10w01 DTERR: DTERR
0x49000628 C   FIELD 11w01 BNA: BNA
0x49000628 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000628 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900062C B  REGISTER OTG_HCINTMSK9 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900062C C   FIELD 00w01 XFRCM: XFRCM
0x4900062C C   FIELD 01w01 CHHM: CHHM
0x4900062C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900062C C   FIELD 03w01 STALLM: STALLM
0x4900062C C   FIELD 04w01 NAKM: NAKM
0x4900062C C   FIELD 05w01 ACKM: ACKM
0x4900062C C   FIELD 06w01 NYET: NYET
0x4900062C C   FIELD 07w01 TXERRM: TXERRM
0x4900062C C   FIELD 08w01 BBERRM: BBERRM
0x4900062C C   FIELD 09w01 FRMORM: FRMORM
0x4900062C C   FIELD 10w01 DTERRM: DTERRM
0x4900062C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900062C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000630 B  REGISTER OTG_HCTSIZ9 (rw): OTG host channel 9 transfer size register
0x49000630 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000630 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000630 C   FIELD 29w02 DPID: DPID
0x49000634 B  REGISTER OTG_HCDMA9 (rw): OTG host channel 9 DMA address register in buffer DMA [alternate]
0x49000634 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900063C B  REGISTER OTG_HCDMAB9 (ro): OTG host channel-n DMA address buffer register
0x4900063C C   FIELD 00w32 HCDMAB: HCDMAB
0x49000640 B  REGISTER OTG_HCCHAR10 (rw): OTG host channel 10 characteristics register
0x49000640 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000640 C   FIELD 11w04 EPNUM: EPNUM
0x49000640 C   FIELD 15w01 EPDIR: EPDIR
0x49000640 C   FIELD 17w01 LSDEV: LSDEV
0x49000640 C   FIELD 18w02 EPTYP: EPTYP
0x49000640 C   FIELD 20w02 MCNT: MCNT
0x49000640 C   FIELD 22w07 DAD: DAD
0x49000640 C   FIELD 30w01 CHDIS: CHDIS
0x49000640 C   FIELD 31w01 CHENA: CHENA
0x49000644 B  REGISTER OTG_HCSPLT10 (rw): OTG host channel 10 split control register
0x49000644 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000644 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000644 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000644 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000644 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000648 B  REGISTER OTG_HCINT10 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000648 C   FIELD 00w01 XFRC: XFRC
0x49000648 C   FIELD 01w01 CHH: CHH
0x49000648 C   FIELD 02w01 AHBERR: AHBERR
0x49000648 C   FIELD 03w01 STALL: STALL
0x49000648 C   FIELD 04w01 NAK: NAK
0x49000648 C   FIELD 05w01 ACK: ACK
0x49000648 C   FIELD 06w01 NYET: NYET
0x49000648 C   FIELD 07w01 TXERR: TXERR
0x49000648 C   FIELD 08w01 BBERR: BBERR
0x49000648 C   FIELD 09w01 FRMOR: FRMOR
0x49000648 C   FIELD 10w01 DTERR: DTERR
0x49000648 C   FIELD 11w01 BNA: BNA
0x49000648 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000648 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900064C B  REGISTER OTG_HCINTMSK10 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900064C C   FIELD 00w01 XFRCM: XFRCM
0x4900064C C   FIELD 01w01 CHHM: CHHM
0x4900064C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900064C C   FIELD 03w01 STALLM: STALLM
0x4900064C C   FIELD 04w01 NAKM: NAKM
0x4900064C C   FIELD 05w01 ACKM: ACKM
0x4900064C C   FIELD 06w01 NYET: NYET
0x4900064C C   FIELD 07w01 TXERRM: TXERRM
0x4900064C C   FIELD 08w01 BBERRM: BBERRM
0x4900064C C   FIELD 09w01 FRMORM: FRMORM
0x4900064C C   FIELD 10w01 DTERRM: DTERRM
0x4900064C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900064C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000650 B  REGISTER OTG_HCTSIZ10 (rw): OTG host channel 10 transfer size register
0x49000650 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000650 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000650 C   FIELD 29w02 DPID: DPID
0x49000654 B  REGISTER OTG_HCDMA10 (rw): OTG host channel 10 DMA address register in buffer DMA [alternate]
0x49000654 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900065C B  REGISTER OTG_HCDMAB10 (ro): OTG host channel-n DMA address buffer register
0x4900065C C   FIELD 00w32 HCDMAB: HCDMAB
0x49000660 B  REGISTER OTG_HCCHAR11 (rw): OTG host channel 11 characteristics register
0x49000660 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000660 C   FIELD 11w04 EPNUM: EPNUM
0x49000660 C   FIELD 15w01 EPDIR: EPDIR
0x49000660 C   FIELD 17w01 LSDEV: LSDEV
0x49000660 C   FIELD 18w02 EPTYP: EPTYP
0x49000660 C   FIELD 20w02 MCNT: MCNT
0x49000660 C   FIELD 22w07 DAD: DAD
0x49000660 C   FIELD 30w01 CHDIS: CHDIS
0x49000660 C   FIELD 31w01 CHENA: CHENA
0x49000664 B  REGISTER OTG_HCSPLT11 (rw): OTG host channel 11 split control register
0x49000664 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000664 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000664 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000664 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000664 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000668 B  REGISTER OTG_HCINT11 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000668 C   FIELD 00w01 XFRC: XFRC
0x49000668 C   FIELD 01w01 CHH: CHH
0x49000668 C   FIELD 02w01 AHBERR: AHBERR
0x49000668 C   FIELD 03w01 STALL: STALL
0x49000668 C   FIELD 04w01 NAK: NAK
0x49000668 C   FIELD 05w01 ACK: ACK
0x49000668 C   FIELD 06w01 NYET: NYET
0x49000668 C   FIELD 07w01 TXERR: TXERR
0x49000668 C   FIELD 08w01 BBERR: BBERR
0x49000668 C   FIELD 09w01 FRMOR: FRMOR
0x49000668 C   FIELD 10w01 DTERR: DTERR
0x49000668 C   FIELD 11w01 BNA: BNA
0x49000668 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000668 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900066C B  REGISTER OTG_HCINTMSK11 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900066C C   FIELD 00w01 XFRCM: XFRCM
0x4900066C C   FIELD 01w01 CHHM: CHHM
0x4900066C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900066C C   FIELD 03w01 STALLM: STALLM
0x4900066C C   FIELD 04w01 NAKM: NAKM
0x4900066C C   FIELD 05w01 ACKM: ACKM
0x4900066C C   FIELD 06w01 NYET: NYET
0x4900066C C   FIELD 07w01 TXERRM: TXERRM
0x4900066C C   FIELD 08w01 BBERRM: BBERRM
0x4900066C C   FIELD 09w01 FRMORM: FRMORM
0x4900066C C   FIELD 10w01 DTERRM: DTERRM
0x4900066C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900066C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000670 B  REGISTER OTG_HCTSIZ11 (rw): OTG host channel 11 transfer size register
0x49000670 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000670 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000670 C   FIELD 29w02 DPID: DPID
0x49000674 B  REGISTER OTG_HCDMA11 (rw): OTG host channel 11 DMA address register in buffer DMA [alternate]
0x49000674 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900067C B  REGISTER OTG_HCDMAB11 (ro): OTG host channel-n DMA address buffer register
0x4900067C C   FIELD 00w32 HCDMAB: HCDMAB
0x49000680 B  REGISTER OTG_HCCHAR12 (rw): OTG host channel 12 characteristics register
0x49000680 C   FIELD 00w11 MPSIZ: MPSIZ
0x49000680 C   FIELD 11w04 EPNUM: EPNUM
0x49000680 C   FIELD 15w01 EPDIR: EPDIR
0x49000680 C   FIELD 17w01 LSDEV: LSDEV
0x49000680 C   FIELD 18w02 EPTYP: EPTYP
0x49000680 C   FIELD 20w02 MCNT: MCNT
0x49000680 C   FIELD 22w07 DAD: DAD
0x49000680 C   FIELD 30w01 CHDIS: CHDIS
0x49000680 C   FIELD 31w01 CHENA: CHENA
0x49000684 B  REGISTER OTG_HCSPLT12 (rw): OTG host channel 12 split control register
0x49000684 C   FIELD 00w07 PRTADDR: PRTADDR
0x49000684 C   FIELD 07w07 HUBADDR: HUBADDR
0x49000684 C   FIELD 14w02 XACTPOS: XACTPOS
0x49000684 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x49000684 C   FIELD 31w01 SPLITEN: SPLITEN
0x49000688 B  REGISTER OTG_HCINT12 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x49000688 C   FIELD 00w01 XFRC: XFRC
0x49000688 C   FIELD 01w01 CHH: CHH
0x49000688 C   FIELD 02w01 AHBERR: AHBERR
0x49000688 C   FIELD 03w01 STALL: STALL
0x49000688 C   FIELD 04w01 NAK: NAK
0x49000688 C   FIELD 05w01 ACK: ACK
0x49000688 C   FIELD 06w01 NYET: NYET
0x49000688 C   FIELD 07w01 TXERR: TXERR
0x49000688 C   FIELD 08w01 BBERR: BBERR
0x49000688 C   FIELD 09w01 FRMOR: FRMOR
0x49000688 C   FIELD 10w01 DTERR: DTERR
0x49000688 C   FIELD 11w01 BNA: BNA
0x49000688 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x49000688 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x4900068C B  REGISTER OTG_HCINTMSK12 (rw): This register reflects the mask for each channel status described in the previous section.
0x4900068C C   FIELD 00w01 XFRCM: XFRCM
0x4900068C C   FIELD 01w01 CHHM: CHHM
0x4900068C C   FIELD 02w01 AHBERRM: AHBERRM
0x4900068C C   FIELD 03w01 STALLM: STALLM
0x4900068C C   FIELD 04w01 NAKM: NAKM
0x4900068C C   FIELD 05w01 ACKM: ACKM
0x4900068C C   FIELD 06w01 NYET: NYET
0x4900068C C   FIELD 07w01 TXERRM: TXERRM
0x4900068C C   FIELD 08w01 BBERRM: BBERRM
0x4900068C C   FIELD 09w01 FRMORM: FRMORM
0x4900068C C   FIELD 10w01 DTERRM: DTERRM
0x4900068C C   FIELD 11w01 BNAMSK: BNAMSK
0x4900068C C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x49000690 B  REGISTER OTG_HCTSIZ12 (rw): OTG host channel 12 transfer size register
0x49000690 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000690 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000690 C   FIELD 29w02 DPID: DPID
0x49000694 B  REGISTER OTG_HCDMA12 (rw): OTG host channel 12 DMA address register in buffer DMA [alternate]
0x49000694 C   FIELD 00w32 DMAADDR: DMAADDR
0x4900069C B  REGISTER OTG_HCDMAB12 (ro): OTG host channel-n DMA address buffer register
0x4900069C C   FIELD 00w32 HCDMAB: HCDMAB
0x490006A0 B  REGISTER OTG_HCCHAR13 (rw): OTG host channel 13 characteristics register
0x490006A0 C   FIELD 00w11 MPSIZ: MPSIZ
0x490006A0 C   FIELD 11w04 EPNUM: EPNUM
0x490006A0 C   FIELD 15w01 EPDIR: EPDIR
0x490006A0 C   FIELD 17w01 LSDEV: LSDEV
0x490006A0 C   FIELD 18w02 EPTYP: EPTYP
0x490006A0 C   FIELD 20w02 MCNT: MCNT
0x490006A0 C   FIELD 22w07 DAD: DAD
0x490006A0 C   FIELD 30w01 CHDIS: CHDIS
0x490006A0 C   FIELD 31w01 CHENA: CHENA
0x490006A4 B  REGISTER OTG_HCSPLT13 (rw): OTG host channel 13 split control register
0x490006A4 C   FIELD 00w07 PRTADDR: PRTADDR
0x490006A4 C   FIELD 07w07 HUBADDR: HUBADDR
0x490006A4 C   FIELD 14w02 XACTPOS: XACTPOS
0x490006A4 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x490006A4 C   FIELD 31w01 SPLITEN: SPLITEN
0x490006A8 B  REGISTER OTG_HCINT13 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x490006A8 C   FIELD 00w01 XFRC: XFRC
0x490006A8 C   FIELD 01w01 CHH: CHH
0x490006A8 C   FIELD 02w01 AHBERR: AHBERR
0x490006A8 C   FIELD 03w01 STALL: STALL
0x490006A8 C   FIELD 04w01 NAK: NAK
0x490006A8 C   FIELD 05w01 ACK: ACK
0x490006A8 C   FIELD 06w01 NYET: NYET
0x490006A8 C   FIELD 07w01 TXERR: TXERR
0x490006A8 C   FIELD 08w01 BBERR: BBERR
0x490006A8 C   FIELD 09w01 FRMOR: FRMOR
0x490006A8 C   FIELD 10w01 DTERR: DTERR
0x490006A8 C   FIELD 11w01 BNA: BNA
0x490006A8 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x490006A8 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x490006AC B  REGISTER OTG_HCINTMSK13 (rw): This register reflects the mask for each channel status described in the previous section.
0x490006AC C   FIELD 00w01 XFRCM: XFRCM
0x490006AC C   FIELD 01w01 CHHM: CHHM
0x490006AC C   FIELD 02w01 AHBERRM: AHBERRM
0x490006AC C   FIELD 03w01 STALLM: STALLM
0x490006AC C   FIELD 04w01 NAKM: NAKM
0x490006AC C   FIELD 05w01 ACKM: ACKM
0x490006AC C   FIELD 06w01 NYET: NYET
0x490006AC C   FIELD 07w01 TXERRM: TXERRM
0x490006AC C   FIELD 08w01 BBERRM: BBERRM
0x490006AC C   FIELD 09w01 FRMORM: FRMORM
0x490006AC C   FIELD 10w01 DTERRM: DTERRM
0x490006AC C   FIELD 11w01 BNAMSK: BNAMSK
0x490006AC C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x490006B0 B  REGISTER OTG_HCTSIZ13 (rw): OTG host channel 13 transfer size register
0x490006B0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490006B0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490006B0 C   FIELD 29w02 DPID: DPID
0x490006B4 B  REGISTER OTG_HCDMA13 (rw): OTG host channel 13 DMA address register in buffer DMA [alternate]
0x490006B4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490006BC B  REGISTER OTG_HCDMAB13 (ro): OTG host channel-n DMA address buffer register
0x490006BC C   FIELD 00w32 HCDMAB: HCDMAB
0x490006C0 B  REGISTER OTG_HCCHAR14 (rw): OTG host channel 14 characteristics register
0x490006C0 C   FIELD 00w11 MPSIZ: MPSIZ
0x490006C0 C   FIELD 11w04 EPNUM: EPNUM
0x490006C0 C   FIELD 15w01 EPDIR: EPDIR
0x490006C0 C   FIELD 17w01 LSDEV: LSDEV
0x490006C0 C   FIELD 18w02 EPTYP: EPTYP
0x490006C0 C   FIELD 20w02 MCNT: MCNT
0x490006C0 C   FIELD 22w07 DAD: DAD
0x490006C0 C   FIELD 30w01 CHDIS: CHDIS
0x490006C0 C   FIELD 31w01 CHENA: CHENA
0x490006C4 B  REGISTER OTG_HCSPLT14 (rw): OTG host channel 14 split control register
0x490006C4 C   FIELD 00w07 PRTADDR: PRTADDR
0x490006C4 C   FIELD 07w07 HUBADDR: HUBADDR
0x490006C4 C   FIELD 14w02 XACTPOS: XACTPOS
0x490006C4 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x490006C4 C   FIELD 31w01 SPLITEN: SPLITEN
0x490006C8 B  REGISTER OTG_HCINT14 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x490006C8 C   FIELD 00w01 XFRC: XFRC
0x490006C8 C   FIELD 01w01 CHH: CHH
0x490006C8 C   FIELD 02w01 AHBERR: AHBERR
0x490006C8 C   FIELD 03w01 STALL: STALL
0x490006C8 C   FIELD 04w01 NAK: NAK
0x490006C8 C   FIELD 05w01 ACK: ACK
0x490006C8 C   FIELD 06w01 NYET: NYET
0x490006C8 C   FIELD 07w01 TXERR: TXERR
0x490006C8 C   FIELD 08w01 BBERR: BBERR
0x490006C8 C   FIELD 09w01 FRMOR: FRMOR
0x490006C8 C   FIELD 10w01 DTERR: DTERR
0x490006C8 C   FIELD 11w01 BNA: BNA
0x490006C8 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x490006C8 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x490006CC B  REGISTER OTG_HCINTMSK14 (rw): This register reflects the mask for each channel status described in the previous section.
0x490006CC C   FIELD 00w01 XFRCM: XFRCM
0x490006CC C   FIELD 01w01 CHHM: CHHM
0x490006CC C   FIELD 02w01 AHBERRM: AHBERRM
0x490006CC C   FIELD 03w01 STALLM: STALLM
0x490006CC C   FIELD 04w01 NAKM: NAKM
0x490006CC C   FIELD 05w01 ACKM: ACKM
0x490006CC C   FIELD 06w01 NYET: NYET
0x490006CC C   FIELD 07w01 TXERRM: TXERRM
0x490006CC C   FIELD 08w01 BBERRM: BBERRM
0x490006CC C   FIELD 09w01 FRMORM: FRMORM
0x490006CC C   FIELD 10w01 DTERRM: DTERRM
0x490006CC C   FIELD 11w01 BNAMSK: BNAMSK
0x490006CC C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x490006D0 B  REGISTER OTG_HCTSIZ14 (rw): OTG host channel 14 transfer size register
0x490006D0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490006D0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490006D0 C   FIELD 29w02 DPID: DPID
0x490006D4 B  REGISTER OTG_HCDMA14 (rw): OTG host channel 14 DMA address register in buffer DMA [alternate]
0x490006D4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490006DC B  REGISTER OTG_HCDMAB14 (ro): OTG host channel-n DMA address buffer register
0x490006DC C   FIELD 00w32 HCDMAB: HCDMAB
0x490006E0 B  REGISTER OTG_HCCHAR15 (rw): OTG host channel 15 characteristics register
0x490006E0 C   FIELD 00w11 MPSIZ: MPSIZ
0x490006E0 C   FIELD 11w04 EPNUM: EPNUM
0x490006E0 C   FIELD 15w01 EPDIR: EPDIR
0x490006E0 C   FIELD 17w01 LSDEV: LSDEV
0x490006E0 C   FIELD 18w02 EPTYP: EPTYP
0x490006E0 C   FIELD 20w02 MCNT: MCNT
0x490006E0 C   FIELD 22w07 DAD: DAD
0x490006E0 C   FIELD 30w01 CHDIS: CHDIS
0x490006E0 C   FIELD 31w01 CHENA: CHENA
0x490006E4 B  REGISTER OTG_HCSPLT15 (rw): OTG host channel 15 split control register
0x490006E4 C   FIELD 00w07 PRTADDR: PRTADDR
0x490006E4 C   FIELD 07w07 HUBADDR: HUBADDR
0x490006E4 C   FIELD 14w02 XACTPOS: XACTPOS
0x490006E4 C   FIELD 16w01 COMPLSPLT: COMPLSPLT
0x490006E4 C   FIELD 31w01 SPLITEN: SPLITEN
0x490006E8 B  REGISTER OTG_HCINT15 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (OTG_HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_HAINT and OTG_GINTSTS registers.
0x490006E8 C   FIELD 00w01 XFRC: XFRC
0x490006E8 C   FIELD 01w01 CHH: CHH
0x490006E8 C   FIELD 02w01 AHBERR: AHBERR
0x490006E8 C   FIELD 03w01 STALL: STALL
0x490006E8 C   FIELD 04w01 NAK: NAK
0x490006E8 C   FIELD 05w01 ACK: ACK
0x490006E8 C   FIELD 06w01 NYET: NYET
0x490006E8 C   FIELD 07w01 TXERR: TXERR
0x490006E8 C   FIELD 08w01 BBERR: BBERR
0x490006E8 C   FIELD 09w01 FRMOR: FRMOR
0x490006E8 C   FIELD 10w01 DTERR: DTERR
0x490006E8 C   FIELD 11w01 BNA: BNA
0x490006E8 C   FIELD 12w01 XCSXACTERR: XCSXACTERR
0x490006E8 C   FIELD 13w01 DESCLSTROLL: DESCLSTROLL
0x490006EC B  REGISTER OTG_HCINTMSK15 (rw): This register reflects the mask for each channel status described in the previous section.
0x490006EC C   FIELD 00w01 XFRCM: XFRCM
0x490006EC C   FIELD 01w01 CHHM: CHHM
0x490006EC C   FIELD 02w01 AHBERRM: AHBERRM
0x490006EC C   FIELD 03w01 STALLM: STALLM
0x490006EC C   FIELD 04w01 NAKM: NAKM
0x490006EC C   FIELD 05w01 ACKM: ACKM
0x490006EC C   FIELD 06w01 NYET: NYET
0x490006EC C   FIELD 07w01 TXERRM: TXERRM
0x490006EC C   FIELD 08w01 BBERRM: BBERRM
0x490006EC C   FIELD 09w01 FRMORM: FRMORM
0x490006EC C   FIELD 10w01 DTERRM: DTERRM
0x490006EC C   FIELD 11w01 BNAMSK: BNAMSK
0x490006EC C   FIELD 13w01 DESCLSTROLLMSK: DESCLSTROLLMSK
0x490006F0 B  REGISTER OTG_HCTSIZ15 (rw): OTG host channel 15 transfer size register
0x490006F0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490006F0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490006F0 C   FIELD 29w02 DPID: DPID
0x490006F4 B  REGISTER OTG_HCDMA15 (rw): OTG host channel 15 DMA address register in buffer DMA [alternate]
0x490006F4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490006FC B  REGISTER OTG_HCDMAB15 (ro): OTG host channel-n DMA address buffer register
0x490006FC C   FIELD 00w32 HCDMAB: HCDMAB
0x49000800 B  REGISTER OTG_DCFG (rw): This register configures the core in device mode after power-on or after certain control commands or enumeration. Do not make changes to this register after initial programming.
0x49000800 C   FIELD 00w02 DSPD: DSPD
0x49000800 C   FIELD 02w01 NZLSOHSK: NZLSOHSK
0x49000800 C   FIELD 04w07 DAD: DAD
0x49000800 C   FIELD 11w02 PFIVL: PFIVL
0x49000800 C   FIELD 14w01 XCVRDLY: XCVRDLY
0x49000800 C   FIELD 15w01 ERRATIM: ERRATIM
0x49000800 C   FIELD 24w02 PERSCHIVL: PERSCHIVL
0x49000804 B  REGISTER OTG_DCTL: OTG device control register
0x49000804 C   FIELD 00w01 RWUSIG (rw): RWUSIG
0x49000804 C   FIELD 01w01 SDIS (rw): SDIS
0x49000804 C   FIELD 02w01 GINSTS (ro): GINSTS
0x49000804 C   FIELD 03w01 GONSTS (ro): GONSTS
0x49000804 C   FIELD 04w03 TCTL (rw): TCTL
0x49000804 C   FIELD 07w01 SGINAK (wo): SGINAK
0x49000804 C   FIELD 08w01 CGINAK (wo): CGINAK
0x49000804 C   FIELD 09w01 SGONAK (wo): SGONAK
0x49000804 C   FIELD 10w01 CGONAK (wo): CGONAK
0x49000804 C   FIELD 11w01 POPRGDNE (rw): POPRGDNE
0x49000804 C   FIELD 18w01 DSBESLRJCT (rw): DSBESLRJCT
0x49000808 B  REGISTER OTG_DSTS (ro): This register indicates the status of the core with respect to USB-related events. It must be read on interrupts from the device all interrupts (OTG_DAINT) register.
0x49000808 C   FIELD 00w01 SUSPSTS: SUSPSTS
0x49000808 C   FIELD 01w02 ENUMSPD: ENUMSPD
0x49000808 C   FIELD 03w01 EERR: EERR
0x49000808 C   FIELD 08w14 FNSOF: FNSOF
0x49000808 C   FIELD 22w02 DEVLNSTS: DEVLNSTS
0x49000810 B  REGISTER OTG_DIEPMSK (rw): This register works with each of the OTG_DIEPINTx registers for all endpoints to generate an interrupt per IN endpoint. The IN endpoint interrupt for a specific status in the OTG_DIEPINTx register can be masked by writing to the corresponding bit in this register. Status bits are masked by default.
0x49000810 C   FIELD 00w01 XFRCM: XFRCM
0x49000810 C   FIELD 01w01 EPDM: EPDM
0x49000810 C   FIELD 02w01 AHBERRM: AHBERRM
0x49000810 C   FIELD 03w01 TOM: TOM
0x49000810 C   FIELD 04w01 ITTXFEMSK: ITTXFEMSK
0x49000810 C   FIELD 05w01 INEPNMM: INEPNMM
0x49000810 C   FIELD 06w01 INEPNEM: INEPNEM
0x49000810 C   FIELD 08w01 TXFURM: TXFURM
0x49000810 C   FIELD 09w01 BNAM: BNAM
0x49000810 C   FIELD 13w01 NAKM: NAKM
0x49000814 B  REGISTER OTG_DOEPMSK (rw): This register works with each of the OTG_DOEPINTx registers for all endpoints to generate an interrupt per OUT endpoint. The OUT endpoint interrupt for a specific status in the OTG_DOEPINTx register can be masked by writing into the corresponding bit in this register. Status bits are masked by default.
0x49000814 C   FIELD 00w01 XFRCM: XFRCM
0x49000814 C   FIELD 01w01 EPDM: EPDM
0x49000814 C   FIELD 02w01 AHBERRM: AHBERRM
0x49000814 C   FIELD 03w01 STUPM: STUPM
0x49000814 C   FIELD 04w01 OTEPDM: OTEPDM
0x49000814 C   FIELD 05w01 STSPHSRXM: STSPHSRXM
0x49000814 C   FIELD 06w01 B2BSTUPM: B2BSTUPM
0x49000814 C   FIELD 08w01 OUTPKTERRM: OUTPKTERRM
0x49000814 C   FIELD 09w01 BNAM: BNAM
0x49000814 C   FIELD 12w01 BERRM: BERRM
0x49000814 C   FIELD 13w01 NAKMSK: NAKMSK
0x49000814 C   FIELD 14w01 NYETMSK: NYETMSK
0x49000818 B  REGISTER OTG_DAINT (ro): When a significant event occurs on an endpoint, a OTG_DAINT register interrupts the application using the device OUT endpoints interrupt bit or device IN endpoints interrupt bit of the OTG_GINTSTS register (OEPINT or IEPINT in OTG_GINTSTS, respectively). There is one interrupt bit per endpoint, up to a maximum of 16 bits for OUT endpoints and 16 bits for IN endpoints. For a bidirectional endpoint, the corresponding IN and OUT interrupt bits are used. Bits in this register are set and cleared when the application sets and clears bits in the corresponding device endpoint-x interrupt register (OTG_DIEPINTx/OTG_DOEPINTx).
0x49000818 C   FIELD 00w16 IEPINT: IEPINT
0x49000818 C   FIELD 16w16 OEPINT: OEPINT
0x4900081C B  REGISTER OTG_DAINTMSK (rw): The OTG_DAINTMSK register works with the device endpoint interrupt register to interrupt the application when an event occurs on a device endpoint. However, the OTG_DAINT register bit corresponding to that interrupt is still set.
0x4900081C C   FIELD 00w16 IEPM: IEPM
0x4900081C C   FIELD 16w16 OEPM: OEPM
0x49000828 B  REGISTER OTG_DVBUSDIS (rw): This register specifies the VBUS discharge time after VBUS pulsing during SRP.
0x49000828 C   FIELD 00w16 VBUSDT: VBUSDT
0x4900082C B  REGISTER OTG_DVBUSPULSE (rw): This register specifies the VBUS pulsing time during SRP.
0x4900082C C   FIELD 00w16 DVBUSP: DVBUSP
0x49000830 B  REGISTER OTG_DTHRCTL (rw): OTG device threshold control register
0x49000830 C   FIELD 00w01 NONISOTHREN: NONISOTHREN
0x49000830 C   FIELD 01w01 ISOTHREN: ISOTHREN
0x49000830 C   FIELD 02w09 TXTHRLEN: TXTHRLEN
0x49000830 C   FIELD 16w01 RXTHREN: RXTHREN
0x49000830 C   FIELD 17w09 RXTHRLEN: RXTHRLEN
0x49000830 C   FIELD 27w01 ARPEN: ARPEN
0x49000834 B  REGISTER OTG_DIEPEMPMSK (rw): This register is used to control the IN endpoint FIFO empty interrupt generation (TXFE_OTG_DIEPINTx).
0x49000834 C   FIELD 00w16 INEPTXFEM: INEPTXFEM
0x49000838 B  REGISTER OTG_DEACHINT (ro): OTG device each endpoint interrupt register
0x49000838 C   FIELD 01w01 IEP1INT: IEP1INT
0x49000838 C   FIELD 17w01 OEP1INT: OEP1INT
0x4900083C B  REGISTER OTG_DEACHINTMSK (rw): There is one interrupt bit for endpoint 1 IN and one interrupt bit for endpoint 1 OUT.
0x4900083C C   FIELD 01w01 IEP1INTM: IEP1INTM
0x4900083C C   FIELD 17w01 OEP1INTM: OEP1INTM
0x49000844 B  REGISTER OTG_HS_DIEPEACHMSK1 (rw): This register works with the OTG_DIEPINT1 register to generate a dedicated interrupt OTG_HS_EP1_IN for endpoint #1. The IN endpoint interrupt for a specific status in the OTG_DOEPINT1 register can be masked by writing into the corresponding bit in this register. Status bits are masked by default.
0x49000844 C   FIELD 00w01 XFRCM: XFRCM
0x49000844 C   FIELD 01w01 EPDM: EPDM
0x49000844 C   FIELD 02w01 AHBERRM: AHBERRM
0x49000844 C   FIELD 03w01 TOM: TOM
0x49000844 C   FIELD 04w01 ITTXFEMSK: ITTXFEMSK
0x49000844 C   FIELD 06w01 INEPNEM: INEPNEM
0x49000844 C   FIELD 08w01 TXFURM: TXFURM
0x49000844 C   FIELD 09w01 BNAM: BNAM
0x49000844 C   FIELD 13w01 NAKM: NAKM
0x49000884 B  REGISTER OTG_HS_DOEPEACHMSK1 (rw): This register works with the OTG_DOEPINT1 register to generate a dedicated interrupt OTG_HS_EP1_OUT for endpoint #1. The OUT endpoint interrupt for a specific status in the OTG_DOEPINT1 register can be masked by writing into the corresponding bit in this register. Status bits are masked by default.
0x49000884 C   FIELD 00w01 XFRCM: XFRCM
0x49000884 C   FIELD 01w01 EPDM: EPDM
0x49000884 C   FIELD 02w01 AHBERRM: AHBERRM
0x49000884 C   FIELD 03w01 STUPM: STUPM
0x49000884 C   FIELD 04w01 OTEPDM: OTEPDM
0x49000884 C   FIELD 06w01 B2BSTUPM: B2BSTUPM
0x49000884 C   FIELD 08w01 OUTPKTERRM: OUTPKTERRM
0x49000884 C   FIELD 09w01 BNAM: BNAM
0x49000884 C   FIELD 12w01 BERRM: BERRM
0x49000884 C   FIELD 13w01 NAKMSK: NAKMSK
0x49000884 C   FIELD 14w01 NYETMSK: NYETMSK
0x49000900 B  REGISTER OTG_DIEPCTL0: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000900 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000900 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000900 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000900 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000900 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000900 C   FIELD 21w01 STALL (rw): STALL
0x49000900 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x49000900 C   FIELD 26w01 CNAK (wo): CNAK
0x49000900 C   FIELD 27w01 SNAK (wo): SNAK
0x49000900 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000900 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x49000900 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000900 C   FIELD 31w01 EPENA (rw): EPENA
0x49000908 B  REGISTER OTG_DIEPINT0: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000908 C   FIELD 00w01 XFRC (rw): XFRC
0x49000908 C   FIELD 01w01 EPDISD (rw): EPDISD
0x49000908 C   FIELD 02w01 AHBERR (rw): AHBERR
0x49000908 C   FIELD 03w01 TOC (rw): TOC
0x49000908 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x49000908 C   FIELD 05w01 INEPNM (rw): INEPNM
0x49000908 C   FIELD 06w01 INEPNE (ro): INEPNE
0x49000908 C   FIELD 07w01 TXFE (ro): TXFE
0x49000908 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x49000908 C   FIELD 09w01 BNA (rw): BNA
0x49000908 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x49000908 C   FIELD 13w01 NAK (rw): NAK
0x49000910 B  REGISTER OTG_DIEPTSIZ0 (rw): The application must modify this register before enabling endpoint 0.
0x49000910 C   FIELD 00w07 XFRSIZ: XFRSIZ
0x49000910 C   FIELD 19w02 PKTCNT: PKTCNT
0x49000914 B  REGISTER OTG_DIEPDMA0 (rw): OTG device IN endpoint 0 DMA address register
0x49000914 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000918 B  REGISTER OTG_DTXFSTS0 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x49000918 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x49000920 B  REGISTER OTG_DIEPCTL1: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000920 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000920 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000920 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000920 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000920 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000920 C   FIELD 21w01 STALL (rw): STALL
0x49000920 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x49000920 C   FIELD 26w01 CNAK (wo): CNAK
0x49000920 C   FIELD 27w01 SNAK (wo): SNAK
0x49000920 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000920 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x49000920 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000920 C   FIELD 31w01 EPENA (rw): EPENA
0x49000928 B  REGISTER OTG_DIEPINT1: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000928 C   FIELD 00w01 XFRC (rw): XFRC
0x49000928 C   FIELD 01w01 EPDISD (rw): EPDISD
0x49000928 C   FIELD 02w01 AHBERR (rw): AHBERR
0x49000928 C   FIELD 03w01 TOC (rw): TOC
0x49000928 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x49000928 C   FIELD 05w01 INEPNM (rw): INEPNM
0x49000928 C   FIELD 06w01 INEPNE (ro): INEPNE
0x49000928 C   FIELD 07w01 TXFE (ro): TXFE
0x49000928 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x49000928 C   FIELD 09w01 BNA (rw): BNA
0x49000928 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x49000928 C   FIELD 13w01 NAK (rw): NAK
0x49000930 B  REGISTER OTG_DIEPTSIZ1 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the OTG_DIEPCTLx registers (EPENA bit in OTG_DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000930 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000930 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000930 C   FIELD 29w02 MCNT: MCNT
0x49000934 B  REGISTER OTG_DIEPDMA1 (rw): OTG device IN endpoint 1 DMA address register
0x49000934 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000938 B  REGISTER OTG_DTXFSTS1 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x49000938 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x49000940 B  REGISTER OTG_DIEPCTL2: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000940 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000940 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000940 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000940 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000940 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000940 C   FIELD 21w01 STALL (rw): STALL
0x49000940 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x49000940 C   FIELD 26w01 CNAK (wo): CNAK
0x49000940 C   FIELD 27w01 SNAK (wo): SNAK
0x49000940 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000940 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x49000940 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000940 C   FIELD 31w01 EPENA (rw): EPENA
0x49000948 B  REGISTER OTG_DIEPINT2: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000948 C   FIELD 00w01 XFRC (rw): XFRC
0x49000948 C   FIELD 01w01 EPDISD (rw): EPDISD
0x49000948 C   FIELD 02w01 AHBERR (rw): AHBERR
0x49000948 C   FIELD 03w01 TOC (rw): TOC
0x49000948 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x49000948 C   FIELD 05w01 INEPNM (rw): INEPNM
0x49000948 C   FIELD 06w01 INEPNE (ro): INEPNE
0x49000948 C   FIELD 07w01 TXFE (ro): TXFE
0x49000948 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x49000948 C   FIELD 09w01 BNA (rw): BNA
0x49000948 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x49000948 C   FIELD 13w01 NAK (rw): NAK
0x49000950 B  REGISTER OTG_DIEPTSIZ2 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the OTG_DIEPCTLx registers (EPENA bit in OTG_DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000950 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000950 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000950 C   FIELD 29w02 MCNT: MCNT
0x49000954 B  REGISTER OTG_DIEPDMA2 (rw): OTG device IN endpoint 2 DMA address register
0x49000954 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000958 B  REGISTER OTG_DTXFSTS2 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x49000958 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x49000960 B  REGISTER OTG_DIEPCTL3: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000960 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000960 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000960 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000960 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000960 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000960 C   FIELD 21w01 STALL (rw): STALL
0x49000960 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x49000960 C   FIELD 26w01 CNAK (wo): CNAK
0x49000960 C   FIELD 27w01 SNAK (wo): SNAK
0x49000960 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000960 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x49000960 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000960 C   FIELD 31w01 EPENA (rw): EPENA
0x49000968 B  REGISTER OTG_DIEPINT3: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000968 C   FIELD 00w01 XFRC (rw): XFRC
0x49000968 C   FIELD 01w01 EPDISD (rw): EPDISD
0x49000968 C   FIELD 02w01 AHBERR (rw): AHBERR
0x49000968 C   FIELD 03w01 TOC (rw): TOC
0x49000968 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x49000968 C   FIELD 05w01 INEPNM (rw): INEPNM
0x49000968 C   FIELD 06w01 INEPNE (ro): INEPNE
0x49000968 C   FIELD 07w01 TXFE (ro): TXFE
0x49000968 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x49000968 C   FIELD 09w01 BNA (rw): BNA
0x49000968 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x49000968 C   FIELD 13w01 NAK (rw): NAK
0x49000970 B  REGISTER OTG_DIEPTSIZ3 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the OTG_DIEPCTLx registers (EPENA bit in OTG_DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000970 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000970 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000970 C   FIELD 29w02 MCNT: MCNT
0x49000974 B  REGISTER OTG_DIEPDMA3 (rw): OTG device IN endpoint 3 DMA address register
0x49000974 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000978 B  REGISTER OTG_DTXFSTS3 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x49000978 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x49000980 B  REGISTER OTG_DIEPCTL4: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000980 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000980 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000980 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000980 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000980 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000980 C   FIELD 21w01 STALL (rw): STALL
0x49000980 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x49000980 C   FIELD 26w01 CNAK (wo): CNAK
0x49000980 C   FIELD 27w01 SNAK (wo): SNAK
0x49000980 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000980 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x49000980 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000980 C   FIELD 31w01 EPENA (rw): EPENA
0x49000988 B  REGISTER OTG_DIEPINT4: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000988 C   FIELD 00w01 XFRC (rw): XFRC
0x49000988 C   FIELD 01w01 EPDISD (rw): EPDISD
0x49000988 C   FIELD 02w01 AHBERR (rw): AHBERR
0x49000988 C   FIELD 03w01 TOC (rw): TOC
0x49000988 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x49000988 C   FIELD 05w01 INEPNM (rw): INEPNM
0x49000988 C   FIELD 06w01 INEPNE (ro): INEPNE
0x49000988 C   FIELD 07w01 TXFE (ro): TXFE
0x49000988 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x49000988 C   FIELD 09w01 BNA (rw): BNA
0x49000988 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x49000988 C   FIELD 13w01 NAK (rw): NAK
0x49000990 B  REGISTER OTG_DIEPTSIZ4 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the OTG_DIEPCTLx registers (EPENA bit in OTG_DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000990 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000990 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000990 C   FIELD 29w02 MCNT: MCNT
0x49000994 B  REGISTER OTG_DIEPDMA4 (rw): OTG device IN endpoint 4 DMA address register
0x49000994 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000998 B  REGISTER OTG_DTXFSTS4 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x49000998 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x490009A0 B  REGISTER OTG_DIEPCTL5: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x490009A0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x490009A0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x490009A0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x490009A0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x490009A0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x490009A0 C   FIELD 21w01 STALL (rw): STALL
0x490009A0 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x490009A0 C   FIELD 26w01 CNAK (wo): CNAK
0x490009A0 C   FIELD 27w01 SNAK (wo): SNAK
0x490009A0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x490009A0 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x490009A0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x490009A0 C   FIELD 31w01 EPENA (rw): EPENA
0x490009A8 B  REGISTER OTG_DIEPINT5: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x490009A8 C   FIELD 00w01 XFRC (rw): XFRC
0x490009A8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x490009A8 C   FIELD 02w01 AHBERR (rw): AHBERR
0x490009A8 C   FIELD 03w01 TOC (rw): TOC
0x490009A8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x490009A8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x490009A8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x490009A8 C   FIELD 07w01 TXFE (ro): TXFE
0x490009A8 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x490009A8 C   FIELD 09w01 BNA (rw): BNA
0x490009A8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x490009A8 C   FIELD 13w01 NAK (rw): NAK
0x490009B0 B  REGISTER OTG_DIEPTSIZ5 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the OTG_DIEPCTLx registers (EPENA bit in OTG_DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x490009B0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490009B0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490009B0 C   FIELD 29w02 MCNT: MCNT
0x490009B4 B  REGISTER OTG_DIEPDMA5 (rw): OTG device IN endpoint 5 DMA address register
0x490009B4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490009B8 B  REGISTER OTG_DTXFSTS5 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x490009B8 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x490009C0 B  REGISTER OTG_DIEPCTL6: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x490009C0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x490009C0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x490009C0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x490009C0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x490009C0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x490009C0 C   FIELD 21w01 STALL (rw): STALL
0x490009C0 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x490009C0 C   FIELD 26w01 CNAK (wo): CNAK
0x490009C0 C   FIELD 27w01 SNAK (wo): SNAK
0x490009C0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x490009C0 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x490009C0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x490009C0 C   FIELD 31w01 EPENA (rw): EPENA
0x490009C8 B  REGISTER OTG_DIEPINT6: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x490009C8 C   FIELD 00w01 XFRC (rw): XFRC
0x490009C8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x490009C8 C   FIELD 02w01 AHBERR (rw): AHBERR
0x490009C8 C   FIELD 03w01 TOC (rw): TOC
0x490009C8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x490009C8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x490009C8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x490009C8 C   FIELD 07w01 TXFE (ro): TXFE
0x490009C8 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x490009C8 C   FIELD 09w01 BNA (rw): BNA
0x490009C8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x490009C8 C   FIELD 13w01 NAK (rw): NAK
0x490009D0 B  REGISTER OTG_DIEPTSIZ6 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the OTG_DIEPCTLx registers (EPENA bit in OTG_DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x490009D0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490009D0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490009D0 C   FIELD 29w02 MCNT: MCNT
0x490009D4 B  REGISTER OTG_DIEPDMA6 (rw): OTG device IN endpoint 6 DMA address register
0x490009D4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490009D8 B  REGISTER OTG_DTXFSTS6 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x490009D8 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x490009E0 B  REGISTER OTG_DIEPCTL7: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x490009E0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x490009E0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x490009E0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x490009E0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x490009E0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x490009E0 C   FIELD 21w01 STALL (rw): STALL
0x490009E0 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x490009E0 C   FIELD 26w01 CNAK (wo): CNAK
0x490009E0 C   FIELD 27w01 SNAK (wo): SNAK
0x490009E0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x490009E0 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x490009E0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x490009E0 C   FIELD 31w01 EPENA (rw): EPENA
0x490009E8 B  REGISTER OTG_DIEPINT7: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x490009E8 C   FIELD 00w01 XFRC (rw): XFRC
0x490009E8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x490009E8 C   FIELD 02w01 AHBERR (rw): AHBERR
0x490009E8 C   FIELD 03w01 TOC (rw): TOC
0x490009E8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x490009E8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x490009E8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x490009E8 C   FIELD 07w01 TXFE (ro): TXFE
0x490009E8 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x490009E8 C   FIELD 09w01 BNA (rw): BNA
0x490009E8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x490009E8 C   FIELD 13w01 NAK (rw): NAK
0x490009F0 B  REGISTER OTG_DIEPTSIZ7 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the OTG_DIEPCTLx registers (EPENA bit in OTG_DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x490009F0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x490009F0 C   FIELD 19w10 PKTCNT: PKTCNT
0x490009F0 C   FIELD 29w02 MCNT: MCNT
0x490009F4 B  REGISTER OTG_DIEPDMA7 (rw): OTG device IN endpoint 7 DMA address register
0x490009F4 C   FIELD 00w32 DMAADDR: DMAADDR
0x490009F8 B  REGISTER OTG_DTXFSTS7 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x490009F8 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x49000A00 B  REGISTER OTG_DIEPCTL8: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000A00 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000A00 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000A00 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000A00 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000A00 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000A00 C   FIELD 21w01 STALL (rw): STALL
0x49000A00 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x49000A00 C   FIELD 26w01 CNAK (wo): CNAK
0x49000A00 C   FIELD 27w01 SNAK (wo): SNAK
0x49000A00 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000A00 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x49000A00 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000A00 C   FIELD 31w01 EPENA (rw): EPENA
0x49000A08 B  REGISTER OTG_DIEPINT8: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in OTG_GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (OTG_DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000A08 C   FIELD 00w01 XFRC (rw): XFRC
0x49000A08 C   FIELD 01w01 EPDISD (rw): EPDISD
0x49000A08 C   FIELD 02w01 AHBERR (rw): AHBERR
0x49000A08 C   FIELD 03w01 TOC (rw): TOC
0x49000A08 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x49000A08 C   FIELD 05w01 INEPNM (rw): INEPNM
0x49000A08 C   FIELD 06w01 INEPNE (ro): INEPNE
0x49000A08 C   FIELD 07w01 TXFE (ro): TXFE
0x49000A08 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x49000A08 C   FIELD 09w01 BNA (rw): BNA
0x49000A08 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x49000A08 C   FIELD 13w01 NAK (rw): NAK
0x49000A10 B  REGISTER OTG_DIEPTSIZ8 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the OTG_DIEPCTLx registers (EPENA bit in OTG_DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000A10 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000A10 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000A10 C   FIELD 29w02 MCNT: MCNT
0x49000A14 B  REGISTER OTG_DIEPDMA8 (rw): OTG device IN endpoint 8 DMA address register
0x49000A14 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000A18 B  REGISTER OTG_DTXFSTS8 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x49000A18 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x49000B00 B  REGISTER OTG_DOEPCTL0: This section describes the OTG_DOEPCTL0 register.
0x49000B00 C   FIELD 00w02 MPSIZ (ro): MPSIZ
0x49000B00 C   FIELD 15w01 USBAEP (ro): USBAEP
0x49000B00 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000B00 C   FIELD 18w02 EPTYP (ro): EPTYP
0x49000B00 C   FIELD 20w01 SNPM (rw): SNPM
0x49000B00 C   FIELD 21w01 STALL (rw): STALL
0x49000B00 C   FIELD 26w01 CNAK (wo): CNAK
0x49000B00 C   FIELD 27w01 SNAK (wo): SNAK
0x49000B00 C   FIELD 30w01 EPDIS (ro): EPDIS
0x49000B00 C   FIELD 31w01 EPENA (wo): EPENA
0x49000B08 B  REGISTER OTG_DOEPINT0 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000B08 C   FIELD 00w01 XFRC: XFRC
0x49000B08 C   FIELD 01w01 EPDISD: EPDISD
0x49000B08 C   FIELD 02w01 AHBERR: AHBERR
0x49000B08 C   FIELD 03w01 STUP: STUP
0x49000B08 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000B08 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000B08 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000B08 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000B08 C   FIELD 09w01 BNA: BNA
0x49000B08 C   FIELD 12w01 BERR: BERR
0x49000B08 C   FIELD 13w01 NAK: NAK
0x49000B08 C   FIELD 14w01 NYET: NYET
0x49000B08 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000B10 B  REGISTER OTG_DOEPTSIZ0 (rw): The application must modify this register before enabling endpoint 0.
0x49000B10 C   FIELD 00w07 XFRSIZ: XFRSIZ
0x49000B10 C   FIELD 19w01 PKTCNT: PKTCNT
0x49000B10 C   FIELD 29w02 STUPCNT: STUPCNT
0x49000B14 B  REGISTER OTG_DOEPDMA0 (rw): OTG device OUT endpoint 0 DMA address register
0x49000B14 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000B20 B  REGISTER OTG_DOEPCTL1: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000B20 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000B20 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000B20 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000B20 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000B20 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000B20 C   FIELD 20w01 SNPM (rw): SNPM
0x49000B20 C   FIELD 21w01 STALL (rw): STALL
0x49000B20 C   FIELD 26w01 CNAK (wo): CNAK
0x49000B20 C   FIELD 27w01 SNAK (wo): SNAK
0x49000B20 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000B20 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x49000B20 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000B20 C   FIELD 31w01 EPENA (rw): EPENA
0x49000B28 B  REGISTER OTG_DOEPINT1 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000B28 C   FIELD 00w01 XFRC: XFRC
0x49000B28 C   FIELD 01w01 EPDISD: EPDISD
0x49000B28 C   FIELD 02w01 AHBERR: AHBERR
0x49000B28 C   FIELD 03w01 STUP: STUP
0x49000B28 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000B28 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000B28 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000B28 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000B28 C   FIELD 09w01 BNA: BNA
0x49000B28 C   FIELD 12w01 BERR: BERR
0x49000B28 C   FIELD 13w01 NAK: NAK
0x49000B28 C   FIELD 14w01 NYET: NYET
0x49000B28 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000B30 B  REGISTER OTG_DOEPTSIZ1 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the OTG_DOEPCTLx registers (EPENA bit in OTG_DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000B30 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000B30 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000B30 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x49000B34 B  REGISTER OTG_DOEPDMA1 (rw): OTG device OUT endpoint 1 DMA address register
0x49000B34 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000B40 B  REGISTER OTG_DOEPCTL2: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000B40 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000B40 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000B40 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000B40 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000B40 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000B40 C   FIELD 20w01 SNPM (rw): SNPM
0x49000B40 C   FIELD 21w01 STALL (rw): STALL
0x49000B40 C   FIELD 26w01 CNAK (wo): CNAK
0x49000B40 C   FIELD 27w01 SNAK (wo): SNAK
0x49000B40 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000B40 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x49000B40 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000B40 C   FIELD 31w01 EPENA (rw): EPENA
0x49000B48 B  REGISTER OTG_DOEPINT2 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000B48 C   FIELD 00w01 XFRC: XFRC
0x49000B48 C   FIELD 01w01 EPDISD: EPDISD
0x49000B48 C   FIELD 02w01 AHBERR: AHBERR
0x49000B48 C   FIELD 03w01 STUP: STUP
0x49000B48 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000B48 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000B48 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000B48 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000B48 C   FIELD 09w01 BNA: BNA
0x49000B48 C   FIELD 12w01 BERR: BERR
0x49000B48 C   FIELD 13w01 NAK: NAK
0x49000B48 C   FIELD 14w01 NYET: NYET
0x49000B48 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000B50 B  REGISTER OTG_DOEPTSIZ2 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the OTG_DOEPCTLx registers (EPENA bit in OTG_DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000B50 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000B50 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000B50 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x49000B54 B  REGISTER OTG_DOEPDMA2 (rw): OTG device OUT endpoint 2 DMA address register
0x49000B54 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000B60 B  REGISTER OTG_DOEPCTL3: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000B60 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000B60 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000B60 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000B60 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000B60 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000B60 C   FIELD 20w01 SNPM (rw): SNPM
0x49000B60 C   FIELD 21w01 STALL (rw): STALL
0x49000B60 C   FIELD 26w01 CNAK (wo): CNAK
0x49000B60 C   FIELD 27w01 SNAK (wo): SNAK
0x49000B60 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000B60 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x49000B60 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000B60 C   FIELD 31w01 EPENA (rw): EPENA
0x49000B68 B  REGISTER OTG_DOEPINT3 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000B68 C   FIELD 00w01 XFRC: XFRC
0x49000B68 C   FIELD 01w01 EPDISD: EPDISD
0x49000B68 C   FIELD 02w01 AHBERR: AHBERR
0x49000B68 C   FIELD 03w01 STUP: STUP
0x49000B68 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000B68 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000B68 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000B68 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000B68 C   FIELD 09w01 BNA: BNA
0x49000B68 C   FIELD 12w01 BERR: BERR
0x49000B68 C   FIELD 13w01 NAK: NAK
0x49000B68 C   FIELD 14w01 NYET: NYET
0x49000B68 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000B70 B  REGISTER OTG_DOEPTSIZ3 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the OTG_DOEPCTLx registers (EPENA bit in OTG_DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000B70 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000B70 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000B70 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x49000B74 B  REGISTER OTG_DOEPDMA3 (rw): OTG device OUT endpoint 3 DMA address register
0x49000B74 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000B80 B  REGISTER OTG_DOEPCTL4: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000B80 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000B80 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000B80 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000B80 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000B80 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000B80 C   FIELD 20w01 SNPM (rw): SNPM
0x49000B80 C   FIELD 21w01 STALL (rw): STALL
0x49000B80 C   FIELD 26w01 CNAK (wo): CNAK
0x49000B80 C   FIELD 27w01 SNAK (wo): SNAK
0x49000B80 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000B80 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x49000B80 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000B80 C   FIELD 31w01 EPENA (rw): EPENA
0x49000B88 B  REGISTER OTG_DOEPINT4 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000B88 C   FIELD 00w01 XFRC: XFRC
0x49000B88 C   FIELD 01w01 EPDISD: EPDISD
0x49000B88 C   FIELD 02w01 AHBERR: AHBERR
0x49000B88 C   FIELD 03w01 STUP: STUP
0x49000B88 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000B88 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000B88 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000B88 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000B88 C   FIELD 09w01 BNA: BNA
0x49000B88 C   FIELD 12w01 BERR: BERR
0x49000B88 C   FIELD 13w01 NAK: NAK
0x49000B88 C   FIELD 14w01 NYET: NYET
0x49000B88 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000B90 B  REGISTER OTG_DOEPTSIZ4 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the OTG_DOEPCTLx registers (EPENA bit in OTG_DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000B90 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000B90 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000B90 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x49000B94 B  REGISTER OTG_DOEPDMA4 (rw): OTG device OUT endpoint 4 DMA address register
0x49000B94 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000BA0 B  REGISTER OTG_DOEPCTL5: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000BA0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000BA0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000BA0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000BA0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000BA0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000BA0 C   FIELD 20w01 SNPM (rw): SNPM
0x49000BA0 C   FIELD 21w01 STALL (rw): STALL
0x49000BA0 C   FIELD 26w01 CNAK (wo): CNAK
0x49000BA0 C   FIELD 27w01 SNAK (wo): SNAK
0x49000BA0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000BA0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x49000BA0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000BA0 C   FIELD 31w01 EPENA (rw): EPENA
0x49000BA8 B  REGISTER OTG_DOEPINT5 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000BA8 C   FIELD 00w01 XFRC: XFRC
0x49000BA8 C   FIELD 01w01 EPDISD: EPDISD
0x49000BA8 C   FIELD 02w01 AHBERR: AHBERR
0x49000BA8 C   FIELD 03w01 STUP: STUP
0x49000BA8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000BA8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000BA8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000BA8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000BA8 C   FIELD 09w01 BNA: BNA
0x49000BA8 C   FIELD 12w01 BERR: BERR
0x49000BA8 C   FIELD 13w01 NAK: NAK
0x49000BA8 C   FIELD 14w01 NYET: NYET
0x49000BA8 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000BB0 B  REGISTER OTG_DOEPTSIZ5 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the OTG_DOEPCTLx registers (EPENA bit in OTG_DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000BB0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000BB0 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000BB0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x49000BB4 B  REGISTER OTG_DOEPDMA5 (rw): OTG device OUT endpoint 5 DMA address register
0x49000BB4 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000BC0 B  REGISTER OTG_DOEPCTL6: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000BC0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000BC0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000BC0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000BC0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000BC0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000BC0 C   FIELD 20w01 SNPM (rw): SNPM
0x49000BC0 C   FIELD 21w01 STALL (rw): STALL
0x49000BC0 C   FIELD 26w01 CNAK (wo): CNAK
0x49000BC0 C   FIELD 27w01 SNAK (wo): SNAK
0x49000BC0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000BC0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x49000BC0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000BC0 C   FIELD 31w01 EPENA (rw): EPENA
0x49000BC8 B  REGISTER OTG_DOEPINT6 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000BC8 C   FIELD 00w01 XFRC: XFRC
0x49000BC8 C   FIELD 01w01 EPDISD: EPDISD
0x49000BC8 C   FIELD 02w01 AHBERR: AHBERR
0x49000BC8 C   FIELD 03w01 STUP: STUP
0x49000BC8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000BC8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000BC8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000BC8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000BC8 C   FIELD 09w01 BNA: BNA
0x49000BC8 C   FIELD 12w01 BERR: BERR
0x49000BC8 C   FIELD 13w01 NAK: NAK
0x49000BC8 C   FIELD 14w01 NYET: NYET
0x49000BC8 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000BD0 B  REGISTER OTG_DOEPTSIZ6 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the OTG_DOEPCTLx registers (EPENA bit in OTG_DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000BD0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000BD0 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000BD0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x49000BD4 B  REGISTER OTG_DOEPDMA6 (rw): OTG device OUT endpoint 6 DMA address register
0x49000BD4 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000BE0 B  REGISTER OTG_DOEPCTL7: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000BE0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000BE0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000BE0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000BE0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000BE0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000BE0 C   FIELD 20w01 SNPM (rw): SNPM
0x49000BE0 C   FIELD 21w01 STALL (rw): STALL
0x49000BE0 C   FIELD 26w01 CNAK (wo): CNAK
0x49000BE0 C   FIELD 27w01 SNAK (wo): SNAK
0x49000BE0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000BE0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x49000BE0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000BE0 C   FIELD 31w01 EPENA (rw): EPENA
0x49000BE8 B  REGISTER OTG_DOEPINT7 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000BE8 C   FIELD 00w01 XFRC: XFRC
0x49000BE8 C   FIELD 01w01 EPDISD: EPDISD
0x49000BE8 C   FIELD 02w01 AHBERR: AHBERR
0x49000BE8 C   FIELD 03w01 STUP: STUP
0x49000BE8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000BE8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000BE8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000BE8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000BE8 C   FIELD 09w01 BNA: BNA
0x49000BE8 C   FIELD 12w01 BERR: BERR
0x49000BE8 C   FIELD 13w01 NAK: NAK
0x49000BE8 C   FIELD 14w01 NYET: NYET
0x49000BE8 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000BF0 B  REGISTER OTG_DOEPTSIZ7 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the OTG_DOEPCTLx registers (EPENA bit in OTG_DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000BF0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000BF0 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000BF0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x49000BF4 B  REGISTER OTG_DOEPDMA7 (rw): OTG device OUT endpoint 7 DMA address register
0x49000BF4 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000C00 B  REGISTER OTG_DOEPCTL8: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x49000C00 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x49000C00 C   FIELD 15w01 USBAEP (rw): USBAEP
0x49000C00 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x49000C00 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x49000C00 C   FIELD 18w02 EPTYP (rw): EPTYP
0x49000C00 C   FIELD 20w01 SNPM (rw): SNPM
0x49000C00 C   FIELD 21w01 STALL (rw): STALL
0x49000C00 C   FIELD 26w01 CNAK (wo): CNAK
0x49000C00 C   FIELD 27w01 SNAK (wo): SNAK
0x49000C00 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x49000C00 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x49000C00 C   FIELD 30w01 EPDIS (rw): EPDIS
0x49000C00 C   FIELD 31w01 EPENA (rw): EPENA
0x49000C08 B  REGISTER OTG_DOEPINT8 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the OTG_GINTSTS register (OEPINT bit in OTG_GINTSTS) is set. Before the application can read this register, it must first read the OTG_DAINT register to get the exact endpoint number for the OTG_DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the OTG_DAINT and OTG_GINTSTS registers.
0x49000C08 C   FIELD 00w01 XFRC: XFRC
0x49000C08 C   FIELD 01w01 EPDISD: EPDISD
0x49000C08 C   FIELD 02w01 AHBERR: AHBERR
0x49000C08 C   FIELD 03w01 STUP: STUP
0x49000C08 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x49000C08 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x49000C08 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x49000C08 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x49000C08 C   FIELD 09w01 BNA: BNA
0x49000C08 C   FIELD 12w01 BERR: BERR
0x49000C08 C   FIELD 13w01 NAK: NAK
0x49000C08 C   FIELD 14w01 NYET: NYET
0x49000C08 C   FIELD 15w01 STPKTRX: STPKTRX
0x49000C10 B  REGISTER OTG_DOEPTSIZ8 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the OTG_DOEPCTLx registers (EPENA bit in OTG_DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x49000C10 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x49000C10 C   FIELD 19w10 PKTCNT: PKTCNT
0x49000C10 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x49000C14 B  REGISTER OTG_DOEPDMA8 (rw): OTG device OUT endpoint 8 DMA address register
0x49000C14 C   FIELD 00w32 DMAADDR: DMAADDR
0x49000E00 B  REGISTER OTG_PCGCCTL: This register is available in host and device modes.
0x49000E00 C   FIELD 00w01 STPPCLK (rw): STPPCLK
0x49000E00 C   FIELD 01w01 GATEHCLK (rw): GATEHCLK
0x49000E00 C   FIELD 04w01 PHYSUSP (ro): PHYSUSP
0x49000E00 C   FIELD 05w01 ENL1GTG (rw): ENL1GTG
0x49000E00 C   FIELD 06w01 PHYSLEEP (ro): PHYSLEEP
0x49000E00 C   FIELD 07w01 SUSP (ro): SUSP
0x4C000000 A PERIPHERAL HSEM
0x4C000000 B  REGISTER HSEM_R0 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000000 C   FIELD 00w08 PROCID: PROCID
0x4C000000 C   FIELD 08w04 COREID: COREID
0x4C000000 C   FIELD 31w01 LOCK: LOCK
0x4C000004 B  REGISTER HSEM_R1 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000004 C   FIELD 00w08 PROCID: PROCID
0x4C000004 C   FIELD 08w04 COREID: COREID
0x4C000004 C   FIELD 31w01 LOCK: LOCK
0x4C000008 B  REGISTER HSEM_R2 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000008 C   FIELD 00w08 PROCID: PROCID
0x4C000008 C   FIELD 08w04 COREID: COREID
0x4C000008 C   FIELD 31w01 LOCK: LOCK
0x4C00000C B  REGISTER HSEM_R3 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C00000C C   FIELD 00w08 PROCID: PROCID
0x4C00000C C   FIELD 08w04 COREID: COREID
0x4C00000C C   FIELD 31w01 LOCK: LOCK
0x4C000010 B  REGISTER HSEM_R4 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000010 C   FIELD 00w08 PROCID: PROCID
0x4C000010 C   FIELD 08w04 COREID: COREID
0x4C000010 C   FIELD 31w01 LOCK: LOCK
0x4C000014 B  REGISTER HSEM_R5 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000014 C   FIELD 00w08 PROCID: PROCID
0x4C000014 C   FIELD 08w04 COREID: COREID
0x4C000014 C   FIELD 31w01 LOCK: LOCK
0x4C000018 B  REGISTER HSEM_R6 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000018 C   FIELD 00w08 PROCID: PROCID
0x4C000018 C   FIELD 08w04 COREID: COREID
0x4C000018 C   FIELD 31w01 LOCK: LOCK
0x4C00001C B  REGISTER HSEM_R7 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C00001C C   FIELD 00w08 PROCID: PROCID
0x4C00001C C   FIELD 08w04 COREID: COREID
0x4C00001C C   FIELD 31w01 LOCK: LOCK
0x4C000020 B  REGISTER HSEM_R8 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000020 C   FIELD 00w08 PROCID: PROCID
0x4C000020 C   FIELD 08w04 COREID: COREID
0x4C000020 C   FIELD 31w01 LOCK: LOCK
0x4C000024 B  REGISTER HSEM_R9 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000024 C   FIELD 00w08 PROCID: PROCID
0x4C000024 C   FIELD 08w04 COREID: COREID
0x4C000024 C   FIELD 31w01 LOCK: LOCK
0x4C000028 B  REGISTER HSEM_R10 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000028 C   FIELD 00w08 PROCID: PROCID
0x4C000028 C   FIELD 08w04 COREID: COREID
0x4C000028 C   FIELD 31w01 LOCK: LOCK
0x4C00002C B  REGISTER HSEM_R11 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C00002C C   FIELD 00w08 PROCID: PROCID
0x4C00002C C   FIELD 08w04 COREID: COREID
0x4C00002C C   FIELD 31w01 LOCK: LOCK
0x4C000030 B  REGISTER HSEM_R12 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000030 C   FIELD 00w08 PROCID: PROCID
0x4C000030 C   FIELD 08w04 COREID: COREID
0x4C000030 C   FIELD 31w01 LOCK: LOCK
0x4C000034 B  REGISTER HSEM_R13 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000034 C   FIELD 00w08 PROCID: PROCID
0x4C000034 C   FIELD 08w04 COREID: COREID
0x4C000034 C   FIELD 31w01 LOCK: LOCK
0x4C000038 B  REGISTER HSEM_R14 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000038 C   FIELD 00w08 PROCID: PROCID
0x4C000038 C   FIELD 08w04 COREID: COREID
0x4C000038 C   FIELD 31w01 LOCK: LOCK
0x4C00003C B  REGISTER HSEM_R15 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C00003C C   FIELD 00w08 PROCID: PROCID
0x4C00003C C   FIELD 08w04 COREID: COREID
0x4C00003C C   FIELD 31w01 LOCK: LOCK
0x4C000040 B  REGISTER HSEM_R16 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000040 C   FIELD 00w08 PROCID: PROCID
0x4C000040 C   FIELD 08w04 COREID: COREID
0x4C000040 C   FIELD 31w01 LOCK: LOCK
0x4C000044 B  REGISTER HSEM_R17 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000044 C   FIELD 00w08 PROCID: PROCID
0x4C000044 C   FIELD 08w04 COREID: COREID
0x4C000044 C   FIELD 31w01 LOCK: LOCK
0x4C000048 B  REGISTER HSEM_R18 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000048 C   FIELD 00w08 PROCID: PROCID
0x4C000048 C   FIELD 08w04 COREID: COREID
0x4C000048 C   FIELD 31w01 LOCK: LOCK
0x4C00004C B  REGISTER HSEM_R19 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C00004C C   FIELD 00w08 PROCID: PROCID
0x4C00004C C   FIELD 08w04 COREID: COREID
0x4C00004C C   FIELD 31w01 LOCK: LOCK
0x4C000050 B  REGISTER HSEM_R20 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000050 C   FIELD 00w08 PROCID: PROCID
0x4C000050 C   FIELD 08w04 COREID: COREID
0x4C000050 C   FIELD 31w01 LOCK: LOCK
0x4C000054 B  REGISTER HSEM_R21 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000054 C   FIELD 00w08 PROCID: PROCID
0x4C000054 C   FIELD 08w04 COREID: COREID
0x4C000054 C   FIELD 31w01 LOCK: LOCK
0x4C000058 B  REGISTER HSEM_R22 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000058 C   FIELD 00w08 PROCID: PROCID
0x4C000058 C   FIELD 08w04 COREID: COREID
0x4C000058 C   FIELD 31w01 LOCK: LOCK
0x4C00005C B  REGISTER HSEM_R23 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C00005C C   FIELD 00w08 PROCID: PROCID
0x4C00005C C   FIELD 08w04 COREID: COREID
0x4C00005C C   FIELD 31w01 LOCK: LOCK
0x4C000060 B  REGISTER HSEM_R24 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000060 C   FIELD 00w08 PROCID: PROCID
0x4C000060 C   FIELD 08w04 COREID: COREID
0x4C000060 C   FIELD 31w01 LOCK: LOCK
0x4C000064 B  REGISTER HSEM_R25 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000064 C   FIELD 00w08 PROCID: PROCID
0x4C000064 C   FIELD 08w04 COREID: COREID
0x4C000064 C   FIELD 31w01 LOCK: LOCK
0x4C000068 B  REGISTER HSEM_R26 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000068 C   FIELD 00w08 PROCID: PROCID
0x4C000068 C   FIELD 08w04 COREID: COREID
0x4C000068 C   FIELD 31w01 LOCK: LOCK
0x4C00006C B  REGISTER HSEM_R27 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C00006C C   FIELD 00w08 PROCID: PROCID
0x4C00006C C   FIELD 08w04 COREID: COREID
0x4C00006C C   FIELD 31w01 LOCK: LOCK
0x4C000070 B  REGISTER HSEM_R28 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000070 C   FIELD 00w08 PROCID: PROCID
0x4C000070 C   FIELD 08w04 COREID: COREID
0x4C000070 C   FIELD 31w01 LOCK: LOCK
0x4C000074 B  REGISTER HSEM_R29 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000074 C   FIELD 00w08 PROCID: PROCID
0x4C000074 C   FIELD 08w04 COREID: COREID
0x4C000074 C   FIELD 31w01 LOCK: LOCK
0x4C000078 B  REGISTER HSEM_R30 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000078 C   FIELD 00w08 PROCID: PROCID
0x4C000078 C   FIELD 08w04 COREID: COREID
0x4C000078 C   FIELD 31w01 LOCK: LOCK
0x4C00007C B  REGISTER HSEM_R31 (rw): The HSEM_Rx shall be used to perform a 2-step Write lock and Read back. Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C00007C C   FIELD 00w08 PROCID: PROCID
0x4C00007C C   FIELD 08w04 COREID: COREID
0x4C00007C C   FIELD 31w01 LOCK: LOCK
0x4C000080 B  REGISTER HSEM_RLR0 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C000080 C   FIELD 00w08 PROCID: PROCID
0x4C000080 C   FIELD 08w04 COREID: COREID
0x4C000080 C   FIELD 31w01 LOCK: LOCK
0x4C000084 B  REGISTER HSEM_RLR1 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C000084 C   FIELD 00w08 PROCID: PROCID
0x4C000084 C   FIELD 08w04 COREID: COREID
0x4C000084 C   FIELD 31w01 LOCK: LOCK
0x4C000088 B  REGISTER HSEM_RLR2 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C000088 C   FIELD 00w08 PROCID: PROCID
0x4C000088 C   FIELD 08w04 COREID: COREID
0x4C000088 C   FIELD 31w01 LOCK: LOCK
0x4C00008C B  REGISTER HSEM_RLR3 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C00008C C   FIELD 00w08 PROCID: PROCID
0x4C00008C C   FIELD 08w04 COREID: COREID
0x4C00008C C   FIELD 31w01 LOCK: LOCK
0x4C000090 B  REGISTER HSEM_RLR4 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C000090 C   FIELD 00w08 PROCID: PROCID
0x4C000090 C   FIELD 08w04 COREID: COREID
0x4C000090 C   FIELD 31w01 LOCK: LOCK
0x4C000094 B  REGISTER HSEM_RLR5 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C000094 C   FIELD 00w08 PROCID: PROCID
0x4C000094 C   FIELD 08w04 COREID: COREID
0x4C000094 C   FIELD 31w01 LOCK: LOCK
0x4C000098 B  REGISTER HSEM_RLR6 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C000098 C   FIELD 00w08 PROCID: PROCID
0x4C000098 C   FIELD 08w04 COREID: COREID
0x4C000098 C   FIELD 31w01 LOCK: LOCK
0x4C00009C B  REGISTER HSEM_RLR7 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C00009C C   FIELD 00w08 PROCID: PROCID
0x4C00009C C   FIELD 08w04 COREID: COREID
0x4C00009C C   FIELD 31w01 LOCK: LOCK
0x4C0000A0 B  REGISTER HSEM_RLR8 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000A0 C   FIELD 00w08 PROCID: PROCID
0x4C0000A0 C   FIELD 08w04 COREID: COREID
0x4C0000A0 C   FIELD 31w01 LOCK: LOCK
0x4C0000A4 B  REGISTER HSEM_RLR9 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000A4 C   FIELD 00w08 PROCID: PROCID
0x4C0000A4 C   FIELD 08w04 COREID: COREID
0x4C0000A4 C   FIELD 31w01 LOCK: LOCK
0x4C0000A8 B  REGISTER HSEM_RLR10 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000A8 C   FIELD 00w08 PROCID: PROCID
0x4C0000A8 C   FIELD 08w04 COREID: COREID
0x4C0000A8 C   FIELD 31w01 LOCK: LOCK
0x4C0000AC B  REGISTER HSEM_RLR11 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000AC C   FIELD 00w08 PROCID: PROCID
0x4C0000AC C   FIELD 08w04 COREID: COREID
0x4C0000AC C   FIELD 31w01 LOCK: LOCK
0x4C0000B0 B  REGISTER HSEM_RLR12 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000B0 C   FIELD 00w08 PROCID: PROCID
0x4C0000B0 C   FIELD 08w04 COREID: COREID
0x4C0000B0 C   FIELD 31w01 LOCK: LOCK
0x4C0000B4 B  REGISTER HSEM_RLR13 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000B4 C   FIELD 00w08 PROCID: PROCID
0x4C0000B4 C   FIELD 08w04 COREID: COREID
0x4C0000B4 C   FIELD 31w01 LOCK: LOCK
0x4C0000B8 B  REGISTER HSEM_RLR14 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000B8 C   FIELD 00w08 PROCID: PROCID
0x4C0000B8 C   FIELD 08w04 COREID: COREID
0x4C0000B8 C   FIELD 31w01 LOCK: LOCK
0x4C0000BC B  REGISTER HSEM_RLR15 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000BC C   FIELD 00w08 PROCID: PROCID
0x4C0000BC C   FIELD 08w04 COREID: COREID
0x4C0000BC C   FIELD 31w01 LOCK: LOCK
0x4C0000C0 B  REGISTER HSEM_RLR16 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000C0 C   FIELD 00w08 PROCID: PROCID
0x4C0000C0 C   FIELD 08w04 COREID: COREID
0x4C0000C0 C   FIELD 31w01 LOCK: LOCK
0x4C0000C4 B  REGISTER HSEM_RLR17 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000C4 C   FIELD 00w08 PROCID: PROCID
0x4C0000C4 C   FIELD 08w04 COREID: COREID
0x4C0000C4 C   FIELD 31w01 LOCK: LOCK
0x4C0000C8 B  REGISTER HSEM_RLR18 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000C8 C   FIELD 00w08 PROCID: PROCID
0x4C0000C8 C   FIELD 08w04 COREID: COREID
0x4C0000C8 C   FIELD 31w01 LOCK: LOCK
0x4C0000CC B  REGISTER HSEM_RLR19 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000CC C   FIELD 00w08 PROCID: PROCID
0x4C0000CC C   FIELD 08w04 COREID: COREID
0x4C0000CC C   FIELD 31w01 LOCK: LOCK
0x4C0000D0 B  REGISTER HSEM_RLR20 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000D0 C   FIELD 00w08 PROCID: PROCID
0x4C0000D0 C   FIELD 08w04 COREID: COREID
0x4C0000D0 C   FIELD 31w01 LOCK: LOCK
0x4C0000D4 B  REGISTER HSEM_RLR21 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000D4 C   FIELD 00w08 PROCID: PROCID
0x4C0000D4 C   FIELD 08w04 COREID: COREID
0x4C0000D4 C   FIELD 31w01 LOCK: LOCK
0x4C0000D8 B  REGISTER HSEM_RLR22 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000D8 C   FIELD 00w08 PROCID: PROCID
0x4C0000D8 C   FIELD 08w04 COREID: COREID
0x4C0000D8 C   FIELD 31w01 LOCK: LOCK
0x4C0000DC B  REGISTER HSEM_RLR23 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000DC C   FIELD 00w08 PROCID: PROCID
0x4C0000DC C   FIELD 08w04 COREID: COREID
0x4C0000DC C   FIELD 31w01 LOCK: LOCK
0x4C0000E0 B  REGISTER HSEM_RLR24 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000E0 C   FIELD 00w08 PROCID: PROCID
0x4C0000E0 C   FIELD 08w04 COREID: COREID
0x4C0000E0 C   FIELD 31w01 LOCK: LOCK
0x4C0000E4 B  REGISTER HSEM_RLR25 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000E4 C   FIELD 00w08 PROCID: PROCID
0x4C0000E4 C   FIELD 08w04 COREID: COREID
0x4C0000E4 C   FIELD 31w01 LOCK: LOCK
0x4C0000E8 B  REGISTER HSEM_RLR26 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000E8 C   FIELD 00w08 PROCID: PROCID
0x4C0000E8 C   FIELD 08w04 COREID: COREID
0x4C0000E8 C   FIELD 31w01 LOCK: LOCK
0x4C0000EC B  REGISTER HSEM_RLR27 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000EC C   FIELD 00w08 PROCID: PROCID
0x4C0000EC C   FIELD 08w04 COREID: COREID
0x4C0000EC C   FIELD 31w01 LOCK: LOCK
0x4C0000F0 B  REGISTER HSEM_RLR28 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000F0 C   FIELD 00w08 PROCID: PROCID
0x4C0000F0 C   FIELD 08w04 COREID: COREID
0x4C0000F0 C   FIELD 31w01 LOCK: LOCK
0x4C0000F4 B  REGISTER HSEM_RLR29 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000F4 C   FIELD 00w08 PROCID: PROCID
0x4C0000F4 C   FIELD 08w04 COREID: COREID
0x4C0000F4 C   FIELD 31w01 LOCK: LOCK
0x4C0000F8 B  REGISTER HSEM_RLR30 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000F8 C   FIELD 00w08 PROCID: PROCID
0x4C0000F8 C   FIELD 08w04 COREID: COREID
0x4C0000F8 C   FIELD 31w01 LOCK: LOCK
0x4C0000FC B  REGISTER HSEM_RLR31 (ro): Accesses the same physical bits as HSEM_Rx. The HSEM_RLRx shall be used to perform a 1-step Read lock. Only Read accesses with authorized AHB bus master IDs are granted. Read accesses with unauthorized AHB bus master IDs are discarded.
0x4C0000FC C   FIELD 00w08 PROCID: PROCID
0x4C0000FC C   FIELD 08w04 COREID: COREID
0x4C0000FC C   FIELD 31w01 LOCK: LOCK
0x4C000100 B  REGISTER HSEM_C1IER (rw): HSEM i1terrupt enable register
0x4C000100 C   FIELD 00w32 ISE: ISE
0x4C000104 B  REGISTER HSEM_C1ICR (rw): HSEM i1terrupt clear register
0x4C000104 C   FIELD 00w32 ISC: ISC
0x4C000108 B  REGISTER HSEM_C1ISR (ro): HSEM i1terrupt status register
0x4C000108 C   FIELD 00w32 ISF: ISF
0x4C00010C B  REGISTER HSEM_C1MISR (ro): HSEM i1terrupt status register
0x4C00010C C   FIELD 00w32 MISF: MISF
0x4C000110 B  REGISTER HSEM_C2IER (rw): HSEM i2terrupt enable register
0x4C000110 C   FIELD 00w32 ISE: ISE
0x4C000114 B  REGISTER HSEM_C2ICR (rw): HSEM i2terrupt clear register
0x4C000114 C   FIELD 00w32 ISC: ISC
0x4C000118 B  REGISTER HSEM_C2ISR (ro): HSEM i2terrupt status register
0x4C000118 C   FIELD 00w32 ISF: ISF
0x4C00011C B  REGISTER HSEM_C2MISR (ro): HSEM i2terrupt status register
0x4C00011C C   FIELD 00w32 MISF: MISF
0x4C000140 B  REGISTER HSEM_CR (wo): Only Write accesses with authorized AHB bus master IDs are granted. Write accesses with unauthorized AHB bus master IDs are discarded.
0x4C000140 C   FIELD 08w04 COREID: COREID
0x4C000140 C   FIELD 16w16 KEY: KEY
0x4C000144 B  REGISTER HSEM_KEYR (rw): HSEM interrupt clear register
0x4C000144 C   FIELD 16w16 KEY: KEY
0x4C0003EC B  REGISTER HSEM_HWCFGR2 (ro): HSEM hardware configuration register 2
0x4C0003EC C   FIELD 00w04 MASTERID1: MASTERID1
0x4C0003EC C   FIELD 04w04 MASTERID2: MASTERID2
0x4C0003EC C   FIELD 08w04 MASTERID3: MASTERID3
0x4C0003EC C   FIELD 12w04 MASTERID4: MASTERID4
0x4C0003F0 B  REGISTER HSEM_HWCFGR1 (ro): HSEM hardware configuration register 1
0x4C0003F0 C   FIELD 00w08 NBSEM: NBSEM
0x4C0003F0 C   FIELD 08w04 NBINT: NBINT
0x4C0003F4 B  REGISTER HSEM_VERR (ro): HSEM IP version register
0x4C0003F4 C   FIELD 00w04 MINREV: MINREV
0x4C0003F4 C   FIELD 04w04 MAJREV: MAJREV
0x4C0003F8 B  REGISTER HSEM_IPIDR (ro): HSEM IP identification register
0x4C0003F8 C   FIELD 00w32 IPID: IPID
0x4C0003FC B  REGISTER HSEM_SIDR (ro): HSEM size identification register
0x4C0003FC C   FIELD 00w32 SID: SID
0x4C001000 A PERIPHERAL IPCC
0x4C001000 B  REGISTER IPCC_C1CR (rw): IPCC Processor 1 control register
0x4C001000 C   FIELD 00w01 RXOIE: RXOIE
0x4C001000 C   FIELD 16w01 TXFIE: TXFIE
0x4C001004 B  REGISTER IPCC_C1MR (rw): IPCC Processor 1 mask register
0x4C001004 C   FIELD 00w06 CHxOM: CHxOM
0x4C001004 C   FIELD 16w06 CHxFM: CHxFM
0x4C001008 B  REGISTER IPCC_C1SCR (rw): Reading this register will always return 0x0000 0000.
0x4C001008 C   FIELD 00w06 CHxC: CHxC
0x4C001008 C   FIELD 16w06 CHxS: CHxS
0x4C00100C B  REGISTER IPCC_C1TOC2SR (ro): IPCC processor 1 to processor 2 status register
0x4C00100C C   FIELD 00w06 CHxF: CHxF
0x4C001010 B  REGISTER IPCC_C2CR (rw): IPCC Processor 2 control register
0x4C001010 C   FIELD 00w01 RXOIE: RXOIE
0x4C001010 C   FIELD 16w01 TXFIE: TXFIE
0x4C001014 B  REGISTER IPCC_C2MR (rw): IPCC Processor 2 mask register
0x4C001014 C   FIELD 00w06 CHxOM: CHxOM
0x4C001014 C   FIELD 16w06 CHxFM: CHxFM
0x4C001018 B  REGISTER IPCC_C2SCR (rw): Reading this register will always return 0x0000 0000.
0x4C001018 C   FIELD 00w06 CHxC: CHxC
0x4C001018 C   FIELD 16w06 CHxS: CHxS
0x4C00101C B  REGISTER IPCC_C2TOC1SR (ro): IPCC processor 2 to processor 1 status register
0x4C00101C C   FIELD 00w06 CHxF: CHxF
0x4C0013F0 B  REGISTER IPCC_HWCFGR (ro): IPCC Hardware configuration register
0x4C0013F0 C   FIELD 00w08 CHANNELS: CHANNELS
0x4C0013F4 B  REGISTER IPCC_VER (ro): IPCC IP Version register
0x4C0013F4 C   FIELD 00w04 MINREV: MINREV
0x4C0013F4 C   FIELD 04w04 MAJREV: MAJREV
0x4C0013F8 B  REGISTER IPCC_ID (ro): IPCC IP Identification register
0x4C0013F8 C   FIELD 00w32 IPID: IPID
0x4C0013FC B  REGISTER IPCC_SID (ro): IPCC Size ID register
0x4C0013FC C   FIELD 00w32 SID: SID
0x4C002000 A PERIPHERAL HASH2
0x4C002000 B  REGISTER HASH_CR: HASH control register
0x4C002000 C   FIELD 02w01 INIT (wo): INIT
0x4C002000 C   FIELD 03w01 DMAE (rw): DMAE
0x4C002000 C   FIELD 04w02 DATATYPE (rw): DATATYPE
0x4C002000 C   FIELD 06w01 MODE (rw): MODE
0x4C002000 C   FIELD 07w01 ALGO0 (rw): ALGO0
0x4C002000 C   FIELD 08w04 NBW (ro): NBW
0x4C002000 C   FIELD 12w01 DINNE (ro): DINNE
0x4C002000 C   FIELD 13w01 MDMAT (rw): MDMAT
0x4C002000 C   FIELD 14w01 DMAA (wo): DMAA
0x4C002000 C   FIELD 16w01 LKEY (rw): LKEY
0x4C002000 C   FIELD 18w01 ALGO1 (rw): ALGO1
0x4C002004 B  REGISTER HASH_DIN (rw): HASH_DIN is the data input register.
0x4C002004 C   FIELD 00w32 DATAIN: DATAIN
0x4C002008 B  REGISTER HASH_STR: The HASH_STR register has two functions: It is used to define the number of valid bits in the last word of the message entered in the hash processor (that is the number of valid least significant bits in the last data written to the HASH_DIN register) It is used to start the processing of the last block in the message by writing the DCAL bit to 1
0x4C002008 C   FIELD 00w05 NBLW (rw): NBLW
0x4C002008 C   FIELD 08w01 DCAL (wo): DCAL
0x4C00200C B  REGISTER HASH_HR0 (ro): HASH digest register 0
0x4C00200C C   FIELD 00w32 H0: H0
0x4C002010 B  REGISTER HASH_HR1 (ro): HASH digest register 1
0x4C002010 C   FIELD 00w32 H1: H1
0x4C002014 B  REGISTER HASH_HR2 (ro): HASH digest register 2
0x4C002014 C   FIELD 00w32 H2: H2
0x4C002018 B  REGISTER HASH_HR3 (ro): HASH digest register 3
0x4C002018 C   FIELD 00w32 H3: H3
0x4C00201C B  REGISTER HASH_HR4 (ro): HASH digest register 4
0x4C00201C C   FIELD 00w32 H4: H4
0x4C002020 B  REGISTER HASH_IMR (rw): HASH interrupt enable register
0x4C002020 C   FIELD 00w01 DINIE: DINIE
0x4C002020 C   FIELD 01w01 DCIE: DCIE
0x4C002024 B  REGISTER HASH_SR: HASH status register
0x4C002024 C   FIELD 00w01 DINIS (rw): DINIS
0x4C002024 C   FIELD 01w01 DCIS (rw): DCIS
0x4C002024 C   FIELD 02w01 DMAS (ro): DMAS
0x4C002024 C   FIELD 03w01 BUSY (ro): BUSY
0x4C0020F8 B  REGISTER HASH_CSR0 (rw): These registers contain the complete internal register states of the hash processor. They are useful when a context swap has to be done because a high-priority task needs to use the hash processor while it is already used by another task. When such an event occurs, the HASH_CSRx registers have to be read and the read values have to be saved in the system memory space. Then the hash processor can be used by the preemptive task, and when the hash computation is complete, the saved context can be read from memory and written back into the HASH_CSRx registers.
0x4C0020F8 C   FIELD 00w32 CS0: CS0
0x4C0020FC B  REGISTER HASH_CSR1 (rw): HASH context swap registers
0x4C0020FC C   FIELD 00w32 CS1: CS1
0x4C002100 B  REGISTER HASH_CSR2 (rw): HASH context swap registers
0x4C002100 C   FIELD 00w32 CS2: CS2
0x4C002104 B  REGISTER HASH_CSR3 (rw): HASH context swap registers
0x4C002104 C   FIELD 00w32 CS3: CS3
0x4C002108 B  REGISTER HASH_CSR4 (rw): HASH context swap registers
0x4C002108 C   FIELD 00w32 CS4: CS4
0x4C00210C B  REGISTER HASH_CSR5 (rw): HASH context swap registers
0x4C00210C C   FIELD 00w32 CS5: CS5
0x4C002110 B  REGISTER HASH_CSR6 (rw): HASH context swap registers
0x4C002110 C   FIELD 00w32 CS6: CS6
0x4C002114 B  REGISTER HASH_CSR7 (rw): HASH context swap registers
0x4C002114 C   FIELD 00w32 CS7: CS7
0x4C002118 B  REGISTER HASH_CSR8 (rw): HASH context swap registers
0x4C002118 C   FIELD 00w32 CS8: CS8
0x4C00211C B  REGISTER HASH_CSR9 (rw): HASH context swap registers
0x4C00211C C   FIELD 00w32 CS9: CS9
0x4C002120 B  REGISTER HASH_CSR10 (rw): HASH context swap registers
0x4C002120 C   FIELD 00w32 CS10: CS10
0x4C002124 B  REGISTER HASH_CSR11 (rw): HASH context swap registers
0x4C002124 C   FIELD 00w32 CS11: CS11
0x4C002128 B  REGISTER HASH_CSR12 (rw): HASH context swap registers
0x4C002128 C   FIELD 00w32 CS12: CS12
0x4C00212C B  REGISTER HASH_CSR13 (rw): HASH context swap registers
0x4C00212C C   FIELD 00w32 CS13: CS13
0x4C002130 B  REGISTER HASH_CSR14 (rw): HASH context swap registers
0x4C002130 C   FIELD 00w32 CS14: CS14
0x4C002134 B  REGISTER HASH_CSR15 (rw): HASH context swap registers
0x4C002134 C   FIELD 00w32 CS15: CS15
0x4C002138 B  REGISTER HASH_CSR16 (rw): HASH context swap registers
0x4C002138 C   FIELD 00w32 CS16: CS16
0x4C00213C B  REGISTER HASH_CSR17 (rw): HASH context swap registers
0x4C00213C C   FIELD 00w32 CS17: CS17
0x4C002140 B  REGISTER HASH_CSR18 (rw): HASH context swap registers
0x4C002140 C   FIELD 00w32 CS18: CS18
0x4C002144 B  REGISTER HASH_CSR19 (rw): HASH context swap registers
0x4C002144 C   FIELD 00w32 CS19: CS19
0x4C002148 B  REGISTER HASH_CSR20 (rw): HASH context swap registers
0x4C002148 C   FIELD 00w32 CS20: CS20
0x4C00214C B  REGISTER HASH_CSR21 (rw): HASH context swap registers
0x4C00214C C   FIELD 00w32 CS21: CS21
0x4C002150 B  REGISTER HASH_CSR22 (rw): HASH context swap registers
0x4C002150 C   FIELD 00w32 CS22: CS22
0x4C002154 B  REGISTER HASH_CSR23 (rw): HASH context swap registers
0x4C002154 C   FIELD 00w32 CS23: CS23
0x4C002158 B  REGISTER HASH_CSR24 (rw): HASH context swap registers
0x4C002158 C   FIELD 00w32 CS24: CS24
0x4C00215C B  REGISTER HASH_CSR25 (rw): HASH context swap registers
0x4C00215C C   FIELD 00w32 CS25: CS25
0x4C002160 B  REGISTER HASH_CSR26 (rw): HASH context swap registers
0x4C002160 C   FIELD 00w32 CS26: CS26
0x4C002164 B  REGISTER HASH_CSR27 (rw): HASH context swap registers
0x4C002164 C   FIELD 00w32 CS27: CS27
0x4C002168 B  REGISTER HASH_CSR28 (rw): HASH context swap registers
0x4C002168 C   FIELD 00w32 CS28: CS28
0x4C00216C B  REGISTER HASH_CSR29 (rw): HASH context swap registers
0x4C00216C C   FIELD 00w32 CS29: CS29
0x4C002170 B  REGISTER HASH_CSR30 (rw): HASH context swap registers
0x4C002170 C   FIELD 00w32 CS30: CS30
0x4C002174 B  REGISTER HASH_CSR31 (rw): HASH context swap registers
0x4C002174 C   FIELD 00w32 CS31: CS31
0x4C002178 B  REGISTER HASH_CSR32 (rw): HASH context swap registers
0x4C002178 C   FIELD 00w32 CS32: CS32
0x4C00217C B  REGISTER HASH_CSR33 (rw): HASH context swap registers
0x4C00217C C   FIELD 00w32 CS33: CS33
0x4C002180 B  REGISTER HASH_CSR34 (rw): HASH context swap registers
0x4C002180 C   FIELD 00w32 CS34: CS34
0x4C002184 B  REGISTER HASH_CSR35 (rw): HASH context swap registers
0x4C002184 C   FIELD 00w32 CS35: CS35
0x4C002188 B  REGISTER HASH_CSR36 (rw): HASH context swap registers
0x4C002188 C   FIELD 00w32 CS36: CS36
0x4C00218C B  REGISTER HASH_CSR37 (rw): HASH context swap registers
0x4C00218C C   FIELD 00w32 CS37: CS37
0x4C002190 B  REGISTER HASH_CSR38 (rw): HASH context swap registers
0x4C002190 C   FIELD 00w32 CS38: CS38
0x4C002194 B  REGISTER HASH_CSR39 (rw): HASH context swap registers
0x4C002194 C   FIELD 00w32 CS39: CS39
0x4C002198 B  REGISTER HASH_CSR40 (rw): HASH context swap registers
0x4C002198 C   FIELD 00w32 CS40: CS40
0x4C00219C B  REGISTER HASH_CSR41 (rw): HASH context swap registers
0x4C00219C C   FIELD 00w32 CS41: CS41
0x4C0021A0 B  REGISTER HASH_CSR42 (rw): HASH context swap registers
0x4C0021A0 C   FIELD 00w32 CS42: CS42
0x4C0021A4 B  REGISTER HASH_CSR43 (rw): HASH context swap registers
0x4C0021A4 C   FIELD 00w32 CS43: CS43
0x4C0021A8 B  REGISTER HASH_CSR44 (rw): HASH context swap registers
0x4C0021A8 C   FIELD 00w32 CS44: CS44
0x4C0021AC B  REGISTER HASH_CSR45 (rw): HASH context swap registers
0x4C0021AC C   FIELD 00w32 CS45: CS45
0x4C0021B0 B  REGISTER HASH_CSR46 (rw): HASH context swap registers
0x4C0021B0 C   FIELD 00w32 CS46: CS46
0x4C0021B4 B  REGISTER HASH_CSR47 (rw): HASH context swap registers
0x4C0021B4 C   FIELD 00w32 CS47: CS47
0x4C0021B8 B  REGISTER HASH_CSR48 (rw): HASH context swap registers
0x4C0021B8 C   FIELD 00w32 CS48: CS48
0x4C0021BC B  REGISTER HASH_CSR49 (rw): HASH context swap registers
0x4C0021BC C   FIELD 00w32 CS49: CS49
0x4C0021C0 B  REGISTER HASH_CSR50 (rw): HASH context swap registers
0x4C0021C0 C   FIELD 00w32 CS50: CS50
0x4C0021C4 B  REGISTER HASH_CSR51 (rw): HASH context swap registers
0x4C0021C4 C   FIELD 00w32 CS51: CS51
0x4C0021C8 B  REGISTER HASH_CSR52 (rw): HASH context swap registers
0x4C0021C8 C   FIELD 00w32 CS52: CS52
0x4C0021CC B  REGISTER HASH_CSR53 (rw): HASH context swap registers
0x4C0021CC C   FIELD 00w32 CS53: CS53
0x4C002324 B  REGISTER HASH_HR5 (ro): HASH digest register 5
0x4C002324 C   FIELD 00w32 H5: H5
0x4C002328 B  REGISTER HASH_HR6 (ro): HASH digest register 6
0x4C002328 C   FIELD 00w32 H6: H6
0x4C00232C B  REGISTER HASH_HR7 (ro): HASH digest register 7
0x4C00232C C   FIELD 00w32 H7: H7
0x4C0023F0 B  REGISTER HASH_HWCFGR (ro): HASH Hardware Configuration Register
0x4C0023F0 C   FIELD 00w04 CFG1: CFG1
0x4C0023F4 B  REGISTER HASH_VERR (ro): HASH Version Register
0x4C0023F4 C   FIELD 00w08 VER: VER
0x4C0023F8 B  REGISTER HASH_IPIDR (ro): HASH Identification
0x4C0023F8 C   FIELD 00w32 ID: ID
0x4C0023FC B  REGISTER HASH_MID (ro): HASH Hardware Magic ID
0x4C0023FC C   FIELD 00w32 MID: MID
0x4C003000 A PERIPHERAL RNG2
0x4C003000 B  REGISTER RNG_CR (rw): RNG control register
0x4C003000 C   FIELD 02w01 RNGEN: RNGEN
0x4C003000 C   FIELD 03w01 IE: IE
0x4C003000 C   FIELD 05w01 CED: CED
0x4C003004 B  REGISTER RNG_SR: RNG status register
0x4C003004 C   FIELD 00w01 DRDY (ro): DRDY
0x4C003004 C   FIELD 01w01 CECS (ro): CECS
0x4C003004 C   FIELD 02w01 SECS (ro): SECS
0x4C003004 C   FIELD 05w01 CEIS (rw): CEIS
0x4C003004 C   FIELD 06w01 SEIS (rw): SEIS
0x4C003008 B  REGISTER RNG_DR (ro): The RNG_DR register is a read-only register.
0x4C003008 C   FIELD 00w32 RNDATA: RNDATA
0x4C0033F0 B  REGISTER RNG_HWCFGR (ro): RNG hardware configuration register
0x4C0033F4 B  REGISTER RNG_VERR (ro): RNG version register
0x4C0033F4 C   FIELD 00w04 MINREV: MINREV
0x4C0033F4 C   FIELD 04w04 MAJREV: MAJREV
0x4C0033F8 B  REGISTER RNG_IPIDR (ro): RNG identification register
0x4C0033F8 C   FIELD 00w32 ID: ID
0x4C0033FC B  REGISTER RNG_SIDR (ro): RNG size ID register
0x4C0033FC C   FIELD 00w32 SID: SID
0x4C004000 A PERIPHERAL CRC2
0x4C004000 B  REGISTER CRC_DR (rw): CRC data register
0x4C004000 C   FIELD 00w32 DR: DR
0x4C004004 B  REGISTER CRC_IDR (rw): CRC independent data register
0x4C004004 C   FIELD 00w32 IDR: IDR
0x4C004008 B  REGISTER CRC_CR (rw): CRC control register
0x4C004008 C   FIELD 00w01 RESET: RESET
0x4C004008 C   FIELD 03w02 POLYSIZE: POLYSIZE
0x4C004008 C   FIELD 05w02 REV_IN: REV_IN
0x4C004008 C   FIELD 07w01 REV_OUT: REV_OUT
0x4C004010 B  REGISTER CRC_INIT (rw): CRC initial value
0x4C004010 C   FIELD 00w32 CRC_INIT: CRC_INIT
0x4C004014 B  REGISTER CRC_POL (rw): CRC polynomial
0x4C004014 C   FIELD 00w32 POL: POL
0x4C005000 A PERIPHERAL CRYP2
0x4C005000 B  REGISTER CRYP_CR: CRYP control register
0x4C005000 C   FIELD 02w01 ALGODIR (rw): ALGODIR
0x4C005000 C   FIELD 03w03 ALGOMODE (rw): ALGOMODE
0x4C005000 C   FIELD 06w02 DATATYPE (rw): DATATYPE
0x4C005000 C   FIELD 08w02 KEYSIZE (rw): KEYSIZE
0x4C005000 C   FIELD 14w01 FFLUSH (wo): FFLUSH
0x4C005000 C   FIELD 15w01 CRYPEN (rw): CRYPEN
0x4C005000 C   FIELD 16w02 GCM_CCMPH (rw): GCM_CCMPH
0x4C005000 C   FIELD 19w01 ALGOMODE3 (rw): ALGOMODE3
0x4C005000 C   FIELD 20w04 NPBLB (rw): NPBLB
0x4C005004 B  REGISTER CRYP_SR (ro): CRYP status register
0x4C005004 C   FIELD 00w01 IFEM: IFEM
0x4C005004 C   FIELD 01w01 IFNF: IFNF
0x4C005004 C   FIELD 02w01 OFNE: OFNE
0x4C005004 C   FIELD 03w01 OFFU: OFFU
0x4C005004 C   FIELD 04w01 BUSY: BUSY
0x4C005008 B  REGISTER CRYP_DIN (rw): The CRYP_DIN register is the data input register. It is 32-bit wide. It is used to enter into the input FIFO up to four 64-bit blocks (TDES) or two 128-bit blocks (AES) of plaintext (when encrypting) or ciphertext (when decrypting), one 32-bit word at a time. To fit different data sizes, the data can be swapped after processing by configuring the DATATYPE bits in the CRYP_CR register. Refer to Section39.3.16: CRYP data registers and data swapping for more details. When CRYP_DIN register is written to the data are pushed into the input FIFO. If CRYPEN = 1, when at least two 32-bit words in the DES/TDES mode have been pushed into the input FIFO (four words in the AES mode), and when at least two words are free in the output FIFO (four words in the AES mode), the CRYP engine starts an encrypting or decrypting process. When CRYP_DIN register is read: If CRYPEN = 0, the FIFO is popped, and then the data present in the Input FIFO are returned, from the oldest one (first reading) to the newest one (last reading). The IFEM flag must be checked before each read operation to make sure that the FIFO is not empty. if CRYPEN = 1, an undefined value is returned. After the CRYP_DIN register has been read once or several times, the FIFO must be flushed by setting the FFLUSH bit prior to processing new data.
0x4C005008 C   FIELD 00w32 DATAIN: DATAIN
0x4C00500C B  REGISTER CRYP_DOUT (ro): The CRYP_DOUT register is the data output register. It is read-only and 32-bit wide. It is used to retrieve from the output FIFO up to four 64-bit blocks (TDES) or two 128-bit blocks (AES) of plaintext (when encrypting) or ciphertext (when decrypting), one 32-bit word at a time. To fit different data sizes, the data can be swapped after processing by configuring the DATATYPE bits in the CRYP_CR register. Refer to Section39.3.16: CRYP data registers and data swapping for more details. When CRYP_DOUT register is read, the last data entered into the output FIFO (pointed to by the read pointer) is returned.
0x4C00500C C   FIELD 00w32 DATAOUT: DATAOUT
0x4C005010 B  REGISTER CRYP_DMACR (rw): CRYP DMA control register
0x4C005010 C   FIELD 00w01 DIEN: DIEN
0x4C005010 C   FIELD 01w01 DOEN: DOEN
0x4C005014 B  REGISTER CRYP_IMSCR (rw): The CRYP_IMSCR register is the interrupt mask set or clear register. It is a read/write register. When a read operation is performed, this register gives the current value of the mask applied to the relevant interrupt. Writing 1 to the particular bit sets the mask, thus enabling the interrupt to be read. Writing 0 to this bit clears the corresponding mask. All the bits are cleared to 0 when the peripheral is reset.
0x4C005014 C   FIELD 00w01 INIM: INIM
0x4C005014 C   FIELD 01w01 OUTIM: OUTIM
0x4C005018 B  REGISTER CRYP_RISR (ro): The CRYP_RISR register is the raw interrupt status register. It is a read-only register. When a read operation is performed, this register gives the current raw status of the corresponding interrupt, i.e. the interrupt information without taking CRYP_IMSCR mask into account. Write operations have no effect.
0x4C005018 C   FIELD 00w01 INRIS: INRIS
0x4C005018 C   FIELD 01w01 OUTRIS: OUTRIS
0x4C00501C B  REGISTER CRYP_MISR (ro): The CRYP_MISR register is the masked interrupt status register. It is a read-only register. When a read operation is performed, this register gives the current masked status of the corresponding interrupt, i.e. the interrupt information taking CRYP_IMSCR mask into account. Write operations have no effect.
0x4C00501C C   FIELD 00w01 INMIS: INMIS
0x4C00501C C   FIELD 01w01 OUTMIS: OUTMIS
0x4C005020 B  REGISTER CRYP_K0LR (wo): CRYP key registers contain the cryptographic keys. In DES/TDES mode, the keys are 64-bit binary values (number from left to right, that is the leftmost bit is bit 1) and named K1, K2 and K3 (K0 is not used). Each key consists of 56 information bits and 8 parity bits. In AES mode, the key is considered as a single 128, 192 or 256 bits long sequence K0K1K2...K127/191/255. The AES key is entered into the registers as follows: for AES-128: K0..K127 corresponds to b127..b0 (b255..b128 are not used), for AES-192: K0..K191 corresponds to b191..b0 (b255..b192 are not used), for AES-256: K0..K255 corresponds to b255..b0. In all cases key bit K0 is the leftmost bit in CRYP inner memory and register bit b0 is the rightmost bit in corresponding CRYP_KxLR key register. For more information refer to Section39.3.17: CRYP key registers. Write accesses to these registers are disregarded when the cryptographic processor is busy (bit BUSY = 1 in the CRYP_SR register)
0x4C005020 C   FIELD 00w32 K: K
0x4C005024 B  REGISTER CRYP_K0RR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x4C005024 C   FIELD 00w32 K: K
0x4C005028 B  REGISTER CRYP_K1LR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x4C005028 C   FIELD 00w32 K: K
0x4C00502C B  REGISTER CRYP_K1RR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x4C00502C C   FIELD 00w32 K: K
0x4C005030 B  REGISTER CRYP_K2LR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x4C005030 C   FIELD 00w32 K: K
0x4C005034 B  REGISTER CRYP_K2RR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x4C005034 C   FIELD 00w32 K: K
0x4C005038 B  REGISTER CRYP_K3LR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x4C005038 C   FIELD 00w32 K: K
0x4C00503C B  REGISTER CRYP_K3RR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x4C00503C C   FIELD 00w32 K: K
0x4C005040 B  REGISTER CRYP_IV0LR (rw): The CRYP_IV0...1(L/R)R are the left-word and right-word registers for the initialization vector (64 bits for DES/TDES and 128 bits for AES). For more information refer to Section39.3.18: CRYP initialization vector registers. IV0 is the leftmost bit whereas IV63 (DES, TDES) or IV127 (AES) are the rightmost bits of the initialization vector. IV1(L/R)R is used only in the AES. Only CRYP_IV0(L/R) is used in DES/TDES. Write access to these registers are disregarded when the cryptographic processor is busy (bit BUSY = 1 in the CRYP_SR register).
0x4C005040 C   FIELD 00w01 IV31: IV31
0x4C005040 C   FIELD 01w01 IV30: IV30
0x4C005040 C   FIELD 02w01 IV29: IV29
0x4C005040 C   FIELD 03w01 IV28: IV28
0x4C005040 C   FIELD 04w01 IV27: IV27
0x4C005040 C   FIELD 05w01 IV26: IV26
0x4C005040 C   FIELD 06w01 IV25: IV25
0x4C005040 C   FIELD 07w01 IV24: IV24
0x4C005040 C   FIELD 08w01 IV23: IV23
0x4C005040 C   FIELD 09w01 IV22: IV22
0x4C005040 C   FIELD 10w01 IV21: IV21
0x4C005040 C   FIELD 11w01 IV20: IV20
0x4C005040 C   FIELD 12w01 IV19: IV19
0x4C005040 C   FIELD 13w01 IV18: IV18
0x4C005040 C   FIELD 14w01 IV17: IV17
0x4C005040 C   FIELD 15w01 IV16: IV16
0x4C005040 C   FIELD 16w01 IV15: IV15
0x4C005040 C   FIELD 17w01 IV14: IV14
0x4C005040 C   FIELD 18w01 IV13: IV13
0x4C005040 C   FIELD 19w01 IV12: IV12
0x4C005040 C   FIELD 20w01 IV11: IV11
0x4C005040 C   FIELD 21w01 IV10: IV10
0x4C005040 C   FIELD 22w01 IV9: IV9
0x4C005040 C   FIELD 23w01 IV8: IV8
0x4C005040 C   FIELD 24w01 IV7: IV7
0x4C005040 C   FIELD 25w01 IV6: IV6
0x4C005040 C   FIELD 26w01 IV5: IV5
0x4C005040 C   FIELD 27w01 IV4: IV4
0x4C005040 C   FIELD 28w01 IV3: IV3
0x4C005040 C   FIELD 29w01 IV2: IV2
0x4C005040 C   FIELD 30w01 IV1: IV1
0x4C005040 C   FIELD 31w01 IV0: IV0
0x4C005044 B  REGISTER CRYP_IV0RR (rw): Refer to Section39.6.17: CRYP initialization vector register 0L (CRYP_IV0LR) for details.
0x4C005044 C   FIELD 00w01 IV63: IV63
0x4C005044 C   FIELD 01w01 IV62: IV62
0x4C005044 C   FIELD 02w01 IV61: IV61
0x4C005044 C   FIELD 03w01 IV60: IV60
0x4C005044 C   FIELD 04w01 IV59: IV59
0x4C005044 C   FIELD 05w01 IV58: IV58
0x4C005044 C   FIELD 06w01 IV57: IV57
0x4C005044 C   FIELD 07w01 IV56: IV56
0x4C005044 C   FIELD 08w01 IV55: IV55
0x4C005044 C   FIELD 09w01 IV54: IV54
0x4C005044 C   FIELD 10w01 IV53: IV53
0x4C005044 C   FIELD 11w01 IV52: IV52
0x4C005044 C   FIELD 12w01 IV51: IV51
0x4C005044 C   FIELD 13w01 IV50: IV50
0x4C005044 C   FIELD 14w01 IV49: IV49
0x4C005044 C   FIELD 15w01 IV48: IV48
0x4C005044 C   FIELD 16w01 IV47: IV47
0x4C005044 C   FIELD 17w01 IV46: IV46
0x4C005044 C   FIELD 18w01 IV45: IV45
0x4C005044 C   FIELD 19w01 IV44: IV44
0x4C005044 C   FIELD 20w01 IV43: IV43
0x4C005044 C   FIELD 21w01 IV42: IV42
0x4C005044 C   FIELD 22w01 IV41: IV41
0x4C005044 C   FIELD 23w01 IV40: IV40
0x4C005044 C   FIELD 24w01 IV39: IV39
0x4C005044 C   FIELD 25w01 IV38: IV38
0x4C005044 C   FIELD 26w01 IV37: IV37
0x4C005044 C   FIELD 27w01 IV36: IV36
0x4C005044 C   FIELD 28w01 IV35: IV35
0x4C005044 C   FIELD 29w01 IV34: IV34
0x4C005044 C   FIELD 30w01 IV33: IV33
0x4C005044 C   FIELD 31w01 IV32: IV32
0x4C005048 B  REGISTER CRYP_IV1LR (rw): Refer to Section39.6.17: CRYP initialization vector register 0L (CRYP_IV0LR) for details.
0x4C005048 C   FIELD 00w01 IV95: IV95
0x4C005048 C   FIELD 01w01 IV94: IV94
0x4C005048 C   FIELD 02w01 IV93: IV93
0x4C005048 C   FIELD 03w01 IV92: IV92
0x4C005048 C   FIELD 04w01 IV91: IV91
0x4C005048 C   FIELD 05w01 IV90: IV90
0x4C005048 C   FIELD 06w01 IV89: IV89
0x4C005048 C   FIELD 07w01 IV88: IV88
0x4C005048 C   FIELD 08w01 IV87: IV87
0x4C005048 C   FIELD 09w01 IV86: IV86
0x4C005048 C   FIELD 10w01 IV85: IV85
0x4C005048 C   FIELD 11w01 IV84: IV84
0x4C005048 C   FIELD 12w01 IV83: IV83
0x4C005048 C   FIELD 13w01 IV82: IV82
0x4C005048 C   FIELD 14w01 IV81: IV81
0x4C005048 C   FIELD 15w01 IV80: IV80
0x4C005048 C   FIELD 16w01 IV79: IV79
0x4C005048 C   FIELD 17w01 IV78: IV78
0x4C005048 C   FIELD 18w01 IV77: IV77
0x4C005048 C   FIELD 19w01 IV76: IV76
0x4C005048 C   FIELD 20w01 IV75: IV75
0x4C005048 C   FIELD 21w01 IV74: IV74
0x4C005048 C   FIELD 22w01 IV73: IV73
0x4C005048 C   FIELD 23w01 IV72: IV72
0x4C005048 C   FIELD 24w01 IV71: IV71
0x4C005048 C   FIELD 25w01 IV70: IV70
0x4C005048 C   FIELD 26w01 IV69: IV69
0x4C005048 C   FIELD 27w01 IV68: IV68
0x4C005048 C   FIELD 28w01 IV67: IV67
0x4C005048 C   FIELD 29w01 IV66: IV66
0x4C005048 C   FIELD 30w01 IV65: IV65
0x4C005048 C   FIELD 31w01 IV64: IV64
0x4C00504C B  REGISTER CRYP_IV1RR (rw): Refer to Section39.6.17: CRYP initialization vector register 0L (CRYP_IV0LR) for details.
0x4C00504C C   FIELD 00w01 IV127: IV127
0x4C00504C C   FIELD 01w01 IV126: IV126
0x4C00504C C   FIELD 02w01 IV125: IV125
0x4C00504C C   FIELD 03w01 IV124: IV124
0x4C00504C C   FIELD 04w01 IV123: IV123
0x4C00504C C   FIELD 05w01 IV122: IV122
0x4C00504C C   FIELD 06w01 IV121: IV121
0x4C00504C C   FIELD 07w01 IV120: IV120
0x4C00504C C   FIELD 08w01 IV119: IV119
0x4C00504C C   FIELD 09w01 IV118: IV118
0x4C00504C C   FIELD 10w01 IV117: IV117
0x4C00504C C   FIELD 11w01 IV116: IV116
0x4C00504C C   FIELD 12w01 IV115: IV115
0x4C00504C C   FIELD 13w01 IV114: IV114
0x4C00504C C   FIELD 14w01 IV113: IV113
0x4C00504C C   FIELD 15w01 IV112: IV112
0x4C00504C C   FIELD 16w01 IV111: IV111
0x4C00504C C   FIELD 17w01 IV110: IV110
0x4C00504C C   FIELD 18w01 IV109: IV109
0x4C00504C C   FIELD 19w01 IV108: IV108
0x4C00504C C   FIELD 20w01 IV107: IV107
0x4C00504C C   FIELD 21w01 IV106: IV106
0x4C00504C C   FIELD 22w01 IV105: IV105
0x4C00504C C   FIELD 23w01 IV104: IV104
0x4C00504C C   FIELD 24w01 IV103: IV103
0x4C00504C C   FIELD 25w01 IV102: IV102
0x4C00504C C   FIELD 26w01 IV101: IV101
0x4C00504C C   FIELD 27w01 IV100: IV100
0x4C00504C C   FIELD 28w01 IV99: IV99
0x4C00504C C   FIELD 29w01 IV98: IV98
0x4C00504C C   FIELD 30w01 IV97: IV97
0x4C00504C C   FIELD 31w01 IV96: IV96
0x4C005050 B  REGISTER CRYP_CSGCMCCM0R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x4C005050 C   FIELD 00w32 CSGCMCCM0: CSGCMCCM0
0x4C005054 B  REGISTER CRYP_CSGCMCCM1R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x4C005054 C   FIELD 00w32 CSGCMCCM1: CSGCMCCM1
0x4C005058 B  REGISTER CRYP_CSGCMCCM2R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x4C005058 C   FIELD 00w32 CSGCMCCM2: CSGCMCCM2
0x4C00505C B  REGISTER CRYP_CSGCMCCM3R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x4C00505C C   FIELD 00w32 CSGCMCCM3: CSGCMCCM3
0x4C005060 B  REGISTER CRYP_CSGCMCCM4R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x4C005060 C   FIELD 00w32 CSGCMCCM4: CSGCMCCM4
0x4C005064 B  REGISTER CRYP_CSGCMCCM5R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x4C005064 C   FIELD 00w32 CSGCMCCM5: CSGCMCCM5
0x4C005068 B  REGISTER CRYP_CSGCMCCM6R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x4C005068 C   FIELD 00w32 CSGCMCCM6: CSGCMCCM6
0x4C00506C B  REGISTER CRYP_CSGCMCCM7R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x4C00506C C   FIELD 00w32 CSGCMCCM7: CSGCMCCM7
0x4C005070 B  REGISTER CRYP_CSGCM0R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x4C005070 C   FIELD 00w32 CSGCM0: CSGCM0
0x4C005074 B  REGISTER CRYP_CSGCM1R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x4C005074 C   FIELD 00w32 CSGCM1: CSGCM1
0x4C005078 B  REGISTER CRYP_CSGCM2R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x4C005078 C   FIELD 00w32 CSGCM2: CSGCM2
0x4C00507C B  REGISTER CRYP_CSGCM3R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x4C00507C C   FIELD 00w32 CSGCM3: CSGCM3
0x4C005080 B  REGISTER CRYP_CSGCM4R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x4C005080 C   FIELD 00w32 CSGCM4: CSGCM4
0x4C005084 B  REGISTER CRYP_CSGCM5R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x4C005084 C   FIELD 00w32 CSGCM5: CSGCM5
0x4C005088 B  REGISTER CRYP_CSGCM6R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x4C005088 C   FIELD 00w32 CSGCM6: CSGCM6
0x4C00508C B  REGISTER CRYP_CSGCM7R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x4C00508C C   FIELD 00w32 CSGCM7: CSGCM7
0x4C0053F0 B  REGISTER CRYP_HWCFGR (ro): CRYP hardware configuration register
0x4C0053F0 C   FIELD 00w04 CFG1: CFG1
0x4C0053F0 C   FIELD 04w04 CFG2: CFG2
0x4C0053F0 C   FIELD 08w04 CFG3: CFG3
0x4C0053F0 C   FIELD 12w04 CFG4: CFG4
0x4C0053F4 B  REGISTER CRYP_VERR (ro): CRYP HW Version Register
0x4C0053F4 C   FIELD 00w08 VER: VER
0x4C0053F8 B  REGISTER CRYP_IPIDR (ro): CRYP Identification
0x4C0053F8 C   FIELD 00w32 ID: ID
0x4C0053FC B  REGISTER CRYP_MID (ro): CRYP HW Magic ID
0x4C0053FC C   FIELD 00w32 MID: MID
0x4C006000 A PERIPHERAL DCMI
0x4C006000 B  REGISTER DCMI_CR (rw): DCMI control register
0x4C006000 C   FIELD 00w01 CAPTURE: CAPTURE
0x4C006000 C   FIELD 01w01 CM: CM
0x4C006000 C   FIELD 02w01 CROP: CROP
0x4C006000 C   FIELD 03w01 JPEG: JPEG
0x4C006000 C   FIELD 04w01 ESS: ESS
0x4C006000 C   FIELD 05w01 PCKPOL: PCKPOL
0x4C006000 C   FIELD 06w01 HSPOL: HSPOL
0x4C006000 C   FIELD 07w01 VSPOL: VSPOL
0x4C006000 C   FIELD 08w02 FCRC: FCRC
0x4C006000 C   FIELD 10w02 EDM: EDM
0x4C006000 C   FIELD 14w01 ENABLE: ENABLE
0x4C006000 C   FIELD 16w02 BSM: BSM
0x4C006000 C   FIELD 18w01 OEBS: OEBS
0x4C006000 C   FIELD 19w01 LSM: LSM
0x4C006000 C   FIELD 20w01 OELS: OELS
0x4C006004 B  REGISTER DCMI_SR (ro): DCMI status register
0x4C006004 C   FIELD 00w01 HSYNC: HSYNC
0x4C006004 C   FIELD 01w01 VSYNC: VSYNC
0x4C006004 C   FIELD 02w01 FNE: FNE
0x4C006008 B  REGISTER DCMI_RIS (ro): DCMI_RIS gives the raw interrupt status and is accessible in read only. When read, this register returns the status of the corresponding interrupt before masking with the DCMI_IER register value.
0x4C006008 C   FIELD 00w01 FRAME_RIS: FRAME_RIS
0x4C006008 C   FIELD 01w01 OVR_RIS: OVR_RIS
0x4C006008 C   FIELD 02w01 ERR_RIS: ERR_RIS
0x4C006008 C   FIELD 03w01 VSYNC_RIS: VSYNC_RIS
0x4C006008 C   FIELD 04w01 LINE_RIS: LINE_RIS
0x4C00600C B  REGISTER DCMI_IER (rw): The DCMI_IER register is used to enable interrupts. When one of the DCMI_IER bits is set, the corresponding interrupt is enabled. This register is accessible in both read and write.
0x4C00600C C   FIELD 00w01 FRAME_IE: FRAME_IE
0x4C00600C C   FIELD 01w01 OVR_IE: OVR_IE
0x4C00600C C   FIELD 02w01 ERR_IE: ERR_IE
0x4C00600C C   FIELD 03w01 VSYNC_IE: VSYNC_IE
0x4C00600C C   FIELD 04w01 LINE_IE: LINE_IE
0x4C006010 B  REGISTER DCMI_MIS (ro): This DCMI_MIS register is a read-only register. When read, it returns the current masked status value (depending on the value in DCMI_IER) of the corresponding interrupt. A bit in this register is set if the corresponding enable bit in DCMI_IER is set and the corresponding bit in DCMI_RIS is set.
0x4C006010 C   FIELD 00w01 FRAME_MIS: FRAME_MIS
0x4C006010 C   FIELD 01w01 OVR_MIS: OVR_MIS
0x4C006010 C   FIELD 02w01 ERR_MIS: ERR_MIS
0x4C006010 C   FIELD 03w01 VSYNC_MIS: VSYNC_MIS
0x4C006010 C   FIELD 04w01 LINE_MIS: LINE_MIS
0x4C006014 B  REGISTER DCMI_ICR (wo): The DCMI_ICR register is write-only.
0x4C006014 C   FIELD 00w01 FRAME_ISC: FRAME_ISC
0x4C006014 C   FIELD 01w01 OVR_ISC: OVR_ISC
0x4C006014 C   FIELD 02w01 ERR_ISC: ERR_ISC
0x4C006014 C   FIELD 03w01 VSYNC_ISC: VSYNC_ISC
0x4C006014 C   FIELD 04w01 LINE_ISC: LINE_ISC
0x4C006018 B  REGISTER DCMI_ESCR (rw): DCMI embedded synchronization code register
0x4C006018 C   FIELD 00w08 FSC: FSC
0x4C006018 C   FIELD 08w08 LSC: LSC
0x4C006018 C   FIELD 16w08 LEC: LEC
0x4C006018 C   FIELD 24w08 FEC: FEC
0x4C00601C B  REGISTER DCMI_ESUR (rw): DCMI embedded synchronization unmask register
0x4C00601C C   FIELD 00w08 FSU: FSU
0x4C00601C C   FIELD 08w08 LSU: LSU
0x4C00601C C   FIELD 16w08 LEU: LEU
0x4C00601C C   FIELD 24w08 FEU: FEU
0x4C006020 B  REGISTER DCMI_CWSTRT (rw): DCMI crop window start
0x4C006020 C   FIELD 00w14 HOFFCNT: HOFFCNT
0x4C006020 C   FIELD 16w13 VST: VST
0x4C006024 B  REGISTER DCMI_CWSIZE (rw): DCMI crop window size
0x4C006024 C   FIELD 00w14 CAPCNT: CAPCNT
0x4C006024 C   FIELD 16w14 VLINE: VLINE
0x4C006028 B  REGISTER DCMI_DR (ro): DCMI data register
0x4C006028 C   FIELD 00w08 Byte0: Byte0
0x4C006028 C   FIELD 08w08 Byte1: Byte1
0x4C006028 C   FIELD 16w08 Byte2: Byte2
0x4C006028 C   FIELD 24w08 Byte3: Byte3
0x50000000 A PERIPHERAL RCC
0x50000000 B  REGISTER RCC_TZCR (rw): This register is used to switch the RCC into secure mode. This register can only be accessed in secure mode.
0x50000000 C   FIELD 00w01 TZEN: TZEN
0x50000000 C   FIELD 01w01 MCKPROT: MCKPROT
0x5000000C B  REGISTER RCC_OCENSETR (rw): This register is used to control the oscillators.Writing to this register has no effect, writing will set the corresponding bits. Reading will give the effective values of each bit.If TZEN = MCKPROT = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x5000000C C   FIELD 00w01 HSION: HSION
0x5000000C C   FIELD 01w01 HSIKERON: HSIKERON
0x5000000C C   FIELD 04w01 CSION: CSION
0x5000000C C   FIELD 05w01 CSIKERON: CSIKERON
0x5000000C C   FIELD 07w01 DIGBYP: DIGBYP
0x5000000C C   FIELD 08w01 HSEON: HSEON
0x5000000C C   FIELD 09w01 HSEKERON: HSEKERON
0x5000000C C   FIELD 10w01 HSEBYP: HSEBYP
0x5000000C C   FIELD 11w01 HSECSSON: HSECSSON
0x50000010 B  REGISTER RCC_OCENCLRR (rw): This register is used to control the oscillators.Writing to this register has no effect, writing will clear the corresponding bits. Reading will give the effective values of the enable bits.If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000010 C   FIELD 00w01 HSION: HSION
0x50000010 C   FIELD 01w01 HSIKERON: HSIKERON
0x50000010 C   FIELD 04w01 CSION: CSION
0x50000010 C   FIELD 05w01 CSIKERON: CSIKERON
0x50000010 C   FIELD 07w01 DIGBYP: DIGBYP
0x50000010 C   FIELD 08w01 HSEON: HSEON
0x50000010 C   FIELD 09w01 HSEKERON: HSEKERON
0x50000010 C   FIELD 10w01 HSEBYP: HSEBYP
0x50000018 B  REGISTER RCC_HSICFGR: This register is used to configure the HSI. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000018 C   FIELD 00w02 HSIDIV (rw): HSIDIV
0x50000018 C   FIELD 08w07 HSITRIM (rw): HSITRIM
0x50000018 C   FIELD 16w12 HSICAL (ro): HSICAL
0x5000001C B  REGISTER RCC_CSICFGR: This register is used to fine-tune the CSI frequency. If TZEN = MCKPROT = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See The clock restore sequence description for details.
0x5000001C C   FIELD 08w05 CSITRIM (rw): CSITRIM
0x5000001C C   FIELD 16w08 CSICAL (ro): CSICAL
0x50000020 B  REGISTER RCC_MPCKSELR: This register is used to select the clock source for the MPU. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000020 C   FIELD 00w02 MPUSRC (rw): MPUSRC
0x50000020 C   FIELD 31w01 MPUSRCRDY (ro): MPUSRCRDY
0x50000024 B  REGISTER RCC_ASSCKSELR: This register is used to select the clock source for the AXI sub-system. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000024 C   FIELD 00w03 AXISSRC (rw): AXISSRC
0x50000024 C   FIELD 31w01 AXISSRCRDY (ro): AXISSRCRDY
0x50000028 B  REGISTER RCC_RCK12SELR: This register is used to select the reference clock for PLL1 and PLL2. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000028 C   FIELD 00w02 PLL12SRC (rw): PLL12SRC
0x50000028 C   FIELD 31w01 PLL12SRCRDY (ro): PLL12SRCRDY
0x5000002C B  REGISTER RCC_MPCKDIVR: This register is used to control the MPU clock prescaler. Refer to Section: Sub-system clock generation for additional information. If TZEN = , this register can only be modified in secure mode.
0x5000002C C   FIELD 00w03 MPUDIV (rw): MPUDIV
0x5000002C C   FIELD 31w01 MPUDIVRDY (ro): MPUDIVRDY
0x50000030 B  REGISTER RCC_AXIDIVR: This register is used to control the AXI Matrix clock prescaler. Refer to Section: Sub-system clock generation for additional information. If TZEN = , this register can only be modified in secure mode.
0x50000030 C   FIELD 00w03 AXIDIV (rw): AXIDIV
0x50000030 C   FIELD 31w01 AXIDIVRDY (ro): AXIDIVRDY
0x5000003C B  REGISTER RCC_APB4DIVR: This register is used to control the APB4 clock divider. Refer to Section: Sub-system clock generation for additional information. If TZEN = , this register can only be modified in secure mode.
0x5000003C C   FIELD 00w03 APB4DIV (rw): APB4DIV
0x5000003C C   FIELD 31w01 APB4DIVRDY (ro): APB4DIVRDY
0x50000040 B  REGISTER RCC_APB5DIVR: This register is used to control the APB5 clock divider. Refer to Section: Sub-system clock generation for additional information. If TZEN = , this register can only be modified in secure mode.
0x50000040 C   FIELD 00w03 APB5DIV (rw): APB5DIV
0x50000040 C   FIELD 31w01 APB5DIVRDY (ro): APB5DIVRDY
0x50000044 B  REGISTER RCC_RTCDIVR (rw): This register is used to divide the HSE clock for RTC. If TZEN = , this register can only be modified in secure mode.
0x50000044 C   FIELD 00w06 RTCDIV: RTCDIV
0x50000048 B  REGISTER RCC_MSSCKSELR: This register is used to select the clock source for the MCU sub-system, including the MCU itself. If TZEN = MCKPROT = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000048 C   FIELD 00w02 MCUSSRC (rw): MCUSSRC
0x50000048 C   FIELD 31w01 MCUSSRCRDY (ro): MCUSSRCRDY
0x50000080 B  REGISTER RCC_PLL1CR: This register is used to control the PLL1. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000080 C   FIELD 00w01 PLLON (rw): PLLON
0x50000080 C   FIELD 01w01 PLL1RDY (ro): PLL1RDY
0x50000080 C   FIELD 02w01 SSCG_CTRL (rw): SSCG_CTRL
0x50000080 C   FIELD 04w01 DIVPEN (rw): DIVPEN
0x50000080 C   FIELD 05w01 DIVQEN (rw): DIVQEN
0x50000080 C   FIELD 06w01 DIVREN (rw): DIVREN
0x50000084 B  REGISTER RCC_PLL1CFGR1 (rw): This register is used to configure the PLL1. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000084 C   FIELD 00w09 DIVN: DIVN
0x50000084 C   FIELD 16w06 DIVM1: DIVM1
0x50000088 B  REGISTER RCC_PLL1CFGR2 (rw): This register is used to configure the PLL1. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000088 C   FIELD 00w07 DIVP: DIVP
0x50000088 C   FIELD 08w07 DIVQ: DIVQ
0x50000088 C   FIELD 16w07 DIVR: DIVR
0x5000008C B  REGISTER RCC_PLL1FRACR (rw): This register is used to fine-tune the frequency of the PLL1 VCO. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x5000008C C   FIELD 03w13 FRACV: FRACV
0x5000008C C   FIELD 16w01 FRACLE: FRACLE
0x50000090 B  REGISTER RCC_PLL1CSGR (rw): This register is used to configure the PLL1.It is not recommended to change the content of this register when the PLL1 is enabled (PLLON = ). Refer to Section: Using the PLLs in spread spectrum mode for details. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000090 C   FIELD 00w13 MOD_PER: MOD_PER
0x50000090 C   FIELD 13w01 TPDFN_DIS: TPDFN_DIS
0x50000090 C   FIELD 14w01 RPDFN_DIS: RPDFN_DIS
0x50000090 C   FIELD 15w01 SSCG_MODE: SSCG_MODE
0x50000090 C   FIELD 16w15 INC_STEP: INC_STEP
0x50000094 B  REGISTER RCC_PLL2CR: This register is used to control the PLL2. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000094 C   FIELD 00w01 PLLON (rw): PLLON
0x50000094 C   FIELD 01w01 PLL2RDY (ro): PLL2RDY
0x50000094 C   FIELD 02w01 SSCG_CTRL (rw): SSCG_CTRL
0x50000094 C   FIELD 04w01 DIVPEN (rw): DIVPEN
0x50000094 C   FIELD 05w01 DIVQEN (rw): DIVQEN
0x50000094 C   FIELD 06w01 DIVREN (rw): DIVREN
0x50000098 B  REGISTER RCC_PLL2CFGR1 (rw): This register is used to configure the PLL2. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x50000098 C   FIELD 00w09 DIVN: DIVN
0x50000098 C   FIELD 16w06 DIVM2: DIVM2
0x5000009C B  REGISTER RCC_PLL2CFGR2 (rw): This register is used to configure the PLL2. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x5000009C C   FIELD 00w07 DIVP: DIVP
0x5000009C C   FIELD 08w07 DIVQ: DIVQ
0x5000009C C   FIELD 16w07 DIVR: DIVR
0x500000A0 B  REGISTER RCC_PLL2FRACR (rw): This register is used to fine-tune the frequency of the PLL2 VCO. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x500000A0 C   FIELD 03w13 FRACV: FRACV
0x500000A0 C   FIELD 16w01 FRACLE: FRACLE
0x500000A4 B  REGISTER RCC_PLL2CSGR (rw): This register is used to configure the PLL2. It is not recommended to change the content of this register when the PLL2 is enabled (PLLON = ). Refer to Section: Using the PLLs in spread spectrum mode for details. If TZEN = , this register can only be modified in secure mode. Write access to this register is not allowed during the clock restore sequence. See Section: The clock restore sequence description for details.
0x500000A4 C   FIELD 00w13 MOD_PER: MOD_PER
0x500000A4 C   FIELD 13w01 TPDFN_DIS: TPDFN_DIS
0x500000A4 C   FIELD 14w01 RPDFN_DIS: RPDFN_DIS
0x500000A4 C   FIELD 15w01 SSCG_MODE: SSCG_MODE
0x500000A4 C   FIELD 16w15 INC_STEP: INC_STEP
0x500000C0 B  REGISTER RCC_I2C46CKSELR (rw): This register is used to control the selection of the kernel clock for the I2C4 and I2C6. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays. If TZEN = , this register can only be modified in secure mode.
0x500000C0 C   FIELD 00w03 I2C46SRC: I2C46SRC
0x500000C4 B  REGISTER RCC_SPI6CKSELR (rw): This register is used to control the selection of the kernel clock for the SPI6. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays. If TZEN = , this register can only be modified in secure mode.
0x500000C4 C   FIELD 00w03 SPI6SRC: SPI6SRC
0x500000C8 B  REGISTER RCC_UART1CKSELR (rw): This register is used to control the selection of the kernel clock for the USART1. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays. If TZEN = , this register can only be modified in secure mode.
0x500000C8 C   FIELD 00w03 UART1SRC: UART1SRC
0x500000CC B  REGISTER RCC_RNG1CKSELR (rw): This register is used to control the selection of the kernel clock for the RNG1. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays. If TZEN = , this register can only be modified in secure mode.
0x500000CC C   FIELD 00w02 RNG1SRC: RNG1SRC
0x500000D0 B  REGISTER RCC_CPERCKSELR (rw): This register is used to select an oscillator source as kernel clock for the per_ck clock. The per_ck clock is distributed to several peripherals. Refer to Section: Clock enabling delays.
0x500000D0 C   FIELD 00w02 CKPERSRC: CKPERSRC
0x500000D4 B  REGISTER RCC_STGENCKSELR (rw): This register is used to select the peripheral clock for the STGEN block. Note that this clock is used to provide a time reference for the application. Refer to Section: Clock enabling delays. If TZEN = , this register can only be modified in secure mode.
0x500000D4 C   FIELD 00w02 STGENSRC: STGENSRC
0x500000D8 B  REGISTER RCC_DDRITFCR (rw): This register is used to control the DDR interface, including the DDRC and DDRPHYC. If TZEN = , this register can only be modified in secure mode.
0x500000D8 C   FIELD 00w01 DDRC1EN: DDRC1EN
0x500000D8 C   FIELD 01w01 DDRC1LPEN: DDRC1LPEN
0x500000D8 C   FIELD 02w01 DDRC2EN: DDRC2EN
0x500000D8 C   FIELD 03w01 DDRC2LPEN: DDRC2LPEN
0x500000D8 C   FIELD 04w01 DDRPHYCEN: DDRPHYCEN
0x500000D8 C   FIELD 05w01 DDRPHYCLPEN: DDRPHYCLPEN
0x500000D8 C   FIELD 06w01 DDRCAPBEN: DDRCAPBEN
0x500000D8 C   FIELD 07w01 DDRCAPBLPEN: DDRCAPBLPEN
0x500000D8 C   FIELD 08w01 AXIDCGEN: AXIDCGEN
0x500000D8 C   FIELD 09w01 DDRPHYCAPBEN: DDRPHYCAPBEN
0x500000D8 C   FIELD 10w01 DDRPHYCAPBLPEN: DDRPHYCAPBLPEN
0x500000D8 C   FIELD 11w03 KERDCG_DLY: KERDCG_DLY
0x500000D8 C   FIELD 14w01 DDRCAPBRST: DDRCAPBRST
0x500000D8 C   FIELD 15w01 DDRCAXIRST: DDRCAXIRST
0x500000D8 C   FIELD 16w01 DDRCORERST: DDRCORERST
0x500000D8 C   FIELD 17w01 DPHYAPBRST: DPHYAPBRST
0x500000D8 C   FIELD 18w01 DPHYRST: DPHYRST
0x500000D8 C   FIELD 19w01 DPHYCTLRST: DPHYCTLRST
0x500000D8 C   FIELD 20w03 DDRCKMOD: DDRCKMOD
0x500000D8 C   FIELD 23w01 GSKPMOD: GSKPMOD
0x500000D8 C   FIELD 24w01 GSKPCTRL: GSKPCTRL
0x500000D8 C   FIELD 25w03 DFILP_WIDTH: DFILP_WIDTH
0x500000D8 C   FIELD 28w04 GSKP_DUR: GSKP_DUR
0x50000100 B  REGISTER RCC_MP_BOOTCR (rw): This register is used to control the HOLD boot function when the system exits from Standby. Refer to Section: MCU HOLD_BOOT after processor reset. This register is reset when a system reset occurs, but not when the circuit exits from Standby (app_rst reset).If TZEN = , this register can only be modified in secure mode. This register can only be accessed by the MPU.
0x50000100 C   FIELD 00w01 MCU_BEN: MCU_BEN
0x50000100 C   FIELD 01w01 MPU_BEN: MPU_BEN
0x50000104 B  REGISTER RCC_MP_SREQSETR (rw): Writing has no effect, reading will return the values of the bits. Writing a sets the corresponding bit to . The MCU cannot access to this register. If TZEN = , this register can only be modified in secure mode.
0x50000104 C   FIELD 00w01 STPREQ_P0: STPREQ_P0
0x50000104 C   FIELD 01w01 STPREQ_P1: STPREQ_P1
0x50000108 B  REGISTER RCC_MP_SREQCLRR (rw): Writing has no effect, reading will return the effective values of the bits. Writing a sets the corresponding bit to . The MCU cannot access to this register. If TZEN = , this register can only be modified in secure mode.
0x50000108 C   FIELD 00w01 STPREQ_P0: STPREQ_P0
0x50000108 C   FIELD 01w01 STPREQ_P1: STPREQ_P1
0x5000010C B  REGISTER RCC_MP_GCR (rw): The register contains global control bits. If TZEN = , this register can only be modified in secure mode.
0x5000010C C   FIELD 00w01 BOOT_MCU: BOOT_MCU
0x50000110 B  REGISTER RCC_MP_APRSTCR (rw): This register is used to control the behavior of the warm reset. If TZEN = , this register can only be modified in secure mode.
0x50000110 C   FIELD 00w01 RDCTLEN: RDCTLEN
0x50000110 C   FIELD 08w07 RSTTO: RSTTO
0x50000114 B  REGISTER RCC_MP_APRSTSR (ro): This register provides a status of the RDCTL. If TZEN = , this register can only be modified in secure mode.
0x50000114 C   FIELD 08w07 RSTTOV: RSTTOV
0x50000140 B  REGISTER RCC_BDCR: This register is used to control the LSE function. Wait states are inserted in case of successive write accesses to this register. The number of wait states may be up to 7 cycles of AHB4 clock.After a system reset, the register RCC_BDCR is write-protected. In order to modify this register, the DBP bit in the PWR control register 1 (PWR_CR1) has to be set to . Bits of RCC_BDCR register are only reset after a backup domain reset: nreset_vsw (see Section10.3.6: Backup domain reset). Any other internal or external reset will not have any effect on these bits.This register is located into the VSW domain. If TZEN = , this register can only be modified in secure mode.
0x50000140 C   FIELD 00w01 LSEON (rw): LSEON
0x50000140 C   FIELD 01w01 LSEBYP (rw): LSEBYP
0x50000140 C   FIELD 02w01 LSERDY (ro): LSERDY
0x50000140 C   FIELD 03w01 DIGBYP (ro): DIGBYP
0x50000140 C   FIELD 04w02 LSEDRV (rw): LSEDRV
0x50000140 C   FIELD 08w01 LSECSSON (rw): LSECSSON
0x50000140 C   FIELD 09w01 LSECSSD (ro): LSECSSD
0x50000140 C   FIELD 16w02 RTCSRC (ro): RTCSRC
0x50000140 C   FIELD 20w01 RTCCKEN (rw): RTCCKEN
0x50000140 C   FIELD 31w01 VSWRST (rw): VSWRST
0x50000144 B  REGISTER RCC_RDLSICR: This register is used to control the minimum NRST active duration and LSI function.0 to 7 wait states are inserted for word, half-word and byte accesses. Wait states are inserted in case of successive accesses to this register.This register is reset by the por_rst reset, and it is located into the VDD domain. If TZEN = , this register can only be modified in secure mode.
0x50000144 C   FIELD 00w01 LSION (rw): LSION
0x50000144 C   FIELD 01w01 LSIRDY (ro): LSIRDY
0x50000144 C   FIELD 16w05 MRD (rw): MRD
0x50000144 C   FIELD 24w03 EADLY (rw): EADLY
0x50000144 C   FIELD 27w05 SPARE (rw): SPARE
0x50000180 B  REGISTER RCC_APB4RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a activates the reset of the corresponding peripheral.
0x50000180 C   FIELD 00w01 LTDCRST: LTDCRST
0x50000180 C   FIELD 04w01 DSIRST: DSIRST
0x50000180 C   FIELD 08w01 DDRPERFMRST: DDRPERFMRST
0x50000180 C   FIELD 16w01 USBPHYRST: USBPHYRST
0x50000184 B  REGISTER RCC_APB4RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a releases the reset of the corresponding peripheral.
0x50000184 C   FIELD 00w01 LTDCRST: LTDCRST
0x50000184 C   FIELD 04w01 DSIRST: DSIRST
0x50000184 C   FIELD 08w01 DDRPERFMRST: DDRPERFMRST
0x50000184 C   FIELD 16w01 USBPHYRST: USBPHYRST
0x50000188 B  REGISTER RCC_APB5RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a activates the reset of the corresponding peripheral. If TZEN = , this register can only be modified in secure mode.
0x50000188 C   FIELD 00w01 SPI6RST: SPI6RST
0x50000188 C   FIELD 02w01 I2C4RST: I2C4RST
0x50000188 C   FIELD 03w01 I2C6RST: I2C6RST
0x50000188 C   FIELD 04w01 USART1RST: USART1RST
0x50000188 C   FIELD 20w01 STGENRST: STGENRST
0x5000018C B  REGISTER RCC_APB5RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a releases the reset of the corresponding peripheral. If TZEN = , this register can only be modified in secure mode.
0x5000018C C   FIELD 00w01 SPI6RST: SPI6RST
0x5000018C C   FIELD 02w01 I2C4RST: I2C4RST
0x5000018C C   FIELD 03w01 I2C6RST: I2C6RST
0x5000018C C   FIELD 04w01 USART1RST: USART1RST
0x5000018C C   FIELD 20w01 STGENRST: STGENRST
0x50000190 B  REGISTER RCC_AHB5RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a activates the reset of the corresponding peripheral. If TZEN = , this register can only be modified in secure mode.
0x50000190 C   FIELD 00w01 GPIOZRST: GPIOZRST
0x50000190 C   FIELD 04w01 CRYP1RST: CRYP1RST
0x50000190 C   FIELD 05w01 HASH1RST: HASH1RST
0x50000190 C   FIELD 06w01 RNG1RST: RNG1RST
0x50000190 C   FIELD 16w01 AXIMCRST: AXIMCRST
0x50000194 B  REGISTER RCC_AHB5RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a releases the reset of the corresponding peripheral. If TZEN = , this register can only be modified in secure mode.
0x50000194 C   FIELD 00w01 GPIOZRST: GPIOZRST
0x50000194 C   FIELD 04w01 CRYP1RST: CRYP1RST
0x50000194 C   FIELD 05w01 HASH1RST: HASH1RST
0x50000194 C   FIELD 06w01 RNG1RST: RNG1RST
0x50000194 C   FIELD 16w01 AXIMCRST: AXIMCRST
0x50000198 B  REGISTER RCC_AHB6RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a activates the reset of the corresponding peripheral.
0x50000198 C   FIELD 05w01 GPURST: GPURST
0x50000198 C   FIELD 10w01 ETHMACRST: ETHMACRST
0x50000198 C   FIELD 12w01 FMCRST: FMCRST
0x50000198 C   FIELD 14w01 QSPIRST: QSPIRST
0x50000198 C   FIELD 16w01 SDMMC1RST: SDMMC1RST
0x50000198 C   FIELD 17w01 SDMMC2RST: SDMMC2RST
0x50000198 C   FIELD 20w01 CRC1RST: CRC1RST
0x50000198 C   FIELD 24w01 USBHRST: USBHRST
0x5000019C B  REGISTER RCC_AHB6RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a releases the reset of the corresponding peripheral.
0x5000019C C   FIELD 10w01 ETHMACRST: ETHMACRST
0x5000019C C   FIELD 12w01 FMCRST: FMCRST
0x5000019C C   FIELD 14w01 QSPIRST: QSPIRST
0x5000019C C   FIELD 16w01 SDMMC1RST: SDMMC1RST
0x5000019C C   FIELD 17w01 SDMMC2RST: SDMMC2RST
0x5000019C C   FIELD 20w01 CRC1RST: CRC1RST
0x5000019C C   FIELD 24w01 USBHRST: USBHRST
0x500001A0 B  REGISTER RCC_TZAHB6RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a activates the reset of the corresponding peripheral. If TZEN = , this register can only be modified in secure mode.
0x500001A0 C   FIELD 00w01 MDMARST: MDMARST
0x500001A4 B  REGISTER RCC_TZAHB6RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a releases the reset of the corresponding peripheral. If TZEN = , this register can only be modified in secure mode.
0x500001A4 C   FIELD 00w01 MDMARST: MDMARST
0x50000200 B  REGISTER RCC_MP_APB4ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral to . It shall be used to allocate a peripheral to the MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to .
0x50000200 C   FIELD 00w01 LTDCEN: LTDCEN
0x50000200 C   FIELD 04w01 DSIEN: DSIEN
0x50000200 C   FIELD 08w01 DDRPERFMEN: DDRPERFMEN
0x50000200 C   FIELD 15w01 IWDG2APBEN: IWDG2APBEN
0x50000200 C   FIELD 16w01 USBPHYEN: USBPHYEN
0x50000200 C   FIELD 20w01 STGENROEN: STGENROEN
0x50000204 B  REGISTER RCC_MP_APB4ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral. It shall be used to deallocate a peripheral from MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to .
0x50000204 C   FIELD 00w01 LTDCEN: LTDCEN
0x50000204 C   FIELD 04w01 DSIEN: DSIEN
0x50000204 C   FIELD 08w01 DDRPERFMEN: DDRPERFMEN
0x50000204 C   FIELD 15w01 IWDG2APBEN: IWDG2APBEN
0x50000204 C   FIELD 16w01 USBPHYEN: USBPHYEN
0x50000204 C   FIELD 20w01 STGENROEN: STGENROEN
0x50000208 B  REGISTER RCC_MP_APB5ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral to . It shall be used to allocate a peripheral to the MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to .
0x50000208 C   FIELD 00w01 SPI6EN: SPI6EN
0x50000208 C   FIELD 02w01 I2C4EN: I2C4EN
0x50000208 C   FIELD 03w01 I2C6EN: I2C6EN
0x50000208 C   FIELD 04w01 USART1EN: USART1EN
0x50000208 C   FIELD 08w01 RTCAPBEN: RTCAPBEN
0x50000208 C   FIELD 11w01 TZC1EN: TZC1EN
0x50000208 C   FIELD 12w01 TZC2EN: TZC2EN
0x50000208 C   FIELD 13w01 TZPCEN: TZPCEN
0x50000208 C   FIELD 15w01 IWDG1APBEN: IWDG1APBEN
0x50000208 C   FIELD 16w01 BSECEN: BSECEN
0x50000208 C   FIELD 20w01 STGENEN: STGENEN
0x5000020C B  REGISTER RCC_MP_APB5ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral. It shall be used to deallocate a peripheral from MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to .
0x5000020C C   FIELD 00w01 SPI6EN: SPI6EN
0x5000020C C   FIELD 02w01 I2C4EN: I2C4EN
0x5000020C C   FIELD 03w01 I2C6EN: I2C6EN
0x5000020C C   FIELD 04w01 USART1EN: USART1EN
0x5000020C C   FIELD 08w01 RTCAPBEN: RTCAPBEN
0x5000020C C   FIELD 11w01 TZC1EN: TZC1EN
0x5000020C C   FIELD 12w01 TZC2EN: TZC2EN
0x5000020C C   FIELD 13w01 TZPCEN: TZPCEN
0x5000020C C   FIELD 15w01 IWDG1APBEN: IWDG1APBEN
0x5000020C C   FIELD 16w01 BSECEN: BSECEN
0x5000020C C   FIELD 20w01 STGENEN: STGENEN
0x50000210 B  REGISTER RCC_MP_AHB5ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral to . It shall be used to allocate a peripheral to the MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to . If TZEN = , this register can only be modified in secure mode.
0x50000210 C   FIELD 00w01 GPIOZEN: GPIOZEN
0x50000210 C   FIELD 04w01 CRYP1EN: CRYP1EN
0x50000210 C   FIELD 05w01 HASH1EN: HASH1EN
0x50000210 C   FIELD 06w01 RNG1EN: RNG1EN
0x50000210 C   FIELD 08w01 BKPSRAMEN: BKPSRAMEN
0x50000210 C   FIELD 16w01 AXIMCEN: AXIMCEN
0x50000214 B  REGISTER RCC_MP_AHB5ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral. It shall be used to deallocate a peripheral from MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to . If TZEN = , this register can only be modified in secure mode.
0x50000214 C   FIELD 00w01 GPIOZEN: GPIOZEN
0x50000214 C   FIELD 04w01 CRYP1EN: CRYP1EN
0x50000214 C   FIELD 05w01 HASH1EN: HASH1EN
0x50000214 C   FIELD 06w01 RNG1EN: RNG1EN
0x50000214 C   FIELD 08w01 BKPSRAMEN: BKPSRAMEN
0x50000214 C   FIELD 16w01 AXIMCEN: AXIMCEN
0x50000218 B  REGISTER RCC_MP_AHB6ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral to . It shall be used to allocate a peripheral to the MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to .
0x50000218 C   FIELD 00w01 MDMAEN: MDMAEN
0x50000218 C   FIELD 05w01 GPUEN: GPUEN
0x50000218 C   FIELD 07w01 ETHCKEN: ETHCKEN
0x50000218 C   FIELD 08w01 ETHTXEN: ETHTXEN
0x50000218 C   FIELD 09w01 ETHRXEN: ETHRXEN
0x50000218 C   FIELD 10w01 ETHMACEN: ETHMACEN
0x50000218 C   FIELD 12w01 FMCEN: FMCEN
0x50000218 C   FIELD 14w01 QSPIEN: QSPIEN
0x50000218 C   FIELD 16w01 SDMMC1EN: SDMMC1EN
0x50000218 C   FIELD 17w01 SDMMC2EN: SDMMC2EN
0x50000218 C   FIELD 20w01 CRC1EN: CRC1EN
0x50000218 C   FIELD 24w01 USBHEN: USBHEN
0x5000021C B  REGISTER RCC_MP_AHB6ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral. It shall be used to deallocate a peripheral from MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to .
0x5000021C C   FIELD 00w01 MDMAEN: MDMAEN
0x5000021C C   FIELD 05w01 GPUEN: GPUEN
0x5000021C C   FIELD 07w01 ETHCKEN: ETHCKEN
0x5000021C C   FIELD 08w01 ETHTXEN: ETHTXEN
0x5000021C C   FIELD 09w01 ETHRXEN: ETHRXEN
0x5000021C C   FIELD 10w01 ETHMACEN: ETHMACEN
0x5000021C C   FIELD 12w01 FMCEN: FMCEN
0x5000021C C   FIELD 14w01 QSPIEN: QSPIEN
0x5000021C C   FIELD 16w01 SDMMC1EN: SDMMC1EN
0x5000021C C   FIELD 17w01 SDMMC2EN: SDMMC2EN
0x5000021C C   FIELD 20w01 CRC1EN: CRC1EN
0x5000021C C   FIELD 24w01 USBHEN: USBHEN
0x50000220 B  REGISTER RCC_MP_TZAHB6ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral to . It shall be used to allocate a peripheral to the MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to . If TZEN = , this register can only be modified in secure mode.
0x50000220 C   FIELD 00w01 MDMAEN: MDMAEN
0x50000224 B  REGISTER RCC_MP_TZAHB6ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral. It shall be used to deallocate a peripheral from MPU. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to . If TZEN = , this register can only be modified in secure mode.
0x50000224 C   FIELD 00w01 MDMAEN: MDMAEN
0x50000280 B  REGISTER RCC_MC_APB4ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000280 C   FIELD 00w01 LTDCEN: LTDCEN
0x50000280 C   FIELD 04w01 DSIEN: DSIEN
0x50000280 C   FIELD 08w01 DDRPERFMEN: DDRPERFMEN
0x50000280 C   FIELD 16w01 USBPHYEN: USBPHYEN
0x50000280 C   FIELD 20w01 STGENROEN: STGENROEN
0x50000284 B  REGISTER RCC_MC_APB4ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000284 C   FIELD 00w01 LTDCEN: LTDCEN
0x50000284 C   FIELD 04w01 DSIEN: DSIEN
0x50000284 C   FIELD 08w01 DDRPERFMEN: DDRPERFMEN
0x50000284 C   FIELD 16w01 USBPHYEN: USBPHYEN
0x50000284 C   FIELD 20w01 STGENROEN: STGENROEN
0x50000288 B  REGISTER RCC_MC_APB5ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000288 C   FIELD 00w01 SPI6EN: SPI6EN
0x50000288 C   FIELD 02w01 I2C4EN: I2C4EN
0x50000288 C   FIELD 03w01 I2C6EN: I2C6EN
0x50000288 C   FIELD 04w01 USART1EN: USART1EN
0x50000288 C   FIELD 08w01 RTCAPBEN: RTCAPBEN
0x50000288 C   FIELD 11w01 TZC1EN: TZC1EN
0x50000288 C   FIELD 12w01 TZC2EN: TZC2EN
0x50000288 C   FIELD 13w01 TZPCEN: TZPCEN
0x50000288 C   FIELD 16w01 BSECEN: BSECEN
0x50000288 C   FIELD 20w01 STGENEN: STGENEN
0x5000028C B  REGISTER RCC_MC_APB5ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x5000028C C   FIELD 00w01 SPI6EN: SPI6EN
0x5000028C C   FIELD 02w01 I2C4EN: I2C4EN
0x5000028C C   FIELD 03w01 I2C6EN: I2C6EN
0x5000028C C   FIELD 04w01 USART1EN: USART1EN
0x5000028C C   FIELD 08w01 RTCAPBEN: RTCAPBEN
0x5000028C C   FIELD 11w01 TZC1EN: TZC1EN
0x5000028C C   FIELD 12w01 TZC2EN: TZC2EN
0x5000028C C   FIELD 13w01 TZPCEN: TZPCEN
0x5000028C C   FIELD 16w01 BSECEN: BSECEN
0x5000028C C   FIELD 20w01 STGENEN: STGENEN
0x50000290 B  REGISTER RCC_MC_AHB5ENSETR (rw): This register is used to set the peripheral clock enable bit If TZEN = , this register can only be modified in secure mode.
0x50000290 C   FIELD 00w01 GPIOZEN: GPIOZEN
0x50000290 C   FIELD 04w01 CRYP1EN: CRYP1EN
0x50000290 C   FIELD 05w01 HASH1EN: HASH1EN
0x50000290 C   FIELD 06w01 RNG1EN: RNG1EN
0x50000290 C   FIELD 08w01 BKPSRAMEN: BKPSRAMEN
0x50000294 B  REGISTER RCC_MC_AHB5ENCLRR (rw): This register is used to clear the peripheral clock enable bit If TZEN = , this register can only be modified in secure mode.
0x50000294 C   FIELD 00w01 GPIOZEN: GPIOZEN
0x50000294 C   FIELD 04w01 CRYP1EN: CRYP1EN
0x50000294 C   FIELD 05w01 HASH1EN: HASH1EN
0x50000294 C   FIELD 06w01 RNG1EN: RNG1EN
0x50000294 C   FIELD 08w01 BKPSRAMEN: BKPSRAMEN
0x50000298 B  REGISTER RCC_MC_AHB6ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000298 C   FIELD 00w01 MDMAEN: MDMAEN
0x50000298 C   FIELD 05w01 GPUEN: GPUEN
0x50000298 C   FIELD 07w01 ETHCKEN: ETHCKEN
0x50000298 C   FIELD 08w01 ETHTXEN: ETHTXEN
0x50000298 C   FIELD 09w01 ETHRXEN: ETHRXEN
0x50000298 C   FIELD 10w01 ETHMACEN: ETHMACEN
0x50000298 C   FIELD 12w01 FMCEN: FMCEN
0x50000298 C   FIELD 14w01 QSPIEN: QSPIEN
0x50000298 C   FIELD 16w01 SDMMC1EN: SDMMC1EN
0x50000298 C   FIELD 17w01 SDMMC2EN: SDMMC2EN
0x50000298 C   FIELD 20w01 CRC1EN: CRC1EN
0x50000298 C   FIELD 24w01 USBHEN: USBHEN
0x5000029C B  REGISTER RCC_MC_AHB6ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x5000029C C   FIELD 00w01 MDMAEN: MDMAEN
0x5000029C C   FIELD 05w01 GPUEN: GPUEN
0x5000029C C   FIELD 07w01 ETHCKEN: ETHCKEN
0x5000029C C   FIELD 08w01 ETHTXEN: ETHTXEN
0x5000029C C   FIELD 09w01 ETHRXEN: ETHRXEN
0x5000029C C   FIELD 10w01 ETHMACEN: ETHMACEN
0x5000029C C   FIELD 12w01 FMCEN: FMCEN
0x5000029C C   FIELD 14w01 QSPIEN: QSPIEN
0x5000029C C   FIELD 16w01 SDMMC1EN: SDMMC1EN
0x5000029C C   FIELD 17w01 SDMMC2EN: SDMMC2EN
0x5000029C C   FIELD 20w01 CRC1EN: CRC1EN
0x5000029C C   FIELD 24w01 USBHEN: USBHEN
0x50000300 B  REGISTER RCC_MP_APB4LPENSETR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000300 C   FIELD 00w01 LTDCLPEN: LTDCLPEN
0x50000300 C   FIELD 04w01 DSILPEN: DSILPEN
0x50000300 C   FIELD 08w01 DDRPERFMLPEN: DDRPERFMLPEN
0x50000300 C   FIELD 15w01 IWDG2APBLPEN: IWDG2APBLPEN
0x50000300 C   FIELD 16w01 USBPHYLPEN: USBPHYLPEN
0x50000300 C   FIELD 20w01 STGENROLPEN: STGENROLPEN
0x50000300 C   FIELD 21w01 STGENROSTPEN: STGENROSTPEN
0x50000304 B  REGISTER RCC_MP_APB4LPENCLRR (rw): This register is used by the MCU
0x50000304 C   FIELD 00w01 LTDCLPEN: LTDCLPEN
0x50000304 C   FIELD 04w01 DSILPEN: DSILPEN
0x50000304 C   FIELD 08w01 DDRPERFMLPEN: DDRPERFMLPEN
0x50000304 C   FIELD 15w01 IWDG2APBLPEN: IWDG2APBLPEN
0x50000304 C   FIELD 16w01 USBPHYLPEN: USBPHYLPEN
0x50000304 C   FIELD 20w01 STGENROLPEN: STGENROLPEN
0x50000304 C   FIELD 21w01 STGENROSTPEN: STGENROSTPEN
0x50000308 B  REGISTER RCC_MP_APB5LPENSETR (rw): This register is used by the MCU in order to clear the PERxLPEN bits If TZEN = , this register can only be modified in secure mode.
0x50000308 C   FIELD 00w01 SPI6LPEN: SPI6LPEN
0x50000308 C   FIELD 02w01 I2C4LPEN: I2C4LPEN
0x50000308 C   FIELD 03w01 I2C6LPEN: I2C6LPEN
0x50000308 C   FIELD 04w01 USART1LPEN: USART1LPEN
0x50000308 C   FIELD 08w01 RTCAPBLPEN: RTCAPBLPEN
0x50000308 C   FIELD 11w01 TZC1LPEN: TZC1LPEN
0x50000308 C   FIELD 12w01 TZC2LPEN: TZC2LPEN
0x50000308 C   FIELD 13w01 TZPCLPEN: TZPCLPEN
0x50000308 C   FIELD 15w01 IWDG1APBLPEN: IWDG1APBLPEN
0x50000308 C   FIELD 16w01 BSECLPEN: BSECLPEN
0x50000308 C   FIELD 20w01 STGENLPEN: STGENLPEN
0x50000308 C   FIELD 21w01 STGENSTPEN: STGENSTPEN
0x5000030C B  REGISTER RCC_MP_APB5LPENCLRR (rw): This register is used by the Mpu.
0x5000030C C   FIELD 00w01 SPI6LPEN: SPI6LPEN
0x5000030C C   FIELD 02w01 I2C4LPEN: I2C4LPEN
0x5000030C C   FIELD 03w01 I2C6LPEN: I2C6LPEN
0x5000030C C   FIELD 04w01 USART1LPEN: USART1LPEN
0x5000030C C   FIELD 08w01 RTCAPBLPEN: RTCAPBLPEN
0x5000030C C   FIELD 11w01 TZC1LPEN: TZC1LPEN
0x5000030C C   FIELD 12w01 TZC2LPEN: TZC2LPEN
0x5000030C C   FIELD 13w01 TZPCLPEN: TZPCLPEN
0x5000030C C   FIELD 15w01 IWDG1APBLPEN: IWDG1APBLPEN
0x5000030C C   FIELD 16w01 BSECLPEN: BSECLPEN
0x5000030C C   FIELD 20w01 STGENLPEN: STGENLPEN
0x5000030C C   FIELD 21w01 STGENSTPEN: STGENSTPEN
0x50000310 B  REGISTER RCC_MP_AHB5LPENSETR (rw): This register is used by the MCU in order to clear the PERxLPEN bits If TZEN = , this register can only be modified in secure mode.
0x50000310 C   FIELD 00w01 GPIOZLPEN: GPIOZLPEN
0x50000310 C   FIELD 04w01 CRYP1LPEN: CRYP1LPEN
0x50000310 C   FIELD 05w01 HASH1LPEN: HASH1LPEN
0x50000310 C   FIELD 06w01 RNG1LPEN: RNG1LPEN
0x50000310 C   FIELD 08w01 BKPSRAMLPEN: BKPSRAMLPEN
0x50000314 B  REGISTER RCC_MP_AHB5LPENCLRR (rw): This register is used by the MCU
0x50000314 C   FIELD 00w01 GPIOZLPEN: GPIOZLPEN
0x50000314 C   FIELD 04w01 CRYP1LPEN: CRYP1LPEN
0x50000314 C   FIELD 05w01 HASH1LPEN: HASH1LPEN
0x50000314 C   FIELD 06w01 RNG1LPEN: RNG1LPEN
0x50000314 C   FIELD 08w01 BKPSRAMLPEN: BKPSRAMLPEN
0x50000318 B  REGISTER RCC_MP_AHB6LPENSETR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000318 C   FIELD 00w01 MDMALPEN: MDMALPEN
0x50000318 C   FIELD 05w01 GPULPEN: GPULPEN
0x50000318 C   FIELD 07w01 ETHCKLPEN: ETHCKLPEN
0x50000318 C   FIELD 08w01 ETHTXLPEN: ETHTXLPEN
0x50000318 C   FIELD 09w01 ETHRXLPEN: ETHRXLPEN
0x50000318 C   FIELD 10w01 ETHMACLPEN: ETHMACLPEN
0x50000318 C   FIELD 11w01 ETHSTPEN: ETHSTPEN
0x50000318 C   FIELD 12w01 FMCLPEN: FMCLPEN
0x50000318 C   FIELD 14w01 QSPILPEN: QSPILPEN
0x50000318 C   FIELD 16w01 SDMMC1LPEN: SDMMC1LPEN
0x50000318 C   FIELD 17w01 SDMMC2LPEN: SDMMC2LPEN
0x50000318 C   FIELD 20w01 CRC1LPEN: CRC1LPEN
0x50000318 C   FIELD 24w01 USBHLPEN: USBHLPEN
0x5000031C B  REGISTER RCC_MP_AHB6LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x5000031C C   FIELD 00w01 MDMALPEN: MDMALPEN
0x5000031C C   FIELD 05w01 GPULPEN: GPULPEN
0x5000031C C   FIELD 07w01 ETHCKLPEN: ETHCKLPEN
0x5000031C C   FIELD 08w01 ETHTXLPEN: ETHTXLPEN
0x5000031C C   FIELD 09w01 ETHRXLPEN: ETHRXLPEN
0x5000031C C   FIELD 10w01 ETHMACLPEN: ETHMACLPEN
0x5000031C C   FIELD 11w01 ETHSTPEN: ETHSTPEN
0x5000031C C   FIELD 12w01 FMCLPEN: FMCLPEN
0x5000031C C   FIELD 14w01 QSPILPEN: QSPILPEN
0x5000031C C   FIELD 16w01 SDMMC1LPEN: SDMMC1LPEN
0x5000031C C   FIELD 17w01 SDMMC2LPEN: SDMMC2LPEN
0x5000031C C   FIELD 20w01 CRC1LPEN: CRC1LPEN
0x5000031C C   FIELD 24w01 USBHLPEN: USBHLPEN
0x50000320 B  REGISTER RCC_MP_TZAHB6LPENSETR (rw): This register is used by the MCU in order to clear the PERxLPEN bits If TZEN = , this register can only be modified in secure mode.
0x50000320 C   FIELD 00w01 MDMALPEN: MDMALPEN
0x50000324 B  REGISTER RCC_MP_TZAHB6LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bits If TZEN = , this register can only be modified in secure mode.
0x50000324 C   FIELD 00w01 MDMALPEN: MDMALPEN
0x50000380 B  REGISTER RCC_MC_APB4LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000380 C   FIELD 00w01 LTDCLPEN: LTDCLPEN
0x50000380 C   FIELD 04w01 DSILPEN: DSILPEN
0x50000380 C   FIELD 08w01 DDRPERFMLPEN: DDRPERFMLPEN
0x50000380 C   FIELD 16w01 USBPHYLPEN: USBPHYLPEN
0x50000380 C   FIELD 20w01 STGENROLPEN: STGENROLPEN
0x50000380 C   FIELD 21w01 STGENROSTPEN: STGENROSTPEN
0x50000384 B  REGISTER RCC_MC_APB4LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit
0x50000384 C   FIELD 00w01 LTDCLPEN: LTDCLPEN
0x50000384 C   FIELD 04w01 DSILPEN: DSILPEN
0x50000384 C   FIELD 08w01 DDRPERFMLPEN: DDRPERFMLPEN
0x50000384 C   FIELD 16w01 USBPHYLPEN: USBPHYLPEN
0x50000384 C   FIELD 20w01 STGENROLPEN: STGENROLPEN
0x50000384 C   FIELD 21w01 STGENROSTPEN: STGENROSTPEN
0x50000388 B  REGISTER RCC_MC_APB5LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000388 C   FIELD 00w01 SPI6LPEN: SPI6LPEN
0x50000388 C   FIELD 02w01 I2C4LPEN: I2C4LPEN
0x50000388 C   FIELD 03w01 I2C6LPEN: I2C6LPEN
0x50000388 C   FIELD 04w01 USART1LPEN: USART1LPEN
0x50000388 C   FIELD 08w01 RTCAPBLPEN: RTCAPBLPEN
0x50000388 C   FIELD 11w01 TZC1LPEN: TZC1LPEN
0x50000388 C   FIELD 12w01 TZC2LPEN: TZC2LPEN
0x50000388 C   FIELD 13w01 TZPCLPEN: TZPCLPEN
0x50000388 C   FIELD 16w01 BSECLPEN: BSECLPEN
0x50000388 C   FIELD 20w01 STGENLPEN: STGENLPEN
0x50000388 C   FIELD 21w01 STGENSTPEN: STGENSTPEN
0x5000038C B  REGISTER RCC_MC_APB5LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit
0x5000038C C   FIELD 00w01 SPI6LPEN: SPI6LPEN
0x5000038C C   FIELD 02w01 I2C4LPEN: I2C4LPEN
0x5000038C C   FIELD 03w01 I2C6LPEN: I2C6LPEN
0x5000038C C   FIELD 04w01 USART1LPEN: USART1LPEN
0x5000038C C   FIELD 08w01 RTCAPBLPEN: RTCAPBLPEN
0x5000038C C   FIELD 11w01 TZC1LPEN: TZC1LPEN
0x5000038C C   FIELD 12w01 TZC2LPEN: TZC2LPEN
0x5000038C C   FIELD 13w01 TZPCLPEN: TZPCLPEN
0x5000038C C   FIELD 16w01 BSECLPEN: BSECLPEN
0x5000038C C   FIELD 20w01 STGENLPEN: STGENLPEN
0x5000038C C   FIELD 21w01 STGENSTPEN: STGENSTPEN
0x50000390 B  REGISTER RCC_MC_AHB5LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit. If TZEN = , this register can only be modified in secure mode.
0x50000390 C   FIELD 00w01 GPIOZLPEN: GPIOZLPEN
0x50000390 C   FIELD 04w01 CRYP1LPEN: CRYP1LPEN
0x50000390 C   FIELD 05w01 HASH1LPEN: HASH1LPEN
0x50000390 C   FIELD 06w01 RNG1LPEN: RNG1LPEN
0x50000390 C   FIELD 08w01 BKPSRAMLPEN: BKPSRAMLPEN
0x50000394 B  REGISTER RCC_MC_AHB5LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit If TZEN = , this register can only be modified in secure mode.
0x50000394 C   FIELD 00w01 GPIOZLPEN: GPIOZLPEN
0x50000394 C   FIELD 04w01 CRYP1LPEN: CRYP1LPEN
0x50000394 C   FIELD 05w01 HASH1LPEN: HASH1LPEN
0x50000394 C   FIELD 06w01 RNG1LPEN: RNG1LPEN
0x50000394 C   FIELD 08w01 BKPSRAMLPEN: BKPSRAMLPEN
0x50000398 B  REGISTER RCC_MC_AHB6LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000398 C   FIELD 00w01 MDMALPEN: MDMALPEN
0x50000398 C   FIELD 05w01 GPULPEN: GPULPEN
0x50000398 C   FIELD 07w01 ETHCKLPEN: ETHCKLPEN
0x50000398 C   FIELD 08w01 ETHTXLPEN: ETHTXLPEN
0x50000398 C   FIELD 09w01 ETHRXLPEN: ETHRXLPEN
0x50000398 C   FIELD 10w01 ETHMACLPEN: ETHMACLPEN
0x50000398 C   FIELD 11w01 ETHSTPEN: ETHSTPEN
0x50000398 C   FIELD 12w01 FMCLPEN: FMCLPEN
0x50000398 C   FIELD 14w01 QSPILPEN: QSPILPEN
0x50000398 C   FIELD 16w01 SDMMC1LPEN: SDMMC1LPEN
0x50000398 C   FIELD 17w01 SDMMC2LPEN: SDMMC2LPEN
0x50000398 C   FIELD 20w01 CRC1LPEN: CRC1LPEN
0x50000398 C   FIELD 24w01 USBHLPEN: USBHLPEN
0x5000039C B  REGISTER RCC_MC_AHB6LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit
0x5000039C C   FIELD 00w01 MDMALPEN: MDMALPEN
0x5000039C C   FIELD 05w01 GPULPEN: GPULPEN
0x5000039C C   FIELD 07w01 ETHCKLPEN: ETHCKLPEN
0x5000039C C   FIELD 08w01 ETHTXLPEN: ETHTXLPEN
0x5000039C C   FIELD 09w01 ETHRXLPEN: ETHRXLPEN
0x5000039C C   FIELD 10w01 ETHMACLPEN: ETHMACLPEN
0x5000039C C   FIELD 11w01 ETHSTPEN: ETHSTPEN
0x5000039C C   FIELD 12w01 FMCLPEN: FMCLPEN
0x5000039C C   FIELD 14w01 QSPILPEN: QSPILPEN
0x5000039C C   FIELD 16w01 SDMMC1LPEN: SDMMC1LPEN
0x5000039C C   FIELD 17w01 SDMMC2LPEN: SDMMC2LPEN
0x5000039C C   FIELD 20w01 CRC1LPEN: CRC1LPEN
0x5000039C C   FIELD 24w01 USBHLPEN: USBHLPEN
0x50000400 B  REGISTER RCC_BR_RSTSCLRR (rw): This register is used by the BOOTROM to check the reset source. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a clears the corresponding bit to . In order to identify the reset source, the MPU application must use RCC MPU Reset Status Clear Register (RCC_MP_RSTSCLRR), and the MCU application must use the RCC MCU Reset Status Clear Register (RCC_MC_RSTSCLRR). Refer to Section10.3.13: Reset source identification for details.This register except MPUP[1:0]RSTF flags is located into VDD domain, and is reset by por_rst reset. The MPUP[1:0]RSTF flags are located into VDDCORE and are reset by nreset. If TZEN = , this register can only be modified in secure mode.
0x50000400 C   FIELD 00w01 PORRSTF: PORRSTF
0x50000400 C   FIELD 01w01 BORRSTF: BORRSTF
0x50000400 C   FIELD 02w01 PADRSTF: PADRSTF
0x50000400 C   FIELD 03w01 HCSSRSTF: HCSSRSTF
0x50000400 C   FIELD 04w01 VCORERSTF: VCORERSTF
0x50000400 C   FIELD 06w01 MPSYSRSTF: MPSYSRSTF
0x50000400 C   FIELD 07w01 MCSYSRSTF: MCSYSRSTF
0x50000400 C   FIELD 08w01 IWDG1RSTF: IWDG1RSTF
0x50000400 C   FIELD 09w01 IWDG2RSTF: IWDG2RSTF
0x50000400 C   FIELD 13w01 MPUP0RSTF: MPUP0RSTF
0x50000400 C   FIELD 14w01 MPUP1RSTF: MPUP1RSTF
0x50000404 B  REGISTER RCC_MP_GRSTCSETR (rw): This register is used by the MPU in order to generate either a MCU reset or a system reset or a reset of one of the two MPU processors. Writing has no effect, reading returns the effective values of the corresponding bits. Writing a activates the reset.
0x50000404 C   FIELD 00w01 MPSYSRST: MPSYSRST
0x50000404 C   FIELD 01w01 MCURST: MCURST
0x50000404 C   FIELD 04w01 MPUP0RST: MPUP0RST
0x50000404 C   FIELD 05w01 MPUP1RST: MPUP1RST
0x50000408 B  REGISTER RCC_MP_RSTSCLRR (rw): This register is used by the MPU to check the reset source. This register is updated by the BOOTROM code, after a power-on reset (por_rst), a system reset (nreset), or an exit from Standby or CStandby.Writing has no effect, reading will return the effective values of the corresponding bits. Writing a clears the corresponding bit to .Refer to Section10.3.13: Reset source identification for details.The register is located in VDDCORE.If TZEN = , this register can only be modified in secure mode.
0x50000408 C   FIELD 00w01 PORRSTF: PORRSTF
0x50000408 C   FIELD 01w01 BORRSTF: BORRSTF
0x50000408 C   FIELD 02w01 PADRSTF: PADRSTF
0x50000408 C   FIELD 03w01 HCSSRSTF: HCSSRSTF
0x50000408 C   FIELD 04w01 VCORERSTF: VCORERSTF
0x50000408 C   FIELD 06w01 MPSYSRSTF: MPSYSRSTF
0x50000408 C   FIELD 07w01 MCSYSRSTF: MCSYSRSTF
0x50000408 C   FIELD 08w01 IWDG1RSTF: IWDG1RSTF
0x50000408 C   FIELD 09w01 IWDG2RSTF: IWDG2RSTF
0x50000408 C   FIELD 11w01 STDBYRSTF: STDBYRSTF
0x50000408 C   FIELD 12w01 CSTDBYRSTF: CSTDBYRSTF
0x50000408 C   FIELD 13w01 MPUP0RSTF: MPUP0RSTF
0x50000408 C   FIELD 14w01 MPUP1RSTF: MPUP1RSTF
0x50000408 C   FIELD 15w01 SPARE: SPARE
0x5000040C B  REGISTER RCC_MP_IWDGFZSETR (rw): This register is used by the BOOTROM in order to freeze the IWDGs clocks. After a system reset or Standby reset (nreset), or a CStandby reset (cstby_rst) the MPU is allowed to write it once.Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to . If TZEN = , this register can only be modified in secure mode.
0x5000040C C   FIELD 00w01 FZ_IWDG1: FZ_IWDG1
0x5000040C C   FIELD 01w01 FZ_IWDG2: FZ_IWDG2
0x50000410 B  REGISTER RCC_MP_IWDGFZCLRR (rw): This register is used by the BOOTROM in order to unfreeze the IWDGs clocks. Writing has no effect, reading will return the effective values of the corresponding bits. Writing a clears the corresponding bit to . If TZEN = , this register can only be modified in secure mode.
0x50000410 C   FIELD 00w01 FZ_IWDG1: FZ_IWDG1
0x50000410 C   FIELD 01w01 FZ_IWDG2: FZ_IWDG2
0x50000414 B  REGISTER RCC_MP_CIER (rw): This register shall be used by the MPU to control the interrupt source enable. Refer to Section10.5: RCC interrupts for more details. If TZEN = , this register can only be modified in secure mode.
0x50000414 C   FIELD 00w01 LSIRDYIE: LSIRDYIE
0x50000414 C   FIELD 01w01 LSERDYIE: LSERDYIE
0x50000414 C   FIELD 02w01 HSIRDYIE: HSIRDYIE
0x50000414 C   FIELD 03w01 HSERDYIE: HSERDYIE
0x50000414 C   FIELD 04w01 CSIRDYIE: CSIRDYIE
0x50000414 C   FIELD 08w01 PLL1DYIE: PLL1DYIE
0x50000414 C   FIELD 09w01 PLL2DYIE: PLL2DYIE
0x50000414 C   FIELD 10w01 PLL3DYIE: PLL3DYIE
0x50000414 C   FIELD 11w01 PLL4DYIE: PLL4DYIE
0x50000414 C   FIELD 16w01 LSECSSIE: LSECSSIE
0x50000414 C   FIELD 20w01 WKUPIE: WKUPIE
0x50000418 B  REGISTER RCC_MP_CIFR (rw): This register shall be used by the MPU in order to read and clear the interrupt flags.Writing has no effect, writing will clear the corresponding flag.Refer to Section10.5: RCC interrupts for more details. If TZEN = , this register can only be modified in secure mode.
0x50000418 C   FIELD 00w01 LSIRDYF: LSIRDYF
0x50000418 C   FIELD 01w01 LSERDYF: LSERDYF
0x50000418 C   FIELD 02w01 HSIRDYF: HSIRDYF
0x50000418 C   FIELD 03w01 HSERDYF: HSERDYF
0x50000418 C   FIELD 04w01 CSIRDYF: CSIRDYF
0x50000418 C   FIELD 08w01 PLL1DYF: PLL1DYF
0x50000418 C   FIELD 09w01 PLL2DYF: PLL2DYF
0x50000418 C   FIELD 10w01 PLL3DYF: PLL3DYF
0x50000418 C   FIELD 11w01 PLL4DYF: PLL4DYF
0x50000418 C   FIELD 16w01 LSECSSF: LSECSSF
0x50000418 C   FIELD 20w01 WKUPF: WKUPF
0x5000041C B  REGISTER RCC_PWRLPDLYCR (rw): This register is used to program the delay between the moment where the system exits from one of the Stop modes, and the moment where it is allowed to enable the PLLs and provide a clock to bridges and processors. If TZEN = , this register can only be modified in secure mode.
0x5000041C C   FIELD 00w22 PWRLP_DLY: PWRLP_DLY
0x5000041C C   FIELD 24w01 MCTMPSKP: MCTMPSKP
0x50000420 B  REGISTER RCC_MP_RSTSSETR (rw): This register is dedicated to the BOOTROM code in order to update the reset source. This register is updated by the BOOTROM code, after a power-on reset (por_rst), a system reset (nreset), or an exit from Standby or CStandby. The application software shall not use this register. In order to identify the reset source, the MPU application must use RCC MPU Reset Status Clear Register (RCC_MP_RSTSCLRR), and the MCU application must use the RCC MCU Reset Status Clear Register (RCC_MC_RSTSCLRR).Writing has no effect, reading will return the effective values of the corresponding bits. Writing a sets the corresponding bit to .Refer to Section10.3.13: Reset source identification for details.The register is located in VDDCORE.If TZEN = , this register can only be modified in secure mode.
0x50000420 C   FIELD 00w01 PORRSTF: PORRSTF
0x50000420 C   FIELD 01w01 BORRSTF: BORRSTF
0x50000420 C   FIELD 02w01 PADRSTF: PADRSTF
0x50000420 C   FIELD 03w01 HCSSRSTF: HCSSRSTF
0x50000420 C   FIELD 04w01 VCORERSTF: VCORERSTF
0x50000420 C   FIELD 06w01 MPSYSRSTF: MPSYSRSTF
0x50000420 C   FIELD 07w01 MCSYSRSTF: MCSYSRSTF
0x50000420 C   FIELD 08w01 IWDG1RSTF: IWDG1RSTF
0x50000420 C   FIELD 09w01 IWDG2RSTF: IWDG2RSTF
0x50000420 C   FIELD 11w01 STDBYRSTF: STDBYRSTF
0x50000420 C   FIELD 12w01 CSTDBYRSTF: CSTDBYRSTF
0x50000420 C   FIELD 13w01 MPUP0RSTF: MPUP0RSTF
0x50000420 C   FIELD 14w01 MPUP1RSTF: MPUP1RSTF
0x50000420 C   FIELD 15w01 SPARE: SPARE
0x50000800 B  REGISTER RCC_MCO1CFGR (rw): This register is used to select the clock generated on MCO1 output.
0x50000800 C   FIELD 00w03 MCO1SEL: MCO1SEL
0x50000800 C   FIELD 04w04 MCO1DIV: MCO1DIV
0x50000800 C   FIELD 12w01 MCO1ON: MCO1ON
0x50000804 B  REGISTER RCC_MCO2CFGR (rw): This register is used to select the clock generated on MCO2 output.
0x50000804 C   FIELD 00w03 MCO2SEL: MCO2SEL
0x50000804 C   FIELD 04w04 MCO2DIV: MCO2DIV
0x50000804 C   FIELD 12w01 MCO2ON: MCO2ON
0x50000808 B  REGISTER RCC_OCRDYR (ro): This is a read-only access register, It contains the status flags of oscillators. Writing has no effect.
0x50000808 C   FIELD 00w01 HSIRDY: HSIRDY
0x50000808 C   FIELD 02w01 HSIDIVRDY: HSIDIVRDY
0x50000808 C   FIELD 04w01 CSIRDY: CSIRDY
0x50000808 C   FIELD 08w01 HSERDY: HSERDY
0x50000808 C   FIELD 23w01 MPUCKRDY: MPUCKRDY
0x50000808 C   FIELD 24w01 AXICKRDY: AXICKRDY
0x50000808 C   FIELD 25w01 CKREST: CKREST
0x5000080C B  REGISTER RCC_DBGCFGR (rw): This is register contains the enable control of the debug and trace function, and the clock divider for the trace function.
0x5000080C C   FIELD 00w03 TRACEDIV: TRACEDIV
0x5000080C C   FIELD 08w01 DBGCKEN: DBGCKEN
0x5000080C C   FIELD 09w01 TRACECKEN: TRACECKEN
0x5000080C C   FIELD 12w01 DBGRST: DBGRST
0x50000820 B  REGISTER RCC_RCK3SELR: This register is used to select the reference clock for PLL3. If TZEN = MCKPROT = , this register can only be modified in secure mode.
0x50000820 C   FIELD 00w02 PLL3SRC (rw): PLL3SRC
0x50000820 C   FIELD 31w01 PLL3SRCRDY (ro): PLL3SRCRDY
0x50000824 B  REGISTER RCC_RCK4SELR: This register is used to select the reference clock for PLL4.
0x50000824 C   FIELD 00w02 PLL4SRC (rw): PLL4SRC
0x50000824 C   FIELD 31w01 PLL4SRCRDY (ro): PLL4SRCRDY
0x50000828 B  REGISTER RCC_TIMG1PRER: This register is used to control the prescaler value of timers located into APB1 domain. It concerns TIM2, TIM3, TIM4, TIM5, TIM6, TIM7, TIM12, TIM13 and TIM14. Refer to Section: Sub-system clock generation for additional information.
0x50000828 C   FIELD 00w01 TIMG1PRE (rw): TIMG1PRE
0x50000828 C   FIELD 31w01 TIMG1PRERDY (ro): TIMG1PRERDY
0x5000082C B  REGISTER RCC_TIMG2PRER: This register is used to control the prescaler value of timers located into APB2 domain. It concerns TIM1, TIM8, TIM15, TIM16, and TIM17. Refer to Section: Sub-system clock generation for additional information.
0x5000082C C   FIELD 00w01 TIMG2PRE (rw): TIMG2PRE
0x5000082C C   FIELD 31w01 TIMG2PRERDY (ro): TIMG2PRERDY
0x50000830 B  REGISTER RCC_MCUDIVR: This register is used to control the MCU sub-system clock prescaler. Refer to Section: Sub-system clock generation for additional information. If TZEN = , this register can only be modified in secure mode.
0x50000830 C   FIELD 00w04 MCUDIV (rw): MCUDIV
0x50000830 C   FIELD 31w01 MCUDIVRDY (ro): MCUDIVRDY
0x50000834 B  REGISTER RCC_APB1DIVR: This register is used to control the APB1 clock prescaler. Refer to section Section1.4.6.3: Sub-System Clock Generation for additional information.
0x50000834 C   FIELD 00w03 APB1DIV (rw): APB1DIV
0x50000834 C   FIELD 31w01 APB1DIVRDY (ro): APB1DIVRDY
0x50000838 B  REGISTER RCC_APB2DIVR: This register is used to control the APB2 clock prescaler. Refer to Section: Sub-system clock generation for additional information.
0x50000838 C   FIELD 00w03 APB2DIV (rw): APB2DIV
0x50000838 C   FIELD 31w01 APB2DIVRDY (ro): APB2DIVRDY
0x5000083C B  REGISTER RCC_APB3DIVR: This register is used to control the APB3 clock prescaler. Refer to Section: Sub-system clock generation for additional information.
0x5000083C C   FIELD 00w03 APB3DIV (rw): APB3DIV
0x5000083C C   FIELD 31w01 APB3DIVRDY (ro): APB3DIVRDY
0x50000880 B  REGISTER RCC_PLL3CR: This register is used to control the PLL3. If TZEN = MCKPROT = , this register can only be modified in secure mode.
0x50000880 C   FIELD 00w01 PLLON (rw): PLLON
0x50000880 C   FIELD 01w01 PLL3RDY (ro): PLL3RDY
0x50000880 C   FIELD 02w01 SSCG_CTRL (rw): SSCG_CTRL
0x50000880 C   FIELD 04w01 DIVPEN (rw): DIVPEN
0x50000880 C   FIELD 05w01 DIVQEN (rw): DIVQEN
0x50000880 C   FIELD 06w01 DIVREN (rw): DIVREN
0x50000884 B  REGISTER RCC_PLL3CFGR1 (rw): This register is used to configure the PLL3. If TZEN = MCKPROT = , this register can only be modified in secure mode.
0x50000884 C   FIELD 00w09 DIVN: DIVN
0x50000884 C   FIELD 16w06 DIVM3: DIVM3
0x50000884 C   FIELD 24w02 IFRGE: IFRGE
0x50000888 B  REGISTER RCC_PLL3CFGR2 (rw): This register is used to configure the PLL3. If TZEN = MCKPROT = , this register can only be modified in secure mode.
0x50000888 C   FIELD 00w07 DIVP: DIVP
0x50000888 C   FIELD 08w07 DIVQ: DIVQ
0x50000888 C   FIELD 16w07 DIVR: DIVR
0x5000088C B  REGISTER RCC_PLL3FRACR (rw): This register is used to fine-tune the frequency of the PLL3 VCO. If TZEN = MCKPROT = , this register can only be modified in secure mode.
0x5000088C C   FIELD 03w13 FRACV: FRACV
0x5000088C C   FIELD 16w01 FRACLE: FRACLE
0x50000890 B  REGISTER RCC_PLL3CSGR (rw): This register is used to configure the PLL3.It is not recommended to change the content of this register when the PLL3 is enabled (PLLON = ). Refer to Section: Using the PLLs in spread spectrum mode for details. If TZEN = MCKPROT = , this register can only be modified in secure mode.
0x50000890 C   FIELD 00w13 MOD_PER: MOD_PER
0x50000890 C   FIELD 13w01 TPDFN_DIS: TPDFN_DIS
0x50000890 C   FIELD 14w01 RPDFN_DIS: RPDFN_DIS
0x50000890 C   FIELD 15w01 SSCG_MODE: SSCG_MODE
0x50000890 C   FIELD 16w15 INC_STEP: INC_STEP
0x50000894 B  REGISTER RCC_PLL4CR: This register is used to control the PLL4.
0x50000894 C   FIELD 00w01 PLLON (rw): PLLON
0x50000894 C   FIELD 01w01 PLL4RDY (ro): PLL4RDY
0x50000894 C   FIELD 02w01 SSCG_CTRL (rw): SSCG_CTRL
0x50000894 C   FIELD 04w01 DIVPEN (rw): DIVPEN
0x50000894 C   FIELD 05w01 DIVQEN (rw): DIVQEN
0x50000894 C   FIELD 06w01 DIVREN (rw): DIVREN
0x50000898 B  REGISTER RCC_PLL4CFGR1 (rw): This register is used to configure the PLL4.
0x50000898 C   FIELD 00w09 DIVN: DIVN
0x50000898 C   FIELD 16w06 DIVM4: DIVM4
0x50000898 C   FIELD 24w02 IFRGE: IFRGE
0x5000089C B  REGISTER RCC_PLL4CFGR2 (rw): This register is used to configure the PLL4.
0x5000089C C   FIELD 00w07 DIVP: DIVP
0x5000089C C   FIELD 08w07 DIVQ: DIVQ
0x5000089C C   FIELD 16w07 DIVR: DIVR
0x500008A0 B  REGISTER RCC_PLL4FRACR (rw): This register is used to fine-tune the frequency of the PLL4 VCO.
0x500008A0 C   FIELD 03w13 FRACV: FRACV
0x500008A0 C   FIELD 16w01 FRACLE: FRACLE
0x500008A4 B  REGISTER RCC_PLL4CSGR (rw): This register is used to configure the PLL4.It is not recommended to change the content of this register when the PLL4 is enabled (PLLON = ). Refer to Section: Using the PLLs in spread spectrum mode for details. If TZEN = MCKPROT = , this register can only be modified in secure mode.
0x500008A4 C   FIELD 00w13 MOD_PER: MOD_PER
0x500008A4 C   FIELD 13w01 TPDFN_DIS: TPDFN_DIS
0x500008A4 C   FIELD 14w01 RPDFN_DIS: RPDFN_DIS
0x500008A4 C   FIELD 15w01 SSCG_MODE: SSCG_MODE
0x500008A4 C   FIELD 16w15 INC_STEP: INC_STEP
0x500008C0 B  REGISTER RCC_I2C12CKSELR (rw): This register is used to control the selection of the kernel clock for the I2C1 and I2C2. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008C0 C   FIELD 00w03 I2C12SRC: I2C12SRC
0x500008C4 B  REGISTER RCC_I2C35CKSELR (rw): This register is used to control the selection of the kernel clock for the I2C3 and I2C5. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008C4 C   FIELD 00w03 I2C35SRC: I2C35SRC
0x500008C8 B  REGISTER RCC_SAI1CKSELR (rw): This register is used to control the selection of the kernel clock for the SAI1 and DFSDM audio clock. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008C8 C   FIELD 00w03 SAI1SRC: SAI1SRC
0x500008CC B  REGISTER RCC_SAI2CKSELR (rw): This register is used to control the selection of the kernel clock for the SAI2. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008CC C   FIELD 00w03 SAI2SRC: SAI2SRC
0x500008D0 B  REGISTER RCC_SAI3CKSELR (rw): This register is used to control the selection of the kernel clock for the SAI3. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008D0 C   FIELD 00w03 SAI3SRC: SAI3SRC
0x500008D4 B  REGISTER RCC_SAI4CKSELR (rw): This register is used to control the selection of the kernel clock for the SAI4. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008D4 C   FIELD 00w03 SAI4SRC: SAI4SRC
0x500008D8 B  REGISTER RCC_SPI2S1CKSELR (rw): This register is used to control the selection of the kernel clock for the SPI/I2S1. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008D8 C   FIELD 00w03 SPI1SRC: SPI1SRC
0x500008DC B  REGISTER RCC_SPI2S23CKSELR (rw): This register is used to control the selection of the kernel clock for the SPI/I2S2,3. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008DC C   FIELD 00w03 SPI23SRC: SPI23SRC
0x500008E0 B  REGISTER RCC_SPI45CKSELR (rw): This register is used to control the selection of the kernel clock for the SPI4,5. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008E0 C   FIELD 00w03 SPI45SRC: SPI45SRC
0x500008E4 B  REGISTER RCC_UART6CKSELR (rw): This register is used to control the selection of the kernel clock for the USART6. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008E4 C   FIELD 00w03 UART6SRC: UART6SRC
0x500008E8 B  REGISTER RCC_UART24CKSELR (rw): This register is used to control the selection of the kernel clock for the USART2 and UART4. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008E8 C   FIELD 00w03 UART24SRC: UART24SRC
0x500008EC B  REGISTER RCC_UART35CKSELR (rw): This register is used to control the selection of the kernel clock for the USART3 and UART5. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008EC C   FIELD 00w03 UART35SRC: UART35SRC
0x500008F0 B  REGISTER RCC_UART78CKSELR (rw): This register is used to control the selection of the kernel clock for the UART7 and UART8. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008F0 C   FIELD 00w03 UART78SRC: UART78SRC
0x500008F4 B  REGISTER RCC_SDMMC12CKSELR (rw): This register is used to control the selection of the kernel clock for the SDMMC1 and SDMMC2. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008F4 C   FIELD 00w03 SDMMC12SRC: SDMMC12SRC
0x500008F8 B  REGISTER RCC_SDMMC3CKSELR (rw): This register is used to control the selection of the kernel clock for the SDMMC3. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008F8 C   FIELD 00w03 SDMMC3SRC: SDMMC3SRC
0x500008FC B  REGISTER RCC_ETHCKSELR (rw): This register is used to control the selection of the kernel clock for the ETH block. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x500008FC C   FIELD 00w02 ETHSRC: ETHSRC
0x500008FC C   FIELD 04w04 ETHPTPDIV: ETHPTPDIV
0x50000900 B  REGISTER RCC_QSPICKSELR (rw): This register is used to control the selection of the kernel clock for the QUADSPI. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x50000900 C   FIELD 00w02 QSPISRC: QSPISRC
0x50000904 B  REGISTER RCC_FMCCKSELR (rw): This register is used to control the selection of the kernel clock for the FMC block. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x50000904 C   FIELD 00w02 FMCSRC: FMCSRC
0x5000090C B  REGISTER RCC_FDCANCKSELR (rw): This register is used to control the selection of the kernel clock for the FDCAN block. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x5000090C C   FIELD 00w02 FDCANSRC: FDCANSRC
0x50000914 B  REGISTER RCC_SPDIFCKSELR (rw): This register is used to control the selection of the kernel clock for the SPDIFRX. Note that changing the clock source on-the-fly is allowed, and will not generate any timing violation, however the user has to ensure that both the previous and the new clock sources are present during the switching, and for the whole transition time. Refer to Section: Clock enabling delays.
0x50000914 C   FIELD 00w02 SPDIFSRC: SPDIFSRC
0x50000918 B  REGISTER RCC_CECCKSELR (rw): This register is used to control the selection of the kernel clock for the CEC-HDMI.
0x50000918 C   FIELD 00w02 CECSRC: CECSRC
0x5000091C B  REGISTER RCC_USBCKSELR (rw): This register is used to control the selection of the kernel clock for the USBPHY PLL of the USB HOST and USB OTG
0x5000091C C   FIELD 00w02 USBPHYSRC: USBPHYSRC
0x5000091C C   FIELD 04w01 USBOSRC: USBOSRC
0x50000920 B  REGISTER RCC_RNG2CKSELR (rw): This register is used to control the selection of the kernel clock for the RNG2.
0x50000920 C   FIELD 00w02 RNG2SRC: RNG2SRC
0x50000924 B  REGISTER RCC_DSICKSELR (rw): This register is used to control the selection of the kernel clock for the DSI block.
0x50000924 C   FIELD 00w01 DSISRC: DSISRC
0x50000928 B  REGISTER RCC_ADCCKSELR (rw): This register is used to control the selection of the kernel clock for the ADC block.
0x50000928 C   FIELD 00w02 ADCSRC: ADCSRC
0x5000092C B  REGISTER RCC_LPTIM45CKSELR (rw): This register is used to control the selection of the kernel clock for the LPTIM4 and LPTIM5 blocks.
0x5000092C C   FIELD 00w03 LPTIM45SRC: LPTIM45SRC
0x50000930 B  REGISTER RCC_LPTIM23CKSELR (rw): This register is used to control the selection of the kernel clock for the LPTIM2 and LPTIM3 blocks.
0x50000930 C   FIELD 00w03 LPTIM23SRC: LPTIM23SRC
0x50000934 B  REGISTER RCC_LPTIM1CKSELR (rw): This register is used to control the selection of the kernel clock for the LPTIM1 block.
0x50000934 C   FIELD 00w03 LPTIM1SRC: LPTIM1SRC
0x50000980 B  REGISTER RCC_APB1RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral.
0x50000980 C   FIELD 00w01 TIM2RST: TIM2RST
0x50000980 C   FIELD 01w01 TIM3RST: TIM3RST
0x50000980 C   FIELD 02w01 TIM4RST: TIM4RST
0x50000980 C   FIELD 03w01 TIM5RST: TIM5RST
0x50000980 C   FIELD 04w01 TIM6RST: TIM6RST
0x50000980 C   FIELD 05w01 TIM7RST: TIM7RST
0x50000980 C   FIELD 06w01 TIM12RST: TIM12RST
0x50000980 C   FIELD 07w01 TIM13RST: TIM13RST
0x50000980 C   FIELD 08w01 TIM14RST: TIM14RST
0x50000980 C   FIELD 09w01 LPTIM1RST: LPTIM1RST
0x50000980 C   FIELD 11w01 SPI2RST: SPI2RST
0x50000980 C   FIELD 12w01 SPI3RST: SPI3RST
0x50000980 C   FIELD 14w01 USART2RST: USART2RST
0x50000980 C   FIELD 15w01 USART3RST: USART3RST
0x50000980 C   FIELD 16w01 UART4RST: UART4RST
0x50000980 C   FIELD 17w01 UART5RST: UART5RST
0x50000980 C   FIELD 18w01 UART7RST: UART7RST
0x50000980 C   FIELD 19w01 UART8RST: UART8RST
0x50000980 C   FIELD 21w01 I2C1RST: I2C1RST
0x50000980 C   FIELD 22w01 I2C2RST: I2C2RST
0x50000980 C   FIELD 23w01 I2C3RST: I2C3RST
0x50000980 C   FIELD 24w01 I2C5RST: I2C5RST
0x50000980 C   FIELD 26w01 SPDIFRST: SPDIFRST
0x50000980 C   FIELD 27w01 CECRST: CECRST
0x50000980 C   FIELD 29w01 DAC12RST: DAC12RST
0x50000980 C   FIELD 31w01 MDIOSRST: MDIOSRST
0x50000984 B  REGISTER RCC_APB1RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral.
0x50000984 C   FIELD 00w01 TIM2RST: TIM2RST
0x50000984 C   FIELD 01w01 TIM3RST: TIM3RST
0x50000984 C   FIELD 02w01 TIM4RST: TIM4RST
0x50000984 C   FIELD 03w01 TIM5RST: TIM5RST
0x50000984 C   FIELD 04w01 TIM6RST: TIM6RST
0x50000984 C   FIELD 05w01 TIM7RST: TIM7RST
0x50000984 C   FIELD 06w01 TIM12RST: TIM12RST
0x50000984 C   FIELD 07w01 TIM13RST: TIM13RST
0x50000984 C   FIELD 08w01 TIM14RST: TIM14RST
0x50000984 C   FIELD 09w01 LPTIM1RST: LPTIM1RST
0x50000984 C   FIELD 11w01 SPI2RST: SPI2RST
0x50000984 C   FIELD 12w01 SPI3RST: SPI3RST
0x50000984 C   FIELD 14w01 USART2RST: USART2RST
0x50000984 C   FIELD 15w01 USART3RST: USART3RST
0x50000984 C   FIELD 16w01 UART4RST: UART4RST
0x50000984 C   FIELD 17w01 UART5RST: UART5RST
0x50000984 C   FIELD 18w01 UART7RST: UART7RST
0x50000984 C   FIELD 19w01 UART8RST: UART8RST
0x50000984 C   FIELD 21w01 I2C1RST: I2C1RST
0x50000984 C   FIELD 22w01 I2C2RST: I2C2RST
0x50000984 C   FIELD 23w01 I2C3RST: I2C3RST
0x50000984 C   FIELD 24w01 I2C5RST: I2C5RST
0x50000984 C   FIELD 26w01 SPDIFRST: SPDIFRST
0x50000984 C   FIELD 27w01 CECRST: CECRST
0x50000984 C   FIELD 29w01 DAC12RST: DAC12RST
0x50000984 C   FIELD 31w01 MDIOSRST: MDIOSRST
0x50000988 B  REGISTER RCC_APB2RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral.
0x50000988 C   FIELD 00w01 TIM1RST: TIM1RST
0x50000988 C   FIELD 01w01 TIM8RST: TIM8RST
0x50000988 C   FIELD 02w01 TIM15RST: TIM15RST
0x50000988 C   FIELD 03w01 TIM16RST: TIM16RST
0x50000988 C   FIELD 04w01 TIM17RST: TIM17RST
0x50000988 C   FIELD 08w01 SPI1RST: SPI1RST
0x50000988 C   FIELD 09w01 SPI4RST: SPI4RST
0x50000988 C   FIELD 10w01 SPI5RST: SPI5RST
0x50000988 C   FIELD 13w01 USART6RST: USART6RST
0x50000988 C   FIELD 16w01 SAI1RST: SAI1RST
0x50000988 C   FIELD 17w01 SAI2RST: SAI2RST
0x50000988 C   FIELD 18w01 SAI3RST: SAI3RST
0x50000988 C   FIELD 20w01 DFSDMRST: DFSDMRST
0x50000988 C   FIELD 24w01 FDCANRST: FDCANRST
0x5000098C B  REGISTER RCC_APB2RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral.
0x5000098C C   FIELD 00w01 TIM1RST: TIM1RST
0x5000098C C   FIELD 01w01 TIM8RST: TIM8RST
0x5000098C C   FIELD 02w01 TIM15RST: TIM15RST
0x5000098C C   FIELD 03w01 TIM16RST: TIM16RST
0x5000098C C   FIELD 04w01 TIM17RST: TIM17RST
0x5000098C C   FIELD 08w01 SPI1RST: SPI1RST
0x5000098C C   FIELD 09w01 SPI4RST: SPI4RST
0x5000098C C   FIELD 10w01 SPI5RST: SPI5RST
0x5000098C C   FIELD 13w01 USART6RST: USART6RST
0x5000098C C   FIELD 16w01 SAI1RST: SAI1RST
0x5000098C C   FIELD 17w01 SAI2RST: SAI2RST
0x5000098C C   FIELD 18w01 SAI3RST: SAI3RST
0x5000098C C   FIELD 20w01 DFSDMRST: DFSDMRST
0x5000098C C   FIELD 24w01 FDCANRST: FDCANRST
0x50000990 B  REGISTER RCC_APB3RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral.
0x50000990 C   FIELD 00w01 LPTIM2RST: LPTIM2RST
0x50000990 C   FIELD 01w01 LPTIM3RST: LPTIM3RST
0x50000990 C   FIELD 02w01 LPTIM4RST: LPTIM4RST
0x50000990 C   FIELD 03w01 LPTIM5RST: LPTIM5RST
0x50000990 C   FIELD 08w01 SAI4RST: SAI4RST
0x50000990 C   FIELD 11w01 SYSCFGRST: SYSCFGRST
0x50000990 C   FIELD 13w01 VREFRST: VREFRST
0x50000990 C   FIELD 16w01 DTSRST: DTSRST
0x50000994 B  REGISTER RCC_APB3RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral.
0x50000994 C   FIELD 00w01 LPTIM2RST: LPTIM2RST
0x50000994 C   FIELD 01w01 LPTIM3RST: LPTIM3RST
0x50000994 C   FIELD 02w01 LPTIM4RST: LPTIM4RST
0x50000994 C   FIELD 03w01 LPTIM5RST: LPTIM5RST
0x50000994 C   FIELD 08w01 SAI4RST: SAI4RST
0x50000994 C   FIELD 11w01 SYSCFGRST: SYSCFGRST
0x50000994 C   FIELD 13w01 VREFRST: VREFRST
0x50000994 C   FIELD 16w01 DTSRST: DTSRST
0x50000998 B  REGISTER RCC_AHB2RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral.
0x50000998 C   FIELD 00w01 DMA1RST: DMA1RST
0x50000998 C   FIELD 01w01 DMA2RST: DMA2RST
0x50000998 C   FIELD 02w01 DMAMUXRST: DMAMUXRST
0x50000998 C   FIELD 05w01 ADC12RST: ADC12RST
0x50000998 C   FIELD 08w01 USBORST: USBORST
0x50000998 C   FIELD 16w01 SDMMC3RST: SDMMC3RST
0x5000099C B  REGISTER RCC_AHB2RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral.
0x5000099C C   FIELD 00w01 DMA1RST: DMA1RST
0x5000099C C   FIELD 01w01 DMA2RST: DMA2RST
0x5000099C C   FIELD 02w01 DMAMUXRST: DMAMUXRST
0x5000099C C   FIELD 05w01 ADC12RST: ADC12RST
0x5000099C C   FIELD 08w01 USBORST: USBORST
0x5000099C C   FIELD 16w01 SDMMC3RST: SDMMC3RST
0x500009A0 B  REGISTER RCC_AHB3RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral.
0x500009A0 C   FIELD 00w01 DCMIRST: DCMIRST
0x500009A0 C   FIELD 04w01 CRYP2RST: CRYP2RST
0x500009A0 C   FIELD 05w01 HASH2RST: HASH2RST
0x500009A0 C   FIELD 06w01 RNG2RST: RNG2RST
0x500009A0 C   FIELD 07w01 CRC2RST: CRC2RST
0x500009A0 C   FIELD 11w01 HSEMRST: HSEMRST
0x500009A0 C   FIELD 12w01 IPCCRST: IPCCRST
0x500009A4 B  REGISTER RCC_AHB3RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral.
0x500009A4 C   FIELD 00w01 DCMIRST: DCMIRST
0x500009A4 C   FIELD 04w01 CRYP2RST: CRYP2RST
0x500009A4 C   FIELD 05w01 HASH2RST: HASH2RST
0x500009A4 C   FIELD 06w01 RNG2RST: RNG2RST
0x500009A4 C   FIELD 07w01 CRC2RST: CRC2RST
0x500009A4 C   FIELD 11w01 HSEMRST: HSEMRST
0x500009A4 C   FIELD 12w01 IPCCRST: IPCCRST
0x500009A8 B  REGISTER RCC_AHB4RSTSETR (rw): This register is used to activate the reset of the corresponding peripheral
0x500009A8 C   FIELD 00w01 GPIOARST: GPIOARST
0x500009A8 C   FIELD 01w01 GPIOBRST: GPIOBRST
0x500009A8 C   FIELD 02w01 GPIOCRST: GPIOCRST
0x500009A8 C   FIELD 03w01 GPIODRST: GPIODRST
0x500009A8 C   FIELD 04w01 GPIOERST: GPIOERST
0x500009A8 C   FIELD 05w01 GPIOFRST: GPIOFRST
0x500009A8 C   FIELD 06w01 GPIOGRST: GPIOGRST
0x500009A8 C   FIELD 07w01 GPIOHRST: GPIOHRST
0x500009A8 C   FIELD 08w01 GPIOIRST: GPIOIRST
0x500009A8 C   FIELD 09w01 GPIOJRST: GPIOJRST
0x500009A8 C   FIELD 10w01 GPIOKRST: GPIOKRST
0x500009AC B  REGISTER RCC_AHB4RSTCLRR (rw): This register is used to release the reset of the corresponding peripheral.
0x500009AC C   FIELD 00w01 GPIOARST: GPIOARST
0x500009AC C   FIELD 01w01 GPIOBRST: GPIOBRST
0x500009AC C   FIELD 02w01 GPIOCRST: GPIOCRST
0x500009AC C   FIELD 03w01 GPIODRST: GPIODRST
0x500009AC C   FIELD 04w01 GPIOERST: GPIOERST
0x500009AC C   FIELD 05w01 GPIOFRST: GPIOFRST
0x500009AC C   FIELD 06w01 GPIOGRST: GPIOGRST
0x500009AC C   FIELD 07w01 GPIOHRST: GPIOHRST
0x500009AC C   FIELD 08w01 GPIOIRST: GPIOIRST
0x500009AC C   FIELD 09w01 GPIOJRST: GPIOJRST
0x500009AC C   FIELD 10w01 GPIOKRST: GPIOKRST
0x50000A00 B  REGISTER RCC_MP_APB1ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000A00 C   FIELD 00w01 TIM2EN: TIM2EN
0x50000A00 C   FIELD 01w01 TIM3EN: TIM3EN
0x50000A00 C   FIELD 02w01 TIM4EN: TIM4EN
0x50000A00 C   FIELD 03w01 TIM5EN: TIM5EN
0x50000A00 C   FIELD 04w01 TIM6EN: TIM6EN
0x50000A00 C   FIELD 05w01 TIM7EN: TIM7EN
0x50000A00 C   FIELD 06w01 TIM12EN: TIM12EN
0x50000A00 C   FIELD 07w01 TIM13EN: TIM13EN
0x50000A00 C   FIELD 08w01 TIM14EN: TIM14EN
0x50000A00 C   FIELD 09w01 LPTIM1EN: LPTIM1EN
0x50000A00 C   FIELD 11w01 SPI2EN: SPI2EN
0x50000A00 C   FIELD 12w01 SPI3EN: SPI3EN
0x50000A00 C   FIELD 14w01 USART2EN: USART2EN
0x50000A00 C   FIELD 15w01 USART3EN: USART3EN
0x50000A00 C   FIELD 16w01 UART4EN: UART4EN
0x50000A00 C   FIELD 17w01 UART5EN: UART5EN
0x50000A00 C   FIELD 18w01 UART7EN: UART7EN
0x50000A00 C   FIELD 19w01 UART8EN: UART8EN
0x50000A00 C   FIELD 21w01 I2C1EN: I2C1EN
0x50000A00 C   FIELD 22w01 I2C2EN: I2C2EN
0x50000A00 C   FIELD 23w01 I2C3EN: I2C3EN
0x50000A00 C   FIELD 24w01 I2C5EN: I2C5EN
0x50000A00 C   FIELD 26w01 SPDIFEN: SPDIFEN
0x50000A00 C   FIELD 27w01 CECEN: CECEN
0x50000A00 C   FIELD 29w01 DAC12EN: DAC12EN
0x50000A00 C   FIELD 31w01 MDIOSEN: MDIOSEN
0x50000A04 B  REGISTER RCC_MP_APB1ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000A04 C   FIELD 00w01 TIM2EN: TIM2EN
0x50000A04 C   FIELD 01w01 TIM3EN: TIM3EN
0x50000A04 C   FIELD 02w01 TIM4EN: TIM4EN
0x50000A04 C   FIELD 03w01 TIM5EN: TIM5EN
0x50000A04 C   FIELD 04w01 TIM6EN: TIM6EN
0x50000A04 C   FIELD 05w01 TIM7EN: TIM7EN
0x50000A04 C   FIELD 06w01 TIM12EN: TIM12EN
0x50000A04 C   FIELD 07w01 TIM13EN: TIM13EN
0x50000A04 C   FIELD 08w01 TIM14EN: TIM14EN
0x50000A04 C   FIELD 09w01 LPTIM1EN: LPTIM1EN
0x50000A04 C   FIELD 11w01 SPI2EN: SPI2EN
0x50000A04 C   FIELD 12w01 SPI3EN: SPI3EN
0x50000A04 C   FIELD 14w01 USART2EN: USART2EN
0x50000A04 C   FIELD 15w01 USART3EN: USART3EN
0x50000A04 C   FIELD 16w01 UART4EN: UART4EN
0x50000A04 C   FIELD 17w01 UART5EN: UART5EN
0x50000A04 C   FIELD 18w01 UART7EN: UART7EN
0x50000A04 C   FIELD 19w01 UART8EN: UART8EN
0x50000A04 C   FIELD 21w01 I2C1EN: I2C1EN
0x50000A04 C   FIELD 22w01 I2C2EN: I2C2EN
0x50000A04 C   FIELD 23w01 I2C3EN: I2C3EN
0x50000A04 C   FIELD 24w01 I2C5EN: I2C5EN
0x50000A04 C   FIELD 26w01 SPDIFEN: SPDIFEN
0x50000A04 C   FIELD 27w01 CECEN: CECEN
0x50000A04 C   FIELD 29w01 DAC12EN: DAC12EN
0x50000A04 C   FIELD 31w01 MDIOSEN: MDIOSEN
0x50000A08 B  REGISTER RCC_MP_APB2ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000A08 C   FIELD 00w01 TIM1EN: TIM1EN
0x50000A08 C   FIELD 01w01 TIM8EN: TIM8EN
0x50000A08 C   FIELD 02w01 TIM15EN: TIM15EN
0x50000A08 C   FIELD 03w01 TIM16EN: TIM16EN
0x50000A08 C   FIELD 04w01 TIM17EN: TIM17EN
0x50000A08 C   FIELD 08w01 SPI1EN: SPI1EN
0x50000A08 C   FIELD 09w01 SPI4EN: SPI4EN
0x50000A08 C   FIELD 10w01 SPI5EN: SPI5EN
0x50000A08 C   FIELD 13w01 USART6EN: USART6EN
0x50000A08 C   FIELD 16w01 SAI1EN: SAI1EN
0x50000A08 C   FIELD 17w01 SAI2EN: SAI2EN
0x50000A08 C   FIELD 18w01 SAI3EN: SAI3EN
0x50000A08 C   FIELD 20w01 DFSDMEN: DFSDMEN
0x50000A08 C   FIELD 21w01 ADFSDMEN: ADFSDMEN
0x50000A08 C   FIELD 24w01 FDCANEN: FDCANEN
0x50000A0C B  REGISTER RCC_MP_APB2ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral.
0x50000A0C C   FIELD 00w01 TIM1EN: TIM1EN
0x50000A0C C   FIELD 01w01 TIM8EN: TIM8EN
0x50000A0C C   FIELD 02w01 TIM15EN: TIM15EN
0x50000A0C C   FIELD 03w01 TIM16EN: TIM16EN
0x50000A0C C   FIELD 04w01 TIM17EN: TIM17EN
0x50000A0C C   FIELD 08w01 SPI1EN: SPI1EN
0x50000A0C C   FIELD 09w01 SPI4EN: SPI4EN
0x50000A0C C   FIELD 10w01 SPI5EN: SPI5EN
0x50000A0C C   FIELD 13w01 USART6EN: USART6EN
0x50000A0C C   FIELD 16w01 SAI1EN: SAI1EN
0x50000A0C C   FIELD 17w01 SAI2EN: SAI2EN
0x50000A0C C   FIELD 18w01 SAI3EN: SAI3EN
0x50000A0C C   FIELD 20w01 DFSDMEN: DFSDMEN
0x50000A0C C   FIELD 21w01 ADFSDMEN: ADFSDMEN
0x50000A0C C   FIELD 24w01 FDCANEN: FDCANEN
0x50000A10 B  REGISTER RCC_MP_APB3ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000A10 C   FIELD 00w01 LPTIM2EN: LPTIM2EN
0x50000A10 C   FIELD 01w01 LPTIM3EN: LPTIM3EN
0x50000A10 C   FIELD 02w01 LPTIM4EN: LPTIM4EN
0x50000A10 C   FIELD 03w01 LPTIM5EN: LPTIM5EN
0x50000A10 C   FIELD 08w01 SAI4EN: SAI4EN
0x50000A10 C   FIELD 11w01 SYSCFGEN: SYSCFGEN
0x50000A10 C   FIELD 13w01 VREFEN: VREFEN
0x50000A10 C   FIELD 16w01 DTSEN: DTSEN
0x50000A10 C   FIELD 20w01 HDPEN: HDPEN
0x50000A14 B  REGISTER RCC_MP_APB3ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral.
0x50000A14 C   FIELD 00w01 LPTIM2EN: LPTIM2EN
0x50000A14 C   FIELD 01w01 LPTIM3EN: LPTIM3EN
0x50000A14 C   FIELD 02w01 LPTIM4EN: LPTIM4EN
0x50000A14 C   FIELD 03w01 LPTIM5EN: LPTIM5EN
0x50000A14 C   FIELD 08w01 SAI4EN: SAI4EN
0x50000A14 C   FIELD 11w01 SYSCFGEN: SYSCFGEN
0x50000A14 C   FIELD 13w01 VREFEN: VREFEN
0x50000A14 C   FIELD 16w01 DTSEN: DTSEN
0x50000A14 C   FIELD 20w01 HDPEN: HDPEN
0x50000A18 B  REGISTER RCC_MP_AHB2ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral
0x50000A18 C   FIELD 00w01 DMA1EN: DMA1EN
0x50000A18 C   FIELD 01w01 DMA2EN: DMA2EN
0x50000A18 C   FIELD 02w01 DMAMUXEN: DMAMUXEN
0x50000A18 C   FIELD 05w01 ADC12EN: ADC12EN
0x50000A18 C   FIELD 08w01 USBOEN: USBOEN
0x50000A18 C   FIELD 16w01 SDMMC3EN: SDMMC3EN
0x50000A1C B  REGISTER RCC_MP_AHB2ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral.
0x50000A1C C   FIELD 00w01 DMA1EN: DMA1EN
0x50000A1C C   FIELD 01w01 DMA2EN: DMA2EN
0x50000A1C C   FIELD 02w01 DMAMUXEN: DMAMUXEN
0x50000A1C C   FIELD 05w01 ADC12EN: ADC12EN
0x50000A1C C   FIELD 08w01 USBOEN: USBOEN
0x50000A1C C   FIELD 16w01 SDMMC3EN: SDMMC3EN
0x50000A20 B  REGISTER RCC_MP_AHB3ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral
0x50000A20 C   FIELD 00w01 DCMIEN: DCMIEN
0x50000A20 C   FIELD 04w01 CRYP2EN: CRYP2EN
0x50000A20 C   FIELD 05w01 HASH2EN: HASH2EN
0x50000A20 C   FIELD 06w01 RNG2EN: RNG2EN
0x50000A20 C   FIELD 07w01 CRC2EN: CRC2EN
0x50000A20 C   FIELD 11w01 HSEMEN: HSEMEN
0x50000A20 C   FIELD 12w01 IPCCEN: IPCCEN
0x50000A24 B  REGISTER RCC_MP_AHB3ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral.
0x50000A24 C   FIELD 00w01 DCMIEN: DCMIEN
0x50000A24 C   FIELD 04w01 CRYP2EN: CRYP2EN
0x50000A24 C   FIELD 05w01 HASH2EN: HASH2EN
0x50000A24 C   FIELD 06w01 RNG2EN: RNG2EN
0x50000A24 C   FIELD 07w01 CRC2EN: CRC2EN
0x50000A24 C   FIELD 11w01 HSEMEN: HSEMEN
0x50000A24 C   FIELD 12w01 IPCCEN: IPCCEN
0x50000A28 B  REGISTER RCC_MP_AHB4ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral to . It shall be used to allocate a peripheral to the MPU.
0x50000A28 C   FIELD 00w01 GPIOAEN: GPIOAEN
0x50000A28 C   FIELD 01w01 GPIOBEN: GPIOBEN
0x50000A28 C   FIELD 02w01 GPIOCEN: GPIOCEN
0x50000A28 C   FIELD 03w01 GPIODEN: GPIODEN
0x50000A28 C   FIELD 04w01 GPIOEEN: GPIOEEN
0x50000A28 C   FIELD 05w01 GPIOFEN: GPIOFEN
0x50000A28 C   FIELD 06w01 GPIOGEN: GPIOGEN
0x50000A28 C   FIELD 07w01 GPIOHEN: GPIOHEN
0x50000A28 C   FIELD 08w01 GPIOIEN: GPIOIEN
0x50000A28 C   FIELD 09w01 GPIOJEN: GPIOJEN
0x50000A28 C   FIELD 10w01 GPIOKEN: GPIOKEN
0x50000A2C B  REGISTER RCC_MP_AHB4ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000A2C C   FIELD 00w01 GPIOAEN: GPIOAEN
0x50000A2C C   FIELD 01w01 GPIOBEN: GPIOBEN
0x50000A2C C   FIELD 02w01 GPIOCEN: GPIOCEN
0x50000A2C C   FIELD 03w01 GPIODEN: GPIODEN
0x50000A2C C   FIELD 04w01 GPIOEEN: GPIOEEN
0x50000A2C C   FIELD 05w01 GPIOFEN: GPIOFEN
0x50000A2C C   FIELD 06w01 GPIOGEN: GPIOGEN
0x50000A2C C   FIELD 07w01 GPIOHEN: GPIOHEN
0x50000A2C C   FIELD 08w01 GPIOIEN: GPIOIEN
0x50000A2C C   FIELD 09w01 GPIOJEN: GPIOJEN
0x50000A2C C   FIELD 10w01 GPIOKEN: GPIOKEN
0x50000A38 B  REGISTER RCC_MP_MLAHBENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000A38 C   FIELD 04w01 RETRAMEN: RETRAMEN
0x50000A3C B  REGISTER RCC_MP_MLAHBENCLRR (rw): This register is used to clear the peripheral clock enable bit.
0x50000A3C C   FIELD 04w01 RETRAMEN: RETRAMEN
0x50000A80 B  REGISTER RCC_MC_APB1ENSETR (rw): This register is used to set the peripheral clock enable bit of the corresponding peripheral to . It shall be used to allocate a peripheral to the MCU. Writing has no effect, reading will return . Writing a sets the corresponding bit to .
0x50000A80 C   FIELD 00w01 TIM2EN: TIM2EN
0x50000A80 C   FIELD 01w01 TIM3EN: TIM3EN
0x50000A80 C   FIELD 02w01 TIM4EN: TIM4EN
0x50000A80 C   FIELD 03w01 TIM5EN: TIM5EN
0x50000A80 C   FIELD 04w01 TIM6EN: TIM6EN
0x50000A80 C   FIELD 05w01 TIM7EN: TIM7EN
0x50000A80 C   FIELD 06w01 TIM12EN: TIM12EN
0x50000A80 C   FIELD 07w01 TIM13EN: TIM13EN
0x50000A80 C   FIELD 08w01 TIM14EN: TIM14EN
0x50000A80 C   FIELD 09w01 LPTIM1EN: LPTIM1EN
0x50000A80 C   FIELD 11w01 SPI2EN: SPI2EN
0x50000A80 C   FIELD 12w01 SPI3EN: SPI3EN
0x50000A80 C   FIELD 14w01 USART2EN: USART2EN
0x50000A80 C   FIELD 15w01 USART3EN: USART3EN
0x50000A80 C   FIELD 16w01 UART4EN: UART4EN
0x50000A80 C   FIELD 17w01 UART5EN: UART5EN
0x50000A80 C   FIELD 18w01 UART7EN: UART7EN
0x50000A80 C   FIELD 19w01 UART8EN: UART8EN
0x50000A80 C   FIELD 21w01 I2C1EN: I2C1EN
0x50000A80 C   FIELD 22w01 I2C2EN: I2C2EN
0x50000A80 C   FIELD 23w01 I2C3EN: I2C3EN
0x50000A80 C   FIELD 24w01 I2C5EN: I2C5EN
0x50000A80 C   FIELD 26w01 SPDIFEN: SPDIFEN
0x50000A80 C   FIELD 27w01 CECEN: CECEN
0x50000A80 C   FIELD 28w01 WWDG1EN: WWDG1EN
0x50000A80 C   FIELD 29w01 DAC12EN: DAC12EN
0x50000A80 C   FIELD 31w01 MDIOSEN: MDIOSEN
0x50000A84 B  REGISTER RCC_MC_APB1ENCLRR (rw): This register is used to clear the peripheral clock enable bit of the corresponding peripheral.
0x50000A84 C   FIELD 00w01 TIM2EN: TIM2EN
0x50000A84 C   FIELD 01w01 TIM3EN: TIM3EN
0x50000A84 C   FIELD 02w01 TIM4EN: TIM4EN
0x50000A84 C   FIELD 03w01 TIM5EN: TIM5EN
0x50000A84 C   FIELD 04w01 TIM6EN: TIM6EN
0x50000A84 C   FIELD 05w01 TIM7EN: TIM7EN
0x50000A84 C   FIELD 06w01 TIM12EN: TIM12EN
0x50000A84 C   FIELD 07w01 TIM13EN: TIM13EN
0x50000A84 C   FIELD 08w01 TIM14EN: TIM14EN
0x50000A84 C   FIELD 09w01 LPTIM1EN: LPTIM1EN
0x50000A84 C   FIELD 11w01 SPI2EN: SPI2EN
0x50000A84 C   FIELD 12w01 SPI3EN: SPI3EN
0x50000A84 C   FIELD 14w01 USART2EN: USART2EN
0x50000A84 C   FIELD 15w01 USART3EN: USART3EN
0x50000A84 C   FIELD 16w01 UART4EN: UART4EN
0x50000A84 C   FIELD 17w01 UART5EN: UART5EN
0x50000A84 C   FIELD 18w01 UART7EN: UART7EN
0x50000A84 C   FIELD 19w01 UART8EN: UART8EN
0x50000A84 C   FIELD 21w01 I2C1EN: I2C1EN
0x50000A84 C   FIELD 22w01 I2C2EN: I2C2EN
0x50000A84 C   FIELD 23w01 I2C3EN: I2C3EN
0x50000A84 C   FIELD 24w01 I2C5EN: I2C5EN
0x50000A84 C   FIELD 26w01 SPDIFEN: SPDIFEN
0x50000A84 C   FIELD 27w01 CECEN: CECEN
0x50000A84 C   FIELD 29w01 DAC12EN: DAC12EN
0x50000A84 C   FIELD 31w01 MDIOSEN: MDIOSEN
0x50000A88 B  REGISTER RCC_MC_APB2ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000A88 C   FIELD 00w01 TIM1EN: TIM1EN
0x50000A88 C   FIELD 01w01 TIM8EN: TIM8EN
0x50000A88 C   FIELD 02w01 TIM15EN: TIM15EN
0x50000A88 C   FIELD 03w01 TIM16EN: TIM16EN
0x50000A88 C   FIELD 04w01 TIM17EN: TIM17EN
0x50000A88 C   FIELD 08w01 SPI1EN: SPI1EN
0x50000A88 C   FIELD 09w01 SPI4EN: SPI4EN
0x50000A88 C   FIELD 10w01 SPI5EN: SPI5EN
0x50000A88 C   FIELD 13w01 USART6EN: USART6EN
0x50000A88 C   FIELD 16w01 SAI1EN: SAI1EN
0x50000A88 C   FIELD 17w01 SAI2EN: SAI2EN
0x50000A88 C   FIELD 18w01 SAI3EN: SAI3EN
0x50000A88 C   FIELD 20w01 DFSDMEN: DFSDMEN
0x50000A88 C   FIELD 21w01 ADFSDMEN: ADFSDMEN
0x50000A88 C   FIELD 24w01 FDCANEN: FDCANEN
0x50000A8C B  REGISTER RCC_MC_APB2ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000A8C C   FIELD 00w01 TIM1EN: TIM1EN
0x50000A8C C   FIELD 01w01 TIM8EN: TIM8EN
0x50000A8C C   FIELD 02w01 TIM15EN: TIM15EN
0x50000A8C C   FIELD 03w01 TIM16EN: TIM16EN
0x50000A8C C   FIELD 04w01 TIM17EN: TIM17EN
0x50000A8C C   FIELD 08w01 SPI1EN: SPI1EN
0x50000A8C C   FIELD 09w01 SPI4EN: SPI4EN
0x50000A8C C   FIELD 10w01 SPI5EN: SPI5EN
0x50000A8C C   FIELD 13w01 USART6EN: USART6EN
0x50000A8C C   FIELD 16w01 SAI1EN: SAI1EN
0x50000A8C C   FIELD 17w01 SAI2EN: SAI2EN
0x50000A8C C   FIELD 18w01 SAI3EN: SAI3EN
0x50000A8C C   FIELD 20w01 DFSDMEN: DFSDMEN
0x50000A8C C   FIELD 21w01 ADFSDMEN: ADFSDMEN
0x50000A8C C   FIELD 24w01 FDCANEN: FDCANEN
0x50000A90 B  REGISTER RCC_MC_APB3ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000A90 C   FIELD 00w01 LPTIM2EN: LPTIM2EN
0x50000A90 C   FIELD 01w01 LPTIM3EN: LPTIM3EN
0x50000A90 C   FIELD 02w01 LPTIM4EN: LPTIM4EN
0x50000A90 C   FIELD 03w01 LPTIM5EN: LPTIM5EN
0x50000A90 C   FIELD 08w01 SAI4EN: SAI4EN
0x50000A90 C   FIELD 11w01 SYSCFGEN: SYSCFGEN
0x50000A90 C   FIELD 13w01 VREFEN: VREFEN
0x50000A90 C   FIELD 16w01 DTSEN: DTSEN
0x50000A90 C   FIELD 20w01 HDPEN: HDPEN
0x50000A94 B  REGISTER RCC_MC_APB3ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000A94 C   FIELD 00w01 LPTIM2EN: LPTIM2EN
0x50000A94 C   FIELD 01w01 LPTIM3EN: LPTIM3EN
0x50000A94 C   FIELD 02w01 LPTIM4EN: LPTIM4EN
0x50000A94 C   FIELD 03w01 LPTIM5EN: LPTIM5EN
0x50000A94 C   FIELD 08w01 SAI4EN: SAI4EN
0x50000A94 C   FIELD 11w01 SYSCFGEN: SYSCFGEN
0x50000A94 C   FIELD 13w01 VREFEN: VREFEN
0x50000A94 C   FIELD 16w01 DTSEN: DTSEN
0x50000A94 C   FIELD 20w01 HDPEN: HDPEN
0x50000A98 B  REGISTER RCC_MC_AHB2ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000A98 C   FIELD 00w01 DMA1EN: DMA1EN
0x50000A98 C   FIELD 01w01 DMA2EN: DMA2EN
0x50000A98 C   FIELD 02w01 DMAMUXEN: DMAMUXEN
0x50000A98 C   FIELD 05w01 ADC12EN: ADC12EN
0x50000A98 C   FIELD 08w01 USBOEN: USBOEN
0x50000A98 C   FIELD 16w01 SDMMC3EN: SDMMC3EN
0x50000A9C B  REGISTER RCC_MC_AHB2ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000A9C C   FIELD 00w01 DMA1EN: DMA1EN
0x50000A9C C   FIELD 01w01 DMA2EN: DMA2EN
0x50000A9C C   FIELD 02w01 DMAMUXEN: DMAMUXEN
0x50000A9C C   FIELD 05w01 ADC12EN: ADC12EN
0x50000A9C C   FIELD 08w01 USBOEN: USBOEN
0x50000A9C C   FIELD 16w01 SDMMC3EN: SDMMC3EN
0x50000AA0 B  REGISTER RCC_MC_AHB3ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000AA0 C   FIELD 00w01 DCMIEN: DCMIEN
0x50000AA0 C   FIELD 04w01 CRYP2EN: CRYP2EN
0x50000AA0 C   FIELD 05w01 HASH2EN: HASH2EN
0x50000AA0 C   FIELD 06w01 RNG2EN: RNG2EN
0x50000AA0 C   FIELD 07w01 CRC2EN: CRC2EN
0x50000AA0 C   FIELD 11w01 HSEMEN: HSEMEN
0x50000AA0 C   FIELD 12w01 IPCCEN: IPCCEN
0x50000AA4 B  REGISTER RCC_MC_AHB3ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000AA4 C   FIELD 00w01 DCMIEN: DCMIEN
0x50000AA4 C   FIELD 04w01 CRYP2EN: CRYP2EN
0x50000AA4 C   FIELD 05w01 HASH2EN: HASH2EN
0x50000AA4 C   FIELD 06w01 RNG2EN: RNG2EN
0x50000AA4 C   FIELD 07w01 CRC2EN: CRC2EN
0x50000AA4 C   FIELD 11w01 HSEMEN: HSEMEN
0x50000AA4 C   FIELD 12w01 IPCCEN: IPCCEN
0x50000AA8 B  REGISTER RCC_MC_AHB4ENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000AA8 C   FIELD 00w01 GPIOAEN: GPIOAEN
0x50000AA8 C   FIELD 01w01 GPIOBEN: GPIOBEN
0x50000AA8 C   FIELD 02w01 GPIOCEN: GPIOCEN
0x50000AA8 C   FIELD 03w01 GPIODEN: GPIODEN
0x50000AA8 C   FIELD 04w01 GPIOEEN: GPIOEEN
0x50000AA8 C   FIELD 05w01 GPIOFEN: GPIOFEN
0x50000AA8 C   FIELD 06w01 GPIOGEN: GPIOGEN
0x50000AA8 C   FIELD 07w01 GPIOHEN: GPIOHEN
0x50000AA8 C   FIELD 08w01 GPIOIEN: GPIOIEN
0x50000AA8 C   FIELD 09w01 GPIOJEN: GPIOJEN
0x50000AA8 C   FIELD 10w01 GPIOKEN: GPIOKEN
0x50000AAC B  REGISTER RCC_MC_AHB4ENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000AAC C   FIELD 00w01 GPIOAEN: GPIOAEN
0x50000AAC C   FIELD 01w01 GPIOBEN: GPIOBEN
0x50000AAC C   FIELD 02w01 GPIOCEN: GPIOCEN
0x50000AAC C   FIELD 03w01 GPIODEN: GPIODEN
0x50000AAC C   FIELD 04w01 GPIOEEN: GPIOEEN
0x50000AAC C   FIELD 05w01 GPIOFEN: GPIOFEN
0x50000AAC C   FIELD 06w01 GPIOGEN: GPIOGEN
0x50000AAC C   FIELD 07w01 GPIOHEN: GPIOHEN
0x50000AAC C   FIELD 08w01 GPIOIEN: GPIOIEN
0x50000AAC C   FIELD 09w01 GPIOJEN: GPIOJEN
0x50000AAC C   FIELD 10w01 GPIOKEN: GPIOKEN
0x50000AB0 B  REGISTER RCC_MC_AXIMENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000AB0 C   FIELD 00w01 SYSRAMEN: SYSRAMEN
0x50000AB4 B  REGISTER RCC_MC_AXIMENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000AB4 C   FIELD 00w01 SYSRAMEN: SYSRAMEN
0x50000AB8 B  REGISTER RCC_MC_MLAHBENSETR (rw): This register is used to set the peripheral clock enable bit
0x50000AB8 C   FIELD 04w01 RETRAMEN: RETRAMEN
0x50000ABC B  REGISTER RCC_MC_MLAHBENCLRR (rw): This register is used to clear the peripheral clock enable bit
0x50000ABC C   FIELD 04w01 RETRAMEN: RETRAMEN
0x50000B00 B  REGISTER RCC_MP_APB1LPENSETR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000B00 C   FIELD 00w01 TIM2LPEN: TIM2LPEN
0x50000B00 C   FIELD 01w01 TIM3LPEN: TIM3LPEN
0x50000B00 C   FIELD 02w01 TIM4LPEN: TIM4LPEN
0x50000B00 C   FIELD 03w01 TIM5LPEN: TIM5LPEN
0x50000B00 C   FIELD 04w01 TIM6LPEN: TIM6LPEN
0x50000B00 C   FIELD 05w01 TIM7LPEN: TIM7LPEN
0x50000B00 C   FIELD 06w01 TIM12LPEN: TIM12LPEN
0x50000B00 C   FIELD 07w01 TIM13LPEN: TIM13LPEN
0x50000B00 C   FIELD 08w01 TIM14LPEN: TIM14LPEN
0x50000B00 C   FIELD 09w01 LPTIM1LPEN: LPTIM1LPEN
0x50000B00 C   FIELD 11w01 SPI2LPEN: SPI2LPEN
0x50000B00 C   FIELD 12w01 SPI3LPEN: SPI3LPEN
0x50000B00 C   FIELD 14w01 USART2LPEN: USART2LPEN
0x50000B00 C   FIELD 15w01 USART3LPEN: USART3LPEN
0x50000B00 C   FIELD 16w01 UART4LPEN: UART4LPEN
0x50000B00 C   FIELD 17w01 UART5LPEN: UART5LPEN
0x50000B00 C   FIELD 18w01 UART7LPEN: UART7LPEN
0x50000B00 C   FIELD 19w01 UART8LPEN: UART8LPEN
0x50000B00 C   FIELD 21w01 I2C1LPEN: I2C1LPEN
0x50000B00 C   FIELD 22w01 I2C2LPEN: I2C2LPEN
0x50000B00 C   FIELD 23w01 I2C3LPEN: I2C3LPEN
0x50000B00 C   FIELD 24w01 I2C5LPEN: I2C5LPEN
0x50000B00 C   FIELD 26w01 SPDIFLPEN: SPDIFLPEN
0x50000B00 C   FIELD 27w01 CECLPEN: CECLPEN
0x50000B00 C   FIELD 29w01 DAC12LPEN: DAC12LPEN
0x50000B00 C   FIELD 31w01 MDIOSLPEN: MDIOSLPEN
0x50000B04 B  REGISTER RCC_MP_APB1LPENCLRR (rw): This register is used by the MPU in order to clear the PERxLPEN bits .
0x50000B04 C   FIELD 00w01 TIM2LPEN: TIM2LPEN
0x50000B04 C   FIELD 01w01 TIM3LPEN: TIM3LPEN
0x50000B04 C   FIELD 02w01 TIM4LPEN: TIM4LPEN
0x50000B04 C   FIELD 03w01 TIM5LPEN: TIM5LPEN
0x50000B04 C   FIELD 04w01 TIM6LPEN: TIM6LPEN
0x50000B04 C   FIELD 05w01 TIM7LPEN: TIM7LPEN
0x50000B04 C   FIELD 06w01 TIM12LPEN: TIM12LPEN
0x50000B04 C   FIELD 07w01 TIM13LPEN: TIM13LPEN
0x50000B04 C   FIELD 08w01 TIM14LPEN: TIM14LPEN
0x50000B04 C   FIELD 09w01 LPTIM1LPEN: LPTIM1LPEN
0x50000B04 C   FIELD 11w01 SPI2LPEN: SPI2LPEN
0x50000B04 C   FIELD 12w01 SPI3LPEN: SPI3LPEN
0x50000B04 C   FIELD 14w01 USART2LPEN: USART2LPEN
0x50000B04 C   FIELD 15w01 USART3LPEN: USART3LPEN
0x50000B04 C   FIELD 16w01 UART4LPEN: UART4LPEN
0x50000B04 C   FIELD 17w01 UART5LPEN: UART5LPEN
0x50000B04 C   FIELD 18w01 UART7LPEN: UART7LPEN
0x50000B04 C   FIELD 19w01 UART8LPEN: UART8LPEN
0x50000B04 C   FIELD 21w01 I2C1LPEN: I2C1LPEN
0x50000B04 C   FIELD 22w01 I2C2LPEN: I2C2LPEN
0x50000B04 C   FIELD 23w01 I2C3LPEN: I2C3LPEN
0x50000B04 C   FIELD 24w01 I2C5LPEN: I2C5LPEN
0x50000B04 C   FIELD 26w01 SPDIFLPEN: SPDIFLPEN
0x50000B04 C   FIELD 27w01 CECLPEN: CECLPEN
0x50000B04 C   FIELD 29w01 DAC12LPEN: DAC12LPEN
0x50000B04 C   FIELD 31w01 MDIOSLPEN: MDIOSLPEN
0x50000B08 B  REGISTER RCC_MP_APB2LPENSETR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000B08 C   FIELD 00w01 TIM1LPEN: TIM1LPEN
0x50000B08 C   FIELD 01w01 TIM8LPEN: TIM8LPEN
0x50000B08 C   FIELD 02w01 TIM15LPEN: TIM15LPEN
0x50000B08 C   FIELD 03w01 TIM16LPEN: TIM16LPEN
0x50000B08 C   FIELD 04w01 TIM17LPEN: TIM17LPEN
0x50000B08 C   FIELD 08w01 SPI1LPEN: SPI1LPEN
0x50000B08 C   FIELD 09w01 SPI4LPEN: SPI4LPEN
0x50000B08 C   FIELD 10w01 SPI5LPEN: SPI5LPEN
0x50000B08 C   FIELD 13w01 USART6LPEN: USART6LPEN
0x50000B08 C   FIELD 16w01 SAI1LPEN: SAI1LPEN
0x50000B08 C   FIELD 17w01 SAI2LPEN: SAI2LPEN
0x50000B08 C   FIELD 18w01 SAI3LPEN: SAI3LPEN
0x50000B08 C   FIELD 20w01 DFSDMLPEN: DFSDMLPEN
0x50000B08 C   FIELD 21w01 ADFSDMLPEN: ADFSDMLPEN
0x50000B08 C   FIELD 24w01 FDCANLPEN: FDCANLPEN
0x50000B0C B  REGISTER RCC_MP_APB2LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000B0C C   FIELD 00w01 TIM1LPEN: TIM1LPEN
0x50000B0C C   FIELD 01w01 TIM8LPEN: TIM8LPEN
0x50000B0C C   FIELD 02w01 TIM15LPEN: TIM15LPEN
0x50000B0C C   FIELD 03w01 TIM16LPEN: TIM16LPEN
0x50000B0C C   FIELD 04w01 TIM17LPEN: TIM17LPEN
0x50000B0C C   FIELD 08w01 SPI1LPEN: SPI1LPEN
0x50000B0C C   FIELD 09w01 SPI4LPEN: SPI4LPEN
0x50000B0C C   FIELD 10w01 SPI5LPEN: SPI5LPEN
0x50000B0C C   FIELD 13w01 USART6LPEN: USART6LPEN
0x50000B0C C   FIELD 16w01 SAI1LPEN: SAI1LPEN
0x50000B0C C   FIELD 17w01 SAI2LPEN: SAI2LPEN
0x50000B0C C   FIELD 18w01 SAI3LPEN: SAI3LPEN
0x50000B0C C   FIELD 20w01 DFSDMLPEN: DFSDMLPEN
0x50000B0C C   FIELD 21w01 ADFSDMLPEN: ADFSDMLPEN
0x50000B0C C   FIELD 24w01 FDCANLPEN: FDCANLPEN
0x50000B10 B  REGISTER RCC_MP_APB3LPENSETR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000B10 C   FIELD 00w01 LPTIM2LPEN: LPTIM2LPEN
0x50000B10 C   FIELD 01w01 LPTIM3LPEN: LPTIM3LPEN
0x50000B10 C   FIELD 02w01 LPTIM4LPEN: LPTIM4LPEN
0x50000B10 C   FIELD 03w01 LPTIM5LPEN: LPTIM5LPEN
0x50000B10 C   FIELD 08w01 SAI4LPEN: SAI4LPEN
0x50000B10 C   FIELD 11w01 SYSCFGLPEN: SYSCFGLPEN
0x50000B10 C   FIELD 13w01 VREFLPEN: VREFLPEN
0x50000B10 C   FIELD 16w01 DTSLPEN: DTSLPEN
0x50000B14 B  REGISTER RCC_MP_APB3LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000B14 C   FIELD 00w01 LPTIM2LPEN: LPTIM2LPEN
0x50000B14 C   FIELD 01w01 LPTIM3LPEN: LPTIM3LPEN
0x50000B14 C   FIELD 02w01 LPTIM4LPEN: LPTIM4LPEN
0x50000B14 C   FIELD 03w01 LPTIM5LPEN: LPTIM5LPEN
0x50000B14 C   FIELD 08w01 SAI4LPEN: SAI4LPEN
0x50000B14 C   FIELD 11w01 SYSCFGLPEN: SYSCFGLPEN
0x50000B14 C   FIELD 13w01 VREFLPEN: VREFLPEN
0x50000B14 C   FIELD 16w01 DTSLPEN: DTSLPEN
0x50000B18 B  REGISTER RCC_MP_AHB2LPENSETR (rw): This register is used by the MPU in order to set the PERxLPEN bit.
0x50000B18 C   FIELD 00w01 DMA1LPEN: DMA1LPEN
0x50000B18 C   FIELD 01w01 DMA2LPEN: DMA2LPEN
0x50000B18 C   FIELD 02w01 DMAMUXLPEN: DMAMUXLPEN
0x50000B18 C   FIELD 05w01 ADC12LPEN: ADC12LPEN
0x50000B18 C   FIELD 08w01 USBOLPEN: USBOLPEN
0x50000B18 C   FIELD 16w01 SDMMC3LPEN: SDMMC3LPEN
0x50000B1C B  REGISTER RCC_MP_AHB2LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000B1C C   FIELD 00w01 DMA1LPEN: DMA1LPEN
0x50000B1C C   FIELD 01w01 DMA2LPEN: DMA2LPEN
0x50000B1C C   FIELD 02w01 DMAMUXLPEN: DMAMUXLPEN
0x50000B1C C   FIELD 05w01 ADC12LPEN: ADC12LPEN
0x50000B1C C   FIELD 08w01 USBOLPEN: USBOLPEN
0x50000B1C C   FIELD 16w01 SDMMC3LPEN: SDMMC3LPEN
0x50000B20 B  REGISTER RCC_MP_AHB3LPENSETR (rw): This register is used by the MPU
0x50000B20 C   FIELD 00w01 DCMILPEN: DCMILPEN
0x50000B20 C   FIELD 04w01 CRYP2LPEN: CRYP2LPEN
0x50000B20 C   FIELD 05w01 HASH2LPEN: HASH2LPEN
0x50000B20 C   FIELD 06w01 RNG2LPEN: RNG2LPEN
0x50000B20 C   FIELD 07w01 CRC2LPEN: CRC2LPEN
0x50000B20 C   FIELD 11w01 HSEMLPEN: HSEMLPEN
0x50000B20 C   FIELD 12w01 IPCCLPEN: IPCCLPEN
0x50000B24 B  REGISTER RCC_MP_AHB3LPENCLRR (rw): This register is used by the MPU in order to clear the PERxLPEN bit
0x50000B24 C   FIELD 00w01 DCMILPEN: DCMILPEN
0x50000B24 C   FIELD 04w01 CRYP2LPEN: CRYP2LPEN
0x50000B24 C   FIELD 05w01 HASH2LPEN: HASH2LPEN
0x50000B24 C   FIELD 06w01 RNG2LPEN: RNG2LPEN
0x50000B24 C   FIELD 07w01 CRC2LPEN: CRC2LPEN
0x50000B24 C   FIELD 11w01 HSEMLPEN: HSEMLPEN
0x50000B24 C   FIELD 12w01 IPCCLPEN: IPCCLPEN
0x50000B28 B  REGISTER RCC_MP_AHB4LPENSETR (rw): This register is used by the MPU
0x50000B28 C   FIELD 00w01 GPIOALPEN: GPIOALPEN
0x50000B28 C   FIELD 01w01 GPIOBLPEN: GPIOBLPEN
0x50000B28 C   FIELD 02w01 GPIOCLPEN: GPIOCLPEN
0x50000B28 C   FIELD 03w01 GPIODLPEN: GPIODLPEN
0x50000B28 C   FIELD 04w01 GPIOELPEN: GPIOELPEN
0x50000B28 C   FIELD 05w01 GPIOFLPEN: GPIOFLPEN
0x50000B28 C   FIELD 06w01 GPIOGLPEN: GPIOGLPEN
0x50000B28 C   FIELD 07w01 GPIOHLPEN: GPIOHLPEN
0x50000B28 C   FIELD 08w01 GPIOILPEN: GPIOILPEN
0x50000B28 C   FIELD 09w01 GPIOJLPEN: GPIOJLPEN
0x50000B28 C   FIELD 10w01 GPIOKLPEN: GPIOKLPEN
0x50000B2C B  REGISTER RCC_MP_AHB4LPENCLRR (rw): This register is used by the MPU
0x50000B2C C   FIELD 00w01 GPIOALPEN: GPIOALPEN
0x50000B2C C   FIELD 01w01 GPIOBLPEN: GPIOBLPEN
0x50000B2C C   FIELD 02w01 GPIOCLPEN: GPIOCLPEN
0x50000B2C C   FIELD 03w01 GPIODLPEN: GPIODLPEN
0x50000B2C C   FIELD 04w01 GPIOELPEN: GPIOELPEN
0x50000B2C C   FIELD 05w01 GPIOFLPEN: GPIOFLPEN
0x50000B2C C   FIELD 06w01 GPIOGLPEN: GPIOGLPEN
0x50000B2C C   FIELD 07w01 GPIOHLPEN: GPIOHLPEN
0x50000B2C C   FIELD 08w01 GPIOILPEN: GPIOILPEN
0x50000B2C C   FIELD 09w01 GPIOJLPEN: GPIOJLPEN
0x50000B2C C   FIELD 10w01 GPIOKLPEN: GPIOKLPEN
0x50000B30 B  REGISTER RCC_MP_AXIMLPENSETR (rw): This register is used by the MPU
0x50000B30 C   FIELD 00w01 SYSRAMLPEN: SYSRAMLPEN
0x50000B34 B  REGISTER RCC_MP_AXIMLPENCLRR (rw): This register is used by the MPU
0x50000B34 C   FIELD 00w01 SYSRAMLPEN: SYSRAMLPEN
0x50000B38 B  REGISTER RCC_MP_MLAHBLPENSETR (rw): This register is used by the MPU in order to set the PERxLPEN bit
0x50000B38 C   FIELD 00w01 SRAM1LPEN: SRAM1LPEN
0x50000B38 C   FIELD 01w01 SRAM2LPEN: SRAM2LPEN
0x50000B38 C   FIELD 02w01 SRAM34LPEN: SRAM34LPEN
0x50000B38 C   FIELD 04w01 RETRAMLPEN: RETRAMLPEN
0x50000B3C B  REGISTER RCC_MP_MLAHBLPENCLRR (rw): This register is used by the MPU in order to clear the PERxLPEN bit
0x50000B3C C   FIELD 00w01 SRAM1LPEN: SRAM1LPEN
0x50000B3C C   FIELD 01w01 SRAM2LPEN: SRAM2LPEN
0x50000B3C C   FIELD 02w01 SRAM34LPEN: SRAM34LPEN
0x50000B3C C   FIELD 04w01 RETRAMLPEN: RETRAMLPEN
0x50000B80 B  REGISTER RCC_MC_APB1LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000B80 C   FIELD 00w01 TIM2LPEN: TIM2LPEN
0x50000B80 C   FIELD 01w01 TIM3LPEN: TIM3LPEN
0x50000B80 C   FIELD 02w01 TIM4LPEN: TIM4LPEN
0x50000B80 C   FIELD 03w01 TIM5LPEN: TIM5LPEN
0x50000B80 C   FIELD 04w01 TIM6LPEN: TIM6LPEN
0x50000B80 C   FIELD 05w01 TIM7LPEN: TIM7LPEN
0x50000B80 C   FIELD 06w01 TIM12LPEN: TIM12LPEN
0x50000B80 C   FIELD 07w01 TIM13LPEN: TIM13LPEN
0x50000B80 C   FIELD 08w01 TIM14LPEN: TIM14LPEN
0x50000B80 C   FIELD 09w01 LPTIM1LPEN: LPTIM1LPEN
0x50000B80 C   FIELD 11w01 SPI2LPEN: SPI2LPEN
0x50000B80 C   FIELD 12w01 SPI3LPEN: SPI3LPEN
0x50000B80 C   FIELD 14w01 USART2LPEN: USART2LPEN
0x50000B80 C   FIELD 15w01 USART3LPEN: USART3LPEN
0x50000B80 C   FIELD 16w01 UART4LPEN: UART4LPEN
0x50000B80 C   FIELD 17w01 UART5LPEN: UART5LPEN
0x50000B80 C   FIELD 18w01 UART7LPEN: UART7LPEN
0x50000B80 C   FIELD 19w01 UART8LPEN: UART8LPEN
0x50000B80 C   FIELD 21w01 I2C1LPEN: I2C1LPEN
0x50000B80 C   FIELD 22w01 I2C2LPEN: I2C2LPEN
0x50000B80 C   FIELD 23w01 I2C3LPEN: I2C3LPEN
0x50000B80 C   FIELD 24w01 I2C5LPEN: I2C5LPEN
0x50000B80 C   FIELD 26w01 SPDIFLPEN: SPDIFLPEN
0x50000B80 C   FIELD 27w01 CECLPEN: CECLPEN
0x50000B80 C   FIELD 28w01 WWDG1LPEN: WWDG1LPEN
0x50000B80 C   FIELD 29w01 DAC12LPEN: DAC12LPEN
0x50000B80 C   FIELD 31w01 MDIOSLPEN: MDIOSLPEN
0x50000B84 B  REGISTER RCC_MC_APB1LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bits
0x50000B84 C   FIELD 00w01 TIM2LPEN: TIM2LPEN
0x50000B84 C   FIELD 01w01 TIM3LPEN: TIM3LPEN
0x50000B84 C   FIELD 02w01 TIM4LPEN: TIM4LPEN
0x50000B84 C   FIELD 03w01 TIM5LPEN: TIM5LPEN
0x50000B84 C   FIELD 04w01 TIM6LPEN: TIM6LPEN
0x50000B84 C   FIELD 05w01 TIM7LPEN: TIM7LPEN
0x50000B84 C   FIELD 06w01 TIM12LPEN: TIM12LPEN
0x50000B84 C   FIELD 07w01 TIM13LPEN: TIM13LPEN
0x50000B84 C   FIELD 08w01 TIM14LPEN: TIM14LPEN
0x50000B84 C   FIELD 09w01 LPTIM1LPEN: LPTIM1LPEN
0x50000B84 C   FIELD 11w01 SPI2LPEN: SPI2LPEN
0x50000B84 C   FIELD 12w01 SPI3LPEN: SPI3LPEN
0x50000B84 C   FIELD 14w01 USART2LPEN: USART2LPEN
0x50000B84 C   FIELD 15w01 USART3LPEN: USART3LPEN
0x50000B84 C   FIELD 16w01 UART4LPEN: UART4LPEN
0x50000B84 C   FIELD 17w01 UART5LPEN: UART5LPEN
0x50000B84 C   FIELD 18w01 UART7LPEN: UART7LPEN
0x50000B84 C   FIELD 19w01 UART8LPEN: UART8LPEN
0x50000B84 C   FIELD 21w01 I2C1LPEN: I2C1LPEN
0x50000B84 C   FIELD 22w01 I2C2LPEN: I2C2LPEN
0x50000B84 C   FIELD 23w01 I2C3LPEN: I2C3LPEN
0x50000B84 C   FIELD 24w01 I2C5LPEN: I2C5LPEN
0x50000B84 C   FIELD 26w01 SPDIFLPEN: SPDIFLPEN
0x50000B84 C   FIELD 27w01 CECLPEN: CECLPEN
0x50000B84 C   FIELD 28w01 WWDG1LPEN: WWDG1LPEN
0x50000B84 C   FIELD 29w01 DAC12LPEN: DAC12LPEN
0x50000B84 C   FIELD 31w01 MDIOSLPEN: MDIOSLPEN
0x50000B88 B  REGISTER RCC_MC_APB2LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000B88 C   FIELD 00w01 TIM1LPEN: TIM1LPEN
0x50000B88 C   FIELD 01w01 TIM8LPEN: TIM8LPEN
0x50000B88 C   FIELD 02w01 TIM15LPEN: TIM15LPEN
0x50000B88 C   FIELD 03w01 TIM16LPEN: TIM16LPEN
0x50000B88 C   FIELD 04w01 TIM17LPEN: TIM17LPEN
0x50000B88 C   FIELD 08w01 SPI1LPEN: SPI1LPEN
0x50000B88 C   FIELD 09w01 SPI4LPEN: SPI4LPEN
0x50000B88 C   FIELD 10w01 SPI5LPEN: SPI5LPEN
0x50000B88 C   FIELD 13w01 USART6LPEN: USART6LPEN
0x50000B88 C   FIELD 16w01 SAI1LPEN: SAI1LPEN
0x50000B88 C   FIELD 17w01 SAI2LPEN: SAI2LPEN
0x50000B88 C   FIELD 18w01 SAI3LPEN: SAI3LPEN
0x50000B88 C   FIELD 20w01 DFSDMLPEN: DFSDMLPEN
0x50000B88 C   FIELD 21w01 ADFSDMLPEN: ADFSDMLPEN
0x50000B88 C   FIELD 24w01 FDCANLPEN: FDCANLPEN
0x50000B8C B  REGISTER RCC_MC_APB2LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit
0x50000B8C C   FIELD 00w01 TIM1LPEN: TIM1LPEN
0x50000B8C C   FIELD 01w01 TIM8LPEN: TIM8LPEN
0x50000B8C C   FIELD 02w01 TIM15LPEN: TIM15LPEN
0x50000B8C C   FIELD 03w01 TIM16LPEN: TIM16LPEN
0x50000B8C C   FIELD 04w01 TIM17LPEN: TIM17LPEN
0x50000B8C C   FIELD 08w01 SPI1LPEN: SPI1LPEN
0x50000B8C C   FIELD 09w01 SPI4LPEN: SPI4LPEN
0x50000B8C C   FIELD 10w01 SPI5LPEN: SPI5LPEN
0x50000B8C C   FIELD 13w01 USART6LPEN: USART6LPEN
0x50000B8C C   FIELD 16w01 SAI1LPEN: SAI1LPEN
0x50000B8C C   FIELD 17w01 SAI2LPEN: SAI2LPEN
0x50000B8C C   FIELD 18w01 SAI3LPEN: SAI3LPEN
0x50000B8C C   FIELD 20w01 DFSDMLPEN: DFSDMLPEN
0x50000B8C C   FIELD 21w01 ADFSDMLPEN: ADFSDMLPEN
0x50000B8C C   FIELD 24w01 FDCANLPEN: FDCANLPEN
0x50000B90 B  REGISTER RCC_MC_APB3LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000B90 C   FIELD 00w01 LPTIM2LPEN: LPTIM2LPEN
0x50000B90 C   FIELD 01w01 LPTIM3LPEN: LPTIM3LPEN
0x50000B90 C   FIELD 02w01 LPTIM4LPEN: LPTIM4LPEN
0x50000B90 C   FIELD 03w01 LPTIM5LPEN: LPTIM5LPEN
0x50000B90 C   FIELD 08w01 SAI4LPEN: SAI4LPEN
0x50000B90 C   FIELD 11w01 SYSCFGLPEN: SYSCFGLPEN
0x50000B90 C   FIELD 13w01 VREFLPEN: VREFLPEN
0x50000B90 C   FIELD 16w01 DTSLPEN: DTSLPEN
0x50000B94 B  REGISTER RCC_MC_APB3LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit
0x50000B94 C   FIELD 00w01 LPTIM2LPEN: LPTIM2LPEN
0x50000B94 C   FIELD 01w01 LPTIM3LPEN: LPTIM3LPEN
0x50000B94 C   FIELD 02w01 LPTIM4LPEN: LPTIM4LPEN
0x50000B94 C   FIELD 03w01 LPTIM5LPEN: LPTIM5LPEN
0x50000B94 C   FIELD 08w01 SAI4LPEN: SAI4LPEN
0x50000B94 C   FIELD 11w01 SYSCFGLPEN: SYSCFGLPEN
0x50000B94 C   FIELD 13w01 VREFLPEN: VREFLPEN
0x50000B94 C   FIELD 16w01 DTSLPEN: DTSLPEN
0x50000B98 B  REGISTER RCC_MC_AHB2LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000B98 C   FIELD 00w01 DMA1LPEN: DMA1LPEN
0x50000B98 C   FIELD 01w01 DMA2LPEN: DMA2LPEN
0x50000B98 C   FIELD 02w01 DMAMUXLPEN: DMAMUXLPEN
0x50000B98 C   FIELD 05w01 ADC12LPEN: ADC12LPEN
0x50000B98 C   FIELD 08w01 USBOLPEN: USBOLPEN
0x50000B98 C   FIELD 16w01 SDMMC3LPEN: SDMMC3LPEN
0x50000B9C B  REGISTER RCC_MC_AHB2LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit
0x50000B9C C   FIELD 00w01 DMA1LPEN: DMA1LPEN
0x50000B9C C   FIELD 01w01 DMA2LPEN: DMA2LPEN
0x50000B9C C   FIELD 02w01 DMAMUXLPEN: DMAMUXLPEN
0x50000B9C C   FIELD 05w01 ADC12LPEN: ADC12LPEN
0x50000B9C C   FIELD 08w01 USBOLPEN: USBOLPEN
0x50000B9C C   FIELD 16w01 SDMMC3LPEN: SDMMC3LPEN
0x50000BA0 B  REGISTER RCC_MC_AHB3LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000BA0 C   FIELD 00w01 DCMILPEN: DCMILPEN
0x50000BA0 C   FIELD 04w01 CRYP2LPEN: CRYP2LPEN
0x50000BA0 C   FIELD 05w01 HASH2LPEN: HASH2LPEN
0x50000BA0 C   FIELD 06w01 RNG2LPEN: RNG2LPEN
0x50000BA0 C   FIELD 07w01 CRC2LPEN: CRC2LPEN
0x50000BA0 C   FIELD 11w01 HSEMLPEN: HSEMLPEN
0x50000BA0 C   FIELD 12w01 IPCCLPEN: IPCCLPEN
0x50000BA4 B  REGISTER RCC_MC_AHB3LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit
0x50000BA4 C   FIELD 00w01 DCMILPEN: DCMILPEN
0x50000BA4 C   FIELD 04w01 CRYP2LPEN: CRYP2LPEN
0x50000BA4 C   FIELD 05w01 HASH2LPEN: HASH2LPEN
0x50000BA4 C   FIELD 06w01 RNG2LPEN: RNG2LPEN
0x50000BA4 C   FIELD 07w01 CRC2LPEN: CRC2LPEN
0x50000BA4 C   FIELD 11w01 HSEMLPEN: HSEMLPEN
0x50000BA4 C   FIELD 12w01 IPCCLPEN: IPCCLPEN
0x50000BA8 B  REGISTER RCC_MC_AHB4LPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit.
0x50000BA8 C   FIELD 00w01 GPIOALPEN: GPIOALPEN
0x50000BA8 C   FIELD 01w01 GPIOBLPEN: GPIOBLPEN
0x50000BA8 C   FIELD 02w01 GPIOCLPEN: GPIOCLPEN
0x50000BA8 C   FIELD 03w01 GPIODLPEN: GPIODLPEN
0x50000BA8 C   FIELD 04w01 GPIOELPEN: GPIOELPEN
0x50000BA8 C   FIELD 05w01 GPIOFLPEN: GPIOFLPEN
0x50000BA8 C   FIELD 06w01 GPIOGLPEN: GPIOGLPEN
0x50000BA8 C   FIELD 07w01 GPIOHLPEN: GPIOHLPEN
0x50000BA8 C   FIELD 08w01 GPIOILPEN: GPIOILPEN
0x50000BA8 C   FIELD 09w01 GPIOJLPEN: GPIOJLPEN
0x50000BA8 C   FIELD 10w01 GPIOKLPEN: GPIOKLPEN
0x50000BAC B  REGISTER RCC_MC_AHB4LPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit of the corresponding peripheral.
0x50000BAC C   FIELD 00w01 GPIOALPEN: GPIOALPEN
0x50000BAC C   FIELD 01w01 GPIOBLPEN: GPIOBLPEN
0x50000BAC C   FIELD 02w01 GPIOCLPEN: GPIOCLPEN
0x50000BAC C   FIELD 03w01 GPIODLPEN: GPIODLPEN
0x50000BAC C   FIELD 04w01 GPIOELPEN: GPIOELPEN
0x50000BAC C   FIELD 05w01 GPIOFLPEN: GPIOFLPEN
0x50000BAC C   FIELD 06w01 GPIOGLPEN: GPIOGLPEN
0x50000BAC C   FIELD 07w01 GPIOHLPEN: GPIOHLPEN
0x50000BAC C   FIELD 08w01 GPIOILPEN: GPIOILPEN
0x50000BAC C   FIELD 09w01 GPIOJLPEN: GPIOJLPEN
0x50000BAC C   FIELD 10w01 GPIOKLPEN: GPIOKLPEN
0x50000BB0 B  REGISTER RCC_MC_AXIMLPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit of the corresponding peripheral.
0x50000BB0 C   FIELD 00w01 SYSRAMLPEN: SYSRAMLPEN
0x50000BB4 B  REGISTER RCC_MC_AXIMLPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit of the corresponding peripheral.
0x50000BB4 C   FIELD 00w01 SYSRAMLPEN: SYSRAMLPEN
0x50000BB8 B  REGISTER RCC_MC_MLAHBLPENSETR (rw): This register is used by the MCU in order to set the PERxLPEN bit of the corresponding peripheral.
0x50000BB8 C   FIELD 00w01 SRAM1LPEN: SRAM1LPEN
0x50000BB8 C   FIELD 01w01 SRAM2LPEN: SRAM2LPEN
0x50000BB8 C   FIELD 02w01 SRAM34LPEN: SRAM34LPEN
0x50000BB8 C   FIELD 04w01 RETRAMLPEN: RETRAMLPEN
0x50000BBC B  REGISTER RCC_MC_MLAHBLPENCLRR (rw): This register is used by the MCU in order to clear the PERxLPEN bit of the corresponding peripheral.
0x50000BBC C   FIELD 00w01 SRAM1LPEN: SRAM1LPEN
0x50000BBC C   FIELD 01w01 SRAM2LPEN: SRAM2LPEN
0x50000BBC C   FIELD 02w01 SRAM34LPEN: SRAM34LPEN
0x50000BBC C   FIELD 04w01 RETRAMLPEN: RETRAMLPEN
0x50000C00 B  REGISTER RCC_MC_RSTSCLRR (rw): This register is used by the MCU to check the reset source.
0x50000C00 C   FIELD 00w01 PORRSTF: PORRSTF
0x50000C00 C   FIELD 01w01 BORRSTF: BORRSTF
0x50000C00 C   FIELD 02w01 PADRSTF: PADRSTF
0x50000C00 C   FIELD 03w01 HCSSRSTF: HCSSRSTF
0x50000C00 C   FIELD 04w01 VCORERSTF: VCORERSTF
0x50000C00 C   FIELD 05w01 MCURSTF: MCURSTF
0x50000C00 C   FIELD 06w01 MPSYSRSTF: MPSYSRSTF
0x50000C00 C   FIELD 07w01 MCSYSRSTF: MCSYSRSTF
0x50000C00 C   FIELD 08w01 IWDG1RSTF: IWDG1RSTF
0x50000C00 C   FIELD 09w01 IWDG2RSTF: IWDG2RSTF
0x50000C00 C   FIELD 10w01 WWDG1RSTF: WWDG1RSTF
0x50000C14 B  REGISTER RCC_MC_CIER (rw): This register shall be used by the MCU to control the interrupt source enable. Refer to Section10.5: RCC interrupts for more details.
0x50000C14 C   FIELD 00w01 LSIRDYIE: LSIRDYIE
0x50000C14 C   FIELD 01w01 LSERDYIE: LSERDYIE
0x50000C14 C   FIELD 02w01 HSIRDYIE: HSIRDYIE
0x50000C14 C   FIELD 03w01 HSERDYIE: HSERDYIE
0x50000C14 C   FIELD 04w01 CSIRDYIE: CSIRDYIE
0x50000C14 C   FIELD 08w01 PLL1DYIE: PLL1DYIE
0x50000C14 C   FIELD 09w01 PLL2DYIE: PLL2DYIE
0x50000C14 C   FIELD 10w01 PLL3DYIE: PLL3DYIE
0x50000C14 C   FIELD 11w01 PLL4DYIE: PLL4DYIE
0x50000C14 C   FIELD 16w01 LSECSSIE: LSECSSIE
0x50000C14 C   FIELD 20w01 WKUPIE: WKUPIE
0x50000C18 B  REGISTER RCC_MC_CIFR (rw): This register shall be used by the MCU in order to read and clear the interrupt flags.
0x50000C18 C   FIELD 00w01 LSIRDYF: LSIRDYF
0x50000C18 C   FIELD 01w01 LSERDYF: LSERDYF
0x50000C18 C   FIELD 02w01 HSIRDYF: HSIRDYF
0x50000C18 C   FIELD 03w01 HSERDYF: HSERDYF
0x50000C18 C   FIELD 04w01 CSIRDYF: CSIRDYF
0x50000C18 C   FIELD 08w01 PLL1DYF: PLL1DYF
0x50000C18 C   FIELD 09w01 PLL2DYF: PLL2DYF
0x50000C18 C   FIELD 10w01 PLL3DYF: PLL3DYF
0x50000C18 C   FIELD 11w01 PLL4DYF: PLL4DYF
0x50000C18 C   FIELD 16w01 LSECSSF: LSECSSF
0x50000C18 C   FIELD 20w01 WKUPF: WKUPF
0x50000FF4 B  REGISTER RCC_VERR (ro): This register gives the IP version
0x50000FF4 C   FIELD 00w04 MINREV: MINREV
0x50000FF4 C   FIELD 04w04 MAJREV: MAJREV
0x50000FF8 B  REGISTER RCC_IDR (ro): This register gives the unique identifier of the RCC
0x50000FF8 C   FIELD 00w32 ID: ID
0x50000FFC B  REGISTER RCC_SIDR (ro): This register gives the decoding space, which is for the RCC of 4 kB.
0x50000FFC C   FIELD 00w32 SID: SID
0x50001000 A PERIPHERAL PWR
0x50001000 B  REGISTER PWR_CR1 (rw): Reset on any system reset. This register provides write access security when enabled by TZEN register bit in Section10: Reset and clock control (RCC). When security is enabled a non-secure write access generates a bus error. Secure and non-secure read accesses are granted and return the register value.
0x50001000 C   FIELD 00w01 LPDS: LPDS
0x50001000 C   FIELD 01w01 LPCFG: LPCFG
0x50001000 C   FIELD 02w01 LVDS: LVDS
0x50001000 C   FIELD 04w01 PVDEN: PVDEN
0x50001000 C   FIELD 05w03 PLS: PLS
0x50001000 C   FIELD 08w01 DBP: DBP
0x50001000 C   FIELD 16w01 AVDEN: AVDEN
0x50001000 C   FIELD 17w02 ALS: ALS
0x50001004 B  REGISTER PWR_CSR1 (ro): Reset on any system reset.
0x50001004 C   FIELD 04w01 PVDO: PVDO
0x50001004 C   FIELD 16w01 AVDO: AVDO
0x50001008 B  REGISTER PWR_CR2: Not reset by wakeup from Standby mode, Application reset (NRST, IWDG, ...) and VDD POR, but reset only by VSW POR and VSWRST. Access 6 wait states when writing this register. After reset the register is write-protected and the DBP bit in the PWR control register 1 (PWR_CR1) has to be set before it can be written. When DBP is cleared, there is no bus errors generated when writing this register. This register shall not be accessed when the RCC VSWRST register bit in Section10.7.89: RCC Backup Domain Control Register (RCC_BDCR) resets the VSW domain. This register provides Write access security when enabled by TZEN register bit in Section10.7.2: RCC TrustZone Control Register (RCC_TZCR). When security is enabled a non-secure write access generates a bus error. Secure and non-secure read accesses are granted and return the register value. When a system reset occurs during the register write cycle the written data is not guaranteed.
0x50001008 C   FIELD 00w01 BREN (rw): BREN
0x50001008 C   FIELD 01w01 RREN (rw): RREN
0x50001008 C   FIELD 04w01 MONEN (rw): MONEN
0x50001008 C   FIELD 16w01 BRRDY (ro): BRRDY
0x50001008 C   FIELD 17w01 RRRDY (ro): RRRDY
0x50001008 C   FIELD 20w01 VBATL (ro): VBATL
0x50001008 C   FIELD 21w01 VBATH (ro): VBATH
0x50001008 C   FIELD 22w01 TEMPL (ro): TEMPL
0x50001008 C   FIELD 23w01 TEMPH (ro): TEMPH
0x5000100C B  REGISTER PWR_CR3: Not reset by wakeup from Standby mode and Application reset (such as NRST, IWDG) but only reset by VDD POR. Access 6 wait states when writing this register. This register provides Write access security when enabled by TZEN register bit in Section10: Reset and clock control (RCC). When security is enabled a non-secure write access generates a bus error. Secure and non-secure read accesses are granted and return the register value. When a system reset occurs during the register write cycle the written data is not guaranteed.
0x5000100C C   FIELD 08w01 VBE (rw): VBE
0x5000100C C   FIELD 09w01 VBRS (rw): VBRS
0x5000100C C   FIELD 10w01 DDRSREN (rw): DDRSREN
0x5000100C C   FIELD 11w01 DDRSRDIS (rw): DDRSRDIS
0x5000100C C   FIELD 12w01 DDRRETEN (rw): DDRRETEN
0x5000100C C   FIELD 17w05 POPL (rw): POPL
0x5000100C C   FIELD 24w01 USB33DEN (rw): USB33DEN
0x5000100C C   FIELD 26w01 USB33RDY (ro): USB33RDY
0x5000100C C   FIELD 28w01 REG18EN (rw): REG18EN
0x5000100C C   FIELD 29w01 REG18RDY (ro): REG18RDY
0x5000100C C   FIELD 30w01 REG11EN (rw): REG11EN
0x5000100C C   FIELD 31w01 REG11RDY (ro): REG11RDY
0x50001010 B  REGISTER PWR_MPUCR: See individual bits for reset condition. Access 6 wait states when writing this register. This register provides Write access security when enabled by TZEN register bit in Section10: Reset and clock control (RCC). When security is enabled a non-secure write access generates a bus error. Secure and non-secure read accesses are granted and return the register value. When a system reset occurs during the register write cycle the written data is not guaranteed.
0x50001010 C   FIELD 00w01 PDDS (rw): PDDS
0x50001010 C   FIELD 03w01 CSTBYDIS (rw): CSTBYDIS
0x50001010 C   FIELD 05w01 STOPF (ro): STOPF
0x50001010 C   FIELD 06w01 SBF (ro): SBF
0x50001010 C   FIELD 07w01 SBFMPU (ro): SBFMPU
0x50001010 C   FIELD 09w01 CSSF (rw): CSSF
0x50001010 C   FIELD 15w01 STANDBYWFIL2 (ro): STANDBYWFIL2
0x50001014 B  REGISTER PWR_MCUCR: See individual bits for reset condition. Access 6 wait states when writing this register. This register is always non-secure. When a system reset occurs during the register write cycle the written data is not guaranteed.
0x50001014 C   FIELD 00w01 PDDS (rw): PDDS
0x50001014 C   FIELD 05w01 STOPF (ro): STOPF
0x50001014 C   FIELD 06w01 SBF (ro): SBF
0x50001014 C   FIELD 09w01 CSSF (rw): CSSF
0x50001014 C   FIELD 15w01 DEEPSLEEP (ro): DEEPSLEEP
0x50001020 B  REGISTER PWR_WKUPCR (rw): Not reset by wakeup from Standby mode, but by any application reset (such as NRST, IWDG). Access 6 wait states when writing this register (when clearing a WKUPF, the AHB write access completes after the WKUPF has cleared). This register provides Write access security when enabled by TZEN register bit in Section10: Reset and clock control (RCC). When security is enabled a non-secure write access on individual WKUPC[6:1], WKUPP[6:1] bits and WKUPPUPD[6:1] bit pairs are discarded when the corresponding WKUPEN[6:1] bit in PWR MPU wakeup enable register (PWR_MPUWKUPENR) is set. No bus error is generated. Secure and non-secure read accesses are granted and return the register value. When a system reset occurs during the register write cycle the written data is not guaranteed.
0x50001020 C   FIELD 00w01 WKUPC1: WKUPC1
0x50001020 C   FIELD 01w01 WKUPC2: WKUPC2
0x50001020 C   FIELD 02w01 WKUPC3: WKUPC3
0x50001020 C   FIELD 03w01 WKUPC4: WKUPC4
0x50001020 C   FIELD 04w01 WKUPC5: WKUPC5
0x50001020 C   FIELD 05w01 WKUPC6: WKUPC6
0x50001020 C   FIELD 08w01 WKUPP1: WKUPP1
0x50001020 C   FIELD 09w01 WKUPP2: WKUPP2
0x50001020 C   FIELD 10w01 WKUPP3: WKUPP3
0x50001020 C   FIELD 11w01 WKUPP4: WKUPP4
0x50001020 C   FIELD 12w01 WKUPP5: WKUPP5
0x50001020 C   FIELD 13w01 WKUPP6: WKUPP6
0x50001020 C   FIELD 16w02 WKUPPUPD1: WKUPPUPD1
0x50001020 C   FIELD 18w02 WKUPPUPD2: WKUPPUPD2
0x50001020 C   FIELD 20w02 WKUPPUPD3: WKUPPUPD3
0x50001020 C   FIELD 22w02 WKUPPUPD4: WKUPPUPD4
0x50001020 C   FIELD 24w02 WKUPPUPD5: WKUPPUPD5
0x50001020 C   FIELD 26w02 WKUPPUPD6: WKUPPUPD6
0x50001024 B  REGISTER PWR_WKUPFR (ro): Not reset by wakeup from Standby mode but by any Application reset (NRST, IWDG, ...)
0x50001024 C   FIELD 00w01 WKUPF1: WKUPF1
0x50001024 C   FIELD 01w01 WKUPF2: WKUPF2
0x50001024 C   FIELD 02w01 WKUPF3: WKUPF3
0x50001024 C   FIELD 03w01 WKUPF4: WKUPF4
0x50001024 C   FIELD 04w01 WKUPF5: WKUPF5
0x50001024 C   FIELD 05w01 WKUPF6: WKUPF6
0x50001028 B  REGISTER PWR_MPUWKUPENR (rw): Not reset by wakeup from Standby mode but by any Application reset (NRST, IWDG, ...). Access 6 wait states when writing this register. This register provides Write access security when enabled by TZEN register bit in Section10: Reset and clock control (RCC). When security is enabled a non-secure write access is discarded and a bus error is generated. Secure and non-secure read accesses are granted and return the register value. When a system reset occurs during the register write cycle the written data is not guaranteed.
0x50001028 C   FIELD 00w01 WKUPEN1: WKUPEN1
0x50001028 C   FIELD 01w01 WKUPEN2: WKUPEN2
0x50001028 C   FIELD 02w01 WKUPEN3: WKUPEN3
0x50001028 C   FIELD 03w01 WKUPEN4: WKUPEN4
0x50001028 C   FIELD 04w01 WKUPEN5: WKUPEN5
0x50001028 C   FIELD 05w01 WKUPEN6: WKUPEN6
0x5000102C B  REGISTER PWR_MCUWKUPENR (rw): Not reset by wakeup from Standby mode but by any Application reset (NRST, IWDG, ...) Access 6 wait states when writing this register. When a system reset occurs during the register write cycle the written data is not guaranteed.
0x5000102C C   FIELD 00w01 WKUPEN1: WKUPEN1
0x5000102C C   FIELD 01w01 WKUPEN2: WKUPEN2
0x5000102C C   FIELD 02w01 WKUPEN3: WKUPEN3
0x5000102C C   FIELD 03w01 WKUPEN4: WKUPEN4
0x5000102C C   FIELD 04w01 WKUPEN5: WKUPEN5
0x5000102C C   FIELD 05w01 WKUPEN6: WKUPEN6
0x500013F4 B  REGISTER PWR_VER (ro): PWR IP version register
0x500013F4 C   FIELD 00w04 MINREV: MINREV
0x500013F4 C   FIELD 04w04 MAJREV: MAJREV
0x500013F8 B  REGISTER PWR_ID (ro): PWR IP identification register
0x500013F8 C   FIELD 00w32 IPID: IPID
0x500013FC B  REGISTER PWR_SID (ro): PWR size ID register
0x500013FC C   FIELD 00w32 SID: SID
0x50002000 A PERIPHERAL GPIOA
0x50002000 B  REGISTER GPIOA_MODER (rw): GPIO port mode register
0x50002000 C   FIELD 00w02 MODER0: MODER0
0x50002000 C   FIELD 02w02 MODER1: MODER1
0x50002000 C   FIELD 04w02 MODER2: MODER2
0x50002000 C   FIELD 06w02 MODER3: MODER3
0x50002000 C   FIELD 08w02 MODER4: MODER4
0x50002000 C   FIELD 10w02 MODER5: MODER5
0x50002000 C   FIELD 12w02 MODER6: MODER6
0x50002000 C   FIELD 14w02 MODER7: MODER7
0x50002000 C   FIELD 16w02 MODER8: MODER8
0x50002000 C   FIELD 18w02 MODER9: MODER9
0x50002000 C   FIELD 20w02 MODER10: MODER10
0x50002000 C   FIELD 22w02 MODER11: MODER11
0x50002000 C   FIELD 24w02 MODER12: MODER12
0x50002000 C   FIELD 26w02 MODER13: MODER13
0x50002000 C   FIELD 28w02 MODER14: MODER14
0x50002000 C   FIELD 30w02 MODER15: MODER15
0x50002004 B  REGISTER GPIOA_OTYPER (rw): GPIO port output type register
0x50002004 C   FIELD 00w01 OT0: OT0
0x50002004 C   FIELD 01w01 OT1: OT1
0x50002004 C   FIELD 02w01 OT2: OT2
0x50002004 C   FIELD 03w01 OT3: OT3
0x50002004 C   FIELD 04w01 OT4: OT4
0x50002004 C   FIELD 05w01 OT5: OT5
0x50002004 C   FIELD 06w01 OT6: OT6
0x50002004 C   FIELD 07w01 OT7: OT7
0x50002004 C   FIELD 08w01 OT8: OT8
0x50002004 C   FIELD 09w01 OT9: OT9
0x50002004 C   FIELD 10w01 OT10: OT10
0x50002004 C   FIELD 11w01 OT11: OT11
0x50002004 C   FIELD 12w01 OT12: OT12
0x50002004 C   FIELD 13w01 OT13: OT13
0x50002004 C   FIELD 14w01 OT14: OT14
0x50002004 C   FIELD 15w01 OT15: OT15
0x50002008 B  REGISTER GPIOA_OSPEEDR (rw): GPIO port output speed register
0x50002008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x50002008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x50002008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x50002008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x50002008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x50002008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x50002008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x50002008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x50002008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x50002008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x50002008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x50002008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x50002008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x50002008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x50002008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x50002008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000200C B  REGISTER GPIOA_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000200C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000200C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000200C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000200C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000200C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000200C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000200C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000200C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000200C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000200C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000200C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000200C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000200C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000200C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000200C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000200C C   FIELD 30w02 PUPDR15: PUPDR15
0x50002010 B  REGISTER GPIOA_IDR (ro): GPIO port input data register
0x50002010 C   FIELD 00w01 IDR0: IDR0
0x50002010 C   FIELD 01w01 IDR1: IDR1
0x50002010 C   FIELD 02w01 IDR2: IDR2
0x50002010 C   FIELD 03w01 IDR3: IDR3
0x50002010 C   FIELD 04w01 IDR4: IDR4
0x50002010 C   FIELD 05w01 IDR5: IDR5
0x50002010 C   FIELD 06w01 IDR6: IDR6
0x50002010 C   FIELD 07w01 IDR7: IDR7
0x50002010 C   FIELD 08w01 IDR8: IDR8
0x50002010 C   FIELD 09w01 IDR9: IDR9
0x50002010 C   FIELD 10w01 IDR10: IDR10
0x50002010 C   FIELD 11w01 IDR11: IDR11
0x50002010 C   FIELD 12w01 IDR12: IDR12
0x50002010 C   FIELD 13w01 IDR13: IDR13
0x50002010 C   FIELD 14w01 IDR14: IDR14
0x50002010 C   FIELD 15w01 IDR15: IDR15
0x50002014 B  REGISTER GPIOA_ODR (rw): GPIO port output data register
0x50002014 C   FIELD 00w01 ODR0: ODR0
0x50002014 C   FIELD 01w01 ODR1: ODR1
0x50002014 C   FIELD 02w01 ODR2: ODR2
0x50002014 C   FIELD 03w01 ODR3: ODR3
0x50002014 C   FIELD 04w01 ODR4: ODR4
0x50002014 C   FIELD 05w01 ODR5: ODR5
0x50002014 C   FIELD 06w01 ODR6: ODR6
0x50002014 C   FIELD 07w01 ODR7: ODR7
0x50002014 C   FIELD 08w01 ODR8: ODR8
0x50002014 C   FIELD 09w01 ODR9: ODR9
0x50002014 C   FIELD 10w01 ODR10: ODR10
0x50002014 C   FIELD 11w01 ODR11: ODR11
0x50002014 C   FIELD 12w01 ODR12: ODR12
0x50002014 C   FIELD 13w01 ODR13: ODR13
0x50002014 C   FIELD 14w01 ODR14: ODR14
0x50002014 C   FIELD 15w01 ODR15: ODR15
0x50002018 B  REGISTER GPIOA_BSRR (wo): GPIO port bit set/reset register
0x50002018 C   FIELD 00w01 BS0: BS0
0x50002018 C   FIELD 01w01 BS1: BS1
0x50002018 C   FIELD 02w01 BS2: BS2
0x50002018 C   FIELD 03w01 BS3: BS3
0x50002018 C   FIELD 04w01 BS4: BS4
0x50002018 C   FIELD 05w01 BS5: BS5
0x50002018 C   FIELD 06w01 BS6: BS6
0x50002018 C   FIELD 07w01 BS7: BS7
0x50002018 C   FIELD 08w01 BS8: BS8
0x50002018 C   FIELD 09w01 BS9: BS9
0x50002018 C   FIELD 10w01 BS10: BS10
0x50002018 C   FIELD 11w01 BS11: BS11
0x50002018 C   FIELD 12w01 BS12: BS12
0x50002018 C   FIELD 13w01 BS13: BS13
0x50002018 C   FIELD 14w01 BS14: BS14
0x50002018 C   FIELD 15w01 BS15: BS15
0x50002018 C   FIELD 16w01 BR0: BR0
0x50002018 C   FIELD 17w01 BR1: BR1
0x50002018 C   FIELD 18w01 BR2: BR2
0x50002018 C   FIELD 19w01 BR3: BR3
0x50002018 C   FIELD 20w01 BR4: BR4
0x50002018 C   FIELD 21w01 BR5: BR5
0x50002018 C   FIELD 22w01 BR6: BR6
0x50002018 C   FIELD 23w01 BR7: BR7
0x50002018 C   FIELD 24w01 BR8: BR8
0x50002018 C   FIELD 25w01 BR9: BR9
0x50002018 C   FIELD 26w01 BR10: BR10
0x50002018 C   FIELD 27w01 BR11: BR11
0x50002018 C   FIELD 28w01 BR12: BR12
0x50002018 C   FIELD 29w01 BR13: BR13
0x50002018 C   FIELD 30w01 BR14: BR14
0x50002018 C   FIELD 31w01 BR15: BR15
0x5000201C B  REGISTER GPIOA_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000201C C   FIELD 00w01 LCK0: LCK0
0x5000201C C   FIELD 01w01 LCK1: LCK1
0x5000201C C   FIELD 02w01 LCK2: LCK2
0x5000201C C   FIELD 03w01 LCK3: LCK3
0x5000201C C   FIELD 04w01 LCK4: LCK4
0x5000201C C   FIELD 05w01 LCK5: LCK5
0x5000201C C   FIELD 06w01 LCK6: LCK6
0x5000201C C   FIELD 07w01 LCK7: LCK7
0x5000201C C   FIELD 08w01 LCK8: LCK8
0x5000201C C   FIELD 09w01 LCK9: LCK9
0x5000201C C   FIELD 10w01 LCK10: LCK10
0x5000201C C   FIELD 11w01 LCK11: LCK11
0x5000201C C   FIELD 12w01 LCK12: LCK12
0x5000201C C   FIELD 13w01 LCK13: LCK13
0x5000201C C   FIELD 14w01 LCK14: LCK14
0x5000201C C   FIELD 15w01 LCK15: LCK15
0x5000201C C   FIELD 16w01 LCKK: LCKK
0x50002020 B  REGISTER GPIOA_AFRL (rw): GPIO alternate function low register
0x50002020 C   FIELD 00w04 AFR0: AFR0
0x50002020 C   FIELD 04w04 AFR1: AFR1
0x50002020 C   FIELD 08w04 AFR2: AFR2
0x50002020 C   FIELD 12w04 AFR3: AFR3
0x50002020 C   FIELD 16w04 AFR4: AFR4
0x50002020 C   FIELD 20w04 AFR5: AFR5
0x50002020 C   FIELD 24w04 AFR6: AFR6
0x50002020 C   FIELD 28w04 AFR7: AFR7
0x50002024 B  REGISTER GPIOA_AFRH (rw): GPIO alternate function high register
0x50002024 C   FIELD 00w04 AFR8: AFR8
0x50002024 C   FIELD 04w04 AFR9: AFR9
0x50002024 C   FIELD 08w04 AFR10: AFR10
0x50002024 C   FIELD 12w04 AFR11: AFR11
0x50002024 C   FIELD 16w04 AFR12: AFR12
0x50002024 C   FIELD 20w04 AFR13: AFR13
0x50002024 C   FIELD 24w04 AFR14: AFR14
0x50002024 C   FIELD 28w04 AFR15: AFR15
0x50002028 B  REGISTER GPIOA_BRR (wo): GPIO port bit reset register
0x50002028 C   FIELD 00w01 BR0: BR0
0x50002028 C   FIELD 01w01 BR1: BR1
0x50002028 C   FIELD 02w01 BR2: BR2
0x50002028 C   FIELD 03w01 BR3: BR3
0x50002028 C   FIELD 04w01 BR4: BR4
0x50002028 C   FIELD 05w01 BR5: BR5
0x50002028 C   FIELD 06w01 BR6: BR6
0x50002028 C   FIELD 07w01 BR7: BR7
0x50002028 C   FIELD 08w01 BR8: BR8
0x50002028 C   FIELD 09w01 BR9: BR9
0x50002028 C   FIELD 10w01 BR10: BR10
0x50002028 C   FIELD 11w01 BR11: BR11
0x50002028 C   FIELD 12w01 BR12: BR12
0x50002028 C   FIELD 13w01 BR13: BR13
0x50002028 C   FIELD 14w01 BR14: BR14
0x50002028 C   FIELD 15w01 BR15: BR15
0x500023C8 B  REGISTER GPIOA_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x500023C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x500023C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x500023C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x500023C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x500023C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x500023C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x500023CC B  REGISTER GPIOA_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500023CC C   FIELD 00w16 EN_IO: EN_IO
0x500023D0 B  REGISTER GPIOA_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500023D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x500023D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x500023D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x500023D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x500023D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x500023D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x500023D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x500023D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x500023D4 B  REGISTER GPIOA_HWCFGR7 (ro): GPIO hardware configuration register 7
0x500023D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x500023D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x500023D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x500023D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x500023D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x500023D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x500023D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x500023D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x500023D8 B  REGISTER GPIOA_HWCFGR6 (ro): GPIO hardware configuration register 6
0x500023D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x500023DC B  REGISTER GPIOA_HWCFGR5 (ro): GPIO hardware configuration register 5
0x500023DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x500023E0 B  REGISTER GPIOA_HWCFGR4 (ro): GPIO hardware configuration register 4
0x500023E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x500023E4 B  REGISTER GPIOA_HWCFGR3 (ro): GPIO hardware configuration register 3
0x500023E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x500023E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x500023E8 B  REGISTER GPIOA_HWCFGR2 (ro): GPIO hardware configuration register 2
0x500023E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x500023EC B  REGISTER GPIOA_HWCFGR1 (ro): GPIO hardware configuration register 1
0x500023EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x500023F0 B  REGISTER GPIOA_HWCFGR0 (ro): GPIO hardware configuration register 0
0x500023F0 C   FIELD 00w16 OR_RES: OR_RES
0x500023F4 B  REGISTER GPIOA_VERR (ro): GPIO version register
0x500023F4 C   FIELD 00w04 MINREV: MINREV
0x500023F4 C   FIELD 04w04 MAJREV: MAJREV
0x500023F8 B  REGISTER GPIOA_IPIDR (ro): GPIO identification register
0x500023F8 C   FIELD 00w32 IPIDR: IPIDR
0x500023FC B  REGISTER GPIOA_SIDR (ro): GPIO size identification register
0x500023FC C   FIELD 00w32 SIDR: SIDR
0x50003000 A PERIPHERAL GPIOB
0x50003000 B  REGISTER GPIOB_MODER (rw): GPIO port mode register
0x50003000 C   FIELD 00w02 MODER0: MODER0
0x50003000 C   FIELD 02w02 MODER1: MODER1
0x50003000 C   FIELD 04w02 MODER2: MODER2
0x50003000 C   FIELD 06w02 MODER3: MODER3
0x50003000 C   FIELD 08w02 MODER4: MODER4
0x50003000 C   FIELD 10w02 MODER5: MODER5
0x50003000 C   FIELD 12w02 MODER6: MODER6
0x50003000 C   FIELD 14w02 MODER7: MODER7
0x50003000 C   FIELD 16w02 MODER8: MODER8
0x50003000 C   FIELD 18w02 MODER9: MODER9
0x50003000 C   FIELD 20w02 MODER10: MODER10
0x50003000 C   FIELD 22w02 MODER11: MODER11
0x50003000 C   FIELD 24w02 MODER12: MODER12
0x50003000 C   FIELD 26w02 MODER13: MODER13
0x50003000 C   FIELD 28w02 MODER14: MODER14
0x50003000 C   FIELD 30w02 MODER15: MODER15
0x50003004 B  REGISTER GPIOB_OTYPER (rw): GPIO port output type register
0x50003004 C   FIELD 00w01 OT0: OT0
0x50003004 C   FIELD 01w01 OT1: OT1
0x50003004 C   FIELD 02w01 OT2: OT2
0x50003004 C   FIELD 03w01 OT3: OT3
0x50003004 C   FIELD 04w01 OT4: OT4
0x50003004 C   FIELD 05w01 OT5: OT5
0x50003004 C   FIELD 06w01 OT6: OT6
0x50003004 C   FIELD 07w01 OT7: OT7
0x50003004 C   FIELD 08w01 OT8: OT8
0x50003004 C   FIELD 09w01 OT9: OT9
0x50003004 C   FIELD 10w01 OT10: OT10
0x50003004 C   FIELD 11w01 OT11: OT11
0x50003004 C   FIELD 12w01 OT12: OT12
0x50003004 C   FIELD 13w01 OT13: OT13
0x50003004 C   FIELD 14w01 OT14: OT14
0x50003004 C   FIELD 15w01 OT15: OT15
0x50003008 B  REGISTER GPIOB_OSPEEDR (rw): GPIO port output speed register
0x50003008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x50003008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x50003008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x50003008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x50003008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x50003008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x50003008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x50003008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x50003008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x50003008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x50003008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x50003008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x50003008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x50003008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x50003008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x50003008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000300C B  REGISTER GPIOB_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000300C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000300C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000300C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000300C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000300C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000300C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000300C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000300C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000300C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000300C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000300C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000300C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000300C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000300C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000300C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000300C C   FIELD 30w02 PUPDR15: PUPDR15
0x50003010 B  REGISTER GPIOB_IDR (ro): GPIO port input data register
0x50003010 C   FIELD 00w01 IDR0: IDR0
0x50003010 C   FIELD 01w01 IDR1: IDR1
0x50003010 C   FIELD 02w01 IDR2: IDR2
0x50003010 C   FIELD 03w01 IDR3: IDR3
0x50003010 C   FIELD 04w01 IDR4: IDR4
0x50003010 C   FIELD 05w01 IDR5: IDR5
0x50003010 C   FIELD 06w01 IDR6: IDR6
0x50003010 C   FIELD 07w01 IDR7: IDR7
0x50003010 C   FIELD 08w01 IDR8: IDR8
0x50003010 C   FIELD 09w01 IDR9: IDR9
0x50003010 C   FIELD 10w01 IDR10: IDR10
0x50003010 C   FIELD 11w01 IDR11: IDR11
0x50003010 C   FIELD 12w01 IDR12: IDR12
0x50003010 C   FIELD 13w01 IDR13: IDR13
0x50003010 C   FIELD 14w01 IDR14: IDR14
0x50003010 C   FIELD 15w01 IDR15: IDR15
0x50003014 B  REGISTER GPIOB_ODR (rw): GPIO port output data register
0x50003014 C   FIELD 00w01 ODR0: ODR0
0x50003014 C   FIELD 01w01 ODR1: ODR1
0x50003014 C   FIELD 02w01 ODR2: ODR2
0x50003014 C   FIELD 03w01 ODR3: ODR3
0x50003014 C   FIELD 04w01 ODR4: ODR4
0x50003014 C   FIELD 05w01 ODR5: ODR5
0x50003014 C   FIELD 06w01 ODR6: ODR6
0x50003014 C   FIELD 07w01 ODR7: ODR7
0x50003014 C   FIELD 08w01 ODR8: ODR8
0x50003014 C   FIELD 09w01 ODR9: ODR9
0x50003014 C   FIELD 10w01 ODR10: ODR10
0x50003014 C   FIELD 11w01 ODR11: ODR11
0x50003014 C   FIELD 12w01 ODR12: ODR12
0x50003014 C   FIELD 13w01 ODR13: ODR13
0x50003014 C   FIELD 14w01 ODR14: ODR14
0x50003014 C   FIELD 15w01 ODR15: ODR15
0x50003018 B  REGISTER GPIOB_BSRR (wo): GPIO port bit set/reset register
0x50003018 C   FIELD 00w01 BS0: BS0
0x50003018 C   FIELD 01w01 BS1: BS1
0x50003018 C   FIELD 02w01 BS2: BS2
0x50003018 C   FIELD 03w01 BS3: BS3
0x50003018 C   FIELD 04w01 BS4: BS4
0x50003018 C   FIELD 05w01 BS5: BS5
0x50003018 C   FIELD 06w01 BS6: BS6
0x50003018 C   FIELD 07w01 BS7: BS7
0x50003018 C   FIELD 08w01 BS8: BS8
0x50003018 C   FIELD 09w01 BS9: BS9
0x50003018 C   FIELD 10w01 BS10: BS10
0x50003018 C   FIELD 11w01 BS11: BS11
0x50003018 C   FIELD 12w01 BS12: BS12
0x50003018 C   FIELD 13w01 BS13: BS13
0x50003018 C   FIELD 14w01 BS14: BS14
0x50003018 C   FIELD 15w01 BS15: BS15
0x50003018 C   FIELD 16w01 BR0: BR0
0x50003018 C   FIELD 17w01 BR1: BR1
0x50003018 C   FIELD 18w01 BR2: BR2
0x50003018 C   FIELD 19w01 BR3: BR3
0x50003018 C   FIELD 20w01 BR4: BR4
0x50003018 C   FIELD 21w01 BR5: BR5
0x50003018 C   FIELD 22w01 BR6: BR6
0x50003018 C   FIELD 23w01 BR7: BR7
0x50003018 C   FIELD 24w01 BR8: BR8
0x50003018 C   FIELD 25w01 BR9: BR9
0x50003018 C   FIELD 26w01 BR10: BR10
0x50003018 C   FIELD 27w01 BR11: BR11
0x50003018 C   FIELD 28w01 BR12: BR12
0x50003018 C   FIELD 29w01 BR13: BR13
0x50003018 C   FIELD 30w01 BR14: BR14
0x50003018 C   FIELD 31w01 BR15: BR15
0x5000301C B  REGISTER GPIOB_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000301C C   FIELD 00w01 LCK0: LCK0
0x5000301C C   FIELD 01w01 LCK1: LCK1
0x5000301C C   FIELD 02w01 LCK2: LCK2
0x5000301C C   FIELD 03w01 LCK3: LCK3
0x5000301C C   FIELD 04w01 LCK4: LCK4
0x5000301C C   FIELD 05w01 LCK5: LCK5
0x5000301C C   FIELD 06w01 LCK6: LCK6
0x5000301C C   FIELD 07w01 LCK7: LCK7
0x5000301C C   FIELD 08w01 LCK8: LCK8
0x5000301C C   FIELD 09w01 LCK9: LCK9
0x5000301C C   FIELD 10w01 LCK10: LCK10
0x5000301C C   FIELD 11w01 LCK11: LCK11
0x5000301C C   FIELD 12w01 LCK12: LCK12
0x5000301C C   FIELD 13w01 LCK13: LCK13
0x5000301C C   FIELD 14w01 LCK14: LCK14
0x5000301C C   FIELD 15w01 LCK15: LCK15
0x5000301C C   FIELD 16w01 LCKK: LCKK
0x50003020 B  REGISTER GPIOB_AFRL (rw): GPIO alternate function low register
0x50003020 C   FIELD 00w04 AFR0: AFR0
0x50003020 C   FIELD 04w04 AFR1: AFR1
0x50003020 C   FIELD 08w04 AFR2: AFR2
0x50003020 C   FIELD 12w04 AFR3: AFR3
0x50003020 C   FIELD 16w04 AFR4: AFR4
0x50003020 C   FIELD 20w04 AFR5: AFR5
0x50003020 C   FIELD 24w04 AFR6: AFR6
0x50003020 C   FIELD 28w04 AFR7: AFR7
0x50003024 B  REGISTER GPIOB_AFRH (rw): GPIO alternate function high register
0x50003024 C   FIELD 00w04 AFR8: AFR8
0x50003024 C   FIELD 04w04 AFR9: AFR9
0x50003024 C   FIELD 08w04 AFR10: AFR10
0x50003024 C   FIELD 12w04 AFR11: AFR11
0x50003024 C   FIELD 16w04 AFR12: AFR12
0x50003024 C   FIELD 20w04 AFR13: AFR13
0x50003024 C   FIELD 24w04 AFR14: AFR14
0x50003024 C   FIELD 28w04 AFR15: AFR15
0x50003028 B  REGISTER GPIOB_BRR (wo): GPIO port bit reset register
0x50003028 C   FIELD 00w01 BR0: BR0
0x50003028 C   FIELD 01w01 BR1: BR1
0x50003028 C   FIELD 02w01 BR2: BR2
0x50003028 C   FIELD 03w01 BR3: BR3
0x50003028 C   FIELD 04w01 BR4: BR4
0x50003028 C   FIELD 05w01 BR5: BR5
0x50003028 C   FIELD 06w01 BR6: BR6
0x50003028 C   FIELD 07w01 BR7: BR7
0x50003028 C   FIELD 08w01 BR8: BR8
0x50003028 C   FIELD 09w01 BR9: BR9
0x50003028 C   FIELD 10w01 BR10: BR10
0x50003028 C   FIELD 11w01 BR11: BR11
0x50003028 C   FIELD 12w01 BR12: BR12
0x50003028 C   FIELD 13w01 BR13: BR13
0x50003028 C   FIELD 14w01 BR14: BR14
0x50003028 C   FIELD 15w01 BR15: BR15
0x500033C8 B  REGISTER GPIOB_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x500033C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x500033C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x500033C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x500033C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x500033C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x500033C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x500033CC B  REGISTER GPIOB_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500033CC C   FIELD 00w16 EN_IO: EN_IO
0x500033D0 B  REGISTER GPIOB_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500033D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x500033D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x500033D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x500033D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x500033D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x500033D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x500033D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x500033D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x500033D4 B  REGISTER GPIOB_HWCFGR7 (ro): GPIO hardware configuration register 7
0x500033D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x500033D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x500033D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x500033D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x500033D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x500033D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x500033D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x500033D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x500033D8 B  REGISTER GPIOB_HWCFGR6 (ro): GPIO hardware configuration register 6
0x500033D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x500033DC B  REGISTER GPIOB_HWCFGR5 (ro): GPIO hardware configuration register 5
0x500033DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x500033E0 B  REGISTER GPIOB_HWCFGR4 (ro): GPIO hardware configuration register 4
0x500033E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x500033E4 B  REGISTER GPIOB_HWCFGR3 (ro): GPIO hardware configuration register 3
0x500033E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x500033E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x500033E8 B  REGISTER GPIOB_HWCFGR2 (ro): GPIO hardware configuration register 2
0x500033E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x500033EC B  REGISTER GPIOB_HWCFGR1 (ro): GPIO hardware configuration register 1
0x500033EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x500033F0 B  REGISTER GPIOB_HWCFGR0 (ro): GPIO hardware configuration register 0
0x500033F0 C   FIELD 00w16 OR_RES: OR_RES
0x500033F4 B  REGISTER GPIOB_VERR (ro): GPIO version register
0x500033F4 C   FIELD 00w04 MINREV: MINREV
0x500033F4 C   FIELD 04w04 MAJREV: MAJREV
0x500033F8 B  REGISTER GPIOB_IPIDR (ro): GPIO identification register
0x500033F8 C   FIELD 00w32 IPIDR: IPIDR
0x500033FC B  REGISTER GPIOB_SIDR (ro): GPIO size identification register
0x500033FC C   FIELD 00w32 SIDR: SIDR
0x50004000 A PERIPHERAL GPIOC
0x50004000 B  REGISTER GPIOC_MODER (rw): GPIO port mode register
0x50004000 C   FIELD 00w02 MODER0: MODER0
0x50004000 C   FIELD 02w02 MODER1: MODER1
0x50004000 C   FIELD 04w02 MODER2: MODER2
0x50004000 C   FIELD 06w02 MODER3: MODER3
0x50004000 C   FIELD 08w02 MODER4: MODER4
0x50004000 C   FIELD 10w02 MODER5: MODER5
0x50004000 C   FIELD 12w02 MODER6: MODER6
0x50004000 C   FIELD 14w02 MODER7: MODER7
0x50004000 C   FIELD 16w02 MODER8: MODER8
0x50004000 C   FIELD 18w02 MODER9: MODER9
0x50004000 C   FIELD 20w02 MODER10: MODER10
0x50004000 C   FIELD 22w02 MODER11: MODER11
0x50004000 C   FIELD 24w02 MODER12: MODER12
0x50004000 C   FIELD 26w02 MODER13: MODER13
0x50004000 C   FIELD 28w02 MODER14: MODER14
0x50004000 C   FIELD 30w02 MODER15: MODER15
0x50004004 B  REGISTER GPIOC_OTYPER (rw): GPIO port output type register
0x50004004 C   FIELD 00w01 OT0: OT0
0x50004004 C   FIELD 01w01 OT1: OT1
0x50004004 C   FIELD 02w01 OT2: OT2
0x50004004 C   FIELD 03w01 OT3: OT3
0x50004004 C   FIELD 04w01 OT4: OT4
0x50004004 C   FIELD 05w01 OT5: OT5
0x50004004 C   FIELD 06w01 OT6: OT6
0x50004004 C   FIELD 07w01 OT7: OT7
0x50004004 C   FIELD 08w01 OT8: OT8
0x50004004 C   FIELD 09w01 OT9: OT9
0x50004004 C   FIELD 10w01 OT10: OT10
0x50004004 C   FIELD 11w01 OT11: OT11
0x50004004 C   FIELD 12w01 OT12: OT12
0x50004004 C   FIELD 13w01 OT13: OT13
0x50004004 C   FIELD 14w01 OT14: OT14
0x50004004 C   FIELD 15w01 OT15: OT15
0x50004008 B  REGISTER GPIOC_OSPEEDR (rw): GPIO port output speed register
0x50004008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x50004008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x50004008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x50004008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x50004008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x50004008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x50004008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x50004008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x50004008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x50004008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x50004008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x50004008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x50004008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x50004008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x50004008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x50004008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000400C B  REGISTER GPIOC_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000400C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000400C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000400C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000400C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000400C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000400C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000400C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000400C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000400C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000400C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000400C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000400C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000400C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000400C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000400C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000400C C   FIELD 30w02 PUPDR15: PUPDR15
0x50004010 B  REGISTER GPIOC_IDR (ro): GPIO port input data register
0x50004010 C   FIELD 00w01 IDR0: IDR0
0x50004010 C   FIELD 01w01 IDR1: IDR1
0x50004010 C   FIELD 02w01 IDR2: IDR2
0x50004010 C   FIELD 03w01 IDR3: IDR3
0x50004010 C   FIELD 04w01 IDR4: IDR4
0x50004010 C   FIELD 05w01 IDR5: IDR5
0x50004010 C   FIELD 06w01 IDR6: IDR6
0x50004010 C   FIELD 07w01 IDR7: IDR7
0x50004010 C   FIELD 08w01 IDR8: IDR8
0x50004010 C   FIELD 09w01 IDR9: IDR9
0x50004010 C   FIELD 10w01 IDR10: IDR10
0x50004010 C   FIELD 11w01 IDR11: IDR11
0x50004010 C   FIELD 12w01 IDR12: IDR12
0x50004010 C   FIELD 13w01 IDR13: IDR13
0x50004010 C   FIELD 14w01 IDR14: IDR14
0x50004010 C   FIELD 15w01 IDR15: IDR15
0x50004014 B  REGISTER GPIOC_ODR (rw): GPIO port output data register
0x50004014 C   FIELD 00w01 ODR0: ODR0
0x50004014 C   FIELD 01w01 ODR1: ODR1
0x50004014 C   FIELD 02w01 ODR2: ODR2
0x50004014 C   FIELD 03w01 ODR3: ODR3
0x50004014 C   FIELD 04w01 ODR4: ODR4
0x50004014 C   FIELD 05w01 ODR5: ODR5
0x50004014 C   FIELD 06w01 ODR6: ODR6
0x50004014 C   FIELD 07w01 ODR7: ODR7
0x50004014 C   FIELD 08w01 ODR8: ODR8
0x50004014 C   FIELD 09w01 ODR9: ODR9
0x50004014 C   FIELD 10w01 ODR10: ODR10
0x50004014 C   FIELD 11w01 ODR11: ODR11
0x50004014 C   FIELD 12w01 ODR12: ODR12
0x50004014 C   FIELD 13w01 ODR13: ODR13
0x50004014 C   FIELD 14w01 ODR14: ODR14
0x50004014 C   FIELD 15w01 ODR15: ODR15
0x50004018 B  REGISTER GPIOC_BSRR (wo): GPIO port bit set/reset register
0x50004018 C   FIELD 00w01 BS0: BS0
0x50004018 C   FIELD 01w01 BS1: BS1
0x50004018 C   FIELD 02w01 BS2: BS2
0x50004018 C   FIELD 03w01 BS3: BS3
0x50004018 C   FIELD 04w01 BS4: BS4
0x50004018 C   FIELD 05w01 BS5: BS5
0x50004018 C   FIELD 06w01 BS6: BS6
0x50004018 C   FIELD 07w01 BS7: BS7
0x50004018 C   FIELD 08w01 BS8: BS8
0x50004018 C   FIELD 09w01 BS9: BS9
0x50004018 C   FIELD 10w01 BS10: BS10
0x50004018 C   FIELD 11w01 BS11: BS11
0x50004018 C   FIELD 12w01 BS12: BS12
0x50004018 C   FIELD 13w01 BS13: BS13
0x50004018 C   FIELD 14w01 BS14: BS14
0x50004018 C   FIELD 15w01 BS15: BS15
0x50004018 C   FIELD 16w01 BR0: BR0
0x50004018 C   FIELD 17w01 BR1: BR1
0x50004018 C   FIELD 18w01 BR2: BR2
0x50004018 C   FIELD 19w01 BR3: BR3
0x50004018 C   FIELD 20w01 BR4: BR4
0x50004018 C   FIELD 21w01 BR5: BR5
0x50004018 C   FIELD 22w01 BR6: BR6
0x50004018 C   FIELD 23w01 BR7: BR7
0x50004018 C   FIELD 24w01 BR8: BR8
0x50004018 C   FIELD 25w01 BR9: BR9
0x50004018 C   FIELD 26w01 BR10: BR10
0x50004018 C   FIELD 27w01 BR11: BR11
0x50004018 C   FIELD 28w01 BR12: BR12
0x50004018 C   FIELD 29w01 BR13: BR13
0x50004018 C   FIELD 30w01 BR14: BR14
0x50004018 C   FIELD 31w01 BR15: BR15
0x5000401C B  REGISTER GPIOC_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000401C C   FIELD 00w01 LCK0: LCK0
0x5000401C C   FIELD 01w01 LCK1: LCK1
0x5000401C C   FIELD 02w01 LCK2: LCK2
0x5000401C C   FIELD 03w01 LCK3: LCK3
0x5000401C C   FIELD 04w01 LCK4: LCK4
0x5000401C C   FIELD 05w01 LCK5: LCK5
0x5000401C C   FIELD 06w01 LCK6: LCK6
0x5000401C C   FIELD 07w01 LCK7: LCK7
0x5000401C C   FIELD 08w01 LCK8: LCK8
0x5000401C C   FIELD 09w01 LCK9: LCK9
0x5000401C C   FIELD 10w01 LCK10: LCK10
0x5000401C C   FIELD 11w01 LCK11: LCK11
0x5000401C C   FIELD 12w01 LCK12: LCK12
0x5000401C C   FIELD 13w01 LCK13: LCK13
0x5000401C C   FIELD 14w01 LCK14: LCK14
0x5000401C C   FIELD 15w01 LCK15: LCK15
0x5000401C C   FIELD 16w01 LCKK: LCKK
0x50004020 B  REGISTER GPIOC_AFRL (rw): GPIO alternate function low register
0x50004020 C   FIELD 00w04 AFR0: AFR0
0x50004020 C   FIELD 04w04 AFR1: AFR1
0x50004020 C   FIELD 08w04 AFR2: AFR2
0x50004020 C   FIELD 12w04 AFR3: AFR3
0x50004020 C   FIELD 16w04 AFR4: AFR4
0x50004020 C   FIELD 20w04 AFR5: AFR5
0x50004020 C   FIELD 24w04 AFR6: AFR6
0x50004020 C   FIELD 28w04 AFR7: AFR7
0x50004024 B  REGISTER GPIOC_AFRH (rw): GPIO alternate function high register
0x50004024 C   FIELD 00w04 AFR8: AFR8
0x50004024 C   FIELD 04w04 AFR9: AFR9
0x50004024 C   FIELD 08w04 AFR10: AFR10
0x50004024 C   FIELD 12w04 AFR11: AFR11
0x50004024 C   FIELD 16w04 AFR12: AFR12
0x50004024 C   FIELD 20w04 AFR13: AFR13
0x50004024 C   FIELD 24w04 AFR14: AFR14
0x50004024 C   FIELD 28w04 AFR15: AFR15
0x50004028 B  REGISTER GPIOC_BRR (wo): GPIO port bit reset register
0x50004028 C   FIELD 00w01 BR0: BR0
0x50004028 C   FIELD 01w01 BR1: BR1
0x50004028 C   FIELD 02w01 BR2: BR2
0x50004028 C   FIELD 03w01 BR3: BR3
0x50004028 C   FIELD 04w01 BR4: BR4
0x50004028 C   FIELD 05w01 BR5: BR5
0x50004028 C   FIELD 06w01 BR6: BR6
0x50004028 C   FIELD 07w01 BR7: BR7
0x50004028 C   FIELD 08w01 BR8: BR8
0x50004028 C   FIELD 09w01 BR9: BR9
0x50004028 C   FIELD 10w01 BR10: BR10
0x50004028 C   FIELD 11w01 BR11: BR11
0x50004028 C   FIELD 12w01 BR12: BR12
0x50004028 C   FIELD 13w01 BR13: BR13
0x50004028 C   FIELD 14w01 BR14: BR14
0x50004028 C   FIELD 15w01 BR15: BR15
0x500043C8 B  REGISTER GPIOC_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x500043C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x500043C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x500043C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x500043C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x500043C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x500043C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x500043CC B  REGISTER GPIOC_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500043CC C   FIELD 00w16 EN_IO: EN_IO
0x500043D0 B  REGISTER GPIOC_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500043D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x500043D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x500043D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x500043D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x500043D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x500043D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x500043D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x500043D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x500043D4 B  REGISTER GPIOC_HWCFGR7 (ro): GPIO hardware configuration register 7
0x500043D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x500043D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x500043D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x500043D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x500043D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x500043D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x500043D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x500043D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x500043D8 B  REGISTER GPIOC_HWCFGR6 (ro): GPIO hardware configuration register 6
0x500043D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x500043DC B  REGISTER GPIOC_HWCFGR5 (ro): GPIO hardware configuration register 5
0x500043DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x500043E0 B  REGISTER GPIOC_HWCFGR4 (ro): GPIO hardware configuration register 4
0x500043E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x500043E4 B  REGISTER GPIOC_HWCFGR3 (ro): GPIO hardware configuration register 3
0x500043E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x500043E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x500043E8 B  REGISTER GPIOC_HWCFGR2 (ro): GPIO hardware configuration register 2
0x500043E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x500043EC B  REGISTER GPIOC_HWCFGR1 (ro): GPIO hardware configuration register 1
0x500043EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x500043F0 B  REGISTER GPIOC_HWCFGR0 (ro): GPIO hardware configuration register 0
0x500043F0 C   FIELD 00w16 OR_RES: OR_RES
0x500043F4 B  REGISTER GPIOC_VERR (ro): GPIO version register
0x500043F4 C   FIELD 00w04 MINREV: MINREV
0x500043F4 C   FIELD 04w04 MAJREV: MAJREV
0x500043F8 B  REGISTER GPIOC_IPIDR (ro): GPIO identification register
0x500043F8 C   FIELD 00w32 IPIDR: IPIDR
0x500043FC B  REGISTER GPIOC_SIDR (ro): GPIO size identification register
0x500043FC C   FIELD 00w32 SIDR: SIDR
0x50005000 A PERIPHERAL GPIOD
0x50005000 B  REGISTER GPIOD_MODER (rw): GPIO port mode register
0x50005000 C   FIELD 00w02 MODER0: MODER0
0x50005000 C   FIELD 02w02 MODER1: MODER1
0x50005000 C   FIELD 04w02 MODER2: MODER2
0x50005000 C   FIELD 06w02 MODER3: MODER3
0x50005000 C   FIELD 08w02 MODER4: MODER4
0x50005000 C   FIELD 10w02 MODER5: MODER5
0x50005000 C   FIELD 12w02 MODER6: MODER6
0x50005000 C   FIELD 14w02 MODER7: MODER7
0x50005000 C   FIELD 16w02 MODER8: MODER8
0x50005000 C   FIELD 18w02 MODER9: MODER9
0x50005000 C   FIELD 20w02 MODER10: MODER10
0x50005000 C   FIELD 22w02 MODER11: MODER11
0x50005000 C   FIELD 24w02 MODER12: MODER12
0x50005000 C   FIELD 26w02 MODER13: MODER13
0x50005000 C   FIELD 28w02 MODER14: MODER14
0x50005000 C   FIELD 30w02 MODER15: MODER15
0x50005004 B  REGISTER GPIOD_OTYPER (rw): GPIO port output type register
0x50005004 C   FIELD 00w01 OT0: OT0
0x50005004 C   FIELD 01w01 OT1: OT1
0x50005004 C   FIELD 02w01 OT2: OT2
0x50005004 C   FIELD 03w01 OT3: OT3
0x50005004 C   FIELD 04w01 OT4: OT4
0x50005004 C   FIELD 05w01 OT5: OT5
0x50005004 C   FIELD 06w01 OT6: OT6
0x50005004 C   FIELD 07w01 OT7: OT7
0x50005004 C   FIELD 08w01 OT8: OT8
0x50005004 C   FIELD 09w01 OT9: OT9
0x50005004 C   FIELD 10w01 OT10: OT10
0x50005004 C   FIELD 11w01 OT11: OT11
0x50005004 C   FIELD 12w01 OT12: OT12
0x50005004 C   FIELD 13w01 OT13: OT13
0x50005004 C   FIELD 14w01 OT14: OT14
0x50005004 C   FIELD 15w01 OT15: OT15
0x50005008 B  REGISTER GPIOD_OSPEEDR (rw): GPIO port output speed register
0x50005008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x50005008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x50005008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x50005008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x50005008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x50005008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x50005008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x50005008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x50005008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x50005008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x50005008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x50005008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x50005008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x50005008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x50005008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x50005008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000500C B  REGISTER GPIOD_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000500C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000500C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000500C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000500C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000500C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000500C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000500C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000500C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000500C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000500C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000500C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000500C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000500C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000500C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000500C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000500C C   FIELD 30w02 PUPDR15: PUPDR15
0x50005010 B  REGISTER GPIOD_IDR (ro): GPIO port input data register
0x50005010 C   FIELD 00w01 IDR0: IDR0
0x50005010 C   FIELD 01w01 IDR1: IDR1
0x50005010 C   FIELD 02w01 IDR2: IDR2
0x50005010 C   FIELD 03w01 IDR3: IDR3
0x50005010 C   FIELD 04w01 IDR4: IDR4
0x50005010 C   FIELD 05w01 IDR5: IDR5
0x50005010 C   FIELD 06w01 IDR6: IDR6
0x50005010 C   FIELD 07w01 IDR7: IDR7
0x50005010 C   FIELD 08w01 IDR8: IDR8
0x50005010 C   FIELD 09w01 IDR9: IDR9
0x50005010 C   FIELD 10w01 IDR10: IDR10
0x50005010 C   FIELD 11w01 IDR11: IDR11
0x50005010 C   FIELD 12w01 IDR12: IDR12
0x50005010 C   FIELD 13w01 IDR13: IDR13
0x50005010 C   FIELD 14w01 IDR14: IDR14
0x50005010 C   FIELD 15w01 IDR15: IDR15
0x50005014 B  REGISTER GPIOD_ODR (rw): GPIO port output data register
0x50005014 C   FIELD 00w01 ODR0: ODR0
0x50005014 C   FIELD 01w01 ODR1: ODR1
0x50005014 C   FIELD 02w01 ODR2: ODR2
0x50005014 C   FIELD 03w01 ODR3: ODR3
0x50005014 C   FIELD 04w01 ODR4: ODR4
0x50005014 C   FIELD 05w01 ODR5: ODR5
0x50005014 C   FIELD 06w01 ODR6: ODR6
0x50005014 C   FIELD 07w01 ODR7: ODR7
0x50005014 C   FIELD 08w01 ODR8: ODR8
0x50005014 C   FIELD 09w01 ODR9: ODR9
0x50005014 C   FIELD 10w01 ODR10: ODR10
0x50005014 C   FIELD 11w01 ODR11: ODR11
0x50005014 C   FIELD 12w01 ODR12: ODR12
0x50005014 C   FIELD 13w01 ODR13: ODR13
0x50005014 C   FIELD 14w01 ODR14: ODR14
0x50005014 C   FIELD 15w01 ODR15: ODR15
0x50005018 B  REGISTER GPIOD_BSRR (wo): GPIO port bit set/reset register
0x50005018 C   FIELD 00w01 BS0: BS0
0x50005018 C   FIELD 01w01 BS1: BS1
0x50005018 C   FIELD 02w01 BS2: BS2
0x50005018 C   FIELD 03w01 BS3: BS3
0x50005018 C   FIELD 04w01 BS4: BS4
0x50005018 C   FIELD 05w01 BS5: BS5
0x50005018 C   FIELD 06w01 BS6: BS6
0x50005018 C   FIELD 07w01 BS7: BS7
0x50005018 C   FIELD 08w01 BS8: BS8
0x50005018 C   FIELD 09w01 BS9: BS9
0x50005018 C   FIELD 10w01 BS10: BS10
0x50005018 C   FIELD 11w01 BS11: BS11
0x50005018 C   FIELD 12w01 BS12: BS12
0x50005018 C   FIELD 13w01 BS13: BS13
0x50005018 C   FIELD 14w01 BS14: BS14
0x50005018 C   FIELD 15w01 BS15: BS15
0x50005018 C   FIELD 16w01 BR0: BR0
0x50005018 C   FIELD 17w01 BR1: BR1
0x50005018 C   FIELD 18w01 BR2: BR2
0x50005018 C   FIELD 19w01 BR3: BR3
0x50005018 C   FIELD 20w01 BR4: BR4
0x50005018 C   FIELD 21w01 BR5: BR5
0x50005018 C   FIELD 22w01 BR6: BR6
0x50005018 C   FIELD 23w01 BR7: BR7
0x50005018 C   FIELD 24w01 BR8: BR8
0x50005018 C   FIELD 25w01 BR9: BR9
0x50005018 C   FIELD 26w01 BR10: BR10
0x50005018 C   FIELD 27w01 BR11: BR11
0x50005018 C   FIELD 28w01 BR12: BR12
0x50005018 C   FIELD 29w01 BR13: BR13
0x50005018 C   FIELD 30w01 BR14: BR14
0x50005018 C   FIELD 31w01 BR15: BR15
0x5000501C B  REGISTER GPIOD_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000501C C   FIELD 00w01 LCK0: LCK0
0x5000501C C   FIELD 01w01 LCK1: LCK1
0x5000501C C   FIELD 02w01 LCK2: LCK2
0x5000501C C   FIELD 03w01 LCK3: LCK3
0x5000501C C   FIELD 04w01 LCK4: LCK4
0x5000501C C   FIELD 05w01 LCK5: LCK5
0x5000501C C   FIELD 06w01 LCK6: LCK6
0x5000501C C   FIELD 07w01 LCK7: LCK7
0x5000501C C   FIELD 08w01 LCK8: LCK8
0x5000501C C   FIELD 09w01 LCK9: LCK9
0x5000501C C   FIELD 10w01 LCK10: LCK10
0x5000501C C   FIELD 11w01 LCK11: LCK11
0x5000501C C   FIELD 12w01 LCK12: LCK12
0x5000501C C   FIELD 13w01 LCK13: LCK13
0x5000501C C   FIELD 14w01 LCK14: LCK14
0x5000501C C   FIELD 15w01 LCK15: LCK15
0x5000501C C   FIELD 16w01 LCKK: LCKK
0x50005020 B  REGISTER GPIOD_AFRL (rw): GPIO alternate function low register
0x50005020 C   FIELD 00w04 AFR0: AFR0
0x50005020 C   FIELD 04w04 AFR1: AFR1
0x50005020 C   FIELD 08w04 AFR2: AFR2
0x50005020 C   FIELD 12w04 AFR3: AFR3
0x50005020 C   FIELD 16w04 AFR4: AFR4
0x50005020 C   FIELD 20w04 AFR5: AFR5
0x50005020 C   FIELD 24w04 AFR6: AFR6
0x50005020 C   FIELD 28w04 AFR7: AFR7
0x50005024 B  REGISTER GPIOD_AFRH (rw): GPIO alternate function high register
0x50005024 C   FIELD 00w04 AFR8: AFR8
0x50005024 C   FIELD 04w04 AFR9: AFR9
0x50005024 C   FIELD 08w04 AFR10: AFR10
0x50005024 C   FIELD 12w04 AFR11: AFR11
0x50005024 C   FIELD 16w04 AFR12: AFR12
0x50005024 C   FIELD 20w04 AFR13: AFR13
0x50005024 C   FIELD 24w04 AFR14: AFR14
0x50005024 C   FIELD 28w04 AFR15: AFR15
0x50005028 B  REGISTER GPIOD_BRR (wo): GPIO port bit reset register
0x50005028 C   FIELD 00w01 BR0: BR0
0x50005028 C   FIELD 01w01 BR1: BR1
0x50005028 C   FIELD 02w01 BR2: BR2
0x50005028 C   FIELD 03w01 BR3: BR3
0x50005028 C   FIELD 04w01 BR4: BR4
0x50005028 C   FIELD 05w01 BR5: BR5
0x50005028 C   FIELD 06w01 BR6: BR6
0x50005028 C   FIELD 07w01 BR7: BR7
0x50005028 C   FIELD 08w01 BR8: BR8
0x50005028 C   FIELD 09w01 BR9: BR9
0x50005028 C   FIELD 10w01 BR10: BR10
0x50005028 C   FIELD 11w01 BR11: BR11
0x50005028 C   FIELD 12w01 BR12: BR12
0x50005028 C   FIELD 13w01 BR13: BR13
0x50005028 C   FIELD 14w01 BR14: BR14
0x50005028 C   FIELD 15w01 BR15: BR15
0x500053C8 B  REGISTER GPIOD_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x500053C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x500053C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x500053C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x500053C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x500053C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x500053C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x500053CC B  REGISTER GPIOD_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500053CC C   FIELD 00w16 EN_IO: EN_IO
0x500053D0 B  REGISTER GPIOD_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500053D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x500053D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x500053D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x500053D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x500053D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x500053D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x500053D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x500053D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x500053D4 B  REGISTER GPIOD_HWCFGR7 (ro): GPIO hardware configuration register 7
0x500053D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x500053D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x500053D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x500053D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x500053D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x500053D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x500053D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x500053D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x500053D8 B  REGISTER GPIOD_HWCFGR6 (ro): GPIO hardware configuration register 6
0x500053D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x500053DC B  REGISTER GPIOD_HWCFGR5 (ro): GPIO hardware configuration register 5
0x500053DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x500053E0 B  REGISTER GPIOD_HWCFGR4 (ro): GPIO hardware configuration register 4
0x500053E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x500053E4 B  REGISTER GPIOD_HWCFGR3 (ro): GPIO hardware configuration register 3
0x500053E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x500053E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x500053E8 B  REGISTER GPIOD_HWCFGR2 (ro): GPIO hardware configuration register 2
0x500053E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x500053EC B  REGISTER GPIOD_HWCFGR1 (ro): GPIO hardware configuration register 1
0x500053EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x500053F0 B  REGISTER GPIOD_HWCFGR0 (ro): GPIO hardware configuration register 0
0x500053F0 C   FIELD 00w16 OR_RES: OR_RES
0x500053F4 B  REGISTER GPIOD_VERR (ro): GPIO version register
0x500053F4 C   FIELD 00w04 MINREV: MINREV
0x500053F4 C   FIELD 04w04 MAJREV: MAJREV
0x500053F8 B  REGISTER GPIOD_IPIDR (ro): GPIO identification register
0x500053F8 C   FIELD 00w32 IPIDR: IPIDR
0x500053FC B  REGISTER GPIOD_SIDR (ro): GPIO size identification register
0x500053FC C   FIELD 00w32 SIDR: SIDR
0x50006000 A PERIPHERAL GPIOE
0x50006000 B  REGISTER GPIOE_MODER (rw): GPIO port mode register
0x50006000 C   FIELD 00w02 MODER0: MODER0
0x50006000 C   FIELD 02w02 MODER1: MODER1
0x50006000 C   FIELD 04w02 MODER2: MODER2
0x50006000 C   FIELD 06w02 MODER3: MODER3
0x50006000 C   FIELD 08w02 MODER4: MODER4
0x50006000 C   FIELD 10w02 MODER5: MODER5
0x50006000 C   FIELD 12w02 MODER6: MODER6
0x50006000 C   FIELD 14w02 MODER7: MODER7
0x50006000 C   FIELD 16w02 MODER8: MODER8
0x50006000 C   FIELD 18w02 MODER9: MODER9
0x50006000 C   FIELD 20w02 MODER10: MODER10
0x50006000 C   FIELD 22w02 MODER11: MODER11
0x50006000 C   FIELD 24w02 MODER12: MODER12
0x50006000 C   FIELD 26w02 MODER13: MODER13
0x50006000 C   FIELD 28w02 MODER14: MODER14
0x50006000 C   FIELD 30w02 MODER15: MODER15
0x50006004 B  REGISTER GPIOE_OTYPER (rw): GPIO port output type register
0x50006004 C   FIELD 00w01 OT0: OT0
0x50006004 C   FIELD 01w01 OT1: OT1
0x50006004 C   FIELD 02w01 OT2: OT2
0x50006004 C   FIELD 03w01 OT3: OT3
0x50006004 C   FIELD 04w01 OT4: OT4
0x50006004 C   FIELD 05w01 OT5: OT5
0x50006004 C   FIELD 06w01 OT6: OT6
0x50006004 C   FIELD 07w01 OT7: OT7
0x50006004 C   FIELD 08w01 OT8: OT8
0x50006004 C   FIELD 09w01 OT9: OT9
0x50006004 C   FIELD 10w01 OT10: OT10
0x50006004 C   FIELD 11w01 OT11: OT11
0x50006004 C   FIELD 12w01 OT12: OT12
0x50006004 C   FIELD 13w01 OT13: OT13
0x50006004 C   FIELD 14w01 OT14: OT14
0x50006004 C   FIELD 15w01 OT15: OT15
0x50006008 B  REGISTER GPIOE_OSPEEDR (rw): GPIO port output speed register
0x50006008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x50006008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x50006008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x50006008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x50006008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x50006008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x50006008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x50006008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x50006008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x50006008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x50006008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x50006008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x50006008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x50006008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x50006008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x50006008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000600C B  REGISTER GPIOE_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000600C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000600C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000600C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000600C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000600C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000600C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000600C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000600C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000600C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000600C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000600C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000600C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000600C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000600C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000600C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000600C C   FIELD 30w02 PUPDR15: PUPDR15
0x50006010 B  REGISTER GPIOE_IDR (ro): GPIO port input data register
0x50006010 C   FIELD 00w01 IDR0: IDR0
0x50006010 C   FIELD 01w01 IDR1: IDR1
0x50006010 C   FIELD 02w01 IDR2: IDR2
0x50006010 C   FIELD 03w01 IDR3: IDR3
0x50006010 C   FIELD 04w01 IDR4: IDR4
0x50006010 C   FIELD 05w01 IDR5: IDR5
0x50006010 C   FIELD 06w01 IDR6: IDR6
0x50006010 C   FIELD 07w01 IDR7: IDR7
0x50006010 C   FIELD 08w01 IDR8: IDR8
0x50006010 C   FIELD 09w01 IDR9: IDR9
0x50006010 C   FIELD 10w01 IDR10: IDR10
0x50006010 C   FIELD 11w01 IDR11: IDR11
0x50006010 C   FIELD 12w01 IDR12: IDR12
0x50006010 C   FIELD 13w01 IDR13: IDR13
0x50006010 C   FIELD 14w01 IDR14: IDR14
0x50006010 C   FIELD 15w01 IDR15: IDR15
0x50006014 B  REGISTER GPIOE_ODR (rw): GPIO port output data register
0x50006014 C   FIELD 00w01 ODR0: ODR0
0x50006014 C   FIELD 01w01 ODR1: ODR1
0x50006014 C   FIELD 02w01 ODR2: ODR2
0x50006014 C   FIELD 03w01 ODR3: ODR3
0x50006014 C   FIELD 04w01 ODR4: ODR4
0x50006014 C   FIELD 05w01 ODR5: ODR5
0x50006014 C   FIELD 06w01 ODR6: ODR6
0x50006014 C   FIELD 07w01 ODR7: ODR7
0x50006014 C   FIELD 08w01 ODR8: ODR8
0x50006014 C   FIELD 09w01 ODR9: ODR9
0x50006014 C   FIELD 10w01 ODR10: ODR10
0x50006014 C   FIELD 11w01 ODR11: ODR11
0x50006014 C   FIELD 12w01 ODR12: ODR12
0x50006014 C   FIELD 13w01 ODR13: ODR13
0x50006014 C   FIELD 14w01 ODR14: ODR14
0x50006014 C   FIELD 15w01 ODR15: ODR15
0x50006018 B  REGISTER GPIOE_BSRR (wo): GPIO port bit set/reset register
0x50006018 C   FIELD 00w01 BS0: BS0
0x50006018 C   FIELD 01w01 BS1: BS1
0x50006018 C   FIELD 02w01 BS2: BS2
0x50006018 C   FIELD 03w01 BS3: BS3
0x50006018 C   FIELD 04w01 BS4: BS4
0x50006018 C   FIELD 05w01 BS5: BS5
0x50006018 C   FIELD 06w01 BS6: BS6
0x50006018 C   FIELD 07w01 BS7: BS7
0x50006018 C   FIELD 08w01 BS8: BS8
0x50006018 C   FIELD 09w01 BS9: BS9
0x50006018 C   FIELD 10w01 BS10: BS10
0x50006018 C   FIELD 11w01 BS11: BS11
0x50006018 C   FIELD 12w01 BS12: BS12
0x50006018 C   FIELD 13w01 BS13: BS13
0x50006018 C   FIELD 14w01 BS14: BS14
0x50006018 C   FIELD 15w01 BS15: BS15
0x50006018 C   FIELD 16w01 BR0: BR0
0x50006018 C   FIELD 17w01 BR1: BR1
0x50006018 C   FIELD 18w01 BR2: BR2
0x50006018 C   FIELD 19w01 BR3: BR3
0x50006018 C   FIELD 20w01 BR4: BR4
0x50006018 C   FIELD 21w01 BR5: BR5
0x50006018 C   FIELD 22w01 BR6: BR6
0x50006018 C   FIELD 23w01 BR7: BR7
0x50006018 C   FIELD 24w01 BR8: BR8
0x50006018 C   FIELD 25w01 BR9: BR9
0x50006018 C   FIELD 26w01 BR10: BR10
0x50006018 C   FIELD 27w01 BR11: BR11
0x50006018 C   FIELD 28w01 BR12: BR12
0x50006018 C   FIELD 29w01 BR13: BR13
0x50006018 C   FIELD 30w01 BR14: BR14
0x50006018 C   FIELD 31w01 BR15: BR15
0x5000601C B  REGISTER GPIOE_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000601C C   FIELD 00w01 LCK0: LCK0
0x5000601C C   FIELD 01w01 LCK1: LCK1
0x5000601C C   FIELD 02w01 LCK2: LCK2
0x5000601C C   FIELD 03w01 LCK3: LCK3
0x5000601C C   FIELD 04w01 LCK4: LCK4
0x5000601C C   FIELD 05w01 LCK5: LCK5
0x5000601C C   FIELD 06w01 LCK6: LCK6
0x5000601C C   FIELD 07w01 LCK7: LCK7
0x5000601C C   FIELD 08w01 LCK8: LCK8
0x5000601C C   FIELD 09w01 LCK9: LCK9
0x5000601C C   FIELD 10w01 LCK10: LCK10
0x5000601C C   FIELD 11w01 LCK11: LCK11
0x5000601C C   FIELD 12w01 LCK12: LCK12
0x5000601C C   FIELD 13w01 LCK13: LCK13
0x5000601C C   FIELD 14w01 LCK14: LCK14
0x5000601C C   FIELD 15w01 LCK15: LCK15
0x5000601C C   FIELD 16w01 LCKK: LCKK
0x50006020 B  REGISTER GPIOE_AFRL (rw): GPIO alternate function low register
0x50006020 C   FIELD 00w04 AFR0: AFR0
0x50006020 C   FIELD 04w04 AFR1: AFR1
0x50006020 C   FIELD 08w04 AFR2: AFR2
0x50006020 C   FIELD 12w04 AFR3: AFR3
0x50006020 C   FIELD 16w04 AFR4: AFR4
0x50006020 C   FIELD 20w04 AFR5: AFR5
0x50006020 C   FIELD 24w04 AFR6: AFR6
0x50006020 C   FIELD 28w04 AFR7: AFR7
0x50006024 B  REGISTER GPIOE_AFRH (rw): GPIO alternate function high register
0x50006024 C   FIELD 00w04 AFR8: AFR8
0x50006024 C   FIELD 04w04 AFR9: AFR9
0x50006024 C   FIELD 08w04 AFR10: AFR10
0x50006024 C   FIELD 12w04 AFR11: AFR11
0x50006024 C   FIELD 16w04 AFR12: AFR12
0x50006024 C   FIELD 20w04 AFR13: AFR13
0x50006024 C   FIELD 24w04 AFR14: AFR14
0x50006024 C   FIELD 28w04 AFR15: AFR15
0x50006028 B  REGISTER GPIOE_BRR (wo): GPIO port bit reset register
0x50006028 C   FIELD 00w01 BR0: BR0
0x50006028 C   FIELD 01w01 BR1: BR1
0x50006028 C   FIELD 02w01 BR2: BR2
0x50006028 C   FIELD 03w01 BR3: BR3
0x50006028 C   FIELD 04w01 BR4: BR4
0x50006028 C   FIELD 05w01 BR5: BR5
0x50006028 C   FIELD 06w01 BR6: BR6
0x50006028 C   FIELD 07w01 BR7: BR7
0x50006028 C   FIELD 08w01 BR8: BR8
0x50006028 C   FIELD 09w01 BR9: BR9
0x50006028 C   FIELD 10w01 BR10: BR10
0x50006028 C   FIELD 11w01 BR11: BR11
0x50006028 C   FIELD 12w01 BR12: BR12
0x50006028 C   FIELD 13w01 BR13: BR13
0x50006028 C   FIELD 14w01 BR14: BR14
0x50006028 C   FIELD 15w01 BR15: BR15
0x500063C8 B  REGISTER GPIOE_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x500063C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x500063C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x500063C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x500063C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x500063C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x500063C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x500063CC B  REGISTER GPIOE_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500063CC C   FIELD 00w16 EN_IO: EN_IO
0x500063D0 B  REGISTER GPIOE_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500063D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x500063D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x500063D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x500063D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x500063D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x500063D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x500063D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x500063D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x500063D4 B  REGISTER GPIOE_HWCFGR7 (ro): GPIO hardware configuration register 7
0x500063D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x500063D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x500063D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x500063D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x500063D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x500063D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x500063D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x500063D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x500063D8 B  REGISTER GPIOE_HWCFGR6 (ro): GPIO hardware configuration register 6
0x500063D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x500063DC B  REGISTER GPIOE_HWCFGR5 (ro): GPIO hardware configuration register 5
0x500063DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x500063E0 B  REGISTER GPIOE_HWCFGR4 (ro): GPIO hardware configuration register 4
0x500063E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x500063E4 B  REGISTER GPIOE_HWCFGR3 (ro): GPIO hardware configuration register 3
0x500063E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x500063E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x500063E8 B  REGISTER GPIOE_HWCFGR2 (ro): GPIO hardware configuration register 2
0x500063E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x500063EC B  REGISTER GPIOE_HWCFGR1 (ro): GPIO hardware configuration register 1
0x500063EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x500063F0 B  REGISTER GPIOE_HWCFGR0 (ro): GPIO hardware configuration register 0
0x500063F0 C   FIELD 00w16 OR_RES: OR_RES
0x500063F4 B  REGISTER GPIOE_VERR (ro): GPIO version register
0x500063F4 C   FIELD 00w04 MINREV: MINREV
0x500063F4 C   FIELD 04w04 MAJREV: MAJREV
0x500063F8 B  REGISTER GPIOE_IPIDR (ro): GPIO identification register
0x500063F8 C   FIELD 00w32 IPIDR: IPIDR
0x500063FC B  REGISTER GPIOE_SIDR (ro): GPIO size identification register
0x500063FC C   FIELD 00w32 SIDR: SIDR
0x50007000 A PERIPHERAL GPIOF
0x50007000 B  REGISTER GPIOF_MODER (rw): GPIO port mode register
0x50007000 C   FIELD 00w02 MODER0: MODER0
0x50007000 C   FIELD 02w02 MODER1: MODER1
0x50007000 C   FIELD 04w02 MODER2: MODER2
0x50007000 C   FIELD 06w02 MODER3: MODER3
0x50007000 C   FIELD 08w02 MODER4: MODER4
0x50007000 C   FIELD 10w02 MODER5: MODER5
0x50007000 C   FIELD 12w02 MODER6: MODER6
0x50007000 C   FIELD 14w02 MODER7: MODER7
0x50007000 C   FIELD 16w02 MODER8: MODER8
0x50007000 C   FIELD 18w02 MODER9: MODER9
0x50007000 C   FIELD 20w02 MODER10: MODER10
0x50007000 C   FIELD 22w02 MODER11: MODER11
0x50007000 C   FIELD 24w02 MODER12: MODER12
0x50007000 C   FIELD 26w02 MODER13: MODER13
0x50007000 C   FIELD 28w02 MODER14: MODER14
0x50007000 C   FIELD 30w02 MODER15: MODER15
0x50007004 B  REGISTER GPIOF_OTYPER (rw): GPIO port output type register
0x50007004 C   FIELD 00w01 OT0: OT0
0x50007004 C   FIELD 01w01 OT1: OT1
0x50007004 C   FIELD 02w01 OT2: OT2
0x50007004 C   FIELD 03w01 OT3: OT3
0x50007004 C   FIELD 04w01 OT4: OT4
0x50007004 C   FIELD 05w01 OT5: OT5
0x50007004 C   FIELD 06w01 OT6: OT6
0x50007004 C   FIELD 07w01 OT7: OT7
0x50007004 C   FIELD 08w01 OT8: OT8
0x50007004 C   FIELD 09w01 OT9: OT9
0x50007004 C   FIELD 10w01 OT10: OT10
0x50007004 C   FIELD 11w01 OT11: OT11
0x50007004 C   FIELD 12w01 OT12: OT12
0x50007004 C   FIELD 13w01 OT13: OT13
0x50007004 C   FIELD 14w01 OT14: OT14
0x50007004 C   FIELD 15w01 OT15: OT15
0x50007008 B  REGISTER GPIOF_OSPEEDR (rw): GPIO port output speed register
0x50007008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x50007008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x50007008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x50007008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x50007008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x50007008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x50007008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x50007008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x50007008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x50007008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x50007008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x50007008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x50007008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x50007008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x50007008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x50007008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000700C B  REGISTER GPIOF_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000700C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000700C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000700C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000700C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000700C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000700C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000700C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000700C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000700C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000700C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000700C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000700C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000700C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000700C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000700C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000700C C   FIELD 30w02 PUPDR15: PUPDR15
0x50007010 B  REGISTER GPIOF_IDR (ro): GPIO port input data register
0x50007010 C   FIELD 00w01 IDR0: IDR0
0x50007010 C   FIELD 01w01 IDR1: IDR1
0x50007010 C   FIELD 02w01 IDR2: IDR2
0x50007010 C   FIELD 03w01 IDR3: IDR3
0x50007010 C   FIELD 04w01 IDR4: IDR4
0x50007010 C   FIELD 05w01 IDR5: IDR5
0x50007010 C   FIELD 06w01 IDR6: IDR6
0x50007010 C   FIELD 07w01 IDR7: IDR7
0x50007010 C   FIELD 08w01 IDR8: IDR8
0x50007010 C   FIELD 09w01 IDR9: IDR9
0x50007010 C   FIELD 10w01 IDR10: IDR10
0x50007010 C   FIELD 11w01 IDR11: IDR11
0x50007010 C   FIELD 12w01 IDR12: IDR12
0x50007010 C   FIELD 13w01 IDR13: IDR13
0x50007010 C   FIELD 14w01 IDR14: IDR14
0x50007010 C   FIELD 15w01 IDR15: IDR15
0x50007014 B  REGISTER GPIOF_ODR (rw): GPIO port output data register
0x50007014 C   FIELD 00w01 ODR0: ODR0
0x50007014 C   FIELD 01w01 ODR1: ODR1
0x50007014 C   FIELD 02w01 ODR2: ODR2
0x50007014 C   FIELD 03w01 ODR3: ODR3
0x50007014 C   FIELD 04w01 ODR4: ODR4
0x50007014 C   FIELD 05w01 ODR5: ODR5
0x50007014 C   FIELD 06w01 ODR6: ODR6
0x50007014 C   FIELD 07w01 ODR7: ODR7
0x50007014 C   FIELD 08w01 ODR8: ODR8
0x50007014 C   FIELD 09w01 ODR9: ODR9
0x50007014 C   FIELD 10w01 ODR10: ODR10
0x50007014 C   FIELD 11w01 ODR11: ODR11
0x50007014 C   FIELD 12w01 ODR12: ODR12
0x50007014 C   FIELD 13w01 ODR13: ODR13
0x50007014 C   FIELD 14w01 ODR14: ODR14
0x50007014 C   FIELD 15w01 ODR15: ODR15
0x50007018 B  REGISTER GPIOF_BSRR (wo): GPIO port bit set/reset register
0x50007018 C   FIELD 00w01 BS0: BS0
0x50007018 C   FIELD 01w01 BS1: BS1
0x50007018 C   FIELD 02w01 BS2: BS2
0x50007018 C   FIELD 03w01 BS3: BS3
0x50007018 C   FIELD 04w01 BS4: BS4
0x50007018 C   FIELD 05w01 BS5: BS5
0x50007018 C   FIELD 06w01 BS6: BS6
0x50007018 C   FIELD 07w01 BS7: BS7
0x50007018 C   FIELD 08w01 BS8: BS8
0x50007018 C   FIELD 09w01 BS9: BS9
0x50007018 C   FIELD 10w01 BS10: BS10
0x50007018 C   FIELD 11w01 BS11: BS11
0x50007018 C   FIELD 12w01 BS12: BS12
0x50007018 C   FIELD 13w01 BS13: BS13
0x50007018 C   FIELD 14w01 BS14: BS14
0x50007018 C   FIELD 15w01 BS15: BS15
0x50007018 C   FIELD 16w01 BR0: BR0
0x50007018 C   FIELD 17w01 BR1: BR1
0x50007018 C   FIELD 18w01 BR2: BR2
0x50007018 C   FIELD 19w01 BR3: BR3
0x50007018 C   FIELD 20w01 BR4: BR4
0x50007018 C   FIELD 21w01 BR5: BR5
0x50007018 C   FIELD 22w01 BR6: BR6
0x50007018 C   FIELD 23w01 BR7: BR7
0x50007018 C   FIELD 24w01 BR8: BR8
0x50007018 C   FIELD 25w01 BR9: BR9
0x50007018 C   FIELD 26w01 BR10: BR10
0x50007018 C   FIELD 27w01 BR11: BR11
0x50007018 C   FIELD 28w01 BR12: BR12
0x50007018 C   FIELD 29w01 BR13: BR13
0x50007018 C   FIELD 30w01 BR14: BR14
0x50007018 C   FIELD 31w01 BR15: BR15
0x5000701C B  REGISTER GPIOF_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000701C C   FIELD 00w01 LCK0: LCK0
0x5000701C C   FIELD 01w01 LCK1: LCK1
0x5000701C C   FIELD 02w01 LCK2: LCK2
0x5000701C C   FIELD 03w01 LCK3: LCK3
0x5000701C C   FIELD 04w01 LCK4: LCK4
0x5000701C C   FIELD 05w01 LCK5: LCK5
0x5000701C C   FIELD 06w01 LCK6: LCK6
0x5000701C C   FIELD 07w01 LCK7: LCK7
0x5000701C C   FIELD 08w01 LCK8: LCK8
0x5000701C C   FIELD 09w01 LCK9: LCK9
0x5000701C C   FIELD 10w01 LCK10: LCK10
0x5000701C C   FIELD 11w01 LCK11: LCK11
0x5000701C C   FIELD 12w01 LCK12: LCK12
0x5000701C C   FIELD 13w01 LCK13: LCK13
0x5000701C C   FIELD 14w01 LCK14: LCK14
0x5000701C C   FIELD 15w01 LCK15: LCK15
0x5000701C C   FIELD 16w01 LCKK: LCKK
0x50007020 B  REGISTER GPIOF_AFRL (rw): GPIO alternate function low register
0x50007020 C   FIELD 00w04 AFR0: AFR0
0x50007020 C   FIELD 04w04 AFR1: AFR1
0x50007020 C   FIELD 08w04 AFR2: AFR2
0x50007020 C   FIELD 12w04 AFR3: AFR3
0x50007020 C   FIELD 16w04 AFR4: AFR4
0x50007020 C   FIELD 20w04 AFR5: AFR5
0x50007020 C   FIELD 24w04 AFR6: AFR6
0x50007020 C   FIELD 28w04 AFR7: AFR7
0x50007024 B  REGISTER GPIOF_AFRH (rw): GPIO alternate function high register
0x50007024 C   FIELD 00w04 AFR8: AFR8
0x50007024 C   FIELD 04w04 AFR9: AFR9
0x50007024 C   FIELD 08w04 AFR10: AFR10
0x50007024 C   FIELD 12w04 AFR11: AFR11
0x50007024 C   FIELD 16w04 AFR12: AFR12
0x50007024 C   FIELD 20w04 AFR13: AFR13
0x50007024 C   FIELD 24w04 AFR14: AFR14
0x50007024 C   FIELD 28w04 AFR15: AFR15
0x50007028 B  REGISTER GPIOF_BRR (wo): GPIO port bit reset register
0x50007028 C   FIELD 00w01 BR0: BR0
0x50007028 C   FIELD 01w01 BR1: BR1
0x50007028 C   FIELD 02w01 BR2: BR2
0x50007028 C   FIELD 03w01 BR3: BR3
0x50007028 C   FIELD 04w01 BR4: BR4
0x50007028 C   FIELD 05w01 BR5: BR5
0x50007028 C   FIELD 06w01 BR6: BR6
0x50007028 C   FIELD 07w01 BR7: BR7
0x50007028 C   FIELD 08w01 BR8: BR8
0x50007028 C   FIELD 09w01 BR9: BR9
0x50007028 C   FIELD 10w01 BR10: BR10
0x50007028 C   FIELD 11w01 BR11: BR11
0x50007028 C   FIELD 12w01 BR12: BR12
0x50007028 C   FIELD 13w01 BR13: BR13
0x50007028 C   FIELD 14w01 BR14: BR14
0x50007028 C   FIELD 15w01 BR15: BR15
0x500073C8 B  REGISTER GPIOF_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x500073C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x500073C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x500073C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x500073C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x500073C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x500073C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x500073CC B  REGISTER GPIOF_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500073CC C   FIELD 00w16 EN_IO: EN_IO
0x500073D0 B  REGISTER GPIOF_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500073D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x500073D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x500073D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x500073D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x500073D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x500073D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x500073D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x500073D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x500073D4 B  REGISTER GPIOF_HWCFGR7 (ro): GPIO hardware configuration register 7
0x500073D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x500073D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x500073D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x500073D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x500073D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x500073D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x500073D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x500073D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x500073D8 B  REGISTER GPIOF_HWCFGR6 (ro): GPIO hardware configuration register 6
0x500073D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x500073DC B  REGISTER GPIOF_HWCFGR5 (ro): GPIO hardware configuration register 5
0x500073DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x500073E0 B  REGISTER GPIOF_HWCFGR4 (ro): GPIO hardware configuration register 4
0x500073E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x500073E4 B  REGISTER GPIOF_HWCFGR3 (ro): GPIO hardware configuration register 3
0x500073E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x500073E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x500073E8 B  REGISTER GPIOF_HWCFGR2 (ro): GPIO hardware configuration register 2
0x500073E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x500073EC B  REGISTER GPIOF_HWCFGR1 (ro): GPIO hardware configuration register 1
0x500073EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x500073F0 B  REGISTER GPIOF_HWCFGR0 (ro): GPIO hardware configuration register 0
0x500073F0 C   FIELD 00w16 OR_RES: OR_RES
0x500073F4 B  REGISTER GPIOF_VERR (ro): GPIO version register
0x500073F4 C   FIELD 00w04 MINREV: MINREV
0x500073F4 C   FIELD 04w04 MAJREV: MAJREV
0x500073F8 B  REGISTER GPIOF_IPIDR (ro): GPIO identification register
0x500073F8 C   FIELD 00w32 IPIDR: IPIDR
0x500073FC B  REGISTER GPIOF_SIDR (ro): GPIO size identification register
0x500073FC C   FIELD 00w32 SIDR: SIDR
0x50008000 A PERIPHERAL GPIOG
0x50008000 B  REGISTER GPIOG_MODER (rw): GPIO port mode register
0x50008000 C   FIELD 00w02 MODER0: MODER0
0x50008000 C   FIELD 02w02 MODER1: MODER1
0x50008000 C   FIELD 04w02 MODER2: MODER2
0x50008000 C   FIELD 06w02 MODER3: MODER3
0x50008000 C   FIELD 08w02 MODER4: MODER4
0x50008000 C   FIELD 10w02 MODER5: MODER5
0x50008000 C   FIELD 12w02 MODER6: MODER6
0x50008000 C   FIELD 14w02 MODER7: MODER7
0x50008000 C   FIELD 16w02 MODER8: MODER8
0x50008000 C   FIELD 18w02 MODER9: MODER9
0x50008000 C   FIELD 20w02 MODER10: MODER10
0x50008000 C   FIELD 22w02 MODER11: MODER11
0x50008000 C   FIELD 24w02 MODER12: MODER12
0x50008000 C   FIELD 26w02 MODER13: MODER13
0x50008000 C   FIELD 28w02 MODER14: MODER14
0x50008000 C   FIELD 30w02 MODER15: MODER15
0x50008004 B  REGISTER GPIOG_OTYPER (rw): GPIO port output type register
0x50008004 C   FIELD 00w01 OT0: OT0
0x50008004 C   FIELD 01w01 OT1: OT1
0x50008004 C   FIELD 02w01 OT2: OT2
0x50008004 C   FIELD 03w01 OT3: OT3
0x50008004 C   FIELD 04w01 OT4: OT4
0x50008004 C   FIELD 05w01 OT5: OT5
0x50008004 C   FIELD 06w01 OT6: OT6
0x50008004 C   FIELD 07w01 OT7: OT7
0x50008004 C   FIELD 08w01 OT8: OT8
0x50008004 C   FIELD 09w01 OT9: OT9
0x50008004 C   FIELD 10w01 OT10: OT10
0x50008004 C   FIELD 11w01 OT11: OT11
0x50008004 C   FIELD 12w01 OT12: OT12
0x50008004 C   FIELD 13w01 OT13: OT13
0x50008004 C   FIELD 14w01 OT14: OT14
0x50008004 C   FIELD 15w01 OT15: OT15
0x50008008 B  REGISTER GPIOG_OSPEEDR (rw): GPIO port output speed register
0x50008008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x50008008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x50008008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x50008008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x50008008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x50008008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x50008008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x50008008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x50008008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x50008008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x50008008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x50008008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x50008008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x50008008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x50008008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x50008008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000800C B  REGISTER GPIOG_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000800C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000800C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000800C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000800C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000800C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000800C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000800C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000800C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000800C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000800C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000800C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000800C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000800C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000800C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000800C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000800C C   FIELD 30w02 PUPDR15: PUPDR15
0x50008010 B  REGISTER GPIOG_IDR (ro): GPIO port input data register
0x50008010 C   FIELD 00w01 IDR0: IDR0
0x50008010 C   FIELD 01w01 IDR1: IDR1
0x50008010 C   FIELD 02w01 IDR2: IDR2
0x50008010 C   FIELD 03w01 IDR3: IDR3
0x50008010 C   FIELD 04w01 IDR4: IDR4
0x50008010 C   FIELD 05w01 IDR5: IDR5
0x50008010 C   FIELD 06w01 IDR6: IDR6
0x50008010 C   FIELD 07w01 IDR7: IDR7
0x50008010 C   FIELD 08w01 IDR8: IDR8
0x50008010 C   FIELD 09w01 IDR9: IDR9
0x50008010 C   FIELD 10w01 IDR10: IDR10
0x50008010 C   FIELD 11w01 IDR11: IDR11
0x50008010 C   FIELD 12w01 IDR12: IDR12
0x50008010 C   FIELD 13w01 IDR13: IDR13
0x50008010 C   FIELD 14w01 IDR14: IDR14
0x50008010 C   FIELD 15w01 IDR15: IDR15
0x50008014 B  REGISTER GPIOG_ODR (rw): GPIO port output data register
0x50008014 C   FIELD 00w01 ODR0: ODR0
0x50008014 C   FIELD 01w01 ODR1: ODR1
0x50008014 C   FIELD 02w01 ODR2: ODR2
0x50008014 C   FIELD 03w01 ODR3: ODR3
0x50008014 C   FIELD 04w01 ODR4: ODR4
0x50008014 C   FIELD 05w01 ODR5: ODR5
0x50008014 C   FIELD 06w01 ODR6: ODR6
0x50008014 C   FIELD 07w01 ODR7: ODR7
0x50008014 C   FIELD 08w01 ODR8: ODR8
0x50008014 C   FIELD 09w01 ODR9: ODR9
0x50008014 C   FIELD 10w01 ODR10: ODR10
0x50008014 C   FIELD 11w01 ODR11: ODR11
0x50008014 C   FIELD 12w01 ODR12: ODR12
0x50008014 C   FIELD 13w01 ODR13: ODR13
0x50008014 C   FIELD 14w01 ODR14: ODR14
0x50008014 C   FIELD 15w01 ODR15: ODR15
0x50008018 B  REGISTER GPIOG_BSRR (wo): GPIO port bit set/reset register
0x50008018 C   FIELD 00w01 BS0: BS0
0x50008018 C   FIELD 01w01 BS1: BS1
0x50008018 C   FIELD 02w01 BS2: BS2
0x50008018 C   FIELD 03w01 BS3: BS3
0x50008018 C   FIELD 04w01 BS4: BS4
0x50008018 C   FIELD 05w01 BS5: BS5
0x50008018 C   FIELD 06w01 BS6: BS6
0x50008018 C   FIELD 07w01 BS7: BS7
0x50008018 C   FIELD 08w01 BS8: BS8
0x50008018 C   FIELD 09w01 BS9: BS9
0x50008018 C   FIELD 10w01 BS10: BS10
0x50008018 C   FIELD 11w01 BS11: BS11
0x50008018 C   FIELD 12w01 BS12: BS12
0x50008018 C   FIELD 13w01 BS13: BS13
0x50008018 C   FIELD 14w01 BS14: BS14
0x50008018 C   FIELD 15w01 BS15: BS15
0x50008018 C   FIELD 16w01 BR0: BR0
0x50008018 C   FIELD 17w01 BR1: BR1
0x50008018 C   FIELD 18w01 BR2: BR2
0x50008018 C   FIELD 19w01 BR3: BR3
0x50008018 C   FIELD 20w01 BR4: BR4
0x50008018 C   FIELD 21w01 BR5: BR5
0x50008018 C   FIELD 22w01 BR6: BR6
0x50008018 C   FIELD 23w01 BR7: BR7
0x50008018 C   FIELD 24w01 BR8: BR8
0x50008018 C   FIELD 25w01 BR9: BR9
0x50008018 C   FIELD 26w01 BR10: BR10
0x50008018 C   FIELD 27w01 BR11: BR11
0x50008018 C   FIELD 28w01 BR12: BR12
0x50008018 C   FIELD 29w01 BR13: BR13
0x50008018 C   FIELD 30w01 BR14: BR14
0x50008018 C   FIELD 31w01 BR15: BR15
0x5000801C B  REGISTER GPIOG_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000801C C   FIELD 00w01 LCK0: LCK0
0x5000801C C   FIELD 01w01 LCK1: LCK1
0x5000801C C   FIELD 02w01 LCK2: LCK2
0x5000801C C   FIELD 03w01 LCK3: LCK3
0x5000801C C   FIELD 04w01 LCK4: LCK4
0x5000801C C   FIELD 05w01 LCK5: LCK5
0x5000801C C   FIELD 06w01 LCK6: LCK6
0x5000801C C   FIELD 07w01 LCK7: LCK7
0x5000801C C   FIELD 08w01 LCK8: LCK8
0x5000801C C   FIELD 09w01 LCK9: LCK9
0x5000801C C   FIELD 10w01 LCK10: LCK10
0x5000801C C   FIELD 11w01 LCK11: LCK11
0x5000801C C   FIELD 12w01 LCK12: LCK12
0x5000801C C   FIELD 13w01 LCK13: LCK13
0x5000801C C   FIELD 14w01 LCK14: LCK14
0x5000801C C   FIELD 15w01 LCK15: LCK15
0x5000801C C   FIELD 16w01 LCKK: LCKK
0x50008020 B  REGISTER GPIOG_AFRL (rw): GPIO alternate function low register
0x50008020 C   FIELD 00w04 AFR0: AFR0
0x50008020 C   FIELD 04w04 AFR1: AFR1
0x50008020 C   FIELD 08w04 AFR2: AFR2
0x50008020 C   FIELD 12w04 AFR3: AFR3
0x50008020 C   FIELD 16w04 AFR4: AFR4
0x50008020 C   FIELD 20w04 AFR5: AFR5
0x50008020 C   FIELD 24w04 AFR6: AFR6
0x50008020 C   FIELD 28w04 AFR7: AFR7
0x50008024 B  REGISTER GPIOG_AFRH (rw): GPIO alternate function high register
0x50008024 C   FIELD 00w04 AFR8: AFR8
0x50008024 C   FIELD 04w04 AFR9: AFR9
0x50008024 C   FIELD 08w04 AFR10: AFR10
0x50008024 C   FIELD 12w04 AFR11: AFR11
0x50008024 C   FIELD 16w04 AFR12: AFR12
0x50008024 C   FIELD 20w04 AFR13: AFR13
0x50008024 C   FIELD 24w04 AFR14: AFR14
0x50008024 C   FIELD 28w04 AFR15: AFR15
0x50008028 B  REGISTER GPIOG_BRR (wo): GPIO port bit reset register
0x50008028 C   FIELD 00w01 BR0: BR0
0x50008028 C   FIELD 01w01 BR1: BR1
0x50008028 C   FIELD 02w01 BR2: BR2
0x50008028 C   FIELD 03w01 BR3: BR3
0x50008028 C   FIELD 04w01 BR4: BR4
0x50008028 C   FIELD 05w01 BR5: BR5
0x50008028 C   FIELD 06w01 BR6: BR6
0x50008028 C   FIELD 07w01 BR7: BR7
0x50008028 C   FIELD 08w01 BR8: BR8
0x50008028 C   FIELD 09w01 BR9: BR9
0x50008028 C   FIELD 10w01 BR10: BR10
0x50008028 C   FIELD 11w01 BR11: BR11
0x50008028 C   FIELD 12w01 BR12: BR12
0x50008028 C   FIELD 13w01 BR13: BR13
0x50008028 C   FIELD 14w01 BR14: BR14
0x50008028 C   FIELD 15w01 BR15: BR15
0x500083C8 B  REGISTER GPIOG_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x500083C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x500083C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x500083C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x500083C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x500083C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x500083C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x500083CC B  REGISTER GPIOG_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500083CC C   FIELD 00w16 EN_IO: EN_IO
0x500083D0 B  REGISTER GPIOG_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500083D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x500083D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x500083D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x500083D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x500083D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x500083D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x500083D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x500083D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x500083D4 B  REGISTER GPIOG_HWCFGR7 (ro): GPIO hardware configuration register 7
0x500083D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x500083D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x500083D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x500083D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x500083D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x500083D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x500083D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x500083D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x500083D8 B  REGISTER GPIOG_HWCFGR6 (ro): GPIO hardware configuration register 6
0x500083D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x500083DC B  REGISTER GPIOG_HWCFGR5 (ro): GPIO hardware configuration register 5
0x500083DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x500083E0 B  REGISTER GPIOG_HWCFGR4 (ro): GPIO hardware configuration register 4
0x500083E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x500083E4 B  REGISTER GPIOG_HWCFGR3 (ro): GPIO hardware configuration register 3
0x500083E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x500083E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x500083E8 B  REGISTER GPIOG_HWCFGR2 (ro): GPIO hardware configuration register 2
0x500083E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x500083EC B  REGISTER GPIOG_HWCFGR1 (ro): GPIO hardware configuration register 1
0x500083EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x500083F0 B  REGISTER GPIOG_HWCFGR0 (ro): GPIO hardware configuration register 0
0x500083F0 C   FIELD 00w16 OR_RES: OR_RES
0x500083F4 B  REGISTER GPIOG_VERR (ro): GPIO version register
0x500083F4 C   FIELD 00w04 MINREV: MINREV
0x500083F4 C   FIELD 04w04 MAJREV: MAJREV
0x500083F8 B  REGISTER GPIOG_IPIDR (ro): GPIO identification register
0x500083F8 C   FIELD 00w32 IPIDR: IPIDR
0x500083FC B  REGISTER GPIOG_SIDR (ro): GPIO size identification register
0x500083FC C   FIELD 00w32 SIDR: SIDR
0x50009000 A PERIPHERAL GPIOH
0x50009000 B  REGISTER GPIOH_MODER (rw): GPIO port mode register
0x50009000 C   FIELD 00w02 MODER0: MODER0
0x50009000 C   FIELD 02w02 MODER1: MODER1
0x50009000 C   FIELD 04w02 MODER2: MODER2
0x50009000 C   FIELD 06w02 MODER3: MODER3
0x50009000 C   FIELD 08w02 MODER4: MODER4
0x50009000 C   FIELD 10w02 MODER5: MODER5
0x50009000 C   FIELD 12w02 MODER6: MODER6
0x50009000 C   FIELD 14w02 MODER7: MODER7
0x50009000 C   FIELD 16w02 MODER8: MODER8
0x50009000 C   FIELD 18w02 MODER9: MODER9
0x50009000 C   FIELD 20w02 MODER10: MODER10
0x50009000 C   FIELD 22w02 MODER11: MODER11
0x50009000 C   FIELD 24w02 MODER12: MODER12
0x50009000 C   FIELD 26w02 MODER13: MODER13
0x50009000 C   FIELD 28w02 MODER14: MODER14
0x50009000 C   FIELD 30w02 MODER15: MODER15
0x50009004 B  REGISTER GPIOH_OTYPER (rw): GPIO port output type register
0x50009004 C   FIELD 00w01 OT0: OT0
0x50009004 C   FIELD 01w01 OT1: OT1
0x50009004 C   FIELD 02w01 OT2: OT2
0x50009004 C   FIELD 03w01 OT3: OT3
0x50009004 C   FIELD 04w01 OT4: OT4
0x50009004 C   FIELD 05w01 OT5: OT5
0x50009004 C   FIELD 06w01 OT6: OT6
0x50009004 C   FIELD 07w01 OT7: OT7
0x50009004 C   FIELD 08w01 OT8: OT8
0x50009004 C   FIELD 09w01 OT9: OT9
0x50009004 C   FIELD 10w01 OT10: OT10
0x50009004 C   FIELD 11w01 OT11: OT11
0x50009004 C   FIELD 12w01 OT12: OT12
0x50009004 C   FIELD 13w01 OT13: OT13
0x50009004 C   FIELD 14w01 OT14: OT14
0x50009004 C   FIELD 15w01 OT15: OT15
0x50009008 B  REGISTER GPIOH_OSPEEDR (rw): GPIO port output speed register
0x50009008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x50009008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x50009008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x50009008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x50009008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x50009008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x50009008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x50009008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x50009008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x50009008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x50009008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x50009008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x50009008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x50009008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x50009008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x50009008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000900C B  REGISTER GPIOH_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000900C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000900C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000900C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000900C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000900C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000900C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000900C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000900C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000900C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000900C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000900C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000900C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000900C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000900C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000900C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000900C C   FIELD 30w02 PUPDR15: PUPDR15
0x50009010 B  REGISTER GPIOH_IDR (ro): GPIO port input data register
0x50009010 C   FIELD 00w01 IDR0: IDR0
0x50009010 C   FIELD 01w01 IDR1: IDR1
0x50009010 C   FIELD 02w01 IDR2: IDR2
0x50009010 C   FIELD 03w01 IDR3: IDR3
0x50009010 C   FIELD 04w01 IDR4: IDR4
0x50009010 C   FIELD 05w01 IDR5: IDR5
0x50009010 C   FIELD 06w01 IDR6: IDR6
0x50009010 C   FIELD 07w01 IDR7: IDR7
0x50009010 C   FIELD 08w01 IDR8: IDR8
0x50009010 C   FIELD 09w01 IDR9: IDR9
0x50009010 C   FIELD 10w01 IDR10: IDR10
0x50009010 C   FIELD 11w01 IDR11: IDR11
0x50009010 C   FIELD 12w01 IDR12: IDR12
0x50009010 C   FIELD 13w01 IDR13: IDR13
0x50009010 C   FIELD 14w01 IDR14: IDR14
0x50009010 C   FIELD 15w01 IDR15: IDR15
0x50009014 B  REGISTER GPIOH_ODR (rw): GPIO port output data register
0x50009014 C   FIELD 00w01 ODR0: ODR0
0x50009014 C   FIELD 01w01 ODR1: ODR1
0x50009014 C   FIELD 02w01 ODR2: ODR2
0x50009014 C   FIELD 03w01 ODR3: ODR3
0x50009014 C   FIELD 04w01 ODR4: ODR4
0x50009014 C   FIELD 05w01 ODR5: ODR5
0x50009014 C   FIELD 06w01 ODR6: ODR6
0x50009014 C   FIELD 07w01 ODR7: ODR7
0x50009014 C   FIELD 08w01 ODR8: ODR8
0x50009014 C   FIELD 09w01 ODR9: ODR9
0x50009014 C   FIELD 10w01 ODR10: ODR10
0x50009014 C   FIELD 11w01 ODR11: ODR11
0x50009014 C   FIELD 12w01 ODR12: ODR12
0x50009014 C   FIELD 13w01 ODR13: ODR13
0x50009014 C   FIELD 14w01 ODR14: ODR14
0x50009014 C   FIELD 15w01 ODR15: ODR15
0x50009018 B  REGISTER GPIOH_BSRR (wo): GPIO port bit set/reset register
0x50009018 C   FIELD 00w01 BS0: BS0
0x50009018 C   FIELD 01w01 BS1: BS1
0x50009018 C   FIELD 02w01 BS2: BS2
0x50009018 C   FIELD 03w01 BS3: BS3
0x50009018 C   FIELD 04w01 BS4: BS4
0x50009018 C   FIELD 05w01 BS5: BS5
0x50009018 C   FIELD 06w01 BS6: BS6
0x50009018 C   FIELD 07w01 BS7: BS7
0x50009018 C   FIELD 08w01 BS8: BS8
0x50009018 C   FIELD 09w01 BS9: BS9
0x50009018 C   FIELD 10w01 BS10: BS10
0x50009018 C   FIELD 11w01 BS11: BS11
0x50009018 C   FIELD 12w01 BS12: BS12
0x50009018 C   FIELD 13w01 BS13: BS13
0x50009018 C   FIELD 14w01 BS14: BS14
0x50009018 C   FIELD 15w01 BS15: BS15
0x50009018 C   FIELD 16w01 BR0: BR0
0x50009018 C   FIELD 17w01 BR1: BR1
0x50009018 C   FIELD 18w01 BR2: BR2
0x50009018 C   FIELD 19w01 BR3: BR3
0x50009018 C   FIELD 20w01 BR4: BR4
0x50009018 C   FIELD 21w01 BR5: BR5
0x50009018 C   FIELD 22w01 BR6: BR6
0x50009018 C   FIELD 23w01 BR7: BR7
0x50009018 C   FIELD 24w01 BR8: BR8
0x50009018 C   FIELD 25w01 BR9: BR9
0x50009018 C   FIELD 26w01 BR10: BR10
0x50009018 C   FIELD 27w01 BR11: BR11
0x50009018 C   FIELD 28w01 BR12: BR12
0x50009018 C   FIELD 29w01 BR13: BR13
0x50009018 C   FIELD 30w01 BR14: BR14
0x50009018 C   FIELD 31w01 BR15: BR15
0x5000901C B  REGISTER GPIOH_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000901C C   FIELD 00w01 LCK0: LCK0
0x5000901C C   FIELD 01w01 LCK1: LCK1
0x5000901C C   FIELD 02w01 LCK2: LCK2
0x5000901C C   FIELD 03w01 LCK3: LCK3
0x5000901C C   FIELD 04w01 LCK4: LCK4
0x5000901C C   FIELD 05w01 LCK5: LCK5
0x5000901C C   FIELD 06w01 LCK6: LCK6
0x5000901C C   FIELD 07w01 LCK7: LCK7
0x5000901C C   FIELD 08w01 LCK8: LCK8
0x5000901C C   FIELD 09w01 LCK9: LCK9
0x5000901C C   FIELD 10w01 LCK10: LCK10
0x5000901C C   FIELD 11w01 LCK11: LCK11
0x5000901C C   FIELD 12w01 LCK12: LCK12
0x5000901C C   FIELD 13w01 LCK13: LCK13
0x5000901C C   FIELD 14w01 LCK14: LCK14
0x5000901C C   FIELD 15w01 LCK15: LCK15
0x5000901C C   FIELD 16w01 LCKK: LCKK
0x50009020 B  REGISTER GPIOH_AFRL (rw): GPIO alternate function low register
0x50009020 C   FIELD 00w04 AFR0: AFR0
0x50009020 C   FIELD 04w04 AFR1: AFR1
0x50009020 C   FIELD 08w04 AFR2: AFR2
0x50009020 C   FIELD 12w04 AFR3: AFR3
0x50009020 C   FIELD 16w04 AFR4: AFR4
0x50009020 C   FIELD 20w04 AFR5: AFR5
0x50009020 C   FIELD 24w04 AFR6: AFR6
0x50009020 C   FIELD 28w04 AFR7: AFR7
0x50009024 B  REGISTER GPIOH_AFRH (rw): GPIO alternate function high register
0x50009024 C   FIELD 00w04 AFR8: AFR8
0x50009024 C   FIELD 04w04 AFR9: AFR9
0x50009024 C   FIELD 08w04 AFR10: AFR10
0x50009024 C   FIELD 12w04 AFR11: AFR11
0x50009024 C   FIELD 16w04 AFR12: AFR12
0x50009024 C   FIELD 20w04 AFR13: AFR13
0x50009024 C   FIELD 24w04 AFR14: AFR14
0x50009024 C   FIELD 28w04 AFR15: AFR15
0x50009028 B  REGISTER GPIOH_BRR (wo): GPIO port bit reset register
0x50009028 C   FIELD 00w01 BR0: BR0
0x50009028 C   FIELD 01w01 BR1: BR1
0x50009028 C   FIELD 02w01 BR2: BR2
0x50009028 C   FIELD 03w01 BR3: BR3
0x50009028 C   FIELD 04w01 BR4: BR4
0x50009028 C   FIELD 05w01 BR5: BR5
0x50009028 C   FIELD 06w01 BR6: BR6
0x50009028 C   FIELD 07w01 BR7: BR7
0x50009028 C   FIELD 08w01 BR8: BR8
0x50009028 C   FIELD 09w01 BR9: BR9
0x50009028 C   FIELD 10w01 BR10: BR10
0x50009028 C   FIELD 11w01 BR11: BR11
0x50009028 C   FIELD 12w01 BR12: BR12
0x50009028 C   FIELD 13w01 BR13: BR13
0x50009028 C   FIELD 14w01 BR14: BR14
0x50009028 C   FIELD 15w01 BR15: BR15
0x500093C8 B  REGISTER GPIOH_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x500093C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x500093C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x500093C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x500093C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x500093C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x500093C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x500093CC B  REGISTER GPIOH_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500093CC C   FIELD 00w16 EN_IO: EN_IO
0x500093D0 B  REGISTER GPIOH_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x500093D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x500093D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x500093D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x500093D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x500093D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x500093D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x500093D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x500093D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x500093D4 B  REGISTER GPIOH_HWCFGR7 (ro): GPIO hardware configuration register 7
0x500093D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x500093D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x500093D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x500093D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x500093D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x500093D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x500093D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x500093D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x500093D8 B  REGISTER GPIOH_HWCFGR6 (ro): GPIO hardware configuration register 6
0x500093D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x500093DC B  REGISTER GPIOH_HWCFGR5 (ro): GPIO hardware configuration register 5
0x500093DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x500093E0 B  REGISTER GPIOH_HWCFGR4 (ro): GPIO hardware configuration register 4
0x500093E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x500093E4 B  REGISTER GPIOH_HWCFGR3 (ro): GPIO hardware configuration register 3
0x500093E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x500093E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x500093E8 B  REGISTER GPIOH_HWCFGR2 (ro): GPIO hardware configuration register 2
0x500093E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x500093EC B  REGISTER GPIOH_HWCFGR1 (ro): GPIO hardware configuration register 1
0x500093EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x500093F0 B  REGISTER GPIOH_HWCFGR0 (ro): GPIO hardware configuration register 0
0x500093F0 C   FIELD 00w16 OR_RES: OR_RES
0x500093F4 B  REGISTER GPIOH_VERR (ro): GPIO version register
0x500093F4 C   FIELD 00w04 MINREV: MINREV
0x500093F4 C   FIELD 04w04 MAJREV: MAJREV
0x500093F8 B  REGISTER GPIOH_IPIDR (ro): GPIO identification register
0x500093F8 C   FIELD 00w32 IPIDR: IPIDR
0x500093FC B  REGISTER GPIOH_SIDR (ro): GPIO size identification register
0x500093FC C   FIELD 00w32 SIDR: SIDR
0x5000A000 A PERIPHERAL GPIOI
0x5000A000 B  REGISTER GPIOI_MODER (rw): GPIO port mode register
0x5000A000 C   FIELD 00w02 MODER0: MODER0
0x5000A000 C   FIELD 02w02 MODER1: MODER1
0x5000A000 C   FIELD 04w02 MODER2: MODER2
0x5000A000 C   FIELD 06w02 MODER3: MODER3
0x5000A000 C   FIELD 08w02 MODER4: MODER4
0x5000A000 C   FIELD 10w02 MODER5: MODER5
0x5000A000 C   FIELD 12w02 MODER6: MODER6
0x5000A000 C   FIELD 14w02 MODER7: MODER7
0x5000A000 C   FIELD 16w02 MODER8: MODER8
0x5000A000 C   FIELD 18w02 MODER9: MODER9
0x5000A000 C   FIELD 20w02 MODER10: MODER10
0x5000A000 C   FIELD 22w02 MODER11: MODER11
0x5000A000 C   FIELD 24w02 MODER12: MODER12
0x5000A000 C   FIELD 26w02 MODER13: MODER13
0x5000A000 C   FIELD 28w02 MODER14: MODER14
0x5000A000 C   FIELD 30w02 MODER15: MODER15
0x5000A004 B  REGISTER GPIOI_OTYPER (rw): GPIO port output type register
0x5000A004 C   FIELD 00w01 OT0: OT0
0x5000A004 C   FIELD 01w01 OT1: OT1
0x5000A004 C   FIELD 02w01 OT2: OT2
0x5000A004 C   FIELD 03w01 OT3: OT3
0x5000A004 C   FIELD 04w01 OT4: OT4
0x5000A004 C   FIELD 05w01 OT5: OT5
0x5000A004 C   FIELD 06w01 OT6: OT6
0x5000A004 C   FIELD 07w01 OT7: OT7
0x5000A004 C   FIELD 08w01 OT8: OT8
0x5000A004 C   FIELD 09w01 OT9: OT9
0x5000A004 C   FIELD 10w01 OT10: OT10
0x5000A004 C   FIELD 11w01 OT11: OT11
0x5000A004 C   FIELD 12w01 OT12: OT12
0x5000A004 C   FIELD 13w01 OT13: OT13
0x5000A004 C   FIELD 14w01 OT14: OT14
0x5000A004 C   FIELD 15w01 OT15: OT15
0x5000A008 B  REGISTER GPIOI_OSPEEDR (rw): GPIO port output speed register
0x5000A008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x5000A008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x5000A008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x5000A008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x5000A008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x5000A008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x5000A008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x5000A008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x5000A008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x5000A008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x5000A008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x5000A008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x5000A008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x5000A008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x5000A008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x5000A008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000A00C B  REGISTER GPIOI_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000A00C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000A00C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000A00C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000A00C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000A00C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000A00C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000A00C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000A00C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000A00C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000A00C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000A00C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000A00C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000A00C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000A00C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000A00C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000A00C C   FIELD 30w02 PUPDR15: PUPDR15
0x5000A010 B  REGISTER GPIOI_IDR (ro): GPIO port input data register
0x5000A010 C   FIELD 00w01 IDR0: IDR0
0x5000A010 C   FIELD 01w01 IDR1: IDR1
0x5000A010 C   FIELD 02w01 IDR2: IDR2
0x5000A010 C   FIELD 03w01 IDR3: IDR3
0x5000A010 C   FIELD 04w01 IDR4: IDR4
0x5000A010 C   FIELD 05w01 IDR5: IDR5
0x5000A010 C   FIELD 06w01 IDR6: IDR6
0x5000A010 C   FIELD 07w01 IDR7: IDR7
0x5000A010 C   FIELD 08w01 IDR8: IDR8
0x5000A010 C   FIELD 09w01 IDR9: IDR9
0x5000A010 C   FIELD 10w01 IDR10: IDR10
0x5000A010 C   FIELD 11w01 IDR11: IDR11
0x5000A010 C   FIELD 12w01 IDR12: IDR12
0x5000A010 C   FIELD 13w01 IDR13: IDR13
0x5000A010 C   FIELD 14w01 IDR14: IDR14
0x5000A010 C   FIELD 15w01 IDR15: IDR15
0x5000A014 B  REGISTER GPIOI_ODR (rw): GPIO port output data register
0x5000A014 C   FIELD 00w01 ODR0: ODR0
0x5000A014 C   FIELD 01w01 ODR1: ODR1
0x5000A014 C   FIELD 02w01 ODR2: ODR2
0x5000A014 C   FIELD 03w01 ODR3: ODR3
0x5000A014 C   FIELD 04w01 ODR4: ODR4
0x5000A014 C   FIELD 05w01 ODR5: ODR5
0x5000A014 C   FIELD 06w01 ODR6: ODR6
0x5000A014 C   FIELD 07w01 ODR7: ODR7
0x5000A014 C   FIELD 08w01 ODR8: ODR8
0x5000A014 C   FIELD 09w01 ODR9: ODR9
0x5000A014 C   FIELD 10w01 ODR10: ODR10
0x5000A014 C   FIELD 11w01 ODR11: ODR11
0x5000A014 C   FIELD 12w01 ODR12: ODR12
0x5000A014 C   FIELD 13w01 ODR13: ODR13
0x5000A014 C   FIELD 14w01 ODR14: ODR14
0x5000A014 C   FIELD 15w01 ODR15: ODR15
0x5000A018 B  REGISTER GPIOI_BSRR (wo): GPIO port bit set/reset register
0x5000A018 C   FIELD 00w01 BS0: BS0
0x5000A018 C   FIELD 01w01 BS1: BS1
0x5000A018 C   FIELD 02w01 BS2: BS2
0x5000A018 C   FIELD 03w01 BS3: BS3
0x5000A018 C   FIELD 04w01 BS4: BS4
0x5000A018 C   FIELD 05w01 BS5: BS5
0x5000A018 C   FIELD 06w01 BS6: BS6
0x5000A018 C   FIELD 07w01 BS7: BS7
0x5000A018 C   FIELD 08w01 BS8: BS8
0x5000A018 C   FIELD 09w01 BS9: BS9
0x5000A018 C   FIELD 10w01 BS10: BS10
0x5000A018 C   FIELD 11w01 BS11: BS11
0x5000A018 C   FIELD 12w01 BS12: BS12
0x5000A018 C   FIELD 13w01 BS13: BS13
0x5000A018 C   FIELD 14w01 BS14: BS14
0x5000A018 C   FIELD 15w01 BS15: BS15
0x5000A018 C   FIELD 16w01 BR0: BR0
0x5000A018 C   FIELD 17w01 BR1: BR1
0x5000A018 C   FIELD 18w01 BR2: BR2
0x5000A018 C   FIELD 19w01 BR3: BR3
0x5000A018 C   FIELD 20w01 BR4: BR4
0x5000A018 C   FIELD 21w01 BR5: BR5
0x5000A018 C   FIELD 22w01 BR6: BR6
0x5000A018 C   FIELD 23w01 BR7: BR7
0x5000A018 C   FIELD 24w01 BR8: BR8
0x5000A018 C   FIELD 25w01 BR9: BR9
0x5000A018 C   FIELD 26w01 BR10: BR10
0x5000A018 C   FIELD 27w01 BR11: BR11
0x5000A018 C   FIELD 28w01 BR12: BR12
0x5000A018 C   FIELD 29w01 BR13: BR13
0x5000A018 C   FIELD 30w01 BR14: BR14
0x5000A018 C   FIELD 31w01 BR15: BR15
0x5000A01C B  REGISTER GPIOI_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000A01C C   FIELD 00w01 LCK0: LCK0
0x5000A01C C   FIELD 01w01 LCK1: LCK1
0x5000A01C C   FIELD 02w01 LCK2: LCK2
0x5000A01C C   FIELD 03w01 LCK3: LCK3
0x5000A01C C   FIELD 04w01 LCK4: LCK4
0x5000A01C C   FIELD 05w01 LCK5: LCK5
0x5000A01C C   FIELD 06w01 LCK6: LCK6
0x5000A01C C   FIELD 07w01 LCK7: LCK7
0x5000A01C C   FIELD 08w01 LCK8: LCK8
0x5000A01C C   FIELD 09w01 LCK9: LCK9
0x5000A01C C   FIELD 10w01 LCK10: LCK10
0x5000A01C C   FIELD 11w01 LCK11: LCK11
0x5000A01C C   FIELD 12w01 LCK12: LCK12
0x5000A01C C   FIELD 13w01 LCK13: LCK13
0x5000A01C C   FIELD 14w01 LCK14: LCK14
0x5000A01C C   FIELD 15w01 LCK15: LCK15
0x5000A01C C   FIELD 16w01 LCKK: LCKK
0x5000A020 B  REGISTER GPIOI_AFRL (rw): GPIO alternate function low register
0x5000A020 C   FIELD 00w04 AFR0: AFR0
0x5000A020 C   FIELD 04w04 AFR1: AFR1
0x5000A020 C   FIELD 08w04 AFR2: AFR2
0x5000A020 C   FIELD 12w04 AFR3: AFR3
0x5000A020 C   FIELD 16w04 AFR4: AFR4
0x5000A020 C   FIELD 20w04 AFR5: AFR5
0x5000A020 C   FIELD 24w04 AFR6: AFR6
0x5000A020 C   FIELD 28w04 AFR7: AFR7
0x5000A024 B  REGISTER GPIOI_AFRH (rw): GPIO alternate function high register
0x5000A024 C   FIELD 00w04 AFR8: AFR8
0x5000A024 C   FIELD 04w04 AFR9: AFR9
0x5000A024 C   FIELD 08w04 AFR10: AFR10
0x5000A024 C   FIELD 12w04 AFR11: AFR11
0x5000A024 C   FIELD 16w04 AFR12: AFR12
0x5000A024 C   FIELD 20w04 AFR13: AFR13
0x5000A024 C   FIELD 24w04 AFR14: AFR14
0x5000A024 C   FIELD 28w04 AFR15: AFR15
0x5000A028 B  REGISTER GPIOI_BRR (wo): GPIO port bit reset register
0x5000A028 C   FIELD 00w01 BR0: BR0
0x5000A028 C   FIELD 01w01 BR1: BR1
0x5000A028 C   FIELD 02w01 BR2: BR2
0x5000A028 C   FIELD 03w01 BR3: BR3
0x5000A028 C   FIELD 04w01 BR4: BR4
0x5000A028 C   FIELD 05w01 BR5: BR5
0x5000A028 C   FIELD 06w01 BR6: BR6
0x5000A028 C   FIELD 07w01 BR7: BR7
0x5000A028 C   FIELD 08w01 BR8: BR8
0x5000A028 C   FIELD 09w01 BR9: BR9
0x5000A028 C   FIELD 10w01 BR10: BR10
0x5000A028 C   FIELD 11w01 BR11: BR11
0x5000A028 C   FIELD 12w01 BR12: BR12
0x5000A028 C   FIELD 13w01 BR13: BR13
0x5000A028 C   FIELD 14w01 BR14: BR14
0x5000A028 C   FIELD 15w01 BR15: BR15
0x5000A3C8 B  REGISTER GPIOI_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x5000A3C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x5000A3C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x5000A3C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x5000A3C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x5000A3C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x5000A3C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x5000A3CC B  REGISTER GPIOI_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x5000A3CC C   FIELD 00w16 EN_IO: EN_IO
0x5000A3D0 B  REGISTER GPIOI_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x5000A3D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x5000A3D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x5000A3D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x5000A3D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x5000A3D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x5000A3D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x5000A3D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x5000A3D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x5000A3D4 B  REGISTER GPIOI_HWCFGR7 (ro): GPIO hardware configuration register 7
0x5000A3D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x5000A3D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x5000A3D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x5000A3D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x5000A3D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x5000A3D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x5000A3D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x5000A3D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x5000A3D8 B  REGISTER GPIOI_HWCFGR6 (ro): GPIO hardware configuration register 6
0x5000A3D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x5000A3DC B  REGISTER GPIOI_HWCFGR5 (ro): GPIO hardware configuration register 5
0x5000A3DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x5000A3E0 B  REGISTER GPIOI_HWCFGR4 (ro): GPIO hardware configuration register 4
0x5000A3E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x5000A3E4 B  REGISTER GPIOI_HWCFGR3 (ro): GPIO hardware configuration register 3
0x5000A3E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x5000A3E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x5000A3E8 B  REGISTER GPIOI_HWCFGR2 (ro): GPIO hardware configuration register 2
0x5000A3E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x5000A3EC B  REGISTER GPIOI_HWCFGR1 (ro): GPIO hardware configuration register 1
0x5000A3EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x5000A3F0 B  REGISTER GPIOI_HWCFGR0 (ro): GPIO hardware configuration register 0
0x5000A3F0 C   FIELD 00w16 OR_RES: OR_RES
0x5000A3F4 B  REGISTER GPIOI_VERR (ro): GPIO version register
0x5000A3F4 C   FIELD 00w04 MINREV: MINREV
0x5000A3F4 C   FIELD 04w04 MAJREV: MAJREV
0x5000A3F8 B  REGISTER GPIOI_IPIDR (ro): GPIO identification register
0x5000A3F8 C   FIELD 00w32 IPIDR: IPIDR
0x5000A3FC B  REGISTER GPIOI_SIDR (ro): GPIO size identification register
0x5000A3FC C   FIELD 00w32 SIDR: SIDR
0x5000B000 A PERIPHERAL GPIOJ
0x5000B000 B  REGISTER GPIOJ_MODER (rw): GPIO port mode register
0x5000B000 C   FIELD 00w02 MODER0: MODER0
0x5000B000 C   FIELD 02w02 MODER1: MODER1
0x5000B000 C   FIELD 04w02 MODER2: MODER2
0x5000B000 C   FIELD 06w02 MODER3: MODER3
0x5000B000 C   FIELD 08w02 MODER4: MODER4
0x5000B000 C   FIELD 10w02 MODER5: MODER5
0x5000B000 C   FIELD 12w02 MODER6: MODER6
0x5000B000 C   FIELD 14w02 MODER7: MODER7
0x5000B000 C   FIELD 16w02 MODER8: MODER8
0x5000B000 C   FIELD 18w02 MODER9: MODER9
0x5000B000 C   FIELD 20w02 MODER10: MODER10
0x5000B000 C   FIELD 22w02 MODER11: MODER11
0x5000B000 C   FIELD 24w02 MODER12: MODER12
0x5000B000 C   FIELD 26w02 MODER13: MODER13
0x5000B000 C   FIELD 28w02 MODER14: MODER14
0x5000B000 C   FIELD 30w02 MODER15: MODER15
0x5000B004 B  REGISTER GPIOJ_OTYPER (rw): GPIO port output type register
0x5000B004 C   FIELD 00w01 OT0: OT0
0x5000B004 C   FIELD 01w01 OT1: OT1
0x5000B004 C   FIELD 02w01 OT2: OT2
0x5000B004 C   FIELD 03w01 OT3: OT3
0x5000B004 C   FIELD 04w01 OT4: OT4
0x5000B004 C   FIELD 05w01 OT5: OT5
0x5000B004 C   FIELD 06w01 OT6: OT6
0x5000B004 C   FIELD 07w01 OT7: OT7
0x5000B004 C   FIELD 08w01 OT8: OT8
0x5000B004 C   FIELD 09w01 OT9: OT9
0x5000B004 C   FIELD 10w01 OT10: OT10
0x5000B004 C   FIELD 11w01 OT11: OT11
0x5000B004 C   FIELD 12w01 OT12: OT12
0x5000B004 C   FIELD 13w01 OT13: OT13
0x5000B004 C   FIELD 14w01 OT14: OT14
0x5000B004 C   FIELD 15w01 OT15: OT15
0x5000B008 B  REGISTER GPIOJ_OSPEEDR (rw): GPIO port output speed register
0x5000B008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x5000B008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x5000B008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x5000B008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x5000B008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x5000B008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x5000B008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x5000B008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x5000B008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x5000B008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x5000B008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x5000B008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x5000B008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x5000B008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x5000B008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x5000B008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000B00C B  REGISTER GPIOJ_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000B00C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000B00C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000B00C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000B00C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000B00C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000B00C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000B00C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000B00C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000B00C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000B00C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000B00C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000B00C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000B00C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000B00C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000B00C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000B00C C   FIELD 30w02 PUPDR15: PUPDR15
0x5000B010 B  REGISTER GPIOJ_IDR (ro): GPIO port input data register
0x5000B010 C   FIELD 00w01 IDR0: IDR0
0x5000B010 C   FIELD 01w01 IDR1: IDR1
0x5000B010 C   FIELD 02w01 IDR2: IDR2
0x5000B010 C   FIELD 03w01 IDR3: IDR3
0x5000B010 C   FIELD 04w01 IDR4: IDR4
0x5000B010 C   FIELD 05w01 IDR5: IDR5
0x5000B010 C   FIELD 06w01 IDR6: IDR6
0x5000B010 C   FIELD 07w01 IDR7: IDR7
0x5000B010 C   FIELD 08w01 IDR8: IDR8
0x5000B010 C   FIELD 09w01 IDR9: IDR9
0x5000B010 C   FIELD 10w01 IDR10: IDR10
0x5000B010 C   FIELD 11w01 IDR11: IDR11
0x5000B010 C   FIELD 12w01 IDR12: IDR12
0x5000B010 C   FIELD 13w01 IDR13: IDR13
0x5000B010 C   FIELD 14w01 IDR14: IDR14
0x5000B010 C   FIELD 15w01 IDR15: IDR15
0x5000B014 B  REGISTER GPIOJ_ODR (rw): GPIO port output data register
0x5000B014 C   FIELD 00w01 ODR0: ODR0
0x5000B014 C   FIELD 01w01 ODR1: ODR1
0x5000B014 C   FIELD 02w01 ODR2: ODR2
0x5000B014 C   FIELD 03w01 ODR3: ODR3
0x5000B014 C   FIELD 04w01 ODR4: ODR4
0x5000B014 C   FIELD 05w01 ODR5: ODR5
0x5000B014 C   FIELD 06w01 ODR6: ODR6
0x5000B014 C   FIELD 07w01 ODR7: ODR7
0x5000B014 C   FIELD 08w01 ODR8: ODR8
0x5000B014 C   FIELD 09w01 ODR9: ODR9
0x5000B014 C   FIELD 10w01 ODR10: ODR10
0x5000B014 C   FIELD 11w01 ODR11: ODR11
0x5000B014 C   FIELD 12w01 ODR12: ODR12
0x5000B014 C   FIELD 13w01 ODR13: ODR13
0x5000B014 C   FIELD 14w01 ODR14: ODR14
0x5000B014 C   FIELD 15w01 ODR15: ODR15
0x5000B018 B  REGISTER GPIOJ_BSRR (wo): GPIO port bit set/reset register
0x5000B018 C   FIELD 00w01 BS0: BS0
0x5000B018 C   FIELD 01w01 BS1: BS1
0x5000B018 C   FIELD 02w01 BS2: BS2
0x5000B018 C   FIELD 03w01 BS3: BS3
0x5000B018 C   FIELD 04w01 BS4: BS4
0x5000B018 C   FIELD 05w01 BS5: BS5
0x5000B018 C   FIELD 06w01 BS6: BS6
0x5000B018 C   FIELD 07w01 BS7: BS7
0x5000B018 C   FIELD 08w01 BS8: BS8
0x5000B018 C   FIELD 09w01 BS9: BS9
0x5000B018 C   FIELD 10w01 BS10: BS10
0x5000B018 C   FIELD 11w01 BS11: BS11
0x5000B018 C   FIELD 12w01 BS12: BS12
0x5000B018 C   FIELD 13w01 BS13: BS13
0x5000B018 C   FIELD 14w01 BS14: BS14
0x5000B018 C   FIELD 15w01 BS15: BS15
0x5000B018 C   FIELD 16w01 BR0: BR0
0x5000B018 C   FIELD 17w01 BR1: BR1
0x5000B018 C   FIELD 18w01 BR2: BR2
0x5000B018 C   FIELD 19w01 BR3: BR3
0x5000B018 C   FIELD 20w01 BR4: BR4
0x5000B018 C   FIELD 21w01 BR5: BR5
0x5000B018 C   FIELD 22w01 BR6: BR6
0x5000B018 C   FIELD 23w01 BR7: BR7
0x5000B018 C   FIELD 24w01 BR8: BR8
0x5000B018 C   FIELD 25w01 BR9: BR9
0x5000B018 C   FIELD 26w01 BR10: BR10
0x5000B018 C   FIELD 27w01 BR11: BR11
0x5000B018 C   FIELD 28w01 BR12: BR12
0x5000B018 C   FIELD 29w01 BR13: BR13
0x5000B018 C   FIELD 30w01 BR14: BR14
0x5000B018 C   FIELD 31w01 BR15: BR15
0x5000B01C B  REGISTER GPIOJ_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000B01C C   FIELD 00w01 LCK0: LCK0
0x5000B01C C   FIELD 01w01 LCK1: LCK1
0x5000B01C C   FIELD 02w01 LCK2: LCK2
0x5000B01C C   FIELD 03w01 LCK3: LCK3
0x5000B01C C   FIELD 04w01 LCK4: LCK4
0x5000B01C C   FIELD 05w01 LCK5: LCK5
0x5000B01C C   FIELD 06w01 LCK6: LCK6
0x5000B01C C   FIELD 07w01 LCK7: LCK7
0x5000B01C C   FIELD 08w01 LCK8: LCK8
0x5000B01C C   FIELD 09w01 LCK9: LCK9
0x5000B01C C   FIELD 10w01 LCK10: LCK10
0x5000B01C C   FIELD 11w01 LCK11: LCK11
0x5000B01C C   FIELD 12w01 LCK12: LCK12
0x5000B01C C   FIELD 13w01 LCK13: LCK13
0x5000B01C C   FIELD 14w01 LCK14: LCK14
0x5000B01C C   FIELD 15w01 LCK15: LCK15
0x5000B01C C   FIELD 16w01 LCKK: LCKK
0x5000B020 B  REGISTER GPIOJ_AFRL (rw): GPIO alternate function low register
0x5000B020 C   FIELD 00w04 AFR0: AFR0
0x5000B020 C   FIELD 04w04 AFR1: AFR1
0x5000B020 C   FIELD 08w04 AFR2: AFR2
0x5000B020 C   FIELD 12w04 AFR3: AFR3
0x5000B020 C   FIELD 16w04 AFR4: AFR4
0x5000B020 C   FIELD 20w04 AFR5: AFR5
0x5000B020 C   FIELD 24w04 AFR6: AFR6
0x5000B020 C   FIELD 28w04 AFR7: AFR7
0x5000B024 B  REGISTER GPIOJ_AFRH (rw): GPIO alternate function high register
0x5000B024 C   FIELD 00w04 AFR8: AFR8
0x5000B024 C   FIELD 04w04 AFR9: AFR9
0x5000B024 C   FIELD 08w04 AFR10: AFR10
0x5000B024 C   FIELD 12w04 AFR11: AFR11
0x5000B024 C   FIELD 16w04 AFR12: AFR12
0x5000B024 C   FIELD 20w04 AFR13: AFR13
0x5000B024 C   FIELD 24w04 AFR14: AFR14
0x5000B024 C   FIELD 28w04 AFR15: AFR15
0x5000B028 B  REGISTER GPIOJ_BRR (wo): GPIO port bit reset register
0x5000B028 C   FIELD 00w01 BR0: BR0
0x5000B028 C   FIELD 01w01 BR1: BR1
0x5000B028 C   FIELD 02w01 BR2: BR2
0x5000B028 C   FIELD 03w01 BR3: BR3
0x5000B028 C   FIELD 04w01 BR4: BR4
0x5000B028 C   FIELD 05w01 BR5: BR5
0x5000B028 C   FIELD 06w01 BR6: BR6
0x5000B028 C   FIELD 07w01 BR7: BR7
0x5000B028 C   FIELD 08w01 BR8: BR8
0x5000B028 C   FIELD 09w01 BR9: BR9
0x5000B028 C   FIELD 10w01 BR10: BR10
0x5000B028 C   FIELD 11w01 BR11: BR11
0x5000B028 C   FIELD 12w01 BR12: BR12
0x5000B028 C   FIELD 13w01 BR13: BR13
0x5000B028 C   FIELD 14w01 BR14: BR14
0x5000B028 C   FIELD 15w01 BR15: BR15
0x5000B3C8 B  REGISTER GPIOJ_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x5000B3C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x5000B3C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x5000B3C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x5000B3C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x5000B3C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x5000B3C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x5000B3CC B  REGISTER GPIOJ_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x5000B3CC C   FIELD 00w16 EN_IO: EN_IO
0x5000B3D0 B  REGISTER GPIOJ_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x5000B3D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x5000B3D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x5000B3D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x5000B3D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x5000B3D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x5000B3D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x5000B3D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x5000B3D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x5000B3D4 B  REGISTER GPIOJ_HWCFGR7 (ro): GPIO hardware configuration register 7
0x5000B3D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x5000B3D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x5000B3D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x5000B3D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x5000B3D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x5000B3D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x5000B3D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x5000B3D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x5000B3D8 B  REGISTER GPIOJ_HWCFGR6 (ro): GPIO hardware configuration register 6
0x5000B3D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x5000B3DC B  REGISTER GPIOJ_HWCFGR5 (ro): GPIO hardware configuration register 5
0x5000B3DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x5000B3E0 B  REGISTER GPIOJ_HWCFGR4 (ro): GPIO hardware configuration register 4
0x5000B3E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x5000B3E4 B  REGISTER GPIOJ_HWCFGR3 (ro): GPIO hardware configuration register 3
0x5000B3E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x5000B3E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x5000B3E8 B  REGISTER GPIOJ_HWCFGR2 (ro): GPIO hardware configuration register 2
0x5000B3E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x5000B3EC B  REGISTER GPIOJ_HWCFGR1 (ro): GPIO hardware configuration register 1
0x5000B3EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x5000B3F0 B  REGISTER GPIOJ_HWCFGR0 (ro): GPIO hardware configuration register 0
0x5000B3F0 C   FIELD 00w16 OR_RES: OR_RES
0x5000B3F4 B  REGISTER GPIOJ_VERR (ro): GPIO version register
0x5000B3F4 C   FIELD 00w04 MINREV: MINREV
0x5000B3F4 C   FIELD 04w04 MAJREV: MAJREV
0x5000B3F8 B  REGISTER GPIOJ_IPIDR (ro): GPIO identification register
0x5000B3F8 C   FIELD 00w32 IPIDR: IPIDR
0x5000B3FC B  REGISTER GPIOJ_SIDR (ro): GPIO size identification register
0x5000B3FC C   FIELD 00w32 SIDR: SIDR
0x5000C000 A PERIPHERAL GPIOK
0x5000C000 B  REGISTER GPIOK_MODER (rw): GPIO port mode register
0x5000C000 C   FIELD 00w02 MODER0: MODER0
0x5000C000 C   FIELD 02w02 MODER1: MODER1
0x5000C000 C   FIELD 04w02 MODER2: MODER2
0x5000C000 C   FIELD 06w02 MODER3: MODER3
0x5000C000 C   FIELD 08w02 MODER4: MODER4
0x5000C000 C   FIELD 10w02 MODER5: MODER5
0x5000C000 C   FIELD 12w02 MODER6: MODER6
0x5000C000 C   FIELD 14w02 MODER7: MODER7
0x5000C000 C   FIELD 16w02 MODER8: MODER8
0x5000C000 C   FIELD 18w02 MODER9: MODER9
0x5000C000 C   FIELD 20w02 MODER10: MODER10
0x5000C000 C   FIELD 22w02 MODER11: MODER11
0x5000C000 C   FIELD 24w02 MODER12: MODER12
0x5000C000 C   FIELD 26w02 MODER13: MODER13
0x5000C000 C   FIELD 28w02 MODER14: MODER14
0x5000C000 C   FIELD 30w02 MODER15: MODER15
0x5000C004 B  REGISTER GPIOK_OTYPER (rw): GPIO port output type register
0x5000C004 C   FIELD 00w01 OT0: OT0
0x5000C004 C   FIELD 01w01 OT1: OT1
0x5000C004 C   FIELD 02w01 OT2: OT2
0x5000C004 C   FIELD 03w01 OT3: OT3
0x5000C004 C   FIELD 04w01 OT4: OT4
0x5000C004 C   FIELD 05w01 OT5: OT5
0x5000C004 C   FIELD 06w01 OT6: OT6
0x5000C004 C   FIELD 07w01 OT7: OT7
0x5000C004 C   FIELD 08w01 OT8: OT8
0x5000C004 C   FIELD 09w01 OT9: OT9
0x5000C004 C   FIELD 10w01 OT10: OT10
0x5000C004 C   FIELD 11w01 OT11: OT11
0x5000C004 C   FIELD 12w01 OT12: OT12
0x5000C004 C   FIELD 13w01 OT13: OT13
0x5000C004 C   FIELD 14w01 OT14: OT14
0x5000C004 C   FIELD 15w01 OT15: OT15
0x5000C008 B  REGISTER GPIOK_OSPEEDR (rw): GPIO port output speed register
0x5000C008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x5000C008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x5000C008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x5000C008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x5000C008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x5000C008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x5000C008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x5000C008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x5000C008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x5000C008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x5000C008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x5000C008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x5000C008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x5000C008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x5000C008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x5000C008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5000C00C B  REGISTER GPIOK_PUPDR (rw): GPIO port pull-up/pull-down register
0x5000C00C C   FIELD 00w02 PUPDR0: PUPDR0
0x5000C00C C   FIELD 02w02 PUPDR1: PUPDR1
0x5000C00C C   FIELD 04w02 PUPDR2: PUPDR2
0x5000C00C C   FIELD 06w02 PUPDR3: PUPDR3
0x5000C00C C   FIELD 08w02 PUPDR4: PUPDR4
0x5000C00C C   FIELD 10w02 PUPDR5: PUPDR5
0x5000C00C C   FIELD 12w02 PUPDR6: PUPDR6
0x5000C00C C   FIELD 14w02 PUPDR7: PUPDR7
0x5000C00C C   FIELD 16w02 PUPDR8: PUPDR8
0x5000C00C C   FIELD 18w02 PUPDR9: PUPDR9
0x5000C00C C   FIELD 20w02 PUPDR10: PUPDR10
0x5000C00C C   FIELD 22w02 PUPDR11: PUPDR11
0x5000C00C C   FIELD 24w02 PUPDR12: PUPDR12
0x5000C00C C   FIELD 26w02 PUPDR13: PUPDR13
0x5000C00C C   FIELD 28w02 PUPDR14: PUPDR14
0x5000C00C C   FIELD 30w02 PUPDR15: PUPDR15
0x5000C010 B  REGISTER GPIOK_IDR (ro): GPIO port input data register
0x5000C010 C   FIELD 00w01 IDR0: IDR0
0x5000C010 C   FIELD 01w01 IDR1: IDR1
0x5000C010 C   FIELD 02w01 IDR2: IDR2
0x5000C010 C   FIELD 03w01 IDR3: IDR3
0x5000C010 C   FIELD 04w01 IDR4: IDR4
0x5000C010 C   FIELD 05w01 IDR5: IDR5
0x5000C010 C   FIELD 06w01 IDR6: IDR6
0x5000C010 C   FIELD 07w01 IDR7: IDR7
0x5000C010 C   FIELD 08w01 IDR8: IDR8
0x5000C010 C   FIELD 09w01 IDR9: IDR9
0x5000C010 C   FIELD 10w01 IDR10: IDR10
0x5000C010 C   FIELD 11w01 IDR11: IDR11
0x5000C010 C   FIELD 12w01 IDR12: IDR12
0x5000C010 C   FIELD 13w01 IDR13: IDR13
0x5000C010 C   FIELD 14w01 IDR14: IDR14
0x5000C010 C   FIELD 15w01 IDR15: IDR15
0x5000C014 B  REGISTER GPIOK_ODR (rw): GPIO port output data register
0x5000C014 C   FIELD 00w01 ODR0: ODR0
0x5000C014 C   FIELD 01w01 ODR1: ODR1
0x5000C014 C   FIELD 02w01 ODR2: ODR2
0x5000C014 C   FIELD 03w01 ODR3: ODR3
0x5000C014 C   FIELD 04w01 ODR4: ODR4
0x5000C014 C   FIELD 05w01 ODR5: ODR5
0x5000C014 C   FIELD 06w01 ODR6: ODR6
0x5000C014 C   FIELD 07w01 ODR7: ODR7
0x5000C014 C   FIELD 08w01 ODR8: ODR8
0x5000C014 C   FIELD 09w01 ODR9: ODR9
0x5000C014 C   FIELD 10w01 ODR10: ODR10
0x5000C014 C   FIELD 11w01 ODR11: ODR11
0x5000C014 C   FIELD 12w01 ODR12: ODR12
0x5000C014 C   FIELD 13w01 ODR13: ODR13
0x5000C014 C   FIELD 14w01 ODR14: ODR14
0x5000C014 C   FIELD 15w01 ODR15: ODR15
0x5000C018 B  REGISTER GPIOK_BSRR (wo): GPIO port bit set/reset register
0x5000C018 C   FIELD 00w01 BS0: BS0
0x5000C018 C   FIELD 01w01 BS1: BS1
0x5000C018 C   FIELD 02w01 BS2: BS2
0x5000C018 C   FIELD 03w01 BS3: BS3
0x5000C018 C   FIELD 04w01 BS4: BS4
0x5000C018 C   FIELD 05w01 BS5: BS5
0x5000C018 C   FIELD 06w01 BS6: BS6
0x5000C018 C   FIELD 07w01 BS7: BS7
0x5000C018 C   FIELD 08w01 BS8: BS8
0x5000C018 C   FIELD 09w01 BS9: BS9
0x5000C018 C   FIELD 10w01 BS10: BS10
0x5000C018 C   FIELD 11w01 BS11: BS11
0x5000C018 C   FIELD 12w01 BS12: BS12
0x5000C018 C   FIELD 13w01 BS13: BS13
0x5000C018 C   FIELD 14w01 BS14: BS14
0x5000C018 C   FIELD 15w01 BS15: BS15
0x5000C018 C   FIELD 16w01 BR0: BR0
0x5000C018 C   FIELD 17w01 BR1: BR1
0x5000C018 C   FIELD 18w01 BR2: BR2
0x5000C018 C   FIELD 19w01 BR3: BR3
0x5000C018 C   FIELD 20w01 BR4: BR4
0x5000C018 C   FIELD 21w01 BR5: BR5
0x5000C018 C   FIELD 22w01 BR6: BR6
0x5000C018 C   FIELD 23w01 BR7: BR7
0x5000C018 C   FIELD 24w01 BR8: BR8
0x5000C018 C   FIELD 25w01 BR9: BR9
0x5000C018 C   FIELD 26w01 BR10: BR10
0x5000C018 C   FIELD 27w01 BR11: BR11
0x5000C018 C   FIELD 28w01 BR12: BR12
0x5000C018 C   FIELD 29w01 BR13: BR13
0x5000C018 C   FIELD 30w01 BR14: BR14
0x5000C018 C   FIELD 31w01 BR15: BR15
0x5000C01C B  REGISTER GPIOK_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5000C01C C   FIELD 00w01 LCK0: LCK0
0x5000C01C C   FIELD 01w01 LCK1: LCK1
0x5000C01C C   FIELD 02w01 LCK2: LCK2
0x5000C01C C   FIELD 03w01 LCK3: LCK3
0x5000C01C C   FIELD 04w01 LCK4: LCK4
0x5000C01C C   FIELD 05w01 LCK5: LCK5
0x5000C01C C   FIELD 06w01 LCK6: LCK6
0x5000C01C C   FIELD 07w01 LCK7: LCK7
0x5000C01C C   FIELD 08w01 LCK8: LCK8
0x5000C01C C   FIELD 09w01 LCK9: LCK9
0x5000C01C C   FIELD 10w01 LCK10: LCK10
0x5000C01C C   FIELD 11w01 LCK11: LCK11
0x5000C01C C   FIELD 12w01 LCK12: LCK12
0x5000C01C C   FIELD 13w01 LCK13: LCK13
0x5000C01C C   FIELD 14w01 LCK14: LCK14
0x5000C01C C   FIELD 15w01 LCK15: LCK15
0x5000C01C C   FIELD 16w01 LCKK: LCKK
0x5000C020 B  REGISTER GPIOK_AFRL (rw): GPIO alternate function low register
0x5000C020 C   FIELD 00w04 AFR0: AFR0
0x5000C020 C   FIELD 04w04 AFR1: AFR1
0x5000C020 C   FIELD 08w04 AFR2: AFR2
0x5000C020 C   FIELD 12w04 AFR3: AFR3
0x5000C020 C   FIELD 16w04 AFR4: AFR4
0x5000C020 C   FIELD 20w04 AFR5: AFR5
0x5000C020 C   FIELD 24w04 AFR6: AFR6
0x5000C020 C   FIELD 28w04 AFR7: AFR7
0x5000C024 B  REGISTER GPIOK_AFRH (rw): GPIO alternate function high register
0x5000C024 C   FIELD 00w04 AFR8: AFR8
0x5000C024 C   FIELD 04w04 AFR9: AFR9
0x5000C024 C   FIELD 08w04 AFR10: AFR10
0x5000C024 C   FIELD 12w04 AFR11: AFR11
0x5000C024 C   FIELD 16w04 AFR12: AFR12
0x5000C024 C   FIELD 20w04 AFR13: AFR13
0x5000C024 C   FIELD 24w04 AFR14: AFR14
0x5000C024 C   FIELD 28w04 AFR15: AFR15
0x5000C028 B  REGISTER GPIOK_BRR (wo): GPIO port bit reset register
0x5000C028 C   FIELD 00w01 BR0: BR0
0x5000C028 C   FIELD 01w01 BR1: BR1
0x5000C028 C   FIELD 02w01 BR2: BR2
0x5000C028 C   FIELD 03w01 BR3: BR3
0x5000C028 C   FIELD 04w01 BR4: BR4
0x5000C028 C   FIELD 05w01 BR5: BR5
0x5000C028 C   FIELD 06w01 BR6: BR6
0x5000C028 C   FIELD 07w01 BR7: BR7
0x5000C028 C   FIELD 08w01 BR8: BR8
0x5000C028 C   FIELD 09w01 BR9: BR9
0x5000C028 C   FIELD 10w01 BR10: BR10
0x5000C028 C   FIELD 11w01 BR11: BR11
0x5000C028 C   FIELD 12w01 BR12: BR12
0x5000C028 C   FIELD 13w01 BR13: BR13
0x5000C028 C   FIELD 14w01 BR14: BR14
0x5000C028 C   FIELD 15w01 BR15: BR15
0x5000C3C8 B  REGISTER GPIOK_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x5000C3C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x5000C3C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x5000C3C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x5000C3C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x5000C3C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x5000C3C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x5000C3CC B  REGISTER GPIOK_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x5000C3CC C   FIELD 00w16 EN_IO: EN_IO
0x5000C3D0 B  REGISTER GPIOK_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x5000C3D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x5000C3D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x5000C3D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x5000C3D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x5000C3D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x5000C3D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x5000C3D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x5000C3D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x5000C3D4 B  REGISTER GPIOK_HWCFGR7 (ro): GPIO hardware configuration register 7
0x5000C3D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x5000C3D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x5000C3D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x5000C3D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x5000C3D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x5000C3D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x5000C3D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x5000C3D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x5000C3D8 B  REGISTER GPIOK_HWCFGR6 (ro): GPIO hardware configuration register 6
0x5000C3D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x5000C3DC B  REGISTER GPIOK_HWCFGR5 (ro): GPIO hardware configuration register 5
0x5000C3DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x5000C3E0 B  REGISTER GPIOK_HWCFGR4 (ro): GPIO hardware configuration register 4
0x5000C3E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x5000C3E4 B  REGISTER GPIOK_HWCFGR3 (ro): GPIO hardware configuration register 3
0x5000C3E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x5000C3E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x5000C3E8 B  REGISTER GPIOK_HWCFGR2 (ro): GPIO hardware configuration register 2
0x5000C3E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x5000C3EC B  REGISTER GPIOK_HWCFGR1 (ro): GPIO hardware configuration register 1
0x5000C3EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x5000C3F0 B  REGISTER GPIOK_HWCFGR0 (ro): GPIO hardware configuration register 0
0x5000C3F0 C   FIELD 00w16 OR_RES: OR_RES
0x5000C3F4 B  REGISTER GPIOK_VERR (ro): GPIO version register
0x5000C3F4 C   FIELD 00w04 MINREV: MINREV
0x5000C3F4 C   FIELD 04w04 MAJREV: MAJREV
0x5000C3F8 B  REGISTER GPIOK_IPIDR (ro): GPIO identification register
0x5000C3F8 C   FIELD 00w32 IPIDR: IPIDR
0x5000C3FC B  REGISTER GPIOK_SIDR (ro): GPIO size identification register
0x5000C3FC C   FIELD 00w32 SIDR: SIDR
0x5000D000 A PERIPHERAL EXTI
0x5000D000 B  REGISTER EXTI_RTSR1 (rw): Contains only register bits for configurable events.
0x5000D000 C   FIELD 00w01 RT0: RT0
0x5000D000 C   FIELD 01w01 RT1: RT1
0x5000D000 C   FIELD 02w01 RT2: RT2
0x5000D000 C   FIELD 03w01 RT3: RT3
0x5000D000 C   FIELD 04w01 RT4: RT4
0x5000D000 C   FIELD 05w01 RT5: RT5
0x5000D000 C   FIELD 06w01 RT6: RT6
0x5000D000 C   FIELD 07w01 RT7: RT7
0x5000D000 C   FIELD 08w01 RT8: RT8
0x5000D000 C   FIELD 09w01 RT9: RT9
0x5000D000 C   FIELD 10w01 RT10: RT10
0x5000D000 C   FIELD 11w01 RT11: RT11
0x5000D000 C   FIELD 12w01 RT12: RT12
0x5000D000 C   FIELD 13w01 RT13: RT13
0x5000D000 C   FIELD 14w01 RT14: RT14
0x5000D000 C   FIELD 15w01 RT15: RT15
0x5000D000 C   FIELD 16w01 RT16: RT16
0x5000D004 B  REGISTER EXTI_FTSR1 (rw): Contains only register bits for configurable events.
0x5000D004 C   FIELD 00w01 FT0: FT0
0x5000D004 C   FIELD 01w01 FT1: FT1
0x5000D004 C   FIELD 02w01 FT2: FT2
0x5000D004 C   FIELD 03w01 FT3: FT3
0x5000D004 C   FIELD 04w01 FT4: FT4
0x5000D004 C   FIELD 05w01 FT5: FT5
0x5000D004 C   FIELD 06w01 FT6: FT6
0x5000D004 C   FIELD 07w01 FT7: FT7
0x5000D004 C   FIELD 08w01 FT8: FT8
0x5000D004 C   FIELD 09w01 FT9: FT9
0x5000D004 C   FIELD 10w01 FT10: FT10
0x5000D004 C   FIELD 11w01 FT11: FT11
0x5000D004 C   FIELD 12w01 FT12: FT12
0x5000D004 C   FIELD 13w01 FT13: FT13
0x5000D004 C   FIELD 14w01 FT14: FT14
0x5000D004 C   FIELD 15w01 FT15: FT15
0x5000D004 C   FIELD 16w01 FT16: FT16
0x5000D008 B  REGISTER EXTI_SWIER1 (rw): Contains only register bits for configurable events.
0x5000D008 C   FIELD 00w01 SWI0: SWI0
0x5000D008 C   FIELD 01w01 SWI1: SWI1
0x5000D008 C   FIELD 02w01 SWI2: SWI2
0x5000D008 C   FIELD 03w01 SWI3: SWI3
0x5000D008 C   FIELD 04w01 SWI4: SWI4
0x5000D008 C   FIELD 05w01 SWI5: SWI5
0x5000D008 C   FIELD 06w01 SWI6: SWI6
0x5000D008 C   FIELD 07w01 SWI7: SWI7
0x5000D008 C   FIELD 08w01 SWI8: SWI8
0x5000D008 C   FIELD 09w01 SWI9: SWI9
0x5000D008 C   FIELD 10w01 SWI10: SWI10
0x5000D008 C   FIELD 11w01 SWI11: SWI11
0x5000D008 C   FIELD 12w01 SWI12: SWI12
0x5000D008 C   FIELD 13w01 SWI13: SWI13
0x5000D008 C   FIELD 14w01 SWI14: SWI14
0x5000D008 C   FIELD 15w01 SWI15: SWI15
0x5000D008 C   FIELD 16w01 SWI16: SWI16
0x5000D00C B  REGISTER EXTI_RPR1 (rw): Contains only register bits for configurable events.
0x5000D00C C   FIELD 00w01 RPIF0: RPIF0
0x5000D00C C   FIELD 01w01 RPIF1: RPIF1
0x5000D00C C   FIELD 02w01 RPIF2: RPIF2
0x5000D00C C   FIELD 03w01 RPIF3: RPIF3
0x5000D00C C   FIELD 04w01 RPIF4: RPIF4
0x5000D00C C   FIELD 05w01 RPIF5: RPIF5
0x5000D00C C   FIELD 06w01 RPIF6: RPIF6
0x5000D00C C   FIELD 07w01 RPIF7: RPIF7
0x5000D00C C   FIELD 08w01 RPIF8: RPIF8
0x5000D00C C   FIELD 09w01 RPIF9: RPIF9
0x5000D00C C   FIELD 10w01 RPIF10: RPIF10
0x5000D00C C   FIELD 11w01 RPIF11: RPIF11
0x5000D00C C   FIELD 12w01 RPIF12: RPIF12
0x5000D00C C   FIELD 13w01 RPIF13: RPIF13
0x5000D00C C   FIELD 14w01 RPIF14: RPIF14
0x5000D00C C   FIELD 15w01 RPIF15: RPIF15
0x5000D00C C   FIELD 16w01 RPIF16: RPIF16
0x5000D010 B  REGISTER EXTI_FPR1 (rw): Contains only register bits for configurable events.
0x5000D010 C   FIELD 00w01 FPIF0: FPIF0
0x5000D010 C   FIELD 01w01 FPIF1: FPIF1
0x5000D010 C   FIELD 02w01 FPIF2: FPIF2
0x5000D010 C   FIELD 03w01 FPIF3: FPIF3
0x5000D010 C   FIELD 04w01 FPIF4: FPIF4
0x5000D010 C   FIELD 05w01 FPIF5: FPIF5
0x5000D010 C   FIELD 06w01 FPIF6: FPIF6
0x5000D010 C   FIELD 07w01 FPIF7: FPIF7
0x5000D010 C   FIELD 08w01 FPIF8: FPIF8
0x5000D010 C   FIELD 09w01 FPIF9: FPIF9
0x5000D010 C   FIELD 10w01 FPIF10: FPIF10
0x5000D010 C   FIELD 11w01 FPIF11: FPIF11
0x5000D010 C   FIELD 12w01 FPIF12: FPIF12
0x5000D010 C   FIELD 13w01 FPIF13: FPIF13
0x5000D010 C   FIELD 14w01 FPIF14: FPIF14
0x5000D010 C   FIELD 15w01 FPIF15: FPIF15
0x5000D010 C   FIELD 16w01 FPIF16: FPIF16
0x5000D014 B  REGISTER EXTI_TZENR1 (rw): This register provides TrustZone Write access security, a non-secure write access will generate a bus error. A non-secure read will return the register data. Contains only register bits for TrustZone capable Input events.
0x5000D014 C   FIELD 00w01 TZEN0: TZEN0
0x5000D014 C   FIELD 01w01 TZEN1: TZEN1
0x5000D014 C   FIELD 02w01 TZEN2: TZEN2
0x5000D014 C   FIELD 03w01 TZEN3: TZEN3
0x5000D014 C   FIELD 04w01 TZEN4: TZEN4
0x5000D014 C   FIELD 05w01 TZEN5: TZEN5
0x5000D014 C   FIELD 06w01 TZEN6: TZEN6
0x5000D014 C   FIELD 07w01 TZEN7: TZEN7
0x5000D014 C   FIELD 08w01 TZEN8: TZEN8
0x5000D014 C   FIELD 09w01 TZEN9: TZEN9
0x5000D014 C   FIELD 10w01 TZEN10: TZEN10
0x5000D014 C   FIELD 11w01 TZEN11: TZEN11
0x5000D014 C   FIELD 12w01 TZEN12: TZEN12
0x5000D014 C   FIELD 13w01 TZEN13: TZEN13
0x5000D014 C   FIELD 14w01 TZEN14: TZEN14
0x5000D014 C   FIELD 15w01 TZEN15: TZEN15
0x5000D014 C   FIELD 17w01 TZEN17: TZEN17
0x5000D014 C   FIELD 18w01 TZEN18: TZEN18
0x5000D014 C   FIELD 19w01 TZEN19: TZEN19
0x5000D014 C   FIELD 24w01 TZEN24: TZEN24
0x5000D014 C   FIELD 26w01 TZEN26: TZEN26
0x5000D020 B  REGISTER EXTI_RTSR2 (rw): Contains only register bits for configurable events.
0x5000D024 B  REGISTER EXTI_FTSR2 (rw): Contains only register bits for configurable events.
0x5000D028 B  REGISTER EXTI_SWIER2 (rw): Contains only register bits for configurable events.
0x5000D02C B  REGISTER EXTI_RPR2 (rw): Contains only register bits for configurable events.
0x5000D030 B  REGISTER EXTI_FPR2 (rw): Contains only register bits for configurable events.
0x5000D034 B  REGISTER EXTI_TZENR2 (rw): This register provides TrustZone Write access security, a non-secure write access will generate a bus error. A non-secure read will return the register data. Contains only register bits for TrustZone capable Input events.
0x5000D034 C   FIELD 09w01 TZEN41: TZEN41
0x5000D034 C   FIELD 22w01 TZEN54: TZEN54
0x5000D034 C   FIELD 23w01 TZEN55: TZEN55
0x5000D034 C   FIELD 24w01 TZEN56: TZEN56
0x5000D034 C   FIELD 25w01 TZEN57: TZEN57
0x5000D034 C   FIELD 26w01 TZEN58: TZEN58
0x5000D034 C   FIELD 27w01 TZEN59: TZEN59
0x5000D034 C   FIELD 28w01 TZEN60: TZEN60
0x5000D040 B  REGISTER EXTI_RTSR3 (rw): Contains only register bits for configurable events.
0x5000D040 C   FIELD 01w01 RT65: RT65
0x5000D040 C   FIELD 02w01 RT66: RT66
0x5000D040 C   FIELD 04w01 RT68: RT68
0x5000D040 C   FIELD 09w01 RT73: RT73
0x5000D040 C   FIELD 10w01 RT74: RT74
0x5000D044 B  REGISTER EXTI_FTSR3 (rw): Contains only register bits for configurable events.
0x5000D044 C   FIELD 01w01 FT65: FT65
0x5000D044 C   FIELD 02w01 FT66: FT66
0x5000D044 C   FIELD 04w01 FT68: FT68
0x5000D044 C   FIELD 09w01 FT73: FT73
0x5000D044 C   FIELD 10w01 FT74: FT74
0x5000D048 B  REGISTER EXTI_SWIER3 (rw): Contains only register bits for configurable events.
0x5000D048 C   FIELD 01w01 SWI65: SWI65
0x5000D048 C   FIELD 02w01 SWI66: SWI66
0x5000D048 C   FIELD 04w01 SWI68: SWI68
0x5000D048 C   FIELD 09w01 SWI73: SWI73
0x5000D048 C   FIELD 10w01 SWI74: SWI74
0x5000D04C B  REGISTER EXTI_RPR3 (rw): Contains only register bits for configurable events.
0x5000D04C C   FIELD 01w01 RPIF65: RPIF65
0x5000D04C C   FIELD 02w01 RPIF66: RPIF66
0x5000D04C C   FIELD 04w01 RPIF68: RPIF68
0x5000D04C C   FIELD 09w01 RPIF73: RPIF73
0x5000D04C C   FIELD 10w01 RPIF74: RPIF74
0x5000D050 B  REGISTER EXTI_FPR3 (rw): Contains only register bits for configurable events.
0x5000D050 C   FIELD 01w01 FPIF65: FPIF65
0x5000D050 C   FIELD 02w01 FPIF66: FPIF66
0x5000D050 C   FIELD 04w01 FPIF68: FPIF68
0x5000D050 C   FIELD 09w01 FPIF73: FPIF73
0x5000D050 C   FIELD 10w01 FPIF74: FPIF74
0x5000D054 B  REGISTER EXTI_TZENR3 (rw): This register provides TrustZone Write access security, a non-secure write access will generate a bus error. A non-secure read will return the register data. Contains only register bits for TrustZone capable Input events.
0x5000D060 B  REGISTER EXTI_EXTICR1 (rw): EXTIm fields contain only the number of bits in line with the nb_ioport configuration.
0x5000D060 C   FIELD 00w08 EXTI0: EXTI0
0x5000D060 C   FIELD 08w08 EXTI1: EXTI1
0x5000D060 C   FIELD 16w08 EXTI2: EXTI2
0x5000D060 C   FIELD 24w08 EXTI3: EXTI3
0x5000D064 B  REGISTER EXTI_EXTICR2 (rw): EXTIm fields contain only the number of bits in line with the nb_ioport configuration.
0x5000D064 C   FIELD 00w08 EXTI4: EXTI4
0x5000D064 C   FIELD 08w08 EXTI5: EXTI5
0x5000D064 C   FIELD 16w08 EXTI6: EXTI6
0x5000D064 C   FIELD 24w08 EXTI7: EXTI7
0x5000D068 B  REGISTER EXTI_EXTICR3 (rw): EXTIm fields contain only the number of bits in line with the nb_ioport configuration.
0x5000D068 C   FIELD 00w08 EXTI8: EXTI8
0x5000D068 C   FIELD 08w08 EXTI9: EXTI9
0x5000D068 C   FIELD 16w08 EXTI10: EXTI10
0x5000D068 C   FIELD 24w08 EXTI11: EXTI11
0x5000D06C B  REGISTER EXTI_EXTICR4 (rw): EXTIm fields contain only the number of bits in line with the nb_ioport configuration.
0x5000D06C C   FIELD 00w08 EXTI12: EXTI12
0x5000D06C C   FIELD 08w08 EXTI13: EXTI13
0x5000D06C C   FIELD 16w08 EXTI14: EXTI14
0x5000D06C C   FIELD 24w08 EXTI15: EXTI15
0x5000D080 B  REGISTER EXTI_IMR1 (rw): Contains register bits for configurable events and Direct events.
0x5000D080 C   FIELD 00w01 IM0: IM0
0x5000D080 C   FIELD 01w01 IM1: IM1
0x5000D080 C   FIELD 02w01 IM2: IM2
0x5000D080 C   FIELD 03w01 IM3: IM3
0x5000D080 C   FIELD 04w01 IM4: IM4
0x5000D080 C   FIELD 05w01 IM5: IM5
0x5000D080 C   FIELD 06w01 IM6: IM6
0x5000D080 C   FIELD 07w01 IM7: IM7
0x5000D080 C   FIELD 08w01 IM8: IM8
0x5000D080 C   FIELD 09w01 IM9: IM9
0x5000D080 C   FIELD 10w01 IM10: IM10
0x5000D080 C   FIELD 11w01 IM11: IM11
0x5000D080 C   FIELD 12w01 IM12: IM12
0x5000D080 C   FIELD 13w01 IM13: IM13
0x5000D080 C   FIELD 14w01 IM14: IM14
0x5000D080 C   FIELD 15w01 IM15: IM15
0x5000D080 C   FIELD 16w01 IM16: IM16
0x5000D080 C   FIELD 17w01 IM17: IM17
0x5000D080 C   FIELD 18w01 IM18: IM18
0x5000D080 C   FIELD 19w01 IM19: IM19
0x5000D080 C   FIELD 20w01 IM20: IM20
0x5000D080 C   FIELD 21w01 IM21: IM21
0x5000D080 C   FIELD 22w01 IM22: IM22
0x5000D080 C   FIELD 23w01 IM23: IM23
0x5000D080 C   FIELD 24w01 IM24: IM24
0x5000D080 C   FIELD 25w01 IM25: IM25
0x5000D080 C   FIELD 26w01 IM26: IM26
0x5000D080 C   FIELD 27w01 IM27: IM27
0x5000D080 C   FIELD 28w01 IM28: IM28
0x5000D080 C   FIELD 29w01 IM29: IM29
0x5000D080 C   FIELD 30w01 IM30: IM30
0x5000D080 C   FIELD 31w01 IM31: IM31
0x5000D084 B  REGISTER EXTI_EMR1 (rw): EXTI CPU wakeup with event mask register
0x5000D084 C   FIELD 00w01 EM0: EM0
0x5000D084 C   FIELD 01w01 EM1: EM1
0x5000D084 C   FIELD 02w01 EM2: EM2
0x5000D084 C   FIELD 03w01 EM3: EM3
0x5000D084 C   FIELD 04w01 EM4: EM4
0x5000D084 C   FIELD 05w01 EM5: EM5
0x5000D084 C   FIELD 06w01 EM6: EM6
0x5000D084 C   FIELD 07w01 EM7: EM7
0x5000D084 C   FIELD 08w01 EM8: EM8
0x5000D084 C   FIELD 09w01 EM9: EM9
0x5000D084 C   FIELD 10w01 EM10: EM10
0x5000D084 C   FIELD 11w01 EM11: EM11
0x5000D084 C   FIELD 12w01 EM12: EM12
0x5000D084 C   FIELD 13w01 EM13: EM13
0x5000D084 C   FIELD 14w01 EM14: EM14
0x5000D084 C   FIELD 15w01 EM15: EM15
0x5000D084 C   FIELD 17w01 EM17: EM17
0x5000D084 C   FIELD 18w01 EM18: EM18
0x5000D084 C   FIELD 19w01 EM19: EM19
0x5000D090 B  REGISTER EXTI_IMR2 (rw): Contains register bits for configurable events and direct events.
0x5000D090 C   FIELD 00w01 IM32: IM32
0x5000D090 C   FIELD 01w01 IM33: IM33
0x5000D090 C   FIELD 02w01 IM34: IM34
0x5000D090 C   FIELD 03w01 IM35: IM35
0x5000D090 C   FIELD 04w01 IM36: IM36
0x5000D090 C   FIELD 05w01 IM37: IM37
0x5000D090 C   FIELD 06w01 IM38: IM38
0x5000D090 C   FIELD 07w01 IM39: IM39
0x5000D090 C   FIELD 08w01 IM40: IM40
0x5000D090 C   FIELD 09w01 IM41: IM41
0x5000D090 C   FIELD 10w01 IM42: IM42
0x5000D090 C   FIELD 11w01 IM43: IM43
0x5000D090 C   FIELD 12w01 IM44: IM44
0x5000D090 C   FIELD 13w01 IM45: IM45
0x5000D090 C   FIELD 14w01 IM46: IM46
0x5000D090 C   FIELD 15w01 IM47: IM47
0x5000D090 C   FIELD 16w01 IM48: IM48
0x5000D090 C   FIELD 17w01 IM49: IM49
0x5000D090 C   FIELD 18w01 IM50: IM50
0x5000D090 C   FIELD 19w01 IM51: IM51
0x5000D090 C   FIELD 20w01 IM52: IM52
0x5000D090 C   FIELD 21w01 IM53: IM53
0x5000D090 C   FIELD 22w01 IM54: IM54
0x5000D090 C   FIELD 23w01 IM55: IM55
0x5000D090 C   FIELD 24w01 IM56: IM56
0x5000D090 C   FIELD 25w01 IM57: IM57
0x5000D090 C   FIELD 26w01 IM58: IM58
0x5000D090 C   FIELD 27w01 IM59: IM59
0x5000D090 C   FIELD 28w01 IM60: IM60
0x5000D090 C   FIELD 29w01 IM61: IM61
0x5000D090 C   FIELD 30w01 IM62: IM62
0x5000D090 C   FIELD 31w01 IM63: IM63
0x5000D094 B  REGISTER EXTI_EMR2 (rw): EXTI CPU wakeup with event mask register
0x5000D0A0 B  REGISTER EXTI_IMR3 (rw): Contains register bits for configurable events and direct events.
0x5000D0A0 C   FIELD 00w01 IM64: IM64
0x5000D0A0 C   FIELD 01w01 IM65: IM65
0x5000D0A0 C   FIELD 02w01 IM66: IM66
0x5000D0A0 C   FIELD 03w01 IM67: IM67
0x5000D0A0 C   FIELD 04w01 IM68: IM68
0x5000D0A0 C   FIELD 05w01 IM69: IM69
0x5000D0A0 C   FIELD 06w01 IM70: IM70
0x5000D0A0 C   FIELD 07w01 IM71: IM71
0x5000D0A0 C   FIELD 08w01 IM72: IM72
0x5000D0A0 C   FIELD 09w01 IM73: IM73
0x5000D0A0 C   FIELD 10w01 IM74: IM74
0x5000D0A0 C   FIELD 11w01 IM75: IM75
0x5000D0A4 B  REGISTER EXTI_EMR3 (rw): EXTI CPU wakeup with event mask register
0x5000D0A4 C   FIELD 02w01 EM66: EM66
0x5000D0C0 B  REGISTER EXTI_C2IMR1 (rw): Contains register bits for configurable events and Direct events.
0x5000D0C0 C   FIELD 00w01 IM0: IM0
0x5000D0C0 C   FIELD 01w01 IM1: IM1
0x5000D0C0 C   FIELD 02w01 IM2: IM2
0x5000D0C0 C   FIELD 03w01 IM3: IM3
0x5000D0C0 C   FIELD 04w01 IM4: IM4
0x5000D0C0 C   FIELD 05w01 IM5: IM5
0x5000D0C0 C   FIELD 06w01 IM6: IM6
0x5000D0C0 C   FIELD 07w01 IM7: IM7
0x5000D0C0 C   FIELD 08w01 IM8: IM8
0x5000D0C0 C   FIELD 09w01 IM9: IM9
0x5000D0C0 C   FIELD 10w01 IM10: IM10
0x5000D0C0 C   FIELD 11w01 IM11: IM11
0x5000D0C0 C   FIELD 12w01 IM12: IM12
0x5000D0C0 C   FIELD 13w01 IM13: IM13
0x5000D0C0 C   FIELD 14w01 IM14: IM14
0x5000D0C0 C   FIELD 15w01 IM15: IM15
0x5000D0C0 C   FIELD 16w01 IM16: IM16
0x5000D0C0 C   FIELD 17w01 IM17: IM17
0x5000D0C0 C   FIELD 18w01 IM18: IM18
0x5000D0C0 C   FIELD 19w01 IM19: IM19
0x5000D0C0 C   FIELD 20w01 IM20: IM20
0x5000D0C0 C   FIELD 21w01 IM21: IM21
0x5000D0C0 C   FIELD 22w01 IM22: IM22
0x5000D0C0 C   FIELD 23w01 IM23: IM23
0x5000D0C0 C   FIELD 24w01 IM24: IM24
0x5000D0C0 C   FIELD 25w01 IM25: IM25
0x5000D0C0 C   FIELD 26w01 IM26: IM26
0x5000D0C0 C   FIELD 27w01 IM27: IM27
0x5000D0C0 C   FIELD 28w01 IM28: IM28
0x5000D0C0 C   FIELD 29w01 IM29: IM29
0x5000D0C0 C   FIELD 30w01 IM30: IM30
0x5000D0C0 C   FIELD 31w01 IM31: IM31
0x5000D0C4 B  REGISTER EXTI_C2EMR1 (rw): EXTI CPU2 wakeup with event mask register
0x5000D0C4 C   FIELD 00w01 EM0: EM0
0x5000D0C4 C   FIELD 01w01 EM1: EM1
0x5000D0C4 C   FIELD 02w01 EM2: EM2
0x5000D0C4 C   FIELD 03w01 EM3: EM3
0x5000D0C4 C   FIELD 04w01 EM4: EM4
0x5000D0C4 C   FIELD 05w01 EM5: EM5
0x5000D0C4 C   FIELD 06w01 EM6: EM6
0x5000D0C4 C   FIELD 07w01 EM7: EM7
0x5000D0C4 C   FIELD 08w01 EM8: EM8
0x5000D0C4 C   FIELD 09w01 EM9: EM9
0x5000D0C4 C   FIELD 10w01 EM10: EM10
0x5000D0C4 C   FIELD 11w01 EM11: EM11
0x5000D0C4 C   FIELD 12w01 EM12: EM12
0x5000D0C4 C   FIELD 13w01 EM13: EM13
0x5000D0C4 C   FIELD 14w01 EM14: EM14
0x5000D0C4 C   FIELD 15w01 EM15: EM15
0x5000D0C4 C   FIELD 17w01 EM17: EM17
0x5000D0C4 C   FIELD 18w01 EM18: EM18
0x5000D0C4 C   FIELD 19w01 EM19: EM19
0x5000D0D0 B  REGISTER EXTI_C2IMR2 (rw): Contains register bits for configurable events and direct events.
0x5000D0D0 C   FIELD 00w01 IM32: IM32
0x5000D0D0 C   FIELD 01w01 IM33: IM33
0x5000D0D0 C   FIELD 02w01 IM34: IM34
0x5000D0D0 C   FIELD 03w01 IM35: IM35
0x5000D0D0 C   FIELD 04w01 IM36: IM36
0x5000D0D0 C   FIELD 05w01 IM37: IM37
0x5000D0D0 C   FIELD 06w01 IM38: IM38
0x5000D0D0 C   FIELD 07w01 IM39: IM39
0x5000D0D0 C   FIELD 08w01 IM40: IM40
0x5000D0D0 C   FIELD 09w01 IM41: IM41
0x5000D0D0 C   FIELD 10w01 IM42: IM42
0x5000D0D0 C   FIELD 11w01 IM43: IM43
0x5000D0D0 C   FIELD 12w01 IM44: IM44
0x5000D0D0 C   FIELD 13w01 IM45: IM45
0x5000D0D0 C   FIELD 14w01 IM46: IM46
0x5000D0D0 C   FIELD 15w01 IM47: IM47
0x5000D0D0 C   FIELD 16w01 IM48: IM48
0x5000D0D0 C   FIELD 17w01 IM49: IM49
0x5000D0D0 C   FIELD 18w01 IM50: IM50
0x5000D0D0 C   FIELD 19w01 IM51: IM51
0x5000D0D0 C   FIELD 20w01 IM52: IM52
0x5000D0D0 C   FIELD 21w01 IM53: IM53
0x5000D0D0 C   FIELD 22w01 IM54: IM54
0x5000D0D0 C   FIELD 23w01 IM55: IM55
0x5000D0D0 C   FIELD 24w01 IM56: IM56
0x5000D0D0 C   FIELD 25w01 IM57: IM57
0x5000D0D0 C   FIELD 26w01 IM58: IM58
0x5000D0D0 C   FIELD 27w01 IM59: IM59
0x5000D0D0 C   FIELD 28w01 IM60: IM60
0x5000D0D0 C   FIELD 29w01 IM61: IM61
0x5000D0D0 C   FIELD 30w01 IM62: IM62
0x5000D0D0 C   FIELD 31w01 IM63: IM63
0x5000D0D4 B  REGISTER EXTI_C2EMR2 (rw): EXTI CPU2 wakeup with event mask register
0x5000D0E0 B  REGISTER EXTI_C2IMR3 (rw): Contains register bits for configurable events and direct events.
0x5000D0E0 C   FIELD 00w01 IM64: IM64
0x5000D0E0 C   FIELD 01w01 IM65: IM65
0x5000D0E0 C   FIELD 02w01 IM66: IM66
0x5000D0E0 C   FIELD 03w01 IM67: IM67
0x5000D0E0 C   FIELD 04w01 IM68: IM68
0x5000D0E0 C   FIELD 05w01 IM69: IM69
0x5000D0E0 C   FIELD 06w01 IM70: IM70
0x5000D0E0 C   FIELD 07w01 IM71: IM71
0x5000D0E0 C   FIELD 08w01 IM72: IM72
0x5000D0E0 C   FIELD 09w01 IM73: IM73
0x5000D0E0 C   FIELD 10w01 IM74: IM74
0x5000D0E0 C   FIELD 11w01 IM75: IM75
0x5000D0E4 B  REGISTER EXTI_C2EMR3 (rw): EXTI CPU2 wakeup with event mask register
0x5000D0E4 C   FIELD 02w01 EM66: EM66
0x5000D3C0 B  REGISTER EXTI_HWCFGR13 (ro): EXTI hardware configuration register 13
0x5000D3C0 C   FIELD 00w32 TZ: TZ
0x5000D3C4 B  REGISTER EXTI_HWCFGR12 (ro): EXTI hardware configuration register 12
0x5000D3C4 C   FIELD 00w32 TZ: TZ
0x5000D3C8 B  REGISTER EXTI_HWCFGR11 (ro): EXTI hardware configuration register 11
0x5000D3C8 C   FIELD 00w32 TZ: TZ
0x5000D3CC B  REGISTER EXTI_HWCFGR10 (ro): EXTI hardware configuration register 10
0x5000D3D0 B  REGISTER EXTI_HWCFGR9 (ro): EXTI hardware configuration register 9
0x5000D3D4 B  REGISTER EXTI_HWCFGR8 (ro): EXTI hardware configuration register 8
0x5000D3D8 B  REGISTER EXTI_HWCFGR7 (ro): EXTI hardware configuration register 7
0x5000D3D8 C   FIELD 00w32 CPUEVENT: CPUEVENT
0x5000D3DC B  REGISTER EXTI_HWCFGR6 (ro): EXTI hardware configuration register 6
0x5000D3DC C   FIELD 00w32 CPUEVENT: CPUEVENT
0x5000D3E0 B  REGISTER EXTI_HWCFGR5 (ro): EXTI hardware configuration register 5
0x5000D3E0 C   FIELD 00w32 CPUEVENT: CPUEVENT
0x5000D3E4 B  REGISTER EXTI_HWCFGR4 (ro): EXTI hardware configuration register 4
0x5000D3E4 C   FIELD 00w32 EVENT_TRG: EVENT_TRG
0x5000D3E8 B  REGISTER EXTI_HWCFGR3 (ro): EXTI hardware configuration register 3
0x5000D3E8 C   FIELD 00w32 EVENT_TRG: EVENT_TRG
0x5000D3EC B  REGISTER EXTI_HWCFGR2 (ro): EXTI hardware configuration register 2
0x5000D3EC C   FIELD 00w32 EVENT_TRG: EVENT_TRG
0x5000D3F0 B  REGISTER EXTI_HWCFGR1 (ro): EXTI hardware configuration register 1
0x5000D3F0 C   FIELD 00w08 NBEVENTS: NBEVENTS
0x5000D3F0 C   FIELD 08w04 NBCPUS: NBCPUS
0x5000D3F0 C   FIELD 12w04 CPUEVTEN: CPUEVTEN
0x5000D3F0 C   FIELD 16w08 NBIOPORT: NBIOPORT
0x5000D3F4 B  REGISTER EXTI_VERR (ro): EXTI IP version register
0x5000D3F4 C   FIELD 00w04 MINREV: MINREV
0x5000D3F4 C   FIELD 04w04 MAJREV: MAJREV
0x5000D3F8 B  REGISTER EXTI_IPIDR (ro): EXTI identification register
0x5000D3F8 C   FIELD 00w32 IPID: IPID
0x5000D3FC B  REGISTER EXTI_SIDR (ro): EXTI size ID register
0x5000D3FC C   FIELD 00w32 SID: SID
0x50020000 A PERIPHERAL SYSCFG
0x50020000 B  REGISTER SYSCFG_BOOTR: This register is used to know the state of BOOT pins and to control pull-up to reduce the static power consumption on the pin set to high level. )
0x50020000 C   FIELD 00w01 BOOT0 (ro): BOOT0
0x50020000 C   FIELD 01w01 BOOT1 (ro): BOOT1
0x50020000 C   FIELD 02w01 BOOT2 (ro): BOOT2
0x50020000 C   FIELD 04w01 BOOT0_PD (rw): BOOT0_PD
0x50020000 C   FIELD 05w01 BOOT1_PD (rw): BOOT1_PD
0x50020000 C   FIELD 06w01 BOOT2_PD (rw): BOOT2_PD
0x50020004 B  REGISTER SYSCFG_PMCSETR (rw): SYSCFG peripheral mode configuration set register
0x50020004 C   FIELD 00w01 I2C1_FMP: I2C1_FMP
0x50020004 C   FIELD 01w01 I2C2_FMP: I2C2_FMP
0x50020004 C   FIELD 02w01 I2C3_FMP: I2C3_FMP
0x50020004 C   FIELD 03w01 I2C4_FMP: I2C4_FMP
0x50020004 C   FIELD 04w01 I2C5_FMP: I2C5_FMP
0x50020004 C   FIELD 05w01 I2C6_FMP: I2C6_FMP
0x50020004 C   FIELD 08w01 EN_BOOSTER: EN_BOOSTER
0x50020004 C   FIELD 09w01 ANASWVDD: ANASWVDD
0x50020004 C   FIELD 16w01 ETH_CLK_SEL: ETH_CLK_SEL
0x50020004 C   FIELD 17w01 ETH_REF_CLK_SEL: ETH_REF_CLK_SEL
0x50020004 C   FIELD 20w01 ETH_SELMII: ETH_SELMII
0x50020004 C   FIELD 21w03 ETH_SEL: ETH_SEL
0x50020004 C   FIELD 24w01 ANA0_SEL: ANA0_SEL
0x50020004 C   FIELD 25w01 ANA1_SEL: ANA1_SEL
0x50020018 B  REGISTER SYSCFG_IOCTRLSETR (rw): SYSCFG IO control register
0x50020018 C   FIELD 00w01 HSLVEN_TRACE: HSLVEN_TRACE
0x50020018 C   FIELD 01w01 HSLVEN_QUADSPI: HSLVEN_QUADSPI
0x50020018 C   FIELD 02w01 HSLVEN_ETH: HSLVEN_ETH
0x50020018 C   FIELD 03w01 HSLVEN_SDMMC: HSLVEN_SDMMC
0x50020018 C   FIELD 04w01 HSLVEN_SPI: HSLVEN_SPI
0x5002001C B  REGISTER SYSCFG_ICNR (rw): SYSCFG interconnect control register
0x5002001C C   FIELD 00w01 AXI_M0: AXI_M0
0x5002001C C   FIELD 01w01 AXI_M1: AXI_M1
0x5002001C C   FIELD 02w01 AXI_M2: AXI_M2
0x5002001C C   FIELD 03w01 AXI_M3: AXI_M3
0x5002001C C   FIELD 05w01 AXI_M5: AXI_M5
0x5002001C C   FIELD 06w01 AXI_M6: AXI_M6
0x5002001C C   FIELD 07w01 AXI_M7: AXI_M7
0x5002001C C   FIELD 08w01 AXI_M8: AXI_M8
0x5002001C C   FIELD 09w01 AXI_M9: AXI_M9
0x5002001C C   FIELD 10w01 AXI_M10: AXI_M10
0x50020020 B  REGISTER SYSCFG_CMPCR: SYSCFG compensation cell control register
0x50020020 C   FIELD 01w01 SW_CTRL (rw): SW_CTRL
0x50020020 C   FIELD 08w01 READY (ro): READY
0x50020020 C   FIELD 16w04 RANSRC (rw): RANSRC
0x50020020 C   FIELD 20w04 RAPSRC (rw): RAPSRC
0x50020020 C   FIELD 24w04 ANSRC (ro): ANSRC
0x50020020 C   FIELD 28w04 APSRC (ro): APSRC
0x50020024 B  REGISTER SYSCFG_CMPENSETR (rw): SYSCFG compensation cell enable set register
0x50020024 C   FIELD 00w01 MPU_EN: MPU_EN
0x50020024 C   FIELD 01w01 MCU_EN: MCU_EN
0x50020028 B  REGISTER SYSCFG_CMPENCLRR (rw): SYSCFG compensation cell enable set register
0x50020028 C   FIELD 00w01 MPU_EN: MPU_EN
0x50020028 C   FIELD 01w01 MCU_EN: MCU_EN
0x5002002C B  REGISTER SYSCFG_CBR (rw): SYSCFG control timer break register
0x5002002C C   FIELD 00w01 CLL: CLL
0x5002002C C   FIELD 02w01 PVDL: PVDL
0x50020044 B  REGISTER SYSCFG_PMCCLRR (rw): SYSCFG peripheral mode configuration clear register
0x50020044 C   FIELD 00w01 I2C1_FMP: I2C1_FMP
0x50020044 C   FIELD 01w01 I2C2_FMP: I2C2_FMP
0x50020044 C   FIELD 02w01 I2C3_FMP: I2C3_FMP
0x50020044 C   FIELD 03w01 I2C4_FMP: I2C4_FMP
0x50020044 C   FIELD 04w01 I2C5_FMP: I2C5_FMP
0x50020044 C   FIELD 05w01 I2C6_FMP: I2C6_FMP
0x50020044 C   FIELD 08w01 EN_BOOSTER: EN_BOOSTER
0x50020044 C   FIELD 09w01 ANASWVDD: ANASWVDD
0x50020044 C   FIELD 16w01 ETH_CLK_SEL: ETH_CLK_SEL
0x50020044 C   FIELD 17w01 ETH_REF_CLK_SEL: ETH_REF_CLK_SEL
0x50020044 C   FIELD 20w01 ETH_SELMII: ETH_SELMII
0x50020044 C   FIELD 21w03 ETH_SEL: ETH_SEL
0x50020044 C   FIELD 24w01 ANA0_SEL: ANA0_SEL
0x50020044 C   FIELD 25w01 ANA1_SEL: ANA1_SEL
0x50020058 B  REGISTER SYSCFG_IOCTRLCLRR (rw): SYSCFG IO control register
0x50020058 C   FIELD 00w01 HSLVEN_TRACE: HSLVEN_TRACE
0x50020058 C   FIELD 01w01 HSLVEN_QUADSPI: HSLVEN_QUADSPI
0x50020058 C   FIELD 02w01 HSLVEN_ETH: HSLVEN_ETH
0x50020058 C   FIELD 03w01 HSLVEN_SDMMC: HSLVEN_SDMMC
0x50020058 C   FIELD 04w01 HSLVEN_SPI: HSLVEN_SPI
0x500203F4 B  REGISTER SYSCFG_VERR (ro): SYSCFG version register
0x500203F4 C   FIELD 00w04 MINREV: MINREV
0x500203F4 C   FIELD 04w04 MAJREV: MAJREV
0x500203F8 B  REGISTER SYSCFG_IPIDR (ro): SYSCFG identification register
0x500203F8 C   FIELD 00w32 ID: ID
0x500203FC B  REGISTER SYSCFG_SIDR (ro): SYSCFG size identification register
0x500203FC C   FIELD 00w32 SID: SID
0x50021000 A PERIPHERAL LPTIM2
0x50021000 B  REGISTER LPTIM_ISR (ro): LPTIM interrupt and status register
0x50021000 C   FIELD 00w01 CMPM: CMPM
0x50021000 C   FIELD 01w01 ARRM: ARRM
0x50021000 C   FIELD 02w01 EXTTRIG: EXTTRIG
0x50021000 C   FIELD 03w01 CMPOK: CMPOK
0x50021000 C   FIELD 04w01 ARROK: ARROK
0x50021000 C   FIELD 05w01 UP: UP
0x50021000 C   FIELD 06w01 DOWN: DOWN
0x50021004 B  REGISTER LPTIM_ICR (wo): LPTIM interrupt clear register
0x50021004 C   FIELD 00w01 CMPMCF: CMPMCF
0x50021004 C   FIELD 01w01 ARRMCF: ARRMCF
0x50021004 C   FIELD 02w01 EXTTRIGCF: EXTTRIGCF
0x50021004 C   FIELD 03w01 CMPOKCF: CMPOKCF
0x50021004 C   FIELD 04w01 ARROKCF: ARROKCF
0x50021004 C   FIELD 05w01 UPCF: UPCF
0x50021004 C   FIELD 06w01 DOWNCF: DOWNCF
0x50021008 B  REGISTER LPTIM_IER (rw): LPTIM interrupt enable register
0x50021008 C   FIELD 00w01 CMPMIE: CMPMIE
0x50021008 C   FIELD 01w01 ARRMIE: ARRMIE
0x50021008 C   FIELD 02w01 EXTTRIGIE: EXTTRIGIE
0x50021008 C   FIELD 03w01 CMPOKIE: CMPOKIE
0x50021008 C   FIELD 04w01 ARROKIE: ARROKIE
0x50021008 C   FIELD 05w01 UPIE: UPIE
0x50021008 C   FIELD 06w01 DOWNIE: DOWNIE
0x5002100C B  REGISTER LPTIM_CFGR (rw): LPTIM configuration register
0x5002100C C   FIELD 00w01 CKSEL: CKSEL
0x5002100C C   FIELD 01w02 CKPOL: CKPOL
0x5002100C C   FIELD 03w02 CKFLT: CKFLT
0x5002100C C   FIELD 06w02 TRGFLT: TRGFLT
0x5002100C C   FIELD 09w03 PRESC: PRESC
0x5002100C C   FIELD 13w03 TRIGSEL: TRIGSEL
0x5002100C C   FIELD 17w02 TRIGEN: TRIGEN
0x5002100C C   FIELD 19w01 TIMOUT: TIMOUT
0x5002100C C   FIELD 20w01 WAVE: WAVE
0x5002100C C   FIELD 21w01 WAVPOL: WAVPOL
0x5002100C C   FIELD 22w01 PRELOAD: PRELOAD
0x5002100C C   FIELD 23w01 COUNTMODE: COUNTMODE
0x5002100C C   FIELD 24w01 ENC: ENC
0x50021010 B  REGISTER LPTIM_CR (rw): LPTIM control register
0x50021010 C   FIELD 00w01 ENABLE: ENABLE
0x50021010 C   FIELD 01w01 SNGSTRT: SNGSTRT
0x50021010 C   FIELD 02w01 CNTSTRT: CNTSTRT
0x50021010 C   FIELD 03w01 COUNTRST: COUNTRST
0x50021010 C   FIELD 04w01 RSTARE: RSTARE
0x50021014 B  REGISTER LPTIM_CMP (rw): LPTIM compare register
0x50021014 C   FIELD 00w16 CMP: CMP
0x50021018 B  REGISTER LPTIM_ARR (rw): LPTIM autoreload register
0x50021018 C   FIELD 00w16 ARR: ARR
0x5002101C B  REGISTER LPTIM_CNT (ro): LPTIM counter register
0x5002101C C   FIELD 00w16 CNT: CNT
0x50021024 B  REGISTER LPTIM_CFGR2 (rw): LPTIM configuration register 2
0x50021024 C   FIELD 00w02 IN1SEL: IN1SEL
0x50021024 C   FIELD 04w02 IN2SEL: IN2SEL
0x500213F0 B  REGISTER LPTIM1_HWCFGR (ro): LPTIM 1 peripheral hardware configuration register
0x500213F0 C   FIELD 00w08 CFG1: CFG1
0x500213F0 C   FIELD 08w08 CFG2: CFG2
0x500213F0 C   FIELD 16w04 CFG3: CFG3
0x500213F0 C   FIELD 24w08 CFG4: CFG4
0x500213F4 B  REGISTER LPTIM_VERR (ro): LPTIM peripheral version identification register
0x500213F4 C   FIELD 00w04 MINREV: MINREV
0x500213F4 C   FIELD 04w04 MAJREV: MAJREV
0x500213F8 B  REGISTER LPTIM_PIDR (ro): LPTIM peripheral type identification register
0x500213F8 C   FIELD 00w32 P_ID: P_ID
0x500213FC B  REGISTER LPTIM_SIDR (ro): LPTIM registers map size identification register
0x500213FC C   FIELD 00w32 S_ID: S_ID
0x50022000 A PERIPHERAL LPTIM3
0x50022000 B  REGISTER LPTIM_ISR (ro): LPTIM interrupt and status register
0x50022000 C   FIELD 00w01 CMPM: CMPM
0x50022000 C   FIELD 01w01 ARRM: ARRM
0x50022000 C   FIELD 02w01 EXTTRIG: EXTTRIG
0x50022000 C   FIELD 03w01 CMPOK: CMPOK
0x50022000 C   FIELD 04w01 ARROK: ARROK
0x50022000 C   FIELD 05w01 UP: UP
0x50022000 C   FIELD 06w01 DOWN: DOWN
0x50022004 B  REGISTER LPTIM_ICR (wo): LPTIM interrupt clear register
0x50022004 C   FIELD 00w01 CMPMCF: CMPMCF
0x50022004 C   FIELD 01w01 ARRMCF: ARRMCF
0x50022004 C   FIELD 02w01 EXTTRIGCF: EXTTRIGCF
0x50022004 C   FIELD 03w01 CMPOKCF: CMPOKCF
0x50022004 C   FIELD 04w01 ARROKCF: ARROKCF
0x50022004 C   FIELD 05w01 UPCF: UPCF
0x50022004 C   FIELD 06w01 DOWNCF: DOWNCF
0x50022008 B  REGISTER LPTIM_IER (rw): LPTIM interrupt enable register
0x50022008 C   FIELD 00w01 CMPMIE: CMPMIE
0x50022008 C   FIELD 01w01 ARRMIE: ARRMIE
0x50022008 C   FIELD 02w01 EXTTRIGIE: EXTTRIGIE
0x50022008 C   FIELD 03w01 CMPOKIE: CMPOKIE
0x50022008 C   FIELD 04w01 ARROKIE: ARROKIE
0x50022008 C   FIELD 05w01 UPIE: UPIE
0x50022008 C   FIELD 06w01 DOWNIE: DOWNIE
0x5002200C B  REGISTER LPTIM_CFGR (rw): LPTIM configuration register
0x5002200C C   FIELD 00w01 CKSEL: CKSEL
0x5002200C C   FIELD 01w02 CKPOL: CKPOL
0x5002200C C   FIELD 03w02 CKFLT: CKFLT
0x5002200C C   FIELD 06w02 TRGFLT: TRGFLT
0x5002200C C   FIELD 09w03 PRESC: PRESC
0x5002200C C   FIELD 13w03 TRIGSEL: TRIGSEL
0x5002200C C   FIELD 17w02 TRIGEN: TRIGEN
0x5002200C C   FIELD 19w01 TIMOUT: TIMOUT
0x5002200C C   FIELD 20w01 WAVE: WAVE
0x5002200C C   FIELD 21w01 WAVPOL: WAVPOL
0x5002200C C   FIELD 22w01 PRELOAD: PRELOAD
0x5002200C C   FIELD 23w01 COUNTMODE: COUNTMODE
0x5002200C C   FIELD 24w01 ENC: ENC
0x50022010 B  REGISTER LPTIM_CR (rw): LPTIM control register
0x50022010 C   FIELD 00w01 ENABLE: ENABLE
0x50022010 C   FIELD 01w01 SNGSTRT: SNGSTRT
0x50022010 C   FIELD 02w01 CNTSTRT: CNTSTRT
0x50022010 C   FIELD 03w01 COUNTRST: COUNTRST
0x50022010 C   FIELD 04w01 RSTARE: RSTARE
0x50022014 B  REGISTER LPTIM_CMP (rw): LPTIM compare register
0x50022014 C   FIELD 00w16 CMP: CMP
0x50022018 B  REGISTER LPTIM_ARR (rw): LPTIM autoreload register
0x50022018 C   FIELD 00w16 ARR: ARR
0x5002201C B  REGISTER LPTIM_CNT (ro): LPTIM counter register
0x5002201C C   FIELD 00w16 CNT: CNT
0x50022024 B  REGISTER LPTIM_CFGR2 (rw): LPTIM configuration register 2
0x50022024 C   FIELD 00w02 IN1SEL: IN1SEL
0x50022024 C   FIELD 04w02 IN2SEL: IN2SEL
0x500223F0 B  REGISTER LPTIM1_HWCFGR (ro): LPTIM 1 peripheral hardware configuration register
0x500223F0 C   FIELD 00w08 CFG1: CFG1
0x500223F0 C   FIELD 08w08 CFG2: CFG2
0x500223F0 C   FIELD 16w04 CFG3: CFG3
0x500223F0 C   FIELD 24w08 CFG4: CFG4
0x500223F4 B  REGISTER LPTIM_VERR (ro): LPTIM peripheral version identification register
0x500223F4 C   FIELD 00w04 MINREV: MINREV
0x500223F4 C   FIELD 04w04 MAJREV: MAJREV
0x500223F8 B  REGISTER LPTIM_PIDR (ro): LPTIM peripheral type identification register
0x500223F8 C   FIELD 00w32 P_ID: P_ID
0x500223FC B  REGISTER LPTIM_SIDR (ro): LPTIM registers map size identification register
0x500223FC C   FIELD 00w32 S_ID: S_ID
0x50023000 A PERIPHERAL LPTIM4
0x50023000 B  REGISTER LPTIM_ISR (ro): LPTIM interrupt and status register
0x50023000 C   FIELD 00w01 CMPM: CMPM
0x50023000 C   FIELD 01w01 ARRM: ARRM
0x50023000 C   FIELD 02w01 EXTTRIG: EXTTRIG
0x50023000 C   FIELD 03w01 CMPOK: CMPOK
0x50023000 C   FIELD 04w01 ARROK: ARROK
0x50023000 C   FIELD 05w01 UP: UP
0x50023000 C   FIELD 06w01 DOWN: DOWN
0x50023004 B  REGISTER LPTIM_ICR (wo): LPTIM interrupt clear register
0x50023004 C   FIELD 00w01 CMPMCF: CMPMCF
0x50023004 C   FIELD 01w01 ARRMCF: ARRMCF
0x50023004 C   FIELD 02w01 EXTTRIGCF: EXTTRIGCF
0x50023004 C   FIELD 03w01 CMPOKCF: CMPOKCF
0x50023004 C   FIELD 04w01 ARROKCF: ARROKCF
0x50023004 C   FIELD 05w01 UPCF: UPCF
0x50023004 C   FIELD 06w01 DOWNCF: DOWNCF
0x50023008 B  REGISTER LPTIM_IER (rw): LPTIM interrupt enable register
0x50023008 C   FIELD 00w01 CMPMIE: CMPMIE
0x50023008 C   FIELD 01w01 ARRMIE: ARRMIE
0x50023008 C   FIELD 02w01 EXTTRIGIE: EXTTRIGIE
0x50023008 C   FIELD 03w01 CMPOKIE: CMPOKIE
0x50023008 C   FIELD 04w01 ARROKIE: ARROKIE
0x50023008 C   FIELD 05w01 UPIE: UPIE
0x50023008 C   FIELD 06w01 DOWNIE: DOWNIE
0x5002300C B  REGISTER LPTIM_CFGR (rw): LPTIM configuration register
0x5002300C C   FIELD 00w01 CKSEL: CKSEL
0x5002300C C   FIELD 01w02 CKPOL: CKPOL
0x5002300C C   FIELD 03w02 CKFLT: CKFLT
0x5002300C C   FIELD 06w02 TRGFLT: TRGFLT
0x5002300C C   FIELD 09w03 PRESC: PRESC
0x5002300C C   FIELD 13w03 TRIGSEL: TRIGSEL
0x5002300C C   FIELD 17w02 TRIGEN: TRIGEN
0x5002300C C   FIELD 19w01 TIMOUT: TIMOUT
0x5002300C C   FIELD 20w01 WAVE: WAVE
0x5002300C C   FIELD 21w01 WAVPOL: WAVPOL
0x5002300C C   FIELD 22w01 PRELOAD: PRELOAD
0x5002300C C   FIELD 23w01 COUNTMODE: COUNTMODE
0x5002300C C   FIELD 24w01 ENC: ENC
0x50023010 B  REGISTER LPTIM_CR (rw): LPTIM control register
0x50023010 C   FIELD 00w01 ENABLE: ENABLE
0x50023010 C   FIELD 01w01 SNGSTRT: SNGSTRT
0x50023010 C   FIELD 02w01 CNTSTRT: CNTSTRT
0x50023010 C   FIELD 03w01 COUNTRST: COUNTRST
0x50023010 C   FIELD 04w01 RSTARE: RSTARE
0x50023014 B  REGISTER LPTIM_CMP (rw): LPTIM compare register
0x50023014 C   FIELD 00w16 CMP: CMP
0x50023018 B  REGISTER LPTIM_ARR (rw): LPTIM autoreload register
0x50023018 C   FIELD 00w16 ARR: ARR
0x5002301C B  REGISTER LPTIM_CNT (ro): LPTIM counter register
0x5002301C C   FIELD 00w16 CNT: CNT
0x50023024 B  REGISTER LPTIM_CFGR2 (rw): LPTIM configuration register 2
0x50023024 C   FIELD 00w02 IN1SEL: IN1SEL
0x50023024 C   FIELD 04w02 IN2SEL: IN2SEL
0x500233F0 B  REGISTER LPTIM1_HWCFGR (ro): LPTIM 1 peripheral hardware configuration register
0x500233F0 C   FIELD 00w08 CFG1: CFG1
0x500233F0 C   FIELD 08w08 CFG2: CFG2
0x500233F0 C   FIELD 16w04 CFG3: CFG3
0x500233F0 C   FIELD 24w08 CFG4: CFG4
0x500233F4 B  REGISTER LPTIM_VERR (ro): LPTIM peripheral version identification register
0x500233F4 C   FIELD 00w04 MINREV: MINREV
0x500233F4 C   FIELD 04w04 MAJREV: MAJREV
0x500233F8 B  REGISTER LPTIM_PIDR (ro): LPTIM peripheral type identification register
0x500233F8 C   FIELD 00w32 P_ID: P_ID
0x500233FC B  REGISTER LPTIM_SIDR (ro): LPTIM registers map size identification register
0x500233FC C   FIELD 00w32 S_ID: S_ID
0x50024000 A PERIPHERAL LPTIM5
0x50024000 B  REGISTER LPTIM_ISR (ro): LPTIM interrupt and status register
0x50024000 C   FIELD 00w01 CMPM: CMPM
0x50024000 C   FIELD 01w01 ARRM: ARRM
0x50024000 C   FIELD 02w01 EXTTRIG: EXTTRIG
0x50024000 C   FIELD 03w01 CMPOK: CMPOK
0x50024000 C   FIELD 04w01 ARROK: ARROK
0x50024000 C   FIELD 05w01 UP: UP
0x50024000 C   FIELD 06w01 DOWN: DOWN
0x50024004 B  REGISTER LPTIM_ICR (wo): LPTIM interrupt clear register
0x50024004 C   FIELD 00w01 CMPMCF: CMPMCF
0x50024004 C   FIELD 01w01 ARRMCF: ARRMCF
0x50024004 C   FIELD 02w01 EXTTRIGCF: EXTTRIGCF
0x50024004 C   FIELD 03w01 CMPOKCF: CMPOKCF
0x50024004 C   FIELD 04w01 ARROKCF: ARROKCF
0x50024004 C   FIELD 05w01 UPCF: UPCF
0x50024004 C   FIELD 06w01 DOWNCF: DOWNCF
0x50024008 B  REGISTER LPTIM_IER (rw): LPTIM interrupt enable register
0x50024008 C   FIELD 00w01 CMPMIE: CMPMIE
0x50024008 C   FIELD 01w01 ARRMIE: ARRMIE
0x50024008 C   FIELD 02w01 EXTTRIGIE: EXTTRIGIE
0x50024008 C   FIELD 03w01 CMPOKIE: CMPOKIE
0x50024008 C   FIELD 04w01 ARROKIE: ARROKIE
0x50024008 C   FIELD 05w01 UPIE: UPIE
0x50024008 C   FIELD 06w01 DOWNIE: DOWNIE
0x5002400C B  REGISTER LPTIM_CFGR (rw): LPTIM configuration register
0x5002400C C   FIELD 00w01 CKSEL: CKSEL
0x5002400C C   FIELD 01w02 CKPOL: CKPOL
0x5002400C C   FIELD 03w02 CKFLT: CKFLT
0x5002400C C   FIELD 06w02 TRGFLT: TRGFLT
0x5002400C C   FIELD 09w03 PRESC: PRESC
0x5002400C C   FIELD 13w03 TRIGSEL: TRIGSEL
0x5002400C C   FIELD 17w02 TRIGEN: TRIGEN
0x5002400C C   FIELD 19w01 TIMOUT: TIMOUT
0x5002400C C   FIELD 20w01 WAVE: WAVE
0x5002400C C   FIELD 21w01 WAVPOL: WAVPOL
0x5002400C C   FIELD 22w01 PRELOAD: PRELOAD
0x5002400C C   FIELD 23w01 COUNTMODE: COUNTMODE
0x5002400C C   FIELD 24w01 ENC: ENC
0x50024010 B  REGISTER LPTIM_CR (rw): LPTIM control register
0x50024010 C   FIELD 00w01 ENABLE: ENABLE
0x50024010 C   FIELD 01w01 SNGSTRT: SNGSTRT
0x50024010 C   FIELD 02w01 CNTSTRT: CNTSTRT
0x50024010 C   FIELD 03w01 COUNTRST: COUNTRST
0x50024010 C   FIELD 04w01 RSTARE: RSTARE
0x50024014 B  REGISTER LPTIM_CMP (rw): LPTIM compare register
0x50024014 C   FIELD 00w16 CMP: CMP
0x50024018 B  REGISTER LPTIM_ARR (rw): LPTIM autoreload register
0x50024018 C   FIELD 00w16 ARR: ARR
0x5002401C B  REGISTER LPTIM_CNT (ro): LPTIM counter register
0x5002401C C   FIELD 00w16 CNT: CNT
0x50024024 B  REGISTER LPTIM_CFGR2 (rw): LPTIM configuration register 2
0x50024024 C   FIELD 00w02 IN1SEL: IN1SEL
0x50024024 C   FIELD 04w02 IN2SEL: IN2SEL
0x500243F0 B  REGISTER LPTIM1_HWCFGR (ro): LPTIM 1 peripheral hardware configuration register
0x500243F0 C   FIELD 00w08 CFG1: CFG1
0x500243F0 C   FIELD 08w08 CFG2: CFG2
0x500243F0 C   FIELD 16w04 CFG3: CFG3
0x500243F0 C   FIELD 24w08 CFG4: CFG4
0x500243F4 B  REGISTER LPTIM_VERR (ro): LPTIM peripheral version identification register
0x500243F4 C   FIELD 00w04 MINREV: MINREV
0x500243F4 C   FIELD 04w04 MAJREV: MAJREV
0x500243F8 B  REGISTER LPTIM_PIDR (ro): LPTIM peripheral type identification register
0x500243F8 C   FIELD 00w32 P_ID: P_ID
0x500243FC B  REGISTER LPTIM_SIDR (ro): LPTIM registers map size identification register
0x500243FC C   FIELD 00w32 S_ID: S_ID
0x50025000 A PERIPHERAL VREFBUF
0x50025000 B  REGISTER VREFBUF_CSR: VREFBUF control and status register
0x50025000 C   FIELD 00w01 ENVR (rw): ENVR
0x50025000 C   FIELD 01w01 HIZ (rw): HIZ
0x50025000 C   FIELD 03w01 VRR (ro): VRR
0x50025000 C   FIELD 04w03 VRS (rw): VRS
0x50025004 B  REGISTER VREFBUF_CCR (rw): VREFBUF calibration control register
0x50025004 C   FIELD 00w06 TRIM: TRIM
0x50027000 A PERIPHERAL SAI4
0x50027000 B  REGISTER SAI_GCR (rw): Global configuration register
0x50027000 C   FIELD 00w02 SYNCIN: SYNCIN
0x50027000 C   FIELD 04w02 SYNCOUT: SYNCOUT
0x50027004 B  REGISTER SAI_ACR1 (rw): Configuration register 1
0x50027004 C   FIELD 00w02 MODE: MODE
0x50027004 C   FIELD 02w02 PRTCFG: PRTCFG
0x50027004 C   FIELD 05w03 DS: DS
0x50027004 C   FIELD 08w01 LSBFIRST: LSBFIRST
0x50027004 C   FIELD 09w01 CKSTR: CKSTR
0x50027004 C   FIELD 10w02 SYNCEN: SYNCEN
0x50027004 C   FIELD 12w01 MONO: MONO
0x50027004 C   FIELD 13w01 OUTDRIV: OUTDRIV
0x50027004 C   FIELD 16w01 SAIEN: SAIEN
0x50027004 C   FIELD 17w01 DMAEN: DMAEN
0x50027004 C   FIELD 19w01 NODIV: NODIV
0x50027004 C   FIELD 20w06 MCKDIV: MCKDIV
0x50027004 C   FIELD 26w01 OSR: OSR
0x50027004 C   FIELD 27w01 MCKEN: MCKEN
0x50027008 B  REGISTER SAI_ACR2: Configuration register 2
0x50027008 C   FIELD 00w03 FTH (rw): FTH
0x50027008 C   FIELD 03w01 FFLUSH (wo): FFLUSH
0x50027008 C   FIELD 04w01 TRIS (rw): TRIS
0x50027008 C   FIELD 05w01 MUTE (rw): MUTE
0x50027008 C   FIELD 06w01 MUTEVAL (rw): MUTEVAL
0x50027008 C   FIELD 07w06 MUTECNT (rw): MUTECNT
0x50027008 C   FIELD 13w01 CPL (rw): CPL
0x50027008 C   FIELD 14w02 COMP (rw): COMP
0x5002700C B  REGISTER SAI_AFRCR: This register has no meaning in and SPDIF audio protocol
0x5002700C C   FIELD 00w08 FRL (rw): FRL
0x5002700C C   FIELD 08w07 FSALL (rw): FSALL
0x5002700C C   FIELD 16w01 FSDEF (ro): FSDEF
0x5002700C C   FIELD 17w01 FSPOL (rw): FSPOL
0x5002700C C   FIELD 18w01 FSOFF (rw): FSOFF
0x50027010 B  REGISTER SAI_ASLOTR (rw): This register has no meaning in and SPDIF audio protocol
0x50027010 C   FIELD 00w05 FBOFF: FBOFF
0x50027010 C   FIELD 06w02 SLOTSZ: SLOTSZ
0x50027010 C   FIELD 08w04 NBSLOT: NBSLOT
0x50027010 C   FIELD 16w16 SLOTEN: SLOTEN
0x50027014 B  REGISTER SAI_AIM (rw): Interrupt mask register
0x50027014 C   FIELD 00w01 OVRUDRIE: OVRUDRIE
0x50027014 C   FIELD 01w01 MUTEDETIE: MUTEDETIE
0x50027014 C   FIELD 02w01 WCKCFGIE: WCKCFGIE
0x50027014 C   FIELD 03w01 FREQIE: FREQIE
0x50027014 C   FIELD 04w01 CNRDYIE: CNRDYIE
0x50027014 C   FIELD 05w01 AFSDETIE: AFSDETIE
0x50027014 C   FIELD 06w01 LFSDETIE: LFSDETIE
0x50027018 B  REGISTER SAI_ASR (ro): Status register
0x50027018 C   FIELD 00w01 OVRUDR: OVRUDR
0x50027018 C   FIELD 01w01 MUTEDET: MUTEDET
0x50027018 C   FIELD 02w01 WCKCFG: WCKCFG
0x50027018 C   FIELD 03w01 FREQ: FREQ
0x50027018 C   FIELD 04w01 CNRDY: CNRDY
0x50027018 C   FIELD 05w01 AFSDET: AFSDET
0x50027018 C   FIELD 06w01 LFSDET: LFSDET
0x50027018 C   FIELD 16w03 FLVL: FLVL
0x5002701C B  REGISTER SAI_ACLRFR (wo): Clear flag register
0x5002701C C   FIELD 00w01 COVRUDR: COVRUDR
0x5002701C C   FIELD 01w01 CMUTEDET: CMUTEDET
0x5002701C C   FIELD 02w01 CWCKCFG: CWCKCFG
0x5002701C C   FIELD 04w01 CCNRDY: CCNRDY
0x5002701C C   FIELD 05w01 CAFSDET: CAFSDET
0x5002701C C   FIELD 06w01 CLFSDET: CLFSDET
0x50027020 B  REGISTER SAI_ADR (rw): Data register
0x50027020 C   FIELD 00w32 DATA: DATA
0x50027024 B  REGISTER SAI_BCR1 (rw): Configuration register 1
0x50027024 C   FIELD 00w02 MODE: MODE
0x50027024 C   FIELD 02w02 PRTCFG: PRTCFG
0x50027024 C   FIELD 05w03 DS: DS
0x50027024 C   FIELD 08w01 LSBFIRST: LSBFIRST
0x50027024 C   FIELD 09w01 CKSTR: CKSTR
0x50027024 C   FIELD 10w02 SYNCEN: SYNCEN
0x50027024 C   FIELD 12w01 MONO: MONO
0x50027024 C   FIELD 13w01 OUTDRIV: OUTDRIV
0x50027024 C   FIELD 16w01 SAIEN: SAIEN
0x50027024 C   FIELD 17w01 DMAEN: DMAEN
0x50027024 C   FIELD 19w01 NODIV: NODIV
0x50027024 C   FIELD 20w06 MCKDIV: MCKDIV
0x50027024 C   FIELD 26w01 OSR: OSR
0x50027024 C   FIELD 27w01 MCKEN: MCKEN
0x50027028 B  REGISTER SAI_BCR2: Configuration register 2
0x50027028 C   FIELD 00w03 FTH (rw): FTH
0x50027028 C   FIELD 03w01 FFLUSH (wo): FFLUSH
0x50027028 C   FIELD 04w01 TRIS (rw): TRIS
0x50027028 C   FIELD 05w01 MUTE (rw): MUTE
0x50027028 C   FIELD 06w01 MUTEVAL (rw): MUTEVAL
0x50027028 C   FIELD 07w06 MUTECNT (rw): MUTECNT
0x50027028 C   FIELD 13w01 CPL (rw): CPL
0x50027028 C   FIELD 14w02 COMP (rw): COMP
0x5002702C B  REGISTER SAI_BFRCR: This register has no meaning in and SPDIF audio protocol
0x5002702C C   FIELD 00w08 FRL (rw): FRL
0x5002702C C   FIELD 08w07 FSALL (rw): FSALL
0x5002702C C   FIELD 16w01 FSDEF (ro): FSDEF
0x5002702C C   FIELD 17w01 FSPOL (rw): FSPOL
0x5002702C C   FIELD 18w01 FSOFF (rw): FSOFF
0x50027030 B  REGISTER SAI_BSLOTR (rw): This register has no meaning in and SPDIF audio protocol
0x50027030 C   FIELD 00w05 FBOFF: FBOFF
0x50027030 C   FIELD 06w02 SLOTSZ: SLOTSZ
0x50027030 C   FIELD 08w04 NBSLOT: NBSLOT
0x50027030 C   FIELD 16w16 SLOTEN: SLOTEN
0x50027034 B  REGISTER SAI_BIM (rw): Interrupt mask register
0x50027034 C   FIELD 00w01 OVRUDRIE: OVRUDRIE
0x50027034 C   FIELD 01w01 MUTEDETIE: MUTEDETIE
0x50027034 C   FIELD 02w01 WCKCFGIE: WCKCFGIE
0x50027034 C   FIELD 03w01 FREQIE: FREQIE
0x50027034 C   FIELD 04w01 CNRDYIE: CNRDYIE
0x50027034 C   FIELD 05w01 AFSDETIE: AFSDETIE
0x50027034 C   FIELD 06w01 LFSDETIE: LFSDETIE
0x50027038 B  REGISTER SAI_BSR (ro): Status register
0x50027038 C   FIELD 00w01 OVRUDR: OVRUDR
0x50027038 C   FIELD 01w01 MUTEDET: MUTEDET
0x50027038 C   FIELD 02w01 WCKCFG: WCKCFG
0x50027038 C   FIELD 03w01 FREQ: FREQ
0x50027038 C   FIELD 04w01 CNRDY: CNRDY
0x50027038 C   FIELD 05w01 AFSDET: AFSDET
0x50027038 C   FIELD 06w01 LFSDET: LFSDET
0x50027038 C   FIELD 16w03 FLVL: FLVL
0x5002703C B  REGISTER SAI_BCLRFR (wo): Clear flag register
0x5002703C C   FIELD 00w01 COVRUDR: COVRUDR
0x5002703C C   FIELD 01w01 CMUTEDET: CMUTEDET
0x5002703C C   FIELD 02w01 CWCKCFG: CWCKCFG
0x5002703C C   FIELD 04w01 CCNRDY: CCNRDY
0x5002703C C   FIELD 05w01 CAFSDET: CAFSDET
0x5002703C C   FIELD 06w01 CLFSDET: CLFSDET
0x50027040 B  REGISTER SAI_BDR (rw): Data register
0x50027040 C   FIELD 00w32 DATA: DATA
0x50027044 B  REGISTER SAI_PDMCR (rw): PDM control register
0x50027044 C   FIELD 00w01 PDMEN: PDMEN
0x50027044 C   FIELD 04w02 MICNBR: MICNBR
0x50027044 C   FIELD 08w01 CKEN1: CKEN1
0x50027044 C   FIELD 09w01 CKEN2: CKEN2
0x50027044 C   FIELD 10w01 CKEN3: CKEN3
0x50027044 C   FIELD 11w01 CKEN4: CKEN4
0x50027048 B  REGISTER SAI_PDMDLY (rw): PDM delay register
0x50027048 C   FIELD 00w03 DLYM1L: DLYM1L
0x50027048 C   FIELD 04w03 DLYM1R: DLYM1R
0x50027048 C   FIELD 08w03 DLYM2L: DLYM2L
0x50027048 C   FIELD 12w03 DLYM2R: DLYM2R
0x50027048 C   FIELD 16w03 DLYM3L: DLYM3L
0x50027048 C   FIELD 20w03 DLYM3R: DLYM3R
0x50027048 C   FIELD 24w03 DLYM4L: DLYM4L
0x50027048 C   FIELD 28w03 DLYM4R: DLYM4R
0x500273F0 B  REGISTER SAI_HWCFGR (ro): SAI hardware configuration register
0x500273F0 C   FIELD 00w08 FIFO_SIZE: FIFO_SIZE
0x500273F0 C   FIELD 08w04 SPDIF_PDM: SPDIF_PDM
0x500273F0 C   FIELD 12w08 OPTION_REGOUT: OPTION_REGOUT
0x500273F4 B  REGISTER SAI_VERR (ro): SAI version register
0x500273F4 C   FIELD 00w04 MINREV: MINREV
0x500273F4 C   FIELD 04w04 MAJREV: MAJREV
0x500273F8 B  REGISTER SAI_IPIDR (ro): SAI identification register
0x500273F8 C   FIELD 00w32 ID: ID
0x500273FC B  REGISTER SAI_SIDR (ro): SAI size identification register
0x500273FC C   FIELD 00w32 SID: SID
0x50028000 A PERIPHERAL DTS
0x50028000 B  REGISTER DTS_CFGR1 (rw): DTS_CFGR1 is the configuration register for temperature sensor 1.
0x50028000 C   FIELD 00w01 TS1_EN: TS1_EN
0x50028000 C   FIELD 04w01 TS1_START: TS1_START
0x50028000 C   FIELD 08w04 TS1_INTRIG_SEL: TS1_INTRIG_SEL
0x50028000 C   FIELD 16w04 TS1_SMP_TIME: TS1_SMP_TIME
0x50028000 C   FIELD 20w01 REFCLK_SEL: REFCLK_SEL
0x50028000 C   FIELD 21w01 Q_MEAS_opt: Q_MEAS_opt
0x50028000 C   FIELD 24w07 HSREF_CLK_DIV: HSREF_CLK_DIV
0x50028008 B  REGISTER DTS_T0VALR1 (ro): DTS_T0VALR1 contains the value of the factory calibration temperature (T0) for temperature sensor 1. The system reset value is factory trimmed.
0x50028008 C   FIELD 00w16 TS1_FMT0: TS1_FMT0
0x50028008 C   FIELD 16w02 TS1_T0: TS1_T0
0x50028010 B  REGISTER DTS_RAMPVALR (ro): The DTS_RAMPVALR is the ramp coefficient for the temperature sensor. The system reset value is factory trimmed.
0x50028010 C   FIELD 00w16 TS1_RAMP_COEFF: TS1_RAMP_COEFF
0x50028014 B  REGISTER DTS_ITR1 (rw): DTS_ITR1 contains the threshold values for sensor 1.
0x50028014 C   FIELD 00w16 TS1_LITTHD: TS1_LITTHD
0x50028014 C   FIELD 16w16 TS1_HITTHD: TS1_HITTHD
0x5002801C B  REGISTER DTS_DR (rw): The DTS_DR contains the number of REF_CLK cycles used to compute the FM(T) frequency.
0x5002801C C   FIELD 00w16 TS1_MFREQ: TS1_MFREQ
0x50028020 B  REGISTER DTS_SR (ro): Temperature sensor status register
0x50028020 C   FIELD 00w01 TS1_ITEF: TS1_ITEF
0x50028020 C   FIELD 01w01 TS1_ITLF: TS1_ITLF
0x50028020 C   FIELD 02w01 TS1_ITHF: TS1_ITHF
0x50028020 C   FIELD 04w01 TS1_AITEF: TS1_AITEF
0x50028020 C   FIELD 05w01 TS1_AITLF: TS1_AITLF
0x50028020 C   FIELD 06w01 TS1_AITHF: TS1_AITHF
0x50028020 C   FIELD 15w01 TS1_RDY: TS1_RDY
0x50028024 B  REGISTER DTS_ITENR (rw): Temperature sensor interrupt enable register
0x50028024 C   FIELD 00w01 TS1_ITEEN: TS1_ITEEN
0x50028024 C   FIELD 01w01 TS1_ITLEN: TS1_ITLEN
0x50028024 C   FIELD 02w01 TS1_ITHEN: TS1_ITHEN
0x50028024 C   FIELD 04w01 TS1_AITEEN: TS1_AITEEN
0x50028024 C   FIELD 05w01 TS1_AITLEN: TS1_AITLEN
0x50028024 C   FIELD 06w01 TS1_AITHEN: TS1_AITHEN
0x50028028 B  REGISTER DTS_ICIFR (rw): DTS_ICIFR is the control register for the interrupt flags.
0x50028028 C   FIELD 00w01 TS1_CITEF: TS1_CITEF
0x50028028 C   FIELD 01w01 TS1_CITLF: TS1_CITLF
0x50028028 C   FIELD 02w01 TS1_CITHF: TS1_CITHF
0x50028028 C   FIELD 04w01 TS1_CAITEF: TS1_CAITEF
0x50028028 C   FIELD 05w01 TS1_CAITLF: TS1_CAITLF
0x50028028 C   FIELD 06w01 TS1_CAITHF: TS1_CAITHF
0x5002802C B  REGISTER DTS_OR (rw): The DTS_OR contains general-purpose option bits.
0x5002802C C   FIELD 00w01 TS_Op0: TS_Op0
0x5002802C C   FIELD 01w01 TS_Op1: TS_Op1
0x5002802C C   FIELD 02w01 TS_Op2: TS_Op2
0x5002802C C   FIELD 03w01 TS_Op3: TS_Op3
0x5002802C C   FIELD 04w01 TS_Op4: TS_Op4
0x5002802C C   FIELD 05w01 TS_Op5: TS_Op5
0x5002802C C   FIELD 06w01 TS_Op6: TS_Op6
0x5002802C C   FIELD 07w01 TS_Op7: TS_Op7
0x5002802C C   FIELD 08w01 TS_Op8: TS_Op8
0x5002802C C   FIELD 09w01 TS_Op9: TS_Op9
0x5002802C C   FIELD 10w01 TS_Op10: TS_Op10
0x5002802C C   FIELD 11w01 TS_Op11: TS_Op11
0x5002802C C   FIELD 12w01 TS_Op12: TS_Op12
0x5002802C C   FIELD 13w01 TS_Op13: TS_Op13
0x5002802C C   FIELD 14w01 TS_Op14: TS_Op14
0x5002802C C   FIELD 15w01 TS_Op15: TS_Op15
0x5002802C C   FIELD 16w01 TS_Op16: TS_Op16
0x5002802C C   FIELD 17w01 TS_Op17: TS_Op17
0x5002802C C   FIELD 18w01 TS_Op18: TS_Op18
0x5002802C C   FIELD 19w01 TS_Op19: TS_Op19
0x5002802C C   FIELD 20w01 TS_Op20: TS_Op20
0x5002802C C   FIELD 21w01 TS_Op21: TS_Op21
0x5002802C C   FIELD 22w01 TS_Op22: TS_Op22
0x5002802C C   FIELD 23w01 TS_Op23: TS_Op23
0x5002802C C   FIELD 24w01 TS_Op24: TS_Op24
0x5002802C C   FIELD 25w01 TS_Op25: TS_Op25
0x5002802C C   FIELD 26w01 TS_Op26: TS_Op26
0x5002802C C   FIELD 27w01 TS_Op27: TS_Op27
0x5002802C C   FIELD 28w01 TS_Op28: TS_Op28
0x5002802C C   FIELD 29w01 TS_Op29: TS_Op29
0x5002802C C   FIELD 30w01 TS_Op30: TS_Op30
0x5002802C C   FIELD 31w01 TS_Op31: TS_Op31
0x5002A000 A PERIPHERAL HDP
0x5002A000 B  REGISTER HDP_CTRL (rw): HDP Control
0x5002A000 C   FIELD 00w01 EN: EN
0x5002A004 B  REGISTER HDP_MUX (rw): HDP multiplexing
0x5002A004 C   FIELD 00w04 MUX0: MUX0
0x5002A004 C   FIELD 04w04 MUX1: MUX1
0x5002A004 C   FIELD 08w04 MUX2: MUX2
0x5002A004 C   FIELD 12w04 MUX3: MUX3
0x5002A004 C   FIELD 16w04 MUX4: MUX4
0x5002A004 C   FIELD 20w04 MUX5: MUX5
0x5002A004 C   FIELD 24w04 MUX6: MUX6
0x5002A004 C   FIELD 28w04 MUX7: MUX7
0x5002A010 B  REGISTER HDP_VAL (ro): HDP value
0x5002A010 C   FIELD 00w08 HDPVAL: HDPVAL
0x5002A014 B  REGISTER HDP_GPOSET (wo): HDP GPO set
0x5002A014 C   FIELD 00w08 HDPGPOSET: HDPGPOSET
0x5002A018 B  REGISTER HDP_GPOCLR (wo): HDP GPO clear
0x5002A018 C   FIELD 00w08 HDPGPOCLR: HDPGPOCLR
0x5002A01C B  REGISTER HDP_GPOVAL (rw): HDP GPO value
0x5002A01C C   FIELD 00w08 HDPGPOVAL: HDPGPOVAL
0x5002A3F4 B  REGISTER HDP_VERR (ro): HDP version register
0x5002A3F4 C   FIELD 00w04 MINREV: MINREV
0x5002A3F4 C   FIELD 04w04 MAJREV: MAJREV
0x5002A3F8 B  REGISTER HDP_IPIDR (ro): HDP IP identification register
0x5002A3F8 C   FIELD 00w32 ID: ID
0x5002A3FC B  REGISTER HDP_SIDR (ro): HDP size identification register
0x5002A3FC C   FIELD 00w32 SID: SID
0x54001000 A PERIPHERAL CRYP1
0x54001000 B  REGISTER CRYP_CR: CRYP control register
0x54001000 C   FIELD 02w01 ALGODIR (rw): ALGODIR
0x54001000 C   FIELD 03w03 ALGOMODE (rw): ALGOMODE
0x54001000 C   FIELD 06w02 DATATYPE (rw): DATATYPE
0x54001000 C   FIELD 08w02 KEYSIZE (rw): KEYSIZE
0x54001000 C   FIELD 14w01 FFLUSH (wo): FFLUSH
0x54001000 C   FIELD 15w01 CRYPEN (rw): CRYPEN
0x54001000 C   FIELD 16w02 GCM_CCMPH (rw): GCM_CCMPH
0x54001000 C   FIELD 19w01 ALGOMODE3 (rw): ALGOMODE3
0x54001000 C   FIELD 20w04 NPBLB (rw): NPBLB
0x54001004 B  REGISTER CRYP_SR (ro): CRYP status register
0x54001004 C   FIELD 00w01 IFEM: IFEM
0x54001004 C   FIELD 01w01 IFNF: IFNF
0x54001004 C   FIELD 02w01 OFNE: OFNE
0x54001004 C   FIELD 03w01 OFFU: OFFU
0x54001004 C   FIELD 04w01 BUSY: BUSY
0x54001008 B  REGISTER CRYP_DIN (rw): The CRYP_DIN register is the data input register. It is 32-bit wide. It is used to enter into the input FIFO up to four 64-bit blocks (TDES) or two 128-bit blocks (AES) of plaintext (when encrypting) or ciphertext (when decrypting), one 32-bit word at a time. To fit different data sizes, the data can be swapped after processing by configuring the DATATYPE bits in the CRYP_CR register. Refer to Section39.3.16: CRYP data registers and data swapping for more details. When CRYP_DIN register is written to the data are pushed into the input FIFO. If CRYPEN = 1, when at least two 32-bit words in the DES/TDES mode have been pushed into the input FIFO (four words in the AES mode), and when at least two words are free in the output FIFO (four words in the AES mode), the CRYP engine starts an encrypting or decrypting process. When CRYP_DIN register is read: If CRYPEN = 0, the FIFO is popped, and then the data present in the Input FIFO are returned, from the oldest one (first reading) to the newest one (last reading). The IFEM flag must be checked before each read operation to make sure that the FIFO is not empty. if CRYPEN = 1, an undefined value is returned. After the CRYP_DIN register has been read once or several times, the FIFO must be flushed by setting the FFLUSH bit prior to processing new data.
0x54001008 C   FIELD 00w32 DATAIN: DATAIN
0x5400100C B  REGISTER CRYP_DOUT (ro): The CRYP_DOUT register is the data output register. It is read-only and 32-bit wide. It is used to retrieve from the output FIFO up to four 64-bit blocks (TDES) or two 128-bit blocks (AES) of plaintext (when encrypting) or ciphertext (when decrypting), one 32-bit word at a time. To fit different data sizes, the data can be swapped after processing by configuring the DATATYPE bits in the CRYP_CR register. Refer to Section39.3.16: CRYP data registers and data swapping for more details. When CRYP_DOUT register is read, the last data entered into the output FIFO (pointed to by the read pointer) is returned.
0x5400100C C   FIELD 00w32 DATAOUT: DATAOUT
0x54001010 B  REGISTER CRYP_DMACR (rw): CRYP DMA control register
0x54001010 C   FIELD 00w01 DIEN: DIEN
0x54001010 C   FIELD 01w01 DOEN: DOEN
0x54001014 B  REGISTER CRYP_IMSCR (rw): The CRYP_IMSCR register is the interrupt mask set or clear register. It is a read/write register. When a read operation is performed, this register gives the current value of the mask applied to the relevant interrupt. Writing 1 to the particular bit sets the mask, thus enabling the interrupt to be read. Writing 0 to this bit clears the corresponding mask. All the bits are cleared to 0 when the peripheral is reset.
0x54001014 C   FIELD 00w01 INIM: INIM
0x54001014 C   FIELD 01w01 OUTIM: OUTIM
0x54001018 B  REGISTER CRYP_RISR (ro): The CRYP_RISR register is the raw interrupt status register. It is a read-only register. When a read operation is performed, this register gives the current raw status of the corresponding interrupt, i.e. the interrupt information without taking CRYP_IMSCR mask into account. Write operations have no effect.
0x54001018 C   FIELD 00w01 INRIS: INRIS
0x54001018 C   FIELD 01w01 OUTRIS: OUTRIS
0x5400101C B  REGISTER CRYP_MISR (ro): The CRYP_MISR register is the masked interrupt status register. It is a read-only register. When a read operation is performed, this register gives the current masked status of the corresponding interrupt, i.e. the interrupt information taking CRYP_IMSCR mask into account. Write operations have no effect.
0x5400101C C   FIELD 00w01 INMIS: INMIS
0x5400101C C   FIELD 01w01 OUTMIS: OUTMIS
0x54001020 B  REGISTER CRYP_K0LR (wo): CRYP key registers contain the cryptographic keys. In DES/TDES mode, the keys are 64-bit binary values (number from left to right, that is the leftmost bit is bit 1) and named K1, K2 and K3 (K0 is not used). Each key consists of 56 information bits and 8 parity bits. In AES mode, the key is considered as a single 128, 192 or 256 bits long sequence K0K1K2...K127/191/255. The AES key is entered into the registers as follows: for AES-128: K0..K127 corresponds to b127..b0 (b255..b128 are not used), for AES-192: K0..K191 corresponds to b191..b0 (b255..b192 are not used), for AES-256: K0..K255 corresponds to b255..b0. In all cases key bit K0 is the leftmost bit in CRYP inner memory and register bit b0 is the rightmost bit in corresponding CRYP_KxLR key register. For more information refer to Section39.3.17: CRYP key registers. Write accesses to these registers are disregarded when the cryptographic processor is busy (bit BUSY = 1 in the CRYP_SR register)
0x54001020 C   FIELD 00w32 K: K
0x54001024 B  REGISTER CRYP_K0RR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x54001024 C   FIELD 00w32 K: K
0x54001028 B  REGISTER CRYP_K1LR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x54001028 C   FIELD 00w32 K: K
0x5400102C B  REGISTER CRYP_K1RR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x5400102C C   FIELD 00w32 K: K
0x54001030 B  REGISTER CRYP_K2LR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x54001030 C   FIELD 00w32 K: K
0x54001034 B  REGISTER CRYP_K2RR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x54001034 C   FIELD 00w32 K: K
0x54001038 B  REGISTER CRYP_K3LR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x54001038 C   FIELD 00w32 K: K
0x5400103C B  REGISTER CRYP_K3RR (wo): Refer to Section39.6.9: CRYP key register 0L (CRYP_K0LR) for details.
0x5400103C C   FIELD 00w32 K: K
0x54001040 B  REGISTER CRYP_IV0LR (rw): The CRYP_IV0...1(L/R)R are the left-word and right-word registers for the initialization vector (64 bits for DES/TDES and 128 bits for AES). For more information refer to Section39.3.18: CRYP initialization vector registers. IV0 is the leftmost bit whereas IV63 (DES, TDES) or IV127 (AES) are the rightmost bits of the initialization vector. IV1(L/R)R is used only in the AES. Only CRYP_IV0(L/R) is used in DES/TDES. Write access to these registers are disregarded when the cryptographic processor is busy (bit BUSY = 1 in the CRYP_SR register).
0x54001040 C   FIELD 00w01 IV31: IV31
0x54001040 C   FIELD 01w01 IV30: IV30
0x54001040 C   FIELD 02w01 IV29: IV29
0x54001040 C   FIELD 03w01 IV28: IV28
0x54001040 C   FIELD 04w01 IV27: IV27
0x54001040 C   FIELD 05w01 IV26: IV26
0x54001040 C   FIELD 06w01 IV25: IV25
0x54001040 C   FIELD 07w01 IV24: IV24
0x54001040 C   FIELD 08w01 IV23: IV23
0x54001040 C   FIELD 09w01 IV22: IV22
0x54001040 C   FIELD 10w01 IV21: IV21
0x54001040 C   FIELD 11w01 IV20: IV20
0x54001040 C   FIELD 12w01 IV19: IV19
0x54001040 C   FIELD 13w01 IV18: IV18
0x54001040 C   FIELD 14w01 IV17: IV17
0x54001040 C   FIELD 15w01 IV16: IV16
0x54001040 C   FIELD 16w01 IV15: IV15
0x54001040 C   FIELD 17w01 IV14: IV14
0x54001040 C   FIELD 18w01 IV13: IV13
0x54001040 C   FIELD 19w01 IV12: IV12
0x54001040 C   FIELD 20w01 IV11: IV11
0x54001040 C   FIELD 21w01 IV10: IV10
0x54001040 C   FIELD 22w01 IV9: IV9
0x54001040 C   FIELD 23w01 IV8: IV8
0x54001040 C   FIELD 24w01 IV7: IV7
0x54001040 C   FIELD 25w01 IV6: IV6
0x54001040 C   FIELD 26w01 IV5: IV5
0x54001040 C   FIELD 27w01 IV4: IV4
0x54001040 C   FIELD 28w01 IV3: IV3
0x54001040 C   FIELD 29w01 IV2: IV2
0x54001040 C   FIELD 30w01 IV1: IV1
0x54001040 C   FIELD 31w01 IV0: IV0
0x54001044 B  REGISTER CRYP_IV0RR (rw): Refer to Section39.6.17: CRYP initialization vector register 0L (CRYP_IV0LR) for details.
0x54001044 C   FIELD 00w01 IV63: IV63
0x54001044 C   FIELD 01w01 IV62: IV62
0x54001044 C   FIELD 02w01 IV61: IV61
0x54001044 C   FIELD 03w01 IV60: IV60
0x54001044 C   FIELD 04w01 IV59: IV59
0x54001044 C   FIELD 05w01 IV58: IV58
0x54001044 C   FIELD 06w01 IV57: IV57
0x54001044 C   FIELD 07w01 IV56: IV56
0x54001044 C   FIELD 08w01 IV55: IV55
0x54001044 C   FIELD 09w01 IV54: IV54
0x54001044 C   FIELD 10w01 IV53: IV53
0x54001044 C   FIELD 11w01 IV52: IV52
0x54001044 C   FIELD 12w01 IV51: IV51
0x54001044 C   FIELD 13w01 IV50: IV50
0x54001044 C   FIELD 14w01 IV49: IV49
0x54001044 C   FIELD 15w01 IV48: IV48
0x54001044 C   FIELD 16w01 IV47: IV47
0x54001044 C   FIELD 17w01 IV46: IV46
0x54001044 C   FIELD 18w01 IV45: IV45
0x54001044 C   FIELD 19w01 IV44: IV44
0x54001044 C   FIELD 20w01 IV43: IV43
0x54001044 C   FIELD 21w01 IV42: IV42
0x54001044 C   FIELD 22w01 IV41: IV41
0x54001044 C   FIELD 23w01 IV40: IV40
0x54001044 C   FIELD 24w01 IV39: IV39
0x54001044 C   FIELD 25w01 IV38: IV38
0x54001044 C   FIELD 26w01 IV37: IV37
0x54001044 C   FIELD 27w01 IV36: IV36
0x54001044 C   FIELD 28w01 IV35: IV35
0x54001044 C   FIELD 29w01 IV34: IV34
0x54001044 C   FIELD 30w01 IV33: IV33
0x54001044 C   FIELD 31w01 IV32: IV32
0x54001048 B  REGISTER CRYP_IV1LR (rw): Refer to Section39.6.17: CRYP initialization vector register 0L (CRYP_IV0LR) for details.
0x54001048 C   FIELD 00w01 IV95: IV95
0x54001048 C   FIELD 01w01 IV94: IV94
0x54001048 C   FIELD 02w01 IV93: IV93
0x54001048 C   FIELD 03w01 IV92: IV92
0x54001048 C   FIELD 04w01 IV91: IV91
0x54001048 C   FIELD 05w01 IV90: IV90
0x54001048 C   FIELD 06w01 IV89: IV89
0x54001048 C   FIELD 07w01 IV88: IV88
0x54001048 C   FIELD 08w01 IV87: IV87
0x54001048 C   FIELD 09w01 IV86: IV86
0x54001048 C   FIELD 10w01 IV85: IV85
0x54001048 C   FIELD 11w01 IV84: IV84
0x54001048 C   FIELD 12w01 IV83: IV83
0x54001048 C   FIELD 13w01 IV82: IV82
0x54001048 C   FIELD 14w01 IV81: IV81
0x54001048 C   FIELD 15w01 IV80: IV80
0x54001048 C   FIELD 16w01 IV79: IV79
0x54001048 C   FIELD 17w01 IV78: IV78
0x54001048 C   FIELD 18w01 IV77: IV77
0x54001048 C   FIELD 19w01 IV76: IV76
0x54001048 C   FIELD 20w01 IV75: IV75
0x54001048 C   FIELD 21w01 IV74: IV74
0x54001048 C   FIELD 22w01 IV73: IV73
0x54001048 C   FIELD 23w01 IV72: IV72
0x54001048 C   FIELD 24w01 IV71: IV71
0x54001048 C   FIELD 25w01 IV70: IV70
0x54001048 C   FIELD 26w01 IV69: IV69
0x54001048 C   FIELD 27w01 IV68: IV68
0x54001048 C   FIELD 28w01 IV67: IV67
0x54001048 C   FIELD 29w01 IV66: IV66
0x54001048 C   FIELD 30w01 IV65: IV65
0x54001048 C   FIELD 31w01 IV64: IV64
0x5400104C B  REGISTER CRYP_IV1RR (rw): Refer to Section39.6.17: CRYP initialization vector register 0L (CRYP_IV0LR) for details.
0x5400104C C   FIELD 00w01 IV127: IV127
0x5400104C C   FIELD 01w01 IV126: IV126
0x5400104C C   FIELD 02w01 IV125: IV125
0x5400104C C   FIELD 03w01 IV124: IV124
0x5400104C C   FIELD 04w01 IV123: IV123
0x5400104C C   FIELD 05w01 IV122: IV122
0x5400104C C   FIELD 06w01 IV121: IV121
0x5400104C C   FIELD 07w01 IV120: IV120
0x5400104C C   FIELD 08w01 IV119: IV119
0x5400104C C   FIELD 09w01 IV118: IV118
0x5400104C C   FIELD 10w01 IV117: IV117
0x5400104C C   FIELD 11w01 IV116: IV116
0x5400104C C   FIELD 12w01 IV115: IV115
0x5400104C C   FIELD 13w01 IV114: IV114
0x5400104C C   FIELD 14w01 IV113: IV113
0x5400104C C   FIELD 15w01 IV112: IV112
0x5400104C C   FIELD 16w01 IV111: IV111
0x5400104C C   FIELD 17w01 IV110: IV110
0x5400104C C   FIELD 18w01 IV109: IV109
0x5400104C C   FIELD 19w01 IV108: IV108
0x5400104C C   FIELD 20w01 IV107: IV107
0x5400104C C   FIELD 21w01 IV106: IV106
0x5400104C C   FIELD 22w01 IV105: IV105
0x5400104C C   FIELD 23w01 IV104: IV104
0x5400104C C   FIELD 24w01 IV103: IV103
0x5400104C C   FIELD 25w01 IV102: IV102
0x5400104C C   FIELD 26w01 IV101: IV101
0x5400104C C   FIELD 27w01 IV100: IV100
0x5400104C C   FIELD 28w01 IV99: IV99
0x5400104C C   FIELD 29w01 IV98: IV98
0x5400104C C   FIELD 30w01 IV97: IV97
0x5400104C C   FIELD 31w01 IV96: IV96
0x54001050 B  REGISTER CRYP_CSGCMCCM0R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x54001050 C   FIELD 00w32 CSGCMCCM0: CSGCMCCM0
0x54001054 B  REGISTER CRYP_CSGCMCCM1R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x54001054 C   FIELD 00w32 CSGCMCCM1: CSGCMCCM1
0x54001058 B  REGISTER CRYP_CSGCMCCM2R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x54001058 C   FIELD 00w32 CSGCMCCM2: CSGCMCCM2
0x5400105C B  REGISTER CRYP_CSGCMCCM3R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x5400105C C   FIELD 00w32 CSGCMCCM3: CSGCMCCM3
0x54001060 B  REGISTER CRYP_CSGCMCCM4R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x54001060 C   FIELD 00w32 CSGCMCCM4: CSGCMCCM4
0x54001064 B  REGISTER CRYP_CSGCMCCM5R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x54001064 C   FIELD 00w32 CSGCMCCM5: CSGCMCCM5
0x54001068 B  REGISTER CRYP_CSGCMCCM6R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x54001068 C   FIELD 00w32 CSGCMCCM6: CSGCMCCM6
0x5400106C B  REGISTER CRYP_CSGCMCCM7R (rw): These registers contain the complete internal register states of the CRYP processor when the GCM/GMAC or CCM algorithm is selected. They are useful when a context swap has to be performed because a high-priority task needs the cryptographic processor while it is already in use by another task. When such an event occurs, the CRYP_CSGCMCCM0..7R and CRYP_CSGCM0..7R (in GCM/GMAC mode) or CRYP_CSGCMCCM0..7R (in CCM mode) registers have to be read and the values retrieved have to be saved in the system memory space. The cryptographic processor can then be used by the preemptive task. Then when the cryptographic computation is complete, the saved context can be read from memory and written back into the corresponding context swap registers.
0x5400106C C   FIELD 00w32 CSGCMCCM7: CSGCMCCM7
0x54001070 B  REGISTER CRYP_CSGCM0R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x54001070 C   FIELD 00w32 CSGCM0: CSGCM0
0x54001074 B  REGISTER CRYP_CSGCM1R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x54001074 C   FIELD 00w32 CSGCM1: CSGCM1
0x54001078 B  REGISTER CRYP_CSGCM2R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x54001078 C   FIELD 00w32 CSGCM2: CSGCM2
0x5400107C B  REGISTER CRYP_CSGCM3R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x5400107C C   FIELD 00w32 CSGCM3: CSGCM3
0x54001080 B  REGISTER CRYP_CSGCM4R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x54001080 C   FIELD 00w32 CSGCM4: CSGCM4
0x54001084 B  REGISTER CRYP_CSGCM5R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x54001084 C   FIELD 00w32 CSGCM5: CSGCM5
0x54001088 B  REGISTER CRYP_CSGCM6R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x54001088 C   FIELD 00w32 CSGCM6: CSGCM6
0x5400108C B  REGISTER CRYP_CSGCM7R (rw): Please refer to Section39.6.21: CRYP context swap GCM-CCM registers (CRYP_CSGCMCCMxR) for details.
0x5400108C C   FIELD 00w32 CSGCM7: CSGCM7
0x540013F0 B  REGISTER CRYP_HWCFGR (ro): CRYP hardware configuration register
0x540013F0 C   FIELD 00w04 CFG1: CFG1
0x540013F0 C   FIELD 04w04 CFG2: CFG2
0x540013F0 C   FIELD 08w04 CFG3: CFG3
0x540013F0 C   FIELD 12w04 CFG4: CFG4
0x540013F4 B  REGISTER CRYP_VERR (ro): CRYP HW Version Register
0x540013F4 C   FIELD 00w08 VER: VER
0x540013F8 B  REGISTER CRYP_IPIDR (ro): CRYP Identification
0x540013F8 C   FIELD 00w32 ID: ID
0x540013FC B  REGISTER CRYP_MID (ro): CRYP HW Magic ID
0x540013FC C   FIELD 00w32 MID: MID
0x54002000 A PERIPHERAL HASH1
0x54002000 B  REGISTER HASH_CR: HASH control register
0x54002000 C   FIELD 02w01 INIT (wo): INIT
0x54002000 C   FIELD 03w01 DMAE (rw): DMAE
0x54002000 C   FIELD 04w02 DATATYPE (rw): DATATYPE
0x54002000 C   FIELD 06w01 MODE (rw): MODE
0x54002000 C   FIELD 07w01 ALGO0 (rw): ALGO0
0x54002000 C   FIELD 08w04 NBW (ro): NBW
0x54002000 C   FIELD 12w01 DINNE (ro): DINNE
0x54002000 C   FIELD 13w01 MDMAT (rw): MDMAT
0x54002000 C   FIELD 14w01 DMAA (wo): DMAA
0x54002000 C   FIELD 16w01 LKEY (rw): LKEY
0x54002000 C   FIELD 18w01 ALGO1 (rw): ALGO1
0x54002004 B  REGISTER HASH_DIN (rw): HASH_DIN is the data input register.
0x54002004 C   FIELD 00w32 DATAIN: DATAIN
0x54002008 B  REGISTER HASH_STR: The HASH_STR register has two functions: It is used to define the number of valid bits in the last word of the message entered in the hash processor (that is the number of valid least significant bits in the last data written to the HASH_DIN register) It is used to start the processing of the last block in the message by writing the DCAL bit to 1
0x54002008 C   FIELD 00w05 NBLW (rw): NBLW
0x54002008 C   FIELD 08w01 DCAL (wo): DCAL
0x5400200C B  REGISTER HASH_HR0 (ro): HASH digest register 0
0x5400200C C   FIELD 00w32 H0: H0
0x54002010 B  REGISTER HASH_HR1 (ro): HASH digest register 1
0x54002010 C   FIELD 00w32 H1: H1
0x54002014 B  REGISTER HASH_HR2 (ro): HASH digest register 2
0x54002014 C   FIELD 00w32 H2: H2
0x54002018 B  REGISTER HASH_HR3 (ro): HASH digest register 3
0x54002018 C   FIELD 00w32 H3: H3
0x5400201C B  REGISTER HASH_HR4 (ro): HASH digest register 4
0x5400201C C   FIELD 00w32 H4: H4
0x54002020 B  REGISTER HASH_IMR (rw): HASH interrupt enable register
0x54002020 C   FIELD 00w01 DINIE: DINIE
0x54002020 C   FIELD 01w01 DCIE: DCIE
0x54002024 B  REGISTER HASH_SR: HASH status register
0x54002024 C   FIELD 00w01 DINIS (rw): DINIS
0x54002024 C   FIELD 01w01 DCIS (rw): DCIS
0x54002024 C   FIELD 02w01 DMAS (ro): DMAS
0x54002024 C   FIELD 03w01 BUSY (ro): BUSY
0x540020F8 B  REGISTER HASH_CSR0 (rw): These registers contain the complete internal register states of the hash processor. They are useful when a context swap has to be done because a high-priority task needs to use the hash processor while it is already used by another task. When such an event occurs, the HASH_CSRx registers have to be read and the read values have to be saved in the system memory space. Then the hash processor can be used by the preemptive task, and when the hash computation is complete, the saved context can be read from memory and written back into the HASH_CSRx registers.
0x540020F8 C   FIELD 00w32 CS0: CS0
0x540020FC B  REGISTER HASH_CSR1 (rw): HASH context swap registers
0x540020FC C   FIELD 00w32 CS1: CS1
0x54002100 B  REGISTER HASH_CSR2 (rw): HASH context swap registers
0x54002100 C   FIELD 00w32 CS2: CS2
0x54002104 B  REGISTER HASH_CSR3 (rw): HASH context swap registers
0x54002104 C   FIELD 00w32 CS3: CS3
0x54002108 B  REGISTER HASH_CSR4 (rw): HASH context swap registers
0x54002108 C   FIELD 00w32 CS4: CS4
0x5400210C B  REGISTER HASH_CSR5 (rw): HASH context swap registers
0x5400210C C   FIELD 00w32 CS5: CS5
0x54002110 B  REGISTER HASH_CSR6 (rw): HASH context swap registers
0x54002110 C   FIELD 00w32 CS6: CS6
0x54002114 B  REGISTER HASH_CSR7 (rw): HASH context swap registers
0x54002114 C   FIELD 00w32 CS7: CS7
0x54002118 B  REGISTER HASH_CSR8 (rw): HASH context swap registers
0x54002118 C   FIELD 00w32 CS8: CS8
0x5400211C B  REGISTER HASH_CSR9 (rw): HASH context swap registers
0x5400211C C   FIELD 00w32 CS9: CS9
0x54002120 B  REGISTER HASH_CSR10 (rw): HASH context swap registers
0x54002120 C   FIELD 00w32 CS10: CS10
0x54002124 B  REGISTER HASH_CSR11 (rw): HASH context swap registers
0x54002124 C   FIELD 00w32 CS11: CS11
0x54002128 B  REGISTER HASH_CSR12 (rw): HASH context swap registers
0x54002128 C   FIELD 00w32 CS12: CS12
0x5400212C B  REGISTER HASH_CSR13 (rw): HASH context swap registers
0x5400212C C   FIELD 00w32 CS13: CS13
0x54002130 B  REGISTER HASH_CSR14 (rw): HASH context swap registers
0x54002130 C   FIELD 00w32 CS14: CS14
0x54002134 B  REGISTER HASH_CSR15 (rw): HASH context swap registers
0x54002134 C   FIELD 00w32 CS15: CS15
0x54002138 B  REGISTER HASH_CSR16 (rw): HASH context swap registers
0x54002138 C   FIELD 00w32 CS16: CS16
0x5400213C B  REGISTER HASH_CSR17 (rw): HASH context swap registers
0x5400213C C   FIELD 00w32 CS17: CS17
0x54002140 B  REGISTER HASH_CSR18 (rw): HASH context swap registers
0x54002140 C   FIELD 00w32 CS18: CS18
0x54002144 B  REGISTER HASH_CSR19 (rw): HASH context swap registers
0x54002144 C   FIELD 00w32 CS19: CS19
0x54002148 B  REGISTER HASH_CSR20 (rw): HASH context swap registers
0x54002148 C   FIELD 00w32 CS20: CS20
0x5400214C B  REGISTER HASH_CSR21 (rw): HASH context swap registers
0x5400214C C   FIELD 00w32 CS21: CS21
0x54002150 B  REGISTER HASH_CSR22 (rw): HASH context swap registers
0x54002150 C   FIELD 00w32 CS22: CS22
0x54002154 B  REGISTER HASH_CSR23 (rw): HASH context swap registers
0x54002154 C   FIELD 00w32 CS23: CS23
0x54002158 B  REGISTER HASH_CSR24 (rw): HASH context swap registers
0x54002158 C   FIELD 00w32 CS24: CS24
0x5400215C B  REGISTER HASH_CSR25 (rw): HASH context swap registers
0x5400215C C   FIELD 00w32 CS25: CS25
0x54002160 B  REGISTER HASH_CSR26 (rw): HASH context swap registers
0x54002160 C   FIELD 00w32 CS26: CS26
0x54002164 B  REGISTER HASH_CSR27 (rw): HASH context swap registers
0x54002164 C   FIELD 00w32 CS27: CS27
0x54002168 B  REGISTER HASH_CSR28 (rw): HASH context swap registers
0x54002168 C   FIELD 00w32 CS28: CS28
0x5400216C B  REGISTER HASH_CSR29 (rw): HASH context swap registers
0x5400216C C   FIELD 00w32 CS29: CS29
0x54002170 B  REGISTER HASH_CSR30 (rw): HASH context swap registers
0x54002170 C   FIELD 00w32 CS30: CS30
0x54002174 B  REGISTER HASH_CSR31 (rw): HASH context swap registers
0x54002174 C   FIELD 00w32 CS31: CS31
0x54002178 B  REGISTER HASH_CSR32 (rw): HASH context swap registers
0x54002178 C   FIELD 00w32 CS32: CS32
0x5400217C B  REGISTER HASH_CSR33 (rw): HASH context swap registers
0x5400217C C   FIELD 00w32 CS33: CS33
0x54002180 B  REGISTER HASH_CSR34 (rw): HASH context swap registers
0x54002180 C   FIELD 00w32 CS34: CS34
0x54002184 B  REGISTER HASH_CSR35 (rw): HASH context swap registers
0x54002184 C   FIELD 00w32 CS35: CS35
0x54002188 B  REGISTER HASH_CSR36 (rw): HASH context swap registers
0x54002188 C   FIELD 00w32 CS36: CS36
0x5400218C B  REGISTER HASH_CSR37 (rw): HASH context swap registers
0x5400218C C   FIELD 00w32 CS37: CS37
0x54002190 B  REGISTER HASH_CSR38 (rw): HASH context swap registers
0x54002190 C   FIELD 00w32 CS38: CS38
0x54002194 B  REGISTER HASH_CSR39 (rw): HASH context swap registers
0x54002194 C   FIELD 00w32 CS39: CS39
0x54002198 B  REGISTER HASH_CSR40 (rw): HASH context swap registers
0x54002198 C   FIELD 00w32 CS40: CS40
0x5400219C B  REGISTER HASH_CSR41 (rw): HASH context swap registers
0x5400219C C   FIELD 00w32 CS41: CS41
0x540021A0 B  REGISTER HASH_CSR42 (rw): HASH context swap registers
0x540021A0 C   FIELD 00w32 CS42: CS42
0x540021A4 B  REGISTER HASH_CSR43 (rw): HASH context swap registers
0x540021A4 C   FIELD 00w32 CS43: CS43
0x540021A8 B  REGISTER HASH_CSR44 (rw): HASH context swap registers
0x540021A8 C   FIELD 00w32 CS44: CS44
0x540021AC B  REGISTER HASH_CSR45 (rw): HASH context swap registers
0x540021AC C   FIELD 00w32 CS45: CS45
0x540021B0 B  REGISTER HASH_CSR46 (rw): HASH context swap registers
0x540021B0 C   FIELD 00w32 CS46: CS46
0x540021B4 B  REGISTER HASH_CSR47 (rw): HASH context swap registers
0x540021B4 C   FIELD 00w32 CS47: CS47
0x540021B8 B  REGISTER HASH_CSR48 (rw): HASH context swap registers
0x540021B8 C   FIELD 00w32 CS48: CS48
0x540021BC B  REGISTER HASH_CSR49 (rw): HASH context swap registers
0x540021BC C   FIELD 00w32 CS49: CS49
0x540021C0 B  REGISTER HASH_CSR50 (rw): HASH context swap registers
0x540021C0 C   FIELD 00w32 CS50: CS50
0x540021C4 B  REGISTER HASH_CSR51 (rw): HASH context swap registers
0x540021C4 C   FIELD 00w32 CS51: CS51
0x540021C8 B  REGISTER HASH_CSR52 (rw): HASH context swap registers
0x540021C8 C   FIELD 00w32 CS52: CS52
0x540021CC B  REGISTER HASH_CSR53 (rw): HASH context swap registers
0x540021CC C   FIELD 00w32 CS53: CS53
0x54002324 B  REGISTER HASH_HR5 (ro): HASH digest register 5
0x54002324 C   FIELD 00w32 H5: H5
0x54002328 B  REGISTER HASH_HR6 (ro): HASH digest register 6
0x54002328 C   FIELD 00w32 H6: H6
0x5400232C B  REGISTER HASH_HR7 (ro): HASH digest register 7
0x5400232C C   FIELD 00w32 H7: H7
0x540023F0 B  REGISTER HASH_HWCFGR (ro): HASH Hardware Configuration Register
0x540023F0 C   FIELD 00w04 CFG1: CFG1
0x540023F4 B  REGISTER HASH_VERR (ro): HASH Version Register
0x540023F4 C   FIELD 00w08 VER: VER
0x540023F8 B  REGISTER HASH_IPIDR (ro): HASH Identification
0x540023F8 C   FIELD 00w32 ID: ID
0x540023FC B  REGISTER HASH_MID (ro): HASH Hardware Magic ID
0x540023FC C   FIELD 00w32 MID: MID
0x54003000 A PERIPHERAL RNG1
0x54003000 B  REGISTER RNG_CR (rw): RNG control register
0x54003000 C   FIELD 02w01 RNGEN: RNGEN
0x54003000 C   FIELD 03w01 IE: IE
0x54003000 C   FIELD 05w01 CED: CED
0x54003004 B  REGISTER RNG_SR: RNG status register
0x54003004 C   FIELD 00w01 DRDY (ro): DRDY
0x54003004 C   FIELD 01w01 CECS (ro): CECS
0x54003004 C   FIELD 02w01 SECS (ro): SECS
0x54003004 C   FIELD 05w01 CEIS (rw): CEIS
0x54003004 C   FIELD 06w01 SEIS (rw): SEIS
0x54003008 B  REGISTER RNG_DR (ro): The RNG_DR register is a read-only register.
0x54003008 C   FIELD 00w32 RNDATA: RNDATA
0x540033F0 B  REGISTER RNG_HWCFGR (ro): RNG hardware configuration register
0x540033F4 B  REGISTER RNG_VERR (ro): RNG version register
0x540033F4 C   FIELD 00w04 MINREV: MINREV
0x540033F4 C   FIELD 04w04 MAJREV: MAJREV
0x540033F8 B  REGISTER RNG_IPIDR (ro): RNG identification register
0x540033F8 C   FIELD 00w32 ID: ID
0x540033FC B  REGISTER RNG_SIDR (ro): RNG size ID register
0x540033FC C   FIELD 00w32 SID: SID
0x54004000 A PERIPHERAL GPIOZ
0x54004000 B  REGISTER GPIOZ_MODER (rw): GPIO port mode register
0x54004000 C   FIELD 00w02 MODER0: MODER0
0x54004000 C   FIELD 02w02 MODER1: MODER1
0x54004000 C   FIELD 04w02 MODER2: MODER2
0x54004000 C   FIELD 06w02 MODER3: MODER3
0x54004000 C   FIELD 08w02 MODER4: MODER4
0x54004000 C   FIELD 10w02 MODER5: MODER5
0x54004000 C   FIELD 12w02 MODER6: MODER6
0x54004000 C   FIELD 14w02 MODER7: MODER7
0x54004000 C   FIELD 16w02 MODER8: MODER8
0x54004000 C   FIELD 18w02 MODER9: MODER9
0x54004000 C   FIELD 20w02 MODER10: MODER10
0x54004000 C   FIELD 22w02 MODER11: MODER11
0x54004000 C   FIELD 24w02 MODER12: MODER12
0x54004000 C   FIELD 26w02 MODER13: MODER13
0x54004000 C   FIELD 28w02 MODER14: MODER14
0x54004000 C   FIELD 30w02 MODER15: MODER15
0x54004004 B  REGISTER GPIOZ_OTYPER (rw): GPIO port output type register
0x54004004 C   FIELD 00w01 OT0: OT0
0x54004004 C   FIELD 01w01 OT1: OT1
0x54004004 C   FIELD 02w01 OT2: OT2
0x54004004 C   FIELD 03w01 OT3: OT3
0x54004004 C   FIELD 04w01 OT4: OT4
0x54004004 C   FIELD 05w01 OT5: OT5
0x54004004 C   FIELD 06w01 OT6: OT6
0x54004004 C   FIELD 07w01 OT7: OT7
0x54004004 C   FIELD 08w01 OT8: OT8
0x54004004 C   FIELD 09w01 OT9: OT9
0x54004004 C   FIELD 10w01 OT10: OT10
0x54004004 C   FIELD 11w01 OT11: OT11
0x54004004 C   FIELD 12w01 OT12: OT12
0x54004004 C   FIELD 13w01 OT13: OT13
0x54004004 C   FIELD 14w01 OT14: OT14
0x54004004 C   FIELD 15w01 OT15: OT15
0x54004008 B  REGISTER GPIOZ_OSPEEDR (rw): GPIO port output speed register
0x54004008 C   FIELD 00w02 OSPEEDR0: OSPEEDR0
0x54004008 C   FIELD 02w02 OSPEEDR1: OSPEEDR1
0x54004008 C   FIELD 04w02 OSPEEDR2: OSPEEDR2
0x54004008 C   FIELD 06w02 OSPEEDR3: OSPEEDR3
0x54004008 C   FIELD 08w02 OSPEEDR4: OSPEEDR4
0x54004008 C   FIELD 10w02 OSPEEDR5: OSPEEDR5
0x54004008 C   FIELD 12w02 OSPEEDR6: OSPEEDR6
0x54004008 C   FIELD 14w02 OSPEEDR7: OSPEEDR7
0x54004008 C   FIELD 16w02 OSPEEDR8: OSPEEDR8
0x54004008 C   FIELD 18w02 OSPEEDR9: OSPEEDR9
0x54004008 C   FIELD 20w02 OSPEEDR10: OSPEEDR10
0x54004008 C   FIELD 22w02 OSPEEDR11: OSPEEDR11
0x54004008 C   FIELD 24w02 OSPEEDR12: OSPEEDR12
0x54004008 C   FIELD 26w02 OSPEEDR13: OSPEEDR13
0x54004008 C   FIELD 28w02 OSPEEDR14: OSPEEDR14
0x54004008 C   FIELD 30w02 OSPEEDR15: OSPEEDR15
0x5400400C B  REGISTER GPIOZ_PUPDR (rw): GPIO port pull-up/pull-down register
0x5400400C C   FIELD 00w02 PUPDR0: PUPDR0
0x5400400C C   FIELD 02w02 PUPDR1: PUPDR1
0x5400400C C   FIELD 04w02 PUPDR2: PUPDR2
0x5400400C C   FIELD 06w02 PUPDR3: PUPDR3
0x5400400C C   FIELD 08w02 PUPDR4: PUPDR4
0x5400400C C   FIELD 10w02 PUPDR5: PUPDR5
0x5400400C C   FIELD 12w02 PUPDR6: PUPDR6
0x5400400C C   FIELD 14w02 PUPDR7: PUPDR7
0x5400400C C   FIELD 16w02 PUPDR8: PUPDR8
0x5400400C C   FIELD 18w02 PUPDR9: PUPDR9
0x5400400C C   FIELD 20w02 PUPDR10: PUPDR10
0x5400400C C   FIELD 22w02 PUPDR11: PUPDR11
0x5400400C C   FIELD 24w02 PUPDR12: PUPDR12
0x5400400C C   FIELD 26w02 PUPDR13: PUPDR13
0x5400400C C   FIELD 28w02 PUPDR14: PUPDR14
0x5400400C C   FIELD 30w02 PUPDR15: PUPDR15
0x54004010 B  REGISTER GPIOZ_IDR (ro): GPIO port input data register
0x54004010 C   FIELD 00w01 IDR0: IDR0
0x54004010 C   FIELD 01w01 IDR1: IDR1
0x54004010 C   FIELD 02w01 IDR2: IDR2
0x54004010 C   FIELD 03w01 IDR3: IDR3
0x54004010 C   FIELD 04w01 IDR4: IDR4
0x54004010 C   FIELD 05w01 IDR5: IDR5
0x54004010 C   FIELD 06w01 IDR6: IDR6
0x54004010 C   FIELD 07w01 IDR7: IDR7
0x54004010 C   FIELD 08w01 IDR8: IDR8
0x54004010 C   FIELD 09w01 IDR9: IDR9
0x54004010 C   FIELD 10w01 IDR10: IDR10
0x54004010 C   FIELD 11w01 IDR11: IDR11
0x54004010 C   FIELD 12w01 IDR12: IDR12
0x54004010 C   FIELD 13w01 IDR13: IDR13
0x54004010 C   FIELD 14w01 IDR14: IDR14
0x54004010 C   FIELD 15w01 IDR15: IDR15
0x54004014 B  REGISTER GPIOZ_ODR (rw): GPIO port output data register
0x54004014 C   FIELD 00w01 ODR0: ODR0
0x54004014 C   FIELD 01w01 ODR1: ODR1
0x54004014 C   FIELD 02w01 ODR2: ODR2
0x54004014 C   FIELD 03w01 ODR3: ODR3
0x54004014 C   FIELD 04w01 ODR4: ODR4
0x54004014 C   FIELD 05w01 ODR5: ODR5
0x54004014 C   FIELD 06w01 ODR6: ODR6
0x54004014 C   FIELD 07w01 ODR7: ODR7
0x54004014 C   FIELD 08w01 ODR8: ODR8
0x54004014 C   FIELD 09w01 ODR9: ODR9
0x54004014 C   FIELD 10w01 ODR10: ODR10
0x54004014 C   FIELD 11w01 ODR11: ODR11
0x54004014 C   FIELD 12w01 ODR12: ODR12
0x54004014 C   FIELD 13w01 ODR13: ODR13
0x54004014 C   FIELD 14w01 ODR14: ODR14
0x54004014 C   FIELD 15w01 ODR15: ODR15
0x54004018 B  REGISTER GPIOZ_BSRR (wo): GPIO port bit set/reset register
0x54004018 C   FIELD 00w01 BS0: BS0
0x54004018 C   FIELD 01w01 BS1: BS1
0x54004018 C   FIELD 02w01 BS2: BS2
0x54004018 C   FIELD 03w01 BS3: BS3
0x54004018 C   FIELD 04w01 BS4: BS4
0x54004018 C   FIELD 05w01 BS5: BS5
0x54004018 C   FIELD 06w01 BS6: BS6
0x54004018 C   FIELD 07w01 BS7: BS7
0x54004018 C   FIELD 08w01 BS8: BS8
0x54004018 C   FIELD 09w01 BS9: BS9
0x54004018 C   FIELD 10w01 BS10: BS10
0x54004018 C   FIELD 11w01 BS11: BS11
0x54004018 C   FIELD 12w01 BS12: BS12
0x54004018 C   FIELD 13w01 BS13: BS13
0x54004018 C   FIELD 14w01 BS14: BS14
0x54004018 C   FIELD 15w01 BS15: BS15
0x54004018 C   FIELD 16w01 BR0: BR0
0x54004018 C   FIELD 17w01 BR1: BR1
0x54004018 C   FIELD 18w01 BR2: BR2
0x54004018 C   FIELD 19w01 BR3: BR3
0x54004018 C   FIELD 20w01 BR4: BR4
0x54004018 C   FIELD 21w01 BR5: BR5
0x54004018 C   FIELD 22w01 BR6: BR6
0x54004018 C   FIELD 23w01 BR7: BR7
0x54004018 C   FIELD 24w01 BR8: BR8
0x54004018 C   FIELD 25w01 BR9: BR9
0x54004018 C   FIELD 26w01 BR10: BR10
0x54004018 C   FIELD 27w01 BR11: BR11
0x54004018 C   FIELD 28w01 BR12: BR12
0x54004018 C   FIELD 29w01 BR13: BR13
0x54004018 C   FIELD 30w01 BR14: BR14
0x54004018 C   FIELD 31w01 BR15: BR15
0x5400401C B  REGISTER GPIOZ_LCKR (rw): This register is used to lock the configuration of the port bits when a correct write sequence is applied to bit 16 (LCKK). The value of bits [15:0] is used to lock the configuration of the GPIO. During the write sequence, the value of LCKR[15:0] must not change. When the LOCK sequence has been applied on a port bit, the value of this port bit can no longer be modified until the next MCU reset or peripheral reset. A specific write sequence is used to write to the GPIOx_LCKR register. Only word access (32-bit long) is allowed during this locking sequence. Each lock bit freezes a specific configuration register (control and alternate function registers).
0x5400401C C   FIELD 00w01 LCK0: LCK0
0x5400401C C   FIELD 01w01 LCK1: LCK1
0x5400401C C   FIELD 02w01 LCK2: LCK2
0x5400401C C   FIELD 03w01 LCK3: LCK3
0x5400401C C   FIELD 04w01 LCK4: LCK4
0x5400401C C   FIELD 05w01 LCK5: LCK5
0x5400401C C   FIELD 06w01 LCK6: LCK6
0x5400401C C   FIELD 07w01 LCK7: LCK7
0x5400401C C   FIELD 08w01 LCK8: LCK8
0x5400401C C   FIELD 09w01 LCK9: LCK9
0x5400401C C   FIELD 10w01 LCK10: LCK10
0x5400401C C   FIELD 11w01 LCK11: LCK11
0x5400401C C   FIELD 12w01 LCK12: LCK12
0x5400401C C   FIELD 13w01 LCK13: LCK13
0x5400401C C   FIELD 14w01 LCK14: LCK14
0x5400401C C   FIELD 15w01 LCK15: LCK15
0x5400401C C   FIELD 16w01 LCKK: LCKK
0x54004020 B  REGISTER GPIOZ_AFRL (rw): GPIO alternate function low register
0x54004020 C   FIELD 00w04 AFR0: AFR0
0x54004020 C   FIELD 04w04 AFR1: AFR1
0x54004020 C   FIELD 08w04 AFR2: AFR2
0x54004020 C   FIELD 12w04 AFR3: AFR3
0x54004020 C   FIELD 16w04 AFR4: AFR4
0x54004020 C   FIELD 20w04 AFR5: AFR5
0x54004020 C   FIELD 24w04 AFR6: AFR6
0x54004020 C   FIELD 28w04 AFR7: AFR7
0x54004024 B  REGISTER GPIOZ_AFRH (rw): GPIO alternate function high register
0x54004024 C   FIELD 00w04 AFR8: AFR8
0x54004024 C   FIELD 04w04 AFR9: AFR9
0x54004024 C   FIELD 08w04 AFR10: AFR10
0x54004024 C   FIELD 12w04 AFR11: AFR11
0x54004024 C   FIELD 16w04 AFR12: AFR12
0x54004024 C   FIELD 20w04 AFR13: AFR13
0x54004024 C   FIELD 24w04 AFR14: AFR14
0x54004024 C   FIELD 28w04 AFR15: AFR15
0x54004028 B  REGISTER GPIOZ_BRR (wo): GPIO port bit reset register
0x54004028 C   FIELD 00w01 BR0: BR0
0x54004028 C   FIELD 01w01 BR1: BR1
0x54004028 C   FIELD 02w01 BR2: BR2
0x54004028 C   FIELD 03w01 BR3: BR3
0x54004028 C   FIELD 04w01 BR4: BR4
0x54004028 C   FIELD 05w01 BR5: BR5
0x54004028 C   FIELD 06w01 BR6: BR6
0x54004028 C   FIELD 07w01 BR7: BR7
0x54004028 C   FIELD 08w01 BR8: BR8
0x54004028 C   FIELD 09w01 BR9: BR9
0x54004028 C   FIELD 10w01 BR10: BR10
0x54004028 C   FIELD 11w01 BR11: BR11
0x54004028 C   FIELD 12w01 BR12: BR12
0x54004028 C   FIELD 13w01 BR13: BR13
0x54004028 C   FIELD 14w01 BR14: BR14
0x54004028 C   FIELD 15w01 BR15: BR15
0x54004030 B  REGISTER GPIOZ_SECCFGR (wo): This register provides write access security and can be written only by a secure access. It is used to configure a selected I/O as secure. A non-secure write access to this register is discarded.
0x54004030 C   FIELD 00w01 SEC0: SEC0
0x54004030 C   FIELD 01w01 SEC1: SEC1
0x54004030 C   FIELD 02w01 SEC2: SEC2
0x54004030 C   FIELD 03w01 SEC3: SEC3
0x54004030 C   FIELD 04w01 SEC4: SEC4
0x54004030 C   FIELD 05w01 SEC5: SEC5
0x54004030 C   FIELD 06w01 SEC6: SEC6
0x54004030 C   FIELD 07w01 SEC7: SEC7
0x540043C8 B  REGISTER GPIOZ_HWCFGR10 (ro): For GPIOA, B, C, D, E, F, G, H, I, J and GPIOK: For GPIOZ:
0x540043C8 C   FIELD 00w04 AHB_IOP: AHB_IOP
0x540043C8 C   FIELD 04w04 AF_SIZE: AF_SIZE
0x540043C8 C   FIELD 08w04 SPEED_CFG: SPEED_CFG
0x540043C8 C   FIELD 12w04 LOCK_CFG: LOCK_CFG
0x540043C8 C   FIELD 16w04 SEC_CFG: SEC_CFG
0x540043C8 C   FIELD 20w04 OR_CFG: OR_CFG
0x540043CC B  REGISTER GPIOZ_HWCFGR9 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x540043CC C   FIELD 00w16 EN_IO: EN_IO
0x540043D0 B  REGISTER GPIOZ_HWCFGR8 (ro): For GPIOA, B, C, D, E, F, G, H, I, and GPIOJ: For GPIOK and GPIOZ:
0x540043D0 C   FIELD 00w04 AF_PRIO8: AF_PRIO8
0x540043D0 C   FIELD 04w04 AF_PRIO9: AF_PRIO9
0x540043D0 C   FIELD 08w04 AF_PRIO10: AF_PRIO10
0x540043D0 C   FIELD 12w04 AF_PRIO11: AF_PRIO11
0x540043D0 C   FIELD 16w04 AF_PRIO12: AF_PRIO12
0x540043D0 C   FIELD 20w04 AF_PRIO13: AF_PRIO13
0x540043D0 C   FIELD 24w04 AF_PRIO14: AF_PRIO14
0x540043D0 C   FIELD 28w04 AF_PRIO15: AF_PRIO15
0x540043D4 B  REGISTER GPIOZ_HWCFGR7 (ro): GPIO hardware configuration register 7
0x540043D4 C   FIELD 00w04 AF_PRIO0: AF_PRIO0
0x540043D4 C   FIELD 04w04 AF_PRIO1: AF_PRIO1
0x540043D4 C   FIELD 08w04 AF_PRIO2: AF_PRIO2
0x540043D4 C   FIELD 12w04 AF_PRIO3: AF_PRIO3
0x540043D4 C   FIELD 16w04 AF_PRIO4: AF_PRIO4
0x540043D4 C   FIELD 20w04 AF_PRIO5: AF_PRIO5
0x540043D4 C   FIELD 24w04 AF_PRIO6: AF_PRIO6
0x540043D4 C   FIELD 28w04 AF_PRIO7: AF_PRIO7
0x540043D8 B  REGISTER GPIOZ_HWCFGR6 (ro): GPIO hardware configuration register 6
0x540043D8 C   FIELD 00w32 MODER_RES: MODER_RES
0x540043DC B  REGISTER GPIOZ_HWCFGR5 (ro): GPIO hardware configuration register 5
0x540043DC C   FIELD 00w32 PUPDR_RES: PUPDR_RES
0x540043E0 B  REGISTER GPIOZ_HWCFGR4 (ro): GPIO hardware configuration register 4
0x540043E0 C   FIELD 00w32 OSPEED_RES: OSPEED_RES
0x540043E4 B  REGISTER GPIOZ_HWCFGR3 (ro): GPIO hardware configuration register 3
0x540043E4 C   FIELD 00w16 ODR_RES: ODR_RES
0x540043E4 C   FIELD 16w16 OTYPER_RES: OTYPER_RES
0x540043E8 B  REGISTER GPIOZ_HWCFGR2 (ro): GPIO hardware configuration register 2
0x540043E8 C   FIELD 00w32 AFRL_RES: AFRL_RES
0x540043EC B  REGISTER GPIOZ_HWCFGR1 (ro): GPIO hardware configuration register 1
0x540043EC C   FIELD 00w32 AFRH_RES: AFRH_RES
0x540043F0 B  REGISTER GPIOZ_HWCFGR0 (ro): GPIO hardware configuration register 0
0x540043F0 C   FIELD 00w16 OR_RES: OR_RES
0x540043F4 B  REGISTER GPIOZ_VERR (ro): GPIO version register
0x540043F4 C   FIELD 00w04 MINREV: MINREV
0x540043F4 C   FIELD 04w04 MAJREV: MAJREV
0x540043F8 B  REGISTER GPIOZ_IPIDR (ro): GPIO identification register
0x540043F8 C   FIELD 00w32 IPIDR: IPIDR
0x540043FC B  REGISTER GPIOZ_SIDR (ro): GPIO size identification register
0x540043FC C   FIELD 00w32 SIDR: SIDR
0x57042024 A PERIPHERAL AXIMC_Mx
0x57042024 B  REGISTER AXIMC_M0_FN_MOD2 (rw): AXIMC master 0 packing functionality register
0x57042024 C   FIELD 00w01 BYPASS_MERGE (rw): BYPASS_MERGE
0x57042100 B  REGISTER AXIMC_M0_READ_QOS (rw): AXIMC master 0 read priority register
0x57042100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x57042104 B  REGISTER AXIMC_M0_FN_MOD (rw): AXIMC master 0 issuing capability override functionality register
0x57042104 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x57042104 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x57042108 B  REGISTER AXIMC_M0_WRITE_QOS (rw): AXIMC master 0 write priority register
0x57042108 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x57043024 B  REGISTER AXIMC_M1_FN_MOD2 (rw): AXIMC master 1 packing functionality register
0x57043024 C   FIELD 00w01 BYPASS_MERGE (rw): BYPASS_MERGE
0x57043100 B  REGISTER AXIMC_M1_READ_QOS (rw): AXIMC master 1 read priority register
0x57043100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x57043104 B  REGISTER AXIMC_M1_WRITE_QOS (rw): AXIMC master 1 write priority register
0x57043104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x57043108 B  REGISTER AXIMC_M1_FN_MOD (rw): AXIMC master 1 issuing capability override functionality register
0x57043108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x57043108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x57043FF4 B  REGISTER AXIMC_PERIPH_ID_4 (ro): AXIMC peripheral ID4 register
0x57043FF4 C   FIELD 00w04 JEP106CON (ro): JEP106CON
0x57043FF4 C   FIELD 04w04 K4COUNT (ro): K4COUNT
0x57043FF8 B  REGISTER AXIMC_PERIPH_ID_5 (ro): AXIMC peripheral ID5 register
0x57043FF8 C   FIELD 00w08 PERIPH_ID_5 (ro): PERIPH_ID_5
0x57043FFC B  REGISTER AXIMC_PERIPH_ID_6 (ro): AXIMC peripheral ID6 register
0x57043FFC C   FIELD 00w08 PERIPH_ID_6 (ro): PERIPH_ID_6
0x57044000 B  REGISTER AXIMC_PERIPH_ID_7 (ro): AXIMC peripheral ID7 register
0x57044000 C   FIELD 00w08 PERIPH_ID_7 (ro): PERIPH_ID_7
0x57044004 B  REGISTER AXIMC_PERIPH_ID_0 (ro): AXIMC peripheral ID0 register
0x57044004 C   FIELD 00w08 PERIPH_ID_0 (ro): PERIPH_ID_0
0x57044008 B  REGISTER AXIMC_PERIPH_ID_1 (ro): AXIMC peripheral ID1 register
0x57044008 C   FIELD 00w08 PERIPH_ID_1 (ro): PERIPH_ID_1
0x5704400C B  REGISTER AXIMC_PERIPH_ID_2 (ro): AXIMC peripheral ID2 register
0x5704400C C   FIELD 00w08 PERIPH_ID_2 (ro): PERIPH_ID_2
0x57044010 B  REGISTER AXIMC_PERIPH_ID_3 (ro): AXIMC peripheral ID3 register
0x57044010 C   FIELD 00w04 CUST_MOD_NUM (ro): CUST_MOD_NUM
0x57044010 C   FIELD 04w04 REV_AND (ro): REV_AND
0x57044014 B  REGISTER AXIMC_COMP_ID_0 (ro): AXIMC component ID0 register
0x57044014 C   FIELD 00w08 PREAMBLE (ro): PREAMBLE
0x57044018 B  REGISTER AXIMC_COMP_ID_1 (ro): AXIMC component ID1 register
0x57044018 C   FIELD 00w04 PREAMBLE (ro): PREAMBLE
0x57044018 C   FIELD 04w04 CLASS (ro): CLASS
0x5704401C B  REGISTER AXIMC_COMP_ID_2 (ro): AXIMC component ID2 register
0x5704401C C   FIELD 00w08 PREAMBLE (ro): PREAMBLE
0x57044020 B  REGISTER AXIMC_COMP_ID_3 (ro): AXIMC component ID3 register
0x57044020 C   FIELD 00w08 PREAMBLE (ro): PREAMBLE
0x57044024 B  REGISTER AXIMC_M2_FN_MOD2 (rw): AXIMC master 2 packing functionality register
0x57044024 C   FIELD 00w01 BYPASS_MERGE (rw): BYPASS_MERGE
0x57044100 B  REGISTER AXIMC_M2_READ_QOS (rw): AXIMC master 2 read priority register
0x57044100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x57044104 B  REGISTER AXIMC_M2_WRITE_QOS (rw): AXIMC master 2 write priority register
0x57044104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x57044108 B  REGISTER AXIMC_M2_FN_MOD (rw): AXIMC master 2 issuing capability override functionality register
0x57044108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x57044108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x57045024 B  REGISTER AXIMC_M5_FN_MOD2 (rw): AXIMC master 5 packing functionality register
0x57045024 C   FIELD 00w01 BYPASS_MERGE (rw): BYPASS_MERGE
0x57045100 B  REGISTER AXIMC_M5_READ_QOS (rw): AXIMC master 5 read priority register
0x57045100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x57045104 B  REGISTER AXIMC_M5_WRITE_QOS (rw): AXIMC master 5 write priority register
0x57045104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x57045108 B  REGISTER AXIMC_M5_FN_MOD (rw): AXIMC master 5 issuing capability override functionality register
0x57045108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x57045108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x57046100 B  REGISTER AXIMC_M3_READ_QOS (rw): AXIMC master 3 read priority register
0x57046100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x57046104 B  REGISTER AXIMC_M3_WRITE_QOS (rw): AXIMC master 3 write priority register
0x57046104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x57046108 B  REGISTER AXIMC_M3_FN_MOD (rw): AXIMC master 3 packing functionality register
0x57046108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x57046108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x57047100 B  REGISTER AXIMC_M7_READ_QOS (rw): AXIMC master 7 read priority register
0x57047100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x57047104 B  REGISTER AXIMC_M7_WRITE_QOS (rw): AXIMC master 7 write priority register
0x57047104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x57047108 B  REGISTER AXIMC_M7_FN_MOD (rw): AXIMC master 7 issuing capability override functionality register
0x57047108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x57047108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x57048100 B  REGISTER AXIMC_M8_READ_QOS (rw): AXIMC master 8 read priority register
0x57048100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x57048104 B  REGISTER AXIMC_M8_WRITE_QOS (rw): AXIMC master 8 write priority register
0x57048104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x57048108 B  REGISTER AXIMC_M8_FN_MOD (rw): AXIMC master 8 issuing capability override functionality register
0x57048108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x57048108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x5704A024 B  REGISTER AXIMC_M4_FN_MOD2 (rw): AXIMC master 4 packing functionality register
0x5704A024 C   FIELD 00w01 BYPASS_MERGE (rw): BYPASS_MERGE
0x5704A100 B  REGISTER AXIMC_M4_READ_QOS (rw): AXIMC master 4 read priority register
0x5704A100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x5704A104 B  REGISTER AXIMC_M4_WRITE_QOS (rw): AXIMC master 4 write priority register
0x5704A104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x5704A108 B  REGISTER AXIMC_M4_FN_MOD (rw): AXIMC master 4 packing functionality register
0x5704A108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x5704A108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x5704B100 B  REGISTER AXIMC_M9_READ_QOS (rw): AXIMC master 9 read priority register
0x5704B100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x5704B104 B  REGISTER AXIMC_M9_WRITE_QOS (rw): AXIMC master 9 write priority register
0x5704B104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x5704B108 B  REGISTER AXIMC_M9_FN_MOD (rw): AXIMC master 9 issuing capability override functionality register
0x5704B108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x5704B108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x5704C100 B  REGISTER AXIMC_M10_READ_QOS (rw): AXIMC master 10 read priority register
0x5704C100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x5704C104 B  REGISTER AXIMC_M10_WRITE_QOS (rw): AXIMC master 10 write priority register
0x5704C104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x5704C108 B  REGISTER AXIMC_M10_FN_MOD (rw): AXIMC master 10 issuing capability override functionality register
0x5704C108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x5704C108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x5704D024 B  REGISTER AXIMC_M6_FN_MOD2 (rw): AXIMC master 6 packing functionality register
0x5704D024 C   FIELD 00w01 BYPASS_MERGE (rw): BYPASS_MERGE
0x5704D100 B  REGISTER AXIMC_M6_READ_QOS (rw): AXIMC master 6 read priority register
0x5704D100 C   FIELD 00w04 AR_QOS (rw): AR_QOS
0x5704D104 B  REGISTER AXIMC_M6_WRITE_QOS (rw): AXIMC master 6 write priority register
0x5704D104 C   FIELD 00w04 AW_QOS (rw): AW_QOS
0x5704D108 B  REGISTER AXIMC_M6_FN_MOD (rw): AXIMC master 6 issuing capability override functionality register
0x5704D108 C   FIELD 00w01 READ_ISS_OVERRIDE (rw): READ_ISS_OVERRIDE
0x5704D108 C   FIELD 01w01 WRITE_ISS_OVERRIDE (rw): WRITE_ISS_OVERRIDE
0x5708404C B  REGISTER AXIMC_M0_FN_MOD_AHB (rw): AXIMC master 0 AHB conversion override functionality register
0x5708404C C   FIELD 00w01 RD_INC_OVERRIDE (rw): RD_INC_OVERRIDE
0x5708404C C   FIELD 01w01 WR_INC_OVERRIDE (rw): WR_INC_OVERRIDE
0x5708504C B  REGISTER AXIMC_M1_FN_MOD_AHB (rw): AXIMC master 1 AHB conversion override functionality register
0x5708504C C   FIELD 00w01 RD_INC_OVERRIDE (rw): RD_INC_OVERRIDE
0x5708504C C   FIELD 01w01 WR_INC_OVERRIDE (rw): WR_INC_OVERRIDE
0x5708604C B  REGISTER AXIMC_M2_FN_MOD_AHB (rw): AXIMC master 2 AHB conversion override functionality register
0x5708604C C   FIELD 00w01 RD_INC_OVERRIDE (rw): RD_INC_OVERRIDE
0x5708604C C   FIELD 01w01 WR_INC_OVERRIDE (rw): WR_INC_OVERRIDE
0x5708704C B  REGISTER AXIMC_M5_FN_MOD_AHB (rw): AXIMC master 5 AHB conversion override functionality register
0x5708704C C   FIELD 00w01 RD_INC_OVERRIDE (rw): RD_INC_OVERRIDE
0x5708704C C   FIELD 01w01 WR_INC_OVERRIDE (rw): WR_INC_OVERRIDE
0x5708C050 B  REGISTER AXIMC_FN_MOD_LB (rw): AXIMC long burst capability inhibition register
0x5708C050 C   FIELD 00w01 FN_MOD_LB (rw): FN_MOD_LB
0x5708F04C B  REGISTER AXIMC_M6_FN_MOD_AHB (rw): AXIMC master 6 AHB conversion override functionality register
0x5708F04C C   FIELD 00w01 RD_INC_OVERRIDE (rw): RD_INC_OVERRIDE
0x5708F04C C   FIELD 01w01 WR_INC_OVERRIDE (rw): WR_INC_OVERRIDE
0x58000000 A PERIPHERAL MDMA
0x58000000 B  REGISTER MDMA_GISR0 (ro): MDMA global interrupt/status register
0x58000000 C   FIELD 00w01 GIF0: GIF0
0x58000000 C   FIELD 01w01 GIF1: GIF1
0x58000000 C   FIELD 02w01 GIF2: GIF2
0x58000000 C   FIELD 03w01 GIF3: GIF3
0x58000000 C   FIELD 04w01 GIF4: GIF4
0x58000000 C   FIELD 05w01 GIF5: GIF5
0x58000000 C   FIELD 06w01 GIF6: GIF6
0x58000000 C   FIELD 07w01 GIF7: GIF7
0x58000000 C   FIELD 08w01 GIF8: GIF8
0x58000000 C   FIELD 09w01 GIF9: GIF9
0x58000000 C   FIELD 10w01 GIF10: GIF10
0x58000000 C   FIELD 11w01 GIF11: GIF11
0x58000000 C   FIELD 12w01 GIF12: GIF12
0x58000000 C   FIELD 13w01 GIF13: GIF13
0x58000000 C   FIELD 14w01 GIF14: GIF14
0x58000000 C   FIELD 15w01 GIF15: GIF15
0x58000000 C   FIELD 16w01 GIF16: GIF16
0x58000000 C   FIELD 17w01 GIF17: GIF17
0x58000000 C   FIELD 18w01 GIF18: GIF18
0x58000000 C   FIELD 19w01 GIF19: GIF19
0x58000000 C   FIELD 20w01 GIF20: GIF20
0x58000000 C   FIELD 21w01 GIF21: GIF21
0x58000000 C   FIELD 22w01 GIF22: GIF22
0x58000000 C   FIELD 23w01 GIF23: GIF23
0x58000000 C   FIELD 24w01 GIF24: GIF24
0x58000000 C   FIELD 25w01 GIF25: GIF25
0x58000000 C   FIELD 26w01 GIF26: GIF26
0x58000000 C   FIELD 27w01 GIF27: GIF27
0x58000000 C   FIELD 28w01 GIF28: GIF28
0x58000000 C   FIELD 29w01 GIF29: GIF29
0x58000000 C   FIELD 30w01 GIF30: GIF30
0x58000000 C   FIELD 31w01 GIF31: GIF31
0x58000008 B  REGISTER MDMA_SGISR0 (ro): MDMA secure global interrupt/status register
0x58000008 C   FIELD 00w01 GIF0: GIF0
0x58000008 C   FIELD 01w01 GIF1: GIF1
0x58000008 C   FIELD 02w01 GIF2: GIF2
0x58000008 C   FIELD 03w01 GIF3: GIF3
0x58000008 C   FIELD 04w01 GIF4: GIF4
0x58000008 C   FIELD 05w01 GIF5: GIF5
0x58000008 C   FIELD 06w01 GIF6: GIF6
0x58000008 C   FIELD 07w01 GIF7: GIF7
0x58000008 C   FIELD 08w01 GIF8: GIF8
0x58000008 C   FIELD 09w01 GIF9: GIF9
0x58000008 C   FIELD 10w01 GIF10: GIF10
0x58000008 C   FIELD 11w01 GIF11: GIF11
0x58000008 C   FIELD 12w01 GIF12: GIF12
0x58000008 C   FIELD 13w01 GIF13: GIF13
0x58000008 C   FIELD 14w01 GIF14: GIF14
0x58000008 C   FIELD 15w01 GIF15: GIF15
0x58000008 C   FIELD 16w01 GIF16: GIF16
0x58000008 C   FIELD 17w01 GIF17: GIF17
0x58000008 C   FIELD 18w01 GIF18: GIF18
0x58000008 C   FIELD 19w01 GIF19: GIF19
0x58000008 C   FIELD 20w01 GIF20: GIF20
0x58000008 C   FIELD 21w01 GIF21: GIF21
0x58000008 C   FIELD 22w01 GIF22: GIF22
0x58000008 C   FIELD 23w01 GIF23: GIF23
0x58000008 C   FIELD 24w01 GIF24: GIF24
0x58000008 C   FIELD 25w01 GIF25: GIF25
0x58000008 C   FIELD 26w01 GIF26: GIF26
0x58000008 C   FIELD 27w01 GIF27: GIF27
0x58000008 C   FIELD 28w01 GIF28: GIF28
0x58000008 C   FIELD 29w01 GIF29: GIF29
0x58000008 C   FIELD 30w01 GIF30: GIF30
0x58000008 C   FIELD 31w01 GIF31: GIF31
0x58000040 B  REGISTER MDMA_C0ISR (ro): MDMA channel 0 interrupt/status register
0x58000040 C   FIELD 00w01 TEIF: TEIF
0x58000040 C   FIELD 01w01 CTCIF: CTCIF
0x58000040 C   FIELD 02w01 BRTIF: BRTIF
0x58000040 C   FIELD 03w01 BTIF: BTIF
0x58000040 C   FIELD 04w01 TCIF: TCIF
0x58000040 C   FIELD 16w01 CRQA: CRQA
0x58000044 B  REGISTER MDMA_C0IFCR (wo): MDMA channel 0 interrupt flag clear register
0x58000044 C   FIELD 00w01 CTEIF: CTEIF
0x58000044 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000044 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000044 C   FIELD 03w01 CBTIF: CBTIF
0x58000044 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000048 B  REGISTER MDMA_C0ESR (ro): MDMA channel 0 error status register
0x58000048 C   FIELD 00w07 TEA: TEA
0x58000048 C   FIELD 07w01 TED: TED
0x58000048 C   FIELD 08w01 TELD: TELD
0x58000048 C   FIELD 09w01 TEMD: TEMD
0x58000048 C   FIELD 10w01 ASE: ASE
0x58000048 C   FIELD 11w01 BSE: BSE
0x5800004C B  REGISTER MDMA_C0CR: This register is used to control the concerned channel.
0x5800004C C   FIELD 00w01 EN (rw): EN
0x5800004C C   FIELD 01w01 TEIE (rw): TEIE
0x5800004C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800004C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800004C C   FIELD 04w01 BTIE (rw): BTIE
0x5800004C C   FIELD 05w01 TCIE (rw): TCIE
0x5800004C C   FIELD 06w02 PL (rw): PL
0x5800004C C   FIELD 12w01 BEX (rw): BEX
0x5800004C C   FIELD 13w01 HEX (rw): HEX
0x5800004C C   FIELD 14w01 WEX (rw): WEX
0x5800004C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000050 B  REGISTER MDMA_C0TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000050 C   FIELD 00w02 SINC: SINC
0x58000050 C   FIELD 02w02 DINC: DINC
0x58000050 C   FIELD 04w02 SSIZE: SSIZE
0x58000050 C   FIELD 06w02 DSIZE: DSIZE
0x58000050 C   FIELD 08w02 SINCOS: SINCOS
0x58000050 C   FIELD 10w02 DINCOS: DINCOS
0x58000050 C   FIELD 12w03 SBURST: SBURST
0x58000050 C   FIELD 15w03 DBURST: DBURST
0x58000050 C   FIELD 18w07 TLEN: TLEN
0x58000050 C   FIELD 25w01 PKE: PKE
0x58000050 C   FIELD 26w02 PAM: PAM
0x58000050 C   FIELD 28w02 TRGM: TRGM
0x58000050 C   FIELD 30w01 SWRM: SWRM
0x58000050 C   FIELD 31w01 BWM: BWM
0x58000054 B  REGISTER MDMA_C0BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000054 C   FIELD 00w17 BNDT: BNDT
0x58000054 C   FIELD 18w01 BRSUM: BRSUM
0x58000054 C   FIELD 19w01 BRDUM: BRDUM
0x58000054 C   FIELD 20w12 BRC: BRC
0x58000058 B  REGISTER MDMA_C0SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000058 C   FIELD 00w32 SAR: SAR
0x5800005C B  REGISTER MDMA_C0DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800005C C   FIELD 00w32 DAR: DAR
0x58000060 B  REGISTER MDMA_C0BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000060 C   FIELD 00w16 SUV: SUV
0x58000060 C   FIELD 16w16 DUV: DUV
0x58000064 B  REGISTER MDMA_C0LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000064 C   FIELD 00w32 LAR: LAR
0x58000068 B  REGISTER MDMA_C0TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000068 C   FIELD 00w06 TSEL: TSEL
0x58000068 C   FIELD 16w01 SBUS: SBUS
0x58000068 C   FIELD 17w01 DBUS: DBUS
0x58000070 B  REGISTER MDMA_C0MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000070 C   FIELD 00w32 MAR: MAR
0x58000074 B  REGISTER MDMA_C0MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000074 C   FIELD 00w32 MDR: MDR
0x58000080 B  REGISTER MDMA_C1ISR (ro): MDMA channel 1 interrupt/status register
0x58000080 C   FIELD 00w01 TEIF: TEIF
0x58000080 C   FIELD 01w01 CTCIF: CTCIF
0x58000080 C   FIELD 02w01 BRTIF: BRTIF
0x58000080 C   FIELD 03w01 BTIF: BTIF
0x58000080 C   FIELD 04w01 TCIF: TCIF
0x58000080 C   FIELD 16w01 CRQA: CRQA
0x58000084 B  REGISTER MDMA_C1IFCR (wo): MDMA channel 1 interrupt flag clear register
0x58000084 C   FIELD 00w01 CTEIF: CTEIF
0x58000084 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000084 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000084 C   FIELD 03w01 CBTIF: CBTIF
0x58000084 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000088 B  REGISTER MDMA_C1ESR (ro): MDMA channel 1 error status register
0x58000088 C   FIELD 00w07 TEA: TEA
0x58000088 C   FIELD 07w01 TED: TED
0x58000088 C   FIELD 08w01 TELD: TELD
0x58000088 C   FIELD 09w01 TEMD: TEMD
0x58000088 C   FIELD 10w01 ASE: ASE
0x58000088 C   FIELD 11w01 BSE: BSE
0x5800008C B  REGISTER MDMA_C1CR: This register is used to control the concerned channel.
0x5800008C C   FIELD 00w01 EN (rw): EN
0x5800008C C   FIELD 01w01 TEIE (rw): TEIE
0x5800008C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800008C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800008C C   FIELD 04w01 BTIE (rw): BTIE
0x5800008C C   FIELD 05w01 TCIE (rw): TCIE
0x5800008C C   FIELD 06w02 PL (rw): PL
0x5800008C C   FIELD 12w01 BEX (rw): BEX
0x5800008C C   FIELD 13w01 HEX (rw): HEX
0x5800008C C   FIELD 14w01 WEX (rw): WEX
0x5800008C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000090 B  REGISTER MDMA_C1TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000090 C   FIELD 00w02 SINC: SINC
0x58000090 C   FIELD 02w02 DINC: DINC
0x58000090 C   FIELD 04w02 SSIZE: SSIZE
0x58000090 C   FIELD 06w02 DSIZE: DSIZE
0x58000090 C   FIELD 08w02 SINCOS: SINCOS
0x58000090 C   FIELD 10w02 DINCOS: DINCOS
0x58000090 C   FIELD 12w03 SBURST: SBURST
0x58000090 C   FIELD 15w03 DBURST: DBURST
0x58000090 C   FIELD 18w07 TLEN: TLEN
0x58000090 C   FIELD 25w01 PKE: PKE
0x58000090 C   FIELD 26w02 PAM: PAM
0x58000090 C   FIELD 28w02 TRGM: TRGM
0x58000090 C   FIELD 30w01 SWRM: SWRM
0x58000090 C   FIELD 31w01 BWM: BWM
0x58000094 B  REGISTER MDMA_C1BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000094 C   FIELD 00w17 BNDT: BNDT
0x58000094 C   FIELD 18w01 BRSUM: BRSUM
0x58000094 C   FIELD 19w01 BRDUM: BRDUM
0x58000094 C   FIELD 20w12 BRC: BRC
0x58000098 B  REGISTER MDMA_C1SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000098 C   FIELD 00w32 SAR: SAR
0x5800009C B  REGISTER MDMA_C1DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800009C C   FIELD 00w32 DAR: DAR
0x580000A0 B  REGISTER MDMA_C1BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580000A0 C   FIELD 00w16 SUV: SUV
0x580000A0 C   FIELD 16w16 DUV: DUV
0x580000A4 B  REGISTER MDMA_C1LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580000A4 C   FIELD 00w32 LAR: LAR
0x580000A8 B  REGISTER MDMA_C1TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580000A8 C   FIELD 00w06 TSEL: TSEL
0x580000A8 C   FIELD 16w01 SBUS: SBUS
0x580000A8 C   FIELD 17w01 DBUS: DBUS
0x580000B0 B  REGISTER MDMA_C1MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580000B0 C   FIELD 00w32 MAR: MAR
0x580000B4 B  REGISTER MDMA_C1MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580000B4 C   FIELD 00w32 MDR: MDR
0x580000C0 B  REGISTER MDMA_C2ISR (ro): MDMA channel 2 interrupt/status register
0x580000C0 C   FIELD 00w01 TEIF: TEIF
0x580000C0 C   FIELD 01w01 CTCIF: CTCIF
0x580000C0 C   FIELD 02w01 BRTIF: BRTIF
0x580000C0 C   FIELD 03w01 BTIF: BTIF
0x580000C0 C   FIELD 04w01 TCIF: TCIF
0x580000C0 C   FIELD 16w01 CRQA: CRQA
0x580000C4 B  REGISTER MDMA_C2IFCR (wo): MDMA channel 2 interrupt flag clear register
0x580000C4 C   FIELD 00w01 CTEIF: CTEIF
0x580000C4 C   FIELD 01w01 CCTCIF: CCTCIF
0x580000C4 C   FIELD 02w01 CBRTIF: CBRTIF
0x580000C4 C   FIELD 03w01 CBTIF: CBTIF
0x580000C4 C   FIELD 04w01 CLTCIF: CLTCIF
0x580000C8 B  REGISTER MDMA_C2ESR (ro): MDMA channel 2 error status register
0x580000C8 C   FIELD 00w07 TEA: TEA
0x580000C8 C   FIELD 07w01 TED: TED
0x580000C8 C   FIELD 08w01 TELD: TELD
0x580000C8 C   FIELD 09w01 TEMD: TEMD
0x580000C8 C   FIELD 10w01 ASE: ASE
0x580000C8 C   FIELD 11w01 BSE: BSE
0x580000CC B  REGISTER MDMA_C2CR: This register is used to control the concerned channel.
0x580000CC C   FIELD 00w01 EN (rw): EN
0x580000CC C   FIELD 01w01 TEIE (rw): TEIE
0x580000CC C   FIELD 02w01 CTCIE (rw): CTCIE
0x580000CC C   FIELD 03w01 BRTIE (rw): BRTIE
0x580000CC C   FIELD 04w01 BTIE (rw): BTIE
0x580000CC C   FIELD 05w01 TCIE (rw): TCIE
0x580000CC C   FIELD 06w02 PL (rw): PL
0x580000CC C   FIELD 12w01 BEX (rw): BEX
0x580000CC C   FIELD 13w01 HEX (rw): HEX
0x580000CC C   FIELD 14w01 WEX (rw): WEX
0x580000CC C   FIELD 16w01 SWRQ (wo): SWRQ
0x580000D0 B  REGISTER MDMA_C2TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x580000D0 C   FIELD 00w02 SINC: SINC
0x580000D0 C   FIELD 02w02 DINC: DINC
0x580000D0 C   FIELD 04w02 SSIZE: SSIZE
0x580000D0 C   FIELD 06w02 DSIZE: DSIZE
0x580000D0 C   FIELD 08w02 SINCOS: SINCOS
0x580000D0 C   FIELD 10w02 DINCOS: DINCOS
0x580000D0 C   FIELD 12w03 SBURST: SBURST
0x580000D0 C   FIELD 15w03 DBURST: DBURST
0x580000D0 C   FIELD 18w07 TLEN: TLEN
0x580000D0 C   FIELD 25w01 PKE: PKE
0x580000D0 C   FIELD 26w02 PAM: PAM
0x580000D0 C   FIELD 28w02 TRGM: TRGM
0x580000D0 C   FIELD 30w01 SWRM: SWRM
0x580000D0 C   FIELD 31w01 BWM: BWM
0x580000D4 B  REGISTER MDMA_C2BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x580000D4 C   FIELD 00w17 BNDT: BNDT
0x580000D4 C   FIELD 18w01 BRSUM: BRSUM
0x580000D4 C   FIELD 19w01 BRDUM: BRDUM
0x580000D4 C   FIELD 20w12 BRC: BRC
0x580000D8 B  REGISTER MDMA_C2SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x580000D8 C   FIELD 00w32 SAR: SAR
0x580000DC B  REGISTER MDMA_C2DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x580000DC C   FIELD 00w32 DAR: DAR
0x580000E0 B  REGISTER MDMA_C2BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580000E0 C   FIELD 00w16 SUV: SUV
0x580000E0 C   FIELD 16w16 DUV: DUV
0x580000E4 B  REGISTER MDMA_C2LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580000E4 C   FIELD 00w32 LAR: LAR
0x580000E8 B  REGISTER MDMA_C2TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580000E8 C   FIELD 00w06 TSEL: TSEL
0x580000E8 C   FIELD 16w01 SBUS: SBUS
0x580000E8 C   FIELD 17w01 DBUS: DBUS
0x580000F0 B  REGISTER MDMA_C2MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580000F0 C   FIELD 00w32 MAR: MAR
0x580000F4 B  REGISTER MDMA_C2MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580000F4 C   FIELD 00w32 MDR: MDR
0x58000100 B  REGISTER MDMA_C3ISR (ro): MDMA channel 3 interrupt/status register
0x58000100 C   FIELD 00w01 TEIF: TEIF
0x58000100 C   FIELD 01w01 CTCIF: CTCIF
0x58000100 C   FIELD 02w01 BRTIF: BRTIF
0x58000100 C   FIELD 03w01 BTIF: BTIF
0x58000100 C   FIELD 04w01 TCIF: TCIF
0x58000100 C   FIELD 16w01 CRQA: CRQA
0x58000104 B  REGISTER MDMA_C3IFCR (wo): MDMA channel 3 interrupt flag clear register
0x58000104 C   FIELD 00w01 CTEIF: CTEIF
0x58000104 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000104 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000104 C   FIELD 03w01 CBTIF: CBTIF
0x58000104 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000108 B  REGISTER MDMA_C3ESR (ro): MDMA channel 3 error status register
0x58000108 C   FIELD 00w07 TEA: TEA
0x58000108 C   FIELD 07w01 TED: TED
0x58000108 C   FIELD 08w01 TELD: TELD
0x58000108 C   FIELD 09w01 TEMD: TEMD
0x58000108 C   FIELD 10w01 ASE: ASE
0x58000108 C   FIELD 11w01 BSE: BSE
0x5800010C B  REGISTER MDMA_C3CR: This register is used to control the concerned channel.
0x5800010C C   FIELD 00w01 EN (rw): EN
0x5800010C C   FIELD 01w01 TEIE (rw): TEIE
0x5800010C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800010C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800010C C   FIELD 04w01 BTIE (rw): BTIE
0x5800010C C   FIELD 05w01 TCIE (rw): TCIE
0x5800010C C   FIELD 06w02 PL (rw): PL
0x5800010C C   FIELD 12w01 BEX (rw): BEX
0x5800010C C   FIELD 13w01 HEX (rw): HEX
0x5800010C C   FIELD 14w01 WEX (rw): WEX
0x5800010C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000110 B  REGISTER MDMA_C3TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000110 C   FIELD 00w02 SINC: SINC
0x58000110 C   FIELD 02w02 DINC: DINC
0x58000110 C   FIELD 04w02 SSIZE: SSIZE
0x58000110 C   FIELD 06w02 DSIZE: DSIZE
0x58000110 C   FIELD 08w02 SINCOS: SINCOS
0x58000110 C   FIELD 10w02 DINCOS: DINCOS
0x58000110 C   FIELD 12w03 SBURST: SBURST
0x58000110 C   FIELD 15w03 DBURST: DBURST
0x58000110 C   FIELD 18w07 TLEN: TLEN
0x58000110 C   FIELD 25w01 PKE: PKE
0x58000110 C   FIELD 26w02 PAM: PAM
0x58000110 C   FIELD 28w02 TRGM: TRGM
0x58000110 C   FIELD 30w01 SWRM: SWRM
0x58000110 C   FIELD 31w01 BWM: BWM
0x58000114 B  REGISTER MDMA_C3BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000114 C   FIELD 00w17 BNDT: BNDT
0x58000114 C   FIELD 18w01 BRSUM: BRSUM
0x58000114 C   FIELD 19w01 BRDUM: BRDUM
0x58000114 C   FIELD 20w12 BRC: BRC
0x58000118 B  REGISTER MDMA_C3SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000118 C   FIELD 00w32 SAR: SAR
0x5800011C B  REGISTER MDMA_C3DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800011C C   FIELD 00w32 DAR: DAR
0x58000120 B  REGISTER MDMA_C3BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000120 C   FIELD 00w16 SUV: SUV
0x58000120 C   FIELD 16w16 DUV: DUV
0x58000124 B  REGISTER MDMA_C3LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000124 C   FIELD 00w32 LAR: LAR
0x58000128 B  REGISTER MDMA_C3TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000128 C   FIELD 00w06 TSEL: TSEL
0x58000128 C   FIELD 16w01 SBUS: SBUS
0x58000128 C   FIELD 17w01 DBUS: DBUS
0x58000130 B  REGISTER MDMA_C3MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000130 C   FIELD 00w32 MAR: MAR
0x58000134 B  REGISTER MDMA_C3MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000134 C   FIELD 00w32 MDR: MDR
0x58000140 B  REGISTER MDMA_C4ISR (ro): MDMA channel 4 interrupt/status register
0x58000140 C   FIELD 00w01 TEIF: TEIF
0x58000140 C   FIELD 01w01 CTCIF: CTCIF
0x58000140 C   FIELD 02w01 BRTIF: BRTIF
0x58000140 C   FIELD 03w01 BTIF: BTIF
0x58000140 C   FIELD 04w01 TCIF: TCIF
0x58000140 C   FIELD 16w01 CRQA: CRQA
0x58000144 B  REGISTER MDMA_C4IFCR (wo): MDMA channel 4 interrupt flag clear register
0x58000144 C   FIELD 00w01 CTEIF: CTEIF
0x58000144 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000144 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000144 C   FIELD 03w01 CBTIF: CBTIF
0x58000144 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000148 B  REGISTER MDMA_C4ESR (ro): MDMA channel 4 error status register
0x58000148 C   FIELD 00w07 TEA: TEA
0x58000148 C   FIELD 07w01 TED: TED
0x58000148 C   FIELD 08w01 TELD: TELD
0x58000148 C   FIELD 09w01 TEMD: TEMD
0x58000148 C   FIELD 10w01 ASE: ASE
0x58000148 C   FIELD 11w01 BSE: BSE
0x5800014C B  REGISTER MDMA_C4CR: This register is used to control the concerned channel.
0x5800014C C   FIELD 00w01 EN (rw): EN
0x5800014C C   FIELD 01w01 TEIE (rw): TEIE
0x5800014C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800014C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800014C C   FIELD 04w01 BTIE (rw): BTIE
0x5800014C C   FIELD 05w01 TCIE (rw): TCIE
0x5800014C C   FIELD 06w02 PL (rw): PL
0x5800014C C   FIELD 12w01 BEX (rw): BEX
0x5800014C C   FIELD 13w01 HEX (rw): HEX
0x5800014C C   FIELD 14w01 WEX (rw): WEX
0x5800014C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000150 B  REGISTER MDMA_C4TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000150 C   FIELD 00w02 SINC: SINC
0x58000150 C   FIELD 02w02 DINC: DINC
0x58000150 C   FIELD 04w02 SSIZE: SSIZE
0x58000150 C   FIELD 06w02 DSIZE: DSIZE
0x58000150 C   FIELD 08w02 SINCOS: SINCOS
0x58000150 C   FIELD 10w02 DINCOS: DINCOS
0x58000150 C   FIELD 12w03 SBURST: SBURST
0x58000150 C   FIELD 15w03 DBURST: DBURST
0x58000150 C   FIELD 18w07 TLEN: TLEN
0x58000150 C   FIELD 25w01 PKE: PKE
0x58000150 C   FIELD 26w02 PAM: PAM
0x58000150 C   FIELD 28w02 TRGM: TRGM
0x58000150 C   FIELD 30w01 SWRM: SWRM
0x58000150 C   FIELD 31w01 BWM: BWM
0x58000154 B  REGISTER MDMA_C4BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000154 C   FIELD 00w17 BNDT: BNDT
0x58000154 C   FIELD 18w01 BRSUM: BRSUM
0x58000154 C   FIELD 19w01 BRDUM: BRDUM
0x58000154 C   FIELD 20w12 BRC: BRC
0x58000158 B  REGISTER MDMA_C4SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000158 C   FIELD 00w32 SAR: SAR
0x5800015C B  REGISTER MDMA_C4DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800015C C   FIELD 00w32 DAR: DAR
0x58000160 B  REGISTER MDMA_C4BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000160 C   FIELD 00w16 SUV: SUV
0x58000160 C   FIELD 16w16 DUV: DUV
0x58000164 B  REGISTER MDMA_C4LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000164 C   FIELD 00w32 LAR: LAR
0x58000168 B  REGISTER MDMA_C4TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000168 C   FIELD 00w06 TSEL: TSEL
0x58000168 C   FIELD 16w01 SBUS: SBUS
0x58000168 C   FIELD 17w01 DBUS: DBUS
0x58000170 B  REGISTER MDMA_C4MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000170 C   FIELD 00w32 MAR: MAR
0x58000174 B  REGISTER MDMA_C4MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000174 C   FIELD 00w32 MDR: MDR
0x58000180 B  REGISTER MDMA_C5ISR (ro): MDMA channel 5 interrupt/status register
0x58000180 C   FIELD 00w01 TEIF: TEIF
0x58000180 C   FIELD 01w01 CTCIF: CTCIF
0x58000180 C   FIELD 02w01 BRTIF: BRTIF
0x58000180 C   FIELD 03w01 BTIF: BTIF
0x58000180 C   FIELD 04w01 TCIF: TCIF
0x58000180 C   FIELD 16w01 CRQA: CRQA
0x58000184 B  REGISTER MDMA_C5IFCR (wo): MDMA channel 5 interrupt flag clear register
0x58000184 C   FIELD 00w01 CTEIF: CTEIF
0x58000184 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000184 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000184 C   FIELD 03w01 CBTIF: CBTIF
0x58000184 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000188 B  REGISTER MDMA_C5ESR (ro): MDMA channel 5 error status register
0x58000188 C   FIELD 00w07 TEA: TEA
0x58000188 C   FIELD 07w01 TED: TED
0x58000188 C   FIELD 08w01 TELD: TELD
0x58000188 C   FIELD 09w01 TEMD: TEMD
0x58000188 C   FIELD 10w01 ASE: ASE
0x58000188 C   FIELD 11w01 BSE: BSE
0x5800018C B  REGISTER MDMA_C5CR: This register is used to control the concerned channel.
0x5800018C C   FIELD 00w01 EN (rw): EN
0x5800018C C   FIELD 01w01 TEIE (rw): TEIE
0x5800018C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800018C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800018C C   FIELD 04w01 BTIE (rw): BTIE
0x5800018C C   FIELD 05w01 TCIE (rw): TCIE
0x5800018C C   FIELD 06w02 PL (rw): PL
0x5800018C C   FIELD 12w01 BEX (rw): BEX
0x5800018C C   FIELD 13w01 HEX (rw): HEX
0x5800018C C   FIELD 14w01 WEX (rw): WEX
0x5800018C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000190 B  REGISTER MDMA_C5TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000190 C   FIELD 00w02 SINC: SINC
0x58000190 C   FIELD 02w02 DINC: DINC
0x58000190 C   FIELD 04w02 SSIZE: SSIZE
0x58000190 C   FIELD 06w02 DSIZE: DSIZE
0x58000190 C   FIELD 08w02 SINCOS: SINCOS
0x58000190 C   FIELD 10w02 DINCOS: DINCOS
0x58000190 C   FIELD 12w03 SBURST: SBURST
0x58000190 C   FIELD 15w03 DBURST: DBURST
0x58000190 C   FIELD 18w07 TLEN: TLEN
0x58000190 C   FIELD 25w01 PKE: PKE
0x58000190 C   FIELD 26w02 PAM: PAM
0x58000190 C   FIELD 28w02 TRGM: TRGM
0x58000190 C   FIELD 30w01 SWRM: SWRM
0x58000190 C   FIELD 31w01 BWM: BWM
0x58000194 B  REGISTER MDMA_C5BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000194 C   FIELD 00w17 BNDT: BNDT
0x58000194 C   FIELD 18w01 BRSUM: BRSUM
0x58000194 C   FIELD 19w01 BRDUM: BRDUM
0x58000194 C   FIELD 20w12 BRC: BRC
0x58000198 B  REGISTER MDMA_C5SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000198 C   FIELD 00w32 SAR: SAR
0x5800019C B  REGISTER MDMA_C5DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800019C C   FIELD 00w32 DAR: DAR
0x580001A0 B  REGISTER MDMA_C5BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580001A0 C   FIELD 00w16 SUV: SUV
0x580001A0 C   FIELD 16w16 DUV: DUV
0x580001A4 B  REGISTER MDMA_C5LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580001A4 C   FIELD 00w32 LAR: LAR
0x580001A8 B  REGISTER MDMA_C5TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580001A8 C   FIELD 00w06 TSEL: TSEL
0x580001A8 C   FIELD 16w01 SBUS: SBUS
0x580001A8 C   FIELD 17w01 DBUS: DBUS
0x580001B0 B  REGISTER MDMA_C5MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580001B0 C   FIELD 00w32 MAR: MAR
0x580001B4 B  REGISTER MDMA_C5MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580001B4 C   FIELD 00w32 MDR: MDR
0x580001C0 B  REGISTER MDMA_C6ISR (ro): MDMA channel 6 interrupt/status register
0x580001C0 C   FIELD 00w01 TEIF: TEIF
0x580001C0 C   FIELD 01w01 CTCIF: CTCIF
0x580001C0 C   FIELD 02w01 BRTIF: BRTIF
0x580001C0 C   FIELD 03w01 BTIF: BTIF
0x580001C0 C   FIELD 04w01 TCIF: TCIF
0x580001C0 C   FIELD 16w01 CRQA: CRQA
0x580001C4 B  REGISTER MDMA_C6IFCR (wo): MDMA channel 6 interrupt flag clear register
0x580001C4 C   FIELD 00w01 CTEIF: CTEIF
0x580001C4 C   FIELD 01w01 CCTCIF: CCTCIF
0x580001C4 C   FIELD 02w01 CBRTIF: CBRTIF
0x580001C4 C   FIELD 03w01 CBTIF: CBTIF
0x580001C4 C   FIELD 04w01 CLTCIF: CLTCIF
0x580001C8 B  REGISTER MDMA_C6ESR (ro): MDMA channel 6 error status register
0x580001C8 C   FIELD 00w07 TEA: TEA
0x580001C8 C   FIELD 07w01 TED: TED
0x580001C8 C   FIELD 08w01 TELD: TELD
0x580001C8 C   FIELD 09w01 TEMD: TEMD
0x580001C8 C   FIELD 10w01 ASE: ASE
0x580001C8 C   FIELD 11w01 BSE: BSE
0x580001CC B  REGISTER MDMA_C6CR: This register is used to control the concerned channel.
0x580001CC C   FIELD 00w01 EN (rw): EN
0x580001CC C   FIELD 01w01 TEIE (rw): TEIE
0x580001CC C   FIELD 02w01 CTCIE (rw): CTCIE
0x580001CC C   FIELD 03w01 BRTIE (rw): BRTIE
0x580001CC C   FIELD 04w01 BTIE (rw): BTIE
0x580001CC C   FIELD 05w01 TCIE (rw): TCIE
0x580001CC C   FIELD 06w02 PL (rw): PL
0x580001CC C   FIELD 12w01 BEX (rw): BEX
0x580001CC C   FIELD 13w01 HEX (rw): HEX
0x580001CC C   FIELD 14w01 WEX (rw): WEX
0x580001CC C   FIELD 16w01 SWRQ (wo): SWRQ
0x580001D0 B  REGISTER MDMA_C6TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x580001D0 C   FIELD 00w02 SINC: SINC
0x580001D0 C   FIELD 02w02 DINC: DINC
0x580001D0 C   FIELD 04w02 SSIZE: SSIZE
0x580001D0 C   FIELD 06w02 DSIZE: DSIZE
0x580001D0 C   FIELD 08w02 SINCOS: SINCOS
0x580001D0 C   FIELD 10w02 DINCOS: DINCOS
0x580001D0 C   FIELD 12w03 SBURST: SBURST
0x580001D0 C   FIELD 15w03 DBURST: DBURST
0x580001D0 C   FIELD 18w07 TLEN: TLEN
0x580001D0 C   FIELD 25w01 PKE: PKE
0x580001D0 C   FIELD 26w02 PAM: PAM
0x580001D0 C   FIELD 28w02 TRGM: TRGM
0x580001D0 C   FIELD 30w01 SWRM: SWRM
0x580001D0 C   FIELD 31w01 BWM: BWM
0x580001D4 B  REGISTER MDMA_C6BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x580001D4 C   FIELD 00w17 BNDT: BNDT
0x580001D4 C   FIELD 18w01 BRSUM: BRSUM
0x580001D4 C   FIELD 19w01 BRDUM: BRDUM
0x580001D4 C   FIELD 20w12 BRC: BRC
0x580001D8 B  REGISTER MDMA_C6SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x580001D8 C   FIELD 00w32 SAR: SAR
0x580001DC B  REGISTER MDMA_C6DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x580001DC C   FIELD 00w32 DAR: DAR
0x580001E0 B  REGISTER MDMA_C6BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580001E0 C   FIELD 00w16 SUV: SUV
0x580001E0 C   FIELD 16w16 DUV: DUV
0x580001E4 B  REGISTER MDMA_C6LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580001E4 C   FIELD 00w32 LAR: LAR
0x580001E8 B  REGISTER MDMA_C6TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580001E8 C   FIELD 00w06 TSEL: TSEL
0x580001E8 C   FIELD 16w01 SBUS: SBUS
0x580001E8 C   FIELD 17w01 DBUS: DBUS
0x580001F0 B  REGISTER MDMA_C6MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580001F0 C   FIELD 00w32 MAR: MAR
0x580001F4 B  REGISTER MDMA_C6MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580001F4 C   FIELD 00w32 MDR: MDR
0x58000200 B  REGISTER MDMA_C7ISR (ro): MDMA channel 7 interrupt/status register
0x58000200 C   FIELD 00w01 TEIF: TEIF
0x58000200 C   FIELD 01w01 CTCIF: CTCIF
0x58000200 C   FIELD 02w01 BRTIF: BRTIF
0x58000200 C   FIELD 03w01 BTIF: BTIF
0x58000200 C   FIELD 04w01 TCIF: TCIF
0x58000200 C   FIELD 16w01 CRQA: CRQA
0x58000204 B  REGISTER MDMA_C7IFCR (wo): MDMA channel 7 interrupt flag clear register
0x58000204 C   FIELD 00w01 CTEIF: CTEIF
0x58000204 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000204 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000204 C   FIELD 03w01 CBTIF: CBTIF
0x58000204 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000208 B  REGISTER MDMA_C7ESR (ro): MDMA channel 7 error status register
0x58000208 C   FIELD 00w07 TEA: TEA
0x58000208 C   FIELD 07w01 TED: TED
0x58000208 C   FIELD 08w01 TELD: TELD
0x58000208 C   FIELD 09w01 TEMD: TEMD
0x58000208 C   FIELD 10w01 ASE: ASE
0x58000208 C   FIELD 11w01 BSE: BSE
0x5800020C B  REGISTER MDMA_C7CR: This register is used to control the concerned channel.
0x5800020C C   FIELD 00w01 EN (rw): EN
0x5800020C C   FIELD 01w01 TEIE (rw): TEIE
0x5800020C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800020C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800020C C   FIELD 04w01 BTIE (rw): BTIE
0x5800020C C   FIELD 05w01 TCIE (rw): TCIE
0x5800020C C   FIELD 06w02 PL (rw): PL
0x5800020C C   FIELD 12w01 BEX (rw): BEX
0x5800020C C   FIELD 13w01 HEX (rw): HEX
0x5800020C C   FIELD 14w01 WEX (rw): WEX
0x5800020C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000210 B  REGISTER MDMA_C7TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000210 C   FIELD 00w02 SINC: SINC
0x58000210 C   FIELD 02w02 DINC: DINC
0x58000210 C   FIELD 04w02 SSIZE: SSIZE
0x58000210 C   FIELD 06w02 DSIZE: DSIZE
0x58000210 C   FIELD 08w02 SINCOS: SINCOS
0x58000210 C   FIELD 10w02 DINCOS: DINCOS
0x58000210 C   FIELD 12w03 SBURST: SBURST
0x58000210 C   FIELD 15w03 DBURST: DBURST
0x58000210 C   FIELD 18w07 TLEN: TLEN
0x58000210 C   FIELD 25w01 PKE: PKE
0x58000210 C   FIELD 26w02 PAM: PAM
0x58000210 C   FIELD 28w02 TRGM: TRGM
0x58000210 C   FIELD 30w01 SWRM: SWRM
0x58000210 C   FIELD 31w01 BWM: BWM
0x58000214 B  REGISTER MDMA_C7BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000214 C   FIELD 00w17 BNDT: BNDT
0x58000214 C   FIELD 18w01 BRSUM: BRSUM
0x58000214 C   FIELD 19w01 BRDUM: BRDUM
0x58000214 C   FIELD 20w12 BRC: BRC
0x58000218 B  REGISTER MDMA_C7SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000218 C   FIELD 00w32 SAR: SAR
0x5800021C B  REGISTER MDMA_C7DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800021C C   FIELD 00w32 DAR: DAR
0x58000220 B  REGISTER MDMA_C7BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000220 C   FIELD 00w16 SUV: SUV
0x58000220 C   FIELD 16w16 DUV: DUV
0x58000224 B  REGISTER MDMA_C7LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000224 C   FIELD 00w32 LAR: LAR
0x58000228 B  REGISTER MDMA_C7TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000228 C   FIELD 00w06 TSEL: TSEL
0x58000228 C   FIELD 16w01 SBUS: SBUS
0x58000228 C   FIELD 17w01 DBUS: DBUS
0x58000230 B  REGISTER MDMA_C7MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000230 C   FIELD 00w32 MAR: MAR
0x58000234 B  REGISTER MDMA_C7MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000234 C   FIELD 00w32 MDR: MDR
0x58000240 B  REGISTER MDMA_C8ISR (ro): MDMA channel 8 interrupt/status register
0x58000240 C   FIELD 00w01 TEIF: TEIF
0x58000240 C   FIELD 01w01 CTCIF: CTCIF
0x58000240 C   FIELD 02w01 BRTIF: BRTIF
0x58000240 C   FIELD 03w01 BTIF: BTIF
0x58000240 C   FIELD 04w01 TCIF: TCIF
0x58000240 C   FIELD 16w01 CRQA: CRQA
0x58000244 B  REGISTER MDMA_C8IFCR (wo): MDMA channel 8 interrupt flag clear register
0x58000244 C   FIELD 00w01 CTEIF: CTEIF
0x58000244 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000244 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000244 C   FIELD 03w01 CBTIF: CBTIF
0x58000244 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000248 B  REGISTER MDMA_C8ESR (ro): MDMA channel 8 error status register
0x58000248 C   FIELD 00w07 TEA: TEA
0x58000248 C   FIELD 07w01 TED: TED
0x58000248 C   FIELD 08w01 TELD: TELD
0x58000248 C   FIELD 09w01 TEMD: TEMD
0x58000248 C   FIELD 10w01 ASE: ASE
0x58000248 C   FIELD 11w01 BSE: BSE
0x5800024C B  REGISTER MDMA_C8CR: This register is used to control the concerned channel.
0x5800024C C   FIELD 00w01 EN (rw): EN
0x5800024C C   FIELD 01w01 TEIE (rw): TEIE
0x5800024C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800024C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800024C C   FIELD 04w01 BTIE (rw): BTIE
0x5800024C C   FIELD 05w01 TCIE (rw): TCIE
0x5800024C C   FIELD 06w02 PL (rw): PL
0x5800024C C   FIELD 12w01 BEX (rw): BEX
0x5800024C C   FIELD 13w01 HEX (rw): HEX
0x5800024C C   FIELD 14w01 WEX (rw): WEX
0x5800024C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000250 B  REGISTER MDMA_C8TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000250 C   FIELD 00w02 SINC: SINC
0x58000250 C   FIELD 02w02 DINC: DINC
0x58000250 C   FIELD 04w02 SSIZE: SSIZE
0x58000250 C   FIELD 06w02 DSIZE: DSIZE
0x58000250 C   FIELD 08w02 SINCOS: SINCOS
0x58000250 C   FIELD 10w02 DINCOS: DINCOS
0x58000250 C   FIELD 12w03 SBURST: SBURST
0x58000250 C   FIELD 15w03 DBURST: DBURST
0x58000250 C   FIELD 18w07 TLEN: TLEN
0x58000250 C   FIELD 25w01 PKE: PKE
0x58000250 C   FIELD 26w02 PAM: PAM
0x58000250 C   FIELD 28w02 TRGM: TRGM
0x58000250 C   FIELD 30w01 SWRM: SWRM
0x58000250 C   FIELD 31w01 BWM: BWM
0x58000254 B  REGISTER MDMA_C8BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000254 C   FIELD 00w17 BNDT: BNDT
0x58000254 C   FIELD 18w01 BRSUM: BRSUM
0x58000254 C   FIELD 19w01 BRDUM: BRDUM
0x58000254 C   FIELD 20w12 BRC: BRC
0x58000258 B  REGISTER MDMA_C8SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000258 C   FIELD 00w32 SAR: SAR
0x5800025C B  REGISTER MDMA_C8DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800025C C   FIELD 00w32 DAR: DAR
0x58000260 B  REGISTER MDMA_C8BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000260 C   FIELD 00w16 SUV: SUV
0x58000260 C   FIELD 16w16 DUV: DUV
0x58000264 B  REGISTER MDMA_C8LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000264 C   FIELD 00w32 LAR: LAR
0x58000268 B  REGISTER MDMA_C8TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000268 C   FIELD 00w06 TSEL: TSEL
0x58000268 C   FIELD 16w01 SBUS: SBUS
0x58000268 C   FIELD 17w01 DBUS: DBUS
0x58000270 B  REGISTER MDMA_C8MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000270 C   FIELD 00w32 MAR: MAR
0x58000274 B  REGISTER MDMA_C8MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000274 C   FIELD 00w32 MDR: MDR
0x58000280 B  REGISTER MDMA_C9ISR (ro): MDMA channel 9 interrupt/status register
0x58000280 C   FIELD 00w01 TEIF: TEIF
0x58000280 C   FIELD 01w01 CTCIF: CTCIF
0x58000280 C   FIELD 02w01 BRTIF: BRTIF
0x58000280 C   FIELD 03w01 BTIF: BTIF
0x58000280 C   FIELD 04w01 TCIF: TCIF
0x58000280 C   FIELD 16w01 CRQA: CRQA
0x58000284 B  REGISTER MDMA_C9IFCR (wo): MDMA channel 9 interrupt flag clear register
0x58000284 C   FIELD 00w01 CTEIF: CTEIF
0x58000284 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000284 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000284 C   FIELD 03w01 CBTIF: CBTIF
0x58000284 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000288 B  REGISTER MDMA_C9ESR (ro): MDMA channel 9 error status register
0x58000288 C   FIELD 00w07 TEA: TEA
0x58000288 C   FIELD 07w01 TED: TED
0x58000288 C   FIELD 08w01 TELD: TELD
0x58000288 C   FIELD 09w01 TEMD: TEMD
0x58000288 C   FIELD 10w01 ASE: ASE
0x58000288 C   FIELD 11w01 BSE: BSE
0x5800028C B  REGISTER MDMA_C9CR: This register is used to control the concerned channel.
0x5800028C C   FIELD 00w01 EN (rw): EN
0x5800028C C   FIELD 01w01 TEIE (rw): TEIE
0x5800028C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800028C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800028C C   FIELD 04w01 BTIE (rw): BTIE
0x5800028C C   FIELD 05w01 TCIE (rw): TCIE
0x5800028C C   FIELD 06w02 PL (rw): PL
0x5800028C C   FIELD 12w01 BEX (rw): BEX
0x5800028C C   FIELD 13w01 HEX (rw): HEX
0x5800028C C   FIELD 14w01 WEX (rw): WEX
0x5800028C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000290 B  REGISTER MDMA_C9TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000290 C   FIELD 00w02 SINC: SINC
0x58000290 C   FIELD 02w02 DINC: DINC
0x58000290 C   FIELD 04w02 SSIZE: SSIZE
0x58000290 C   FIELD 06w02 DSIZE: DSIZE
0x58000290 C   FIELD 08w02 SINCOS: SINCOS
0x58000290 C   FIELD 10w02 DINCOS: DINCOS
0x58000290 C   FIELD 12w03 SBURST: SBURST
0x58000290 C   FIELD 15w03 DBURST: DBURST
0x58000290 C   FIELD 18w07 TLEN: TLEN
0x58000290 C   FIELD 25w01 PKE: PKE
0x58000290 C   FIELD 26w02 PAM: PAM
0x58000290 C   FIELD 28w02 TRGM: TRGM
0x58000290 C   FIELD 30w01 SWRM: SWRM
0x58000290 C   FIELD 31w01 BWM: BWM
0x58000294 B  REGISTER MDMA_C9BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000294 C   FIELD 00w17 BNDT: BNDT
0x58000294 C   FIELD 18w01 BRSUM: BRSUM
0x58000294 C   FIELD 19w01 BRDUM: BRDUM
0x58000294 C   FIELD 20w12 BRC: BRC
0x58000298 B  REGISTER MDMA_C9SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000298 C   FIELD 00w32 SAR: SAR
0x5800029C B  REGISTER MDMA_C9DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800029C C   FIELD 00w32 DAR: DAR
0x580002A0 B  REGISTER MDMA_C9BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580002A0 C   FIELD 00w16 SUV: SUV
0x580002A0 C   FIELD 16w16 DUV: DUV
0x580002A4 B  REGISTER MDMA_C9LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580002A4 C   FIELD 00w32 LAR: LAR
0x580002A8 B  REGISTER MDMA_C9TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580002A8 C   FIELD 00w06 TSEL: TSEL
0x580002A8 C   FIELD 16w01 SBUS: SBUS
0x580002A8 C   FIELD 17w01 DBUS: DBUS
0x580002B0 B  REGISTER MDMA_C9MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580002B0 C   FIELD 00w32 MAR: MAR
0x580002B4 B  REGISTER MDMA_C9MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580002B4 C   FIELD 00w32 MDR: MDR
0x580002C0 B  REGISTER MDMA_C10ISR (ro): MDMA channel 10 interrupt/status register
0x580002C0 C   FIELD 00w01 TEIF: TEIF
0x580002C0 C   FIELD 01w01 CTCIF: CTCIF
0x580002C0 C   FIELD 02w01 BRTIF: BRTIF
0x580002C0 C   FIELD 03w01 BTIF: BTIF
0x580002C0 C   FIELD 04w01 TCIF: TCIF
0x580002C0 C   FIELD 16w01 CRQA: CRQA
0x580002C4 B  REGISTER MDMA_C10IFCR (wo): MDMA channel 10 interrupt flag clear register
0x580002C4 C   FIELD 00w01 CTEIF: CTEIF
0x580002C4 C   FIELD 01w01 CCTCIF: CCTCIF
0x580002C4 C   FIELD 02w01 CBRTIF: CBRTIF
0x580002C4 C   FIELD 03w01 CBTIF: CBTIF
0x580002C4 C   FIELD 04w01 CLTCIF: CLTCIF
0x580002C8 B  REGISTER MDMA_C10ESR (ro): MDMA channel 10 error status register
0x580002C8 C   FIELD 00w07 TEA: TEA
0x580002C8 C   FIELD 07w01 TED: TED
0x580002C8 C   FIELD 08w01 TELD: TELD
0x580002C8 C   FIELD 09w01 TEMD: TEMD
0x580002C8 C   FIELD 10w01 ASE: ASE
0x580002C8 C   FIELD 11w01 BSE: BSE
0x580002CC B  REGISTER MDMA_C10CR: This register is used to control the concerned channel.
0x580002CC C   FIELD 00w01 EN (rw): EN
0x580002CC C   FIELD 01w01 TEIE (rw): TEIE
0x580002CC C   FIELD 02w01 CTCIE (rw): CTCIE
0x580002CC C   FIELD 03w01 BRTIE (rw): BRTIE
0x580002CC C   FIELD 04w01 BTIE (rw): BTIE
0x580002CC C   FIELD 05w01 TCIE (rw): TCIE
0x580002CC C   FIELD 06w02 PL (rw): PL
0x580002CC C   FIELD 12w01 BEX (rw): BEX
0x580002CC C   FIELD 13w01 HEX (rw): HEX
0x580002CC C   FIELD 14w01 WEX (rw): WEX
0x580002CC C   FIELD 16w01 SWRQ (wo): SWRQ
0x580002D0 B  REGISTER MDMA_C10TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x580002D0 C   FIELD 00w02 SINC: SINC
0x580002D0 C   FIELD 02w02 DINC: DINC
0x580002D0 C   FIELD 04w02 SSIZE: SSIZE
0x580002D0 C   FIELD 06w02 DSIZE: DSIZE
0x580002D0 C   FIELD 08w02 SINCOS: SINCOS
0x580002D0 C   FIELD 10w02 DINCOS: DINCOS
0x580002D0 C   FIELD 12w03 SBURST: SBURST
0x580002D0 C   FIELD 15w03 DBURST: DBURST
0x580002D0 C   FIELD 18w07 TLEN: TLEN
0x580002D0 C   FIELD 25w01 PKE: PKE
0x580002D0 C   FIELD 26w02 PAM: PAM
0x580002D0 C   FIELD 28w02 TRGM: TRGM
0x580002D0 C   FIELD 30w01 SWRM: SWRM
0x580002D0 C   FIELD 31w01 BWM: BWM
0x580002D4 B  REGISTER MDMA_C10BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x580002D4 C   FIELD 00w17 BNDT: BNDT
0x580002D4 C   FIELD 18w01 BRSUM: BRSUM
0x580002D4 C   FIELD 19w01 BRDUM: BRDUM
0x580002D4 C   FIELD 20w12 BRC: BRC
0x580002D8 B  REGISTER MDMA_C10SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x580002D8 C   FIELD 00w32 SAR: SAR
0x580002DC B  REGISTER MDMA_C10DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x580002DC C   FIELD 00w32 DAR: DAR
0x580002E0 B  REGISTER MDMA_C10BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580002E0 C   FIELD 00w16 SUV: SUV
0x580002E0 C   FIELD 16w16 DUV: DUV
0x580002E4 B  REGISTER MDMA_C10LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580002E4 C   FIELD 00w32 LAR: LAR
0x580002E8 B  REGISTER MDMA_C10TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580002E8 C   FIELD 00w06 TSEL: TSEL
0x580002E8 C   FIELD 16w01 SBUS: SBUS
0x580002E8 C   FIELD 17w01 DBUS: DBUS
0x580002F0 B  REGISTER MDMA_C10MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580002F0 C   FIELD 00w32 MAR: MAR
0x580002F4 B  REGISTER MDMA_C10MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580002F4 C   FIELD 00w32 MDR: MDR
0x58000300 B  REGISTER MDMA_C11ISR (ro): MDMA channel 11 interrupt/status register
0x58000300 C   FIELD 00w01 TEIF: TEIF
0x58000300 C   FIELD 01w01 CTCIF: CTCIF
0x58000300 C   FIELD 02w01 BRTIF: BRTIF
0x58000300 C   FIELD 03w01 BTIF: BTIF
0x58000300 C   FIELD 04w01 TCIF: TCIF
0x58000300 C   FIELD 16w01 CRQA: CRQA
0x58000304 B  REGISTER MDMA_C11IFCR (wo): MDMA channel 11 interrupt flag clear register
0x58000304 C   FIELD 00w01 CTEIF: CTEIF
0x58000304 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000304 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000304 C   FIELD 03w01 CBTIF: CBTIF
0x58000304 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000308 B  REGISTER MDMA_C11ESR (ro): MDMA channel 11 error status register
0x58000308 C   FIELD 00w07 TEA: TEA
0x58000308 C   FIELD 07w01 TED: TED
0x58000308 C   FIELD 08w01 TELD: TELD
0x58000308 C   FIELD 09w01 TEMD: TEMD
0x58000308 C   FIELD 10w01 ASE: ASE
0x58000308 C   FIELD 11w01 BSE: BSE
0x5800030C B  REGISTER MDMA_C11CR: This register is used to control the concerned channel.
0x5800030C C   FIELD 00w01 EN (rw): EN
0x5800030C C   FIELD 01w01 TEIE (rw): TEIE
0x5800030C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800030C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800030C C   FIELD 04w01 BTIE (rw): BTIE
0x5800030C C   FIELD 05w01 TCIE (rw): TCIE
0x5800030C C   FIELD 06w02 PL (rw): PL
0x5800030C C   FIELD 12w01 BEX (rw): BEX
0x5800030C C   FIELD 13w01 HEX (rw): HEX
0x5800030C C   FIELD 14w01 WEX (rw): WEX
0x5800030C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000310 B  REGISTER MDMA_C11TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000310 C   FIELD 00w02 SINC: SINC
0x58000310 C   FIELD 02w02 DINC: DINC
0x58000310 C   FIELD 04w02 SSIZE: SSIZE
0x58000310 C   FIELD 06w02 DSIZE: DSIZE
0x58000310 C   FIELD 08w02 SINCOS: SINCOS
0x58000310 C   FIELD 10w02 DINCOS: DINCOS
0x58000310 C   FIELD 12w03 SBURST: SBURST
0x58000310 C   FIELD 15w03 DBURST: DBURST
0x58000310 C   FIELD 18w07 TLEN: TLEN
0x58000310 C   FIELD 25w01 PKE: PKE
0x58000310 C   FIELD 26w02 PAM: PAM
0x58000310 C   FIELD 28w02 TRGM: TRGM
0x58000310 C   FIELD 30w01 SWRM: SWRM
0x58000310 C   FIELD 31w01 BWM: BWM
0x58000314 B  REGISTER MDMA_C11BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000314 C   FIELD 00w17 BNDT: BNDT
0x58000314 C   FIELD 18w01 BRSUM: BRSUM
0x58000314 C   FIELD 19w01 BRDUM: BRDUM
0x58000314 C   FIELD 20w12 BRC: BRC
0x58000318 B  REGISTER MDMA_C11SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000318 C   FIELD 00w32 SAR: SAR
0x5800031C B  REGISTER MDMA_C11DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800031C C   FIELD 00w32 DAR: DAR
0x58000320 B  REGISTER MDMA_C11BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000320 C   FIELD 00w16 SUV: SUV
0x58000320 C   FIELD 16w16 DUV: DUV
0x58000324 B  REGISTER MDMA_C11LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000324 C   FIELD 00w32 LAR: LAR
0x58000328 B  REGISTER MDMA_C11TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000328 C   FIELD 00w06 TSEL: TSEL
0x58000328 C   FIELD 16w01 SBUS: SBUS
0x58000328 C   FIELD 17w01 DBUS: DBUS
0x58000330 B  REGISTER MDMA_C11MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000330 C   FIELD 00w32 MAR: MAR
0x58000334 B  REGISTER MDMA_C11MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000334 C   FIELD 00w32 MDR: MDR
0x58000340 B  REGISTER MDMA_C12ISR (ro): MDMA channel 12 interrupt/status register
0x58000340 C   FIELD 00w01 TEIF: TEIF
0x58000340 C   FIELD 01w01 CTCIF: CTCIF
0x58000340 C   FIELD 02w01 BRTIF: BRTIF
0x58000340 C   FIELD 03w01 BTIF: BTIF
0x58000340 C   FIELD 04w01 TCIF: TCIF
0x58000340 C   FIELD 16w01 CRQA: CRQA
0x58000344 B  REGISTER MDMA_C12IFCR (wo): MDMA channel 12 interrupt flag clear register
0x58000344 C   FIELD 00w01 CTEIF: CTEIF
0x58000344 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000344 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000344 C   FIELD 03w01 CBTIF: CBTIF
0x58000344 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000348 B  REGISTER MDMA_C12ESR (ro): MDMA channel 12 error status register
0x58000348 C   FIELD 00w07 TEA: TEA
0x58000348 C   FIELD 07w01 TED: TED
0x58000348 C   FIELD 08w01 TELD: TELD
0x58000348 C   FIELD 09w01 TEMD: TEMD
0x58000348 C   FIELD 10w01 ASE: ASE
0x58000348 C   FIELD 11w01 BSE: BSE
0x5800034C B  REGISTER MDMA_C12CR: This register is used to control the concerned channel.
0x5800034C C   FIELD 00w01 EN (rw): EN
0x5800034C C   FIELD 01w01 TEIE (rw): TEIE
0x5800034C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800034C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800034C C   FIELD 04w01 BTIE (rw): BTIE
0x5800034C C   FIELD 05w01 TCIE (rw): TCIE
0x5800034C C   FIELD 06w02 PL (rw): PL
0x5800034C C   FIELD 12w01 BEX (rw): BEX
0x5800034C C   FIELD 13w01 HEX (rw): HEX
0x5800034C C   FIELD 14w01 WEX (rw): WEX
0x5800034C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000350 B  REGISTER MDMA_C12TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000350 C   FIELD 00w02 SINC: SINC
0x58000350 C   FIELD 02w02 DINC: DINC
0x58000350 C   FIELD 04w02 SSIZE: SSIZE
0x58000350 C   FIELD 06w02 DSIZE: DSIZE
0x58000350 C   FIELD 08w02 SINCOS: SINCOS
0x58000350 C   FIELD 10w02 DINCOS: DINCOS
0x58000350 C   FIELD 12w03 SBURST: SBURST
0x58000350 C   FIELD 15w03 DBURST: DBURST
0x58000350 C   FIELD 18w07 TLEN: TLEN
0x58000350 C   FIELD 25w01 PKE: PKE
0x58000350 C   FIELD 26w02 PAM: PAM
0x58000350 C   FIELD 28w02 TRGM: TRGM
0x58000350 C   FIELD 30w01 SWRM: SWRM
0x58000350 C   FIELD 31w01 BWM: BWM
0x58000354 B  REGISTER MDMA_C12BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000354 C   FIELD 00w17 BNDT: BNDT
0x58000354 C   FIELD 18w01 BRSUM: BRSUM
0x58000354 C   FIELD 19w01 BRDUM: BRDUM
0x58000354 C   FIELD 20w12 BRC: BRC
0x58000358 B  REGISTER MDMA_C12SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000358 C   FIELD 00w32 SAR: SAR
0x5800035C B  REGISTER MDMA_C12DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800035C C   FIELD 00w32 DAR: DAR
0x58000360 B  REGISTER MDMA_C12BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000360 C   FIELD 00w16 SUV: SUV
0x58000360 C   FIELD 16w16 DUV: DUV
0x58000364 B  REGISTER MDMA_C12LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000364 C   FIELD 00w32 LAR: LAR
0x58000368 B  REGISTER MDMA_C12TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000368 C   FIELD 00w06 TSEL: TSEL
0x58000368 C   FIELD 16w01 SBUS: SBUS
0x58000368 C   FIELD 17w01 DBUS: DBUS
0x58000370 B  REGISTER MDMA_C12MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000370 C   FIELD 00w32 MAR: MAR
0x58000374 B  REGISTER MDMA_C12MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000374 C   FIELD 00w32 MDR: MDR
0x58000380 B  REGISTER MDMA_C13ISR (ro): MDMA channel 13 interrupt/status register
0x58000380 C   FIELD 00w01 TEIF: TEIF
0x58000380 C   FIELD 01w01 CTCIF: CTCIF
0x58000380 C   FIELD 02w01 BRTIF: BRTIF
0x58000380 C   FIELD 03w01 BTIF: BTIF
0x58000380 C   FIELD 04w01 TCIF: TCIF
0x58000380 C   FIELD 16w01 CRQA: CRQA
0x58000384 B  REGISTER MDMA_C13IFCR (wo): MDMA channel 13 interrupt flag clear register
0x58000384 C   FIELD 00w01 CTEIF: CTEIF
0x58000384 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000384 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000384 C   FIELD 03w01 CBTIF: CBTIF
0x58000384 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000388 B  REGISTER MDMA_C13ESR (ro): MDMA channel 13 error status register
0x58000388 C   FIELD 00w07 TEA: TEA
0x58000388 C   FIELD 07w01 TED: TED
0x58000388 C   FIELD 08w01 TELD: TELD
0x58000388 C   FIELD 09w01 TEMD: TEMD
0x58000388 C   FIELD 10w01 ASE: ASE
0x58000388 C   FIELD 11w01 BSE: BSE
0x5800038C B  REGISTER MDMA_C13CR: This register is used to control the concerned channel.
0x5800038C C   FIELD 00w01 EN (rw): EN
0x5800038C C   FIELD 01w01 TEIE (rw): TEIE
0x5800038C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800038C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800038C C   FIELD 04w01 BTIE (rw): BTIE
0x5800038C C   FIELD 05w01 TCIE (rw): TCIE
0x5800038C C   FIELD 06w02 PL (rw): PL
0x5800038C C   FIELD 12w01 BEX (rw): BEX
0x5800038C C   FIELD 13w01 HEX (rw): HEX
0x5800038C C   FIELD 14w01 WEX (rw): WEX
0x5800038C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000390 B  REGISTER MDMA_C13TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000390 C   FIELD 00w02 SINC: SINC
0x58000390 C   FIELD 02w02 DINC: DINC
0x58000390 C   FIELD 04w02 SSIZE: SSIZE
0x58000390 C   FIELD 06w02 DSIZE: DSIZE
0x58000390 C   FIELD 08w02 SINCOS: SINCOS
0x58000390 C   FIELD 10w02 DINCOS: DINCOS
0x58000390 C   FIELD 12w03 SBURST: SBURST
0x58000390 C   FIELD 15w03 DBURST: DBURST
0x58000390 C   FIELD 18w07 TLEN: TLEN
0x58000390 C   FIELD 25w01 PKE: PKE
0x58000390 C   FIELD 26w02 PAM: PAM
0x58000390 C   FIELD 28w02 TRGM: TRGM
0x58000390 C   FIELD 30w01 SWRM: SWRM
0x58000390 C   FIELD 31w01 BWM: BWM
0x58000394 B  REGISTER MDMA_C13BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000394 C   FIELD 00w17 BNDT: BNDT
0x58000394 C   FIELD 18w01 BRSUM: BRSUM
0x58000394 C   FIELD 19w01 BRDUM: BRDUM
0x58000394 C   FIELD 20w12 BRC: BRC
0x58000398 B  REGISTER MDMA_C13SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000398 C   FIELD 00w32 SAR: SAR
0x5800039C B  REGISTER MDMA_C13DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800039C C   FIELD 00w32 DAR: DAR
0x580003A0 B  REGISTER MDMA_C13BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580003A0 C   FIELD 00w16 SUV: SUV
0x580003A0 C   FIELD 16w16 DUV: DUV
0x580003A4 B  REGISTER MDMA_C13LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580003A4 C   FIELD 00w32 LAR: LAR
0x580003A8 B  REGISTER MDMA_C13TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580003A8 C   FIELD 00w06 TSEL: TSEL
0x580003A8 C   FIELD 16w01 SBUS: SBUS
0x580003A8 C   FIELD 17w01 DBUS: DBUS
0x580003B0 B  REGISTER MDMA_C13MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580003B0 C   FIELD 00w32 MAR: MAR
0x580003B4 B  REGISTER MDMA_C13MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580003B4 C   FIELD 00w32 MDR: MDR
0x580003C0 B  REGISTER MDMA_C14ISR (ro): MDMA channel 14 interrupt/status register
0x580003C0 C   FIELD 00w01 TEIF: TEIF
0x580003C0 C   FIELD 01w01 CTCIF: CTCIF
0x580003C0 C   FIELD 02w01 BRTIF: BRTIF
0x580003C0 C   FIELD 03w01 BTIF: BTIF
0x580003C0 C   FIELD 04w01 TCIF: TCIF
0x580003C0 C   FIELD 16w01 CRQA: CRQA
0x580003C4 B  REGISTER MDMA_C14IFCR (wo): MDMA channel 14 interrupt flag clear register
0x580003C4 C   FIELD 00w01 CTEIF: CTEIF
0x580003C4 C   FIELD 01w01 CCTCIF: CCTCIF
0x580003C4 C   FIELD 02w01 CBRTIF: CBRTIF
0x580003C4 C   FIELD 03w01 CBTIF: CBTIF
0x580003C4 C   FIELD 04w01 CLTCIF: CLTCIF
0x580003C8 B  REGISTER MDMA_C14ESR (ro): MDMA channel 14 error status register
0x580003C8 C   FIELD 00w07 TEA: TEA
0x580003C8 C   FIELD 07w01 TED: TED
0x580003C8 C   FIELD 08w01 TELD: TELD
0x580003C8 C   FIELD 09w01 TEMD: TEMD
0x580003C8 C   FIELD 10w01 ASE: ASE
0x580003C8 C   FIELD 11w01 BSE: BSE
0x580003CC B  REGISTER MDMA_C14CR: This register is used to control the concerned channel.
0x580003CC C   FIELD 00w01 EN (rw): EN
0x580003CC C   FIELD 01w01 TEIE (rw): TEIE
0x580003CC C   FIELD 02w01 CTCIE (rw): CTCIE
0x580003CC C   FIELD 03w01 BRTIE (rw): BRTIE
0x580003CC C   FIELD 04w01 BTIE (rw): BTIE
0x580003CC C   FIELD 05w01 TCIE (rw): TCIE
0x580003CC C   FIELD 06w02 PL (rw): PL
0x580003CC C   FIELD 12w01 BEX (rw): BEX
0x580003CC C   FIELD 13w01 HEX (rw): HEX
0x580003CC C   FIELD 14w01 WEX (rw): WEX
0x580003CC C   FIELD 16w01 SWRQ (wo): SWRQ
0x580003D0 B  REGISTER MDMA_C14TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x580003D0 C   FIELD 00w02 SINC: SINC
0x580003D0 C   FIELD 02w02 DINC: DINC
0x580003D0 C   FIELD 04w02 SSIZE: SSIZE
0x580003D0 C   FIELD 06w02 DSIZE: DSIZE
0x580003D0 C   FIELD 08w02 SINCOS: SINCOS
0x580003D0 C   FIELD 10w02 DINCOS: DINCOS
0x580003D0 C   FIELD 12w03 SBURST: SBURST
0x580003D0 C   FIELD 15w03 DBURST: DBURST
0x580003D0 C   FIELD 18w07 TLEN: TLEN
0x580003D0 C   FIELD 25w01 PKE: PKE
0x580003D0 C   FIELD 26w02 PAM: PAM
0x580003D0 C   FIELD 28w02 TRGM: TRGM
0x580003D0 C   FIELD 30w01 SWRM: SWRM
0x580003D0 C   FIELD 31w01 BWM: BWM
0x580003D4 B  REGISTER MDMA_C14BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x580003D4 C   FIELD 00w17 BNDT: BNDT
0x580003D4 C   FIELD 18w01 BRSUM: BRSUM
0x580003D4 C   FIELD 19w01 BRDUM: BRDUM
0x580003D4 C   FIELD 20w12 BRC: BRC
0x580003D8 B  REGISTER MDMA_C14SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x580003D8 C   FIELD 00w32 SAR: SAR
0x580003DC B  REGISTER MDMA_C14DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x580003DC C   FIELD 00w32 DAR: DAR
0x580003E0 B  REGISTER MDMA_C14BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580003E0 C   FIELD 00w16 SUV: SUV
0x580003E0 C   FIELD 16w16 DUV: DUV
0x580003E4 B  REGISTER MDMA_C14LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580003E4 C   FIELD 00w32 LAR: LAR
0x580003E8 B  REGISTER MDMA_C14TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580003E8 C   FIELD 00w06 TSEL: TSEL
0x580003E8 C   FIELD 16w01 SBUS: SBUS
0x580003E8 C   FIELD 17w01 DBUS: DBUS
0x580003F0 B  REGISTER MDMA_C14MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580003F0 C   FIELD 00w32 MAR: MAR
0x580003F4 B  REGISTER MDMA_C14MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580003F4 C   FIELD 00w32 MDR: MDR
0x58000400 B  REGISTER MDMA_C15ISR (ro): MDMA channel 15 interrupt/status register
0x58000400 C   FIELD 00w01 TEIF: TEIF
0x58000400 C   FIELD 01w01 CTCIF: CTCIF
0x58000400 C   FIELD 02w01 BRTIF: BRTIF
0x58000400 C   FIELD 03w01 BTIF: BTIF
0x58000400 C   FIELD 04w01 TCIF: TCIF
0x58000400 C   FIELD 16w01 CRQA: CRQA
0x58000404 B  REGISTER MDMA_C15IFCR (wo): MDMA channel 15 interrupt flag clear register
0x58000404 C   FIELD 00w01 CTEIF: CTEIF
0x58000404 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000404 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000404 C   FIELD 03w01 CBTIF: CBTIF
0x58000404 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000408 B  REGISTER MDMA_C15ESR (ro): MDMA channel 15 error status register
0x58000408 C   FIELD 00w07 TEA: TEA
0x58000408 C   FIELD 07w01 TED: TED
0x58000408 C   FIELD 08w01 TELD: TELD
0x58000408 C   FIELD 09w01 TEMD: TEMD
0x58000408 C   FIELD 10w01 ASE: ASE
0x58000408 C   FIELD 11w01 BSE: BSE
0x5800040C B  REGISTER MDMA_C15CR: This register is used to control the concerned channel.
0x5800040C C   FIELD 00w01 EN (rw): EN
0x5800040C C   FIELD 01w01 TEIE (rw): TEIE
0x5800040C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800040C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800040C C   FIELD 04w01 BTIE (rw): BTIE
0x5800040C C   FIELD 05w01 TCIE (rw): TCIE
0x5800040C C   FIELD 06w02 PL (rw): PL
0x5800040C C   FIELD 12w01 BEX (rw): BEX
0x5800040C C   FIELD 13w01 HEX (rw): HEX
0x5800040C C   FIELD 14w01 WEX (rw): WEX
0x5800040C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000410 B  REGISTER MDMA_C15TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000410 C   FIELD 00w02 SINC: SINC
0x58000410 C   FIELD 02w02 DINC: DINC
0x58000410 C   FIELD 04w02 SSIZE: SSIZE
0x58000410 C   FIELD 06w02 DSIZE: DSIZE
0x58000410 C   FIELD 08w02 SINCOS: SINCOS
0x58000410 C   FIELD 10w02 DINCOS: DINCOS
0x58000410 C   FIELD 12w03 SBURST: SBURST
0x58000410 C   FIELD 15w03 DBURST: DBURST
0x58000410 C   FIELD 18w07 TLEN: TLEN
0x58000410 C   FIELD 25w01 PKE: PKE
0x58000410 C   FIELD 26w02 PAM: PAM
0x58000410 C   FIELD 28w02 TRGM: TRGM
0x58000410 C   FIELD 30w01 SWRM: SWRM
0x58000410 C   FIELD 31w01 BWM: BWM
0x58000414 B  REGISTER MDMA_C15BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000414 C   FIELD 00w17 BNDT: BNDT
0x58000414 C   FIELD 18w01 BRSUM: BRSUM
0x58000414 C   FIELD 19w01 BRDUM: BRDUM
0x58000414 C   FIELD 20w12 BRC: BRC
0x58000418 B  REGISTER MDMA_C15SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000418 C   FIELD 00w32 SAR: SAR
0x5800041C B  REGISTER MDMA_C15DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800041C C   FIELD 00w32 DAR: DAR
0x58000420 B  REGISTER MDMA_C15BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000420 C   FIELD 00w16 SUV: SUV
0x58000420 C   FIELD 16w16 DUV: DUV
0x58000424 B  REGISTER MDMA_C15LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000424 C   FIELD 00w32 LAR: LAR
0x58000428 B  REGISTER MDMA_C15TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000428 C   FIELD 00w06 TSEL: TSEL
0x58000428 C   FIELD 16w01 SBUS: SBUS
0x58000428 C   FIELD 17w01 DBUS: DBUS
0x58000430 B  REGISTER MDMA_C15MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000430 C   FIELD 00w32 MAR: MAR
0x58000434 B  REGISTER MDMA_C15MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000434 C   FIELD 00w32 MDR: MDR
0x58000440 B  REGISTER MDMA_C16ISR (ro): MDMA channel 16 interrupt/status register
0x58000440 C   FIELD 00w01 TEIF: TEIF
0x58000440 C   FIELD 01w01 CTCIF: CTCIF
0x58000440 C   FIELD 02w01 BRTIF: BRTIF
0x58000440 C   FIELD 03w01 BTIF: BTIF
0x58000440 C   FIELD 04w01 TCIF: TCIF
0x58000440 C   FIELD 16w01 CRQA: CRQA
0x58000444 B  REGISTER MDMA_C16IFCR (wo): MDMA channel 16 interrupt flag clear register
0x58000444 C   FIELD 00w01 CTEIF: CTEIF
0x58000444 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000444 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000444 C   FIELD 03w01 CBTIF: CBTIF
0x58000444 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000448 B  REGISTER MDMA_C16ESR (ro): MDMA channel 16 error status register
0x58000448 C   FIELD 00w07 TEA: TEA
0x58000448 C   FIELD 07w01 TED: TED
0x58000448 C   FIELD 08w01 TELD: TELD
0x58000448 C   FIELD 09w01 TEMD: TEMD
0x58000448 C   FIELD 10w01 ASE: ASE
0x58000448 C   FIELD 11w01 BSE: BSE
0x5800044C B  REGISTER MDMA_C16CR: This register is used to control the concerned channel.
0x5800044C C   FIELD 00w01 EN (rw): EN
0x5800044C C   FIELD 01w01 TEIE (rw): TEIE
0x5800044C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800044C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800044C C   FIELD 04w01 BTIE (rw): BTIE
0x5800044C C   FIELD 05w01 TCIE (rw): TCIE
0x5800044C C   FIELD 06w02 PL (rw): PL
0x5800044C C   FIELD 12w01 BEX (rw): BEX
0x5800044C C   FIELD 13w01 HEX (rw): HEX
0x5800044C C   FIELD 14w01 WEX (rw): WEX
0x5800044C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000450 B  REGISTER MDMA_C16TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000450 C   FIELD 00w02 SINC: SINC
0x58000450 C   FIELD 02w02 DINC: DINC
0x58000450 C   FIELD 04w02 SSIZE: SSIZE
0x58000450 C   FIELD 06w02 DSIZE: DSIZE
0x58000450 C   FIELD 08w02 SINCOS: SINCOS
0x58000450 C   FIELD 10w02 DINCOS: DINCOS
0x58000450 C   FIELD 12w03 SBURST: SBURST
0x58000450 C   FIELD 15w03 DBURST: DBURST
0x58000450 C   FIELD 18w07 TLEN: TLEN
0x58000450 C   FIELD 25w01 PKE: PKE
0x58000450 C   FIELD 26w02 PAM: PAM
0x58000450 C   FIELD 28w02 TRGM: TRGM
0x58000450 C   FIELD 30w01 SWRM: SWRM
0x58000450 C   FIELD 31w01 BWM: BWM
0x58000454 B  REGISTER MDMA_C16BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000454 C   FIELD 00w17 BNDT: BNDT
0x58000454 C   FIELD 18w01 BRSUM: BRSUM
0x58000454 C   FIELD 19w01 BRDUM: BRDUM
0x58000454 C   FIELD 20w12 BRC: BRC
0x58000458 B  REGISTER MDMA_C16SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000458 C   FIELD 00w32 SAR: SAR
0x5800045C B  REGISTER MDMA_C16DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800045C C   FIELD 00w32 DAR: DAR
0x58000460 B  REGISTER MDMA_C16BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000460 C   FIELD 00w16 SUV: SUV
0x58000460 C   FIELD 16w16 DUV: DUV
0x58000464 B  REGISTER MDMA_C16LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000464 C   FIELD 00w32 LAR: LAR
0x58000468 B  REGISTER MDMA_C16TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000468 C   FIELD 00w06 TSEL: TSEL
0x58000468 C   FIELD 16w01 SBUS: SBUS
0x58000468 C   FIELD 17w01 DBUS: DBUS
0x58000470 B  REGISTER MDMA_C16MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000470 C   FIELD 00w32 MAR: MAR
0x58000474 B  REGISTER MDMA_C16MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000474 C   FIELD 00w32 MDR: MDR
0x58000480 B  REGISTER MDMA_C17ISR (ro): MDMA channel 17 interrupt/status register
0x58000480 C   FIELD 00w01 TEIF: TEIF
0x58000480 C   FIELD 01w01 CTCIF: CTCIF
0x58000480 C   FIELD 02w01 BRTIF: BRTIF
0x58000480 C   FIELD 03w01 BTIF: BTIF
0x58000480 C   FIELD 04w01 TCIF: TCIF
0x58000480 C   FIELD 16w01 CRQA: CRQA
0x58000484 B  REGISTER MDMA_C17IFCR (wo): MDMA channel 17 interrupt flag clear register
0x58000484 C   FIELD 00w01 CTEIF: CTEIF
0x58000484 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000484 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000484 C   FIELD 03w01 CBTIF: CBTIF
0x58000484 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000488 B  REGISTER MDMA_C17ESR (ro): MDMA channel 17 error status register
0x58000488 C   FIELD 00w07 TEA: TEA
0x58000488 C   FIELD 07w01 TED: TED
0x58000488 C   FIELD 08w01 TELD: TELD
0x58000488 C   FIELD 09w01 TEMD: TEMD
0x58000488 C   FIELD 10w01 ASE: ASE
0x58000488 C   FIELD 11w01 BSE: BSE
0x5800048C B  REGISTER MDMA_C17CR: This register is used to control the concerned channel.
0x5800048C C   FIELD 00w01 EN (rw): EN
0x5800048C C   FIELD 01w01 TEIE (rw): TEIE
0x5800048C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800048C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800048C C   FIELD 04w01 BTIE (rw): BTIE
0x5800048C C   FIELD 05w01 TCIE (rw): TCIE
0x5800048C C   FIELD 06w02 PL (rw): PL
0x5800048C C   FIELD 12w01 BEX (rw): BEX
0x5800048C C   FIELD 13w01 HEX (rw): HEX
0x5800048C C   FIELD 14w01 WEX (rw): WEX
0x5800048C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000490 B  REGISTER MDMA_C17TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000490 C   FIELD 00w02 SINC: SINC
0x58000490 C   FIELD 02w02 DINC: DINC
0x58000490 C   FIELD 04w02 SSIZE: SSIZE
0x58000490 C   FIELD 06w02 DSIZE: DSIZE
0x58000490 C   FIELD 08w02 SINCOS: SINCOS
0x58000490 C   FIELD 10w02 DINCOS: DINCOS
0x58000490 C   FIELD 12w03 SBURST: SBURST
0x58000490 C   FIELD 15w03 DBURST: DBURST
0x58000490 C   FIELD 18w07 TLEN: TLEN
0x58000490 C   FIELD 25w01 PKE: PKE
0x58000490 C   FIELD 26w02 PAM: PAM
0x58000490 C   FIELD 28w02 TRGM: TRGM
0x58000490 C   FIELD 30w01 SWRM: SWRM
0x58000490 C   FIELD 31w01 BWM: BWM
0x58000494 B  REGISTER MDMA_C17BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000494 C   FIELD 00w17 BNDT: BNDT
0x58000494 C   FIELD 18w01 BRSUM: BRSUM
0x58000494 C   FIELD 19w01 BRDUM: BRDUM
0x58000494 C   FIELD 20w12 BRC: BRC
0x58000498 B  REGISTER MDMA_C17SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000498 C   FIELD 00w32 SAR: SAR
0x5800049C B  REGISTER MDMA_C17DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800049C C   FIELD 00w32 DAR: DAR
0x580004A0 B  REGISTER MDMA_C17BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580004A0 C   FIELD 00w16 SUV: SUV
0x580004A0 C   FIELD 16w16 DUV: DUV
0x580004A4 B  REGISTER MDMA_C17LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580004A4 C   FIELD 00w32 LAR: LAR
0x580004A8 B  REGISTER MDMA_C17TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580004A8 C   FIELD 00w06 TSEL: TSEL
0x580004A8 C   FIELD 16w01 SBUS: SBUS
0x580004A8 C   FIELD 17w01 DBUS: DBUS
0x580004B0 B  REGISTER MDMA_C17MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580004B0 C   FIELD 00w32 MAR: MAR
0x580004B4 B  REGISTER MDMA_C17MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580004B4 C   FIELD 00w32 MDR: MDR
0x580004C0 B  REGISTER MDMA_C18ISR (ro): MDMA channel 18 interrupt/status register
0x580004C0 C   FIELD 00w01 TEIF: TEIF
0x580004C0 C   FIELD 01w01 CTCIF: CTCIF
0x580004C0 C   FIELD 02w01 BRTIF: BRTIF
0x580004C0 C   FIELD 03w01 BTIF: BTIF
0x580004C0 C   FIELD 04w01 TCIF: TCIF
0x580004C0 C   FIELD 16w01 CRQA: CRQA
0x580004C4 B  REGISTER MDMA_C18IFCR (wo): MDMA channel 18 interrupt flag clear register
0x580004C4 C   FIELD 00w01 CTEIF: CTEIF
0x580004C4 C   FIELD 01w01 CCTCIF: CCTCIF
0x580004C4 C   FIELD 02w01 CBRTIF: CBRTIF
0x580004C4 C   FIELD 03w01 CBTIF: CBTIF
0x580004C4 C   FIELD 04w01 CLTCIF: CLTCIF
0x580004C8 B  REGISTER MDMA_C18ESR (ro): MDMA channel 18 error status register
0x580004C8 C   FIELD 00w07 TEA: TEA
0x580004C8 C   FIELD 07w01 TED: TED
0x580004C8 C   FIELD 08w01 TELD: TELD
0x580004C8 C   FIELD 09w01 TEMD: TEMD
0x580004C8 C   FIELD 10w01 ASE: ASE
0x580004C8 C   FIELD 11w01 BSE: BSE
0x580004CC B  REGISTER MDMA_C18CR: This register is used to control the concerned channel.
0x580004CC C   FIELD 00w01 EN (rw): EN
0x580004CC C   FIELD 01w01 TEIE (rw): TEIE
0x580004CC C   FIELD 02w01 CTCIE (rw): CTCIE
0x580004CC C   FIELD 03w01 BRTIE (rw): BRTIE
0x580004CC C   FIELD 04w01 BTIE (rw): BTIE
0x580004CC C   FIELD 05w01 TCIE (rw): TCIE
0x580004CC C   FIELD 06w02 PL (rw): PL
0x580004CC C   FIELD 12w01 BEX (rw): BEX
0x580004CC C   FIELD 13w01 HEX (rw): HEX
0x580004CC C   FIELD 14w01 WEX (rw): WEX
0x580004CC C   FIELD 16w01 SWRQ (wo): SWRQ
0x580004D0 B  REGISTER MDMA_C18TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x580004D0 C   FIELD 00w02 SINC: SINC
0x580004D0 C   FIELD 02w02 DINC: DINC
0x580004D0 C   FIELD 04w02 SSIZE: SSIZE
0x580004D0 C   FIELD 06w02 DSIZE: DSIZE
0x580004D0 C   FIELD 08w02 SINCOS: SINCOS
0x580004D0 C   FIELD 10w02 DINCOS: DINCOS
0x580004D0 C   FIELD 12w03 SBURST: SBURST
0x580004D0 C   FIELD 15w03 DBURST: DBURST
0x580004D0 C   FIELD 18w07 TLEN: TLEN
0x580004D0 C   FIELD 25w01 PKE: PKE
0x580004D0 C   FIELD 26w02 PAM: PAM
0x580004D0 C   FIELD 28w02 TRGM: TRGM
0x580004D0 C   FIELD 30w01 SWRM: SWRM
0x580004D0 C   FIELD 31w01 BWM: BWM
0x580004D4 B  REGISTER MDMA_C18BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x580004D4 C   FIELD 00w17 BNDT: BNDT
0x580004D4 C   FIELD 18w01 BRSUM: BRSUM
0x580004D4 C   FIELD 19w01 BRDUM: BRDUM
0x580004D4 C   FIELD 20w12 BRC: BRC
0x580004D8 B  REGISTER MDMA_C18SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x580004D8 C   FIELD 00w32 SAR: SAR
0x580004DC B  REGISTER MDMA_C18DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x580004DC C   FIELD 00w32 DAR: DAR
0x580004E0 B  REGISTER MDMA_C18BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580004E0 C   FIELD 00w16 SUV: SUV
0x580004E0 C   FIELD 16w16 DUV: DUV
0x580004E4 B  REGISTER MDMA_C18LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580004E4 C   FIELD 00w32 LAR: LAR
0x580004E8 B  REGISTER MDMA_C18TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580004E8 C   FIELD 00w06 TSEL: TSEL
0x580004E8 C   FIELD 16w01 SBUS: SBUS
0x580004E8 C   FIELD 17w01 DBUS: DBUS
0x580004F0 B  REGISTER MDMA_C18MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580004F0 C   FIELD 00w32 MAR: MAR
0x580004F4 B  REGISTER MDMA_C18MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580004F4 C   FIELD 00w32 MDR: MDR
0x58000500 B  REGISTER MDMA_C19ISR (ro): MDMA channel 19 interrupt/status register
0x58000500 C   FIELD 00w01 TEIF: TEIF
0x58000500 C   FIELD 01w01 CTCIF: CTCIF
0x58000500 C   FIELD 02w01 BRTIF: BRTIF
0x58000500 C   FIELD 03w01 BTIF: BTIF
0x58000500 C   FIELD 04w01 TCIF: TCIF
0x58000500 C   FIELD 16w01 CRQA: CRQA
0x58000504 B  REGISTER MDMA_C19IFCR (wo): MDMA channel 19 interrupt flag clear register
0x58000504 C   FIELD 00w01 CTEIF: CTEIF
0x58000504 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000504 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000504 C   FIELD 03w01 CBTIF: CBTIF
0x58000504 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000508 B  REGISTER MDMA_C19ESR (ro): MDMA channel 19 error status register
0x58000508 C   FIELD 00w07 TEA: TEA
0x58000508 C   FIELD 07w01 TED: TED
0x58000508 C   FIELD 08w01 TELD: TELD
0x58000508 C   FIELD 09w01 TEMD: TEMD
0x58000508 C   FIELD 10w01 ASE: ASE
0x58000508 C   FIELD 11w01 BSE: BSE
0x5800050C B  REGISTER MDMA_C19CR: This register is used to control the concerned channel.
0x5800050C C   FIELD 00w01 EN (rw): EN
0x5800050C C   FIELD 01w01 TEIE (rw): TEIE
0x5800050C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800050C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800050C C   FIELD 04w01 BTIE (rw): BTIE
0x5800050C C   FIELD 05w01 TCIE (rw): TCIE
0x5800050C C   FIELD 06w02 PL (rw): PL
0x5800050C C   FIELD 12w01 BEX (rw): BEX
0x5800050C C   FIELD 13w01 HEX (rw): HEX
0x5800050C C   FIELD 14w01 WEX (rw): WEX
0x5800050C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000510 B  REGISTER MDMA_C19TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000510 C   FIELD 00w02 SINC: SINC
0x58000510 C   FIELD 02w02 DINC: DINC
0x58000510 C   FIELD 04w02 SSIZE: SSIZE
0x58000510 C   FIELD 06w02 DSIZE: DSIZE
0x58000510 C   FIELD 08w02 SINCOS: SINCOS
0x58000510 C   FIELD 10w02 DINCOS: DINCOS
0x58000510 C   FIELD 12w03 SBURST: SBURST
0x58000510 C   FIELD 15w03 DBURST: DBURST
0x58000510 C   FIELD 18w07 TLEN: TLEN
0x58000510 C   FIELD 25w01 PKE: PKE
0x58000510 C   FIELD 26w02 PAM: PAM
0x58000510 C   FIELD 28w02 TRGM: TRGM
0x58000510 C   FIELD 30w01 SWRM: SWRM
0x58000510 C   FIELD 31w01 BWM: BWM
0x58000514 B  REGISTER MDMA_C19BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000514 C   FIELD 00w17 BNDT: BNDT
0x58000514 C   FIELD 18w01 BRSUM: BRSUM
0x58000514 C   FIELD 19w01 BRDUM: BRDUM
0x58000514 C   FIELD 20w12 BRC: BRC
0x58000518 B  REGISTER MDMA_C19SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000518 C   FIELD 00w32 SAR: SAR
0x5800051C B  REGISTER MDMA_C19DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800051C C   FIELD 00w32 DAR: DAR
0x58000520 B  REGISTER MDMA_C19BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000520 C   FIELD 00w16 SUV: SUV
0x58000520 C   FIELD 16w16 DUV: DUV
0x58000524 B  REGISTER MDMA_C19LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000524 C   FIELD 00w32 LAR: LAR
0x58000528 B  REGISTER MDMA_C19TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000528 C   FIELD 00w06 TSEL: TSEL
0x58000528 C   FIELD 16w01 SBUS: SBUS
0x58000528 C   FIELD 17w01 DBUS: DBUS
0x58000530 B  REGISTER MDMA_C19MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000530 C   FIELD 00w32 MAR: MAR
0x58000534 B  REGISTER MDMA_C19MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000534 C   FIELD 00w32 MDR: MDR
0x58000540 B  REGISTER MDMA_C20ISR (ro): MDMA channel 20 interrupt/status register
0x58000540 C   FIELD 00w01 TEIF: TEIF
0x58000540 C   FIELD 01w01 CTCIF: CTCIF
0x58000540 C   FIELD 02w01 BRTIF: BRTIF
0x58000540 C   FIELD 03w01 BTIF: BTIF
0x58000540 C   FIELD 04w01 TCIF: TCIF
0x58000540 C   FIELD 16w01 CRQA: CRQA
0x58000544 B  REGISTER MDMA_C20IFCR (wo): MDMA channel 20 interrupt flag clear register
0x58000544 C   FIELD 00w01 CTEIF: CTEIF
0x58000544 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000544 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000544 C   FIELD 03w01 CBTIF: CBTIF
0x58000544 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000548 B  REGISTER MDMA_C20ESR (ro): MDMA channel 20 error status register
0x58000548 C   FIELD 00w07 TEA: TEA
0x58000548 C   FIELD 07w01 TED: TED
0x58000548 C   FIELD 08w01 TELD: TELD
0x58000548 C   FIELD 09w01 TEMD: TEMD
0x58000548 C   FIELD 10w01 ASE: ASE
0x58000548 C   FIELD 11w01 BSE: BSE
0x5800054C B  REGISTER MDMA_C20CR: This register is used to control the concerned channel.
0x5800054C C   FIELD 00w01 EN (rw): EN
0x5800054C C   FIELD 01w01 TEIE (rw): TEIE
0x5800054C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800054C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800054C C   FIELD 04w01 BTIE (rw): BTIE
0x5800054C C   FIELD 05w01 TCIE (rw): TCIE
0x5800054C C   FIELD 06w02 PL (rw): PL
0x5800054C C   FIELD 12w01 BEX (rw): BEX
0x5800054C C   FIELD 13w01 HEX (rw): HEX
0x5800054C C   FIELD 14w01 WEX (rw): WEX
0x5800054C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000550 B  REGISTER MDMA_C20TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000550 C   FIELD 00w02 SINC: SINC
0x58000550 C   FIELD 02w02 DINC: DINC
0x58000550 C   FIELD 04w02 SSIZE: SSIZE
0x58000550 C   FIELD 06w02 DSIZE: DSIZE
0x58000550 C   FIELD 08w02 SINCOS: SINCOS
0x58000550 C   FIELD 10w02 DINCOS: DINCOS
0x58000550 C   FIELD 12w03 SBURST: SBURST
0x58000550 C   FIELD 15w03 DBURST: DBURST
0x58000550 C   FIELD 18w07 TLEN: TLEN
0x58000550 C   FIELD 25w01 PKE: PKE
0x58000550 C   FIELD 26w02 PAM: PAM
0x58000550 C   FIELD 28w02 TRGM: TRGM
0x58000550 C   FIELD 30w01 SWRM: SWRM
0x58000550 C   FIELD 31w01 BWM: BWM
0x58000554 B  REGISTER MDMA_C20BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000554 C   FIELD 00w17 BNDT: BNDT
0x58000554 C   FIELD 18w01 BRSUM: BRSUM
0x58000554 C   FIELD 19w01 BRDUM: BRDUM
0x58000554 C   FIELD 20w12 BRC: BRC
0x58000558 B  REGISTER MDMA_C20SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000558 C   FIELD 00w32 SAR: SAR
0x5800055C B  REGISTER MDMA_C20DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800055C C   FIELD 00w32 DAR: DAR
0x58000560 B  REGISTER MDMA_C20BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000560 C   FIELD 00w16 SUV: SUV
0x58000560 C   FIELD 16w16 DUV: DUV
0x58000564 B  REGISTER MDMA_C20LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000564 C   FIELD 00w32 LAR: LAR
0x58000568 B  REGISTER MDMA_C20TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000568 C   FIELD 00w06 TSEL: TSEL
0x58000568 C   FIELD 16w01 SBUS: SBUS
0x58000568 C   FIELD 17w01 DBUS: DBUS
0x58000570 B  REGISTER MDMA_C20MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000570 C   FIELD 00w32 MAR: MAR
0x58000574 B  REGISTER MDMA_C20MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000574 C   FIELD 00w32 MDR: MDR
0x58000580 B  REGISTER MDMA_C21ISR (ro): MDMA channel 21 interrupt/status register
0x58000580 C   FIELD 00w01 TEIF: TEIF
0x58000580 C   FIELD 01w01 CTCIF: CTCIF
0x58000580 C   FIELD 02w01 BRTIF: BRTIF
0x58000580 C   FIELD 03w01 BTIF: BTIF
0x58000580 C   FIELD 04w01 TCIF: TCIF
0x58000580 C   FIELD 16w01 CRQA: CRQA
0x58000584 B  REGISTER MDMA_C21IFCR (wo): MDMA channel 21 interrupt flag clear register
0x58000584 C   FIELD 00w01 CTEIF: CTEIF
0x58000584 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000584 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000584 C   FIELD 03w01 CBTIF: CBTIF
0x58000584 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000588 B  REGISTER MDMA_C21ESR (ro): MDMA channel 21 error status register
0x58000588 C   FIELD 00w07 TEA: TEA
0x58000588 C   FIELD 07w01 TED: TED
0x58000588 C   FIELD 08w01 TELD: TELD
0x58000588 C   FIELD 09w01 TEMD: TEMD
0x58000588 C   FIELD 10w01 ASE: ASE
0x58000588 C   FIELD 11w01 BSE: BSE
0x5800058C B  REGISTER MDMA_C21CR: This register is used to control the concerned channel.
0x5800058C C   FIELD 00w01 EN (rw): EN
0x5800058C C   FIELD 01w01 TEIE (rw): TEIE
0x5800058C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800058C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800058C C   FIELD 04w01 BTIE (rw): BTIE
0x5800058C C   FIELD 05w01 TCIE (rw): TCIE
0x5800058C C   FIELD 06w02 PL (rw): PL
0x5800058C C   FIELD 12w01 BEX (rw): BEX
0x5800058C C   FIELD 13w01 HEX (rw): HEX
0x5800058C C   FIELD 14w01 WEX (rw): WEX
0x5800058C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000590 B  REGISTER MDMA_C21TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000590 C   FIELD 00w02 SINC: SINC
0x58000590 C   FIELD 02w02 DINC: DINC
0x58000590 C   FIELD 04w02 SSIZE: SSIZE
0x58000590 C   FIELD 06w02 DSIZE: DSIZE
0x58000590 C   FIELD 08w02 SINCOS: SINCOS
0x58000590 C   FIELD 10w02 DINCOS: DINCOS
0x58000590 C   FIELD 12w03 SBURST: SBURST
0x58000590 C   FIELD 15w03 DBURST: DBURST
0x58000590 C   FIELD 18w07 TLEN: TLEN
0x58000590 C   FIELD 25w01 PKE: PKE
0x58000590 C   FIELD 26w02 PAM: PAM
0x58000590 C   FIELD 28w02 TRGM: TRGM
0x58000590 C   FIELD 30w01 SWRM: SWRM
0x58000590 C   FIELD 31w01 BWM: BWM
0x58000594 B  REGISTER MDMA_C21BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000594 C   FIELD 00w17 BNDT: BNDT
0x58000594 C   FIELD 18w01 BRSUM: BRSUM
0x58000594 C   FIELD 19w01 BRDUM: BRDUM
0x58000594 C   FIELD 20w12 BRC: BRC
0x58000598 B  REGISTER MDMA_C21SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000598 C   FIELD 00w32 SAR: SAR
0x5800059C B  REGISTER MDMA_C21DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800059C C   FIELD 00w32 DAR: DAR
0x580005A0 B  REGISTER MDMA_C21BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580005A0 C   FIELD 00w16 SUV: SUV
0x580005A0 C   FIELD 16w16 DUV: DUV
0x580005A4 B  REGISTER MDMA_C21LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580005A4 C   FIELD 00w32 LAR: LAR
0x580005A8 B  REGISTER MDMA_C21TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580005A8 C   FIELD 00w06 TSEL: TSEL
0x580005A8 C   FIELD 16w01 SBUS: SBUS
0x580005A8 C   FIELD 17w01 DBUS: DBUS
0x580005B0 B  REGISTER MDMA_C21MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580005B0 C   FIELD 00w32 MAR: MAR
0x580005B4 B  REGISTER MDMA_C21MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580005B4 C   FIELD 00w32 MDR: MDR
0x580005C0 B  REGISTER MDMA_C22ISR (ro): MDMA channel 22 interrupt/status register
0x580005C0 C   FIELD 00w01 TEIF: TEIF
0x580005C0 C   FIELD 01w01 CTCIF: CTCIF
0x580005C0 C   FIELD 02w01 BRTIF: BRTIF
0x580005C0 C   FIELD 03w01 BTIF: BTIF
0x580005C0 C   FIELD 04w01 TCIF: TCIF
0x580005C0 C   FIELD 16w01 CRQA: CRQA
0x580005C4 B  REGISTER MDMA_C22IFCR (wo): MDMA channel 22 interrupt flag clear register
0x580005C4 C   FIELD 00w01 CTEIF: CTEIF
0x580005C4 C   FIELD 01w01 CCTCIF: CCTCIF
0x580005C4 C   FIELD 02w01 CBRTIF: CBRTIF
0x580005C4 C   FIELD 03w01 CBTIF: CBTIF
0x580005C4 C   FIELD 04w01 CLTCIF: CLTCIF
0x580005C8 B  REGISTER MDMA_C22ESR (ro): MDMA channel 22 error status register
0x580005C8 C   FIELD 00w07 TEA: TEA
0x580005C8 C   FIELD 07w01 TED: TED
0x580005C8 C   FIELD 08w01 TELD: TELD
0x580005C8 C   FIELD 09w01 TEMD: TEMD
0x580005C8 C   FIELD 10w01 ASE: ASE
0x580005C8 C   FIELD 11w01 BSE: BSE
0x580005CC B  REGISTER MDMA_C22CR: This register is used to control the concerned channel.
0x580005CC C   FIELD 00w01 EN (rw): EN
0x580005CC C   FIELD 01w01 TEIE (rw): TEIE
0x580005CC C   FIELD 02w01 CTCIE (rw): CTCIE
0x580005CC C   FIELD 03w01 BRTIE (rw): BRTIE
0x580005CC C   FIELD 04w01 BTIE (rw): BTIE
0x580005CC C   FIELD 05w01 TCIE (rw): TCIE
0x580005CC C   FIELD 06w02 PL (rw): PL
0x580005CC C   FIELD 12w01 BEX (rw): BEX
0x580005CC C   FIELD 13w01 HEX (rw): HEX
0x580005CC C   FIELD 14w01 WEX (rw): WEX
0x580005CC C   FIELD 16w01 SWRQ (wo): SWRQ
0x580005D0 B  REGISTER MDMA_C22TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x580005D0 C   FIELD 00w02 SINC: SINC
0x580005D0 C   FIELD 02w02 DINC: DINC
0x580005D0 C   FIELD 04w02 SSIZE: SSIZE
0x580005D0 C   FIELD 06w02 DSIZE: DSIZE
0x580005D0 C   FIELD 08w02 SINCOS: SINCOS
0x580005D0 C   FIELD 10w02 DINCOS: DINCOS
0x580005D0 C   FIELD 12w03 SBURST: SBURST
0x580005D0 C   FIELD 15w03 DBURST: DBURST
0x580005D0 C   FIELD 18w07 TLEN: TLEN
0x580005D0 C   FIELD 25w01 PKE: PKE
0x580005D0 C   FIELD 26w02 PAM: PAM
0x580005D0 C   FIELD 28w02 TRGM: TRGM
0x580005D0 C   FIELD 30w01 SWRM: SWRM
0x580005D0 C   FIELD 31w01 BWM: BWM
0x580005D4 B  REGISTER MDMA_C22BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x580005D4 C   FIELD 00w17 BNDT: BNDT
0x580005D4 C   FIELD 18w01 BRSUM: BRSUM
0x580005D4 C   FIELD 19w01 BRDUM: BRDUM
0x580005D4 C   FIELD 20w12 BRC: BRC
0x580005D8 B  REGISTER MDMA_C22SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x580005D8 C   FIELD 00w32 SAR: SAR
0x580005DC B  REGISTER MDMA_C22DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x580005DC C   FIELD 00w32 DAR: DAR
0x580005E0 B  REGISTER MDMA_C22BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580005E0 C   FIELD 00w16 SUV: SUV
0x580005E0 C   FIELD 16w16 DUV: DUV
0x580005E4 B  REGISTER MDMA_C22LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580005E4 C   FIELD 00w32 LAR: LAR
0x580005E8 B  REGISTER MDMA_C22TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580005E8 C   FIELD 00w06 TSEL: TSEL
0x580005E8 C   FIELD 16w01 SBUS: SBUS
0x580005E8 C   FIELD 17w01 DBUS: DBUS
0x580005F0 B  REGISTER MDMA_C22MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580005F0 C   FIELD 00w32 MAR: MAR
0x580005F4 B  REGISTER MDMA_C22MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580005F4 C   FIELD 00w32 MDR: MDR
0x58000600 B  REGISTER MDMA_C23ISR (ro): MDMA channel 23 interrupt/status register
0x58000600 C   FIELD 00w01 TEIF: TEIF
0x58000600 C   FIELD 01w01 CTCIF: CTCIF
0x58000600 C   FIELD 02w01 BRTIF: BRTIF
0x58000600 C   FIELD 03w01 BTIF: BTIF
0x58000600 C   FIELD 04w01 TCIF: TCIF
0x58000600 C   FIELD 16w01 CRQA: CRQA
0x58000604 B  REGISTER MDMA_C23IFCR (wo): MDMA channel 23 interrupt flag clear register
0x58000604 C   FIELD 00w01 CTEIF: CTEIF
0x58000604 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000604 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000604 C   FIELD 03w01 CBTIF: CBTIF
0x58000604 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000608 B  REGISTER MDMA_C23ESR (ro): MDMA channel 23 error status register
0x58000608 C   FIELD 00w07 TEA: TEA
0x58000608 C   FIELD 07w01 TED: TED
0x58000608 C   FIELD 08w01 TELD: TELD
0x58000608 C   FIELD 09w01 TEMD: TEMD
0x58000608 C   FIELD 10w01 ASE: ASE
0x58000608 C   FIELD 11w01 BSE: BSE
0x5800060C B  REGISTER MDMA_C23CR: This register is used to control the concerned channel.
0x5800060C C   FIELD 00w01 EN (rw): EN
0x5800060C C   FIELD 01w01 TEIE (rw): TEIE
0x5800060C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800060C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800060C C   FIELD 04w01 BTIE (rw): BTIE
0x5800060C C   FIELD 05w01 TCIE (rw): TCIE
0x5800060C C   FIELD 06w02 PL (rw): PL
0x5800060C C   FIELD 12w01 BEX (rw): BEX
0x5800060C C   FIELD 13w01 HEX (rw): HEX
0x5800060C C   FIELD 14w01 WEX (rw): WEX
0x5800060C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000610 B  REGISTER MDMA_C23TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000610 C   FIELD 00w02 SINC: SINC
0x58000610 C   FIELD 02w02 DINC: DINC
0x58000610 C   FIELD 04w02 SSIZE: SSIZE
0x58000610 C   FIELD 06w02 DSIZE: DSIZE
0x58000610 C   FIELD 08w02 SINCOS: SINCOS
0x58000610 C   FIELD 10w02 DINCOS: DINCOS
0x58000610 C   FIELD 12w03 SBURST: SBURST
0x58000610 C   FIELD 15w03 DBURST: DBURST
0x58000610 C   FIELD 18w07 TLEN: TLEN
0x58000610 C   FIELD 25w01 PKE: PKE
0x58000610 C   FIELD 26w02 PAM: PAM
0x58000610 C   FIELD 28w02 TRGM: TRGM
0x58000610 C   FIELD 30w01 SWRM: SWRM
0x58000610 C   FIELD 31w01 BWM: BWM
0x58000614 B  REGISTER MDMA_C23BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000614 C   FIELD 00w17 BNDT: BNDT
0x58000614 C   FIELD 18w01 BRSUM: BRSUM
0x58000614 C   FIELD 19w01 BRDUM: BRDUM
0x58000614 C   FIELD 20w12 BRC: BRC
0x58000618 B  REGISTER MDMA_C23SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000618 C   FIELD 00w32 SAR: SAR
0x5800061C B  REGISTER MDMA_C23DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800061C C   FIELD 00w32 DAR: DAR
0x58000620 B  REGISTER MDMA_C23BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000620 C   FIELD 00w16 SUV: SUV
0x58000620 C   FIELD 16w16 DUV: DUV
0x58000624 B  REGISTER MDMA_C23LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000624 C   FIELD 00w32 LAR: LAR
0x58000628 B  REGISTER MDMA_C23TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000628 C   FIELD 00w06 TSEL: TSEL
0x58000628 C   FIELD 16w01 SBUS: SBUS
0x58000628 C   FIELD 17w01 DBUS: DBUS
0x58000630 B  REGISTER MDMA_C23MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000630 C   FIELD 00w32 MAR: MAR
0x58000634 B  REGISTER MDMA_C23MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000634 C   FIELD 00w32 MDR: MDR
0x58000640 B  REGISTER MDMA_C24ISR (ro): MDMA channel 24 interrupt/status register
0x58000640 C   FIELD 00w01 TEIF: TEIF
0x58000640 C   FIELD 01w01 CTCIF: CTCIF
0x58000640 C   FIELD 02w01 BRTIF: BRTIF
0x58000640 C   FIELD 03w01 BTIF: BTIF
0x58000640 C   FIELD 04w01 TCIF: TCIF
0x58000640 C   FIELD 16w01 CRQA: CRQA
0x58000644 B  REGISTER MDMA_C24IFCR (wo): MDMA channel 24 interrupt flag clear register
0x58000644 C   FIELD 00w01 CTEIF: CTEIF
0x58000644 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000644 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000644 C   FIELD 03w01 CBTIF: CBTIF
0x58000644 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000648 B  REGISTER MDMA_C24ESR (ro): MDMA channel 24 error status register
0x58000648 C   FIELD 00w07 TEA: TEA
0x58000648 C   FIELD 07w01 TED: TED
0x58000648 C   FIELD 08w01 TELD: TELD
0x58000648 C   FIELD 09w01 TEMD: TEMD
0x58000648 C   FIELD 10w01 ASE: ASE
0x58000648 C   FIELD 11w01 BSE: BSE
0x5800064C B  REGISTER MDMA_C24CR: This register is used to control the concerned channel.
0x5800064C C   FIELD 00w01 EN (rw): EN
0x5800064C C   FIELD 01w01 TEIE (rw): TEIE
0x5800064C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800064C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800064C C   FIELD 04w01 BTIE (rw): BTIE
0x5800064C C   FIELD 05w01 TCIE (rw): TCIE
0x5800064C C   FIELD 06w02 PL (rw): PL
0x5800064C C   FIELD 12w01 BEX (rw): BEX
0x5800064C C   FIELD 13w01 HEX (rw): HEX
0x5800064C C   FIELD 14w01 WEX (rw): WEX
0x5800064C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000650 B  REGISTER MDMA_C24TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000650 C   FIELD 00w02 SINC: SINC
0x58000650 C   FIELD 02w02 DINC: DINC
0x58000650 C   FIELD 04w02 SSIZE: SSIZE
0x58000650 C   FIELD 06w02 DSIZE: DSIZE
0x58000650 C   FIELD 08w02 SINCOS: SINCOS
0x58000650 C   FIELD 10w02 DINCOS: DINCOS
0x58000650 C   FIELD 12w03 SBURST: SBURST
0x58000650 C   FIELD 15w03 DBURST: DBURST
0x58000650 C   FIELD 18w07 TLEN: TLEN
0x58000650 C   FIELD 25w01 PKE: PKE
0x58000650 C   FIELD 26w02 PAM: PAM
0x58000650 C   FIELD 28w02 TRGM: TRGM
0x58000650 C   FIELD 30w01 SWRM: SWRM
0x58000650 C   FIELD 31w01 BWM: BWM
0x58000654 B  REGISTER MDMA_C24BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000654 C   FIELD 00w17 BNDT: BNDT
0x58000654 C   FIELD 18w01 BRSUM: BRSUM
0x58000654 C   FIELD 19w01 BRDUM: BRDUM
0x58000654 C   FIELD 20w12 BRC: BRC
0x58000658 B  REGISTER MDMA_C24SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000658 C   FIELD 00w32 SAR: SAR
0x5800065C B  REGISTER MDMA_C24DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800065C C   FIELD 00w32 DAR: DAR
0x58000660 B  REGISTER MDMA_C24BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000660 C   FIELD 00w16 SUV: SUV
0x58000660 C   FIELD 16w16 DUV: DUV
0x58000664 B  REGISTER MDMA_C24LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000664 C   FIELD 00w32 LAR: LAR
0x58000668 B  REGISTER MDMA_C24TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000668 C   FIELD 00w06 TSEL: TSEL
0x58000668 C   FIELD 16w01 SBUS: SBUS
0x58000668 C   FIELD 17w01 DBUS: DBUS
0x58000670 B  REGISTER MDMA_C24MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000670 C   FIELD 00w32 MAR: MAR
0x58000674 B  REGISTER MDMA_C24MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000674 C   FIELD 00w32 MDR: MDR
0x58000680 B  REGISTER MDMA_C25ISR (ro): MDMA channel 25 interrupt/status register
0x58000680 C   FIELD 00w01 TEIF: TEIF
0x58000680 C   FIELD 01w01 CTCIF: CTCIF
0x58000680 C   FIELD 02w01 BRTIF: BRTIF
0x58000680 C   FIELD 03w01 BTIF: BTIF
0x58000680 C   FIELD 04w01 TCIF: TCIF
0x58000680 C   FIELD 16w01 CRQA: CRQA
0x58000684 B  REGISTER MDMA_C25IFCR (wo): MDMA channel 25 interrupt flag clear register
0x58000684 C   FIELD 00w01 CTEIF: CTEIF
0x58000684 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000684 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000684 C   FIELD 03w01 CBTIF: CBTIF
0x58000684 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000688 B  REGISTER MDMA_C25ESR (ro): MDMA channel 25 error status register
0x58000688 C   FIELD 00w07 TEA: TEA
0x58000688 C   FIELD 07w01 TED: TED
0x58000688 C   FIELD 08w01 TELD: TELD
0x58000688 C   FIELD 09w01 TEMD: TEMD
0x58000688 C   FIELD 10w01 ASE: ASE
0x58000688 C   FIELD 11w01 BSE: BSE
0x5800068C B  REGISTER MDMA_C25CR: This register is used to control the concerned channel.
0x5800068C C   FIELD 00w01 EN (rw): EN
0x5800068C C   FIELD 01w01 TEIE (rw): TEIE
0x5800068C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800068C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800068C C   FIELD 04w01 BTIE (rw): BTIE
0x5800068C C   FIELD 05w01 TCIE (rw): TCIE
0x5800068C C   FIELD 06w02 PL (rw): PL
0x5800068C C   FIELD 12w01 BEX (rw): BEX
0x5800068C C   FIELD 13w01 HEX (rw): HEX
0x5800068C C   FIELD 14w01 WEX (rw): WEX
0x5800068C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000690 B  REGISTER MDMA_C25TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000690 C   FIELD 00w02 SINC: SINC
0x58000690 C   FIELD 02w02 DINC: DINC
0x58000690 C   FIELD 04w02 SSIZE: SSIZE
0x58000690 C   FIELD 06w02 DSIZE: DSIZE
0x58000690 C   FIELD 08w02 SINCOS: SINCOS
0x58000690 C   FIELD 10w02 DINCOS: DINCOS
0x58000690 C   FIELD 12w03 SBURST: SBURST
0x58000690 C   FIELD 15w03 DBURST: DBURST
0x58000690 C   FIELD 18w07 TLEN: TLEN
0x58000690 C   FIELD 25w01 PKE: PKE
0x58000690 C   FIELD 26w02 PAM: PAM
0x58000690 C   FIELD 28w02 TRGM: TRGM
0x58000690 C   FIELD 30w01 SWRM: SWRM
0x58000690 C   FIELD 31w01 BWM: BWM
0x58000694 B  REGISTER MDMA_C25BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000694 C   FIELD 00w17 BNDT: BNDT
0x58000694 C   FIELD 18w01 BRSUM: BRSUM
0x58000694 C   FIELD 19w01 BRDUM: BRDUM
0x58000694 C   FIELD 20w12 BRC: BRC
0x58000698 B  REGISTER MDMA_C25SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000698 C   FIELD 00w32 SAR: SAR
0x5800069C B  REGISTER MDMA_C25DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800069C C   FIELD 00w32 DAR: DAR
0x580006A0 B  REGISTER MDMA_C25BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580006A0 C   FIELD 00w16 SUV: SUV
0x580006A0 C   FIELD 16w16 DUV: DUV
0x580006A4 B  REGISTER MDMA_C25LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580006A4 C   FIELD 00w32 LAR: LAR
0x580006A8 B  REGISTER MDMA_C25TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580006A8 C   FIELD 00w06 TSEL: TSEL
0x580006A8 C   FIELD 16w01 SBUS: SBUS
0x580006A8 C   FIELD 17w01 DBUS: DBUS
0x580006B0 B  REGISTER MDMA_C25MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580006B0 C   FIELD 00w32 MAR: MAR
0x580006B4 B  REGISTER MDMA_C25MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580006B4 C   FIELD 00w32 MDR: MDR
0x580006C0 B  REGISTER MDMA_C26ISR (ro): MDMA channel 26 interrupt/status register
0x580006C0 C   FIELD 00w01 TEIF: TEIF
0x580006C0 C   FIELD 01w01 CTCIF: CTCIF
0x580006C0 C   FIELD 02w01 BRTIF: BRTIF
0x580006C0 C   FIELD 03w01 BTIF: BTIF
0x580006C0 C   FIELD 04w01 TCIF: TCIF
0x580006C0 C   FIELD 16w01 CRQA: CRQA
0x580006C4 B  REGISTER MDMA_C26IFCR (wo): MDMA channel 26 interrupt flag clear register
0x580006C4 C   FIELD 00w01 CTEIF: CTEIF
0x580006C4 C   FIELD 01w01 CCTCIF: CCTCIF
0x580006C4 C   FIELD 02w01 CBRTIF: CBRTIF
0x580006C4 C   FIELD 03w01 CBTIF: CBTIF
0x580006C4 C   FIELD 04w01 CLTCIF: CLTCIF
0x580006C8 B  REGISTER MDMA_C26ESR (ro): MDMA channel 26 error status register
0x580006C8 C   FIELD 00w07 TEA: TEA
0x580006C8 C   FIELD 07w01 TED: TED
0x580006C8 C   FIELD 08w01 TELD: TELD
0x580006C8 C   FIELD 09w01 TEMD: TEMD
0x580006C8 C   FIELD 10w01 ASE: ASE
0x580006C8 C   FIELD 11w01 BSE: BSE
0x580006CC B  REGISTER MDMA_C26CR: This register is used to control the concerned channel.
0x580006CC C   FIELD 00w01 EN (rw): EN
0x580006CC C   FIELD 01w01 TEIE (rw): TEIE
0x580006CC C   FIELD 02w01 CTCIE (rw): CTCIE
0x580006CC C   FIELD 03w01 BRTIE (rw): BRTIE
0x580006CC C   FIELD 04w01 BTIE (rw): BTIE
0x580006CC C   FIELD 05w01 TCIE (rw): TCIE
0x580006CC C   FIELD 06w02 PL (rw): PL
0x580006CC C   FIELD 12w01 BEX (rw): BEX
0x580006CC C   FIELD 13w01 HEX (rw): HEX
0x580006CC C   FIELD 14w01 WEX (rw): WEX
0x580006CC C   FIELD 16w01 SWRQ (wo): SWRQ
0x580006D0 B  REGISTER MDMA_C26TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x580006D0 C   FIELD 00w02 SINC: SINC
0x580006D0 C   FIELD 02w02 DINC: DINC
0x580006D0 C   FIELD 04w02 SSIZE: SSIZE
0x580006D0 C   FIELD 06w02 DSIZE: DSIZE
0x580006D0 C   FIELD 08w02 SINCOS: SINCOS
0x580006D0 C   FIELD 10w02 DINCOS: DINCOS
0x580006D0 C   FIELD 12w03 SBURST: SBURST
0x580006D0 C   FIELD 15w03 DBURST: DBURST
0x580006D0 C   FIELD 18w07 TLEN: TLEN
0x580006D0 C   FIELD 25w01 PKE: PKE
0x580006D0 C   FIELD 26w02 PAM: PAM
0x580006D0 C   FIELD 28w02 TRGM: TRGM
0x580006D0 C   FIELD 30w01 SWRM: SWRM
0x580006D0 C   FIELD 31w01 BWM: BWM
0x580006D4 B  REGISTER MDMA_C26BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x580006D4 C   FIELD 00w17 BNDT: BNDT
0x580006D4 C   FIELD 18w01 BRSUM: BRSUM
0x580006D4 C   FIELD 19w01 BRDUM: BRDUM
0x580006D4 C   FIELD 20w12 BRC: BRC
0x580006D8 B  REGISTER MDMA_C26SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x580006D8 C   FIELD 00w32 SAR: SAR
0x580006DC B  REGISTER MDMA_C26DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x580006DC C   FIELD 00w32 DAR: DAR
0x580006E0 B  REGISTER MDMA_C26BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580006E0 C   FIELD 00w16 SUV: SUV
0x580006E0 C   FIELD 16w16 DUV: DUV
0x580006E4 B  REGISTER MDMA_C26LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580006E4 C   FIELD 00w32 LAR: LAR
0x580006E8 B  REGISTER MDMA_C26TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580006E8 C   FIELD 00w06 TSEL: TSEL
0x580006E8 C   FIELD 16w01 SBUS: SBUS
0x580006E8 C   FIELD 17w01 DBUS: DBUS
0x580006F0 B  REGISTER MDMA_C26MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580006F0 C   FIELD 00w32 MAR: MAR
0x580006F4 B  REGISTER MDMA_C26MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580006F4 C   FIELD 00w32 MDR: MDR
0x58000700 B  REGISTER MDMA_C27ISR (ro): MDMA channel 27 interrupt/status register
0x58000700 C   FIELD 00w01 TEIF: TEIF
0x58000700 C   FIELD 01w01 CTCIF: CTCIF
0x58000700 C   FIELD 02w01 BRTIF: BRTIF
0x58000700 C   FIELD 03w01 BTIF: BTIF
0x58000700 C   FIELD 04w01 TCIF: TCIF
0x58000700 C   FIELD 16w01 CRQA: CRQA
0x58000704 B  REGISTER MDMA_C27IFCR (wo): MDMA channel 27 interrupt flag clear register
0x58000704 C   FIELD 00w01 CTEIF: CTEIF
0x58000704 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000704 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000704 C   FIELD 03w01 CBTIF: CBTIF
0x58000704 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000708 B  REGISTER MDMA_C27ESR (ro): MDMA channel 27 error status register
0x58000708 C   FIELD 00w07 TEA: TEA
0x58000708 C   FIELD 07w01 TED: TED
0x58000708 C   FIELD 08w01 TELD: TELD
0x58000708 C   FIELD 09w01 TEMD: TEMD
0x58000708 C   FIELD 10w01 ASE: ASE
0x58000708 C   FIELD 11w01 BSE: BSE
0x5800070C B  REGISTER MDMA_C27CR: This register is used to control the concerned channel.
0x5800070C C   FIELD 00w01 EN (rw): EN
0x5800070C C   FIELD 01w01 TEIE (rw): TEIE
0x5800070C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800070C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800070C C   FIELD 04w01 BTIE (rw): BTIE
0x5800070C C   FIELD 05w01 TCIE (rw): TCIE
0x5800070C C   FIELD 06w02 PL (rw): PL
0x5800070C C   FIELD 12w01 BEX (rw): BEX
0x5800070C C   FIELD 13w01 HEX (rw): HEX
0x5800070C C   FIELD 14w01 WEX (rw): WEX
0x5800070C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000710 B  REGISTER MDMA_C27TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000710 C   FIELD 00w02 SINC: SINC
0x58000710 C   FIELD 02w02 DINC: DINC
0x58000710 C   FIELD 04w02 SSIZE: SSIZE
0x58000710 C   FIELD 06w02 DSIZE: DSIZE
0x58000710 C   FIELD 08w02 SINCOS: SINCOS
0x58000710 C   FIELD 10w02 DINCOS: DINCOS
0x58000710 C   FIELD 12w03 SBURST: SBURST
0x58000710 C   FIELD 15w03 DBURST: DBURST
0x58000710 C   FIELD 18w07 TLEN: TLEN
0x58000710 C   FIELD 25w01 PKE: PKE
0x58000710 C   FIELD 26w02 PAM: PAM
0x58000710 C   FIELD 28w02 TRGM: TRGM
0x58000710 C   FIELD 30w01 SWRM: SWRM
0x58000710 C   FIELD 31w01 BWM: BWM
0x58000714 B  REGISTER MDMA_C27BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000714 C   FIELD 00w17 BNDT: BNDT
0x58000714 C   FIELD 18w01 BRSUM: BRSUM
0x58000714 C   FIELD 19w01 BRDUM: BRDUM
0x58000714 C   FIELD 20w12 BRC: BRC
0x58000718 B  REGISTER MDMA_C27SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000718 C   FIELD 00w32 SAR: SAR
0x5800071C B  REGISTER MDMA_C27DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800071C C   FIELD 00w32 DAR: DAR
0x58000720 B  REGISTER MDMA_C27BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000720 C   FIELD 00w16 SUV: SUV
0x58000720 C   FIELD 16w16 DUV: DUV
0x58000724 B  REGISTER MDMA_C27LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000724 C   FIELD 00w32 LAR: LAR
0x58000728 B  REGISTER MDMA_C27TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000728 C   FIELD 00w06 TSEL: TSEL
0x58000728 C   FIELD 16w01 SBUS: SBUS
0x58000728 C   FIELD 17w01 DBUS: DBUS
0x58000730 B  REGISTER MDMA_C27MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000730 C   FIELD 00w32 MAR: MAR
0x58000734 B  REGISTER MDMA_C27MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000734 C   FIELD 00w32 MDR: MDR
0x58000740 B  REGISTER MDMA_C28ISR (ro): MDMA channel 28 interrupt/status register
0x58000740 C   FIELD 00w01 TEIF: TEIF
0x58000740 C   FIELD 01w01 CTCIF: CTCIF
0x58000740 C   FIELD 02w01 BRTIF: BRTIF
0x58000740 C   FIELD 03w01 BTIF: BTIF
0x58000740 C   FIELD 04w01 TCIF: TCIF
0x58000740 C   FIELD 16w01 CRQA: CRQA
0x58000744 B  REGISTER MDMA_C28IFCR (wo): MDMA channel 28 interrupt flag clear register
0x58000744 C   FIELD 00w01 CTEIF: CTEIF
0x58000744 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000744 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000744 C   FIELD 03w01 CBTIF: CBTIF
0x58000744 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000748 B  REGISTER MDMA_C28ESR (ro): MDMA channel 28 error status register
0x58000748 C   FIELD 00w07 TEA: TEA
0x58000748 C   FIELD 07w01 TED: TED
0x58000748 C   FIELD 08w01 TELD: TELD
0x58000748 C   FIELD 09w01 TEMD: TEMD
0x58000748 C   FIELD 10w01 ASE: ASE
0x58000748 C   FIELD 11w01 BSE: BSE
0x5800074C B  REGISTER MDMA_C28CR: This register is used to control the concerned channel.
0x5800074C C   FIELD 00w01 EN (rw): EN
0x5800074C C   FIELD 01w01 TEIE (rw): TEIE
0x5800074C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800074C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800074C C   FIELD 04w01 BTIE (rw): BTIE
0x5800074C C   FIELD 05w01 TCIE (rw): TCIE
0x5800074C C   FIELD 06w02 PL (rw): PL
0x5800074C C   FIELD 12w01 BEX (rw): BEX
0x5800074C C   FIELD 13w01 HEX (rw): HEX
0x5800074C C   FIELD 14w01 WEX (rw): WEX
0x5800074C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000750 B  REGISTER MDMA_C28TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000750 C   FIELD 00w02 SINC: SINC
0x58000750 C   FIELD 02w02 DINC: DINC
0x58000750 C   FIELD 04w02 SSIZE: SSIZE
0x58000750 C   FIELD 06w02 DSIZE: DSIZE
0x58000750 C   FIELD 08w02 SINCOS: SINCOS
0x58000750 C   FIELD 10w02 DINCOS: DINCOS
0x58000750 C   FIELD 12w03 SBURST: SBURST
0x58000750 C   FIELD 15w03 DBURST: DBURST
0x58000750 C   FIELD 18w07 TLEN: TLEN
0x58000750 C   FIELD 25w01 PKE: PKE
0x58000750 C   FIELD 26w02 PAM: PAM
0x58000750 C   FIELD 28w02 TRGM: TRGM
0x58000750 C   FIELD 30w01 SWRM: SWRM
0x58000750 C   FIELD 31w01 BWM: BWM
0x58000754 B  REGISTER MDMA_C28BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000754 C   FIELD 00w17 BNDT: BNDT
0x58000754 C   FIELD 18w01 BRSUM: BRSUM
0x58000754 C   FIELD 19w01 BRDUM: BRDUM
0x58000754 C   FIELD 20w12 BRC: BRC
0x58000758 B  REGISTER MDMA_C28SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000758 C   FIELD 00w32 SAR: SAR
0x5800075C B  REGISTER MDMA_C28DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800075C C   FIELD 00w32 DAR: DAR
0x58000760 B  REGISTER MDMA_C28BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000760 C   FIELD 00w16 SUV: SUV
0x58000760 C   FIELD 16w16 DUV: DUV
0x58000764 B  REGISTER MDMA_C28LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000764 C   FIELD 00w32 LAR: LAR
0x58000768 B  REGISTER MDMA_C28TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000768 C   FIELD 00w06 TSEL: TSEL
0x58000768 C   FIELD 16w01 SBUS: SBUS
0x58000768 C   FIELD 17w01 DBUS: DBUS
0x58000770 B  REGISTER MDMA_C28MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000770 C   FIELD 00w32 MAR: MAR
0x58000774 B  REGISTER MDMA_C28MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000774 C   FIELD 00w32 MDR: MDR
0x58000780 B  REGISTER MDMA_C29ISR (ro): MDMA channel 29 interrupt/status register
0x58000780 C   FIELD 00w01 TEIF: TEIF
0x58000780 C   FIELD 01w01 CTCIF: CTCIF
0x58000780 C   FIELD 02w01 BRTIF: BRTIF
0x58000780 C   FIELD 03w01 BTIF: BTIF
0x58000780 C   FIELD 04w01 TCIF: TCIF
0x58000780 C   FIELD 16w01 CRQA: CRQA
0x58000784 B  REGISTER MDMA_C29IFCR (wo): MDMA channel 29 interrupt flag clear register
0x58000784 C   FIELD 00w01 CTEIF: CTEIF
0x58000784 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000784 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000784 C   FIELD 03w01 CBTIF: CBTIF
0x58000784 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000788 B  REGISTER MDMA_C29ESR (ro): MDMA channel 29 error status register
0x58000788 C   FIELD 00w07 TEA: TEA
0x58000788 C   FIELD 07w01 TED: TED
0x58000788 C   FIELD 08w01 TELD: TELD
0x58000788 C   FIELD 09w01 TEMD: TEMD
0x58000788 C   FIELD 10w01 ASE: ASE
0x58000788 C   FIELD 11w01 BSE: BSE
0x5800078C B  REGISTER MDMA_C29CR: This register is used to control the concerned channel.
0x5800078C C   FIELD 00w01 EN (rw): EN
0x5800078C C   FIELD 01w01 TEIE (rw): TEIE
0x5800078C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800078C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800078C C   FIELD 04w01 BTIE (rw): BTIE
0x5800078C C   FIELD 05w01 TCIE (rw): TCIE
0x5800078C C   FIELD 06w02 PL (rw): PL
0x5800078C C   FIELD 12w01 BEX (rw): BEX
0x5800078C C   FIELD 13w01 HEX (rw): HEX
0x5800078C C   FIELD 14w01 WEX (rw): WEX
0x5800078C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000790 B  REGISTER MDMA_C29TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000790 C   FIELD 00w02 SINC: SINC
0x58000790 C   FIELD 02w02 DINC: DINC
0x58000790 C   FIELD 04w02 SSIZE: SSIZE
0x58000790 C   FIELD 06w02 DSIZE: DSIZE
0x58000790 C   FIELD 08w02 SINCOS: SINCOS
0x58000790 C   FIELD 10w02 DINCOS: DINCOS
0x58000790 C   FIELD 12w03 SBURST: SBURST
0x58000790 C   FIELD 15w03 DBURST: DBURST
0x58000790 C   FIELD 18w07 TLEN: TLEN
0x58000790 C   FIELD 25w01 PKE: PKE
0x58000790 C   FIELD 26w02 PAM: PAM
0x58000790 C   FIELD 28w02 TRGM: TRGM
0x58000790 C   FIELD 30w01 SWRM: SWRM
0x58000790 C   FIELD 31w01 BWM: BWM
0x58000794 B  REGISTER MDMA_C29BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000794 C   FIELD 00w17 BNDT: BNDT
0x58000794 C   FIELD 18w01 BRSUM: BRSUM
0x58000794 C   FIELD 19w01 BRDUM: BRDUM
0x58000794 C   FIELD 20w12 BRC: BRC
0x58000798 B  REGISTER MDMA_C29SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000798 C   FIELD 00w32 SAR: SAR
0x5800079C B  REGISTER MDMA_C29DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800079C C   FIELD 00w32 DAR: DAR
0x580007A0 B  REGISTER MDMA_C29BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580007A0 C   FIELD 00w16 SUV: SUV
0x580007A0 C   FIELD 16w16 DUV: DUV
0x580007A4 B  REGISTER MDMA_C29LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580007A4 C   FIELD 00w32 LAR: LAR
0x580007A8 B  REGISTER MDMA_C29TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580007A8 C   FIELD 00w06 TSEL: TSEL
0x580007A8 C   FIELD 16w01 SBUS: SBUS
0x580007A8 C   FIELD 17w01 DBUS: DBUS
0x580007B0 B  REGISTER MDMA_C29MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580007B0 C   FIELD 00w32 MAR: MAR
0x580007B4 B  REGISTER MDMA_C29MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580007B4 C   FIELD 00w32 MDR: MDR
0x580007C0 B  REGISTER MDMA_C30ISR (ro): MDMA channel 30 interrupt/status register
0x580007C0 C   FIELD 00w01 TEIF: TEIF
0x580007C0 C   FIELD 01w01 CTCIF: CTCIF
0x580007C0 C   FIELD 02w01 BRTIF: BRTIF
0x580007C0 C   FIELD 03w01 BTIF: BTIF
0x580007C0 C   FIELD 04w01 TCIF: TCIF
0x580007C0 C   FIELD 16w01 CRQA: CRQA
0x580007C4 B  REGISTER MDMA_C30IFCR (wo): MDMA channel 30 interrupt flag clear register
0x580007C4 C   FIELD 00w01 CTEIF: CTEIF
0x580007C4 C   FIELD 01w01 CCTCIF: CCTCIF
0x580007C4 C   FIELD 02w01 CBRTIF: CBRTIF
0x580007C4 C   FIELD 03w01 CBTIF: CBTIF
0x580007C4 C   FIELD 04w01 CLTCIF: CLTCIF
0x580007C8 B  REGISTER MDMA_C30ESR (ro): MDMA channel 30 error status register
0x580007C8 C   FIELD 00w07 TEA: TEA
0x580007C8 C   FIELD 07w01 TED: TED
0x580007C8 C   FIELD 08w01 TELD: TELD
0x580007C8 C   FIELD 09w01 TEMD: TEMD
0x580007C8 C   FIELD 10w01 ASE: ASE
0x580007C8 C   FIELD 11w01 BSE: BSE
0x580007CC B  REGISTER MDMA_C30CR: This register is used to control the concerned channel.
0x580007CC C   FIELD 00w01 EN (rw): EN
0x580007CC C   FIELD 01w01 TEIE (rw): TEIE
0x580007CC C   FIELD 02w01 CTCIE (rw): CTCIE
0x580007CC C   FIELD 03w01 BRTIE (rw): BRTIE
0x580007CC C   FIELD 04w01 BTIE (rw): BTIE
0x580007CC C   FIELD 05w01 TCIE (rw): TCIE
0x580007CC C   FIELD 06w02 PL (rw): PL
0x580007CC C   FIELD 12w01 BEX (rw): BEX
0x580007CC C   FIELD 13w01 HEX (rw): HEX
0x580007CC C   FIELD 14w01 WEX (rw): WEX
0x580007CC C   FIELD 16w01 SWRQ (wo): SWRQ
0x580007D0 B  REGISTER MDMA_C30TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x580007D0 C   FIELD 00w02 SINC: SINC
0x580007D0 C   FIELD 02w02 DINC: DINC
0x580007D0 C   FIELD 04w02 SSIZE: SSIZE
0x580007D0 C   FIELD 06w02 DSIZE: DSIZE
0x580007D0 C   FIELD 08w02 SINCOS: SINCOS
0x580007D0 C   FIELD 10w02 DINCOS: DINCOS
0x580007D0 C   FIELD 12w03 SBURST: SBURST
0x580007D0 C   FIELD 15w03 DBURST: DBURST
0x580007D0 C   FIELD 18w07 TLEN: TLEN
0x580007D0 C   FIELD 25w01 PKE: PKE
0x580007D0 C   FIELD 26w02 PAM: PAM
0x580007D0 C   FIELD 28w02 TRGM: TRGM
0x580007D0 C   FIELD 30w01 SWRM: SWRM
0x580007D0 C   FIELD 31w01 BWM: BWM
0x580007D4 B  REGISTER MDMA_C30BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x580007D4 C   FIELD 00w17 BNDT: BNDT
0x580007D4 C   FIELD 18w01 BRSUM: BRSUM
0x580007D4 C   FIELD 19w01 BRDUM: BRDUM
0x580007D4 C   FIELD 20w12 BRC: BRC
0x580007D8 B  REGISTER MDMA_C30SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x580007D8 C   FIELD 00w32 SAR: SAR
0x580007DC B  REGISTER MDMA_C30DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x580007DC C   FIELD 00w32 DAR: DAR
0x580007E0 B  REGISTER MDMA_C30BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x580007E0 C   FIELD 00w16 SUV: SUV
0x580007E0 C   FIELD 16w16 DUV: DUV
0x580007E4 B  REGISTER MDMA_C30LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x580007E4 C   FIELD 00w32 LAR: LAR
0x580007E8 B  REGISTER MDMA_C30TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x580007E8 C   FIELD 00w06 TSEL: TSEL
0x580007E8 C   FIELD 16w01 SBUS: SBUS
0x580007E8 C   FIELD 17w01 DBUS: DBUS
0x580007F0 B  REGISTER MDMA_C30MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x580007F0 C   FIELD 00w32 MAR: MAR
0x580007F4 B  REGISTER MDMA_C30MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x580007F4 C   FIELD 00w32 MDR: MDR
0x58000800 B  REGISTER MDMA_C31ISR (ro): MDMA channel 31 interrupt/status register
0x58000800 C   FIELD 00w01 TEIF: TEIF
0x58000800 C   FIELD 01w01 CTCIF: CTCIF
0x58000800 C   FIELD 02w01 BRTIF: BRTIF
0x58000800 C   FIELD 03w01 BTIF: BTIF
0x58000800 C   FIELD 04w01 TCIF: TCIF
0x58000800 C   FIELD 16w01 CRQA: CRQA
0x58000804 B  REGISTER MDMA_C31IFCR (wo): MDMA channel 31 interrupt flag clear register
0x58000804 C   FIELD 00w01 CTEIF: CTEIF
0x58000804 C   FIELD 01w01 CCTCIF: CCTCIF
0x58000804 C   FIELD 02w01 CBRTIF: CBRTIF
0x58000804 C   FIELD 03w01 CBTIF: CBTIF
0x58000804 C   FIELD 04w01 CLTCIF: CLTCIF
0x58000808 B  REGISTER MDMA_C31ESR (ro): MDMA channel 31 error status register
0x58000808 C   FIELD 00w07 TEA: TEA
0x58000808 C   FIELD 07w01 TED: TED
0x58000808 C   FIELD 08w01 TELD: TELD
0x58000808 C   FIELD 09w01 TEMD: TEMD
0x58000808 C   FIELD 10w01 ASE: ASE
0x58000808 C   FIELD 11w01 BSE: BSE
0x5800080C B  REGISTER MDMA_C31CR: This register is used to control the concerned channel.
0x5800080C C   FIELD 00w01 EN (rw): EN
0x5800080C C   FIELD 01w01 TEIE (rw): TEIE
0x5800080C C   FIELD 02w01 CTCIE (rw): CTCIE
0x5800080C C   FIELD 03w01 BRTIE (rw): BRTIE
0x5800080C C   FIELD 04w01 BTIE (rw): BTIE
0x5800080C C   FIELD 05w01 TCIE (rw): TCIE
0x5800080C C   FIELD 06w02 PL (rw): PL
0x5800080C C   FIELD 12w01 BEX (rw): BEX
0x5800080C C   FIELD 13w01 HEX (rw): HEX
0x5800080C C   FIELD 14w01 WEX (rw): WEX
0x5800080C C   FIELD 16w01 SWRQ (wo): SWRQ
0x58000810 B  REGISTER MDMA_C31TCR (rw): This register is used to configure the concerned channel. In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x00).
0x58000810 C   FIELD 00w02 SINC: SINC
0x58000810 C   FIELD 02w02 DINC: DINC
0x58000810 C   FIELD 04w02 SSIZE: SSIZE
0x58000810 C   FIELD 06w02 DSIZE: DSIZE
0x58000810 C   FIELD 08w02 SINCOS: SINCOS
0x58000810 C   FIELD 10w02 DINCOS: DINCOS
0x58000810 C   FIELD 12w03 SBURST: SBURST
0x58000810 C   FIELD 15w03 DBURST: DBURST
0x58000810 C   FIELD 18w07 TLEN: TLEN
0x58000810 C   FIELD 25w01 PKE: PKE
0x58000810 C   FIELD 26w02 PAM: PAM
0x58000810 C   FIELD 28w02 TRGM: TRGM
0x58000810 C   FIELD 30w01 SWRM: SWRM
0x58000810 C   FIELD 31w01 BWM: BWM
0x58000814 B  REGISTER MDMA_C31BNDTR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x04).
0x58000814 C   FIELD 00w17 BNDT: BNDT
0x58000814 C   FIELD 18w01 BRSUM: BRSUM
0x58000814 C   FIELD 19w01 BRDUM: BRDUM
0x58000814 C   FIELD 20w12 BRC: BRC
0x58000818 B  REGISTER MDMA_C31SAR (rw): In Linked List mode, at the end of a Block (single or last Block in repeated Block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x08).
0x58000818 C   FIELD 00w32 SAR: SAR
0x5800081C B  REGISTER MDMA_C31DAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x0C). M
0x5800081C C   FIELD 00w32 DAR: DAR
0x58000820 B  REGISTER MDMA_C31BRUR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x10).
0x58000820 C   FIELD 00w16 SUV: SUV
0x58000820 C   FIELD 16w16 DUV: DUV
0x58000824 B  REGISTER MDMA_C31LAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x14). The new value is only taken into account after all registers are updated, for the next end of block.
0x58000824 C   FIELD 00w32 LAR: LAR
0x58000828 B  REGISTER MDMA_C31TBR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x18).
0x58000828 C   FIELD 00w06 TSEL: TSEL
0x58000828 C   FIELD 16w01 SBUS: SBUS
0x58000828 C   FIELD 17w01 DBUS: DBUS
0x58000830 B  REGISTER MDMA_C31MAR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x20).
0x58000830 C   FIELD 00w32 MAR: MAR
0x58000834 B  REGISTER MDMA_C31MDR (rw): In Linked List mode, at the end of a block (single or last block in repeated block transfer mode), this register will be loaded from memory (from address given by current LAR[31:0] + 0x24).
0x58000834 C   FIELD 00w32 MDR: MDR
0x58002000 A PERIPHERAL FMC
0x58002000 B  REGISTER FMC_BCR1 (rw): This register contains the control information of each memory bank, used for SRAMs, PSRAM, FRAM and NOR Flash memories.
0x58002000 C   FIELD 00w01 MBKEN: MBKEN
0x58002000 C   FIELD 01w01 MUXEN: MUXEN
0x58002000 C   FIELD 02w02 MTYP: MTYP
0x58002000 C   FIELD 04w02 MWID: MWID
0x58002000 C   FIELD 06w01 FACCEN: FACCEN
0x58002000 C   FIELD 08w01 BURSTEN: BURSTEN
0x58002000 C   FIELD 09w01 WAITPOL: WAITPOL
0x58002000 C   FIELD 11w01 WAITCFG: WAITCFG
0x58002000 C   FIELD 12w01 WREN: WREN
0x58002000 C   FIELD 13w01 WAITEN: WAITEN
0x58002000 C   FIELD 14w01 EXTMOD: EXTMOD
0x58002000 C   FIELD 15w01 ASYNCWAIT: ASYNCWAIT
0x58002000 C   FIELD 16w03 CPSIZE: CPSIZE
0x58002000 C   FIELD 19w01 CBURSTRW: CBURSTRW
0x58002000 C   FIELD 20w01 CCLKEN: CCLKEN
0x58002000 C   FIELD 22w02 NBLSET: NBLSET
0x58002000 C   FIELD 31w01 FMCEN: FMCEN
0x58002004 B  REGISTER FMC_BTR1 (rw): This register contains the control information of each memory bank, used for SRAMs, PSRAM and NOR Flash memories.If the EXTMOD bit is set in the FMC_BCRx register, then this register is partitioned for write and read access, that is, two registers are available: one to configure read accesses (this register) and one to configure write accesses (FMC_BWTRx registers).
0x58002004 C   FIELD 00w04 ADDSET: ADDSET
0x58002004 C   FIELD 04w04 ADDHLD: ADDHLD
0x58002004 C   FIELD 08w08 DATAST: DATAST
0x58002004 C   FIELD 16w04 BUSTURN: BUSTURN
0x58002004 C   FIELD 20w04 CLKDIV: CLKDIV
0x58002004 C   FIELD 24w04 DATLAT: DATLAT
0x58002004 C   FIELD 28w02 ACCMOD: ACCMOD
0x58002004 C   FIELD 30w02 DATAHLD: DATAHLD
0x58002008 B  REGISTER FMC_BCR2 (rw): This register contains the control information of each memory bank, used for SRAMs, PSRAM, FRAM and NOR Flash memories.
0x58002008 C   FIELD 00w01 MBKEN: MBKEN
0x58002008 C   FIELD 01w01 MUXEN: MUXEN
0x58002008 C   FIELD 02w02 MTYP: MTYP
0x58002008 C   FIELD 04w02 MWID: MWID
0x58002008 C   FIELD 06w01 FACCEN: FACCEN
0x58002008 C   FIELD 08w01 BURSTEN: BURSTEN
0x58002008 C   FIELD 09w01 WAITPOL: WAITPOL
0x58002008 C   FIELD 11w01 WAITCFG: WAITCFG
0x58002008 C   FIELD 12w01 WREN: WREN
0x58002008 C   FIELD 13w01 WAITEN: WAITEN
0x58002008 C   FIELD 14w01 EXTMOD: EXTMOD
0x58002008 C   FIELD 15w01 ASYNCWAIT: ASYNCWAIT
0x58002008 C   FIELD 16w03 CPSIZE: CPSIZE
0x58002008 C   FIELD 19w01 CBURSTRW: CBURSTRW
0x58002008 C   FIELD 20w01 CCLKEN: CCLKEN
0x58002008 C   FIELD 22w02 NBLSET: NBLSET
0x58002008 C   FIELD 31w01 FMCEN: FMCEN
0x5800200C B  REGISTER FMC_BTR2 (rw): This register contains the control information of each memory bank, used for SRAMs, PSRAM and NOR Flash memories.If the EXTMOD bit is set in the FMC_BCRx register, then this register is partitioned for write and read access, that is, two registers are available: one to configure read accesses (this register) and one to configure write accesses (FMC_BWTRx registers).
0x5800200C C   FIELD 00w04 ADDSET: ADDSET
0x5800200C C   FIELD 04w04 ADDHLD: ADDHLD
0x5800200C C   FIELD 08w08 DATAST: DATAST
0x5800200C C   FIELD 16w04 BUSTURN: BUSTURN
0x5800200C C   FIELD 20w04 CLKDIV: CLKDIV
0x5800200C C   FIELD 24w04 DATLAT: DATLAT
0x5800200C C   FIELD 28w02 ACCMOD: ACCMOD
0x5800200C C   FIELD 30w02 DATAHLD: DATAHLD
0x58002010 B  REGISTER FMC_BCR3 (rw): This register contains the control information of each memory bank, used for SRAMs, PSRAM, FRAM and NOR Flash memories.
0x58002010 C   FIELD 00w01 MBKEN: MBKEN
0x58002010 C   FIELD 01w01 MUXEN: MUXEN
0x58002010 C   FIELD 02w02 MTYP: MTYP
0x58002010 C   FIELD 04w02 MWID: MWID
0x58002010 C   FIELD 06w01 FACCEN: FACCEN
0x58002010 C   FIELD 08w01 BURSTEN: BURSTEN
0x58002010 C   FIELD 09w01 WAITPOL: WAITPOL
0x58002010 C   FIELD 11w01 WAITCFG: WAITCFG
0x58002010 C   FIELD 12w01 WREN: WREN
0x58002010 C   FIELD 13w01 WAITEN: WAITEN
0x58002010 C   FIELD 14w01 EXTMOD: EXTMOD
0x58002010 C   FIELD 15w01 ASYNCWAIT: ASYNCWAIT
0x58002010 C   FIELD 16w03 CPSIZE: CPSIZE
0x58002010 C   FIELD 19w01 CBURSTRW: CBURSTRW
0x58002010 C   FIELD 20w01 CCLKEN: CCLKEN
0x58002010 C   FIELD 22w02 NBLSET: NBLSET
0x58002010 C   FIELD 31w01 FMCEN: FMCEN
0x58002014 B  REGISTER FMC_BTR3 (rw): This register contains the control information of each memory bank, used for SRAMs, PSRAM and NOR Flash memories.If the EXTMOD bit is set in the FMC_BCRx register, then this register is partitioned for write and read access, that is, two registers are available: one to configure read accesses (this register) and one to configure write accesses (FMC_BWTRx registers).
0x58002014 C   FIELD 00w04 ADDSET: ADDSET
0x58002014 C   FIELD 04w04 ADDHLD: ADDHLD
0x58002014 C   FIELD 08w08 DATAST: DATAST
0x58002014 C   FIELD 16w04 BUSTURN: BUSTURN
0x58002014 C   FIELD 20w04 CLKDIV: CLKDIV
0x58002014 C   FIELD 24w04 DATLAT: DATLAT
0x58002014 C   FIELD 28w02 ACCMOD: ACCMOD
0x58002014 C   FIELD 30w02 DATAHLD: DATAHLD
0x58002018 B  REGISTER FMC_BCR4 (rw): This register contains the control information of each memory bank, used for SRAMs, PSRAM, FRAM and NOR Flash memories.
0x58002018 C   FIELD 00w01 MBKEN: MBKEN
0x58002018 C   FIELD 01w01 MUXEN: MUXEN
0x58002018 C   FIELD 02w02 MTYP: MTYP
0x58002018 C   FIELD 04w02 MWID: MWID
0x58002018 C   FIELD 06w01 FACCEN: FACCEN
0x58002018 C   FIELD 08w01 BURSTEN: BURSTEN
0x58002018 C   FIELD 09w01 WAITPOL: WAITPOL
0x58002018 C   FIELD 11w01 WAITCFG: WAITCFG
0x58002018 C   FIELD 12w01 WREN: WREN
0x58002018 C   FIELD 13w01 WAITEN: WAITEN
0x58002018 C   FIELD 14w01 EXTMOD: EXTMOD
0x58002018 C   FIELD 15w01 ASYNCWAIT: ASYNCWAIT
0x58002018 C   FIELD 16w03 CPSIZE: CPSIZE
0x58002018 C   FIELD 19w01 CBURSTRW: CBURSTRW
0x58002018 C   FIELD 20w01 CCLKEN: CCLKEN
0x58002018 C   FIELD 22w02 NBLSET: NBLSET
0x58002018 C   FIELD 31w01 FMCEN: FMCEN
0x5800201C B  REGISTER FMC_BTR4 (rw): This register contains the control information of each memory bank, used for SRAMs, PSRAM and NOR Flash memories.If the EXTMOD bit is set in the FMC_BCRx register, then this register is partitioned for write and read access, that is, two registers are available: one to configure read accesses (this register) and one to configure write accesses (FMC_BWTRx registers).
0x5800201C C   FIELD 00w04 ADDSET: ADDSET
0x5800201C C   FIELD 04w04 ADDHLD: ADDHLD
0x5800201C C   FIELD 08w08 DATAST: DATAST
0x5800201C C   FIELD 16w04 BUSTURN: BUSTURN
0x5800201C C   FIELD 20w04 CLKDIV: CLKDIV
0x5800201C C   FIELD 24w04 DATLAT: DATLAT
0x5800201C C   FIELD 28w02 ACCMOD: ACCMOD
0x5800201C C   FIELD 30w02 DATAHLD: DATAHLD
0x58002020 B  REGISTER FMC_PCSCNTR (rw): This register contains the PSRAM chip select counter value for synchronous mode. The chip select counter is common to all banks and can be enabled separately on each bank. During PSRAM read or write accesses, this value is loaded into a timer which is decremented using the fmc_ker_ck while the NE signal is held low. When the timer reaches 0, the PSRAM controller splits the current access, toggles NE to allow PSRAM device refresh and restarts a new access. The programmed counter value guarantees a maximum NE pulse width (tCEM) as specified for PSRAM devices. The counter is reloaded and starts decrementing each time a new access is started by a transition of NE from high to low. h
0x58002020 C   FIELD 00w16 CSCOUNT: CSCOUNT
0x58002020 C   FIELD 16w01 CNTB1EN: CNTB1EN
0x58002020 C   FIELD 17w01 CNTB2EN: CNTB2EN
0x58002020 C   FIELD 18w01 CNTB3EN: CNTB3EN
0x58002020 C   FIELD 19w01 CNTB4EN: CNTB4EN
0x58002080 B  REGISTER FMC_PCR (rw): NAND Flash Programmable control register
0x58002080 C   FIELD 01w01 PWAITEN: PWAITEN
0x58002080 C   FIELD 02w01 PBKEN: PBKEN
0x58002080 C   FIELD 04w02 PWID: PWID
0x58002080 C   FIELD 06w01 ECCEN: ECCEN
0x58002080 C   FIELD 08w01 ECCALG: ECCALG
0x58002080 C   FIELD 09w04 TCLR: TCLR
0x58002080 C   FIELD 13w04 TAR: TAR
0x58002080 C   FIELD 17w03 ECCSS: ECCSS
0x58002080 C   FIELD 20w04 TCEH: TCEH
0x58002080 C   FIELD 24w01 BCHECC: BCHECC
0x58002080 C   FIELD 25w01 WEN: WEN
0x58002084 B  REGISTER FMC_SR (ro): This register contains information about the AXI interface isolation status and the NAND write requests status. The FMC has to be disabled before modifying some registers. As requests might be pending, it is necessary to wait till the AXI interface is stable and the core of the block is totally isolated from its AXI interface before reconfiguring the registers. The PEF and PNWEF bits indicate the status of the pipe. If Hamming algorithm is used, the ECC is calculated while data are written to the memory. To read the correct ECC, the software must consequently wait untill no write request to the NAND controller are pending, by polling PEF and NWRF bits.
0x58002084 C   FIELD 00w02 ISOST: ISOST
0x58002084 C   FIELD 04w01 PEF: PEF
0x58002084 C   FIELD 06w01 NWRF: NWRF
0x58002088 B  REGISTER FMC_PMEM (rw): The FMC_PMEM read/write register contains NAND Flash memory bank timing information. This information is used to access the NAND Flash common memory space for command, address write accesses or data read/write accesses.
0x58002088 C   FIELD 00w08 MEMSET: MEMSET
0x58002088 C   FIELD 08w08 MEMWAIT: MEMWAIT
0x58002088 C   FIELD 16w08 MEMHOLD: MEMHOLD
0x58002088 C   FIELD 24w08 MEMHIZ: MEMHIZ
0x5800208C B  REGISTER FMC_PATT (rw): The FMC_PATT read/write register contains NAND Flash memory bank timing information. It is used for 8-bit accesses to the NAND Flash attribute memory space during the last address write access when the timing differs from previous accesses (for Ready/Busy management, refer to Section25.8.5: NAND Flash prewait function).
0x5800208C C   FIELD 00w08 ATTSET: ATTSET
0x5800208C C   FIELD 08w08 ATTWAIT: ATTWAIT
0x5800208C C   FIELD 16w08 ATTHOLD: ATTHOLD
0x5800208C C   FIELD 24w08 ATTHIZ: ATTHIZ
0x58002090 B  REGISTER FMC_HPR (ro): This register is used during read accesses in conjunction with the FMC sequencer. It contains the current error correction code value computed by the FMC NAND controller Hamming module. When the FMC sequencer reads data from a NAND Flash memory page at the correct address, the data read are automatically processed by the Hamming computation module. When X bytes have been read (according to the sector size ECCSS field in the FMC_PCR register), the CPU must read the computed ECC value from the FMC_HECCR register. It then verifies if these computed parity data are the same as the parity value recorded in the spare area and stored in the and the FMC_HPR, to determine whether a page is valid, and to correct it otherwise. The FMC_HPR register should be cleared after being read by setting the ECCEN bit to 0. To compute a new data block, the ECCEN bit must be set to 1.
0x58002090 C   FIELD 00w32 HPR: HPR
0x58002094 B  REGISTER FMC_HECCR (ro): This register contain the current error correction code value computed by the FMC NAND controller Hamming module.When the CPU reads/writes data from/to a NAND Flash memory page at the correct address (refer to Section25.8.6: NAND ECC controller), the data read/written from/to the NAND Flash memory are automatically processed by the Hamming computation module. When X bytes have been read (according to the sector size ECCSS field in the FMC_PCR register), the CPU must read the computed ECC value from the FMC_HECCR register. It then verifies if these computed parity data are the same as the parity value recorded in the spare area, to determine whether a page is valid, and to correct it otherwise. The FMC_HECCR register should be cleared after being read by setting the ECCEN bit to 0. To compute a new data block, the ECCEN bit must be set to 1.
0x58002094 C   FIELD 00w32 HECC: HECC
0x58002104 B  REGISTER FMC_BWTR1 (rw): This register contains the control information of each memory bank. It is used for SRAMs, FRAMs, PSRAMs and NOR Flash memories. When the EXTMOD bit is set in the FMC_BCRx register, then this register is active for write access.
0x58002104 C   FIELD 00w04 ADDSET: ADDSET
0x58002104 C   FIELD 04w04 ADDHLD: ADDHLD
0x58002104 C   FIELD 08w08 DATAST: DATAST
0x58002104 C   FIELD 16w04 BUSTURN: BUSTURN
0x58002104 C   FIELD 28w02 ACCMOD: ACCMOD
0x58002104 C   FIELD 30w02 DATAHLD: DATAHLD
0x5800210C B  REGISTER FMC_BWTR2 (rw): This register contains the control information of each memory bank. It is used for SRAMs, FRAMs, PSRAMs and NOR Flash memories. When the EXTMOD bit is set in the FMC_BCRx register, then this register is active for write access.
0x5800210C C   FIELD 00w04 ADDSET: ADDSET
0x5800210C C   FIELD 04w04 ADDHLD: ADDHLD
0x5800210C C   FIELD 08w08 DATAST: DATAST
0x5800210C C   FIELD 16w04 BUSTURN: BUSTURN
0x5800210C C   FIELD 28w02 ACCMOD: ACCMOD
0x5800210C C   FIELD 30w02 DATAHLD: DATAHLD
0x58002114 B  REGISTER FMC_BWTR3 (rw): This register contains the control information of each memory bank. It is used for SRAMs, FRAMs, PSRAMs and NOR Flash memories. When the EXTMOD bit is set in the FMC_BCRx register, then this register is active for write access.
0x58002114 C   FIELD 00w04 ADDSET: ADDSET
0x58002114 C   FIELD 04w04 ADDHLD: ADDHLD
0x58002114 C   FIELD 08w08 DATAST: DATAST
0x58002114 C   FIELD 16w04 BUSTURN: BUSTURN
0x58002114 C   FIELD 28w02 ACCMOD: ACCMOD
0x58002114 C   FIELD 30w02 DATAHLD: DATAHLD
0x5800211C B  REGISTER FMC_BWTR4 (rw): This register contains the control information of each memory bank. It is used for SRAMs, FRAMs, PSRAMs and NOR Flash memories. When the EXTMOD bit is set in the FMC_BCRx register, then this register is active for write access.
0x5800211C C   FIELD 00w04 ADDSET: ADDSET
0x5800211C C   FIELD 04w04 ADDHLD: ADDHLD
0x5800211C C   FIELD 08w08 DATAST: DATAST
0x5800211C C   FIELD 16w04 BUSTURN: BUSTURN
0x5800211C C   FIELD 28w02 ACCMOD: ACCMOD
0x5800211C C   FIELD 30w02 DATAHLD: DATAHLD
0x58002200 B  REGISTER FMC_CSQCR (wo): FMC NAND Command Sequencer Control Register
0x58002200 C   FIELD 00w01 CSQSTART: CSQSTART
0x58002204 B  REGISTER FMC_CSQCFGR1 (rw): FMC NAND Command Sequencer Configuration Register 1
0x58002204 C   FIELD 01w01 CMD2EN: CMD2EN
0x58002204 C   FIELD 02w01 DMADEN: DMADEN
0x58002204 C   FIELD 04w03 ACYNBR: ACYNBR
0x58002204 C   FIELD 08w08 CMD1: CMD1
0x58002204 C   FIELD 16w08 CMD2: CMD2
0x58002204 C   FIELD 24w01 CMD1T: CMD1T
0x58002204 C   FIELD 25w01 CMD2T: CMD2T
0x58002208 B  REGISTER FMC_CSQCFGR2 (rw): This register is used to configure the command sequencer to issue random read/ write commands to read/ write data by sector and automatically read/write data from NAND Flash memory at a programmable address offset. This is useful when performing a sector read/write operation followed by an ECC read/write operation in the NAND Flash spare area.The command sequencer generates the random commands untill all the sectors are read/written. .
0x58002208 C   FIELD 00w01 SQSDTEN: SQSDTEN
0x58002208 C   FIELD 01w01 RCMD2EN: RCMD2EN
0x58002208 C   FIELD 02w01 DMASEN: DMASEN
0x58002208 C   FIELD 08w08 RCMD1: RCMD1
0x58002208 C   FIELD 16w08 RCMD2: RCMD2
0x58002208 C   FIELD 24w01 RCMD1T: RCMD1T
0x58002208 C   FIELD 25w01 RCMD2T: RCMD2T
0x5800220C B  REGISTER FMC_CSQCFGR3 (rw): FMC NAND sequencer configuration register 3
0x5800220C C   FIELD 08w06 SNBR: SNBR
0x5800220C C   FIELD 16w01 AC1T: AC1T
0x5800220C C   FIELD 17w01 AC2T: AC2T
0x5800220C C   FIELD 18w01 AC3T: AC3T
0x5800220C C   FIELD 19w01 AC4T: AC4T
0x5800220C C   FIELD 20w01 AC5T: AC5T
0x5800220C C   FIELD 21w01 SDT: SDT
0x5800220C C   FIELD 22w01 RAC1T: RAC1T
0x5800220C C   FIELD 23w01 RAC2T: RAC2T
0x58002210 B  REGISTER FMC_CSQAR1 (rw): This register is used to define the value of address cycles 1 to 4 to be issued by the command sequencer.
0x58002210 C   FIELD 00w08 ADDC1: ADDC1
0x58002210 C   FIELD 08w08 ADDC2: ADDC2
0x58002210 C   FIELD 16w08 ADDC3: ADDC3
0x58002210 C   FIELD 24w08 ADDC4: ADDC4
0x58002214 B  REGISTER FMC_CSQAR2 (rw): This register is used to program the fifth address cycle and the address offset in spare area. It also selects the chip enable.
0x58002214 C   FIELD 00w08 ADDC5: ADDC5
0x58002214 C   FIELD 10w01 NANDCEN0: NANDCEN0
0x58002214 C   FIELD 11w01 NANDCEN1: NANDCEN1
0x58002214 C   FIELD 16w16 SAO: SAO
0x58002220 B  REGISTER FMC_CSQIER (rw): FMC NAND Command Sequencer Interrupt Enable Register
0x58002220 C   FIELD 00w01 TCIE: TCIE
0x58002220 C   FIELD 01w01 SCIE: SCIE
0x58002220 C   FIELD 02w01 SEIE: SEIE
0x58002220 C   FIELD 03w01 SUEIE: SUEIE
0x58002220 C   FIELD 04w01 CMDTCIE: CMDTCIE
0x58002224 B  REGISTER FMC_CSQISR (rw): FMC NAND Command Sequencer Interrupt Status Register
0x58002224 C   FIELD 00w01 TCF: TCF
0x58002224 C   FIELD 01w01 SCF: SCF
0x58002224 C   FIELD 02w01 SEF: SEF
0x58002224 C   FIELD 03w01 SUEF: SUEF
0x58002224 C   FIELD 04w01 CMDTCF: CMDTCF
0x58002228 B  REGISTER FMC_CSQICR (wo): FMC NAND Command Sequencer Interrupt Clear Register
0x58002228 C   FIELD 00w01 CTCF: CTCF
0x58002228 C   FIELD 01w01 CSCF: CSCF
0x58002228 C   FIELD 02w01 CSEF: CSEF
0x58002228 C   FIELD 03w01 CSUEF: CSUEF
0x58002228 C   FIELD 04w01 CCMDTCF: CCMDTCF
0x58002230 B  REGISTER FMC_CSQEMSR (ro): This register holds a sector error mapping status when the whole transfer is complete.
0x58002230 C   FIELD 00w16 SEM: SEM
0x58002250 B  REGISTER FMC_BCHIER (rw): FMC BCH Interrupt enable register
0x58002250 C   FIELD 00w01 DUEIE: DUEIE
0x58002250 C   FIELD 01w01 DERIE: DERIE
0x58002250 C   FIELD 02w01 DEFIE: DEFIE
0x58002250 C   FIELD 03w01 DSRIE: DSRIE
0x58002250 C   FIELD 04w01 EPBRIE: EPBRIE
0x58002254 B  REGISTER FMC_BCHISR (ro): This register holds the status of BCH encoder/decoder after processing each sector. When the sequencer is used, this register is automatically cleared.
0x58002254 C   FIELD 00w01 DUEF: DUEF
0x58002254 C   FIELD 01w01 DERF: DERF
0x58002254 C   FIELD 02w01 DEFF: DEFF
0x58002254 C   FIELD 03w01 DSRF: DSRF
0x58002254 C   FIELD 04w01 EPBRF: EPBRF
0x58002258 B  REGISTER FMC_BCHICR (wo): FMC BCH Interrupt Clear Register
0x58002258 C   FIELD 00w01 CDUEF: CDUEF
0x58002258 C   FIELD 01w01 CDERF: CDERF
0x58002258 C   FIELD 02w01 CDEFF: CDEFF
0x58002258 C   FIELD 03w01 CDSRF: CDSRF
0x58002258 C   FIELD 04w01 CEPBRF: CEPBRF
0x58002260 B  REGISTER FMC_BCHPBR1 (ro): These registers contain the BCH parity bits (BCHPB). For the BCH 4-bit, only BCHPB[51:0] are significant and for the BCH 8-bit BCHPB[103:0] are significant.
0x58002260 C   FIELD 00w32 BCHPB: BCHPB
0x58002264 B  REGISTER FMC_BCHPBR2 (ro): FMC BCH Parity Bits Register 2
0x58002264 C   FIELD 00w32 BCHPB: BCHPB
0x58002268 B  REGISTER FMC_BCHPBR3 (ro): FMC BCH Parity Bits Register 3
0x58002268 C   FIELD 00w32 BCHPB: BCHPB
0x5800226C B  REGISTER FMC_BCHPBR4 (ro): FMC BCH Parity Bits Register 4
0x5800226C C   FIELD 00w08 BCHPB: BCHPB
0x5800227C B  REGISTER FMC_BCHDSR0 (ro): This register contains some fields already available in other registers but that require to be saved when error correction is performed on several sectors at a time (for example a whole NAND Flash page). This allows a DMA channel to transfer the content of FMC_BCHDSR0..4 to a decoding status buffer. .
0x5800227C C   FIELD 00w01 DUE: DUE
0x5800227C C   FIELD 01w01 DEF: DEF
0x5800227C C   FIELD 04w04 DEN: DEN
0x58002280 B  REGISTER FMC_BCHDSR1 (ro): The maximum error correction capability of the BCH block embedded in the FMC is 8 errors
0x58002280 C   FIELD 00w13 EBP1: EBP1
0x58002280 C   FIELD 16w13 EBP2: EBP2
0x58002284 B  REGISTER FMC_BCHDSR2 (ro): The maximum error correction capability of the BCH block embedded in the FMC is 8 errors. This register contains the positions of the 3rd and 4th error bits in EBP3 and EPB4 fields, respectively.
0x58002284 C   FIELD 00w13 EBP3: EBP3
0x58002284 C   FIELD 16w13 EBP4: EBP4
0x58002288 B  REGISTER FMC_BCHDSR3 (ro): The maximum error correction capability of the BCH block embedded in the FMC is 8 errors.
0x58002288 C   FIELD 00w13 EBP5: EBP5
0x58002288 C   FIELD 16w13 EBP6: EBP6
0x5800228C B  REGISTER FMC_BCHDSR4 (ro): The maximum error correction capability of the BCH block embedded in the FMC is 8 errors. This register contains the positions of the 7th and 8th error bits in EBP7 and EPB8 fields, respectively. .
0x5800228C C   FIELD 00w13 EBP7: EBP7
0x5800228C C   FIELD 16w13 EBP8: EBP8
0x580023EC B  REGISTER FMC_HWCFGR2 (ro): FMC Hardware configuration register 2
0x580023EC C   FIELD 00w04 RD_LN2DPTH: RD_LN2DPTH
0x580023EC C   FIELD 04w04 NOR_BASE: NOR_BASE
0x580023EC C   FIELD 08w04 SDRAM_RBASE: SDRAM_RBASE
0x580023EC C   FIELD 12w04 NAND_BASE: NAND_BASE
0x580023EC C   FIELD 16w04 SDRAM1_BASE: SDRAM1_BASE
0x580023EC C   FIELD 20w04 SDRAM2_BASE: SDRAM2_BASE
0x580023F0 B  REGISTER FMC_HWCFGR1 (ro): FMC Hardware configuration register 1
0x580023F0 C   FIELD 00w01 NAND_SEL: NAND_SEL
0x580023F0 C   FIELD 04w01 NAND_ECC: NAND_ECC
0x580023F0 C   FIELD 08w01 SDRAM_SEL: SDRAM_SEL
0x580023F0 C   FIELD 12w04 ID_SIZE: ID_SIZE
0x580023F0 C   FIELD 16w04 WA_LN2DPTH: WA_LN2DPTH
0x580023F0 C   FIELD 20w04 WD_LN2DPTH: WD_LN2DPTH
0x580023F0 C   FIELD 24w04 WR_LN2DPTH: WR_LN2DPTH
0x580023F0 C   FIELD 28w04 RA_LN2DPTH: RA_LN2DPTH
0x580023F4 B  REGISTER FMC_VERR (ro): FMC Version register
0x580023F4 C   FIELD 00w04 MINREV: MINREV
0x580023F4 C   FIELD 04w04 MAJREV: MAJREV
0x580023F8 B  REGISTER FMC_IPIDR (ro): FMC Identification register
0x580023F8 C   FIELD 00w32 ID: ID
0x580023FC B  REGISTER FMC_SIDR (ro): FMC Size Identification register
0x580023FC C   FIELD 00w32 SID: SID
0x58003000 A PERIPHERAL QUADSPI
0x58003000 B  REGISTER QUADSPI_CR (rw): QUADSPI control register
0x58003000 C   FIELD 00w01 EN: EN
0x58003000 C   FIELD 01w01 ABORT: ABORT
0x58003000 C   FIELD 02w01 DMAEN: DMAEN
0x58003000 C   FIELD 03w01 TCEN: TCEN
0x58003000 C   FIELD 04w01 SSHIFT: SSHIFT
0x58003000 C   FIELD 06w01 DFM: DFM
0x58003000 C   FIELD 07w01 FSEL: FSEL
0x58003000 C   FIELD 08w04 FTHRES: FTHRES
0x58003000 C   FIELD 16w01 TEIE: TEIE
0x58003000 C   FIELD 17w01 TCIE: TCIE
0x58003000 C   FIELD 18w01 FTIE: FTIE
0x58003000 C   FIELD 19w01 SMIE: SMIE
0x58003000 C   FIELD 20w01 TOIE: TOIE
0x58003000 C   FIELD 22w01 APMS: APMS
0x58003000 C   FIELD 23w01 PMM: PMM
0x58003000 C   FIELD 24w08 PRESCALER: PRESCALER
0x58003004 B  REGISTER QUADSPI_DCR (rw): QUADSPI device configuration register
0x58003004 C   FIELD 00w01 CKMODE: CKMODE
0x58003004 C   FIELD 08w03 CSHT: CSHT
0x58003004 C   FIELD 16w05 FSIZE: FSIZE
0x58003008 B  REGISTER QUADSPI_SR (ro): QUADSPI status register
0x58003008 C   FIELD 00w01 TEF: TEF
0x58003008 C   FIELD 01w01 TCF: TCF
0x58003008 C   FIELD 02w01 FTF: FTF
0x58003008 C   FIELD 03w01 SMF: SMF
0x58003008 C   FIELD 04w01 TOF: TOF
0x58003008 C   FIELD 05w01 BUSY: BUSY
0x58003008 C   FIELD 08w05 FLEVEL: FLEVEL
0x5800300C B  REGISTER QUADSPI_FCR (wo): QUADSPI flag clear register
0x5800300C C   FIELD 00w01 CTEF: CTEF
0x5800300C C   FIELD 01w01 CTCF: CTCF
0x5800300C C   FIELD 03w01 CSMF: CSMF
0x5800300C C   FIELD 04w01 CTOF: CTOF
0x58003010 B  REGISTER QUADSPI_DLR (rw): QUADSPI data length register
0x58003010 C   FIELD 00w32 DL: DL
0x58003014 B  REGISTER QUADSPI_CCR (rw): QUADSPI communication configuration register
0x58003014 C   FIELD 00w08 INSTRUCTION: INSTRUCTION
0x58003014 C   FIELD 08w02 IMODE: IMODE
0x58003014 C   FIELD 10w02 ADMODE: ADMODE
0x58003014 C   FIELD 12w02 ADSIZE: ADSIZE
0x58003014 C   FIELD 14w02 ABMODE: ABMODE
0x58003014 C   FIELD 16w02 ABSIZE: ABSIZE
0x58003014 C   FIELD 18w05 DCYC: DCYC
0x58003014 C   FIELD 24w02 DMODE: DMODE
0x58003014 C   FIELD 26w02 FMODE: FMODE
0x58003014 C   FIELD 28w01 SIOO: SIOO
0x58003014 C   FIELD 29w01 FRCM: FRCM
0x58003014 C   FIELD 30w01 DHHC: DHHC
0x58003014 C   FIELD 31w01 DDRM: DDRM
0x58003018 B  REGISTER QUADSPI_AR (rw): QUADSPI address register
0x58003018 C   FIELD 00w32 ADDRESS: ADDRESS
0x5800301C B  REGISTER QUADSPI_ABR (rw): QUADSPI alternate bytes registers
0x5800301C C   FIELD 00w32 ALTERNATE: ALTERNATE
0x58003020 B  REGISTER QUADSPI_DR (rw): QUADSPI data register
0x58003020 C   FIELD 00w32 DATA: DATA
0x58003024 B  REGISTER QUADSPI_PSMKR (rw): QUADSPI polling status mask register
0x58003024 C   FIELD 00w32 MASK: MASK
0x58003028 B  REGISTER QUADSPI_PSMAR (rw): QUADSPI polling status match register
0x58003028 C   FIELD 00w32 MATCH: MATCH
0x5800302C B  REGISTER QUADSPI_PIR (rw): QUADSPI polling interval register
0x5800302C C   FIELD 00w16 INTERVAL: INTERVAL
0x58003030 B  REGISTER QUADSPI_LPTR (rw): QUADSPI low-power timeout register
0x58003030 C   FIELD 00w16 TIMEOUT: TIMEOUT
0x580033F0 B  REGISTER QUADSPI_HWCFGR (ro): QUADSPI HW configuration register
0x580033F0 C   FIELD 00w04 FIFOSIZE: FIFOSIZE
0x580033F0 C   FIELD 04w04 FIFOPTR: FIFOPTR
0x580033F0 C   FIELD 08w04 PRESCVAL: PRESCVAL
0x580033F0 C   FIELD 12w04 IDLENGTH: IDLENGTH
0x580033F4 B  REGISTER QUADSPI_VERR (ro): QUADSPI version register
0x580033F4 C   FIELD 00w04 MINREV: MINREV
0x580033F4 C   FIELD 04w04 MAJREV: MAJREV
0x580033F8 B  REGISTER QUADSPI_IPIDR (ro): QUADSPI identification register
0x580033F8 C   FIELD 00w32 ID: ID
0x580033FC B  REGISTER QUADSPI_SIDR (ro): QUADSPI size identification register
0x580033FC C   FIELD 00w32 SID: SID
0x58004000 A PERIPHERAL DLYBQS
0x58004000 B  REGISTER DLYB_CR (rw): DLYB control register
0x58004000 C   FIELD 00w01 DEN (rw): DEN
0x58004000 C   FIELD 01w01 SEN (rw): SEN
0x58004004 B  REGISTER DLYB_CFGR (rw): DLYB configuration register
0x58004004 C   FIELD 00w04 SEL (rw): SEL
0x58004004 C   FIELD 08w07 UNIT (rw): UNIT
0x58004004 C   FIELD 16w12 LNG (ro): LNG
0x58004004 C   FIELD 31w01 LNGF (ro): LNGF
0x580043F4 B  REGISTER DLYB_VERR (ro): DLYB IP version register
0x580043F4 C   FIELD 00w04 MINREV (ro): MINREV
0x580043F4 C   FIELD 04w04 MAJREV (ro): MAJREV
0x580043F8 B  REGISTER DLYB_IPIDR (ro): DLYB IP identification register
0x580043F8 C   FIELD 00w32 ID (ro): ID
0x580043FC B  REGISTER DLYB_SIDR (ro): DLYB size ID register
0x580043FC C   FIELD 00w32 SID (ro): SID
0x58005000 A PERIPHERAL SDMMC1
0x58005000 B  REGISTER SDMMC_POWER (rw): SDMMC power control register
0x58005000 C   FIELD 00w02 PWRCTRL: PWRCTRL
0x58005000 C   FIELD 02w01 VSWITCH: VSWITCH
0x58005000 C   FIELD 03w01 VSWITCHEN: VSWITCHEN
0x58005000 C   FIELD 04w01 DIRPOL: DIRPOL
0x58005004 B  REGISTER SDMMC_CLKCR (rw): The SDMMC_CLKCR register controls the SDMMC_CK output clock, the sdmmc_rx_ck receive clock, and the bus width.
0x58005004 C   FIELD 00w10 CLKDIV: CLKDIV
0x58005004 C   FIELD 12w01 PWRSAV: PWRSAV
0x58005004 C   FIELD 14w02 WIDBUS: WIDBUS
0x58005004 C   FIELD 16w01 NEGEDGE: NEGEDGE
0x58005004 C   FIELD 17w01 HWFC_EN: HWFC_EN
0x58005004 C   FIELD 18w01 DDR: DDR
0x58005004 C   FIELD 19w01 BUSSPEED: BUSSPEED
0x58005004 C   FIELD 20w02 SELCLKRX: SELCLKRX
0x58005008 B  REGISTER SDMMC_ARGR (rw): The SDMMC_ARGR register contains a 32-bit command argument, which is sent to a card as part of a command message.
0x58005008 C   FIELD 00w32 CMDARG: CMDARG
0x5800500C B  REGISTER SDMMC_CMDR (rw): The SDMMC_CMDR register contains the command index and command type bits. The command index is sent to a card as part of a command message. The command type bits control the command path state machine (CPSM).
0x5800500C C   FIELD 00w06 CMDINDEX: CMDINDEX
0x5800500C C   FIELD 06w01 CMDTRANS: CMDTRANS
0x5800500C C   FIELD 07w01 CMDSTOP: CMDSTOP
0x5800500C C   FIELD 08w02 WAITRESP: WAITRESP
0x5800500C C   FIELD 10w01 WAITINT: WAITINT
0x5800500C C   FIELD 11w01 WAITPEND: WAITPEND
0x5800500C C   FIELD 12w01 CPSMEN: CPSMEN
0x5800500C C   FIELD 13w01 DTHOLD: DTHOLD
0x5800500C C   FIELD 14w01 BOOTMODE: BOOTMODE
0x5800500C C   FIELD 15w01 BOOTEN: BOOTEN
0x5800500C C   FIELD 16w01 CMDSUSPEND: CMDSUSPEND
0x58005010 B  REGISTER SDMMC_RESPCMDR (ro): The SDMMC_RESPCMDR register contains the command index field of the last command response received. If the command response transmission does not contain the command index field (long or OCR response), the RESPCMD field is unknown, although it must contain 111111b (the value of the reserved field from the response).
0x58005010 C   FIELD 00w06 RESPCMD: RESPCMD
0x58005014 B  REGISTER SDMMC_RESP1R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x58005014 C   FIELD 00w32 CARDSTATUS1: CARDSTATUS1
0x58005018 B  REGISTER SDMMC_RESP2R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x58005018 C   FIELD 00w32 CARDSTATUS2: CARDSTATUS2
0x5800501C B  REGISTER SDMMC_RESP3R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x5800501C C   FIELD 00w32 CARDSTATUS3: CARDSTATUS3
0x58005020 B  REGISTER SDMMC_RESP4R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x58005020 C   FIELD 00w32 CARDSTATUS4: CARDSTATUS4
0x58005024 B  REGISTER SDMMC_DTIMER (rw): The SDMMC_DTIMER register contains the data timeout period, in card bus clock periods. A counter loads the value from the SDMMC_DTIMER register, and starts decrementing when the data path state machine (DPSM) enters the Wait_R or Busy state. If the timer reaches 0 while the DPSM is in either of these states, the timeout status flag is set.
0x58005024 C   FIELD 00w32 DATATIME: DATATIME
0x58005028 B  REGISTER SDMMC_DLENR (rw): The SDMMC_DLENR register contains the number of data bytes to be transferred. The value is loaded into the data counter when data transfer starts.
0x58005028 C   FIELD 00w25 DATALENGTH: DATALENGTH
0x5800502C B  REGISTER SDMMC_DCTRL (rw): The SDMMC_DCTRL register control the data path state machine (DPSM).
0x5800502C C   FIELD 00w01 DTEN: DTEN
0x5800502C C   FIELD 01w01 DTDIR: DTDIR
0x5800502C C   FIELD 02w02 DTMODE: DTMODE
0x5800502C C   FIELD 04w04 DBLOCKSIZE: DBLOCKSIZE
0x5800502C C   FIELD 08w01 RWSTART: RWSTART
0x5800502C C   FIELD 09w01 RWSTOP: RWSTOP
0x5800502C C   FIELD 10w01 RWMOD: RWMOD
0x5800502C C   FIELD 11w01 SDIOEN: SDIOEN
0x5800502C C   FIELD 12w01 BOOTACKEN: BOOTACKEN
0x5800502C C   FIELD 13w01 FIFORST: FIFORST
0x58005030 B  REGISTER SDMMC_DCNTR (ro): The SDMMC_DCNTR register loads the value from the data length register (see SDMMC_DLENR) when the DPSM moves from the Idle state to the Wait_R or Wait_S state. As data is transferred, the counter decrements the value until it reaches 0. The DPSM then moves to the Idle state and when there has been no error, the data status end flag (DATAEND) is set.
0x58005030 C   FIELD 00w25 DATACOUNT: DATACOUNT
0x58005034 B  REGISTER SDMMC_STAR (ro): The SDMMC_STAR register is a read-only register. It contains two types of flag: Static flags (bits [28, 21, 11:0]): these bits remain asserted until they are cleared by writing to the SDMMC interrupt Clear register (see SDMMC_ICR) Dynamic flags (bits [20:12]): these bits change state depending on the state of the underlying logic (for example, FIFO full and empty flags are asserted and de-asserted as data while written to the FIFO)
0x58005034 C   FIELD 00w01 CCRCFAIL: CCRCFAIL
0x58005034 C   FIELD 01w01 DCRCFAIL: DCRCFAIL
0x58005034 C   FIELD 02w01 CTIMEOUT: CTIMEOUT
0x58005034 C   FIELD 03w01 DTIMEOUT: DTIMEOUT
0x58005034 C   FIELD 04w01 TXUNDERR: TXUNDERR
0x58005034 C   FIELD 05w01 RXOVERR: RXOVERR
0x58005034 C   FIELD 06w01 CMDREND: CMDREND
0x58005034 C   FIELD 07w01 CMDSENT: CMDSENT
0x58005034 C   FIELD 08w01 DATAEND: DATAEND
0x58005034 C   FIELD 09w01 DHOLD: DHOLD
0x58005034 C   FIELD 10w01 DBCKEND: DBCKEND
0x58005034 C   FIELD 11w01 DABORT: DABORT
0x58005034 C   FIELD 12w01 DPSMACT: DPSMACT
0x58005034 C   FIELD 13w01 CPSMACT: CPSMACT
0x58005034 C   FIELD 14w01 TXFIFOHE: TXFIFOHE
0x58005034 C   FIELD 15w01 RXFIFOHF: RXFIFOHF
0x58005034 C   FIELD 16w01 TXFIFOF: TXFIFOF
0x58005034 C   FIELD 17w01 RXFIFOF: RXFIFOF
0x58005034 C   FIELD 18w01 TXFIFOE: TXFIFOE
0x58005034 C   FIELD 19w01 RXFIFOE: RXFIFOE
0x58005034 C   FIELD 20w01 BUSYD0: BUSYD0
0x58005034 C   FIELD 21w01 BUSYD0END: BUSYD0END
0x58005034 C   FIELD 22w01 SDIOIT: SDIOIT
0x58005034 C   FIELD 23w01 ACKFAIL: ACKFAIL
0x58005034 C   FIELD 24w01 ACKTIMEOUT: ACKTIMEOUT
0x58005034 C   FIELD 25w01 VSWEND: VSWEND
0x58005034 C   FIELD 26w01 CKSTOP: CKSTOP
0x58005034 C   FIELD 27w01 IDMATE: IDMATE
0x58005034 C   FIELD 28w01 IDMABTC: IDMABTC
0x58005038 B  REGISTER SDMMC_ICR (rw): The SDMMC_ICR register is a write-only register. Writing a bit with 1 clears the corresponding bit in the SDMMC_STAR status register.
0x58005038 C   FIELD 00w01 CCRCFAILC: CCRCFAILC
0x58005038 C   FIELD 01w01 DCRCFAILC: DCRCFAILC
0x58005038 C   FIELD 02w01 CTIMEOUTC: CTIMEOUTC
0x58005038 C   FIELD 03w01 DTIMEOUTC: DTIMEOUTC
0x58005038 C   FIELD 04w01 TXUNDERRC: TXUNDERRC
0x58005038 C   FIELD 05w01 RXOVERRC: RXOVERRC
0x58005038 C   FIELD 06w01 CMDRENDC: CMDRENDC
0x58005038 C   FIELD 07w01 CMDSENTC: CMDSENTC
0x58005038 C   FIELD 08w01 DATAENDC: DATAENDC
0x58005038 C   FIELD 09w01 DHOLDC: DHOLDC
0x58005038 C   FIELD 10w01 DBCKENDC: DBCKENDC
0x58005038 C   FIELD 11w01 DABORTC: DABORTC
0x58005038 C   FIELD 21w01 BUSYD0ENDC: BUSYD0ENDC
0x58005038 C   FIELD 22w01 SDIOITC: SDIOITC
0x58005038 C   FIELD 23w01 ACKFAILC: ACKFAILC
0x58005038 C   FIELD 24w01 ACKTIMEOUTC: ACKTIMEOUTC
0x58005038 C   FIELD 25w01 VSWENDC: VSWENDC
0x58005038 C   FIELD 26w01 CKSTOPC: CKSTOPC
0x58005038 C   FIELD 27w01 IDMATEC: IDMATEC
0x58005038 C   FIELD 28w01 IDMABTCC: IDMABTCC
0x5800503C B  REGISTER SDMMC_MASKR (rw): The interrupt mask register determines which status flags generate an interrupt request by setting the corresponding bit to 1.
0x5800503C C   FIELD 00w01 CCRCFAILIE: CCRCFAILIE
0x5800503C C   FIELD 01w01 DCRCFAILIE: DCRCFAILIE
0x5800503C C   FIELD 02w01 CTIMEOUTIE: CTIMEOUTIE
0x5800503C C   FIELD 03w01 DTIMEOUTIE: DTIMEOUTIE
0x5800503C C   FIELD 04w01 TXUNDERRIE: TXUNDERRIE
0x5800503C C   FIELD 05w01 RXOVERRIE: RXOVERRIE
0x5800503C C   FIELD 06w01 CMDRENDIE: CMDRENDIE
0x5800503C C   FIELD 07w01 CMDSENTIE: CMDSENTIE
0x5800503C C   FIELD 08w01 DATAENDIE: DATAENDIE
0x5800503C C   FIELD 09w01 DHOLDIE: DHOLDIE
0x5800503C C   FIELD 10w01 DBCKENDIE: DBCKENDIE
0x5800503C C   FIELD 11w01 DABORTIE: DABORTIE
0x5800503C C   FIELD 14w01 TXFIFOHEIE: TXFIFOHEIE
0x5800503C C   FIELD 15w01 RXFIFOHFIE: RXFIFOHFIE
0x5800503C C   FIELD 17w01 RXFIFOFIE: RXFIFOFIE
0x5800503C C   FIELD 18w01 TXFIFOEIE: TXFIFOEIE
0x5800503C C   FIELD 21w01 BUSYD0ENDIE: BUSYD0ENDIE
0x5800503C C   FIELD 22w01 SDIOITIE: SDIOITIE
0x5800503C C   FIELD 23w01 ACKFAILIE: ACKFAILIE
0x5800503C C   FIELD 24w01 ACKTIMEOUTIE: ACKTIMEOUTIE
0x5800503C C   FIELD 25w01 VSWENDIE: VSWENDIE
0x5800503C C   FIELD 26w01 CKSTOPIE: CKSTOPIE
0x5800503C C   FIELD 28w01 IDMABTCIE: IDMABTCIE
0x58005040 B  REGISTER SDMMC_ACKTIMER (rw): The SDMMC_ACKTIMER register contains the acknowledgment timeout period, in SDMMC_CK bus clock periods. A counter loads the value from the SDMMC_ACKTIMER register, and starts decrementing when the data path state machine (DPSM) enters the Wait_Ack state. If the timer reaches 0 while the DPSM is in this states, the acknowledgment timeout status flag is set.
0x58005040 C   FIELD 00w25 ACKTIME: ACKTIME
0x58005050 B  REGISTER SDMMC_IDMACTRLR (rw): The receive and transmit FIFOs can be read or written as 32-bit wide registers. The FIFOs contain 32 entries on 32 sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO.
0x58005050 C   FIELD 00w01 IDMAEN: IDMAEN
0x58005050 C   FIELD 01w01 IDMABMODE: IDMABMODE
0x58005054 B  REGISTER SDMMC_IDMABSIZER (rw): The SDMMC_IDMABSIZER register contains the buffer size when in linked list configuration.
0x58005054 C   FIELD 05w12 IDMABNDT: IDMABNDT
0x58005058 B  REGISTER SDMMC_IDMABASER (rw): The SDMMC_IDMABASER register contains the memory buffer base address in single buffer configuration and linked list configuration.
0x58005058 C   FIELD 00w32 IDMABASE: IDMABASE
0x58005064 B  REGISTER SDMMC_IDMALAR (rw): SDMMC IDMA linked list address register
0x58005064 C   FIELD 02w14 IDMALA: IDMALA
0x58005064 C   FIELD 29w01 ABR: ABR
0x58005064 C   FIELD 30w01 ULS: ULS
0x58005064 C   FIELD 31w01 ULA: ULA
0x58005068 B  REGISTER SDMMC_IDMABAR (rw): SDMMC IDMA linked list memory base register
0x58005068 C   FIELD 02w30 IDMABA: IDMABA
0x58005080 B  REGISTER SDMMC_FIFOR0 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58005080 C   FIELD 00w32 FIFODATA: FIFODATA
0x58005084 B  REGISTER SDMMC_FIFOR1 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58005084 C   FIELD 00w32 FIFODATA: FIFODATA
0x58005088 B  REGISTER SDMMC_FIFOR2 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58005088 C   FIELD 00w32 FIFODATA: FIFODATA
0x5800508C B  REGISTER SDMMC_FIFOR3 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x5800508C C   FIELD 00w32 FIFODATA: FIFODATA
0x58005090 B  REGISTER SDMMC_FIFOR4 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58005090 C   FIELD 00w32 FIFODATA: FIFODATA
0x58005094 B  REGISTER SDMMC_FIFOR5 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58005094 C   FIELD 00w32 FIFODATA: FIFODATA
0x58005098 B  REGISTER SDMMC_FIFOR6 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58005098 C   FIELD 00w32 FIFODATA: FIFODATA
0x5800509C B  REGISTER SDMMC_FIFOR7 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x5800509C C   FIELD 00w32 FIFODATA: FIFODATA
0x580050A0 B  REGISTER SDMMC_FIFOR8 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580050A0 C   FIELD 00w32 FIFODATA: FIFODATA
0x580050A4 B  REGISTER SDMMC_FIFOR9 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580050A4 C   FIELD 00w32 FIFODATA: FIFODATA
0x580050A8 B  REGISTER SDMMC_FIFOR10 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580050A8 C   FIELD 00w32 FIFODATA: FIFODATA
0x580050AC B  REGISTER SDMMC_FIFOR11 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580050AC C   FIELD 00w32 FIFODATA: FIFODATA
0x580050B0 B  REGISTER SDMMC_FIFOR12 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580050B0 C   FIELD 00w32 FIFODATA: FIFODATA
0x580050B4 B  REGISTER SDMMC_FIFOR13 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580050B4 C   FIELD 00w32 FIFODATA: FIFODATA
0x580050B8 B  REGISTER SDMMC_FIFOR14 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580050B8 C   FIELD 00w32 FIFODATA: FIFODATA
0x580050BC B  REGISTER SDMMC_FIFOR15 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580050BC C   FIELD 00w32 FIFODATA: FIFODATA
0x580053F4 B  REGISTER SDMMC_VERR (ro): SDMMC version register
0x580053F4 C   FIELD 00w04 MINREV: MINREV
0x580053F4 C   FIELD 04w04 MAJREV: MAJREV
0x580053F8 B  REGISTER SDMMC_IPIDR (ro): SDMMC identification register
0x580053F8 C   FIELD 00w32 IP_ID: IP_ID
0x580053FC B  REGISTER SDMMC_SIDR (ro): SDMMC size ID register
0x580053FC C   FIELD 00w32 SID: SID
0x58006000 A PERIPHERAL DLYBSD1
0x58006000 B  REGISTER DLYB_CR (rw): DLYB control register
0x58006000 C   FIELD 00w01 DEN: DEN
0x58006000 C   FIELD 01w01 SEN: SEN
0x58006004 B  REGISTER DLYB_CFGR: DLYB configuration register
0x58006004 C   FIELD 00w04 SEL (rw): SEL
0x58006004 C   FIELD 08w07 UNIT (rw): UNIT
0x58006004 C   FIELD 16w12 LNG (ro): LNG
0x58006004 C   FIELD 31w01 LNGF (ro): LNGF
0x580063F4 B  REGISTER DLYB_VERR (ro): DLYB IP version register
0x580063F4 C   FIELD 00w04 MINREV: MINREV
0x580063F4 C   FIELD 04w04 MAJREV: MAJREV
0x580063F8 B  REGISTER DLYB_IPIDR (ro): DLYB IP identification register
0x580063F8 C   FIELD 00w32 ID: ID
0x580063FC B  REGISTER DLYB_SIDR (ro): DLYB size ID register
0x580063FC C   FIELD 00w32 SID: SID
0x58007000 A PERIPHERAL SDMMC2
0x58007000 B  REGISTER SDMMC_POWER (rw): SDMMC power control register
0x58007000 C   FIELD 00w02 PWRCTRL: PWRCTRL
0x58007000 C   FIELD 02w01 VSWITCH: VSWITCH
0x58007000 C   FIELD 03w01 VSWITCHEN: VSWITCHEN
0x58007000 C   FIELD 04w01 DIRPOL: DIRPOL
0x58007004 B  REGISTER SDMMC_CLKCR (rw): The SDMMC_CLKCR register controls the SDMMC_CK output clock, the sdmmc_rx_ck receive clock, and the bus width.
0x58007004 C   FIELD 00w10 CLKDIV: CLKDIV
0x58007004 C   FIELD 12w01 PWRSAV: PWRSAV
0x58007004 C   FIELD 14w02 WIDBUS: WIDBUS
0x58007004 C   FIELD 16w01 NEGEDGE: NEGEDGE
0x58007004 C   FIELD 17w01 HWFC_EN: HWFC_EN
0x58007004 C   FIELD 18w01 DDR: DDR
0x58007004 C   FIELD 19w01 BUSSPEED: BUSSPEED
0x58007004 C   FIELD 20w02 SELCLKRX: SELCLKRX
0x58007008 B  REGISTER SDMMC_ARGR (rw): The SDMMC_ARGR register contains a 32-bit command argument, which is sent to a card as part of a command message.
0x58007008 C   FIELD 00w32 CMDARG: CMDARG
0x5800700C B  REGISTER SDMMC_CMDR (rw): The SDMMC_CMDR register contains the command index and command type bits. The command index is sent to a card as part of a command message. The command type bits control the command path state machine (CPSM).
0x5800700C C   FIELD 00w06 CMDINDEX: CMDINDEX
0x5800700C C   FIELD 06w01 CMDTRANS: CMDTRANS
0x5800700C C   FIELD 07w01 CMDSTOP: CMDSTOP
0x5800700C C   FIELD 08w02 WAITRESP: WAITRESP
0x5800700C C   FIELD 10w01 WAITINT: WAITINT
0x5800700C C   FIELD 11w01 WAITPEND: WAITPEND
0x5800700C C   FIELD 12w01 CPSMEN: CPSMEN
0x5800700C C   FIELD 13w01 DTHOLD: DTHOLD
0x5800700C C   FIELD 14w01 BOOTMODE: BOOTMODE
0x5800700C C   FIELD 15w01 BOOTEN: BOOTEN
0x5800700C C   FIELD 16w01 CMDSUSPEND: CMDSUSPEND
0x58007010 B  REGISTER SDMMC_RESPCMDR (ro): The SDMMC_RESPCMDR register contains the command index field of the last command response received. If the command response transmission does not contain the command index field (long or OCR response), the RESPCMD field is unknown, although it must contain 111111b (the value of the reserved field from the response).
0x58007010 C   FIELD 00w06 RESPCMD: RESPCMD
0x58007014 B  REGISTER SDMMC_RESP1R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x58007014 C   FIELD 00w32 CARDSTATUS1: CARDSTATUS1
0x58007018 B  REGISTER SDMMC_RESP2R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x58007018 C   FIELD 00w32 CARDSTATUS2: CARDSTATUS2
0x5800701C B  REGISTER SDMMC_RESP3R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x5800701C C   FIELD 00w32 CARDSTATUS3: CARDSTATUS3
0x58007020 B  REGISTER SDMMC_RESP4R (ro): The SDMMC_RESP1/2/3/4R registers contain the status of a card, which is part of the received response.
0x58007020 C   FIELD 00w32 CARDSTATUS4: CARDSTATUS4
0x58007024 B  REGISTER SDMMC_DTIMER (rw): The SDMMC_DTIMER register contains the data timeout period, in card bus clock periods. A counter loads the value from the SDMMC_DTIMER register, and starts decrementing when the data path state machine (DPSM) enters the Wait_R or Busy state. If the timer reaches 0 while the DPSM is in either of these states, the timeout status flag is set.
0x58007024 C   FIELD 00w32 DATATIME: DATATIME
0x58007028 B  REGISTER SDMMC_DLENR (rw): The SDMMC_DLENR register contains the number of data bytes to be transferred. The value is loaded into the data counter when data transfer starts.
0x58007028 C   FIELD 00w25 DATALENGTH: DATALENGTH
0x5800702C B  REGISTER SDMMC_DCTRL (rw): The SDMMC_DCTRL register control the data path state machine (DPSM).
0x5800702C C   FIELD 00w01 DTEN: DTEN
0x5800702C C   FIELD 01w01 DTDIR: DTDIR
0x5800702C C   FIELD 02w02 DTMODE: DTMODE
0x5800702C C   FIELD 04w04 DBLOCKSIZE: DBLOCKSIZE
0x5800702C C   FIELD 08w01 RWSTART: RWSTART
0x5800702C C   FIELD 09w01 RWSTOP: RWSTOP
0x5800702C C   FIELD 10w01 RWMOD: RWMOD
0x5800702C C   FIELD 11w01 SDIOEN: SDIOEN
0x5800702C C   FIELD 12w01 BOOTACKEN: BOOTACKEN
0x5800702C C   FIELD 13w01 FIFORST: FIFORST
0x58007030 B  REGISTER SDMMC_DCNTR (ro): The SDMMC_DCNTR register loads the value from the data length register (see SDMMC_DLENR) when the DPSM moves from the Idle state to the Wait_R or Wait_S state. As data is transferred, the counter decrements the value until it reaches 0. The DPSM then moves to the Idle state and when there has been no error, the data status end flag (DATAEND) is set.
0x58007030 C   FIELD 00w25 DATACOUNT: DATACOUNT
0x58007034 B  REGISTER SDMMC_STAR (ro): The SDMMC_STAR register is a read-only register. It contains two types of flag: Static flags (bits [28, 21, 11:0]): these bits remain asserted until they are cleared by writing to the SDMMC interrupt Clear register (see SDMMC_ICR) Dynamic flags (bits [20:12]): these bits change state depending on the state of the underlying logic (for example, FIFO full and empty flags are asserted and de-asserted as data while written to the FIFO)
0x58007034 C   FIELD 00w01 CCRCFAIL: CCRCFAIL
0x58007034 C   FIELD 01w01 DCRCFAIL: DCRCFAIL
0x58007034 C   FIELD 02w01 CTIMEOUT: CTIMEOUT
0x58007034 C   FIELD 03w01 DTIMEOUT: DTIMEOUT
0x58007034 C   FIELD 04w01 TXUNDERR: TXUNDERR
0x58007034 C   FIELD 05w01 RXOVERR: RXOVERR
0x58007034 C   FIELD 06w01 CMDREND: CMDREND
0x58007034 C   FIELD 07w01 CMDSENT: CMDSENT
0x58007034 C   FIELD 08w01 DATAEND: DATAEND
0x58007034 C   FIELD 09w01 DHOLD: DHOLD
0x58007034 C   FIELD 10w01 DBCKEND: DBCKEND
0x58007034 C   FIELD 11w01 DABORT: DABORT
0x58007034 C   FIELD 12w01 DPSMACT: DPSMACT
0x58007034 C   FIELD 13w01 CPSMACT: CPSMACT
0x58007034 C   FIELD 14w01 TXFIFOHE: TXFIFOHE
0x58007034 C   FIELD 15w01 RXFIFOHF: RXFIFOHF
0x58007034 C   FIELD 16w01 TXFIFOF: TXFIFOF
0x58007034 C   FIELD 17w01 RXFIFOF: RXFIFOF
0x58007034 C   FIELD 18w01 TXFIFOE: TXFIFOE
0x58007034 C   FIELD 19w01 RXFIFOE: RXFIFOE
0x58007034 C   FIELD 20w01 BUSYD0: BUSYD0
0x58007034 C   FIELD 21w01 BUSYD0END: BUSYD0END
0x58007034 C   FIELD 22w01 SDIOIT: SDIOIT
0x58007034 C   FIELD 23w01 ACKFAIL: ACKFAIL
0x58007034 C   FIELD 24w01 ACKTIMEOUT: ACKTIMEOUT
0x58007034 C   FIELD 25w01 VSWEND: VSWEND
0x58007034 C   FIELD 26w01 CKSTOP: CKSTOP
0x58007034 C   FIELD 27w01 IDMATE: IDMATE
0x58007034 C   FIELD 28w01 IDMABTC: IDMABTC
0x58007038 B  REGISTER SDMMC_ICR (rw): The SDMMC_ICR register is a write-only register. Writing a bit with 1 clears the corresponding bit in the SDMMC_STAR status register.
0x58007038 C   FIELD 00w01 CCRCFAILC: CCRCFAILC
0x58007038 C   FIELD 01w01 DCRCFAILC: DCRCFAILC
0x58007038 C   FIELD 02w01 CTIMEOUTC: CTIMEOUTC
0x58007038 C   FIELD 03w01 DTIMEOUTC: DTIMEOUTC
0x58007038 C   FIELD 04w01 TXUNDERRC: TXUNDERRC
0x58007038 C   FIELD 05w01 RXOVERRC: RXOVERRC
0x58007038 C   FIELD 06w01 CMDRENDC: CMDRENDC
0x58007038 C   FIELD 07w01 CMDSENTC: CMDSENTC
0x58007038 C   FIELD 08w01 DATAENDC: DATAENDC
0x58007038 C   FIELD 09w01 DHOLDC: DHOLDC
0x58007038 C   FIELD 10w01 DBCKENDC: DBCKENDC
0x58007038 C   FIELD 11w01 DABORTC: DABORTC
0x58007038 C   FIELD 21w01 BUSYD0ENDC: BUSYD0ENDC
0x58007038 C   FIELD 22w01 SDIOITC: SDIOITC
0x58007038 C   FIELD 23w01 ACKFAILC: ACKFAILC
0x58007038 C   FIELD 24w01 ACKTIMEOUTC: ACKTIMEOUTC
0x58007038 C   FIELD 25w01 VSWENDC: VSWENDC
0x58007038 C   FIELD 26w01 CKSTOPC: CKSTOPC
0x58007038 C   FIELD 27w01 IDMATEC: IDMATEC
0x58007038 C   FIELD 28w01 IDMABTCC: IDMABTCC
0x5800703C B  REGISTER SDMMC_MASKR (rw): The interrupt mask register determines which status flags generate an interrupt request by setting the corresponding bit to 1.
0x5800703C C   FIELD 00w01 CCRCFAILIE: CCRCFAILIE
0x5800703C C   FIELD 01w01 DCRCFAILIE: DCRCFAILIE
0x5800703C C   FIELD 02w01 CTIMEOUTIE: CTIMEOUTIE
0x5800703C C   FIELD 03w01 DTIMEOUTIE: DTIMEOUTIE
0x5800703C C   FIELD 04w01 TXUNDERRIE: TXUNDERRIE
0x5800703C C   FIELD 05w01 RXOVERRIE: RXOVERRIE
0x5800703C C   FIELD 06w01 CMDRENDIE: CMDRENDIE
0x5800703C C   FIELD 07w01 CMDSENTIE: CMDSENTIE
0x5800703C C   FIELD 08w01 DATAENDIE: DATAENDIE
0x5800703C C   FIELD 09w01 DHOLDIE: DHOLDIE
0x5800703C C   FIELD 10w01 DBCKENDIE: DBCKENDIE
0x5800703C C   FIELD 11w01 DABORTIE: DABORTIE
0x5800703C C   FIELD 14w01 TXFIFOHEIE: TXFIFOHEIE
0x5800703C C   FIELD 15w01 RXFIFOHFIE: RXFIFOHFIE
0x5800703C C   FIELD 17w01 RXFIFOFIE: RXFIFOFIE
0x5800703C C   FIELD 18w01 TXFIFOEIE: TXFIFOEIE
0x5800703C C   FIELD 21w01 BUSYD0ENDIE: BUSYD0ENDIE
0x5800703C C   FIELD 22w01 SDIOITIE: SDIOITIE
0x5800703C C   FIELD 23w01 ACKFAILIE: ACKFAILIE
0x5800703C C   FIELD 24w01 ACKTIMEOUTIE: ACKTIMEOUTIE
0x5800703C C   FIELD 25w01 VSWENDIE: VSWENDIE
0x5800703C C   FIELD 26w01 CKSTOPIE: CKSTOPIE
0x5800703C C   FIELD 28w01 IDMABTCIE: IDMABTCIE
0x58007040 B  REGISTER SDMMC_ACKTIMER (rw): The SDMMC_ACKTIMER register contains the acknowledgment timeout period, in SDMMC_CK bus clock periods. A counter loads the value from the SDMMC_ACKTIMER register, and starts decrementing when the data path state machine (DPSM) enters the Wait_Ack state. If the timer reaches 0 while the DPSM is in this states, the acknowledgment timeout status flag is set.
0x58007040 C   FIELD 00w25 ACKTIME: ACKTIME
0x58007050 B  REGISTER SDMMC_IDMACTRLR (rw): The receive and transmit FIFOs can be read or written as 32-bit wide registers. The FIFOs contain 32 entries on 32 sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO.
0x58007050 C   FIELD 00w01 IDMAEN: IDMAEN
0x58007050 C   FIELD 01w01 IDMABMODE: IDMABMODE
0x58007054 B  REGISTER SDMMC_IDMABSIZER (rw): The SDMMC_IDMABSIZER register contains the buffer size when in linked list configuration.
0x58007054 C   FIELD 05w12 IDMABNDT: IDMABNDT
0x58007058 B  REGISTER SDMMC_IDMABASER (rw): The SDMMC_IDMABASER register contains the memory buffer base address in single buffer configuration and linked list configuration.
0x58007058 C   FIELD 00w32 IDMABASE: IDMABASE
0x58007064 B  REGISTER SDMMC_IDMALAR (rw): SDMMC IDMA linked list address register
0x58007064 C   FIELD 02w14 IDMALA: IDMALA
0x58007064 C   FIELD 29w01 ABR: ABR
0x58007064 C   FIELD 30w01 ULS: ULS
0x58007064 C   FIELD 31w01 ULA: ULA
0x58007068 B  REGISTER SDMMC_IDMABAR (rw): SDMMC IDMA linked list memory base register
0x58007068 C   FIELD 02w30 IDMABA: IDMABA
0x58007080 B  REGISTER SDMMC_FIFOR0 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58007080 C   FIELD 00w32 FIFODATA: FIFODATA
0x58007084 B  REGISTER SDMMC_FIFOR1 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58007084 C   FIELD 00w32 FIFODATA: FIFODATA
0x58007088 B  REGISTER SDMMC_FIFOR2 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58007088 C   FIELD 00w32 FIFODATA: FIFODATA
0x5800708C B  REGISTER SDMMC_FIFOR3 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x5800708C C   FIELD 00w32 FIFODATA: FIFODATA
0x58007090 B  REGISTER SDMMC_FIFOR4 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58007090 C   FIELD 00w32 FIFODATA: FIFODATA
0x58007094 B  REGISTER SDMMC_FIFOR5 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58007094 C   FIELD 00w32 FIFODATA: FIFODATA
0x58007098 B  REGISTER SDMMC_FIFOR6 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x58007098 C   FIELD 00w32 FIFODATA: FIFODATA
0x5800709C B  REGISTER SDMMC_FIFOR7 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x5800709C C   FIELD 00w32 FIFODATA: FIFODATA
0x580070A0 B  REGISTER SDMMC_FIFOR8 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580070A0 C   FIELD 00w32 FIFODATA: FIFODATA
0x580070A4 B  REGISTER SDMMC_FIFOR9 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580070A4 C   FIELD 00w32 FIFODATA: FIFODATA
0x580070A8 B  REGISTER SDMMC_FIFOR10 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580070A8 C   FIELD 00w32 FIFODATA: FIFODATA
0x580070AC B  REGISTER SDMMC_FIFOR11 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580070AC C   FIELD 00w32 FIFODATA: FIFODATA
0x580070B0 B  REGISTER SDMMC_FIFOR12 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580070B0 C   FIELD 00w32 FIFODATA: FIFODATA
0x580070B4 B  REGISTER SDMMC_FIFOR13 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580070B4 C   FIELD 00w32 FIFODATA: FIFODATA
0x580070B8 B  REGISTER SDMMC_FIFOR14 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580070B8 C   FIELD 00w32 FIFODATA: FIFODATA
0x580070BC B  REGISTER SDMMC_FIFOR15 (rw): The receive and transmit FIFOs can be only read or written as word (32-bit) wide registers. The FIFOs contain 16 entries on sequential addresses. This allows the CPU to use its load and store multiple operands to read from/write to the FIFO. The FIFO register interface takes care of correct data alignment inside the FIFO, the FIFO register address used by the CPU does matter. When accessing SDMMC_FIFOR with half word or byte access an AHB bus fault is generated.
0x580070BC C   FIELD 00w32 FIFODATA: FIFODATA
0x580073F4 B  REGISTER SDMMC_VERR (ro): SDMMC version register
0x580073F4 C   FIELD 00w04 MINREV: MINREV
0x580073F4 C   FIELD 04w04 MAJREV: MAJREV
0x580073F8 B  REGISTER SDMMC_IPIDR (ro): SDMMC identification register
0x580073F8 C   FIELD 00w32 IP_ID: IP_ID
0x580073FC B  REGISTER SDMMC_SIDR (ro): SDMMC size ID register
0x580073FC C   FIELD 00w32 SID: SID
0x58008000 A PERIPHERAL DLYBSD2
0x58008000 B  REGISTER DLYB_CR (rw): DLYB control register
0x58008000 C   FIELD 00w01 DEN: DEN
0x58008000 C   FIELD 01w01 SEN: SEN
0x58008004 B  REGISTER DLYB_CFGR: DLYB configuration register
0x58008004 C   FIELD 00w04 SEL (rw): SEL
0x58008004 C   FIELD 08w07 UNIT (rw): UNIT
0x58008004 C   FIELD 16w12 LNG (ro): LNG
0x58008004 C   FIELD 31w01 LNGF (ro): LNGF
0x580083F4 B  REGISTER DLYB_VERR (ro): DLYB IP version register
0x580083F4 C   FIELD 00w04 MINREV: MINREV
0x580083F4 C   FIELD 04w04 MAJREV: MAJREV
0x580083F8 B  REGISTER DLYB_IPIDR (ro): DLYB IP identification register
0x580083F8 C   FIELD 00w32 ID: ID
0x580083FC B  REGISTER DLYB_SIDR (ro): DLYB size ID register
0x580083FC C   FIELD 00w32 SID: SID
0x58009000 A PERIPHERAL CRC1
0x58009000 B  REGISTER CRC_DR (rw): CRC data register
0x58009000 C   FIELD 00w32 DR: DR
0x58009004 B  REGISTER CRC_IDR (rw): CRC independent data register
0x58009004 C   FIELD 00w32 IDR: IDR
0x58009008 B  REGISTER CRC_CR (rw): CRC control register
0x58009008 C   FIELD 00w01 RESET: RESET
0x58009008 C   FIELD 03w02 POLYSIZE: POLYSIZE
0x58009008 C   FIELD 05w02 REV_IN: REV_IN
0x58009008 C   FIELD 07w01 REV_OUT: REV_OUT
0x58009010 B  REGISTER CRC_INIT (rw): CRC initial value
0x58009010 C   FIELD 00w32 CRC_INIT: CRC_INIT
0x58009014 B  REGISTER CRC_POL (rw): CRC polynomial
0x58009014 C   FIELD 00w32 POL: POL
0x5800A000 A PERIPHERAL ETH_MAC_MMC
0x5800A000 B  REGISTER ETH_MACCR (rw): The MAC Configuration Register establishes the operating mode of the MAC.
0x5800A000 C   FIELD 00w01 RE (rw): RE
0x5800A000 C   FIELD 01w01 TE (rw): TE
0x5800A000 C   FIELD 02w02 PRELEN (rw): PRELEN
0x5800A000 C   FIELD 04w01 DC (rw): DC
0x5800A000 C   FIELD 05w02 BL (rw): BL
0x5800A000 C   FIELD 08w01 DR (rw): DR
0x5800A000 C   FIELD 09w01 DCRS (rw): DCRS
0x5800A000 C   FIELD 10w01 DO (rw): DO
0x5800A000 C   FIELD 11w01 ECRSFD (rw): ECRSFD
0x5800A000 C   FIELD 12w01 LM (rw): LM
0x5800A000 C   FIELD 13w01 DM (rw): DM
0x5800A000 C   FIELD 14w01 FES (rw): FES
0x5800A000 C   FIELD 15w01 PS (rw): PS
0x5800A000 C   FIELD 16w01 JE (rw): JE
0x5800A000 C   FIELD 17w01 JD (rw): JD
0x5800A000 C   FIELD 18w01 BE (rw): BE
0x5800A000 C   FIELD 19w01 WD (rw): WD
0x5800A000 C   FIELD 20w01 ACS (rw): ACS
0x5800A000 C   FIELD 21w01 CST (rw): CST
0x5800A000 C   FIELD 22w01 S2KP (rw): S2KP
0x5800A000 C   FIELD 23w01 GPSLCE (rw): GPSLCE
0x5800A000 C   FIELD 24w03 IPG (rw): IPG
0x5800A000 C   FIELD 27w01 IPC (rw): IPC
0x5800A000 C   FIELD 28w03 SARC (rw): SARC
0x5800A000 C   FIELD 31w01 ARPEN (rw): ARPEN
0x5800A004 B  REGISTER ETH_MACECR (rw): The MAC Extended Configuration Register establishes the operating mode of the MAC.
0x5800A004 C   FIELD 00w14 GPSL (rw): GPSL
0x5800A004 C   FIELD 16w01 DCRCC (rw): DCRCC
0x5800A004 C   FIELD 17w01 SPEN (rw): SPEN
0x5800A004 C   FIELD 18w01 USP (rw): USP
0x5800A004 C   FIELD 24w01 EIPGEN (rw): EIPGEN
0x5800A004 C   FIELD 25w05 EIPG (rw): EIPG
0x5800A008 B  REGISTER ETH_MACPFR (rw): The MAC Packet Filter register contains the filter controls for receiving packets. Some of the controls from this register go to the address check block of the MAC which performs the first level of address filtering. The second level of filtering is performed on the incoming packet based on other controls such as Pass Bad Packets and Pass Control Packets.
0x5800A008 C   FIELD 00w01 PR (rw): PR
0x5800A008 C   FIELD 01w01 HUC (rw): HUC
0x5800A008 C   FIELD 02w01 HMC (rw): HMC
0x5800A008 C   FIELD 03w01 DAIF (rw): DAIF
0x5800A008 C   FIELD 04w01 PM (rw): PM
0x5800A008 C   FIELD 05w01 DBF (rw): DBF
0x5800A008 C   FIELD 06w02 PCF (rw): PCF
0x5800A008 C   FIELD 08w01 SAIF (rw): SAIF
0x5800A008 C   FIELD 09w01 SAF (rw): SAF
0x5800A008 C   FIELD 10w01 HPF (rw): HPF
0x5800A008 C   FIELD 16w01 VTFE (rw): VTFE
0x5800A008 C   FIELD 20w01 IPFE (rw): IPFE
0x5800A008 C   FIELD 21w01 DNTU (rw): DNTU
0x5800A008 C   FIELD 31w01 RA (rw): RA
0x5800A00C B  REGISTER ETH_MACWTR (rw): The Watchdog Timeout register controls the watchdog timeout for received packets.
0x5800A00C C   FIELD 00w04 WTO (rw): WTO
0x5800A00C C   FIELD 08w01 PWE (rw): PWE
0x5800A010 B  REGISTER ETH_MACHT0R (rw): The Hash Table Register 0 contains the first 32 bits of the Hash table (64 bits). For Hash filtering, the content of the destination address in the incoming packet is passed through the CRC logic and the upper six bits of the CRC register are used to index the content of the Hash table. The most significant bits determines the register to be used (Hash Table Register 0 or 1). The Hash value of the destination address is calculated in the following way: Calculate the 32-bit CRC for the DA (See IEEE 802.3, Section 3.2.8 for the steps to calculate CRC32). Perform bitwise reversal for the value obtained in Step 1. Take the upper 7 or 8 bits from the value obtained in Step 2. If the corresponding bit value of the register is 1, the packet is accepted. Otherwise, it is rejected. If the PM bit is set in ETH_MACPFR, all multicast packets are accepted regardless of the multicast Hash values. If the Hash Table register is configured to be double-synchronized to the GMII clock domain, the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the Hash Table Register X registers are written.
0x5800A010 C   FIELD 00w32 HT31T0 (rw): HT31T0
0x5800A014 B  REGISTER ETH_MACHT1R (rw): The Hash Table Register 1contains the last 32 bits of the Hash table (64 bits). For Hash filtering, the content of the destination address in the incoming packet is passed through the CRC logic and the upper six bits of the CRC register are used to index the content of the Hash table. The most significant bits determines the register to be used (Hash Table Register 0 or 1). The Hash value of the destination address is calculated in the following way: Calculate the 32-bit CRC for the DA (See IEEE 802.3, Section 3.2.8 for the steps to calculate CRC32). Perform bitwise reversal for the value obtained in Step 1. Take the upper 7 or 8 bits from the value obtained in Step 2. If the corresponding bit value of the register is 1, the packet is accepted. Otherwise, it is rejected. If the PM bit is set in ETH_MACPFR, all multicast packets are accepted regardless of the multicast Hash values. If the Hash Table register is configured to be double-synchronized to the GMII clock domain, the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the Hash Table Register X registers are written.
0x5800A014 C   FIELD 00w32 HT63T32 (rw): HT63T32
0x5800A050 B  REGISTER ETH_MACVTR (rw): The VLAN Tag register identifies the IEEE 802.1Q VLAN type packets.
0x5800A050 C   FIELD 00w16 VL (rw): VL
0x5800A050 C   FIELD 16w01 ETV (rw): ETV
0x5800A050 C   FIELD 17w01 VTIM (rw): VTIM
0x5800A050 C   FIELD 18w01 ESVL (rw): ESVL
0x5800A050 C   FIELD 19w01 ERSVLM (rw): ERSVLM
0x5800A050 C   FIELD 20w01 DOVLTC (rw): DOVLTC
0x5800A050 C   FIELD 21w02 EVLS (rw): EVLS
0x5800A050 C   FIELD 24w01 EVLRXS (rw): EVLRXS
0x5800A050 C   FIELD 25w01 VTHM (rw): VTHM
0x5800A050 C   FIELD 26w01 EDVLP (rw): EDVLP
0x5800A050 C   FIELD 27w01 ERIVLT (rw): ERIVLT
0x5800A050 C   FIELD 28w02 EIVLS (rw): EIVLS
0x5800A050 C   FIELD 31w01 EIVLRXS (rw): EIVLRXS
0x5800A058 B  REGISTER ETH_MACVHTR (rw): When the ERSVLM bit of ETH_MACHT1R register is set, the 16-bit VLAN Hash Table register is used for group address filtering based on the VLAN tag. For Hash filtering, the content of the 16-bit VLAN tag or 12-bit VLAN ID (based on the ETV bit of ETH_MACVTR register) in the incoming packet is passed through the CRC logic. The upper four bits of the calculated CRC are used to index the contents of the VLAN Hash table. For example, a Hash value of 1000 selects Bit 8 of the VLAN Hash table. The Hash value of the destination address is calculated in the following way: Calculate the 32-bit CRC for the VLAN tag or ID (For steps to calculate CRC32, see Section 3.2.8 of IEEE 802.3). Perform bitwise reversal for the value obtained in step 1. Take the upper four bits from the value obtained in step 2. If the VLAN Hash Table register is configured to be double-synchronized to the GMII clock domain, the synchronization is triggered only when Bits[15:8] (in little-endian mode) or Bits[7:0] (in big-endian mode) of this register are written.
0x5800A058 C   FIELD 00w16 VLHT (rw): VLHT
0x5800A060 B  REGISTER ETH_MACVIR (rw): The VLAN Tag Inclusion or Replacement register contains the VLAN tag for insertion or replacement in the Transmit packets. It also contains the VLAN tag insertion controls.
0x5800A060 C   FIELD 00w16 VLT (rw): VLT
0x5800A060 C   FIELD 16w02 VLC (rw): VLC
0x5800A060 C   FIELD 18w01 VLP (rw): VLP
0x5800A060 C   FIELD 19w01 CSVL (rw): CSVL
0x5800A060 C   FIELD 20w01 VLTI (rw): VLTI
0x5800A064 B  REGISTER ETH_MACIVIR (rw): The Inner VLAN Tag Inclusion or Replacement register contains the inner VLAN tag to be inserted or replaced in the Transmit packet. It also contains the inner VLAN tag insertion controls.
0x5800A064 C   FIELD 00w16 VLT (rw): VLT
0x5800A064 C   FIELD 16w02 VLC (rw): VLC
0x5800A064 C   FIELD 18w01 VLP (rw): VLP
0x5800A064 C   FIELD 19w01 CSVL (rw): CSVL
0x5800A064 C   FIELD 20w01 VLTI (rw): VLTI
0x5800A070 B  REGISTER ETH_MACQ0TxFCR (rw): The Flow Control register controls the generation and reception of the Control (Pause Command) packets by the Flow control module of the MAC. A Write to a register with the Busy bit set to 1 triggers the Flow Control block to generate a Pause packet. The fields of the control packet are selected as specified in the 802.3x specification, and the Pause Time value from this register is used in the Pause Time field of the control packet. The Busy bit remains set until the control packet is transferred onto the cable. The application must make sure that the Busy bit is cleared before writing to the register.
0x5800A070 C   FIELD 00w01 FCB_BPA (rw): FCB_BPA
0x5800A070 C   FIELD 01w01 TFE (rw): TFE
0x5800A070 C   FIELD 04w03 PLT (rw): PLT
0x5800A070 C   FIELD 07w01 DZPQ (rw): DZPQ
0x5800A070 C   FIELD 16w16 PT (rw): PT
0x5800A090 B  REGISTER ETH_MACRxFCR (rw): The Receive Flow Control register controls the pausing of MAC Transmit based on the received Pause packet.
0x5800A090 C   FIELD 00w01 RFE (rw): RFE
0x5800A090 C   FIELD 01w01 UP (rw): UP
0x5800A098 B  REGISTER ETH_MACTxQPMR (ro): The transmit queue priority mapping 0 register contains the priority values assigned to Tx queue 0 and tx queue 1.
0x5800A098 C   FIELD 00w08 PSTQ0 (ro): PSTQ0
0x5800A098 C   FIELD 08w08 PSTQ1 (ro): PSTQ1
0x5800A0A0 B  REGISTER ETH_MACRxQC0R (rw): The Receive Queue Control 0 register controls the queue management in the MAC Receiver.
0x5800A0A0 C   FIELD 00w02 RXQ0EN (rw): RXQ0EN
0x5800A0A0 C   FIELD 02w02 RXQ1EN (rw): RXQ1EN
0x5800A0A4 B  REGISTER ETH_MACRxQC1R (rw): The Receive Queue Control 1 register controls queue 1 management in the MAC receiver.
0x5800A0A4 C   FIELD 00w03 AVCPQ (rw): AVCPQ
0x5800A0A4 C   FIELD 04w03 AVPTPQ (rw): AVPTPQ
0x5800A0A4 C   FIELD 12w03 UPQ (rw): UPQ
0x5800A0A4 C   FIELD 16w03 MCBCQ (rw): MCBCQ
0x5800A0A4 C   FIELD 20w01 MCBCQEN (rw): MCBCQEN
0x5800A0A4 C   FIELD 21w01 TACPQE (rw): TACPQE
0x5800A0A8 B  REGISTER ETH_MACRxQC2R (rw): This register controls the routing of tagged packets based on the USP (user priority) field of the received packets to the Rx queue 0 and 1.
0x5800A0A8 C   FIELD 00w08 PSRQ0 (rw): PSRQ0
0x5800A0A8 C   FIELD 08w08 PSRQ1 (rw): PSRQ1
0x5800A0B0 B  REGISTER ETH_MACISR (ro): The Interrupt Status register contains the status of interrupts.
0x5800A0B0 C   FIELD 00w01 RGSMIIIS (ro): RGSMIIIS
0x5800A0B0 C   FIELD 03w01 PHYIS (ro): PHYIS
0x5800A0B0 C   FIELD 04w01 PMTIS (ro): PMTIS
0x5800A0B0 C   FIELD 05w01 LPIIS (ro): LPIIS
0x5800A0B0 C   FIELD 08w01 MMCIS (ro): MMCIS
0x5800A0B0 C   FIELD 09w01 MMCRXIS (ro): MMCRXIS
0x5800A0B0 C   FIELD 10w01 MMCTXIS (ro): MMCTXIS
0x5800A0B0 C   FIELD 12w01 TSIS (ro): TSIS
0x5800A0B0 C   FIELD 13w01 TXSTSIS (ro): TXSTSIS
0x5800A0B0 C   FIELD 14w01 RXSTSIS (ro): RXSTSIS
0x5800A0B4 B  REGISTER ETH_MACIER (rw): The Interrupt Enable register contains the masks for generating the interrupts.
0x5800A0B4 C   FIELD 00w01 RGSMIIIE (rw): RGSMIIIE
0x5800A0B4 C   FIELD 03w01 PHYIE (rw): PHYIE
0x5800A0B4 C   FIELD 04w01 PMTIE (rw): PMTIE
0x5800A0B4 C   FIELD 05w01 LPIIE (rw): LPIIE
0x5800A0B4 C   FIELD 12w01 TSIE (rw): TSIE
0x5800A0B4 C   FIELD 13w01 TXSTSIE (rw): TXSTSIE
0x5800A0B4 C   FIELD 14w01 RXSTSIE (rw): RXSTSIE
0x5800A0B8 B  REGISTER ETH_MACRxTxSR (ro): The Receive Transmit Status register contains the Receive and Transmit Error status.
0x5800A0B8 C   FIELD 00w01 TJT (ro): TJT
0x5800A0B8 C   FIELD 01w01 NCARR (ro): NCARR
0x5800A0B8 C   FIELD 02w01 LCARR (ro): LCARR
0x5800A0B8 C   FIELD 03w01 EXDEF (ro): EXDEF
0x5800A0B8 C   FIELD 04w01 LCOL (ro): LCOL
0x5800A0B8 C   FIELD 05w01 EXCOL (ro): EXCOL
0x5800A0B8 C   FIELD 08w01 RWT (ro): RWT
0x5800A0C0 B  REGISTER ETH_MACPCSR (rw): The PMT Control and Status Register is present only when you select the PMT module in coreConsultant.
0x5800A0C0 C   FIELD 00w01 PWRDWN (rw): PWRDWN
0x5800A0C0 C   FIELD 01w01 MGKPKTEN (rw): MGKPKTEN
0x5800A0C0 C   FIELD 02w01 RWKPKTEN (rw): RWKPKTEN
0x5800A0C0 C   FIELD 05w01 MGKPRCVD (ro): MGKPRCVD
0x5800A0C0 C   FIELD 06w01 RWKPRCVD (ro): RWKPRCVD
0x5800A0C0 C   FIELD 09w01 GLBLUCAST (rw): GLBLUCAST
0x5800A0C0 C   FIELD 10w01 RWKPFE (rw): RWKPFE
0x5800A0C0 C   FIELD 24w05 RWKPTR (ro): RWKPTR
0x5800A0C0 C   FIELD 31w01 RWKFILTRST (rw): RWKFILTRST
0x5800A0C4 B  REGISTER ETH_MACRWKPFR (rw): The LPI Control and Status Register controls the LPI functions and provides the LPI interrupt status. The status bits are cleared when this register is read.
0x5800A0C4 C   FIELD 00w01 TLPIEN (ro): TLPIEN
0x5800A0C4 C   FIELD 01w01 TLPIEX (ro): TLPIEX
0x5800A0C4 C   FIELD 02w01 RLPIEN (ro): RLPIEN
0x5800A0C4 C   FIELD 03w01 RLPIEX (ro): RLPIEX
0x5800A0C4 C   FIELD 08w01 TLPIST (ro): TLPIST
0x5800A0C4 C   FIELD 09w01 RLPIST (ro): RLPIST
0x5800A0C4 C   FIELD 16w01 LPIEN (rw): LPIEN
0x5800A0C4 C   FIELD 17w01 PLS (rw): PLS
0x5800A0C4 C   FIELD 18w01 PLSEN (rw): PLSEN
0x5800A0C4 C   FIELD 19w01 LPITXA (rw): LPITXA
0x5800A0C4 C   FIELD 20w01 LPITE (rw): LPITE
0x5800A0D0 B  REGISTER ETH_MACLCSR (rw): The LPI Control and Status Register controls the LPI functions and provides the LPI interrupt status. The status bits are cleared when this register is read.
0x5800A0D0 C   FIELD 00w01 TLPIEN (ro): TLPIEN
0x5800A0D0 C   FIELD 01w01 TLPIEX (ro): TLPIEX
0x5800A0D0 C   FIELD 02w01 RLPIEN (ro): RLPIEN
0x5800A0D0 C   FIELD 03w01 RLPIEX (ro): RLPIEX
0x5800A0D0 C   FIELD 08w01 TLPIST (ro): TLPIST
0x5800A0D0 C   FIELD 09w01 RLPIST (ro): RLPIST
0x5800A0D0 C   FIELD 16w01 LPIEN (rw): LPIEN
0x5800A0D0 C   FIELD 17w01 PLS (rw): PLS
0x5800A0D0 C   FIELD 18w01 PLSEN (rw): PLSEN
0x5800A0D0 C   FIELD 19w01 LPITXA (rw): LPITXA
0x5800A0D0 C   FIELD 20w01 LPITE (rw): LPITE
0x5800A0D4 B  REGISTER ETH_MACLTCR (rw): The LPI Timers Control register controls the timeout values in the LPI states. It specifies the time for which the MAC transmits the LPI pattern and also the time for which the MAC waits before resuming the normal transmission.
0x5800A0D4 C   FIELD 00w16 TWT (rw): TWT
0x5800A0D4 C   FIELD 16w10 LST (rw): LST
0x5800A0D8 B  REGISTER ETH_MACLETR (rw): The LPI Entry Timer Register is used to store the LPI Idle Timer Value in Micro-Seconds.
0x5800A0D8 C   FIELD 03w17 LPIET (rw): LPIET
0x5800A0DC B  REGISTER ETH_MAC1USTCR (rw): This register controls the generation of the Reference time (1-microsecond tick) for all the LPI timers. This timer has to be programmed by the software initially.
0x5800A0DC C   FIELD 00w12 TIC_1US_CNTR (rw): TIC_1US_CNTR
0x5800A0F8 B  REGISTER ETH_MACPHYCSR (rw): The PHY Interface Control and Status register indicates the status signals received by the, RGMII interface from the PHY.
0x5800A0F8 C   FIELD 00w01 TC (rw): TC
0x5800A0F8 C   FIELD 01w01 LUD (rw): LUD
0x5800A0F8 C   FIELD 16w01 LNKMOD (ro): LNKMOD
0x5800A0F8 C   FIELD 17w02 LNKSPEED (ro): LNKSPEED
0x5800A0F8 C   FIELD 19w01 LNKSTS (ro): LNKSTS
0x5800A0F8 C   FIELD 20w01 JABTO (ro): JABTO
0x5800A0F8 C   FIELD 21w01 FALSCARDET (ro): FALSCARDET
0x5800A110 B  REGISTER ETH_MACVR (ro): The version register identifies the version of the Ethernet peripheral.
0x5800A110 C   FIELD 00w08 SNPSVER (ro): SNPSVER
0x5800A110 C   FIELD 08w08 USERVER (ro): USERVER
0x5800A114 B  REGISTER ETH_MACDR (ro): The Debug register provides the debug status of various MAC blocks.
0x5800A114 C   FIELD 00w01 RPESTS (ro): RPESTS
0x5800A114 C   FIELD 01w02 RFCFCSTS (ro): RFCFCSTS
0x5800A114 C   FIELD 16w01 TPESTS (ro): TPESTS
0x5800A114 C   FIELD 17w02 TFCSTS (ro): TFCSTS
0x5800A120 B  REGISTER ETH_MACHWF1R (ro): This register indicates the presence of second set of the optional features or functions of the Ethernet peripheral. The software driver can use this register to dynamically enable or disable the programs related to the optional blocks.
0x5800A120 C   FIELD 00w05 RXFIFOSIZE (ro): RXFIFOSIZE
0x5800A120 C   FIELD 06w05 TXFIFOSIZE (ro): TXFIFOSIZE
0x5800A120 C   FIELD 11w01 OSTEN (ro): OSTEN
0x5800A120 C   FIELD 12w01 PTOEN (ro): PTOEN
0x5800A120 C   FIELD 13w01 ADVTHWORD (ro): ADVTHWORD
0x5800A120 C   FIELD 14w02 ADDR64 (ro): ADDR64
0x5800A120 C   FIELD 16w01 DCBEN (ro): DCBEN
0x5800A120 C   FIELD 17w01 SPHEN (ro): SPHEN
0x5800A120 C   FIELD 18w01 TSOEN (ro): TSOEN
0x5800A120 C   FIELD 19w01 DBGMEMA (ro): DBGMEMA
0x5800A120 C   FIELD 20w01 AVSEL (ro): AVSEL
0x5800A120 C   FIELD 24w02 HASHTBLSZ (ro): HASHTBLSZ
0x5800A120 C   FIELD 27w04 L3L4FNUM (ro): L3L4FNUM
0x5800A124 B  REGISTER ETH_MACHWF2R (ro): This register indicates the presence of third set of the optional features or functions of the Ethernet peripheral. The software driver can use this register to dynamically enable or disable the programs related to the optional blocks.
0x5800A124 C   FIELD 00w04 RXQCNT (ro): RXQCNT
0x5800A124 C   FIELD 06w04 TXQCNT (ro): TXQCNT
0x5800A124 C   FIELD 12w04 RXCHCNT (ro): RXCHCNT
0x5800A124 C   FIELD 18w04 TXCHCNT (ro): TXCHCNT
0x5800A124 C   FIELD 24w03 PPSOUTNUM (ro): PPSOUTNUM
0x5800A124 C   FIELD 28w03 AUXSNAPNUM (ro): AUXSNAPNUM
0x5800A200 B  REGISTER ETH_MACMDIOAR (rw): The MDIO Address register controls the management cycles to external PHY through a management interface.
0x5800A200 C   FIELD 00w01 GB (rw): GB
0x5800A200 C   FIELD 01w01 C45E (rw): C45E
0x5800A200 C   FIELD 02w02 GOC (rw): GOC
0x5800A200 C   FIELD 04w01 SKAP (rw): SKAP
0x5800A200 C   FIELD 08w04 CR (rw): CR
0x5800A200 C   FIELD 12w03 NTC (rw): NTC
0x5800A200 C   FIELD 16w05 RDA (rw): RDA
0x5800A200 C   FIELD 21w05 PA (rw): PA
0x5800A200 C   FIELD 26w01 BTB (rw): BTB
0x5800A200 C   FIELD 27w01 PSE (rw): PSE
0x5800A204 B  REGISTER ETH_MACMDIODR (rw): The MDIO Data register stores the Write data to be written to the PHY register located at the address specified in ETH_MACMDIOAR. This register also stores the Read data from the PHY register located at the address specified by MDIO Address register.
0x5800A204 C   FIELD 00w16 GD (rw): GD
0x5800A204 C   FIELD 16w16 RA (rw): RA
0x5800A300 B  REGISTER ETH_MACA0HR (rw): The MAC Address0 High register holds the upper 16 bits of the first 6-byte MAC address of the station. The first DA byte that is received on the GMII interface corresponds to the LS byte (Bits [7:0]) of the MAC Address Low register. For example, if 0x112233445566 is received (0x11 in lane 0 of the first column) on the GMII as the destination address, then the MacAddress0 Register [47:0] is compared with 0x665544332211. If the MAC address registers are configured to be double-synchronized to the GMII clock domains, then the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address0 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
0x5800A300 C   FIELD 00w16 ADDRHI (rw): ADDRHI
0x5800A300 C   FIELD 31w01 AE (ro): AE
0x5800A304 B  REGISTER ETH_MACA0LR (rw): The MAC Address x Low register holds the lower 32 bits of the 6-byte first MAC address of the station.
0x5800A304 C   FIELD 00w32 ADDRLO (rw): ADDRLO
0x5800A308 B  REGISTER ETH_MACA1HR (rw): The MAC Address x High register holds the upper 16 bits of the second 6-byte MAC address of the station.
0x5800A308 C   FIELD 00w16 ADDRHI (rw): ADDRHI
0x5800A308 C   FIELD 24w06 MBC (rw): MBC
0x5800A308 C   FIELD 30w01 SA (rw): SA
0x5800A308 C   FIELD 31w01 AE (rw): AE
0x5800A30C B  REGISTER ETH_MACA1LR (rw): The MAC Address x Low register holds the lower 32 bits of the 6-byte first MAC address of the station.
0x5800A30C C   FIELD 00w32 ADDRLO (rw): ADDRLO
0x5800A310 B  REGISTER ETH_MACA2HR (rw): The MAC Address x High register holds the upper 16 bits of the second 6-byte MAC address of the station.
0x5800A310 C   FIELD 00w16 ADDRHI (rw): ADDRHI
0x5800A310 C   FIELD 24w06 MBC (rw): MBC
0x5800A310 C   FIELD 30w01 SA (rw): SA
0x5800A310 C   FIELD 31w01 AE (rw): AE
0x5800A314 B  REGISTER ETH_MACA2LR (rw): The MAC Address x Low register holds the lower 32 bits of the 6-byte first MAC address of the station.
0x5800A314 C   FIELD 00w32 ADDRLO (rw): ADDRLO
0x5800A318 B  REGISTER ETH_MACA3HR (rw): The MAC Address x High register holds the upper 16 bits of the second 6-byte MAC address of the station.
0x5800A318 C   FIELD 00w16 ADDRHI (rw): ADDRHI
0x5800A318 C   FIELD 24w06 MBC (rw): MBC
0x5800A318 C   FIELD 30w01 SA (rw): SA
0x5800A318 C   FIELD 31w01 AE (rw): AE
0x5800A31C B  REGISTER ETH_MACA3LR (rw): The MAC Address x Low register holds the lower 32 bits of the 6-byte first MAC address of the station.
0x5800A31C C   FIELD 00w32 ADDRLO (rw): ADDRLO
0x5800A700 B  REGISTER MMC_CONTROL (rw): This register configures the MMC operating mode.
0x5800A700 C   FIELD 00w01 CNTRST (rw): CNTRST
0x5800A700 C   FIELD 01w01 CNTSTOPRO (rw): CNTSTOPRO
0x5800A700 C   FIELD 02w01 RSTONRD (rw): RSTONRD
0x5800A700 C   FIELD 03w01 CNTFREEZ (rw): CNTFREEZ
0x5800A700 C   FIELD 04w01 CNTPRST (rw): CNTPRST
0x5800A700 C   FIELD 05w01 CNTPRSTLVL (rw): CNTPRSTLVL
0x5800A700 C   FIELD 08w01 UCDBC (rw): UCDBC
0x5800A704 B  REGISTER MMC_RX_INTERRUPT (ro): This register maintains the interrupts generated from all Receive statistics counters. The MMC Receive Interrupt register maintains the interrupts that are generated when the following occur: Receive statistic counters reach half of their maximum values (0x8000_0000 for 32 bit counter and 0x8000 for 16 bit counter). Receive statistic counters cross their maximum values (0xFFFF_FFFF for 32 bit counter and 0xFFFF for 16 bit counter). When the Counter Stop Rollover is set, interrupts are set but the counter remains at all-ones. The MMC Receive Interrupt register is a 32 bit register. An interrupt bit is cleared when the respective MMC counter that caused the interrupt is read. The least significant byte lane (Bits[7:0]) of the respective counter must be read to clear the interrupt bit.
0x5800A704 C   FIELD 05w01 RXCRCERPIS (ro): RXCRCERPIS
0x5800A704 C   FIELD 06w01 RXALGNERPIS (ro): RXALGNERPIS
0x5800A704 C   FIELD 17w01 RXUCGPIS (ro): RXUCGPIS
0x5800A704 C   FIELD 26w01 RXLPIUSCIS (ro): RXLPIUSCIS
0x5800A704 C   FIELD 27w01 RXLPITRCIS (ro): RXLPITRCIS
0x5800A708 B  REGISTER MMC_TX_INTERRUPT (ro): This register maintains the interrupts generated from all Transmit statistics counters. The MMC Transmit Interrupt register maintains the interrupts generated when transmit statistic counters reach half their maximum values (0x8000_0000 for 32 bit counter and 0x8000 for 16 bit counter), and when they cross their maximum values (0xFFFF_FFFF for 32-bit counter and 0xFFFF for 16-bit counter). When Counter Stop Rollover is set, the interrupts are set but the counter remains at all-ones. The MMC Transmit Interrupt register is a 32 bit register. An interrupt bit is cleared when the respective MMC counter that caused the interrupt is read. The least significant byte lane (Bits[7:0]) of the respective counter must be read to clear the interrupt bit.
0x5800A708 C   FIELD 14w01 TXSCOLGPIS (ro): TXSCOLGPIS
0x5800A708 C   FIELD 15w01 TXMCOLGPIS (ro): TXMCOLGPIS
0x5800A708 C   FIELD 21w01 TXGPKTIS (ro): TXGPKTIS
0x5800A708 C   FIELD 26w01 TXLPIUSCIS (ro): TXLPIUSCIS
0x5800A708 C   FIELD 27w01 TXLPITRCIS (ro): TXLPITRCIS
0x5800A70C B  REGISTER MMC_RX_INTERRUPT_MASK (rw): The MMC Receive Interrupt Mask register maintains the masks for the interrupts generated when receive statistic counters reach half of their maximum value or the maximum values.
0x5800A70C C   FIELD 05w01 RXCRCERPIM (rw): RXCRCERPIM
0x5800A70C C   FIELD 06w01 RXALGNERPIM (rw): RXALGNERPIM
0x5800A70C C   FIELD 17w01 RXUCGPIM (rw): RXUCGPIM
0x5800A70C C   FIELD 26w01 RXLPIUSCIM (rw): RXLPIUSCIM
0x5800A70C C   FIELD 27w01 RXLPITRCIM (ro): RXLPITRCIM
0x5800A710 B  REGISTER MMC_TX_INTERRUPT_MASK (rw): This register maintains the masks for interrupts generated from all Transmit statistics counters. The MMC Transmit Interrupt Mask register maintains the masks for the interrupts generated when the transmit statistic counters reach half of their maximum value or the maximum values. This register is 32 bit wide. This register is present only when any one of the MMC Transmit Counters is selected during core configuration.
0x5800A710 C   FIELD 14w01 TXSCOLGPIM (rw): TXSCOLGPIM
0x5800A710 C   FIELD 15w01 TXMCOLGPIM (rw): TXMCOLGPIM
0x5800A710 C   FIELD 21w01 TXGPKTIM (rw): TXGPKTIM
0x5800A710 C   FIELD 26w01 TXLPIUSCIM (rw): TXLPIUSCIM
0x5800A710 C   FIELD 27w01 TXLPITRCIM (ro): TXLPITRCIM
0x5800A74C B  REGISTER TX_SINGLE_COLLISION_GOOD_PACKETS (ro): This register provides the number of successfully transmitted packets by Ethernet peripheral after a single collision in the half-duplex mode.
0x5800A74C C   FIELD 00w32 TXSNGLCOLG (ro): TXSNGLCOLG
0x5800A750 B  REGISTER TX_MULTIPLE_COLLISION_GOOD_PACKETS (ro): This register provides the number of successfully transmitted packets by Ethernet peripheral after multiple collisions in the half-duplex mode.
0x5800A750 C   FIELD 00w32 TXMULTCOLG (ro): TXMULTCOLG
0x5800A768 B  REGISTER TX_PACKET_COUNT_GOOD (ro): This register provides the number of good packets transmitted by Ethernet peripheral.
0x5800A768 C   FIELD 00w32 TXPKTG (ro): TXPKTG
0x5800A794 B  REGISTER RX_CRC_ERROR_PACKETS (ro): This register provides the number of packets received by Ethernet peripheral with CRC error.
0x5800A794 C   FIELD 00w32 RXCRCERR (ro): RXCRCERR
0x5800A798 B  REGISTER RX_ALIGNMENT_ERROR_PACKETS (ro): This register provides the number of packets received by Ethernet peripheral with alignment (dribble) error. It is valid only in 10/100 mode.
0x5800A798 C   FIELD 00w32 RXALGNERR (ro): RXALGNERR
0x5800A7C4 B  REGISTER RX_UNICAST_PACKETS_GOOD (ro): This register provides the number of good unicast packets received by Ethernet peripheral.
0x5800A7C4 C   FIELD 00w32 RXUCASTG (ro): RXUCASTG
0x5800A7EC B  REGISTER TX_LPI_USEC_CNTR (ro): This register provides the number of microseconds Tx LPI is asserted by Ethernet peripheral.
0x5800A7EC C   FIELD 00w32 TXLPIUSC (ro): TXLPIUSC
0x5800A7F0 B  REGISTER TX_LPI_TRAN_CNTR (ro): This register provides the number of times Ethernet peripheral has entered Tx LPI.
0x5800A7F0 C   FIELD 00w32 TXLPITRC (ro): TXLPITRC
0x5800A7F4 B  REGISTER RX_LPI_USEC_CNTR (ro): This register provides the number of microseconds Rx LPI is sampled by Ethernet peripheral.
0x5800A7F4 C   FIELD 00w32 RXLPIUSC (ro): RXLPIUSC
0x5800A7F8 B  REGISTER RX_LPI_TRAN_CNTR (ro): This register provides the number of times Ethernet peripheral has entered Rx LPI.
0x5800A7F8 C   FIELD 00w32 RXLPITRC (ro): RXLPITRC
0x5800A900 B  REGISTER ETH_MACL3L4C0R (rw): The Layer 3 and Layer 4 Control register controls the operations of filter 0 of Layer 3 and Layer 4. This register is reserved if the Layer 3 and Layer 4 Filtering feature is not selected during core configuration.
0x5800A900 C   FIELD 00w01 L3PEN0 (rw): L3PEN0
0x5800A900 C   FIELD 02w01 L3SAM0 (rw): L3SAM0
0x5800A900 C   FIELD 03w01 L3SAIM0 (rw): L3SAIM0
0x5800A900 C   FIELD 04w01 L3DAM0 (rw): L3DAM0
0x5800A900 C   FIELD 05w01 L3DAIM0 (rw): L3DAIM0
0x5800A900 C   FIELD 06w05 L3HSBM0 (rw): L3HSBM0
0x5800A900 C   FIELD 11w05 L3HDBM0 (rw): L3HDBM0
0x5800A900 C   FIELD 16w01 L4PEN0 (rw): L4PEN0
0x5800A900 C   FIELD 18w01 L4SPM0 (rw): L4SPM0
0x5800A900 C   FIELD 19w01 L4SPIM0 (rw): L4SPIM0
0x5800A900 C   FIELD 20w01 L4DPM0 (rw): L4DPM0
0x5800A900 C   FIELD 21w01 L4DPIM0 (rw): L4DPIM0
0x5800A904 B  REGISTER ETH_MACL4A0R (rw): Layer4 address filter 0 register
0x5800A904 C   FIELD 00w16 L4SP0 (rw): L4SP0
0x5800A904 C   FIELD 16w16 L4DP0 (rw): L4DP0
0x5800A910 B  REGISTER ETH_MACL3A00R (rw): For IPv4 packets, the Layer 3 Address 0 Register 0 register contains the 32-bit IP Source Address field. For IPv6 packets, it contains Bits[31:0] of the 128-bit IP Source Address or Destination Address field.
0x5800A910 C   FIELD 00w32 L3A00 (rw): L3A00
0x5800A914 B  REGISTER ETH_MACL3A10R (rw): For IPv4 packets, the Layer 3 Address 1 Register 0 register contains the 32-bit IP Destination Address field. For IPv6 packets, it contains Bits[63:32] of the 128-bit IP Source Address or Destination Address field.
0x5800A914 C   FIELD 00w32 L3A10 (rw): L3A10
0x5800A918 B  REGISTER ETH_MACL3A20 (rw): The Layer 3 Address 2 Register 0 register is reserved for IPv4 packets. For IPv6 packets, it contains Bits[95:64] of 128-bit IP Source Address or Destination Address field.
0x5800A918 C   FIELD 00w32 L3A20 (rw): L3A20
0x5800A91C B  REGISTER ETH_MACL3A30 (rw): The Layer 3 Address 3 Register 0 register is reserved for IPv4 packets. For IPv6 packets, it contains Bits[127:96] of 128-bit IP Source Address or Destination Address field.
0x5800A91C C   FIELD 00w32 L3A30 (rw): L3A30
0x5800A930 B  REGISTER ETH_MACL3L4C1R (rw): The Layer 3 and Layer 4 Control register controls the operations of filter 0 of Layer 3 and Layer 4.
0x5800A930 C   FIELD 00w01 L3PEN1 (rw): L3PEN1
0x5800A930 C   FIELD 02w01 L3SAM1 (rw): L3SAM1
0x5800A930 C   FIELD 03w01 L3SAIM1 (rw): L3SAIM1
0x5800A930 C   FIELD 04w01 L3DAM1 (rw): L3DAM1
0x5800A930 C   FIELD 05w01 L3DAIM1 (rw): L3DAIM1
0x5800A930 C   FIELD 06w05 L3HSBM1 (rw): L3HSBM1
0x5800A930 C   FIELD 11w05 L3HDBM1 (rw): L3HDBM1
0x5800A930 C   FIELD 16w01 L4PEN1 (rw): L4PEN1
0x5800A930 C   FIELD 18w01 L4SPM1 (rw): L4SPM1
0x5800A930 C   FIELD 19w01 L4SPIM1 (rw): L4SPIM1
0x5800A930 C   FIELD 20w01 L4DPM1 (rw): L4DPM1
0x5800A930 C   FIELD 21w01 L4DPIM1 (rw): L4DPIM1
0x5800A934 B  REGISTER ETH_MACL4A1R (rw): The Layer 4 Address 0 register and registers 580 through 667 are reserved (RO with default value) if Enable Layer 3 and Layer 4 Packet Filter option is not selected while configuring the core. You can configure the Layer 3 and Layer 4 Address Registers to be double-synchronized by selecting the Synchronize Layer 3 and Layer 4 Address Registers to Rx Clock Domain option while configuring the core. When you select this option, the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the Layer 3 and Layer 4 Address Registers are written. For proper synchronization updates, you should perform consecutive writes to same Layer 3 and Layer 4 Address Registers after at least four clock cycles delay of the destination clock.
0x5800A934 C   FIELD 00w16 L4SP1 (rw): L4SP1
0x5800A934 C   FIELD 16w16 L4DP1 (rw): L4DP1
0x5800A940 B  REGISTER ETH_MACL3A01R (rw): For IPv4 packets, the Layer 3 Address 0 Register 0 register contains the 32-bit IP Source Address field. For IPv6 packets, it contains Bits[31:0] of the 128-bit IP Source Address or Destination Address field.
0x5800A940 C   FIELD 00w32 L3A01 (rw): L3A01
0x5800A944 B  REGISTER ETH_MACL3A11R (rw): For IPv4 packets, the Layer 3 Address 1 Register 0 register contains the 32-bit IP Destination Address field. For IPv6 packets, it contains Bits[63:32] of the 128-bit IP Source Address or Destination Address field.
0x5800A944 C   FIELD 00w32 L3A11 (rw): L3A11
0x5800A948 B  REGISTER ETH_MACL3A21R (rw): The Layer 3 Address 2 Register 0 register is reserved for IPv4 packets. For IPv6 packets, it contains Bits[95:64] of 128-bit IP Source Address or Destination Address field.
0x5800A948 C   FIELD 00w32 L3A21 (rw): L3A21
0x5800A94C B  REGISTER ETH_MACL3A31R (rw): The Layer 3 Address 3 Register 0 register is reserved for IPv4 packets. For IPv6 packets, it contains Bits[127:96] of 128-bit IP Source Address or Destination Address field.
0x5800A94C C   FIELD 00w32 L3A31 (rw): L3A31
0x5800AAE0 B  REGISTER ETH_MACARPAR (rw): The ARP Address register contains the IPv4 Destination Address of the MAC.
0x5800AAE0 C   FIELD 00w32 ARPPA (rw): ARPPA
0x5800AB00 B  REGISTER ETH_MACTSCR (rw): This register controls the operation of the System Time generator and processing of PTP packets for timestamping in the Receiver.
0x5800AB00 C   FIELD 00w01 TSENA (rw): TSENA
0x5800AB00 C   FIELD 01w01 TSCFUPDT (rw): TSCFUPDT
0x5800AB00 C   FIELD 02w01 TSINIT (rw): TSINIT
0x5800AB00 C   FIELD 03w01 TSUPDT (rw): TSUPDT
0x5800AB00 C   FIELD 05w01 TSADDREG (rw): TSADDREG
0x5800AB00 C   FIELD 08w01 TSENALL (rw): TSENALL
0x5800AB00 C   FIELD 09w01 TSCTRLSSR (rw): TSCTRLSSR
0x5800AB00 C   FIELD 10w01 TSVER2ENA (rw): TSVER2ENA
0x5800AB00 C   FIELD 11w01 TSIPENA (rw): TSIPENA
0x5800AB00 C   FIELD 12w01 TSIPV6ENA (rw): TSIPV6ENA
0x5800AB00 C   FIELD 13w01 TSIPV4ENA (rw): TSIPV4ENA
0x5800AB00 C   FIELD 14w01 TSEVNTENA (rw): TSEVNTENA
0x5800AB00 C   FIELD 15w01 TSMSTRENA (rw): TSMSTRENA
0x5800AB00 C   FIELD 16w02 SNAPTYPSEL (rw): SNAPTYPSEL
0x5800AB00 C   FIELD 18w01 TSENMACADDR (rw): TSENMACADDR
0x5800AB00 C   FIELD 19w01 CSC (ro): CSC
0x5800AB00 C   FIELD 24w01 TXTSSTSM (rw): TXTSSTSM
0x5800AB00 C   FIELD 28w01 AV8021ASMEN (rw): AV8021ASMEN
0x5800AB04 B  REGISTER ETH_MACSSIR (rw): The Sub-second Increment register is present only when the IEEE 1588 timestamp feature is selected without an external timestamp input. In Coarse Update mode [Bit 1 in ETH_MACTSCR register, the value in this register is added to the system time every clock cycle of HCLK. In Fine Update mode, the value in this register is added to the system time whenever the Accumulator gets an overflow.
0x5800AB04 C   FIELD 08w08 SNSINC (rw): SNSINC
0x5800AB04 C   FIELD 16w08 SSINC (rw): SSINC
0x5800AB08 B  REGISTER ETH_MACSTSR (ro): The System Time Seconds register, along with System Time Nanoseconds register, indicates the current value of the system time maintained by the MAC. Though it is updated on a continuous basis, there is some delay from the actual time because of clock domain transfer latencies (from HCLK to CSR clock). This register is present only when the IEEE 1588 Timestamp feature is selected without external timestamp input.
0x5800AB08 C   FIELD 00w32 TSS (ro): TSS
0x5800AB0C B  REGISTER ETH_MACSTNR (ro): The System Time Nanoseconds register, along with System Time Seconds register, indicates the current value of the system time maintained by the MAC. This register is present only when the IEEE 1588 Timestamp feature is selected without external timestamp input.
0x5800AB0C C   FIELD 00w31 TSSS (ro): TSSS
0x5800AB10 B  REGISTER ETH_MACSTSUR (rw): The System Time Seconds Update register, along with the System Time Nanoseconds Update register, initializes or updates the system time maintained by the MAC. You must write both registers before setting the TSINIT or TSUPDT bits in ETH_MACTSCR register. This register is present only when the IEEE 1588 Timestamp feature is selected without external timestamp input.
0x5800AB10 C   FIELD 00w32 TSS (rw): TSS
0x5800AB14 B  REGISTER ETH_MACSTNUR (rw): This register is present only when the IEEE 1588 timestamp feature is selected without external timestamp input.
0x5800AB14 C   FIELD 00w31 TSSS (rw): TSSS
0x5800AB14 C   FIELD 31w01 ADDSUB (rw): ADDSUB
0x5800AB18 B  REGISTER ETH_MACTSAR (rw): The Timestamp Addend register is present only when the IEEE 1588 Timestamp feature is selected without external timestamp input. This register value is used only when the system time is configured for Fine Update mode (TSCFUPDT bit in the ETH_MACTSCR register). The content of this register is added to a 32-bit accumulator in every clock cycle (of HCLK) and the system time is updated whenever the accumulator overflows.
0x5800AB18 C   FIELD 00w32 TSAR (rw): TSAR
0x5800AB20 B  REGISTER ETH_MACTSSR (ro): The Timestamp Status register is present only when the IEEE 1588 Timestamp feature is selected. All bits except Bits[27:25] gets cleared when the application reads this register.
0x5800AB20 C   FIELD 00w01 TSSOVF (ro): TSSOVF
0x5800AB20 C   FIELD 01w01 TSTARGT0 (ro): TSTARGT0
0x5800AB20 C   FIELD 02w01 AUXTSTRIG (ro): AUXTSTRIG
0x5800AB20 C   FIELD 03w01 TSTRGTERR0 (ro): TSTRGTERR0
0x5800AB20 C   FIELD 15w01 TXTSSIS (ro): TXTSSIS
0x5800AB20 C   FIELD 16w04 ATSSTN (ro): ATSSTN
0x5800AB20 C   FIELD 24w01 ATSSTM (ro): ATSSTM
0x5800AB20 C   FIELD 25w05 ATSNS (ro): ATSNS
0x5800AB30 B  REGISTER ETH_MACTxTSSNR (ro): This register contains the nanosecond part of timestamp captured for Transmit packets when Tx status is disabled.
0x5800AB30 C   FIELD 00w31 TXTSSLO (ro): TXTSSLO
0x5800AB30 C   FIELD 31w01 TXTSSMIS (ro): TXTSSMIS
0x5800AB34 B  REGISTER ETH_MACTxTSSSR (ro): The register contains the higher 32 bits of the timestamp (in seconds) captured when a PTP packet is transmitted.
0x5800AB34 C   FIELD 00w32 TXTSSHI (ro): TXTSSHI
0x5800AB40 B  REGISTER ETH_MACACR (rw): The Auxiliary Timestamp Control register controls the Auxiliary Timestamp snapshot.
0x5800AB40 C   FIELD 00w01 ATSFC (rw): ATSFC
0x5800AB40 C   FIELD 04w01 ATSEN0 (rw): ATSEN0
0x5800AB40 C   FIELD 05w01 ATSEN1 (rw): ATSEN1
0x5800AB40 C   FIELD 06w01 ATSEN2 (rw): ATSEN2
0x5800AB40 C   FIELD 07w01 ATSEN3 (rw): ATSEN3
0x5800AB48 B  REGISTER ETH_MACATSNR (ro): The Auxiliary Timestamp Nanoseconds register, along with ETH_MACATSSR, gives the 64-bit timestamp stored as auxiliary snapshot. These two registers form the read port of a 64-bit wide FIFO with a depth of 4 words. You can store multiple snapshots in this FIFO. Bits[29:25] in ETH_MACTSSR indicate the fill-level of the FIFO. The top of the FIFO is removed only when the last byte of MAC Register 91 (Auxiliary Timestamp - Seconds Register) is read. In the little-endian mode, this means when Bits[31:24] are read and in big-endian mode, Bits[7:0] are read.
0x5800AB48 C   FIELD 00w31 AUXTSLO (ro): AUXTSLO
0x5800AB4C B  REGISTER ETH_MACATSSR (ro): The Auxiliary Timestamp - Seconds register contains the lower 32 bits of the Seconds field of the auxiliary timestamp register.
0x5800AB4C C   FIELD 00w32 AUXTSHI (ro): AUXTSHI
0x5800AB50 B  REGISTER ETH_MACTSIACR (rw): The MAC Timestamp Ingress Asymmetry Correction register contains the Ingress Asymmetry Correction value to be used while updating correction field in PDelay_Resp PTP messages.
0x5800AB50 C   FIELD 00w32 OSTIAC (rw): OSTIAC
0x5800AB54 B  REGISTER ETH_MACTSEACR (rw): The MAC Timestamp Egress Asymmetry Correction register contains the Egress Asymmetry Correction value to be used while updating the correction field in PDelay_Req PTP messages.
0x5800AB54 C   FIELD 00w32 OSTEAC (rw): OSTEAC
0x5800AB58 B  REGISTER ETH_MACTSICNR (rw): This register contains the correction value in nanoseconds to be used with the captured timestamp value in the ingress path.
0x5800AB58 C   FIELD 00w32 TSIC (rw): TSIC
0x5800AB5C B  REGISTER ETH_MACTSECNR (rw): This register contains the correction value in nanoseconds to be used with the captured timestamp value in the egress path.
0x5800AB5C C   FIELD 00w32 TSEC (rw): TSEC
0x5800AB70 B  REGISTER ETH_MACPPSCR (rw): The PPS Control register is present only when the Timestamp feature is selected and External Timestamp is not enabled. Bits[30:24] of this register are valid only when four Flexible PPS outputs are selected. Bits[22:16] are valid only when three or more Flexible PPS outputs are selected. Bits[14:8] are valid only when two or more Flexible PPS outputs are selected. Bits[6:4] are valid only when Flexible PPS feature is selected.
0x5800AB70 C   FIELD 00w04 PPSCTRL (rw): PPSCTRL
0x5800AB70 C   FIELD 04w01 PPSEN0 (rw): PPSEN0
0x5800AB70 C   FIELD 05w02 TRGTMODSEL0 (rw): TRGTMODSEL0
0x5800AB80 B  REGISTER ETH_MACPPSTTSR (rw): The PPS Target Time Seconds register, along with PPS Target Time Nanoseconds register, is used to schedule an interrupt event [Bit 1 of ETH_MACTSSR] when the system time exceeds the value programmed in these registers.
0x5800AB80 C   FIELD 00w32 TSTRH0 (rw): TSTRH0
0x5800AB84 B  REGISTER ETH_MACPPSTTNR (rw): The PPS Target Time Nanoseconds register is present only when more than one Flexible PPS output is selected.
0x5800AB84 C   FIELD 00w31 TTSL0 (rw): TTSL0
0x5800AB84 C   FIELD 31w01 TRGTBUSY0 (rw): TRGTBUSY0
0x5800AB88 B  REGISTER ETH_MACPPSIR (rw): The PPS Interval register contains the number of units of sub-second increment value between the rising edges of PPS signal output (ptp_pps_o[0]).
0x5800AB88 C   FIELD 00w32 PPSINT0 (rw): PPSINT0
0x5800AB8C B  REGISTER ETH_MACPPSWR (rw): The PPS Width register contains the number of units of sub-second increment value between the rising and corresponding falling edges of PPS signal output (ptp_pps_o).
0x5800AB8C C   FIELD 00w32 PPSWIDTH0 (rw): PPSWIDTH0
0x5800ABC0 B  REGISTER ETH_MACPOCR (rw): This register controls the PTP Offload Engine operation. This register is available only when the Enable PTP Timestamp Offload feature is selected.
0x5800ABC0 C   FIELD 00w01 PTOEN (rw): PTOEN
0x5800ABC0 C   FIELD 01w01 ASYNCEN (rw): ASYNCEN
0x5800ABC0 C   FIELD 02w01 APDREQEN (rw): APDREQEN
0x5800ABC0 C   FIELD 04w01 ASYNCTRIG (rw): ASYNCTRIG
0x5800ABC0 C   FIELD 05w01 APDREQTRIG (rw): APDREQTRIG
0x5800ABC0 C   FIELD 06w01 DRRDIS (rw): DRRDIS
0x5800ABC0 C   FIELD 08w08 DN (rw): DN
0x5800ABC4 B  REGISTER ETH_MACSPI0R (rw): This register contains Bits[31:0] of the 80-bit Source Port Identity of the PTP node. This register is available only when the Enable PTP Timestamp Offload feature is selected.
0x5800ABC4 C   FIELD 00w32 SPI0 (rw): SPI0
0x5800ABC8 B  REGISTER ETH_MACSPI1R (rw): This register contains Bits[63:32] of the 80-bit Source Port Identity of the PTP node. This register is available only when the Enable PTP Timestamp Offload feature is selected.
0x5800ABC8 C   FIELD 00w32 SPI1 (rw): SPI1
0x5800ABCC B  REGISTER ETH_MACSPI2R (rw): This register contains Bits[79:64] of the 80-bit Source Port Identity of the PTP node.
0x5800ABCC C   FIELD 00w16 SPI2 (rw): SPI2
0x5800ABD0 B  REGISTER ETH_MACLMIR (rw): This register contains the periodic intervals for automatic PTP packet generation.
0x5800ABD0 C   FIELD 00w08 LSI (rw): LSI
0x5800ABD0 C   FIELD 08w03 DRSYNCR (rw): DRSYNCR
0x5800ABD0 C   FIELD 24w08 LMPDRI (rw): LMPDRI
0x5800AC00 A PERIPHERAL ETH_MTL
0x5800AC00 B  REGISTER ETH_MTLOMR (rw): The Operating Mode register establishes the Transmit and Receive operating modes and commands.
0x5800AC00 C   FIELD 01w01 DTXSTS (rw): DTXSTS
0x5800AC00 C   FIELD 02w01 RAA (rw): RAA
0x5800AC00 C   FIELD 05w02 SCHALG (rw): SCHALG
0x5800AC00 C   FIELD 08w01 CNTPRST (rw): CNTPRST
0x5800AC00 C   FIELD 09w01 CNTCLR (rw): CNTCLR
0x5800AC20 B  REGISTER ETH_MTLISR (ro): The software driver (application) reads this register during interrupt service routine or polling to determine the interrupt status of MTL queues and the MAC.
0x5800AC20 C   FIELD 00w01 Q0IS (ro): Q0IS
0x5800AC20 C   FIELD 01w01 Q1IS (ro): Q1IS
0x5800AD00 B  REGISTER ETH_MTLTxQ0OMR (rw): Tx queue 0 operating mode Register
0x5800AD00 C   FIELD 00w01 FTQ (rw): FTQ
0x5800AD00 C   FIELD 01w01 TSF (rw): TSF
0x5800AD00 C   FIELD 02w02 TXQEN (rw): TXQEN
0x5800AD00 C   FIELD 04w02 TTC (rw): TTC
0x5800AD00 C   FIELD 16w09 TQS (rw): TQS
0x5800AD04 B  REGISTER ETH_MTLTxQ0UR (ro): Tx queue 0 underflow register
0x5800AD04 C   FIELD 00w11 UFFRMCNT (ro): UFFRMCNT
0x5800AD04 C   FIELD 11w01 UFCNTOVF (ro): UFCNTOVF
0x5800AD08 B  REGISTER ETH_MTLTxQ0DR (ro): Tx queue 0 underflow register
0x5800AD08 C   FIELD 00w01 TXQPAUSED (ro): TXQPAUSED
0x5800AD08 C   FIELD 01w02 TRCSTS (ro): TRCSTS
0x5800AD08 C   FIELD 03w01 TWCSTS (ro): TWCSTS
0x5800AD08 C   FIELD 04w01 TXQSTS (ro): TXQSTS
0x5800AD08 C   FIELD 05w01 TXSTSFSTS (ro): TXSTSFSTS
0x5800AD08 C   FIELD 16w03 PTXQ (ro): PTXQ
0x5800AD08 C   FIELD 20w03 STXSTSF (ro): STXSTSF
0x5800AD14 B  REGISTER ETH_MTLTxQ0ESR (ro): Tx queue x ETS status Register
0x5800AD14 C   FIELD 00w24 ABS (ro): ABS
0x5800AD2C B  REGISTER ETH_MTLQ0ICSR (rw): Queue 0 interrupt control status Register
0x5800AD2C C   FIELD 00w01 TXUNFIS (ro): TXUNFIS
0x5800AD2C C   FIELD 01w01 ABPSIS (rw): ABPSIS
0x5800AD2C C   FIELD 08w01 TXUIE (rw): TXUIE
0x5800AD2C C   FIELD 09w01 ABPSIE (rw): ABPSIE
0x5800AD2C C   FIELD 16w01 RXOVFIS (rw): RXOVFIS
0x5800AD2C C   FIELD 24w01 RXOIE (rw): RXOIE
0x5800AD30 B  REGISTER ETH_MTLRxQ0OMR (rw): Rx queue 0 operating mode register
0x5800AD30 C   FIELD 00w02 RTC (rw): RTC
0x5800AD30 C   FIELD 03w01 FUP (rw): FUP
0x5800AD30 C   FIELD 04w01 FEP (rw): FEP
0x5800AD30 C   FIELD 05w01 RSF (rw): RSF
0x5800AD30 C   FIELD 06w01 DIS_TCP_EF (rw): DIS_TCP_EF
0x5800AD30 C   FIELD 07w01 EHFC (rw): EHFC
0x5800AD30 C   FIELD 08w03 RFA (rw): RFA
0x5800AD30 C   FIELD 14w03 RFD (rw): RFD
0x5800AD30 C   FIELD 20w04 RQS (ro): RQS
0x5800AD34 B  REGISTER ETH_MTLRxQ0MPOCR (ro): Rx queue 0 missed packet and overflow counter register
0x5800AD34 C   FIELD 00w11 OVFPKTCNT (ro): OVFPKTCNT
0x5800AD34 C   FIELD 11w01 OVFCNTOVF (ro): OVFCNTOVF
0x5800AD34 C   FIELD 16w11 MISPKTCNT (ro): MISPKTCNT
0x5800AD34 C   FIELD 27w01 MISCNTOVF (ro): MISCNTOVF
0x5800AD38 B  REGISTER ETH_MTLRxQ0DR (ro): Rx queue i debug register
0x5800AD38 C   FIELD 00w01 RWCSTS (ro): RWCSTS
0x5800AD38 C   FIELD 01w02 RRCSTS (ro): RRCSTS
0x5800AD38 C   FIELD 04w02 RXQSTS (ro): RXQSTS
0x5800AD38 C   FIELD 16w14 PRXQ (ro): PRXQ
0x5800AD3C B  REGISTER ETH_MTLRxQ0CR (rw): Rx queue 0 control register
0x5800AD3C C   FIELD 00w03 RXQ_WEGT (ro): RXQ_WEGT
0x5800AD3C C   FIELD 03w01 RXQ_FRM_ARBIT (ro): RXQ_FRM_ARBIT
0x5800AD40 B  REGISTER ETH_MTLTxQ1OMR (rw): Tx queue 1 operating mode Register
0x5800AD40 C   FIELD 00w01 FTQ (rw): FTQ
0x5800AD40 C   FIELD 01w01 TSF (rw): TSF
0x5800AD40 C   FIELD 02w02 TXQEN (rw): TXQEN
0x5800AD40 C   FIELD 04w02 TTC (rw): TTC
0x5800AD40 C   FIELD 16w09 TQS (rw): TQS
0x5800AD44 B  REGISTER ETH_MTLTxQ1UR (ro): Tx queue 1 underflow register
0x5800AD44 C   FIELD 00w11 UFFRMCNT (ro): UFFRMCNT
0x5800AD44 C   FIELD 11w01 UFCNTOVF (ro): UFCNTOVF
0x5800AD48 B  REGISTER ETH_MTLTxQ1DR (ro): Tx queue 1 underflow register
0x5800AD48 C   FIELD 00w01 TXQPAUSED (ro): TXQPAUSED
0x5800AD48 C   FIELD 01w02 TRCSTS (ro): TRCSTS
0x5800AD48 C   FIELD 03w01 TWCSTS (ro): TWCSTS
0x5800AD48 C   FIELD 04w01 TXQSTS (ro): TXQSTS
0x5800AD48 C   FIELD 05w01 TXSTSFSTS (ro): TXSTSFSTS
0x5800AD48 C   FIELD 16w03 PTXQ (ro): PTXQ
0x5800AD48 C   FIELD 20w03 STXSTSF (ro): STXSTSF
0x5800AD50 B  REGISTER ETH_MTLTxQ1ECR (rw): The Queue ETS Control register controls the enhanced transmission selection operation.
0x5800AD50 C   FIELD 02w01 AVALG (rw): AVALG
0x5800AD50 C   FIELD 03w01 CC (rw): CC
0x5800AD50 C   FIELD 04w03 SLC (rw): SLC
0x5800AD54 B  REGISTER ETH_MTLTxQ1ESR (ro): Tx queue x ETS status Register
0x5800AD54 C   FIELD 00w24 ABS (ro): ABS
0x5800AD58 B  REGISTER ETH_MTLTxQ1QWR (rw): This register provides the average traffic transmitted on queue 1.
0x5800AD58 C   FIELD 00w21 ISCQW (rw): ISCQW
0x5800AD5C B  REGISTER ETH_MTLTxQ1SSCR (rw): The sendSlopeCredit register contains the sendSlope credit value required for the credit-based shaper algorithm for the Queue.
0x5800AD5C C   FIELD 00w14 SSC (rw): SSC
0x5800AD60 B  REGISTER ETH_MTLTxQ1HCR (rw): The hiCredit register contains the hiCredit value required for the credit-based shaper algorithm for the Queue.
0x5800AD60 C   FIELD 00w29 HC (rw): HC
0x5800AD64 B  REGISTER ETH_MTLTxQ1LCR (rw): The loCredit register contains the loCredit value required for the credit-based shaper algorithm for the Queue.
0x5800AD64 C   FIELD 00w29 LC (rw): LC
0x5800AD6C B  REGISTER ETH_MTLQ1ICSR (rw): Queue 1 interrupt control status Register
0x5800AD6C C   FIELD 00w01 TXUNFIS (ro): TXUNFIS
0x5800AD6C C   FIELD 01w01 ABPSIS (rw): ABPSIS
0x5800AD6C C   FIELD 08w01 TXUIE (rw): TXUIE
0x5800AD6C C   FIELD 09w01 ABPSIE (rw): ABPSIE
0x5800AD6C C   FIELD 16w01 RXOVFIS (rw): RXOVFIS
0x5800AD6C C   FIELD 24w01 RXOIE (rw): RXOIE
0x5800AD70 B  REGISTER ETH_MTLRxQ1OMR (rw): Rx queue 1 operating mode register
0x5800AD70 C   FIELD 00w02 RTC (rw): RTC
0x5800AD70 C   FIELD 03w01 FUP (rw): FUP
0x5800AD70 C   FIELD 04w01 FEP (rw): FEP
0x5800AD70 C   FIELD 05w01 RSF (rw): RSF
0x5800AD70 C   FIELD 06w01 DIS_TCP_EF (rw): DIS_TCP_EF
0x5800AD70 C   FIELD 07w01 EHFC (rw): EHFC
0x5800AD70 C   FIELD 08w03 RFA (rw): RFA
0x5800AD70 C   FIELD 14w03 RFD (rw): RFD
0x5800AD70 C   FIELD 20w04 RQS (ro): RQS
0x5800AD74 B  REGISTER ETH_MTLRxQ1MPOCR (ro): Rx queue 1 missed packet and overflow counter register
0x5800AD74 C   FIELD 00w11 OVFPKTCNT (ro): OVFPKTCNT
0x5800AD74 C   FIELD 11w01 OVFCNTOVF (ro): OVFCNTOVF
0x5800AD74 C   FIELD 16w11 MISPKTCNT (ro): MISPKTCNT
0x5800AD74 C   FIELD 27w01 MISCNTOVF (ro): MISCNTOVF
0x5800AD78 B  REGISTER ETH_MTLRxQ1DR (ro): Rx queue i debug register
0x5800AD78 C   FIELD 00w01 RWCSTS (ro): RWCSTS
0x5800AD78 C   FIELD 01w02 RRCSTS (ro): RRCSTS
0x5800AD78 C   FIELD 04w02 RXQSTS (ro): RXQSTS
0x5800AD78 C   FIELD 16w14 PRXQ (ro): PRXQ
0x5800AD7C B  REGISTER ETH_MTLRxQ1CR (rw): Rx queue 1 control register
0x5800AD7C C   FIELD 00w03 RXQ_WEGT (ro): RXQ_WEGT
0x5800AD7C C   FIELD 03w01 RXQ_FRM_ARBIT (ro): RXQ_FRM_ARBIT
0x5800B000 A PERIPHERAL ETH_DMA
0x5800B000 B  REGISTER ETH_DMAMR (rw): DMA mode register
0x5800B000 C   FIELD 00w01 SWR: Software Reset
0x5800B000 C   FIELD 02w03 TAA: TAA
0x5800B000 C   FIELD 11w01 TXPR: Transmit priority
0x5800B000 C   FIELD 12w03 PR: Priority ratio
0x5800B000 C   FIELD 16w02 INTM: Interrupt Mode
0x5800B004 B  REGISTER ETH_DMASBMR (rw): System bus mode register
0x5800B004 C   FIELD 00w01 FB: Fixed Burst Length
0x5800B004 C   FIELD 01w01 BLEN4: BLEN4
0x5800B004 C   FIELD 02w01 BLEN8: BLEN8
0x5800B004 C   FIELD 03w01 BLEN16: BLEN16
0x5800B004 C   FIELD 04w01 BLEN32: BLEN32
0x5800B004 C   FIELD 05w01 BLEN64: BLEN64
0x5800B004 C   FIELD 06w01 BLEN128: BLEN128
0x5800B004 C   FIELD 07w01 BLEN256: BLEN256
0x5800B004 C   FIELD 12w01 AAL: Address-Aligned Beats
0x5800B004 C   FIELD 13w01 ONEKBBE: ONEKBBE
0x5800B004 C   FIELD 16w02 RD_OSR_LMT: RD_OSR_LMT
0x5800B004 C   FIELD 24w02 WR_OSR_LMT: WR_OSR_LMT
0x5800B004 C   FIELD 30w01 LPI_XIT_PKT: LPI_XIT_PKT
0x5800B004 C   FIELD 31w01 EN_LPI: EN_LPI
0x5800B008 B  REGISTER ETH_DMAISR (ro): Interrupt status register
0x5800B008 C   FIELD 00w01 DC0IS: DMA Channel Interrupt Status
0x5800B008 C   FIELD 01w01 DC1IS: DC1IS
0x5800B008 C   FIELD 16w01 MTLIS: MTL Interrupt Status
0x5800B008 C   FIELD 17w01 MACIS: MAC Interrupt Status
0x5800B00C B  REGISTER ETH_DMADSR (ro): Debug status register
0x5800B00C C   FIELD 00w01 AXWHSTS: AHB Master Write Channel
0x5800B00C C   FIELD 01w01 AXRHSTS: AXRHSTS
0x5800B00C C   FIELD 08w04 RPS0: RPS0
0x5800B00C C   FIELD 12w04 TPS0: TPS0
0x5800B00C C   FIELD 16w04 RPS1: RPS1
0x5800B00C C   FIELD 20w04 TPS1: TPS1
0x5800B020 B  REGISTER ETH_DMAA4TxACR (rw): AXI4 transmit channel ACE control register
0x5800B020 C   FIELD 00w04 TDRC: TDRC
0x5800B020 C   FIELD 08w04 TEC: TEC
0x5800B020 C   FIELD 16w04 THC: THC
0x5800B024 B  REGISTER ETH_DMAA4RxACR (rw): AXI4 receive channel ACE control register
0x5800B024 C   FIELD 00w04 RDWC: RDWC
0x5800B024 C   FIELD 08w04 RPC: RPC
0x5800B024 C   FIELD 16w04 RHC: RHC
0x5800B024 C   FIELD 24w02 RDC: RDC
0x5800B028 B  REGISTER ETH_DMAA4DACR (rw): AXI4 descriptor ACE control register
0x5800B028 C   FIELD 00w04 TDWC: TDWC
0x5800B028 C   FIELD 04w02 TDWD: TDWD
0x5800B028 C   FIELD 08w04 RDRC: RDRC
0x5800B028 C   FIELD 16w03 RDP: RDP
0x5800B028 C   FIELD 20w03 WRP: WRP
0x5800B100 B  REGISTER ETH_DMAC0CR (rw): Channel 0 control register
0x5800B100 C   FIELD 00w14 MSS: MSS
0x5800B100 C   FIELD 16w01 PBLX8: PBLX8
0x5800B100 C   FIELD 18w03 DSL: DSL
0x5800B104 B  REGISTER ETH_DMAC0TxCR (rw): Channel 0 transmit control register
0x5800B104 C   FIELD 00w01 ST: ST
0x5800B104 C   FIELD 01w03 TCW: TCW
0x5800B104 C   FIELD 04w01 OSF: OSF
0x5800B104 C   FIELD 12w01 TSE: TSE
0x5800B104 C   FIELD 16w06 TXPBL: TXPBL
0x5800B104 C   FIELD 24w04 TQOS: TQOS
0x5800B108 B  REGISTER ETH_DMAC0RxCR (rw): Channel receive control register
0x5800B108 C   FIELD 00w01 SR: Start or Stop Receive Command
0x5800B108 C   FIELD 01w14 RBSZ: Receive Buffer size
0x5800B108 C   FIELD 16w06 RXPBL: RXPBL
0x5800B108 C   FIELD 24w04 RQOS: RQOS
0x5800B108 C   FIELD 31w01 RPF: DMA Rx Channel Packet Flush
0x5800B114 B  REGISTER ETH_DMAC0TxDLAR (rw): Channel i Tx descriptor list address register
0x5800B114 C   FIELD 03w29 TDESLA: Start of Transmit List
0x5800B11C B  REGISTER ETH_DMAC0RxDLAR (rw): Channel Rx descriptor list address register
0x5800B11C C   FIELD 03w29 RDESLA: Start of Receive List
0x5800B120 B  REGISTER ETH_DMAC0TxDTPR (rw): Channel Tx descriptor tail pointer register
0x5800B120 C   FIELD 03w29 TDT: Transmit Descriptor Tail Pointer
0x5800B128 B  REGISTER ETH_DMAC0RxDTPR (rw): Channel Rx descriptor tail pointer register
0x5800B128 C   FIELD 03w29 RDT: Receive Descriptor Tail Pointer
0x5800B12C B  REGISTER ETH_DMAC0TxRLR (rw): Channel Tx descriptor ring length register
0x5800B12C C   FIELD 00w10 TDRL: Transmit Descriptor Ring Length
0x5800B130 B  REGISTER ETH_DMAC0RxRLR (rw): Channel Rx descriptor ring length register
0x5800B130 C   FIELD 00w10 RDRL: Receive Descriptor Ring Length
0x5800B134 B  REGISTER ETH_DMAC0IER (rw): Channel interrupt enable register
0x5800B134 C   FIELD 00w01 TIE: Transmit Interrupt Enable
0x5800B134 C   FIELD 01w01 TXSE: Transmit Stopped Enable
0x5800B134 C   FIELD 02w01 TBUE: Transmit Buffer Unavailable Enable
0x5800B134 C   FIELD 06w01 RIE: Receive Interrupt Enable
0x5800B134 C   FIELD 07w01 RBUE: Receive Buffer Unavailable Enable
0x5800B134 C   FIELD 08w01 RSE: Receive Stopped Enable
0x5800B134 C   FIELD 09w01 RWTE: Receive Watchdog Timeout Enable
0x5800B134 C   FIELD 10w01 ETIE: Early Transmit Interrupt Enable
0x5800B134 C   FIELD 11w01 ERIE: Early Receive Interrupt Enable
0x5800B134 C   FIELD 12w01 FBEE: Fatal Bus Error Enable
0x5800B134 C   FIELD 13w01 CDEE: Context Descriptor Error Enable
0x5800B134 C   FIELD 14w01 AIE: Abnormal Interrupt Summary Enable
0x5800B134 C   FIELD 15w01 NIE: Normal Interrupt Summary Enable
0x5800B138 B  REGISTER ETH_DMAC0RxIWTR (rw): Channel Rx interrupt watchdog timer register
0x5800B138 C   FIELD 00w08 RWT: Receive Interrupt Watchdog Timer Count
0x5800B13C B  REGISTER ETH_DMAC0SFCSR (rw): Channel i slot function control status register
0x5800B13C C   FIELD 00w01 ESC: ESC
0x5800B13C C   FIELD 01w01 ASC: ASC
0x5800B13C C   FIELD 16w04 RSN: RSN
0x5800B144 B  REGISTER ETH_DMAC0CATxDR (ro): Channel current application transmit descriptor register
0x5800B144 C   FIELD 00w32 CURTDESAPTR: Application Transmit Descriptor Address Pointer
0x5800B14C B  REGISTER ETH_DMAC0CARxDR (ro): Channel 0 current application receive descriptor register
0x5800B14C C   FIELD 00w32 CURRDESAPTR: Application Transmit Descriptor Address Pointer
0x5800B154 B  REGISTER ETH_DMAC0CATxBR (ro): Channel 0 current application transmit buffer register
0x5800B154 C   FIELD 00w32 CURTBUFAPTR: Application Transmit Buffer Address Pointer
0x5800B15C B  REGISTER ETH_DMAC0CARxBR (ro): Channel current application receive buffer register
0x5800B15C C   FIELD 00w32 CURRBUFAPTR: Application Receive Buffer Address Pointer
0x5800B160 B  REGISTER ETH_DMAC0SR (rw): Channel status register
0x5800B160 C   FIELD 00w01 TI: Transmit Interrupt
0x5800B160 C   FIELD 01w01 TPS: Transmit Process Stopped
0x5800B160 C   FIELD 02w01 TBU: Transmit Buffer Unavailable
0x5800B160 C   FIELD 06w01 RI: Receive Interrupt
0x5800B160 C   FIELD 07w01 RBU: Receive Buffer Unavailable
0x5800B160 C   FIELD 08w01 RPS: Receive Process Stopped
0x5800B160 C   FIELD 09w01 RWT: Receive Watchdog Timeout
0x5800B160 C   FIELD 10w01 ETI: Early Transmit Interrupt
0x5800B160 C   FIELD 11w01 ERI: Early Receive Interrupt
0x5800B160 C   FIELD 12w01 FBE: Fatal Bus Error
0x5800B160 C   FIELD 13w01 CDE: Context Descriptor Error
0x5800B160 C   FIELD 14w01 AIS: Abnormal Interrupt Summary
0x5800B160 C   FIELD 15w01 NIS: Normal Interrupt Summary
0x5800B160 C   FIELD 16w03 TEB: Tx DMA Error Bits
0x5800B160 C   FIELD 19w03 REB: Rx DMA Error Bits
0x5800B16C B  REGISTER ETH_DMAC0MFCR (ro): Channel missed frame count register
0x5800B16C C   FIELD 00w11 MFC: Dropped Packet Counters
0x5800B16C C   FIELD 15w01 MFCO: Overflow status of the MFC Counter
0x5800B180 B  REGISTER ETH_DMAC1CR (rw): Channel 1 control register
0x5800B180 C   FIELD 00w14 MSS: MSS
0x5800B180 C   FIELD 16w01 PBLX8: PBLX8
0x5800B180 C   FIELD 18w03 DSL: DSL
0x5800B184 B  REGISTER ETH_DMAC1TxCR (rw): Channel 1 transmit control register
0x5800B184 C   FIELD 00w01 ST: ST
0x5800B184 C   FIELD 01w03 TCW: TCW
0x5800B184 C   FIELD 04w01 OSF: OSF
0x5800B184 C   FIELD 12w01 TSE: TSE
0x5800B184 C   FIELD 16w06 TXPBL: TXPBL
0x5800B184 C   FIELD 24w04 TQOS: TQOS
0x5800B194 B  REGISTER ETH_DMAC1TxDLAR (rw): Channel i Tx descriptor list address register
0x5800B194 C   FIELD 03w29 TDESLA: Start of Transmit List
0x5800B1A0 B  REGISTER ETH_DMAC1TxDTPR (rw): Channel Tx descriptor tail pointer register
0x5800B1A0 C   FIELD 03w29 TDT: Transmit Descriptor Tail Pointer
0x5800B1AC B  REGISTER ETH_DMAC1TxRLR (rw): Channel Tx descriptor ring length register
0x5800B1AC C   FIELD 00w10 TDRL: Transmit Descriptor Ring Length
0x5800B1B4 B  REGISTER ETH_DMAC1IER (rw): Channel interrupt enable register
0x5800B1B4 C   FIELD 00w01 TIE: Transmit Interrupt Enable
0x5800B1B4 C   FIELD 01w01 TXSE: Transmit Stopped Enable
0x5800B1B4 C   FIELD 02w01 TBUE: Transmit Buffer Unavailable Enable
0x5800B1B4 C   FIELD 06w01 RIE: Receive Interrupt Enable
0x5800B1B4 C   FIELD 07w01 RBUE: Receive Buffer Unavailable Enable
0x5800B1B4 C   FIELD 08w01 RSE: Receive Stopped Enable
0x5800B1B4 C   FIELD 09w01 RWTE: Receive Watchdog Timeout Enable
0x5800B1B4 C   FIELD 10w01 ETIE: Early Transmit Interrupt Enable
0x5800B1B4 C   FIELD 11w01 ERIE: Early Receive Interrupt Enable
0x5800B1B4 C   FIELD 12w01 FBEE: Fatal Bus Error Enable
0x5800B1B4 C   FIELD 13w01 CDEE: Context Descriptor Error Enable
0x5800B1B4 C   FIELD 14w01 AIE: Abnormal Interrupt Summary Enable
0x5800B1B4 C   FIELD 15w01 NIE: Normal Interrupt Summary Enable
0x5800B1BC B  REGISTER ETH_DMAC1SFCSR (rw): Channel i slot function control status register
0x5800B1BC C   FIELD 00w01 ESC: ESC
0x5800B1BC C   FIELD 01w01 ASC: ASC
0x5800B1BC C   FIELD 16w04 RSN: RSN
0x5800B1C4 B  REGISTER ETH_DMAC1CATxDR (ro): Channel current application transmit descriptor register
0x5800B1C4 C   FIELD 00w32 CURTDESAPTR: Application Transmit Descriptor Address Pointer
0x5800B1D4 B  REGISTER ETH_DMAC1CATxBR (ro): Channel 0 current application transmit buffer register
0x5800B1D4 C   FIELD 00w32 CURTBUFAPTR: Application Transmit Buffer Address Pointer
0x5800B1E0 B  REGISTER ETH_DMAC1SR (rw): Channel status register
0x5800B1E0 C   FIELD 00w01 TI: Transmit Interrupt
0x5800B1E0 C   FIELD 01w01 TPS: Transmit Process Stopped
0x5800B1E0 C   FIELD 02w01 TBU: Transmit Buffer Unavailable
0x5800B1E0 C   FIELD 06w01 RI: Receive Interrupt
0x5800B1E0 C   FIELD 07w01 RBU: Receive Buffer Unavailable
0x5800B1E0 C   FIELD 08w01 RPS: Receive Process Stopped
0x5800B1E0 C   FIELD 09w01 RWT: Receive Watchdog Timeout
0x5800B1E0 C   FIELD 10w01 ETI: Early Transmit Interrupt
0x5800B1E0 C   FIELD 11w01 ERI: Early Receive Interrupt
0x5800B1E0 C   FIELD 12w01 FBE: Fatal Bus Error
0x5800B1E0 C   FIELD 13w01 CDE: Context Descriptor Error
0x5800B1E0 C   FIELD 14w01 AIS: Abnormal Interrupt Summary
0x5800B1E0 C   FIELD 15w01 NIS: Normal Interrupt Summary
0x5800B1E0 C   FIELD 16w03 TEB: Tx DMA Error Bits
0x5800B1E0 C   FIELD 19w03 REB: Rx DMA Error Bits
0x5800B1EC B  REGISTER ETH_DMAC1MFCR (ro): Channel missed frame count register
0x5800B1EC C   FIELD 00w11 MFC: Dropped Packet Counters
0x5800B1EC C   FIELD 15w01 MFCO: Overflow status of the MFC Counter
0x5A000000 A PERIPHERAL DSI
0x5A000000 B  REGISTER VR (ro): DSI Host version register
0x5A000000 C   FIELD 00w32 VERSION: VERSION
0x5A000004 B  REGISTER CR (rw): DSI Host control register
0x5A000004 C   FIELD 00w01 EN: EN
0x5A000008 B  REGISTER CCR (rw): DSI Host clock control register
0x5A000008 C   FIELD 00w08 TXECKDIV: TXECKDIV
0x5A000008 C   FIELD 08w08 TOCKDIV: TOCKDIV
0x5A00000C B  REGISTER LVCIDR (rw): DSI Host LTDC VCID register
0x5A00000C C   FIELD 00w02 VCID: VCID
0x5A000010 B  REGISTER LCOLCR (rw): DSI Host LTDC color coding register
0x5A000010 C   FIELD 00w04 COLC: COLC
0x5A000010 C   FIELD 08w01 LPE: LPE
0x5A000014 B  REGISTER LPCR (rw): DSI Host LTDC polarity configuration register
0x5A000014 C   FIELD 00w01 DEP: DEP
0x5A000014 C   FIELD 01w01 VSP: VSP
0x5A000014 C   FIELD 02w01 HSP: HSP
0x5A000018 B  REGISTER LPMCR (rw): DSI Host low-power mode configuration register
0x5A000018 C   FIELD 00w08 VLPSIZE: VLPSIZE
0x5A000018 C   FIELD 16w08 LPSIZE: LPSIZE
0x5A00002C B  REGISTER PCR (rw): DSI Host protocol configuration register
0x5A00002C C   FIELD 00w01 ETTXE: ETTXE
0x5A00002C C   FIELD 01w01 ETRXE: ETRXE
0x5A00002C C   FIELD 02w01 BTAE: BTAE
0x5A00002C C   FIELD 03w01 ECCRXE: ECCRXE
0x5A00002C C   FIELD 04w01 CRCRXE: CRCRXE
0x5A000030 B  REGISTER GVCIDR (ro): DSI Host generic VCID register
0x5A000030 C   FIELD 00w02 VCID: VCID
0x5A000034 B  REGISTER MCR (rw): DSI Host mode configuration register
0x5A000034 C   FIELD 00w01 CMDM: CMDM
0x5A000038 B  REGISTER VMCR (rw): DSI Host video mode configuration register
0x5A000038 C   FIELD 00w02 VMT: VMT
0x5A000038 C   FIELD 08w01 LPVSAE: LPVSAE
0x5A000038 C   FIELD 09w01 LPVBPE: LPVBPE
0x5A000038 C   FIELD 10w01 LPVFPE: LPVFPE
0x5A000038 C   FIELD 11w01 LPVAE: LPVAE
0x5A000038 C   FIELD 12w01 LPHBPE: LPHBPE
0x5A000038 C   FIELD 13w01 LPHFPE: LPHFPE
0x5A000038 C   FIELD 14w01 FBTAAE: FBTAAE
0x5A000038 C   FIELD 15w01 LPCE: LPCE
0x5A000038 C   FIELD 16w01 PGE: PGE
0x5A000038 C   FIELD 20w01 PGM: PGM
0x5A000038 C   FIELD 24w01 PGO: PGO
0x5A00003C B  REGISTER VPCR (rw): DSI Host video packet configuration register
0x5A00003C C   FIELD 00w14 VPSIZE: VPSIZE
0x5A000040 B  REGISTER VCCR (rw): DSI Host video chunks configuration register
0x5A000040 C   FIELD 00w13 NUMC: NUMC
0x5A000044 B  REGISTER VNPCR (rw): DSI Host video null packet configuration register
0x5A000044 C   FIELD 00w13 NPSIZE: NPSIZE
0x5A000048 B  REGISTER VHSACR (rw): DSI Host video HSA configuration register
0x5A000048 C   FIELD 00w12 HSA: HSA
0x5A00004C B  REGISTER VHBPCR (rw): DSI Host video HBP configuration register
0x5A00004C C   FIELD 00w12 HBP: HBP
0x5A000050 B  REGISTER VLCR (rw): DSI Host video line configuration register
0x5A000050 C   FIELD 00w15 HLINE: HLINE
0x5A000054 B  REGISTER VVSACR (rw): DSI Host video VSA configuration register
0x5A000054 C   FIELD 00w10 VSA: VSA
0x5A000058 B  REGISTER VVBPCR (rw): DSI Host video VBP configuration register
0x5A000058 C   FIELD 00w10 VBP: VBP
0x5A00005C B  REGISTER VVFPCR (rw): DSI Host video VFP configuration register
0x5A00005C C   FIELD 00w10 VFP: VFP
0x5A000060 B  REGISTER VVACR (rw): DSI Host video VA configuration register
0x5A000060 C   FIELD 00w14 VA: VA
0x5A000064 B  REGISTER LCCR (rw): DSI Host LTDC command configuration register
0x5A000064 C   FIELD 00w16 CMDSIZE: CMDSIZE
0x5A000068 B  REGISTER CMCR (rw): DSI Host command mode configuration register
0x5A000068 C   FIELD 00w01 TEARE: TEARE
0x5A000068 C   FIELD 01w01 ARE: ARE
0x5A000068 C   FIELD 08w01 GSW0TX: GSW0TX
0x5A000068 C   FIELD 09w01 GSW1TX: GSW1TX
0x5A000068 C   FIELD 10w01 GSW2TX: GSW2TX
0x5A000068 C   FIELD 11w01 GSR0TX: GSR0TX
0x5A000068 C   FIELD 12w01 GSR1TX: GSR1TX
0x5A000068 C   FIELD 13w01 GSR2TX: GSR2TX
0x5A000068 C   FIELD 14w01 GLWTX: GLWTX
0x5A000068 C   FIELD 16w01 DSW0TX: DSW0TX
0x5A000068 C   FIELD 17w01 DSW1TX: DSW1TX
0x5A000068 C   FIELD 18w01 DSR0TX: DSR0TX
0x5A000068 C   FIELD 19w01 DLWTX: DLWTX
0x5A000068 C   FIELD 24w01 MRDPS: MRDPS
0x5A00006C B  REGISTER GHCR (rw): DSI Host generic header configuration register
0x5A00006C C   FIELD 00w06 DT: DT
0x5A00006C C   FIELD 06w02 VCID: VCID
0x5A00006C C   FIELD 08w08 WCLSB: WCLSB
0x5A00006C C   FIELD 16w08 WCMSB: WCMSB
0x5A000070 B  REGISTER GPDR (rw): DSI Host generic payload data register
0x5A000070 C   FIELD 00w08 DATA1: DATA1
0x5A000070 C   FIELD 08w08 DATA2: DATA2
0x5A000070 C   FIELD 16w08 DATA3: DATA3
0x5A000070 C   FIELD 24w08 DATA4: DATA4
0x5A000074 B  REGISTER GPSR (ro): DSI Host generic packet status register
0x5A000074 C   FIELD 00w01 CMDFE: CMDFE
0x5A000074 C   FIELD 01w01 CMDFF: CMDFF
0x5A000074 C   FIELD 02w01 PWRFE: PWRFE
0x5A000074 C   FIELD 03w01 PWRFF: PWRFF
0x5A000074 C   FIELD 04w01 PRDFE: PRDFE
0x5A000074 C   FIELD 05w01 PRDFF: PRDFF
0x5A000074 C   FIELD 06w01 RCB: RCB
0x5A000078 B  REGISTER TCCR0 (rw): DSI Host timeout counter configuration register 0
0x5A000078 C   FIELD 00w16 LPRX_TOCNT: LPRX_TOCNT
0x5A000078 C   FIELD 16w16 HSTX_TOCNT: HSTX_TOCNT
0x5A00007C B  REGISTER TCCR1 (rw): DSI Host timeout counter configuration register 1
0x5A00007C C   FIELD 00w16 HSRD_TOCNT: HSRD_TOCNT
0x5A000080 B  REGISTER TCCR2 (rw): DSI Host timeout counter configuration register 2
0x5A000080 C   FIELD 00w16 LPRD_TOCNT: LPRD_TOCNT
0x5A000084 B  REGISTER TCCR3 (rw): DSI Host timeout counter configuration register 3
0x5A000084 C   FIELD 00w16 HSWR_TOCNT: HSWR_TOCNT
0x5A000084 C   FIELD 24w01 PM: PM
0x5A000088 B  REGISTER TCCR4 (rw): DSI Host timeout counter configuration register 4
0x5A000088 C   FIELD 00w16 LPWR_TOCNT: LPWR_TOCNT
0x5A00008C B  REGISTER TCCR5 (rw): DSI Host timeout counter configuration register 5
0x5A00008C C   FIELD 00w16 BTA_TOCNT: BTA_TOCNT
0x5A000094 B  REGISTER CLCR (rw): DSI Host clock lane configuration register
0x5A000094 C   FIELD 00w01 DPCC: DPCC
0x5A000094 C   FIELD 01w01 ACR: ACR
0x5A000098 B  REGISTER CLTCR (rw): DSI Host clock lane timer configuration register
0x5A000098 C   FIELD 00w10 LP2HS_TIME: LP2HS_TIME
0x5A000098 C   FIELD 16w10 HS2LP_TIME: HS2LP_TIME
0x5A00009C B  REGISTER DLTCR (rw): DSI Host data lane timer configuration register
0x5A00009C C   FIELD 00w10 LP2HS_TIME: LP2HS_TIME
0x5A00009C C   FIELD 16w10 HS2LP_TIME: HS2LP_TIME
0x5A0000A0 B  REGISTER PCTLR (rw): DSI Host PHY control register
0x5A0000A0 C   FIELD 01w01 DEN: DEN
0x5A0000A0 C   FIELD 02w01 CKE: CKE
0x5A0000A4 B  REGISTER PCONFR (rw): DSI Host PHY configuration register
0x5A0000A4 C   FIELD 00w02 NL: NL
0x5A0000A4 C   FIELD 08w08 SW_TIME: SW_TIME
0x5A0000A8 B  REGISTER PUCR (rw): DSI Host PHY ULPS control register
0x5A0000A8 C   FIELD 00w01 URCL: URCL
0x5A0000A8 C   FIELD 01w01 UECL: UECL
0x5A0000A8 C   FIELD 02w01 URDL: URDL
0x5A0000A8 C   FIELD 03w01 UEDL: UEDL
0x5A0000AC B  REGISTER PTTCR (rw): DSI Host PHY TX triggers configuration register
0x5A0000AC C   FIELD 00w04 TX_TRIG: TX_TRIG
0x5A0000B0 B  REGISTER PSR (ro): DSI Host PHY status register
0x5A0000B0 C   FIELD 01w01 PD: PD
0x5A0000B0 C   FIELD 02w01 PSSC: PSSC
0x5A0000B0 C   FIELD 03w01 UANC: UANC
0x5A0000B0 C   FIELD 04w01 PSS0: PSS0
0x5A0000B0 C   FIELD 05w01 UAN0: UAN0
0x5A0000B0 C   FIELD 06w01 RUE0: RUE0
0x5A0000B0 C   FIELD 07w01 PSS1: PSS1
0x5A0000B0 C   FIELD 08w01 UAN1: UAN1
0x5A0000BC B  REGISTER ISR0 (ro): DSI Host interrupt and status register 0
0x5A0000BC C   FIELD 00w01 AE0: AE0
0x5A0000BC C   FIELD 01w01 AE1: AE1
0x5A0000BC C   FIELD 02w01 AE2: AE2
0x5A0000BC C   FIELD 03w01 AE3: AE3
0x5A0000BC C   FIELD 04w01 AE4: AE4
0x5A0000BC C   FIELD 05w01 AE5: AE5
0x5A0000BC C   FIELD 06w01 AE6: AE6
0x5A0000BC C   FIELD 07w01 AE7: AE7
0x5A0000BC C   FIELD 08w01 AE8: AE8
0x5A0000BC C   FIELD 09w01 AE9: AE9
0x5A0000BC C   FIELD 10w01 AE10: AE10
0x5A0000BC C   FIELD 11w01 AE11: AE11
0x5A0000BC C   FIELD 12w01 AE12: AE12
0x5A0000BC C   FIELD 13w01 AE13: AE13
0x5A0000BC C   FIELD 14w01 AE14: AE14
0x5A0000BC C   FIELD 15w01 AE15: AE15
0x5A0000BC C   FIELD 16w01 PE0: PE0
0x5A0000BC C   FIELD 17w01 PE1: PE1
0x5A0000BC C   FIELD 18w01 PE2: PE2
0x5A0000BC C   FIELD 19w01 PE3: PE3
0x5A0000BC C   FIELD 20w01 PE4: PE4
0x5A0000C0 B  REGISTER ISR1 (ro): DSI Host interrupt and status register 1
0x5A0000C0 C   FIELD 00w01 TOHSTX: TOHSTX
0x5A0000C0 C   FIELD 01w01 TOLPRX: TOLPRX
0x5A0000C0 C   FIELD 02w01 ECCSE: ECCSE
0x5A0000C0 C   FIELD 03w01 ECCME: ECCME
0x5A0000C0 C   FIELD 04w01 CRCE: CRCE
0x5A0000C0 C   FIELD 05w01 PSE: PSE
0x5A0000C0 C   FIELD 06w01 EOTPE: EOTPE
0x5A0000C0 C   FIELD 07w01 LPWRE: LPWRE
0x5A0000C0 C   FIELD 08w01 GCWRE: GCWRE
0x5A0000C0 C   FIELD 09w01 GPWRE: GPWRE
0x5A0000C0 C   FIELD 10w01 GPTXE: GPTXE
0x5A0000C0 C   FIELD 11w01 GPRDE: GPRDE
0x5A0000C0 C   FIELD 12w01 GPRXE: GPRXE
0x5A0000C4 B  REGISTER IER0 (rw): DSI Host interrupt enable register 0
0x5A0000C4 C   FIELD 00w01 AE0IE: AE0IE
0x5A0000C4 C   FIELD 01w01 AE1IE: AE1IE
0x5A0000C4 C   FIELD 02w01 AE2IE: AE2IE
0x5A0000C4 C   FIELD 03w01 AE3IE: AE3IE
0x5A0000C4 C   FIELD 04w01 AE4IE: AE4IE
0x5A0000C4 C   FIELD 05w01 AE5IE: AE5IE
0x5A0000C4 C   FIELD 06w01 AE6IE: AE6IE
0x5A0000C4 C   FIELD 07w01 AE7IE: AE7IE
0x5A0000C4 C   FIELD 08w01 AE8IE: AE8IE
0x5A0000C4 C   FIELD 09w01 AE9IE: AE9IE
0x5A0000C4 C   FIELD 10w01 AE10IE: AE10IE
0x5A0000C4 C   FIELD 11w01 AE11IE: AE11IE
0x5A0000C4 C   FIELD 12w01 AE12IE: AE12IE
0x5A0000C4 C   FIELD 13w01 AE13IE: AE13IE
0x5A0000C4 C   FIELD 14w01 AE14IE: AE14IE
0x5A0000C4 C   FIELD 15w01 AE15IE: AE15IE
0x5A0000C4 C   FIELD 16w01 PE0IE: PE0IE
0x5A0000C4 C   FIELD 17w01 PE1IE: PE1IE
0x5A0000C4 C   FIELD 18w01 PE2IE: PE2IE
0x5A0000C4 C   FIELD 19w01 PE3IE: PE3IE
0x5A0000C4 C   FIELD 20w01 PE4IE: PE4IE
0x5A0000C8 B  REGISTER IER1 (rw): DSI Host interrupt enable register 1
0x5A0000C8 C   FIELD 00w01 TOHSTXIE: TOHSTXIE
0x5A0000C8 C   FIELD 01w01 TOLPRXIE: TOLPRXIE
0x5A0000C8 C   FIELD 02w01 ECCSEIE: ECCSEIE
0x5A0000C8 C   FIELD 03w01 ECCMEIE: ECCMEIE
0x5A0000C8 C   FIELD 04w01 CRCEIE: CRCEIE
0x5A0000C8 C   FIELD 05w01 PSEIE: PSEIE
0x5A0000C8 C   FIELD 06w01 EOTPEIE: EOTPEIE
0x5A0000C8 C   FIELD 07w01 LPWREIE: LPWREIE
0x5A0000C8 C   FIELD 08w01 GCWREIE: GCWREIE
0x5A0000C8 C   FIELD 09w01 GPWREIE: GPWREIE
0x5A0000C8 C   FIELD 10w01 GPTXEIE: GPTXEIE
0x5A0000C8 C   FIELD 11w01 GPRDEIE: GPRDEIE
0x5A0000C8 C   FIELD 12w01 GPRXEIE: GPRXEIE
0x5A0000D8 B  REGISTER FIR0 (wo): DSI Host force interrupt register 0
0x5A0000D8 C   FIELD 00w01 FAE0: FAE0
0x5A0000D8 C   FIELD 01w01 FAE1: FAE1
0x5A0000D8 C   FIELD 02w01 FAE2: FAE2
0x5A0000D8 C   FIELD 03w01 FAE3: FAE3
0x5A0000D8 C   FIELD 04w01 FAE4: FAE4
0x5A0000D8 C   FIELD 05w01 FAE5: FAE5
0x5A0000D8 C   FIELD 06w01 FAE6: FAE6
0x5A0000D8 C   FIELD 07w01 FAE7: FAE7
0x5A0000D8 C   FIELD 08w01 FAE8: FAE8
0x5A0000D8 C   FIELD 09w01 FAE9: FAE9
0x5A0000D8 C   FIELD 10w01 FAE10: FAE10
0x5A0000D8 C   FIELD 11w01 FAE11: FAE11
0x5A0000D8 C   FIELD 12w01 FAE12: FAE12
0x5A0000D8 C   FIELD 13w01 FAE13: FAE13
0x5A0000D8 C   FIELD 14w01 FAE14: FAE14
0x5A0000D8 C   FIELD 15w01 FAE15: FAE15
0x5A0000D8 C   FIELD 16w01 FPE0: FPE0
0x5A0000D8 C   FIELD 17w01 FPE1: FPE1
0x5A0000D8 C   FIELD 18w01 FPE2: FPE2
0x5A0000D8 C   FIELD 19w01 FPE3: FPE3
0x5A0000D8 C   FIELD 20w01 FPE4: FPE4
0x5A0000DC B  REGISTER FIR1 (wo): DSI Host force interrupt register 1
0x5A0000DC C   FIELD 00w01 FTOHSTX: FTOHSTX
0x5A0000DC C   FIELD 01w01 FTOLPRX: FTOLPRX
0x5A0000DC C   FIELD 02w01 FECCSE: FECCSE
0x5A0000DC C   FIELD 03w01 FECCME: FECCME
0x5A0000DC C   FIELD 04w01 FCRCE: FCRCE
0x5A0000DC C   FIELD 05w01 FPSE: FPSE
0x5A0000DC C   FIELD 06w01 FEOTPE: FEOTPE
0x5A0000DC C   FIELD 07w01 FLPWRE: FLPWRE
0x5A0000DC C   FIELD 08w01 FGCWRE: FGCWRE
0x5A0000DC C   FIELD 09w01 FGPWRE: FGPWRE
0x5A0000DC C   FIELD 10w01 FGPTXE: FGPTXE
0x5A0000DC C   FIELD 11w01 FGPRDE: FGPRDE
0x5A0000DC C   FIELD 12w01 FGPRXE: FGPRXE
0x5A0000F4 B  REGISTER DLTRCR (rw): DSI Host data lane timer read configuration register
0x5A0000F4 C   FIELD 00w15 MRD_TIME: MRD_TIME
0x5A000100 B  REGISTER VSCR (rw): DSI Host video shadow control register
0x5A000100 C   FIELD 00w01 EN: EN
0x5A000100 C   FIELD 08w01 UR: UR
0x5A00010C B  REGISTER LCVCIDR (rw): DSI Host LTDC current VCID register
0x5A00010C C   FIELD 00w02 VCID: VCID
0x5A000110 B  REGISTER LCCCR (ro): DSI Host LTDC current color coding register
0x5A000110 C   FIELD 00w04 COLC: COLC
0x5A000110 C   FIELD 08w01 LPE: LPE
0x5A000118 B  REGISTER LPMCCR (ro): DSI Host low-power mode current configuration register
0x5A000118 C   FIELD 00w08 VLPSIZE: VLPSIZE
0x5A000118 C   FIELD 16w08 LPSIZE: LPSIZE
0x5A000138 B  REGISTER VMCCR (ro): DSI Host video mode current configuration register
0x5A000138 C   FIELD 00w02 VMT: VMT
0x5A000138 C   FIELD 02w01 LPVSAE: LPVSAE
0x5A000138 C   FIELD 03w01 LPVBPE: LPVBPE
0x5A000138 C   FIELD 04w01 LPVFPE: LPVFPE
0x5A000138 C   FIELD 05w01 LPVAE: LPVAE
0x5A000138 C   FIELD 06w01 LPHBPE: LPHBPE
0x5A000138 C   FIELD 07w01 LPHFE: LPHFE
0x5A000138 C   FIELD 08w01 FBTAAE: FBTAAE
0x5A000138 C   FIELD 09w01 LPCE: LPCE
0x5A00013C B  REGISTER VPCCR (ro): DSI Host video packet current configuration register
0x5A00013C C   FIELD 00w14 VPSIZE: VPSIZE
0x5A000140 B  REGISTER VCCCR (ro): DSI Host video chunks current configuration register
0x5A000140 C   FIELD 00w13 NUMC: NUMC
0x5A000144 B  REGISTER VNPCCR (ro): DSI Host video null packet current configuration register
0x5A000144 C   FIELD 00w13 NPSIZE: NPSIZE
0x5A000148 B  REGISTER VHSACCR (ro): DSI Host video HSA current configuration register
0x5A000148 C   FIELD 00w12 HSA: HSA
0x5A00014C B  REGISTER VHBPCCR (ro): DSI Host video HBP current configuration register
0x5A00014C C   FIELD 00w12 HBP: HBP
0x5A000150 B  REGISTER VLCCR (ro): DSI Host video line current configuration register
0x5A000150 C   FIELD 00w15 HLINE: HLINE
0x5A000154 B  REGISTER VVSACCR (ro): DSI Host video VSA current configuration register
0x5A000154 C   FIELD 00w10 VSA: VSA
0x5A000158 B  REGISTER VVBPCCR (ro): DSI Host video VBP current configuration register
0x5A000158 C   FIELD 00w10 VBP: VBP
0x5A00015C B  REGISTER VVFPCCR (ro): DSI Host video VFP current configuration register
0x5A00015C C   FIELD 00w10 VFP: VFP
0x5A000160 B  REGISTER VVACCR (ro): DSI Host video VA current configuration register
0x5A000160 C   FIELD 00w14 VA: VA
0x5A000400 B  REGISTER WCFGR (rw): DSI wrapper configuration register
0x5A000400 C   FIELD 00w01 DSIM: DSIM
0x5A000400 C   FIELD 01w03 COLMUX: COLMUX
0x5A000400 C   FIELD 04w01 TESRC: TESRC
0x5A000400 C   FIELD 05w01 TEPOL: TEPOL
0x5A000400 C   FIELD 06w01 AR: AR
0x5A000400 C   FIELD 07w01 VSPOL: VSPOL
0x5A000404 B  REGISTER WCR (rw): DSI wrapper control register
0x5A000404 C   FIELD 00w01 COLM: COLM
0x5A000404 C   FIELD 01w01 SHTDN: SHTDN
0x5A000404 C   FIELD 02w01 LTDCEN: LTDCEN
0x5A000404 C   FIELD 03w01 DSIEN: DSIEN
0x5A000408 B  REGISTER WIER (rw): DSI wrapper interrupt enable register
0x5A000408 C   FIELD 00w01 TEIE: TEIE
0x5A000408 C   FIELD 01w01 ERIE: ERIE
0x5A000408 C   FIELD 09w01 PLLLIE: PLLLIE
0x5A000408 C   FIELD 10w01 PLLUIE: PLLUIE
0x5A000408 C   FIELD 13w01 RRIE: RRIE
0x5A00040C B  REGISTER WISR (ro): DSI wrapper interrupt and status register
0x5A00040C C   FIELD 00w01 TEIF: TEIF
0x5A00040C C   FIELD 01w01 ERIF: ERIF
0x5A00040C C   FIELD 02w01 BUSY: BUSY
0x5A00040C C   FIELD 08w01 PLLLS: PLLLS
0x5A00040C C   FIELD 09w01 PLLLIF: PLLLIF
0x5A00040C C   FIELD 10w01 PLLUIF: PLLUIF
0x5A00040C C   FIELD 12w01 RRS: RRS
0x5A00040C C   FIELD 13w01 RRIF: RRIF
0x5A000410 B  REGISTER WIFCR (wo): DSI wrapper interrupt flag clear register
0x5A000410 C   FIELD 00w01 CTEIF: CTEIF
0x5A000410 C   FIELD 01w01 CERIF: CERIF
0x5A000410 C   FIELD 09w01 CPLLLIF: CPLLLIF
0x5A000410 C   FIELD 10w01 CPLLUIF: CPLLUIF
0x5A000410 C   FIELD 13w01 CRRIF: CRRIF
0x5A000418 B  REGISTER WPCR0 (rw): DSI wrapper PHY configuration register 0
0x5A000418 C   FIELD 00w06 UIX4: UIX4
0x5A000418 C   FIELD 06w01 SWCL: SWCL
0x5A000418 C   FIELD 07w01 SWDL0: SWDL0
0x5A000418 C   FIELD 08w01 SWDL1: SWDL1
0x5A000418 C   FIELD 09w01 HSICL: HSICL
0x5A000418 C   FIELD 10w01 HSIDL0: HSIDL0
0x5A000418 C   FIELD 11w01 HSIDL1: HSIDL1
0x5A000418 C   FIELD 12w01 FTXSMCL: FTXSMCL
0x5A000418 C   FIELD 13w01 FTXSMDL: FTXSMDL
0x5A000418 C   FIELD 14w01 CDOFFDL: CDOFFDL
0x5A000418 C   FIELD 16w01 TDDL: TDDL
0x5A00041C B  REGISTER WPCR1 (rw): This register shall be programmed only when DSI is stopped (CR. DSIEN=0 and CR.EN = 0).
0x5A00041C C   FIELD 00w02 SKEWCL: SKEWCL
0x5A00041C C   FIELD 02w02 SKEWDL: SKEWDL
0x5A00041C C   FIELD 06w02 LPTXSRCL: LPTXSRCL
0x5A00041C C   FIELD 08w02 LPTXSRDL: LPTXSRDL
0x5A00041C C   FIELD 12w01 SDDCCL: SDDCCL
0x5A00041C C   FIELD 13w01 SDDCDL: SDDCDL
0x5A00041C C   FIELD 16w01 HSTXSRUCL: HSTXSRUCL
0x5A00041C C   FIELD 17w01 HSTXSRDCL: HSTXSRDCL
0x5A00041C C   FIELD 18w01 HSTXSRUDL: HSTXSRUDL
0x5A00041C C   FIELD 19w01 HSTXSRDDL: HSTXSRDDL
0x5A000430 B  REGISTER WRPCR (rw): DSI wrapper regulator and PLL control register
0x5A000430 C   FIELD 00w01 PLLEN: PLLEN
0x5A000430 C   FIELD 02w07 NDIV: NDIV
0x5A000430 C   FIELD 11w04 IDF: IDF
0x5A000430 C   FIELD 16w02 ODF: ODF
0x5A000430 C   FIELD 24w01 REGEN: REGEN
0x5A000430 C   FIELD 28w01 BGREN: BGREN
0x5A0007F0 B  REGISTER HWCFGR (ro): DSI Host hardware configuration register
0x5A0007F0 C   FIELD 00w04 TECHNO: TECHNO
0x5A0007F0 C   FIELD 04w12 FIFOSIZE: FIFOSIZE
0x5A0007F4 B  REGISTER VERR (ro): DSI Host version register
0x5A0007F4 C   FIELD 00w04 MINREV: MINREV
0x5A0007F4 C   FIELD 04w04 MAJREV: MAJREV
0x5A0007F8 B  REGISTER IPIDR (ro): DSI Host identification register
0x5A0007F8 C   FIELD 00w32 ID: ID
0x5A0007FC B  REGISTER SIDR (ro): DSI Host size identification register
0x5A0007FC C   FIELD 00w32 SID: SID
0x5A001000 A PERIPHERAL LTDC
0x5A001000 B  REGISTER LTDC_IDR (ro): LTDC identification register
0x5A001000 C   FIELD 00w08 REV: REV
0x5A001000 C   FIELD 08w08 MINVER: MINVER
0x5A001000 C   FIELD 16w08 MAJVER: MAJVER
0x5A001004 B  REGISTER LTDC_LCR (ro): LDTC layer count register
0x5A001004 C   FIELD 00w08 LNBR: LNBR
0x5A001008 B  REGISTER LTDC_SSCR (rw): This register defines the number of horizontal synchronization pixels minus 1 and the number of vertical synchronization lines minus 1. Refer to Figure274 and Section36.4: LTDC programmable parameters for an example of configuration.
0x5A001008 C   FIELD 00w12 VSH: VSH
0x5A001008 C   FIELD 16w12 HSW: HSW
0x5A00100C B  REGISTER LTDC_BPCR (rw): This register defines the accumulated number of horizontal synchronization and back porch pixels minus 1 (HSYNCwidth+HBP-1) and the accumulated number of vertical synchronization and back porch lines minus 1 (VSYNCheight+VBP-1). Refer to Figure274 and Section36.4: LTDC programmable parameters for an example of configuration.
0x5A00100C C   FIELD 00w12 AVBP: AVBP
0x5A00100C C   FIELD 16w12 AHBP: AHBP
0x5A001010 B  REGISTER LTDC_AWCR (rw): This register defines the accumulated number of horizontal synchronization, back porch and active pixels minus 1 (HSYNC width+HBP+activewidth-1) and the accumulated number of vertical synchronization, back porch lines and active lines minus 1 (VSYNCheight+BVBP+activeheight-1). Refer to Figure274 and Section36.4: LTDC programmable parameters for an example of configuration.
0x5A001010 C   FIELD 00w12 AAH: AAH
0x5A001010 C   FIELD 16w12 AAW: AAW
0x5A001014 B  REGISTER LTDC_TWCR (rw): This register defines the accumulated number of horizontal synchronization, back porch, active and front porch pixels minus 1 (HSYNCwidth+HBP+activewidth+HFP-1) and the accumulated number of vertical synchronization, back porch lines, active and front lines minus 1 (VSYNCheight+BVBP+activeheight+VFP-1). Refer to Figure274 and Section36.4: LTDC programmable parameters for an example of configuration.
0x5A001014 C   FIELD 00w12 TOTALH: TOTALH
0x5A001014 C   FIELD 16w12 TOTALW: TOTALW
0x5A001018 B  REGISTER LTDC_GCR: This register defines the global configuration of the LCD-TFT controller.
0x5A001018 C   FIELD 00w01 LTDCEN (rw): LTDCEN
0x5A001018 C   FIELD 04w03 DBW (ro): DBW
0x5A001018 C   FIELD 08w03 DGW (ro): DGW
0x5A001018 C   FIELD 12w03 DRW (ro): DRW
0x5A001018 C   FIELD 16w01 DEN (rw): DEN
0x5A001018 C   FIELD 28w01 PCPOL (rw): PCPOL
0x5A001018 C   FIELD 29w01 DEPOL (rw): DEPOL
0x5A001018 C   FIELD 30w01 VSPOL (rw): VSPOL
0x5A001018 C   FIELD 31w01 HSPOL (rw): HSPOL
0x5A00101C B  REGISTER LTDC_GC1R (ro): LTDC global configuration 1 register
0x5A00101C C   FIELD 00w04 WBCH: WBCH
0x5A00101C C   FIELD 04w04 WGCH: WGCH
0x5A00101C C   FIELD 08w04 WRCH: WRCH
0x5A00101C C   FIELD 12w01 PRBEN: PRBEN
0x5A00101C C   FIELD 14w02 DT: DT
0x5A00101C C   FIELD 17w03 GCT: GCT
0x5A00101C C   FIELD 21w01 SHREN: SHREN
0x5A00101C C   FIELD 22w01 BCP: BCP
0x5A00101C C   FIELD 23w01 BBEN: BBEN
0x5A00101C C   FIELD 24w01 LNIP: LNIP
0x5A00101C C   FIELD 25w01 TP: TP
0x5A00101C C   FIELD 26w01 IPP: IPP
0x5A00101C C   FIELD 27w01 SPP: SPP
0x5A00101C C   FIELD 28w01 DWP: DWP
0x5A00101C C   FIELD 29w01 STREN: STREN
0x5A00101C C   FIELD 31w01 BMEN: BMEN
0x5A001020 B  REGISTER LTDC_GC2R (ro): LTDC global configuration 2 register
0x5A001020 C   FIELD 00w01 EDCEN: EDCEN
0x5A001020 C   FIELD 01w01 STSAEN: STSAEN
0x5A001020 C   FIELD 02w01 DVAEN: DVAEN
0x5A001020 C   FIELD 03w01 DPAEN: DPAEN
0x5A001020 C   FIELD 04w03 BW: BW
0x5A001020 C   FIELD 07w01 EDCA: EDCA
0x5A001024 B  REGISTER LTDC_SRCR (rw): This register allows to reload either immediately or during the vertical blanking period, the shadow registers values to the active registers. The shadow registers are all Layer1 and Layer2 registers except the LTDC_L1CLUTWR and the LTDC_L2CLUTWR.
0x5A001024 C   FIELD 00w01 IMR: IMR
0x5A001024 C   FIELD 01w01 VBR: VBR
0x5A00102C B  REGISTER LTDC_BCCR (rw): This register defines the background color (RGB888).
0x5A00102C C   FIELD 00w08 BCBLUE: BCBLUE
0x5A00102C C   FIELD 08w08 BCGREEN: BCGREEN
0x5A00102C C   FIELD 16w08 BCRED: BCRED
0x5A001034 B  REGISTER LTDC_IER (rw): This register determines which status flags generate an interrupt request by setting the corresponding bit to 1.
0x5A001034 C   FIELD 00w01 LIE: LIE
0x5A001034 C   FIELD 01w01 FUIE: FUIE
0x5A001034 C   FIELD 02w01 TERRIE: TERRIE
0x5A001034 C   FIELD 03w01 RRIE: RRIE
0x5A001038 B  REGISTER LTDC_ISR (ro): This register returns the interrupt status flag.
0x5A001038 C   FIELD 00w01 LIF: LIF
0x5A001038 C   FIELD 01w01 FUIF: FUIF
0x5A001038 C   FIELD 02w01 TERRIF: TERRIF
0x5A001038 C   FIELD 03w01 RRIF: RRIF
0x5A00103C B  REGISTER LTDC_ICR (wo): LTDC Interrupt Clear Register
0x5A00103C C   FIELD 00w01 CLIF: CLIF
0x5A00103C C   FIELD 01w01 CFUIF: CFUIF
0x5A00103C C   FIELD 02w01 CTERRIF: CTERRIF
0x5A00103C C   FIELD 03w01 CRRIF: CRRIF
0x5A001040 B  REGISTER LTDC_LIPCR (rw): This register defines the position of the line interrupt. The line value to be programmed depends on the timings parameters. Refer to Figure274.
0x5A001040 C   FIELD 00w12 LIPOS: LIPOS
0x5A001044 B  REGISTER LTDC_CPSR (ro): LTDC current position status register
0x5A001044 C   FIELD 00w16 CYPOS: CYPOS
0x5A001044 C   FIELD 16w16 CXPOS: CXPOS
0x5A001048 B  REGISTER LTDC_CDSR (ro): This register returns the status of the current display phase which is controlled by the HSYNC, VSYNC, and horizontal/vertical DE signals. Example: if the current display phase is the vertical synchronization, the VSYNCS bit is set (active high). If the current display phase is the horizontal synchronization, the HSYNCS bit is active high.
0x5A001048 C   FIELD 00w01 VDES: VDES
0x5A001048 C   FIELD 01w01 HDES: HDES
0x5A001048 C   FIELD 02w01 VSYNCS: VSYNCS
0x5A001048 C   FIELD 03w01 HSYNCS: HSYNCS
0x5A001084 B  REGISTER LTDC_L1CR (rw): LTDC layer 1 control register
0x5A001084 C   FIELD 00w01 LEN: LEN
0x5A001084 C   FIELD 01w01 COLKEN: COLKEN
0x5A001084 C   FIELD 04w01 CLUTEN: CLUTEN
0x5A001088 B  REGISTER LTDC_L1WHPCR (rw): This register defines the horizontal position (first and last pixel) of the layer 1 or 2 window. The first visible pixel of a line is the programmed value of AHBP[11:0] bits + 1 in the LTDC_BPCR register. The last visible pixel of a line is the programmed value of AAW[11:0] bits in the LTDC_AWCR register.
0x5A001088 C   FIELD 00w12 WHSTPOS: WHSTPOS
0x5A001088 C   FIELD 16w12 WHSPPOS: WHSPPOS
0x5A00108C B  REGISTER LTDC_L1WVPCR (rw): This register defines the vertical position (first and last line) of the layer1 or 2 window. The first visible line of a frame is the programmed value of AVBP[11:0] bits + 1 in the register LTDC_BPCR register. The last visible line of a frame is the programmed value of AAH[11:0] bits in the LTDC_AWCR register.
0x5A00108C C   FIELD 00w12 WVSTPOS: WVSTPOS
0x5A00108C C   FIELD 16w12 WVSPPOS: WVSPPOS
0x5A001090 B  REGISTER LTDC_L1CKCR (rw): This register defines the color key value (RGB), that is used by the color keying.
0x5A001090 C   FIELD 00w08 CKBLUE: CKBLUE
0x5A001090 C   FIELD 08w08 CKGREEN: CKGREEN
0x5A001090 C   FIELD 16w08 CKRED: CKRED
0x5A001094 B  REGISTER LTDC_L1PFCR (rw): This register defines the pixel format that is used for the stored data in the frame buffer of a layer. The pixel data is read from the frame buffer and then transformed to the internal format 8888 (ARGB).
0x5A001094 C   FIELD 00w03 PF: PF
0x5A001098 B  REGISTER LTDC_L1CACR (rw): This register defines the constant alpha value (divided by 255 by hardware), that is used in the alpha blending. Refer to LTDC_LxBFCR register.
0x5A001098 C   FIELD 00w08 CONSTA: CONSTA
0x5A00109C B  REGISTER LTDC_L1DCCR (rw): This register defines the default color of a layer in the format ARGB. The default color is used outside the defined layer window or when a layer is disabled. The reset value of 0x00000000 defines a transparent black color.
0x5A00109C C   FIELD 00w08 DCBLUE: DCBLUE
0x5A00109C C   FIELD 08w08 DCGREEN: DCGREEN
0x5A00109C C   FIELD 16w08 DCRED: DCRED
0x5A00109C C   FIELD 24w08 DCALPHA: DCALPHA
0x5A0010A0 B  REGISTER LTDC_L1BFCR (rw): This register defines the blending factors F1 and F2. The general blending formula is: BC = BF1 x C + BF2 x Cs BC = blended color BF1 = blend factor 1 C = current layer color BF2 = blend factor 2 Cs = subjacent layers blended color
0x5A0010A0 C   FIELD 00w03 BF2: BF2
0x5A0010A0 C   FIELD 08w03 BF1: BF1
0x5A0010AC B  REGISTER LTDC_L1CFBAR (rw): This register defines the color frame buffer start address which has to point to the address where the pixel data of the top left pixel of a layer is stored in the frame buffer.
0x5A0010AC C   FIELD 00w32 CFBADD: CFBADD
0x5A0010B0 B  REGISTER LTDC_L1CFBLR (rw): This register defines the color frame buffer line length and pitch.
0x5A0010B0 C   FIELD 00w14 CFBLL: CFBLL
0x5A0010B0 C   FIELD 16w14 CFBP: CFBP
0x5A0010B4 B  REGISTER LTDC_L1CFBLNR (rw): This register defines the number of lines in the color frame buffer.
0x5A0010B4 C   FIELD 00w12 CFBLNBR: CFBLNBR
0x5A0010C4 B  REGISTER LTDC_L1CLUTWR (wo): This register defines the CLUT address and the RGB value.
0x5A0010C4 C   FIELD 00w08 BLUE: BLUE
0x5A0010C4 C   FIELD 08w08 GREEN: GREEN
0x5A0010C4 C   FIELD 16w08 RED: RED
0x5A0010C4 C   FIELD 24w08 CLUTADD: CLUTADD
0x5A001104 B  REGISTER LTDC_L2CR (rw): LTDC layer 2 control register
0x5A001104 C   FIELD 00w01 LEN: LEN
0x5A001104 C   FIELD 01w01 COLKEN: COLKEN
0x5A001104 C   FIELD 04w01 CLUTEN: CLUTEN
0x5A001108 B  REGISTER LTDC_L2WHPCR (rw): This register defines the horizontal position (first and last pixel) of the layer 1 or 2 window. The first visible pixel of a line is the programmed value of AHBP[11:0] bits + 1 in the LTDC_BPCR register. The last visible pixel of a line is the programmed value of AAW[11:0] bits in the LTDC_AWCR register.
0x5A001108 C   FIELD 00w12 WHSTPOS: WHSTPOS
0x5A001108 C   FIELD 16w12 WHSPPOS: WHSPPOS
0x5A00110C B  REGISTER LTDC_L2WVPCR (rw): This register defines the vertical position (first and last line) of the layer1 or 2 window. The first visible line of a frame is the programmed value of AVBP[11:0] bits + 1 in the register LTDC_BPCR register. The last visible line of a frame is the programmed value of AAH[11:0] bits in the LTDC_AWCR register.
0x5A00110C C   FIELD 00w12 WVSTPOS: WVSTPOS
0x5A00110C C   FIELD 16w12 WVSPPOS: WVSPPOS
0x5A001110 B  REGISTER LTDC_L2CKCR (rw): This register defines the color key value (RGB), that is used by the color keying.
0x5A001110 C   FIELD 00w08 CKBLUE: CKBLUE
0x5A001110 C   FIELD 08w08 CKGREEN: CKGREEN
0x5A001110 C   FIELD 16w08 CKRED: CKRED
0x5A001114 B  REGISTER LTDC_L2PFCR (rw): This register defines the pixel format that is used for the stored data in the frame buffer of a layer. The pixel data is read from the frame buffer and then transformed to the internal format 8888 (ARGB).
0x5A001114 C   FIELD 00w03 PF: PF
0x5A001118 B  REGISTER LTDC_L2CACR (rw): This register defines the constant alpha value (divided by 255 by hardware), that is used in the alpha blending. Refer to LTDC_LxBFCR register.
0x5A001118 C   FIELD 00w08 CONSTA: CONSTA
0x5A00111C B  REGISTER LTDC_L2DCCR (rw): This register defines the default color of a layer in the format ARGB. The default color is used outside the defined layer window or when a layer is disabled. The reset value of 0x00000000 defines a transparent black color.
0x5A00111C C   FIELD 00w08 DCBLUE: DCBLUE
0x5A00111C C   FIELD 08w08 DCGREEN: DCGREEN
0x5A00111C C   FIELD 16w08 DCRED: DCRED
0x5A00111C C   FIELD 24w08 DCALPHA: DCALPHA
0x5A001120 B  REGISTER LTDC_L2BFCR (rw): This register defines the blending factors F1 and F2. The general blending formula is: BC = BF1 x C + BF2 x Cs BC = blended color BF1 = blend factor 1 C = current layer color BF2 = blend factor 2 Cs = subjacent layers blended color
0x5A001120 C   FIELD 00w03 BF2: BF2
0x5A001120 C   FIELD 08w03 BF1: BF1
0x5A00112C B  REGISTER LTDC_L2CFBAR (rw): This register defines the color frame buffer start address which has to point to the address where the pixel data of the top left pixel of a layer is stored in the frame buffer.
0x5A00112C C   FIELD 00w32 CFBADD: CFBADD
0x5A001130 B  REGISTER LTDC_L2CFBLR (rw): This register defines the color frame buffer line length and pitch.
0x5A001130 C   FIELD 00w14 CFBLL: CFBLL
0x5A001130 C   FIELD 16w14 CFBP: CFBP
0x5A001134 B  REGISTER LTDC_L2CFBLNR (rw): This register defines the number of lines in the color frame buffer.
0x5A001134 C   FIELD 00w12 CFBLNBR: CFBLNBR
0x5A001144 B  REGISTER LTDC_L2CLUTWR (wo): This register defines the CLUT address and the RGB value.
0x5A001144 C   FIELD 00w08 BLUE: BLUE
0x5A001144 C   FIELD 08w08 GREEN: GREEN
0x5A001144 C   FIELD 16w08 RED: RED
0x5A001144 C   FIELD 24w08 CLUTADD: CLUTADD
0x5A002000 A PERIPHERAL IWDG2
0x5A002000 B  REGISTER IWDG_KR (wo): Key register
0x5A002000 C   FIELD 00w16 KEY: KEY
0x5A002004 B  REGISTER IWDG_PR (rw): Prescaler register
0x5A002004 C   FIELD 00w03 PR: PR
0x5A002008 B  REGISTER IWDG_RLR (rw): Reload register
0x5A002008 C   FIELD 00w12 RL: RL
0x5A00200C B  REGISTER IWDG_SR (ro): Status register
0x5A00200C C   FIELD 00w01 PVU: PVU
0x5A00200C C   FIELD 01w01 RVU: RVU
0x5A00200C C   FIELD 02w01 WVU: WVU
0x5A002010 B  REGISTER IWDG_WINR (rw): Window register
0x5A002010 C   FIELD 00w12 WIN: WIN
0x5A0023F0 B  REGISTER IWDG_HWCFGR (ro): IWDG hardware configuration register
0x5A0023F0 C   FIELD 00w04 WINDOW: WINDOW
0x5A0023F0 C   FIELD 04w04 PR_DEFAULT: PR_DEFAULT
0x5A0023F4 B  REGISTER IWDG_VERR (ro): IWDG version register
0x5A0023F4 C   FIELD 00w04 MINREV: MINREV
0x5A0023F4 C   FIELD 04w04 MAJREV: MAJREV
0x5A0023F8 B  REGISTER IWDG_IDR (ro): IWDG identification register
0x5A0023F8 C   FIELD 00w32 ID: ID
0x5A0023FC B  REGISTER IWDG_SIDR (ro): IWDG size identification register
0x5A0023FC C   FIELD 00w32 SID: SID
0x5A003000 A PERIPHERAL DDRCTRL
0x5A003000 B  REGISTER DDRCTRL_MSTR (rw): DDRCTRL master register 0
0x5A003000 C   FIELD 00w01 DDR3: DDR3
0x5A003000 C   FIELD 02w01 LPDDR2: LPDDR2
0x5A003000 C   FIELD 03w01 LPDDR3: LPDDR3
0x5A003000 C   FIELD 09w01 BURSTCHOP: BURSTCHOP
0x5A003000 C   FIELD 10w01 EN_2T_TIMING_MODE: EN_2T_TIMING_MODE
0x5A003000 C   FIELD 12w02 DATA_BUS_WIDTH: DATA_BUS_WIDTH
0x5A003000 C   FIELD 15w01 DLL_OFF_MODE: DLL_OFF_MODE
0x5A003000 C   FIELD 16w04 BURST_RDWR: BURST_RDWR
0x5A003004 B  REGISTER DDRCTRL_STAT (ro): DDRCTRL operating mode status register
0x5A003004 C   FIELD 00w03 OPERATING_MODE: OPERATING_MODE
0x5A003004 C   FIELD 04w02 SELFREF_TYPE: SELFREF_TYPE
0x5A003004 C   FIELD 12w01 SELFREF_CAM_NOT_EMPTY: SELFREF_CAM_NOT_EMPTY
0x5A003010 B  REGISTER DDRCTRL_MRCTRL0 (rw): Mode Register Read/Write Control Register 0. Do not enable more than one of the following fields simultaneously: sw_init_int pda_en mpr_en
0x5A003010 C   FIELD 00w01 MR_TYPE: MR_TYPE
0x5A003010 C   FIELD 04w01 MR_RANK: MR_RANK
0x5A003010 C   FIELD 12w04 MR_ADDR: MR_ADDR
0x5A003010 C   FIELD 31w01 MR_WR: MR_WR
0x5A003014 B  REGISTER DDRCTRL_MRCTRL1 (rw): DDRCTRL mode register read/write control register 1
0x5A003014 C   FIELD 00w16 MR_DATA: MR_DATA
0x5A003018 B  REGISTER DDRCTRL_MRSTAT (ro): DDRCTRL mode register read/write status register
0x5A003018 C   FIELD 00w01 MR_WR_BUSY: MR_WR_BUSY
0x5A003020 B  REGISTER DDRCTRL_DERATEEN (rw): DDRCTRL temperature derate enable register
0x5A003020 C   FIELD 00w01 DERATE_ENABLE: DERATE_ENABLE
0x5A003020 C   FIELD 01w02 DERATE_VALUE: DERATE_VALUE
0x5A003020 C   FIELD 04w04 DERATE_BYTE: DERATE_BYTE
0x5A003024 B  REGISTER DDRCTRL_DERATEINT (rw): DDRCTRL temperature derate interval register
0x5A003024 C   FIELD 00w32 MR4_READ_INTERVAL: MR4_READ_INTERVAL
0x5A003030 B  REGISTER DDRCTRL_PWRCTL (rw): DDRCTRL low power control register
0x5A003030 C   FIELD 00w01 SELFREF_EN: SELFREF_EN
0x5A003030 C   FIELD 01w01 POWERDOWN_EN: POWERDOWN_EN
0x5A003030 C   FIELD 02w01 DEEPPOWERDOWN_EN: DEEPPOWERDOWN_EN
0x5A003030 C   FIELD 03w01 EN_DFI_DRAM_CLK_DISABLE: EN_DFI_DRAM_CLK_DISABLE
0x5A003030 C   FIELD 05w01 SELFREF_SW: SELFREF_SW
0x5A003030 C   FIELD 07w01 DIS_CAM_DRAIN_SELFREF: DIS_CAM_DRAIN_SELFREF
0x5A003034 B  REGISTER DDRCTRL_PWRTMG (rw): DDRCTRL low power timing register
0x5A003034 C   FIELD 00w05 POWERDOWN_TO_X32: POWERDOWN_TO_X32
0x5A003034 C   FIELD 08w08 T_DPD_X4096: T_DPD_X4096
0x5A003034 C   FIELD 16w08 SELFREF_TO_X32: SELFREF_TO_X32
0x5A003038 B  REGISTER DDRCTRL_HWLPCTL (rw): DDRCTRL hardware low power control register
0x5A003038 C   FIELD 00w01 HW_LP_EN: HW_LP_EN
0x5A003038 C   FIELD 01w01 HW_LP_EXIT_IDLE_EN: HW_LP_EXIT_IDLE_EN
0x5A003038 C   FIELD 16w12 HW_LP_IDLE_X32: HW_LP_IDLE_X32
0x5A003050 B  REGISTER DDRCTRL_RFSHCTL0 (rw): DDRCTRL refresh control register 0
0x5A003050 C   FIELD 02w01 PER_BANK_REFRESH: PER_BANK_REFRESH
0x5A003050 C   FIELD 04w05 REFRESH_BURST: REFRESH_BURST
0x5A003050 C   FIELD 12w05 REFRESH_TO_X32: REFRESH_TO_X32
0x5A003050 C   FIELD 20w04 REFRESH_MARGIN: REFRESH_MARGIN
0x5A003060 B  REGISTER DDRCTRL_RFSHCTL3 (rw): DDRCTRL refresh control register 3
0x5A003060 C   FIELD 00w01 DIS_AUTO_REFRESH: DIS_AUTO_REFRESH
0x5A003060 C   FIELD 01w01 REFRESH_UPDATE_LEVEL: REFRESH_UPDATE_LEVEL
0x5A003064 B  REGISTER DDRCTRL_RFSHTMG (rw): DDRCTRL refresh timing register
0x5A003064 C   FIELD 00w10 T_RFC_MIN: T_RFC_MIN
0x5A003064 C   FIELD 15w01 LPDDR3_TREFBW_EN: LPDDR3_TREFBW_EN
0x5A003064 C   FIELD 16w12 T_RFC_NOM_X1_X32: T_RFC_NOM_X1_X32
0x5A003064 C   FIELD 31w01 T_RFC_NOM_X1_SEL: T_RFC_NOM_X1_SEL
0x5A0030C0 B  REGISTER DDRCTRL_CRCPARCTL0 (rw): DDRCTRL CRC parity control register 0
0x5A0030C0 C   FIELD 00w01 DFI_ALERT_ERR_INT_EN: DFI_ALERT_ERR_INT_EN
0x5A0030C0 C   FIELD 01w01 DFI_ALERT_ERR_INT_CLR: DFI_ALERT_ERR_INT_CLR
0x5A0030C0 C   FIELD 02w01 DFI_ALERT_ERR_CNT_CLR: DFI_ALERT_ERR_CNT_CLR
0x5A0030CC B  REGISTER DDRCTRL_CRCPARSTAT (ro): DDRCTRL CRC parity status register
0x5A0030CC C   FIELD 00w16 DFI_ALERT_ERR_CNT: DFI_ALERT_ERR_CNT
0x5A0030CC C   FIELD 16w01 DFI_ALERT_ERR_INT: DFI_ALERT_ERR_INT
0x5A0030D0 B  REGISTER DDRCTRL_INIT0 (rw): DDRCTRL SDRAM initialization register 0
0x5A0030D0 C   FIELD 00w12 PRE_CKE_X1024: PRE_CKE_X1024
0x5A0030D0 C   FIELD 16w10 POST_CKE_X1024: POST_CKE_X1024
0x5A0030D0 C   FIELD 30w02 SKIP_DRAM_INIT: SKIP_DRAM_INIT
0x5A0030D4 B  REGISTER DDRCTRL_INIT1 (rw): DDRCTRL SDRAM initialization register 1
0x5A0030D4 C   FIELD 00w04 PRE_OCD_X32: PRE_OCD_X32
0x5A0030D4 C   FIELD 16w09 DRAM_RSTN_X1024: DRAM_RSTN_X1024
0x5A0030D8 B  REGISTER DDRCTRL_INIT2 (rw): DDRCTRL SDRAM initialization register 2
0x5A0030D8 C   FIELD 00w04 MIN_STABLE_CLOCK_X1: MIN_STABLE_CLOCK_X1
0x5A0030D8 C   FIELD 08w08 IDLE_AFTER_RESET_X32: IDLE_AFTER_RESET_X32
0x5A0030DC B  REGISTER DDRCTRL_INIT3 (rw): DDRCTRL SDRAM initialization register 3
0x5A0030DC C   FIELD 00w16 EMR: EMR
0x5A0030DC C   FIELD 16w16 MR: MR
0x5A0030E0 B  REGISTER DDRCTRL_INIT4 (rw): DDRCTRL SDRAM initialization register 4
0x5A0030E0 C   FIELD 00w16 EMR3: EMR3
0x5A0030E0 C   FIELD 16w16 EMR2: EMR2
0x5A0030E4 B  REGISTER DDRCTRL_INIT5 (rw): DDRCTRL SDRAM initialization register 5
0x5A0030E4 C   FIELD 00w10 MAX_AUTO_INIT_X1024: MAX_AUTO_INIT_X1024
0x5A0030E4 C   FIELD 16w08 DEV_ZQINIT_X32: DEV_ZQINIT_X32
0x5A0030F0 B  REGISTER DDRCTRL_DIMMCTL (rw): DDRCTRL DIMM control register
0x5A0030F0 C   FIELD 00w01 DIMM_STAGGER_CS_EN: DIMM_STAGGER_CS_EN
0x5A0030F0 C   FIELD 01w01 DIMM_ADDR_MIRR_EN: DIMM_ADDR_MIRR_EN
0x5A003100 B  REGISTER DDRCTRL_DRAMTMG0 (rw): DDRCTRL SDRAM timing register 0
0x5A003100 C   FIELD 00w06 T_RAS_MIN: T_RAS_MIN
0x5A003100 C   FIELD 08w07 T_RAS_MAX: T_RAS_MAX
0x5A003100 C   FIELD 16w06 T_FAW: T_FAW
0x5A003100 C   FIELD 24w07 WR2PRE: WR2PRE
0x5A003104 B  REGISTER DDRCTRL_DRAMTMG1 (rw): DDRCTRL SDRAM timing register 1
0x5A003104 C   FIELD 00w07 T_RC: T_RC
0x5A003104 C   FIELD 08w06 RD2PRE: RD2PRE
0x5A003104 C   FIELD 16w05 T_XP: T_XP
0x5A003108 B  REGISTER DDRCTRL_DRAMTMG2 (rw): DDRCTRL SDRAM timing register 2
0x5A003108 C   FIELD 00w06 WR2RD: WR2RD
0x5A003108 C   FIELD 08w06 RD2WR: RD2WR
0x5A003108 C   FIELD 16w06 READ_LATENCY: READ_LATENCY
0x5A003108 C   FIELD 24w06 WRITE_LATENCY: WRITE_LATENCY
0x5A00310C B  REGISTER DDRCTRL_DRAMTMG3 (rw): DDRCTRL SDRAM timing register 3
0x5A00310C C   FIELD 00w10 T_MOD: T_MOD
0x5A00310C C   FIELD 12w06 T_MRD: T_MRD
0x5A00310C C   FIELD 20w10 T_MRW: T_MRW
0x5A003110 B  REGISTER DDRCTRL_DRAMTMG4 (rw): DDRCTRL SDRAM timing register 4
0x5A003110 C   FIELD 00w05 T_RP: T_RP
0x5A003110 C   FIELD 08w04 T_RRD: T_RRD
0x5A003110 C   FIELD 16w04 T_CCD: T_CCD
0x5A003110 C   FIELD 24w05 T_RCD: T_RCD
0x5A003114 B  REGISTER DDRCTRL_DRAMTMG5 (rw): DDRCTRL SDRAM timing register 5
0x5A003114 C   FIELD 00w05 T_CKE: T_CKE
0x5A003114 C   FIELD 08w06 T_CKESR: T_CKESR
0x5A003114 C   FIELD 16w04 T_CKSRE: T_CKSRE
0x5A003114 C   FIELD 24w04 T_CKSRX: T_CKSRX
0x5A003118 B  REGISTER DDRCTRL_DRAMTMG6 (rw): DDRCTRL SDRAM timing register 6
0x5A003118 C   FIELD 00w04 T_CKCSX: T_CKCSX
0x5A003118 C   FIELD 16w04 T_CKDPDX: T_CKDPDX
0x5A003118 C   FIELD 24w04 T_CKDPDE: T_CKDPDE
0x5A00311C B  REGISTER DDRCTRL_DRAMTMG7 (rw): DDRCTRL SDRAM timing register 7
0x5A00311C C   FIELD 00w04 T_CKPDX: T_CKPDX
0x5A00311C C   FIELD 08w04 T_CKPDE: T_CKPDE
0x5A003120 B  REGISTER DDRCTRL_DRAMTMG8 (rw): DDRCTRL SDRAM timing register 8
0x5A003120 C   FIELD 00w07 T_XS_X32: T_XS_X32
0x5A003120 C   FIELD 08w07 T_XS_DLL_X32: T_XS_DLL_X32
0x5A003138 B  REGISTER DDRCTRL_DRAMTMG14 (rw): DDRCTRL SDRAM timing register 14
0x5A003138 C   FIELD 00w12 T_XSR: T_XSR
0x5A00313C B  REGISTER DDRCTRL_DRAMTMG15 (rw): DDRCTRL SDRAM timing register 15
0x5A00313C C   FIELD 00w08 T_STAB_X32: T_STAB_X32
0x5A00313C C   FIELD 31w01 EN_DFI_LP_T_STAB: EN_DFI_LP_T_STAB
0x5A003180 B  REGISTER DDRCTRL_ZQCTL0 (rw): DDRCTRL ZQ control register 0
0x5A003180 C   FIELD 00w10 T_ZQ_SHORT_NOP: T_ZQ_SHORT_NOP
0x5A003180 C   FIELD 16w11 T_ZQ_LONG_NOP: T_ZQ_LONG_NOP
0x5A003180 C   FIELD 29w01 ZQ_RESISTOR_SHARED: ZQ_RESISTOR_SHARED
0x5A003180 C   FIELD 30w01 DIS_SRX_ZQCL: DIS_SRX_ZQCL
0x5A003180 C   FIELD 31w01 DIS_AUTO_ZQ: DIS_AUTO_ZQ
0x5A003184 B  REGISTER DDRCTRL_ZQCTL1 (rw): DDRCTRL ZQ control register 1
0x5A003184 C   FIELD 00w20 T_ZQ_SHORT_INTERVAL_X1024: T_ZQ_SHORT_INTERVAL_X1024
0x5A003184 C   FIELD 20w10 T_ZQ_RESET_NOP: T_ZQ_RESET_NOP
0x5A003188 B  REGISTER DDRCTRL_ZQCTL2 (rw): DDRCTRL ZQ control register 2
0x5A003188 C   FIELD 00w01 ZQ_RESET: ZQ_RESET
0x5A00318C B  REGISTER DDRCTRL_ZQSTAT (ro): DDRCTRL ZQ status register
0x5A00318C C   FIELD 00w01 ZQ_RESET_BUSY: ZQ_RESET_BUSY
0x5A003190 B  REGISTER DDRCTRL_DFITMG0 (rw): DDRCTRL DFI timing register 0
0x5A003190 C   FIELD 00w06 DFI_TPHY_WRLAT: DFI_TPHY_WRLAT
0x5A003190 C   FIELD 08w06 DFI_TPHY_WRDATA: DFI_TPHY_WRDATA
0x5A003190 C   FIELD 16w07 DFI_T_RDDATA_EN: DFI_T_RDDATA_EN
0x5A003190 C   FIELD 24w05 DFI_T_CTRL_DELAY: DFI_T_CTRL_DELAY
0x5A003194 B  REGISTER DDRCTRL_DFITMG1 (rw): DDRCTRL DFI timing register 1
0x5A003194 C   FIELD 00w05 DFI_T_DRAM_CLK_ENABLE: DFI_T_DRAM_CLK_ENABLE
0x5A003194 C   FIELD 08w05 DFI_T_DRAM_CLK_DISABLE: DFI_T_DRAM_CLK_DISABLE
0x5A003194 C   FIELD 16w05 DFI_T_WRDATA_DELAY: DFI_T_WRDATA_DELAY
0x5A003198 B  REGISTER DDRCTRL_DFILPCFG0 (rw): DDRCTRL low power configuration register 0
0x5A003198 C   FIELD 00w01 DFI_LP_EN_PD: DFI_LP_EN_PD
0x5A003198 C   FIELD 04w04 DFI_LP_WAKEUP_PD: DFI_LP_WAKEUP_PD
0x5A003198 C   FIELD 08w01 DFI_LP_EN_SR: DFI_LP_EN_SR
0x5A003198 C   FIELD 12w04 DFI_LP_WAKEUP_SR: DFI_LP_WAKEUP_SR
0x5A003198 C   FIELD 16w01 DFI_LP_EN_DPD: DFI_LP_EN_DPD
0x5A003198 C   FIELD 20w04 DFI_LP_WAKEUP_DPD: DFI_LP_WAKEUP_DPD
0x5A003198 C   FIELD 24w05 DFI_TLP_RESP: DFI_TLP_RESP
0x5A0031A0 B  REGISTER DDRCTRL_DFIUPD0 (rw): DDRCTRL DFI update register 0
0x5A0031A0 C   FIELD 00w10 DFI_T_CTRLUP_MIN: DFI_T_CTRLUP_MIN
0x5A0031A0 C   FIELD 16w10 DFI_T_CTRLUP_MAX: DFI_T_CTRLUP_MAX
0x5A0031A0 C   FIELD 29w01 CTRLUPD_PRE_SRX: CTRLUPD_PRE_SRX
0x5A0031A0 C   FIELD 30w01 DIS_AUTO_CTRLUPD_SRX: DIS_AUTO_CTRLUPD_SRX
0x5A0031A0 C   FIELD 31w01 DIS_AUTO_CTRLUPD: DIS_AUTO_CTRLUPD
0x5A0031A4 B  REGISTER DDRCTRL_DFIUPD1 (rw): DDRCTRL DFI update register 1
0x5A0031A4 C   FIELD 00w08 DFI_T_CTRLUPD_INTERVAL_MAX_X1024: DFI_T_CTRLUPD_INTERVAL_MAX_X1024
0x5A0031A4 C   FIELD 16w08 DFI_T_CTRLUPD_INTERVAL_MIN_X1024: DFI_T_CTRLUPD_INTERVAL_MIN_X1024
0x5A0031A8 B  REGISTER DDRCTRL_DFIUPD2 (rw): DDRCTRL DFI update register 2
0x5A0031A8 C   FIELD 31w01 DFI_PHYUPD_EN: DFI_PHYUPD_EN
0x5A0031B0 B  REGISTER DDRCTRL_DFIMISC (rw): DDRCTRL DFI miscellaneous control register
0x5A0031B0 C   FIELD 00w01 DFI_INIT_COMPLETE_EN: DFI_INIT_COMPLETE_EN
0x5A0031B0 C   FIELD 04w01 CTL_IDLE_EN: CTL_IDLE_EN
0x5A0031B0 C   FIELD 05w01 DFI_INIT_START: DFI_INIT_START
0x5A0031B0 C   FIELD 08w05 DFI_FREQUENCY: DFI_FREQUENCY
0x5A0031BC B  REGISTER DDRCTRL_DFISTAT (ro): DDRCTRL DFI status register
0x5A0031BC C   FIELD 00w01 DFI_INIT_COMPLETE: DFI_INIT_COMPLETE
0x5A0031BC C   FIELD 01w01 DFI_LP_ACK: DFI_LP_ACK
0x5A0031C4 B  REGISTER DDRCTRL_DFIPHYMSTR (rw): DDRCTRL DFI PHY master register
0x5A0031C4 C   FIELD 00w01 DFI_PHYMSTR_EN: DFI_PHYMSTR_EN
0x5A003204 B  REGISTER DDRCTRL_ADDRMAP1 (rw): DDRCTRL address map register 1
0x5A003204 C   FIELD 00w06 ADDRMAP_BANK_B0: ADDRMAP_BANK_B0
0x5A003204 C   FIELD 08w06 ADDRMAP_BANK_B1: ADDRMAP_BANK_B1
0x5A003204 C   FIELD 16w06 ADDRMAP_BANK_B2: ADDRMAP_BANK_B2
0x5A003208 B  REGISTER DDRCTRL_ADDRMAP2 (rw): DDRCTRL address map register 2
0x5A003208 C   FIELD 00w04 ADDRMAP_COL_B2: ADDRMAP_COL_B2
0x5A003208 C   FIELD 08w04 ADDRMAP_COL_B3: ADDRMAP_COL_B3
0x5A003208 C   FIELD 16w04 ADDRMAP_COL_B4: ADDRMAP_COL_B4
0x5A003208 C   FIELD 24w04 ADDRMAP_COL_B5: ADDRMAP_COL_B5
0x5A00320C B  REGISTER DDRCTRL_ADDRMAP3 (rw): DDRCTRL address map register 3
0x5A00320C C   FIELD 00w04 ADDRMAP_COL_B6: ADDRMAP_COL_B6
0x5A00320C C   FIELD 08w05 ADDRMAP_COL_B7: ADDRMAP_COL_B7
0x5A00320C C   FIELD 16w05 ADDRMAP_COL_B8: ADDRMAP_COL_B8
0x5A00320C C   FIELD 24w05 ADDRMAP_COL_B9: ADDRMAP_COL_B9
0x5A003210 B  REGISTER DDRCTRL_ADDRMAP4 (rw): DDRCTRL address map register 4
0x5A003210 C   FIELD 00w05 ADDRMAP_COL_B10: ADDRMAP_COL_B10
0x5A003210 C   FIELD 08w05 ADDRMAP_COL_B11: ADDRMAP_COL_B11
0x5A003214 B  REGISTER DDRCTRL_ADDRMAP5 (rw): DDRCTRL address map register 5
0x5A003214 C   FIELD 00w04 ADDRMAP_ROW_B0: ADDRMAP_ROW_B0
0x5A003214 C   FIELD 08w04 ADDRMAP_ROW_B1: ADDRMAP_ROW_B1
0x5A003214 C   FIELD 16w04 ADDRMAP_ROW_B2_10: ADDRMAP_ROW_B2_10
0x5A003214 C   FIELD 24w04 ADDRMAP_ROW_B11: ADDRMAP_ROW_B11
0x5A003218 B  REGISTER DDRCTRL_ADDRMAP6 (rw): DDRCTRL address register 6
0x5A003218 C   FIELD 00w04 ADDRMAP_ROW_B12: ADDRMAP_ROW_B12
0x5A003218 C   FIELD 08w04 ADDRMAP_ROW_B13: ADDRMAP_ROW_B13
0x5A003218 C   FIELD 16w04 ADDRMAP_ROW_B14: ADDRMAP_ROW_B14
0x5A003218 C   FIELD 24w04 ADDRMAP_ROW_B15: ADDRMAP_ROW_B15
0x5A003218 C   FIELD 31w01 LPDDR3_6GB_12GB: LPDDR3_6GB_12GB
0x5A003224 B  REGISTER DDRCTRL_ADDRMAP9 (rw): DDRCTRL address map register 9
0x5A003224 C   FIELD 00w04 ADDRMAP_ROW_B2: ADDRMAP_ROW_B2
0x5A003224 C   FIELD 08w04 ADDRMAP_ROW_B3: ADDRMAP_ROW_B3
0x5A003224 C   FIELD 16w04 ADDRMAP_ROW_B4: ADDRMAP_ROW_B4
0x5A003224 C   FIELD 24w04 ADDRMAP_ROW_B5: ADDRMAP_ROW_B5
0x5A003228 B  REGISTER DDRCTRL_ADDRMAP10 (rw): DDRCTRL address map register 10
0x5A003228 C   FIELD 00w04 ADDRMAP_ROW_B6: ADDRMAP_ROW_B6
0x5A003228 C   FIELD 08w04 ADDRMAP_ROW_B7: ADDRMAP_ROW_B7
0x5A003228 C   FIELD 16w04 ADDRMAP_ROW_B8: ADDRMAP_ROW_B8
0x5A003228 C   FIELD 24w04 ADDRMAP_ROW_B9: ADDRMAP_ROW_B9
0x5A00322C B  REGISTER DDRCTRL_ADDRMAP11 (rw): DDRCTRL address map register 11
0x5A00322C C   FIELD 00w04 ADDRMAP_ROW_B10: ADDRMAP_ROW_B10
0x5A003240 B  REGISTER DDRCTRL_ODTCFG (rw): DDRCTRL ODT configuration register
0x5A003240 C   FIELD 02w05 RD_ODT_DELAY: RD_ODT_DELAY
0x5A003240 C   FIELD 08w04 RD_ODT_HOLD: RD_ODT_HOLD
0x5A003240 C   FIELD 16w05 WR_ODT_DELAY: WR_ODT_DELAY
0x5A003240 C   FIELD 24w04 WR_ODT_HOLD: WR_ODT_HOLD
0x5A003244 B  REGISTER DDRCTRL_ODTMAP (rw): DDRCTRL ODT/Rank map register
0x5A003244 C   FIELD 00w01 RANK0_WR_ODT: RANK0_WR_ODT
0x5A003244 C   FIELD 04w01 RANK0_RD_ODT: RANK0_RD_ODT
0x5A003250 B  REGISTER DDRCTRL_SCHED (rw): DDRCTRL scheduler control register
0x5A003250 C   FIELD 00w01 FORCE_LOW_PRI_N: FORCE_LOW_PRI_N
0x5A003250 C   FIELD 01w01 PREFER_WRITE: PREFER_WRITE
0x5A003250 C   FIELD 02w01 PAGECLOSE: PAGECLOSE
0x5A003250 C   FIELD 08w04 LPR_NUM_ENTRIES: LPR_NUM_ENTRIES
0x5A003250 C   FIELD 16w08 GO2CRITICAL_HYSTERESIS: GO2CRITICAL_HYSTERESIS
0x5A003250 C   FIELD 24w07 RDWR_IDLE_GAP: RDWR_IDLE_GAP
0x5A003254 B  REGISTER DDRCTRL_SCHED1 (rw): DDRCTRL scheduler control register 1
0x5A003254 C   FIELD 00w08 PAGECLOSE_TIMER: PAGECLOSE_TIMER
0x5A00325C B  REGISTER DDRCTRL_PERFHPR1 (rw): DDRCTRL high priority read CAM register 1
0x5A00325C C   FIELD 00w16 HPR_MAX_STARVE: HPR_MAX_STARVE
0x5A00325C C   FIELD 24w08 HPR_XACT_RUN_LENGTH: HPR_XACT_RUN_LENGTH
0x5A003264 B  REGISTER DDRCTRL_PERFLPR1 (rw): DDRCTRL low priority read CAM register 1
0x5A003264 C   FIELD 00w16 LPR_MAX_STARVE: LPR_MAX_STARVE
0x5A003264 C   FIELD 24w08 LPR_XACT_RUN_LENGTH: LPR_XACT_RUN_LENGTH
0x5A00326C B  REGISTER DDRCTRL_PERFWR1 (rw): DDRCTRL write CAM register 1
0x5A00326C C   FIELD 00w16 W_MAX_STARVE: W_MAX_STARVE
0x5A00326C C   FIELD 24w08 W_XACT_RUN_LENGTH: W_XACT_RUN_LENGTH
0x5A003300 B  REGISTER DDRCTRL_DBG0 (rw): DDRCTRL debug register 0
0x5A003300 C   FIELD 00w01 DIS_WC: DIS_WC
0x5A003300 C   FIELD 04w01 DIS_COLLISION_PAGE_OPT: DIS_COLLISION_PAGE_OPT
0x5A003304 B  REGISTER DDRCTRL_DBG1 (rw): DDRCTRL debug register 1
0x5A003304 C   FIELD 00w01 DIS_DQ: DIS_DQ
0x5A003304 C   FIELD 01w01 DIS_HIF: DIS_HIF
0x5A003308 B  REGISTER DDRCTRL_DBGCAM (ro): DDRCTRL CAM debug register
0x5A003308 C   FIELD 00w05 DBG_HPR_Q_DEPTH: DBG_HPR_Q_DEPTH
0x5A003308 C   FIELD 08w05 DBG_LPR_Q_DEPTH: DBG_LPR_Q_DEPTH
0x5A003308 C   FIELD 16w05 DBG_W_Q_DEPTH: DBG_W_Q_DEPTH
0x5A003308 C   FIELD 24w01 DBG_STALL: DBG_STALL
0x5A003308 C   FIELD 25w01 DBG_RD_Q_EMPTY: DBG_RD_Q_EMPTY
0x5A003308 C   FIELD 26w01 DBG_WR_Q_EMPTY: DBG_WR_Q_EMPTY
0x5A003308 C   FIELD 28w01 RD_DATA_PIPELINE_EMPTY: RD_DATA_PIPELINE_EMPTY
0x5A003308 C   FIELD 29w01 WR_DATA_PIPELINE_EMPTY: WR_DATA_PIPELINE_EMPTY
0x5A00330C B  REGISTER DDRCTRL_DBGCMD (rw): DDRCTRL command debug register
0x5A00330C C   FIELD 00w01 RANK0_REFRESH: RANK0_REFRESH
0x5A00330C C   FIELD 04w01 ZQ_CALIB_SHORT: ZQ_CALIB_SHORT
0x5A00330C C   FIELD 05w01 CTRLUPD: CTRLUPD
0x5A003310 B  REGISTER DDRCTRL_DBGSTAT (ro): DDRCTRL status debug register
0x5A003310 C   FIELD 00w01 RANK0_REFRESH_BUSY: RANK0_REFRESH_BUSY
0x5A003310 C   FIELD 04w01 ZQ_CALIB_SHORT_BUSY: ZQ_CALIB_SHORT_BUSY
0x5A003310 C   FIELD 05w01 CTRLUPD_BUSY: CTRLUPD_BUSY
0x5A003320 B  REGISTER DDRCTRL_SWCTL (rw): DDRCTRL software register programming control enable
0x5A003320 C   FIELD 00w01 SW_DONE: SW_DONE
0x5A003324 B  REGISTER DDRCTRL_SWSTAT (ro): DDRCTRL software register programming control status
0x5A003324 C   FIELD 00w01 SW_DONE_ACK: SW_DONE_ACK
0x5A00336C B  REGISTER DDRCTRL_POISONCFG (rw): AXI Poison configuration register common for all AXI ports.
0x5A00336C C   FIELD 00w01 WR_POISON_SLVERR_EN: WR_POISON_SLVERR_EN
0x5A00336C C   FIELD 04w01 WR_POISON_INTR_EN: WR_POISON_INTR_EN
0x5A00336C C   FIELD 08w01 WR_POISON_INTR_CLR: WR_POISON_INTR_CLR
0x5A00336C C   FIELD 16w01 RD_POISON_SLVERR_EN: RD_POISON_SLVERR_EN
0x5A00336C C   FIELD 20w01 RD_POISON_INTR_EN: RD_POISON_INTR_EN
0x5A00336C C   FIELD 24w01 RD_POISON_INTR_CLR: RD_POISON_INTR_CLR
0x5A003370 B  REGISTER DDRCTRL_POISONSTAT (ro): DDRCTRL AXI Poison status register
0x5A003370 C   FIELD 00w01 WR_POISON_INTR_0: WR_POISON_INTR_0
0x5A003370 C   FIELD 01w01 WR_POISON_INTR_1: WR_POISON_INTR_1
0x5A003370 C   FIELD 16w01 RD_POISON_INTR_0: RD_POISON_INTR_0
0x5A003370 C   FIELD 17w01 RD_POISON_INTR_1: RD_POISON_INTR_1
0x5A0033FC B  REGISTER DDRCTRL_PSTAT (ro): DDRCTRL port status register
0x5A0033FC C   FIELD 00w01 RD_PORT_BUSY_0: RD_PORT_BUSY_0
0x5A0033FC C   FIELD 01w01 RD_PORT_BUSY_1: RD_PORT_BUSY_1
0x5A0033FC C   FIELD 16w01 WR_PORT_BUSY_0: WR_PORT_BUSY_0
0x5A0033FC C   FIELD 17w01 WR_PORT_BUSY_1: WR_PORT_BUSY_1
0x5A003400 B  REGISTER DDRCTRL_PCCFG (rw): DDRCTRL port common configuration register
0x5A003400 C   FIELD 00w01 GO2CRITICAL_EN: GO2CRITICAL_EN
0x5A003400 C   FIELD 04w01 PAGEMATCH_LIMIT: PAGEMATCH_LIMIT
0x5A003400 C   FIELD 08w01 BL_EXP_MODE: BL_EXP_MODE
0x5A003404 B  REGISTER DDRCTRL_PCFGR_0 (rw): DDRCTRL port 0 configuration read register
0x5A003404 C   FIELD 00w10 RD_PORT_PRIORITY: RD_PORT_PRIORITY
0x5A003404 C   FIELD 12w01 RD_PORT_AGING_EN: RD_PORT_AGING_EN
0x5A003404 C   FIELD 13w01 RD_PORT_URGENT_EN: RD_PORT_URGENT_EN
0x5A003404 C   FIELD 14w01 RD_PORT_PAGEMATCH_EN: RD_PORT_PAGEMATCH_EN
0x5A003404 C   FIELD 16w01 RDWR_ORDERED_EN: RDWR_ORDERED_EN
0x5A003408 B  REGISTER DDRCTRL_PCFGW_0 (rw): DDRCTRL port 0 configuration write register
0x5A003408 C   FIELD 00w10 WR_PORT_PRIORITY: WR_PORT_PRIORITY
0x5A003408 C   FIELD 12w01 WR_PORT_AGING_EN: WR_PORT_AGING_EN
0x5A003408 C   FIELD 13w01 WR_PORT_URGENT_EN: WR_PORT_URGENT_EN
0x5A003408 C   FIELD 14w01 WR_PORT_PAGEMATCH_EN: WR_PORT_PAGEMATCH_EN
0x5A003490 B  REGISTER DDRCTRL_PCTRL_0 (rw): DDRCTRL port 0 control register
0x5A003490 C   FIELD 00w01 PORT_EN: PORT_EN
0x5A003494 B  REGISTER DDRCTRL_PCFGQOS0_0 (rw): DDRCTRL port 0 read Q0S configuration register 0
0x5A003494 C   FIELD 00w04 RQOS_MAP_LEVEL1: RQOS_MAP_LEVEL1
0x5A003494 C   FIELD 08w04 RQOS_MAP_LEVEL2: RQOS_MAP_LEVEL2
0x5A003494 C   FIELD 16w02 RQOS_MAP_REGION0: RQOS_MAP_REGION0
0x5A003494 C   FIELD 20w02 RQOS_MAP_REGION1: RQOS_MAP_REGION1
0x5A003494 C   FIELD 24w02 RQOS_MAP_REGION2: RQOS_MAP_REGION2
0x5A003498 B  REGISTER DDRCTRL_PCFGQOS1_0 (rw): DDRCTRL port 0 read Q0S configuration register 1
0x5A003498 C   FIELD 00w11 RQOS_MAP_TIMEOUTB: RQOS_MAP_TIMEOUTB
0x5A003498 C   FIELD 16w11 RQOS_MAP_TIMEOUTR: RQOS_MAP_TIMEOUTR
0x5A00349C B  REGISTER DDRCTRL_PCFGWQOS0_0 (rw): DDRCTRL port 0 write Q0S configuration register 0
0x5A00349C C   FIELD 00w04 WQOS_MAP_LEVEL1: WQOS_MAP_LEVEL1
0x5A00349C C   FIELD 08w04 WQOS_MAP_LEVEL2: WQOS_MAP_LEVEL2
0x5A00349C C   FIELD 16w02 WQOS_MAP_REGION0: WQOS_MAP_REGION0
0x5A00349C C   FIELD 20w02 WQOS_MAP_REGION1: WQOS_MAP_REGION1
0x5A00349C C   FIELD 24w02 WQOS_MAP_REGION2: WQOS_MAP_REGION2
0x5A0034A0 B  REGISTER DDRCTRL_PCFGWQOS1_0 (rw): DDRCTRL port 0 write Q0S configuration register 1
0x5A0034A0 C   FIELD 00w11 WQOS_MAP_TIMEOUT1: WQOS_MAP_TIMEOUT1
0x5A0034A0 C   FIELD 16w11 WQOS_MAP_TIMEOUT2: WQOS_MAP_TIMEOUT2
0x5A0034B4 B  REGISTER DDRCTRL_PCFGR_1 (rw): DDRCTRL port 1 configuration read register
0x5A0034B4 C   FIELD 00w10 RD_PORT_PRIORITY: RD_PORT_PRIORITY
0x5A0034B4 C   FIELD 12w01 RD_PORT_AGING_EN: RD_PORT_AGING_EN
0x5A0034B4 C   FIELD 13w01 RD_PORT_URGENT_EN: RD_PORT_URGENT_EN
0x5A0034B4 C   FIELD 14w01 RD_PORT_PAGEMATCH_EN: RD_PORT_PAGEMATCH_EN
0x5A0034B4 C   FIELD 16w01 RDWR_ORDERED_EN: RDWR_ORDERED_EN
0x5A0034B8 B  REGISTER DDRCTRL_PCFGW_1 (rw): DDRCTRL port 1 configuration write register
0x5A0034B8 C   FIELD 00w10 WR_PORT_PRIORITY: WR_PORT_PRIORITY
0x5A0034B8 C   FIELD 12w01 WR_PORT_AGING_EN: WR_PORT_AGING_EN
0x5A0034B8 C   FIELD 13w01 WR_PORT_URGENT_EN: WR_PORT_URGENT_EN
0x5A0034B8 C   FIELD 14w01 WR_PORT_PAGEMATCH_EN: WR_PORT_PAGEMATCH_EN
0x5A003540 B  REGISTER DDRCTRL_PCTRL_1 (rw): DDRCTRL port 1 control register
0x5A003540 C   FIELD 00w01 PORT_EN: PORT_EN
0x5A003544 B  REGISTER DDRCTRL_PCFGQOS0_1 (rw): DDRCTRL port 1 read Q0S configuration register 0
0x5A003544 C   FIELD 00w04 RQOS_MAP_LEVEL1: RQOS_MAP_LEVEL1
0x5A003544 C   FIELD 08w04 RQOS_MAP_LEVEL2: RQOS_MAP_LEVEL2
0x5A003544 C   FIELD 16w02 RQOS_MAP_REGION0: RQOS_MAP_REGION0
0x5A003544 C   FIELD 20w02 RQOS_MAP_REGION1: RQOS_MAP_REGION1
0x5A003544 C   FIELD 24w02 RQOS_MAP_REGION2: RQOS_MAP_REGION2
0x5A003548 B  REGISTER DDRCTRL_PCFGQOS1_1 (rw): DDRCTRL port 1 read Q0S configuration register 1
0x5A003548 C   FIELD 00w11 RQOS_MAP_TIMEOUTB: RQOS_MAP_TIMEOUTB
0x5A003548 C   FIELD 16w11 RQOS_MAP_TIMEOUTR: RQOS_MAP_TIMEOUTR
0x5A00354C B  REGISTER DDRCTRL_PCFGWQOS0_1 (rw): DDRCTRL port 1 write Q0S configuration register 0
0x5A00354C C   FIELD 00w04 WQOS_MAP_LEVEL1: WQOS_MAP_LEVEL1
0x5A00354C C   FIELD 08w04 WQOS_MAP_LEVEL2: WQOS_MAP_LEVEL2
0x5A00354C C   FIELD 16w02 WQOS_MAP_REGION0: WQOS_MAP_REGION0
0x5A00354C C   FIELD 20w02 WQOS_MAP_REGION1: WQOS_MAP_REGION1
0x5A00354C C   FIELD 24w02 WQOS_MAP_REGION2: WQOS_MAP_REGION2
0x5A003550 B  REGISTER DDRCTRL_PCFGWQOS1_1 (rw): DDRCTRL port 1 write Q0S configuration register 1
0x5A003550 C   FIELD 00w11 WQOS_MAP_TIMEOUT1: WQOS_MAP_TIMEOUT1
0x5A003550 C   FIELD 16w11 WQOS_MAP_TIMEOUT2: WQOS_MAP_TIMEOUT2
0x5A004000 A PERIPHERAL DDRPHYC
0x5A004000 B  REGISTER DDRPHYC_RIDR (ro): DDRPHYC revision ID register
0x5A004000 C   FIELD 00w04 PUBMNR: PUBMNR
0x5A004000 C   FIELD 04w04 PUBMDR: PUBMDR
0x5A004000 C   FIELD 08w04 PUBMJR: PUBMJR
0x5A004000 C   FIELD 12w04 PHYMNR: PHYMNR
0x5A004000 C   FIELD 16w04 PHYMDR: PHYMDR
0x5A004000 C   FIELD 20w04 PHYMJR: PHYMJR
0x5A004000 C   FIELD 24w08 UDRID: UDRID
0x5A004004 B  REGISTER DDRPHYC_PIR (wo): DDRPHYC PHY initialization register
0x5A004004 C   FIELD 00w01 INIT: INIT
0x5A004004 C   FIELD 01w01 DLLSRST: DLLSRST
0x5A004004 C   FIELD 02w01 DLLLOCK: DLLLOCK
0x5A004004 C   FIELD 03w01 ZCAL: ZCAL
0x5A004004 C   FIELD 04w01 ITMSRST: ITMSRST
0x5A004004 C   FIELD 05w01 DRAMRST: DRAMRST
0x5A004004 C   FIELD 06w01 DRAMINIT: DRAMINIT
0x5A004004 C   FIELD 07w01 QSTRN: QSTRN
0x5A004004 C   FIELD 08w01 RVTRN: RVTRN
0x5A004004 C   FIELD 16w01 ICPC: ICPC
0x5A004004 C   FIELD 17w01 DLLBYP: DLLBYP
0x5A004004 C   FIELD 18w01 CTLDINIT: CTLDINIT
0x5A004004 C   FIELD 28w01 CLRSR: CLRSR
0x5A004004 C   FIELD 29w01 LOCKBYP: LOCKBYP
0x5A004004 C   FIELD 30w01 ZCALBYP: ZCALBYP
0x5A004004 C   FIELD 31w01 INITBYP: INITBYP
0x5A004008 B  REGISTER DDRPHYC_PGCR (rw): DDRPHYC PHY global control register
0x5A004008 C   FIELD 00w01 ITMDMD: ITMDMD
0x5A004008 C   FIELD 01w01 DQSCFG: DQSCFG
0x5A004008 C   FIELD 02w01 DFTCMP: DFTCMP
0x5A004008 C   FIELD 03w02 DFTLMT: DFTLMT
0x5A004008 C   FIELD 05w04 DTOSEL: DTOSEL
0x5A004008 C   FIELD 09w03 CKEN: CKEN
0x5A004008 C   FIELD 12w02 CKDV: CKDV
0x5A004008 C   FIELD 14w01 CKINV: CKINV
0x5A004008 C   FIELD 15w01 IOLB: IOLB
0x5A004008 C   FIELD 16w02 IODDRM: IODDRM
0x5A004008 C   FIELD 18w04 RANKEN: RANKEN
0x5A004008 C   FIELD 22w02 ZKSEL: ZKSEL
0x5A004008 C   FIELD 24w01 PDDISDX: PDDISDX
0x5A004008 C   FIELD 25w04 RFSHDT: RFSHDT
0x5A004008 C   FIELD 29w01 LBDQSS: LBDQSS
0x5A004008 C   FIELD 30w01 LBGDQS: LBGDQS
0x5A004008 C   FIELD 31w01 LBMODE: LBMODE
0x5A00400C B  REGISTER DDRPHYC_PGSR (ro): DDRPHYC PHY global status register
0x5A00400C C   FIELD 00w01 IDONE: IDONE
0x5A00400C C   FIELD 01w01 DLDONE: DLDONE
0x5A00400C C   FIELD 02w01 ZCDDONE: ZCDDONE
0x5A00400C C   FIELD 03w01 DIDONE: DIDONE
0x5A00400C C   FIELD 04w01 DTDONE: DTDONE
0x5A00400C C   FIELD 05w01 DTERR: DTERR
0x5A00400C C   FIELD 06w01 DTIERR: DTIERR
0x5A00400C C   FIELD 07w01 DFTERR: DFTERR
0x5A00400C C   FIELD 08w01 RVERR: RVERR
0x5A00400C C   FIELD 09w01 RVEIRR: RVEIRR
0x5A00400C C   FIELD 31w01 TQ: TQ
0x5A004010 B  REGISTER DDRPHYC_DLLGCR (rw): DDRPHYC DDR global control register
0x5A004010 C   FIELD 00w02 DRES: DRES
0x5A004010 C   FIELD 02w03 IPUMP: IPUMP
0x5A004010 C   FIELD 05w01 TESTEN: TESTEN
0x5A004010 C   FIELD 06w03 DTC: DTC
0x5A004010 C   FIELD 09w02 ATC: ATC
0x5A004010 C   FIELD 11w01 TESTSW: TESTSW
0x5A004010 C   FIELD 12w08 MBIAS: MBIAS
0x5A004010 C   FIELD 20w03 SBIAS2_0: SBIAS2_0
0x5A004010 C   FIELD 23w01 BPS200: BPS200
0x5A004010 C   FIELD 24w03 SBIAS5_3: SBIAS5_3
0x5A004010 C   FIELD 27w02 FDTRMSL: FDTRMSL
0x5A004010 C   FIELD 29w01 LOCKDET: LOCKDET
0x5A004010 C   FIELD 30w02 DLLRSVD2: DLLRSVD2
0x5A004014 B  REGISTER DDRPHYC_ACDLLCR (rw): DDRPHYC AC DLL control register
0x5A004014 C   FIELD 06w03 MFBDLY: MFBDLY
0x5A004014 C   FIELD 09w03 MFWDLY: MFWDLY
0x5A004014 C   FIELD 18w01 ATESTEN: ATESTEN
0x5A004014 C   FIELD 30w01 DLLSRST: DLLSRST
0x5A004014 C   FIELD 31w01 DLLDIS: DLLDIS
0x5A004018 B  REGISTER DDRPHYC_PTR0 (rw): DDRPHYC PT register 0
0x5A004018 C   FIELD 00w06 TDLLSRST: TDLLSRST
0x5A004018 C   FIELD 06w12 TDLLLOCK: TDLLLOCK
0x5A004018 C   FIELD 18w04 TITMSRST: TITMSRST
0x5A00401C B  REGISTER DDRPHYC_PTR1 (rw): DDRPHYC PT register 1
0x5A00401C C   FIELD 00w19 TDINIT0: TDINIT0
0x5A00401C C   FIELD 19w08 TDINIT1: TDINIT1
0x5A004020 B  REGISTER DDRPHYC_PTR2 (rw): DDRPHYC PT register 2
0x5A004020 C   FIELD 00w17 TDINIT2: TDINIT2
0x5A004020 C   FIELD 17w10 TDINIT3: TDINIT3
0x5A004024 B  REGISTER DDRPHYC_ACIOCR (rw): DDRPHYC ACIOC register
0x5A004024 C   FIELD 00w01 ACIOM: ACIOM
0x5A004024 C   FIELD 01w01 ACOE: ACOE
0x5A004024 C   FIELD 02w01 ACODT: ACODT
0x5A004024 C   FIELD 03w01 ACPDD: ACPDD
0x5A004024 C   FIELD 04w01 ACPDR: ACPDR
0x5A004024 C   FIELD 05w03 CKODT: CKODT
0x5A004024 C   FIELD 08w03 CKPDD: CKPDD
0x5A004024 C   FIELD 11w03 CKPDR: CKPDR
0x5A004024 C   FIELD 14w01 RANKODT: RANKODT
0x5A004024 C   FIELD 18w01 CSPDD: CSPDD
0x5A004024 C   FIELD 22w01 RANKPDR: RANKPDR
0x5A004024 C   FIELD 26w01 RSTODT: RSTODT
0x5A004024 C   FIELD 27w01 RSTPDD: RSTPDD
0x5A004024 C   FIELD 28w01 RSTPDR: RSTPDR
0x5A004024 C   FIELD 29w01 RSTIOM: RSTIOM
0x5A004024 C   FIELD 30w02 ACSR: ACSR
0x5A004028 B  REGISTER DDRPHYC_DXCCR (rw): DDRPHYC DXCC register
0x5A004028 C   FIELD 00w01 DXODT: DXODT
0x5A004028 C   FIELD 01w01 DXIOM: DXIOM
0x5A004028 C   FIELD 02w01 DXPDD: DXPDD
0x5A004028 C   FIELD 03w01 DXPDR: DXPDR
0x5A004028 C   FIELD 04w04 DQSRES: DQSRES
0x5A004028 C   FIELD 08w04 DQSNRES: DQSNRES
0x5A004028 C   FIELD 14w01 DQSNRST: DQSNRST
0x5A004028 C   FIELD 15w01 RVSEL: RVSEL
0x5A004028 C   FIELD 16w01 AWDT: AWDT
0x5A00402C B  REGISTER DDRPHYC_DSGCR (rw): DDRPHYC DSGC register
0x5A00402C C   FIELD 00w01 PUREN: PUREN
0x5A00402C C   FIELD 01w01 BDISEN: BDISEN
0x5A00402C C   FIELD 02w01 ZUEN: ZUEN
0x5A00402C C   FIELD 03w01 LPIOPD: LPIOPD
0x5A00402C C   FIELD 04w01 LPDLLPD: LPDLLPD
0x5A00402C C   FIELD 05w03 DQSGX: DQSGX
0x5A00402C C   FIELD 08w03 DQSGE: DQSGE
0x5A00402C C   FIELD 11w01 NOBUB: NOBUB
0x5A00402C C   FIELD 12w01 FXDLAT: FXDLAT
0x5A00402C C   FIELD 16w01 CKEPDD: CKEPDD
0x5A00402C C   FIELD 20w01 ODTPDD: ODTPDD
0x5A00402C C   FIELD 24w01 NL2PD: NL2PD
0x5A00402C C   FIELD 25w01 NL2OE: NL2OE
0x5A00402C C   FIELD 26w01 TPDPD: TPDPD
0x5A00402C C   FIELD 27w01 TPDOE: TPDOE
0x5A00402C C   FIELD 28w01 CKOE: CKOE
0x5A00402C C   FIELD 29w01 ODTOE: ODTOE
0x5A00402C C   FIELD 30w01 RSTOE: RSTOE
0x5A00402C C   FIELD 31w01 CKEOE: CKEOE
0x5A004030 B  REGISTER DDRPHYC_DCR (rw): DDRPHYC DC register
0x5A004030 C   FIELD 00w03 DDRMD: DDRMD
0x5A004030 C   FIELD 03w01 DDR8BNK: DDR8BNK
0x5A004030 C   FIELD 04w03 PDQ: PDQ
0x5A004030 C   FIELD 07w01 MPRDQ: MPRDQ
0x5A004030 C   FIELD 08w02 DDRTYPE: DDRTYPE
0x5A004030 C   FIELD 27w01 NOSRA: NOSRA
0x5A004030 C   FIELD 28w01 DDR2T: DDR2T
0x5A004030 C   FIELD 29w01 UDIMM: UDIMM
0x5A004030 C   FIELD 30w01 RDIMM: RDIMM
0x5A004030 C   FIELD 31w01 TPD: TPD
0x5A004034 B  REGISTER DDRPHYC_DTPR0 (rw): DDRPHYC DTP register 0
0x5A004034 C   FIELD 00w02 TMRD: TMRD
0x5A004034 C   FIELD 02w03 TRTP: TRTP
0x5A004034 C   FIELD 05w03 TWTR: TWTR
0x5A004034 C   FIELD 08w04 TRP: TRP
0x5A004034 C   FIELD 12w04 TRCD: TRCD
0x5A004034 C   FIELD 16w05 TRAS: TRAS
0x5A004034 C   FIELD 21w04 TRRD: TRRD
0x5A004034 C   FIELD 25w06 TRC: TRC
0x5A004034 C   FIELD 31w01 TCCD: TCCD
0x5A004038 B  REGISTER DDRPHYC_DTPR1 (rw): DDRPHYC DTP register 1
0x5A004038 C   FIELD 00w02 TAOND: TAOND
0x5A004038 C   FIELD 02w01 TRTW: TRTW
0x5A004038 C   FIELD 03w06 TFAW: TFAW
0x5A004038 C   FIELD 09w02 TMOD: TMOD
0x5A004038 C   FIELD 11w01 TRTODT: TRTODT
0x5A004038 C   FIELD 16w08 TRFC: TRFC
0x5A004038 C   FIELD 24w03 TDQSCKMIN: TDQSCKMIN
0x5A004038 C   FIELD 27w03 TDQSCKMAX: TDQSCKMAX
0x5A00403C B  REGISTER DDRPHYC_DTPR2 (rw): DDRPHYC DTP register 2
0x5A00403C C   FIELD 00w10 TXS: TXS
0x5A00403C C   FIELD 10w05 TXP: TXP
0x5A00403C C   FIELD 15w04 TCKE: TCKE
0x5A00403C C   FIELD 19w10 TDLLK: TDLLK
0x5A004040 B  REGISTER DDRPHYC_DDR3_MR0 (rw): DDRPHYC MR0 register for DDR3
0x5A004040 C   FIELD 00w02 BL: BL
0x5A004040 C   FIELD 02w01 CL0: CL0
0x5A004040 C   FIELD 03w01 BT: BT
0x5A004040 C   FIELD 04w03 CL: CL
0x5A004040 C   FIELD 07w01 TM: TM
0x5A004040 C   FIELD 08w01 DR: DR
0x5A004040 C   FIELD 09w03 WR: WR
0x5A004040 C   FIELD 12w01 PD: PD
0x5A004040 C   FIELD 13w03 RSVD: RSVD
0x5A004044 B  REGISTER DDRPHYC_DDR3_MR1 (rw): DDRPHYC MR1 register for DDR3
0x5A004044 C   FIELD 00w01 DE: DE
0x5A004044 C   FIELD 01w01 DIC0: DIC0
0x5A004044 C   FIELD 02w01 RTT0: RTT0
0x5A004044 C   FIELD 03w02 AL: AL
0x5A004044 C   FIELD 05w01 DIC1: DIC1
0x5A004044 C   FIELD 06w01 RTT1: RTT1
0x5A004044 C   FIELD 07w01 LEVEL: LEVEL
0x5A004044 C   FIELD 09w01 RTT2: RTT2
0x5A004044 C   FIELD 11w01 TDQS: TDQS
0x5A004044 C   FIELD 12w01 QOFF: QOFF
0x5A004048 B  REGISTER DDRPHYC_DDR3_MR2 (rw): DDRPHYC MR2 register for DDR3
0x5A004048 C   FIELD 00w03 PASR: PASR
0x5A004048 C   FIELD 03w03 CWL: CWL
0x5A004048 C   FIELD 06w01 ASR: ASR
0x5A004048 C   FIELD 07w01 SRT: SRT
0x5A004048 C   FIELD 09w02 RTTWR: RTTWR
0x5A00404C B  REGISTER DDRPHYC_DDR3_MR3 (rw): DDRPHYC MR3 register for DDR3
0x5A00404C C   FIELD 00w02 MPRLOC: MPRLOC
0x5A00404C C   FIELD 02w01 MPR: MPR
0x5A004050 B  REGISTER DDRPHYC_ODTCR (rw): DDRPHYC ODTC register
0x5A004050 C   FIELD 00w01 RDODT: RDODT
0x5A004050 C   FIELD 16w01 WRODT: WRODT
0x5A004054 B  REGISTER DDRPHYC_DTAR (rw): DDRPHYC DTA register
0x5A004054 C   FIELD 00w12 DTCOL: DTCOL
0x5A004054 C   FIELD 12w16 DTROW: DTROW
0x5A004054 C   FIELD 28w03 DTBANK: DTBANK
0x5A004054 C   FIELD 31w01 DTMPR: DTMPR
0x5A004058 B  REGISTER DDRPHYC_DTDR0 (rw): DDRPHYC DTD register 0
0x5A004058 C   FIELD 00w08 DTBYTE0: DTBYTE0
0x5A004058 C   FIELD 08w08 DTBYTE1: DTBYTE1
0x5A004058 C   FIELD 16w08 DTBYTE2: DTBYTE2
0x5A004058 C   FIELD 24w08 DTBYTE3: DTBYTE3
0x5A00405C B  REGISTER DDRPHYC_DTDR1 (rw): DDRPHYC DTD register 1
0x5A00405C C   FIELD 00w08 DTBYTE4: DTBYTE4
0x5A00405C C   FIELD 08w08 DTBYTE5: DTBYTE5
0x5A00405C C   FIELD 16w08 DTBYTE6: DTBYTE6
0x5A00405C C   FIELD 24w08 DTBYTE7: DTBYTE7
0x5A004178 B  REGISTER DDRPHYC_GPR0 (rw): DDRPHYC general purpose register 0
0x5A004178 C   FIELD 00w32 GPR0: GPR0
0x5A00417C B  REGISTER DDRPHYC_GPR1 (rw): DDRPHYC general purpose register 1
0x5A00417C C   FIELD 00w32 GPR1: GPR1
0x5A004180 B  REGISTER DDRPHYC_ZQ0CR0 (rw): DDRPHYC ZQ0C register 0
0x5A004180 C   FIELD 00w20 ZDATA: ZDATA
0x5A004180 C   FIELD 28w01 ZDEN: ZDEN
0x5A004180 C   FIELD 29w01 ZCALBYP: ZCALBYP
0x5A004180 C   FIELD 30w01 ZCAL: ZCAL
0x5A004180 C   FIELD 31w01 ZQPD: ZQPD
0x5A004184 B  REGISTER DDRPHYC_ZQ0CR1 (rw): DDRPHYC ZQ0CR1 register
0x5A004184 C   FIELD 00w08 ZPROG: ZPROG
0x5A004188 B  REGISTER DDRPHYC_ZQ0SR0 (ro): DDRPHYC ZQ0S register 0
0x5A004188 C   FIELD 00w20 ZCTRL: ZCTRL
0x5A004188 C   FIELD 30w01 ZERR: ZERR
0x5A004188 C   FIELD 31w01 ZDONE: ZDONE
0x5A00418C B  REGISTER DDRPHYC_ZQ0SR1 (ro): DDRPHYC ZQ0S register 1
0x5A00418C C   FIELD 00w02 ZPD: ZPD
0x5A00418C C   FIELD 02w02 ZPU: ZPU
0x5A00418C C   FIELD 04w02 OPD: OPD
0x5A00418C C   FIELD 06w02 OPU: OPU
0x5A0041C0 B  REGISTER DDRPHYC_DX0GCR (rw): DDRPHYC byte lane 0 GC register
0x5A0041C0 C   FIELD 00w01 DXEN: DXEN
0x5A0041C0 C   FIELD 01w01 DQSODT: DQSODT
0x5A0041C0 C   FIELD 02w01 DQODT: DQODT
0x5A0041C0 C   FIELD 03w01 DXIOM: DXIOM
0x5A0041C0 C   FIELD 04w01 DXPDD: DXPDD
0x5A0041C0 C   FIELD 05w01 DXPDR: DXPDR
0x5A0041C0 C   FIELD 06w01 DQSRPD: DQSRPD
0x5A0041C0 C   FIELD 07w02 DSEN: DSEN
0x5A0041C0 C   FIELD 09w01 DQSRTT: DQSRTT
0x5A0041C0 C   FIELD 10w01 DQRTT: DQRTT
0x5A0041C0 C   FIELD 11w02 RTTOH: RTTOH
0x5A0041C0 C   FIELD 13w01 RTTOAL: RTTOAL
0x5A0041C0 C   FIELD 14w03 R0RVSL: R0RVSL
0x5A0041C4 B  REGISTER DDRPHYC_DX0GSR0 (ro): DDRPHYC byte lane 0 GS register 0
0x5A0041C4 C   FIELD 00w01 DTDONE: DTDONE
0x5A0041C4 C   FIELD 04w01 DTERR: DTERR
0x5A0041C4 C   FIELD 08w01 DTIERR: DTIERR
0x5A0041C4 C   FIELD 13w03 DTPASS: DTPASS
0x5A0041C8 B  REGISTER DDRPHYC_DX0GSR1 (ro): DDRPHYC byte lane 0 GS register 1
0x5A0041C8 C   FIELD 00w01 DFTERR: DFTERR
0x5A0041C8 C   FIELD 04w02 DQSDFT: DQSDFT
0x5A0041C8 C   FIELD 12w01 RVERR: RVERR
0x5A0041C8 C   FIELD 16w01 RVIERR: RVIERR
0x5A0041C8 C   FIELD 20w03 RVPASS: RVPASS
0x5A0041CC B  REGISTER DDRPHYC_DX0DLLCR (rw): DDRPHYC byte lane 0 DLLC register
0x5A0041CC C   FIELD 00w03 SFBDLY: SFBDLY
0x5A0041CC C   FIELD 03w03 SFWDLY: SFWDLY
0x5A0041CC C   FIELD 06w03 MFBDLY: MFBDLY
0x5A0041CC C   FIELD 09w03 MFWDLY: MFWDLY
0x5A0041CC C   FIELD 12w02 SSTART: SSTART
0x5A0041CC C   FIELD 14w04 SDPHASE: SDPHASE
0x5A0041CC C   FIELD 18w01 ATESTEN: ATESTEN
0x5A0041CC C   FIELD 19w01 SDLBMODE: SDLBMODE
0x5A0041CC C   FIELD 30w01 DLLSRST: DLLSRST
0x5A0041CC C   FIELD 31w01 DLLDIS: DLLDIS
0x5A0041D0 B  REGISTER DDRPHYC_DX0DQTR (rw): DDRPHYC byte lane 0 DQT register
0x5A0041D0 C   FIELD 00w04 DQDLY0: DQDLY0
0x5A0041D0 C   FIELD 04w04 DQDLY1: DQDLY1
0x5A0041D0 C   FIELD 08w04 DQDLY2: DQDLY2
0x5A0041D0 C   FIELD 12w04 DQDLY3: DQDLY3
0x5A0041D0 C   FIELD 16w04 DQDLY4: DQDLY4
0x5A0041D0 C   FIELD 20w04 DQDLY5: DQDLY5
0x5A0041D0 C   FIELD 24w04 DQDLY6: DQDLY6
0x5A0041D0 C   FIELD 28w04 DQDLY7: DQDLY7
0x5A0041D4 B  REGISTER DDRPHYC_DX0DQSTR (rw): DDRPHYC byte lane 0 DQST register
0x5A0041D4 C   FIELD 00w03 R0DGSL: R0DGSL
0x5A0041D4 C   FIELD 12w02 R0DGPS: R0DGPS
0x5A0041D4 C   FIELD 20w03 DQSDLY: DQSDLY
0x5A0041D4 C   FIELD 23w03 DQSNDLY: DQSNDLY
0x5A0041D4 C   FIELD 26w04 DMDLY: DMDLY
0x5A004200 B  REGISTER DDRPHYC_DX1GCR (rw): DDRPHYC byte lane 1 GC register
0x5A004200 C   FIELD 00w01 DXEN: DXEN
0x5A004200 C   FIELD 01w01 DQSODT: DQSODT
0x5A004200 C   FIELD 02w01 DQODT: DQODT
0x5A004200 C   FIELD 03w01 DXIOM: DXIOM
0x5A004200 C   FIELD 04w01 DXPDD: DXPDD
0x5A004200 C   FIELD 05w01 DXPDR: DXPDR
0x5A004200 C   FIELD 06w01 DQSRPD: DQSRPD
0x5A004200 C   FIELD 07w02 DSEN: DSEN
0x5A004200 C   FIELD 09w01 DQSRTT: DQSRTT
0x5A004200 C   FIELD 10w01 DQRTT: DQRTT
0x5A004200 C   FIELD 11w02 RTTOH: RTTOH
0x5A004200 C   FIELD 13w01 RTTOAL: RTTOAL
0x5A004200 C   FIELD 14w03 R0RVSL: R0RVSL
0x5A004204 B  REGISTER DDRPHYC_DX1GSR0 (ro): DDRPHYC byte lane 1 GS register 0
0x5A004204 C   FIELD 00w01 DTDONE: DTDONE
0x5A004204 C   FIELD 04w01 DTERR: DTERR
0x5A004204 C   FIELD 08w01 DTIERR: DTIERR
0x5A004204 C   FIELD 13w03 DTPASS: DTPASS
0x5A004208 B  REGISTER DDRPHYC_DX1GSR1 (ro): DDRPHYC byte lane 1 GS register 1
0x5A004208 C   FIELD 00w01 DFTERR: DFTERR
0x5A004208 C   FIELD 04w02 DQSDFT: DQSDFT
0x5A004208 C   FIELD 12w01 RVERR: RVERR
0x5A004208 C   FIELD 16w01 RVIERR: RVIERR
0x5A004208 C   FIELD 20w03 RVPASS: RVPASS
0x5A00420C B  REGISTER DDRPHYC_DX1DLLCR (rw): DDRPHYC byte lane 1 DLLC register
0x5A00420C C   FIELD 00w03 SFBDLY: SFBDLY
0x5A00420C C   FIELD 03w03 SFWDLY: SFWDLY
0x5A00420C C   FIELD 06w03 MFBDLY: MFBDLY
0x5A00420C C   FIELD 09w03 MFWDLY: MFWDLY
0x5A00420C C   FIELD 12w02 SSTART: SSTART
0x5A00420C C   FIELD 14w04 SDPHASE: SDPHASE
0x5A00420C C   FIELD 18w01 ATESTEN: ATESTEN
0x5A00420C C   FIELD 19w01 SDLBMODE: SDLBMODE
0x5A00420C C   FIELD 30w01 DLLSRST: DLLSRST
0x5A00420C C   FIELD 31w01 DLLDIS: DLLDIS
0x5A004210 B  REGISTER DDRPHYC_DX1DQTR (rw): DDRPHYC byte lane 1 DQT register
0x5A004210 C   FIELD 00w04 DQDLY0: DQDLY0
0x5A004210 C   FIELD 04w04 DQDLY1: DQDLY1
0x5A004210 C   FIELD 08w04 DQDLY2: DQDLY2
0x5A004210 C   FIELD 12w04 DQDLY3: DQDLY3
0x5A004210 C   FIELD 16w04 DQDLY4: DQDLY4
0x5A004210 C   FIELD 20w04 DQDLY5: DQDLY5
0x5A004210 C   FIELD 24w04 DQDLY6: DQDLY6
0x5A004210 C   FIELD 28w04 DQDLY7: DQDLY7
0x5A004214 B  REGISTER DDRPHYC_DX1DQSTR (rw): DDRPHYC byte lane 1 DQST register
0x5A004214 C   FIELD 00w03 R0DGSL: R0DGSL
0x5A004214 C   FIELD 12w02 R0DGPS: R0DGPS
0x5A004214 C   FIELD 20w03 DQSDLY: DQSDLY
0x5A004214 C   FIELD 23w03 DQSNDLY: DQSNDLY
0x5A004214 C   FIELD 26w04 DMDLY: DMDLY
0x5A004240 B  REGISTER DDRPHYC_DX2GCR (rw): DDRPHYC byte lane 2 GC register
0x5A004240 C   FIELD 00w01 DXEN: DXEN
0x5A004240 C   FIELD 01w01 DQSODT: DQSODT
0x5A004240 C   FIELD 02w01 DQODT: DQODT
0x5A004240 C   FIELD 03w01 DXIOM: DXIOM
0x5A004240 C   FIELD 04w01 DXPDD: DXPDD
0x5A004240 C   FIELD 05w01 DXPDR: DXPDR
0x5A004240 C   FIELD 06w01 DQSRPD: DQSRPD
0x5A004240 C   FIELD 07w02 DSEN: DSEN
0x5A004240 C   FIELD 09w01 DQSRTT: DQSRTT
0x5A004240 C   FIELD 10w01 DQRTT: DQRTT
0x5A004240 C   FIELD 11w02 RTTOH: RTTOH
0x5A004240 C   FIELD 13w01 RTTOAL: RTTOAL
0x5A004240 C   FIELD 14w03 R0RVSL: R0RVSL
0x5A004244 B  REGISTER DDRPHYC_DX2GSR0 (ro): DDRPHYC byte lane 2 GS register 0
0x5A004244 C   FIELD 00w01 DTDONE: DTDONE
0x5A004244 C   FIELD 04w01 DTERR: DTERR
0x5A004244 C   FIELD 08w01 DTIERR: DTIERR
0x5A004244 C   FIELD 13w03 DTPASS: DTPASS
0x5A004248 B  REGISTER DDRPHYC_DX2GSR1 (ro): DDRPHYC byte lane 2 GS register 1
0x5A004248 C   FIELD 00w01 DFTERR: DFTERR
0x5A004248 C   FIELD 04w02 DQSDFT: DQSDFT
0x5A004248 C   FIELD 12w01 RVERR: RVERR
0x5A004248 C   FIELD 16w01 RVIERR: RVIERR
0x5A004248 C   FIELD 20w03 RVPASS: RVPASS
0x5A00424C B  REGISTER DDRPHYC_DX2DLLCR (rw): DDRPHYC byte lane 2 DLLC register
0x5A00424C C   FIELD 00w03 SFBDLY: SFBDLY
0x5A00424C C   FIELD 03w03 SFWDLY: SFWDLY
0x5A00424C C   FIELD 06w03 MFBDLY: MFBDLY
0x5A00424C C   FIELD 09w03 MFWDLY: MFWDLY
0x5A00424C C   FIELD 12w02 SSTART: SSTART
0x5A00424C C   FIELD 14w04 SDPHASE: SDPHASE
0x5A00424C C   FIELD 18w01 ATESTEN: ATESTEN
0x5A00424C C   FIELD 19w01 SDLBMODE: SDLBMODE
0x5A00424C C   FIELD 30w01 DLLSRST: DLLSRST
0x5A00424C C   FIELD 31w01 DLLDIS: DLLDIS
0x5A004250 B  REGISTER DDRPHYC_DX2DQTR (rw): DDRPHYC byte lane 2 DQT register
0x5A004250 C   FIELD 00w04 DQDLY0: DQDLY0
0x5A004250 C   FIELD 04w04 DQDLY1: DQDLY1
0x5A004250 C   FIELD 08w04 DQDLY2: DQDLY2
0x5A004250 C   FIELD 12w04 DQDLY3: DQDLY3
0x5A004250 C   FIELD 16w04 DQDLY4: DQDLY4
0x5A004250 C   FIELD 20w04 DQDLY5: DQDLY5
0x5A004250 C   FIELD 24w04 DQDLY6: DQDLY6
0x5A004250 C   FIELD 28w04 DQDLY7: DQDLY7
0x5A004254 B  REGISTER DDRPHYC_DX2DQSTR (rw): DDRPHYC byte lane 2 DQST register
0x5A004254 C   FIELD 00w03 R0DGSL: R0DGSL
0x5A004254 C   FIELD 12w02 R0DGPS: R0DGPS
0x5A004254 C   FIELD 20w03 DQSDLY: DQSDLY
0x5A004254 C   FIELD 23w03 DQSNDLY: DQSNDLY
0x5A004254 C   FIELD 26w04 DMDLY: DMDLY
0x5A004280 B  REGISTER DDRPHYC_DX3GCR (rw): DDRPHYC byte lane 3 GC register
0x5A004280 C   FIELD 00w01 DXEN: DXEN
0x5A004280 C   FIELD 01w01 DQSODT: DQSODT
0x5A004280 C   FIELD 02w01 DQODT: DQODT
0x5A004280 C   FIELD 03w01 DXIOM: DXIOM
0x5A004280 C   FIELD 04w01 DXPDD: DXPDD
0x5A004280 C   FIELD 05w01 DXPDR: DXPDR
0x5A004280 C   FIELD 06w01 DQSRPD: DQSRPD
0x5A004280 C   FIELD 07w02 DSEN: DSEN
0x5A004280 C   FIELD 09w01 DQSRTT: DQSRTT
0x5A004280 C   FIELD 10w01 DQRTT: DQRTT
0x5A004280 C   FIELD 11w02 RTTOH: RTTOH
0x5A004280 C   FIELD 13w01 RTTOAL: RTTOAL
0x5A004280 C   FIELD 14w03 R0RVSL: R0RVSL
0x5A004284 B  REGISTER DDRPHYC_DX3GSR0 (ro): DDRPHYC byte lane 3 GS register 0
0x5A004284 C   FIELD 00w01 DTDONE: DTDONE
0x5A004284 C   FIELD 04w01 DTERR: DTERR
0x5A004284 C   FIELD 08w01 DTIERR: DTIERR
0x5A004284 C   FIELD 13w03 DTPASS: DTPASS
0x5A004288 B  REGISTER DDRPHYC_DX3GSR1 (ro): DDRPHYC byte lane 3 GS register 1
0x5A004288 C   FIELD 00w01 DFTERR: DFTERR
0x5A004288 C   FIELD 04w02 DQSDFT: DQSDFT
0x5A004288 C   FIELD 12w01 RVERR: RVERR
0x5A004288 C   FIELD 16w01 RVIERR: RVIERR
0x5A004288 C   FIELD 20w03 RVPASS: RVPASS
0x5A00428C B  REGISTER DDRPHYC_DX3DLLCR (rw): DDRPHYC byte lane 3 DLLC register
0x5A00428C C   FIELD 00w03 SFBDLY: SFBDLY
0x5A00428C C   FIELD 03w03 SFWDLY: SFWDLY
0x5A00428C C   FIELD 06w03 MFBDLY: MFBDLY
0x5A00428C C   FIELD 09w03 MFWDLY: MFWDLY
0x5A00428C C   FIELD 12w02 SSTART: SSTART
0x5A00428C C   FIELD 14w04 SDPHASE: SDPHASE
0x5A00428C C   FIELD 18w01 ATESTEN: ATESTEN
0x5A00428C C   FIELD 19w01 SDLBMODE: SDLBMODE
0x5A00428C C   FIELD 30w01 DLLSRST: DLLSRST
0x5A00428C C   FIELD 31w01 DLLDIS: DLLDIS
0x5A004290 B  REGISTER DDRPHYC_DX3DQTR (rw): DDRPHYC byte lane 3 DQT register
0x5A004290 C   FIELD 00w04 DQDLY0: DQDLY0
0x5A004290 C   FIELD 04w04 DQDLY1: DQDLY1
0x5A004290 C   FIELD 08w04 DQDLY2: DQDLY2
0x5A004290 C   FIELD 12w04 DQDLY3: DQDLY3
0x5A004290 C   FIELD 16w04 DQDLY4: DQDLY4
0x5A004290 C   FIELD 20w04 DQDLY5: DQDLY5
0x5A004290 C   FIELD 24w04 DQDLY6: DQDLY6
0x5A004290 C   FIELD 28w04 DQDLY7: DQDLY7
0x5A004294 B  REGISTER DDRPHYC_DX3DQSTR (rw): DDRPHYC byte lane 3 DQST register
0x5A004294 C   FIELD 00w03 R0DGSL: R0DGSL
0x5A004294 C   FIELD 12w02 R0DGPS: R0DGPS
0x5A004294 C   FIELD 20w03 DQSDLY: DQSDLY
0x5A004294 C   FIELD 23w03 DQSNDLY: DQSNDLY
0x5A004294 C   FIELD 26w04 DMDLY: DMDLY
0x5A005000 A PERIPHERAL STGENR
0x5A005000 B  REGISTER STGENR_CNTCVL (ro): the control interface must clear the STGEN_CNTCR.EN bit before writing to this register.
0x5A005000 C   FIELD 00w32 CNTCVL_L_32: CNTCVL_L_32
0x5A005004 B  REGISTER STGENR_CNTCVU (ro): the control interface must clear the STGEN_CNTCR.EN bit before writing to this register.
0x5A005004 C   FIELD 00w32 CNTCVU_U_32: CNTCVU_U_32
0x5A005FD0 B  REGISTER STGENR_PIDR4 (ro): STGENR peripheral ID4 register
0x5A005FD0 C   FIELD 00w04 DES_2: DES_2
0x5A005FD0 C   FIELD 04w04 SIZE: SIZE
0x5A005FD4 B  REGISTER STGENR_PIDR5 (ro): STGENR peripheral ID5 register
0x5A005FD4 C   FIELD 00w32 PIDR5: PIDR5
0x5A005FD8 B  REGISTER STGENR_PIDR6 (ro): STGENR peripheral ID6 register
0x5A005FD8 C   FIELD 00w32 PIDR6: PIDR6
0x5A005FDC B  REGISTER STGENR_PIDR7 (ro): STGENR peripheral ID7 register
0x5A005FDC C   FIELD 00w32 PIDR7: PIDR7
0x5A005FE0 B  REGISTER STGENR_PIDR0 (ro): STGENR peripheral ID0 register
0x5A005FE0 C   FIELD 00w08 PART_0: PART_0
0x5A005FE4 B  REGISTER STGENR_PIDR1 (ro): STGENR peripheral ID1 register
0x5A005FE4 C   FIELD 00w04 PART_1: PART_1
0x5A005FE4 C   FIELD 04w04 DES_0: DES_0
0x5A005FE8 B  REGISTER STGENR_PIDR2 (ro): STGENR peripheral ID2 register
0x5A005FE8 C   FIELD 00w03 DES_1: DES_1
0x5A005FE8 C   FIELD 03w01 JEDEC: JEDEC
0x5A005FE8 C   FIELD 04w04 REVISION: REVISION
0x5A005FEC B  REGISTER STGENR_PIDR3 (ro): STGENR peripheral ID3 register
0x5A005FEC C   FIELD 00w04 CMOD: CMOD
0x5A005FEC C   FIELD 04w04 REVAND: REVAND
0x5A005FF0 B  REGISTER STGENR_CIDR0 (ro): STGENR component ID0 register
0x5A005FF0 C   FIELD 00w08 PRMBL_0: PRMBL_0
0x5A005FF4 B  REGISTER STGENR_CIDR1 (ro): STGENR component ID1 register
0x5A005FF4 C   FIELD 00w04 PRMBL_1: PRMBL_1
0x5A005FF4 C   FIELD 04w04 CLASS: CLASS
0x5A005FF8 B  REGISTER STGENR_CIDR2 (ro): STGENR component ID2 register
0x5A005FF8 C   FIELD 00w08 PRMBL_2: PRMBL_2
0x5A005FFC B  REGISTER STGENR_CIDR3 (ro): STGENR component ID3 register
0x5A005FFC C   FIELD 00w08 PRMBL_3: PRMBL_3
0x5A006000 A PERIPHERAL USBPHYC
0x5A006000 B  REGISTER USBPHYC_PLL (rw): This register is used to control the PLL of the HS PHY.
0x5A006000 C   FIELD 00w07 PLLNDIV: PLLNDIV
0x5A006000 C   FIELD 07w03 PLLODF: PLLODF
0x5A006000 C   FIELD 10w16 PLLFRACIN: PLLFRACIN
0x5A006000 C   FIELD 26w01 PLLEN: PLLEN
0x5A006000 C   FIELD 27w01 PLLSTRB: PLLSTRB
0x5A006000 C   FIELD 28w01 PLLSTRBYP: PLLSTRBYP
0x5A006000 C   FIELD 29w01 PLLFRACCTL: PLLFRACCTL
0x5A006000 C   FIELD 30w01 PLLDITHEN0: PLLDITHEN0
0x5A006000 C   FIELD 31w01 PLLDITHEN1: PLLDITHEN1
0x5A006008 B  REGISTER USBPHYC_MISC (rw): This register is used to control the switch between controllers for the HS PHY.
0x5A006008 C   FIELD 00w01 SWITHOST: SWITHOST
0x5A006008 C   FIELD 01w02 PPCKDIS: PPCKDIS
0x5A00610C B  REGISTER USBPHYC_TUNE1 (rw): This register is used to control the tune interface of the HS PHY, port #x.
0x5A00610C C   FIELD 00w01 INCURREN: INCURREN
0x5A00610C C   FIELD 01w01 INCURRINT: INCURRINT
0x5A00610C C   FIELD 02w01 LFSCAPEN: LFSCAPEN
0x5A00610C C   FIELD 03w01 HSDRVSLEW: HSDRVSLEW
0x5A00610C C   FIELD 04w01 HSDRVDCCUR: HSDRVDCCUR
0x5A00610C C   FIELD 05w01 HSDRVDCLEV: HSDRVDCLEV
0x5A00610C C   FIELD 06w01 HSDRVCURINCR: HSDRVCURINCR
0x5A00610C C   FIELD 07w01 FSDRVRFADJ: FSDRVRFADJ
0x5A00610C C   FIELD 08w01 HSDRVRFRED: HSDRVRFRED
0x5A00610C C   FIELD 09w04 HSDRVCHKITRM: HSDRVCHKITRM
0x5A00610C C   FIELD 13w02 HSDRVCHKZTRM: HSDRVCHKZTRM
0x5A00610C C   FIELD 15w05 OTPCOMP: OTPCOMP
0x5A00610C C   FIELD 20w02 SQLCHCTL: SQLCHCTL
0x5A00610C C   FIELD 22w01 HDRXGNEQEN: HDRXGNEQEN
0x5A00610C C   FIELD 23w02 HSRXOFF: HSRXOFF
0x5A00610C C   FIELD 25w01 HSFALLPREEM: HSFALLPREEM
0x5A00610C C   FIELD 26w01 SHTCCTCTLPROT: SHTCCTCTLPROT
0x5A00610C C   FIELD 27w01 STAGSEL: STAGSEL
0x5A00620C B  REGISTER USBPHYC_TUNE2 (rw): This register is used to control the tune interface of the HS PHY, port #x.
0x5A00620C C   FIELD 00w01 INCURREN: INCURREN
0x5A00620C C   FIELD 01w01 INCURRINT: INCURRINT
0x5A00620C C   FIELD 02w01 LFSCAPEN: LFSCAPEN
0x5A00620C C   FIELD 03w01 HSDRVSLEW: HSDRVSLEW
0x5A00620C C   FIELD 04w01 HSDRVDCCUR: HSDRVDCCUR
0x5A00620C C   FIELD 05w01 HSDRVDCLEV: HSDRVDCLEV
0x5A00620C C   FIELD 06w01 HSDRVCURINCR: HSDRVCURINCR
0x5A00620C C   FIELD 07w01 FSDRVRFADJ: FSDRVRFADJ
0x5A00620C C   FIELD 08w01 HSDRVRFRED: HSDRVRFRED
0x5A00620C C   FIELD 09w04 HSDRVCHKITRM: HSDRVCHKITRM
0x5A00620C C   FIELD 13w02 HSDRVCHKZTRM: HSDRVCHKZTRM
0x5A00620C C   FIELD 15w05 OTPCOMP: OTPCOMP
0x5A00620C C   FIELD 20w02 SQLCHCTL: SQLCHCTL
0x5A00620C C   FIELD 22w01 HDRXGNEQEN: HDRXGNEQEN
0x5A00620C C   FIELD 23w02 HSRXOFF: HSRXOFF
0x5A00620C C   FIELD 25w01 HSFALLPREEM: HSFALLPREEM
0x5A00620C C   FIELD 26w01 SHTCCTCTLPROT: SHTCCTCTLPROT
0x5A00620C C   FIELD 27w01 STAGSEL: STAGSEL
0x5A006FFC B  REGISTER USBPHYC_VERR (ro): This register defines the version of this IP.
0x5A006FFC C   FIELD 00w04 MINREV: MINREV
0x5A006FFC C   FIELD 04w04 MAJREV: MAJREV
0x5A007000 A PERIPHERAL DDRPERFM
0x5A007000 B  REGISTER DDRPERFM_CTL (wo): Write-only register. A read request returns all zeros.
0x5A007000 C   FIELD 00w01 START: START
0x5A007000 C   FIELD 01w01 STOP: STOP
0x5A007004 B  REGISTER DDRPERFM_CFG (rw): DDRPERFM configurationl register
0x5A007004 C   FIELD 00w04 EN: EN
0x5A007004 C   FIELD 16w02 SEL: SEL
0x5A007008 B  REGISTER DDRPERFM_STATUS (ro): DDRPERFM status register
0x5A007008 C   FIELD 00w04 COVF: COVF
0x5A007008 C   FIELD 16w01 BUSY: BUSY
0x5A007008 C   FIELD 31w01 TOVF: TOVF
0x5A00700C B  REGISTER DDRPERFM_CCR (wo): Write-only register. A read request returns all zeros
0x5A00700C C   FIELD 00w04 CCLR: CCLR
0x5A00700C C   FIELD 31w01 TCLR: TCLR
0x5A007010 B  REGISTER DDRPERFM_IER (rw): DDRPERFM interrupt enable register
0x5A007010 C   FIELD 00w01 OVFIE: OVFIE
0x5A007014 B  REGISTER DDRPERFM_ISR (ro): DDRPERFM interrupt status register
0x5A007014 C   FIELD 00w01 OVFF: OVFF
0x5A007018 B  REGISTER DDRPERFM_ICR (wo): Write-only register. A read request returns all zeros
0x5A007018 C   FIELD 00w01 OVF: OVF
0x5A007020 B  REGISTER DDRPERFM_TCNT (ro): DDRPERFM time counter register
0x5A007020 C   FIELD 00w32 CNT: CNT
0x5A007060 B  REGISTER DDRPERFM_CNT0 (ro): DDRPERFM event counter 0 register
0x5A007060 C   FIELD 00w32 CNT: CNT
0x5A007068 B  REGISTER DDRPERFM_CNT1 (ro): DDRPERFM event counter 1 register
0x5A007068 C   FIELD 00w32 CNT: CNT
0x5A007070 B  REGISTER DDRPERFM_CNT2 (ro): DDRPERFM event counter 2 register
0x5A007070 C   FIELD 00w32 CNT: CNT
0x5A007078 B  REGISTER DDRPERFM_CNT3 (ro): DDRPERFM event counter 3 register
0x5A007078 C   FIELD 00w32 CNT: CNT
0x5A0073F0 B  REGISTER DDRPERFM_HWCFG (ro): DDRPERFM hardware configuration register
0x5A0073F0 C   FIELD 00w04 NCNT: NCNT
0x5A0073F4 B  REGISTER DDRPERFM_VER (ro): DDRPERFM version register
0x5A0073F4 C   FIELD 00w04 MINREV: MINREV
0x5A0073F4 C   FIELD 04w04 MAJREV: MAJREV
0x5A0073F8 B  REGISTER DDRPERFM_ID (ro): DDRPERFM ID register
0x5A0073F8 C   FIELD 00w32 ID: ID
0x5A0073FC B  REGISTER DDRPERFM_SID (ro): DDRPERFM magic ID register
0x5A0073FC C   FIELD 00w32 SID: SID
0x5C000000 A PERIPHERAL USART1
0x5C000000 B  REGISTER CR1 (rw): Control register 1
0x5C000000 C   FIELD 00w01 UE: USART enable
0x5C000000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x5C000000 C   FIELD 02w01 RE: Receiver enable
0x5C000000 C   FIELD 03w01 TE: Transmitter enable
0x5C000000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x5C000000 C   FIELD 05w01 RXNEIE: RXNE interrupt enable
0x5C000000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x5C000000 C   FIELD 07w01 TXEIE: interrupt enable
0x5C000000 C   FIELD 08w01 PEIE: PE interrupt enable
0x5C000000 C   FIELD 09w01 PS: Parity selection
0x5C000000 C   FIELD 10w01 PCE: Parity control enable
0x5C000000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x5C000000 C   FIELD 12w01 M0: Word length
0x5C000000 C   FIELD 13w01 MME: Mute mode enable
0x5C000000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x5C000000 C   FIELD 15w01 OVER8: Oversampling mode
0x5C000000 C   FIELD 16w05 DEDT: DEDT
0x5C000000 C   FIELD 21w05 DEAT: DEAT
0x5C000000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x5C000000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x5C000000 C   FIELD 28w01 M1: Word length
0x5C000000 C   FIELD 29w01 FIFOEN: FIFO mode enable
0x5C000000 C   FIELD 30w01 TXFEIE: TXFIFO empty interrupt enable
0x5C000000 C   FIELD 31w01 RXFFIE: RXFIFO Full interrupt enable
0x5C000004 B  REGISTER CR2 (rw): Control register 2
0x5C000004 C   FIELD 00w01 SLVEN: Synchronous Slave mode enable
0x5C000004 C   FIELD 03w01 DIS_NSS: When the DSI_NSS bit is set, the NSS pin input will be ignored
0x5C000004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x5C000004 C   FIELD 05w01 LBDL: LIN break detection length
0x5C000004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x5C000004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x5C000004 C   FIELD 09w01 CPHA: Clock phase
0x5C000004 C   FIELD 10w01 CPOL: Clock polarity
0x5C000004 C   FIELD 11w01 CLKEN: Clock enable
0x5C000004 C   FIELD 12w02 STOP: STOP bits
0x5C000004 C   FIELD 14w01 LINEN: LIN mode enable
0x5C000004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x5C000004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x5C000004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x5C000004 C   FIELD 18w01 TAINV: Binary data inversion
0x5C000004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x5C000004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x5C000004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x5C000004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x5C000004 C   FIELD 24w04 ADD0_3: Address of the USART node
0x5C000004 C   FIELD 28w04 ADD4_7: Address of the USART node
0x5C000008 B  REGISTER CR3 (rw): Control register 3
0x5C000008 C   FIELD 00w01 EIE: Error interrupt enable
0x5C000008 C   FIELD 01w01 IREN: Ir mode enable
0x5C000008 C   FIELD 02w01 IRLP: Ir low-power
0x5C000008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x5C000008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x5C000008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x5C000008 C   FIELD 06w01 DMAR: DMA enable receiver
0x5C000008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x5C000008 C   FIELD 08w01 RTSE: RTS enable
0x5C000008 C   FIELD 09w01 CTSE: CTS enable
0x5C000008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x5C000008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x5C000008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x5C000008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x5C000008 C   FIELD 14w01 DEM: Driver enable mode
0x5C000008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x5C000008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x5C000008 C   FIELD 20w02 WUS: Wakeup from Stop mode interrupt flag selection
0x5C000008 C   FIELD 22w01 WUFIE: Wakeup from Stop mode interrupt enable
0x5C000008 C   FIELD 23w01 TXFTIE: threshold interrupt enable
0x5C000008 C   FIELD 24w01 TCBGTIE: Tr Complete before guard time, interrupt enable
0x5C000008 C   FIELD 25w03 RXFTCFG: Receive FIFO threshold configuration
0x5C000008 C   FIELD 28w01 RXFTIE: RXFIFO threshold interrupt enable
0x5C000008 C   FIELD 29w03 TXFTCFG: TXFIFO threshold configuration
0x5C00000C B  REGISTER BRR (rw): Baud rate register
0x5C00000C C   FIELD 00w04 BRR_0_3: BRR_0_3
0x5C00000C C   FIELD 04w12 BRR_4_15: BRR_4_15
0x5C000010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x5C000010 C   FIELD 00w08 PSC: Prescaler value
0x5C000010 C   FIELD 08w08 GT: Guard time value
0x5C000014 B  REGISTER RTOR (rw): Receiver timeout register
0x5C000014 C   FIELD 00w24 RTO: Receiver timeout value
0x5C000014 C   FIELD 24w08 BLEN: Block Length
0x5C000018 B  REGISTER RQR (wo): Request register
0x5C000018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x5C000018 C   FIELD 01w01 SBKRQ: Send break request
0x5C000018 C   FIELD 02w01 MMRQ: Mute mode request
0x5C000018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x5C000018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x5C00001C B  REGISTER ISR (ro): Interrupt & status register
0x5C00001C C   FIELD 00w01 PE: PE
0x5C00001C C   FIELD 01w01 FE: FE
0x5C00001C C   FIELD 02w01 NF: NF
0x5C00001C C   FIELD 03w01 ORE: ORE
0x5C00001C C   FIELD 04w01 IDLE: IDLE
0x5C00001C C   FIELD 05w01 RXNE: RXNE
0x5C00001C C   FIELD 06w01 TC: TC
0x5C00001C C   FIELD 07w01 TXE: TXE
0x5C00001C C   FIELD 08w01 LBDF: LBDF
0x5C00001C C   FIELD 09w01 CTSIF: CTSIF
0x5C00001C C   FIELD 10w01 CTS: CTS
0x5C00001C C   FIELD 11w01 RTOF: RTOF
0x5C00001C C   FIELD 12w01 EOBF: EOBF
0x5C00001C C   FIELD 13w01 UDR: SPI slave underrun error flag
0x5C00001C C   FIELD 14w01 ABRE: ABRE
0x5C00001C C   FIELD 15w01 ABRF: ABRF
0x5C00001C C   FIELD 16w01 BUSY: BUSY
0x5C00001C C   FIELD 17w01 CMF: CMF
0x5C00001C C   FIELD 18w01 SBKF: SBKF
0x5C00001C C   FIELD 19w01 RWU: RWU
0x5C00001C C   FIELD 20w01 WUF: WUF
0x5C00001C C   FIELD 21w01 TEACK: TEACK
0x5C00001C C   FIELD 22w01 REACK: REACK
0x5C00001C C   FIELD 23w01 TXFE: TXFIFO Empty
0x5C00001C C   FIELD 24w01 RXFF: RXFIFO Full
0x5C00001C C   FIELD 25w01 TCBGT: Transmission complete before guard time flag
0x5C00001C C   FIELD 26w01 RXFT: RXFIFO threshold flag
0x5C00001C C   FIELD 27w01 TXFT: TXFIFO threshold flag
0x5C000020 B  REGISTER ICR (wo): Interrupt flag clear register
0x5C000020 C   FIELD 00w01 PECF: Parity error clear flag
0x5C000020 C   FIELD 01w01 FECF: Framing error clear flag
0x5C000020 C   FIELD 02w01 NCF: Noise detected clear flag
0x5C000020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x5C000020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x5C000020 C   FIELD 05w01 TXFECF: TXFIFO empty clear flag
0x5C000020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x5C000020 C   FIELD 07w01 TCBGTCF: Transmission complete before Guard time clear flag
0x5C000020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x5C000020 C   FIELD 09w01 CTSCF: CTS clear flag
0x5C000020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x5C000020 C   FIELD 12w01 EOBCF: End of block clear flag
0x5C000020 C   FIELD 13w01 UDRCF: SPI slave underrun clear flag
0x5C000020 C   FIELD 17w01 CMCF: Character match clear flag
0x5C000020 C   FIELD 20w01 WUCF: Wakeup from Stop mode clear flag
0x5C000024 B  REGISTER RDR (ro): Receive data register
0x5C000024 C   FIELD 00w09 RDR: Receive data value
0x5C000028 B  REGISTER TDR (rw): Transmit data register
0x5C000028 C   FIELD 00w09 TDR: Transmit data value
0x5C00002C B  REGISTER PRESC (rw): Prescaler register
0x5C00002C C   FIELD 00w04 PRESCALER: Clock prescaler
0x5C0003EC B  REGISTER HWCFGR2 (ro): USART Hardware Configuration register 2
0x5C0003EC C   FIELD 00w04 CFG1: CFG1
0x5C0003EC C   FIELD 04w04 CFG2: CFG2
0x5C0003F0 B  REGISTER HWCFGR1 (ro): USART Hardware Configuration register 1
0x5C0003F0 C   FIELD 00w04 CFG1: CFG1
0x5C0003F0 C   FIELD 04w04 CFG2: CFG2
0x5C0003F0 C   FIELD 08w04 CFG3: CFG3
0x5C0003F0 C   FIELD 12w04 CFG4: CFG4
0x5C0003F0 C   FIELD 16w04 CFG5: CFG5
0x5C0003F0 C   FIELD 20w04 CFG6: CFG6
0x5C0003F0 C   FIELD 24w04 CFG7: CFG7
0x5C0003F0 C   FIELD 28w04 CFG8: CFG8
0x5C0003F4 B  REGISTER VERR (ro): EXTI IP Version register
0x5C0003F4 C   FIELD 00w04 MINREV: Minor Revision number
0x5C0003F4 C   FIELD 04w04 MAJREV: Major Revision number
0x5C0003F8 B  REGISTER IPIDR (ro): EXTI Identification register
0x5C0003F8 C   FIELD 00w32 IPID: IP Identification
0x5C0003FC B  REGISTER SIDR (ro): EXTI Size ID register
0x5C0003FC C   FIELD 00w32 SID: Size Identification
0x5C001000 A PERIPHERAL SPI6
0x5C001000 B  REGISTER SPI2S_CR1: SPI/I2S control register 1
0x5C001000 C   FIELD 00w01 SPE (rw): SPE
0x5C001000 C   FIELD 08w01 MASRX (rw): MASRX
0x5C001000 C   FIELD 09w01 CSTART (rw): CSTART
0x5C001000 C   FIELD 10w01 CSUSP (wo): CSUSP
0x5C001000 C   FIELD 11w01 HDDIR (rw): HDDIR
0x5C001000 C   FIELD 12w01 SSI (rw): SSI
0x5C001000 C   FIELD 13w01 CRC33_17 (rw): CRC33_17
0x5C001000 C   FIELD 14w01 RCRCINI (rw): RCRCINI
0x5C001000 C   FIELD 15w01 TCRCINI (rw): TCRCINI
0x5C001000 C   FIELD 16w01 IOLOCK (rw): IOLOCK
0x5C001004 B  REGISTER SPI_CR2 (rw): SPI control register 2
0x5C001004 C   FIELD 00w16 TSIZE: TSIZE
0x5C001004 C   FIELD 16w16 TSER: TSER
0x5C001008 B  REGISTER SPI_CFG1 (rw): Content of this register is write protected when SPI is enabled
0x5C001008 C   FIELD 00w05 DSIZE: DSIZE
0x5C001008 C   FIELD 05w04 FTHLV: FTHLV
0x5C001008 C   FIELD 09w02 UDRCFG: UDRCFG
0x5C001008 C   FIELD 11w02 UDRDET: UDRDET
0x5C001008 C   FIELD 14w01 RXDMAEN: RXDMAEN
0x5C001008 C   FIELD 15w01 TXDMAEN: TXDMAEN
0x5C001008 C   FIELD 16w05 CRCSIZE: CRCSIZE
0x5C001008 C   FIELD 22w01 CRCEN: CRCEN
0x5C001008 C   FIELD 28w03 MBR: MBR
0x5C00100C B  REGISTER SPI_CFG2 (rw): The content of this register is write protected when SPI is enabled or IOLOCK bit is set at SPI2S_CR1 register.
0x5C00100C C   FIELD 00w04 MSSI: MSSI
0x5C00100C C   FIELD 04w04 MIDI: MIDI
0x5C00100C C   FIELD 15w01 IOSWP: IOSWP
0x5C00100C C   FIELD 17w02 COMM: COMM
0x5C00100C C   FIELD 19w03 SP: SP
0x5C00100C C   FIELD 22w01 MASTER: MASTER
0x5C00100C C   FIELD 23w01 LSBFRST: LSBFRST
0x5C00100C C   FIELD 24w01 CPHA: CPHA
0x5C00100C C   FIELD 25w01 CPOL: CPOL
0x5C00100C C   FIELD 26w01 SSM: SSM
0x5C00100C C   FIELD 28w01 SSIOP: SSIOP
0x5C00100C C   FIELD 29w01 SSOE: SSOE
0x5C00100C C   FIELD 30w01 SSOM: SSOM
0x5C00100C C   FIELD 31w01 AFCNTR: AFCNTR
0x5C001010 B  REGISTER SPI2S_IER (rw): SPI/I2S interrupt enable register
0x5C001010 C   FIELD 00w01 RXPIE: RXPIE
0x5C001010 C   FIELD 01w01 TXPIE: TXPIE
0x5C001010 C   FIELD 02w01 DXPIE: DXPIE
0x5C001010 C   FIELD 03w01 EOTIE: EOTIE
0x5C001010 C   FIELD 04w01 TXTFIE: TXTFIE
0x5C001010 C   FIELD 05w01 UDRIE: UDRIE
0x5C001010 C   FIELD 06w01 OVRIE: OVRIE
0x5C001010 C   FIELD 07w01 CRCEIE: CRCEIE
0x5C001010 C   FIELD 08w01 TIFREIE: TIFREIE
0x5C001010 C   FIELD 09w01 MODFIE: MODFIE
0x5C001010 C   FIELD 10w01 TSERFIE: TSERFIE
0x5C001014 B  REGISTER SPI2S_SR (ro): SPI/I2S status register
0x5C001014 C   FIELD 00w01 RXP: RXP
0x5C001014 C   FIELD 01w01 TXP: TXP
0x5C001014 C   FIELD 02w01 DXP: DXP
0x5C001014 C   FIELD 03w01 EOT: EOT
0x5C001014 C   FIELD 04w01 TXTF: TXTF
0x5C001014 C   FIELD 05w01 UDR: UDR
0x5C001014 C   FIELD 06w01 OVR: OVR
0x5C001014 C   FIELD 07w01 CRCE: CRCE
0x5C001014 C   FIELD 08w01 TIFRE: TIFRE
0x5C001014 C   FIELD 09w01 MODF: MODF
0x5C001014 C   FIELD 10w01 TSERF: TSERF
0x5C001014 C   FIELD 11w01 SUSP: SUSP
0x5C001014 C   FIELD 12w01 TXC: TXC
0x5C001014 C   FIELD 13w02 RXPLVL: RXPLVL
0x5C001014 C   FIELD 15w01 RXWNE: RXWNE
0x5C001014 C   FIELD 16w16 CTSIZE: CTSIZE
0x5C001018 B  REGISTER SPI2S_IFCR (wo): SPI/I2S interrupt/status flags clear register
0x5C001018 C   FIELD 03w01 EOTC: EOTC
0x5C001018 C   FIELD 04w01 TXTFC: TXTFC
0x5C001018 C   FIELD 05w01 UDRC: UDRC
0x5C001018 C   FIELD 06w01 OVRC: OVRC
0x5C001018 C   FIELD 07w01 CRCEC: CRCEC
0x5C001018 C   FIELD 08w01 TIFREC: TIFREC
0x5C001018 C   FIELD 09w01 MODFC: MODFC
0x5C001018 C   FIELD 10w01 TSERFC: TSERFC
0x5C001018 C   FIELD 11w01 SUSPC: SUSPC
0x5C001020 B  REGISTER SPI2S_TXDR (wo): SPI/I2S transmit data register
0x5C001020 C   FIELD 00w32 TXDR: TXDR
0x5C001030 B  REGISTER SPI2S_RXDR (ro): SPI/I2S receive data register
0x5C001030 C   FIELD 00w32 RXDR: RXDR
0x5C001040 B  REGISTER SPI_CRCPOLY (rw): SPI polynomial register
0x5C001040 C   FIELD 00w32 CRCPOLY: CRCPOLY
0x5C001044 B  REGISTER SPI_TXCRC (ro): SPI transmitter CRC register
0x5C001044 C   FIELD 00w32 TXCRC: TXCRC
0x5C001048 B  REGISTER SPI_RXCRC (ro): SPI receiver CRC register
0x5C001048 C   FIELD 00w32 RXCRC: RXCRC
0x5C00104C B  REGISTER SPI_UDRDR (rw): SPI underrun data register
0x5C00104C C   FIELD 00w32 UDRDR: UDRDR
0x5C001050 B  REGISTER SPI_I2SCFGR (rw): All documented bits in this register must be configured when the I2S is disabled (SPE = 0).These bits are not used in SPI mode except for I2SMOD which needs to be set to 0 in SPI mode.
0x5C001050 C   FIELD 00w01 I2SMOD: I2SMOD
0x5C001050 C   FIELD 01w03 I2SCFG: I2SCFG
0x5C001050 C   FIELD 04w02 I2SSTD: I2SSTD
0x5C001050 C   FIELD 07w01 PCMSYNC: PCMSYNC
0x5C001050 C   FIELD 08w02 DATLEN: DATLEN
0x5C001050 C   FIELD 10w01 CHLEN: CHLEN
0x5C001050 C   FIELD 11w01 CKPOL: CKPOL
0x5C001050 C   FIELD 12w01 FIXCH: FIXCH
0x5C001050 C   FIELD 13w01 WSINV: WSINV
0x5C001050 C   FIELD 14w01 DATFMT: DATFMT
0x5C001050 C   FIELD 16w08 I2SDIV: I2SDIV
0x5C001050 C   FIELD 24w01 ODD: ODD
0x5C001050 C   FIELD 25w01 MCKOE: MCKOE
0x5C0013F0 B  REGISTER SPI_I2S_HWCFGR (ro): SPI/I2S hardware configuration register
0x5C0013F0 C   FIELD 00w04 TXFCFG: TXFCFG
0x5C0013F0 C   FIELD 04w04 RXFCFG: RXFCFG
0x5C0013F0 C   FIELD 08w04 CRCCFG: CRCCFG
0x5C0013F0 C   FIELD 12w04 I2SCFG: I2SCFG
0x5C0013F0 C   FIELD 16w04 DSCFG: DSCFG
0x5C0013F4 B  REGISTER SPI_VERR (ro): SPI/I2S version register
0x5C0013F4 C   FIELD 00w04 MINREV: MINREV
0x5C0013F4 C   FIELD 04w04 MAJREV: MAJREV
0x5C0013F8 B  REGISTER SPI_IPIDR (ro): SPI/I2S identification register
0x5C0013F8 C   FIELD 00w32 ID: ID
0x5C0013FC B  REGISTER SPI_SIDR (ro): SPI/I2S size identification register
0x5C0013FC C   FIELD 00w32 SID: SID
0x5C002000 A PERIPHERAL I2C4
0x5C002000 B  REGISTER I2C_CR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2xi2c_pclk+6xi2c_ker_ck.
0x5C002000 C   FIELD 00w01 PE: PE
0x5C002000 C   FIELD 01w01 TXIE: TXIE
0x5C002000 C   FIELD 02w01 RXIE: RXIE
0x5C002000 C   FIELD 03w01 ADDRIE: ADDRIE
0x5C002000 C   FIELD 04w01 NACKIE: NACKIE
0x5C002000 C   FIELD 05w01 STOPIE: STOPIE
0x5C002000 C   FIELD 06w01 TCIE: TCIE
0x5C002000 C   FIELD 07w01 ERRIE: ERRIE
0x5C002000 C   FIELD 08w04 DNF: DNF
0x5C002000 C   FIELD 12w01 ANFOFF: ANFOFF
0x5C002000 C   FIELD 14w01 TXDMAEN: TXDMAEN
0x5C002000 C   FIELD 15w01 RXDMAEN: RXDMAEN
0x5C002000 C   FIELD 16w01 SBC: SBC
0x5C002000 C   FIELD 17w01 NOSTRETCH: NOSTRETCH
0x5C002000 C   FIELD 18w01 WUPEN: WUPEN
0x5C002000 C   FIELD 19w01 GCEN: GCEN
0x5C002000 C   FIELD 20w01 SMBHEN: SMBHEN
0x5C002000 C   FIELD 21w01 SMBDEN: SMBDEN
0x5C002000 C   FIELD 22w01 ALERTEN: ALERTEN
0x5C002000 C   FIELD 23w01 PECEN: PECEN
0x5C002004 B  REGISTER I2C_CR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x5C002004 C   FIELD 00w10 SADD: SADD
0x5C002004 C   FIELD 10w01 RD_WRN: RD_WRN
0x5C002004 C   FIELD 11w01 ADD10: ADD10
0x5C002004 C   FIELD 12w01 HEAD10R: HEAD10R
0x5C002004 C   FIELD 13w01 START: START
0x5C002004 C   FIELD 14w01 STOP: STOP
0x5C002004 C   FIELD 15w01 NACK: NACK
0x5C002004 C   FIELD 16w08 NBYTES: NBYTES
0x5C002004 C   FIELD 24w01 RELOAD: RELOAD
0x5C002004 C   FIELD 25w01 AUTOEND: AUTOEND
0x5C002004 C   FIELD 26w01 PECBYTE: PECBYTE
0x5C002008 B  REGISTER I2C_OAR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x5C002008 C   FIELD 00w10 OA1: OA1
0x5C002008 C   FIELD 10w01 OA1MODE: OA1MODE
0x5C002008 C   FIELD 15w01 OA1EN: OA1EN
0x5C00200C B  REGISTER I2C_OAR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x5C00200C C   FIELD 01w07 OA2: OA2
0x5C00200C C   FIELD 08w03 OA2MSK: OA2MSK
0x5C00200C C   FIELD 15w01 OA2EN: OA2EN
0x5C002010 B  REGISTER I2C_TIMINGR (rw): Access: No wait states
0x5C002010 C   FIELD 00w08 SCLL: SCLL
0x5C002010 C   FIELD 08w08 SCLH: SCLH
0x5C002010 C   FIELD 16w04 SDADEL: SDADEL
0x5C002010 C   FIELD 20w04 SCLDEL: SCLDEL
0x5C002010 C   FIELD 28w04 PRESC: PRESC
0x5C002014 B  REGISTER I2C_TIMEOUTR (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x5C002014 C   FIELD 00w12 TIMEOUTA: TIMEOUTA
0x5C002014 C   FIELD 12w01 TIDLE: TIDLE
0x5C002014 C   FIELD 15w01 TIMOUTEN: TIMOUTEN
0x5C002014 C   FIELD 16w12 TIMEOUTB: TIMEOUTB
0x5C002014 C   FIELD 31w01 TEXTEN: TEXTEN
0x5C002018 B  REGISTER I2C_ISR: Access: No wait states
0x5C002018 C   FIELD 00w01 TXE (rw): TXE
0x5C002018 C   FIELD 01w01 TXIS (rw): TXIS
0x5C002018 C   FIELD 02w01 RXNE (ro): RXNE
0x5C002018 C   FIELD 03w01 ADDR (ro): ADDR
0x5C002018 C   FIELD 04w01 NACKF (ro): NACKF
0x5C002018 C   FIELD 05w01 STOPF (ro): STOPF
0x5C002018 C   FIELD 06w01 TC (ro): TC
0x5C002018 C   FIELD 07w01 TCR (ro): TCR
0x5C002018 C   FIELD 08w01 BERR (ro): BERR
0x5C002018 C   FIELD 09w01 ARLO (ro): ARLO
0x5C002018 C   FIELD 10w01 OVR (ro): OVR
0x5C002018 C   FIELD 11w01 PECERR (ro): PECERR
0x5C002018 C   FIELD 12w01 TIMEOUT (ro): TIMEOUT
0x5C002018 C   FIELD 13w01 ALERT (ro): ALERT
0x5C002018 C   FIELD 15w01 BUSY (ro): BUSY
0x5C002018 C   FIELD 16w01 DIR (ro): DIR
0x5C002018 C   FIELD 17w07 ADDCODE (ro): ADDCODE
0x5C00201C B  REGISTER I2C_ICR (wo): Access: No wait states
0x5C00201C C   FIELD 03w01 ADDRCF: ADDRCF
0x5C00201C C   FIELD 04w01 NACKCF: NACKCF
0x5C00201C C   FIELD 05w01 STOPCF: STOPCF
0x5C00201C C   FIELD 08w01 BERRCF: BERRCF
0x5C00201C C   FIELD 09w01 ARLOCF: ARLOCF
0x5C00201C C   FIELD 10w01 OVRCF: OVRCF
0x5C00201C C   FIELD 11w01 PECCF: PECCF
0x5C00201C C   FIELD 12w01 TIMOUTCF: TIMOUTCF
0x5C00201C C   FIELD 13w01 ALERTCF: ALERTCF
0x5C002020 B  REGISTER I2C_PECR (ro): Access: No wait states
0x5C002020 C   FIELD 00w08 PEC: PEC
0x5C002024 B  REGISTER I2C_RXDR (ro): Access: No wait states
0x5C002024 C   FIELD 00w08 RXDATA: RXDATA
0x5C002028 B  REGISTER I2C_TXDR (rw): Access: No wait states
0x5C002028 C   FIELD 00w08 TXDATA: TXDATA
0x5C0023F0 B  REGISTER I2C_HWCFGR (ro): I2C hardware configuration register
0x5C0023F0 C   FIELD 00w04 SMBUS: SMBUS
0x5C0023F0 C   FIELD 04w04 ASYN: ASYN
0x5C0023F0 C   FIELD 08w04 WKP: WKP
0x5C0023F4 B  REGISTER I2C_VERR (ro): I2C version register
0x5C0023F4 C   FIELD 00w04 MINREV: MINREV
0x5C0023F4 C   FIELD 04w04 MAJREV: MAJREV
0x5C0023F8 B  REGISTER I2C_IPIDR (ro): I2C identification register
0x5C0023F8 C   FIELD 00w32 ID: ID
0x5C0023FC B  REGISTER I2C_SIDR (ro): I2C size identification register
0x5C0023FC C   FIELD 00w32 SID: SID
0x5C003000 A PERIPHERAL IWDG1
0x5C003000 B  REGISTER IWDG_KR (wo): Key register
0x5C003000 C   FIELD 00w16 KEY: KEY
0x5C003004 B  REGISTER IWDG_PR (rw): Prescaler register
0x5C003004 C   FIELD 00w03 PR: PR
0x5C003008 B  REGISTER IWDG_RLR (rw): Reload register
0x5C003008 C   FIELD 00w12 RL: RL
0x5C00300C B  REGISTER IWDG_SR (ro): Status register
0x5C00300C C   FIELD 00w01 PVU: PVU
0x5C00300C C   FIELD 01w01 RVU: RVU
0x5C00300C C   FIELD 02w01 WVU: WVU
0x5C003010 B  REGISTER IWDG_WINR (rw): Window register
0x5C003010 C   FIELD 00w12 WIN: WIN
0x5C0033F0 B  REGISTER IWDG_HWCFGR (ro): IWDG hardware configuration register
0x5C0033F0 C   FIELD 00w04 WINDOW: WINDOW
0x5C0033F0 C   FIELD 04w04 PR_DEFAULT: PR_DEFAULT
0x5C0033F4 B  REGISTER IWDG_VERR (ro): IWDG version register
0x5C0033F4 C   FIELD 00w04 MINREV: MINREV
0x5C0033F4 C   FIELD 04w04 MAJREV: MAJREV
0x5C0033F8 B  REGISTER IWDG_IDR (ro): IWDG identification register
0x5C0033F8 C   FIELD 00w32 ID: ID
0x5C0033FC B  REGISTER IWDG_SIDR (ro): IWDG size identification register
0x5C0033FC C   FIELD 00w32 SID: SID
0x5C004000 A PERIPHERAL RTC
0x5C004000 B  REGISTER RTC_TR (rw): The RTC_TR is the calendar time shadow register. This register must be written in initialization mode only. Refer to Calendar initialization and configuration on page1830 and Reading the calendar on page1831. This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be write-protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004000 C   FIELD 00w04 SU: SU
0x5C004000 C   FIELD 04w03 ST: ST
0x5C004000 C   FIELD 08w04 MNU: MNU
0x5C004000 C   FIELD 12w03 MNT: MNT
0x5C004000 C   FIELD 16w04 HU: HU
0x5C004000 C   FIELD 20w02 HT: HT
0x5C004000 C   FIELD 22w01 PM: PM
0x5C004004 B  REGISTER RTC_DR (rw): The RTC_DR is the calendar date shadow register. This register must be written in initialization mode only. Refer to Calendar initialization and configuration on page1830 and Reading the calendar on page1831. This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be write-protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004004 C   FIELD 00w04 DU: DU
0x5C004004 C   FIELD 04w02 DT: DT
0x5C004004 C   FIELD 08w04 MU: MU
0x5C004004 C   FIELD 12w01 MT: MT
0x5C004004 C   FIELD 13w03 WDU: WDU
0x5C004004 C   FIELD 16w04 YU: YU
0x5C004004 C   FIELD 20w04 YT: YT
0x5C004008 B  REGISTER RTC_SSR (ro): RTC sub second register
0x5C004008 C   FIELD 00w16 SS: SS
0x5C00400C B  REGISTER RTC_ICSR: This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be globally protected, or each bit of this register can be individually protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C00400C C   FIELD 00w01 ALRAWF (ro): ALRAWF
0x5C00400C C   FIELD 01w01 ALRBWF (ro): ALRBWF
0x5C00400C C   FIELD 02w01 WUTWF (ro): WUTWF
0x5C00400C C   FIELD 03w01 SHPF (ro): SHPF
0x5C00400C C   FIELD 04w01 INITS (ro): INITS
0x5C00400C C   FIELD 05w01 RSF (rw): RSF
0x5C00400C C   FIELD 06w01 INITF (ro): INITF
0x5C00400C C   FIELD 07w01 INIT (rw): INIT
0x5C00400C C   FIELD 16w01 RECALPF (ro): RECALPF
0x5C004010 B  REGISTER RTC_PRER (rw): This register must be written in initialization mode only. The initialization must be performed in two separate write accesses. Refer to Calendar initialization and configuration on page1830. This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be write-protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004010 C   FIELD 00w15 PREDIV_S: PREDIV_S
0x5C004010 C   FIELD 16w07 PREDIV_A: PREDIV_A
0x5C004014 B  REGISTER RTC_WUTR (rw): This register can be written only when WUTWF is set to 1 in RTC_ICSR. This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004014 C   FIELD 00w16 WUT: WUT
0x5C004018 B  REGISTER RTC_CR: This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be globally protected, or each bit of this register can be individually protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004018 C   FIELD 00w03 WUCKSEL (rw): WUCKSEL
0x5C004018 C   FIELD 03w01 TSEDGE (rw): TSEDGE
0x5C004018 C   FIELD 04w01 REFCKON (rw): REFCKON
0x5C004018 C   FIELD 05w01 BYPSHAD (rw): BYPSHAD
0x5C004018 C   FIELD 06w01 FMT (rw): FMT
0x5C004018 C   FIELD 08w01 ALRAE (rw): ALRAE
0x5C004018 C   FIELD 09w01 ALRBE (rw): ALRBE
0x5C004018 C   FIELD 10w01 WUTE (rw): WUTE
0x5C004018 C   FIELD 11w01 TSE (rw): TSE
0x5C004018 C   FIELD 12w01 ALRAIE (rw): ALRAIE
0x5C004018 C   FIELD 13w01 ALRBIE (rw): ALRBIE
0x5C004018 C   FIELD 14w01 WUTIE (rw): WUTIE
0x5C004018 C   FIELD 15w01 TSIE (rw): TSIE
0x5C004018 C   FIELD 16w01 ADD1H (wo): ADD1H
0x5C004018 C   FIELD 17w01 SUB1H (wo): SUB1H
0x5C004018 C   FIELD 18w01 BKP (rw): BKP
0x5C004018 C   FIELD 19w01 COSEL (rw): COSEL
0x5C004018 C   FIELD 20w01 POL (rw): POL
0x5C004018 C   FIELD 21w02 OSEL (rw): OSEL
0x5C004018 C   FIELD 23w01 COE (rw): COE
0x5C004018 C   FIELD 24w01 ITSE (rw): ITSE
0x5C004018 C   FIELD 25w01 TAMPTS (rw): TAMPTS
0x5C004018 C   FIELD 26w01 TAMPOE (rw): TAMPOE
0x5C004018 C   FIELD 29w01 TAMPALRM_PU (rw): TAMPALRM_PU
0x5C004018 C   FIELD 30w01 TAMPALRM_TYPE (rw): TAMPALRM_TYPE
0x5C004018 C   FIELD 31w01 OUT2EN (rw): OUT2EN
0x5C004020 B  REGISTER RTC_SMCR (rw): This register can be written only when the APB access is secure.
0x5C004020 C   FIELD 00w01 ALRADPROT: ALRADPROT
0x5C004020 C   FIELD 01w01 ALRBDPROT: ALRBDPROT
0x5C004020 C   FIELD 02w01 WUTDPROT: WUTDPROT
0x5C004020 C   FIELD 03w01 TSDPROT: TSDPROT
0x5C004020 C   FIELD 13w01 CALDPROT: CALDPROT
0x5C004020 C   FIELD 14w01 INITDPROT: INITDPROT
0x5C004020 C   FIELD 15w01 DECPROT: DECPROT
0x5C004024 B  REGISTER RTC_WPR (wo): RTC write protection register
0x5C004024 C   FIELD 00w08 KEY: KEY
0x5C004028 B  REGISTER RTC_CALR (rw): This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be write-protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004028 C   FIELD 00w09 CALM: CALM
0x5C004028 C   FIELD 13w01 CALW16: CALW16
0x5C004028 C   FIELD 14w01 CALW8: CALW8
0x5C004028 C   FIELD 15w01 CALP: CALP
0x5C00402C B  REGISTER RTC_SHIFTR (wo): This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C00402C C   FIELD 00w15 SUBFS: SUBFS
0x5C00402C C   FIELD 31w01 ADD1S: ADD1S
0x5C004030 B  REGISTER RTC_TSTR (ro): The content of this register is valid only when TSF is set to 1 in RTC_SR. It is cleared when TSF bit is reset. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004030 C   FIELD 00w04 SU: SU
0x5C004030 C   FIELD 04w03 ST: ST
0x5C004030 C   FIELD 08w04 MNU: MNU
0x5C004030 C   FIELD 12w03 MNT: MNT
0x5C004030 C   FIELD 16w04 HU: HU
0x5C004030 C   FIELD 20w02 HT: HT
0x5C004030 C   FIELD 22w01 PM: PM
0x5C004034 B  REGISTER RTC_TSDR (ro): The content of this register is valid only when TSF is set to 1 in RTC_SR. It is cleared when TSF bit is reset. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004034 C   FIELD 00w04 DU: DU
0x5C004034 C   FIELD 04w02 DT: DT
0x5C004034 C   FIELD 08w04 MU: MU
0x5C004034 C   FIELD 12w01 MT: MT
0x5C004034 C   FIELD 13w03 WDU: WDU
0x5C004038 B  REGISTER RTC_TSSSR (ro): The content of this register is valid only when TSF is set to 1 in RTC_SR. It is cleared when the TSF bit is reset. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004038 C   FIELD 00w16 SS: SS
0x5C004040 B  REGISTER RTC_ALRMAR (rw): This register can be written only when ALRAWF is set to 1 in RTC_ICSR, or in initialization mode. This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004040 C   FIELD 00w04 SU: SU
0x5C004040 C   FIELD 04w03 ST: ST
0x5C004040 C   FIELD 07w01 MSK1: MSK1
0x5C004040 C   FIELD 08w04 MNU: MNU
0x5C004040 C   FIELD 12w03 MNT: MNT
0x5C004040 C   FIELD 15w01 MSK2: MSK2
0x5C004040 C   FIELD 16w04 HU: HU
0x5C004040 C   FIELD 20w02 HT: HT
0x5C004040 C   FIELD 22w01 PM: PM
0x5C004040 C   FIELD 23w01 MSK3: MSK3
0x5C004040 C   FIELD 24w04 DU: DU
0x5C004040 C   FIELD 28w02 DT: DT
0x5C004040 C   FIELD 30w01 WDSEL: WDSEL
0x5C004040 C   FIELD 31w01 MSK4: MSK4
0x5C004044 B  REGISTER RTC_ALRMASSR (rw): This register can be written only when ALRAWF is set to 1 in RTC_ICSR, or in initialization mode. This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004044 C   FIELD 00w15 SS: SS
0x5C004044 C   FIELD 24w04 MASKSS: MASKSS
0x5C004048 B  REGISTER RTC_ALRMBR (rw): This register can be written only when ALRBWF is set to 1 in RTC_ICSR, or in initialization mode. This register is write protected. The write access procedure is described in RTC register write protection on page1830. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004048 C   FIELD 00w04 SU: SU
0x5C004048 C   FIELD 04w03 ST: ST
0x5C004048 C   FIELD 07w01 MSK1: MSK1
0x5C004048 C   FIELD 08w04 MNU: MNU
0x5C004048 C   FIELD 12w03 MNT: MNT
0x5C004048 C   FIELD 15w01 MSK2: MSK2
0x5C004048 C   FIELD 16w04 HU: HU
0x5C004048 C   FIELD 20w02 HT: HT
0x5C004048 C   FIELD 22w01 PM: PM
0x5C004048 C   FIELD 23w01 MSK3: MSK3
0x5C004048 C   FIELD 24w04 DU: DU
0x5C004048 C   FIELD 28w02 DT: DT
0x5C004048 C   FIELD 30w01 WDSEL: WDSEL
0x5C004048 C   FIELD 31w01 MSK4: MSK4
0x5C00404C B  REGISTER RTC_ALRMBSSR (rw): This register can be written only when ALRBE is reset in RTC_CR register, or in initialization mode. This register is write protected.The write access procedure is described in Section: RTC register write protection. This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C00404C C   FIELD 00w15 SS: SS
0x5C00404C C   FIELD 24w04 MASKSS: MASKSS
0x5C004050 B  REGISTER RTC_SR (ro): This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004050 C   FIELD 00w01 ALRAF: ALRAF
0x5C004050 C   FIELD 01w01 ALRBF: ALRBF
0x5C004050 C   FIELD 02w01 WUTF: WUTF
0x5C004050 C   FIELD 03w01 TSF: TSF
0x5C004050 C   FIELD 04w01 TSOVF: TSOVF
0x5C004050 C   FIELD 05w01 ITSF: ITSF
0x5C004054 B  REGISTER RTC_MISR (ro): RTC non-secure masked interrupt status register
0x5C004054 C   FIELD 00w01 ALRAMF: ALRAMF
0x5C004054 C   FIELD 01w01 ALRBMF: ALRBMF
0x5C004054 C   FIELD 02w01 WUTMF: WUTMF
0x5C004054 C   FIELD 03w01 TSMF: TSMF
0x5C004054 C   FIELD 04w01 TSOVMF: TSOVMF
0x5C004054 C   FIELD 05w01 ITSMF: ITSMF
0x5C004058 B  REGISTER RTC_SMISR (ro): This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C004058 C   FIELD 00w01 ALRAMF: ALRAMF
0x5C004058 C   FIELD 01w01 ALRBMF: ALRBMF
0x5C004058 C   FIELD 02w01 WUTMF: WUTMF
0x5C004058 C   FIELD 03w01 TSMF: TSMF
0x5C004058 C   FIELD 04w01 TSOVMF: TSOVMF
0x5C004058 C   FIELD 05w01 ITSMF: ITSMF
0x5C00405C B  REGISTER RTC_SCR (wo): This register can be protected against non-secure access. Refer to Section50.3.4: RTC secure protection modes.
0x5C00405C C   FIELD 00w01 CALRAF: CALRAF
0x5C00405C C   FIELD 01w01 CALRBF: CALRBF
0x5C00405C C   FIELD 02w01 CWUTF: CWUTF
0x5C00405C C   FIELD 03w01 CTSF: CTSF
0x5C00405C C   FIELD 04w01 CTSOVF: CTSOVF
0x5C00405C C   FIELD 05w01 CITSF: CITSF
0x5C004060 B  REGISTER RTC_CFGR (rw): RTC configuration register
0x5C004060 C   FIELD 00w01 OUT2_RMP: OUT2_RMP
0x5C004060 C   FIELD 01w02 LSCOEN: LSCOEN
0x5C0043F0 B  REGISTER RTC_HWCFGR (ro): RTC hardware configuration register
0x5C0043F0 C   FIELD 00w04 ALARMB: ALARMB
0x5C0043F0 C   FIELD 04w04 WAKEUP: WAKEUP
0x5C0043F0 C   FIELD 08w04 SMOOTH_CALIB: SMOOTH_CALIB
0x5C0043F0 C   FIELD 12w04 TIMESTAMP: TIMESTAMP
0x5C0043F0 C   FIELD 16w08 OPTIONREG_OUT: OPTIONREG_OUT
0x5C0043F0 C   FIELD 24w04 TRUST_ZONE: TRUST_ZONE
0x5C0043F4 B  REGISTER RTC_VERR (ro): RTC version register
0x5C0043F4 C   FIELD 00w04 MINREV: MINREV
0x5C0043F4 C   FIELD 04w04 MAJREV: MAJREV
0x5C0043F8 B  REGISTER RTC_IPIDR (ro): RTC identification register
0x5C0043F8 C   FIELD 00w32 ID: ID
0x5C0043FC B  REGISTER RTC_SIDR (ro): RTC size identification register
0x5C0043FC C   FIELD 00w32 SID: SID
0x5C005000 A PERIPHERAL BSEC
0x5C005000 B  REGISTER BSEC_OTP_CONFIG (rw): BSEC OTP configuration register
0x5C005000 C   FIELD 00w01 PWRUP: PWRUP
0x5C005000 C   FIELD 01w02 FRC: FRC
0x5C005000 C   FIELD 03w04 PRGWIDTH: PRGWIDTH
0x5C005000 C   FIELD 07w02 TREAD: TREAD
0x5C005004 B  REGISTER BSEC_OTP_CONTROL (rw): BSEC OTP control register
0x5C005004 C   FIELD 00w07 ADDR: ADDR
0x5C005004 C   FIELD 08w01 PROG: PROG
0x5C005004 C   FIELD 09w01 LOCK: LOCK
0x5C005008 B  REGISTER BSEC_OTP_WRDATA (rw): BSEC OTP write data register
0x5C005008 C   FIELD 00w32 WRDATA: WRDATA
0x5C00500C B  REGISTER BSEC_OTP_STATUS (ro): BSEC OTP status register
0x5C00500C C   FIELD 00w01 SECURE: SECURE
0x5C00500C C   FIELD 01w01 FULLDBG: FULLDBG
0x5C00500C C   FIELD 02w01 INVALID: INVALID
0x5C00500C C   FIELD 03w01 BUSY: BUSY
0x5C00500C C   FIELD 04w01 PROGFAIL: PROGFAIL
0x5C00500C C   FIELD 05w01 PWRON: PWRON
0x5C00500C C   FIELD 06w01 BIST1LOCK: BIST1LOCK
0x5C00500C C   FIELD 07w01 BIST2LOCK: BIST2LOCK
0x5C005010 B  REGISTER BSEC_OTP_LOCK (rw): BSEC OTP lock configuration register
0x5C005010 C   FIELD 00w01 OTP: OTP
0x5C005010 C   FIELD 01w01 ROMLOCK: ROMLOCK
0x5C005010 C   FIELD 02w01 DENREG: DENREG
0x5C005010 C   FIELD 04w01 GPLOCK: GPLOCK
0x5C005014 B  REGISTER BSEC_DENABLE (rw): reset value depends on OTP secure mode according toTable18: BSEC_DENABLE default values after reset on page181.
0x5C005014 C   FIELD 00w01 DFTEN: DFTEN
0x5C005014 C   FIELD 01w01 DBGEN: DBGEN
0x5C005014 C   FIELD 02w01 NIDEN: NIDEN
0x5C005014 C   FIELD 03w01 DEVICEEN: DEVICEEN
0x5C005014 C   FIELD 04w01 HDPEN: HDPEN
0x5C005014 C   FIELD 05w01 SPIDEN: SPIDEN
0x5C005014 C   FIELD 06w01 SPNIDEN: SPNIDEN
0x5C005014 C   FIELD 07w02 CP15SDISABLE: CP15SDISABLE
0x5C005014 C   FIELD 09w01 CFGSDISABLE: CFGSDISABLE
0x5C005014 C   FIELD 10w01 DBGSWENABLE: DBGSWENABLE
0x5C00501C B  REGISTER BSEC_OTP_DISTURBED0 (ro): BSEC_OTP_DISTURBED0 is used to report disturbed state of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 (lower 1Kbits OTP). BSEC_OTP_DISTURBED1 is used to report disturbed state of BSEC_OTP_DATA32 to BSEC_OTP_DATA63. BSEC_OTP_DISTURBED2 is used to report disturbed state of BSEC_OTP_DATA64 to BSEC_OTP_DATA95.
0x5C00501C C   FIELD 00w32 DIS: DIS
0x5C005020 B  REGISTER BSEC_OTP_DISTURBED1 (ro): BSEC_OTP_DISTURBED0 is used to report disturbed state of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 (lower 1Kbits OTP). BSEC_OTP_DISTURBED1 is used to report disturbed state of BSEC_OTP_DATA32 to BSEC_OTP_DATA63. BSEC_OTP_DISTURBED2 is used to report disturbed state of BSEC_OTP_DATA64 to BSEC_OTP_DATA95.
0x5C005020 C   FIELD 00w32 DIS: DIS
0x5C005024 B  REGISTER BSEC_OTP_DISTURBED2 (ro): BSEC_OTP_DISTURBED0 is used to report disturbed state of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 (lower 1Kbits OTP). BSEC_OTP_DISTURBED1 is used to report disturbed state of BSEC_OTP_DATA32 to BSEC_OTP_DATA63. BSEC_OTP_DISTURBED2 is used to report disturbed state of BSEC_OTP_DATA64 to BSEC_OTP_DATA95.
0x5C005024 C   FIELD 00w32 DIS: DIS
0x5C005034 B  REGISTER BSEC_OTP_ERROR0 (ro): BSEC_OTP_ERROR0 is used to report error state of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 (lower 1Kbits OTP which are protected by 2:1 redundancy). BSEC_OTP_ERROR1 is used to report error state of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 which are protected by 6-bit ECC. BSEC_OTP_ERROR2 is used to report error state of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 which are protected by 6-bit ECC.
0x5C005034 C   FIELD 00w32 ERR: ERR
0x5C005038 B  REGISTER BSEC_OTP_ERROR1 (ro): BSEC_OTP_ERROR0 is used to report error state of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 (lower 1Kbits OTP which are protected by 2:1 redundancy). BSEC_OTP_ERROR1 is used to report error state of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 which are protected by 6-bit ECC. BSEC_OTP_ERROR2 is used to report error state of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 which are protected by 6-bit ECC.
0x5C005038 C   FIELD 00w32 ERR: ERR
0x5C00503C B  REGISTER BSEC_OTP_ERROR2 (ro): BSEC_OTP_ERROR0 is used to report error state of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 (lower 1Kbits OTP which are protected by 2:1 redundancy). BSEC_OTP_ERROR1 is used to report error state of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 which are protected by 6-bit ECC. BSEC_OTP_ERROR2 is used to report error state of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 which are protected by 6-bit ECC.
0x5C00503C C   FIELD 00w32 ERR: ERR
0x5C00504C B  REGISTER BSEC_OTP_WRLOCK0 (ro): BSEC_OTP_WLOCK0 is used to report permanent write lock of BSEC_OTP_DATA0 to BSEC_OTP_DATA31. BSEC_OTP_WLOCK1 is used to report permanent write lock of BSEC_OTP_DATA32 to BSEC_OTP_DATA63. BSEC_OTP_WLOCK2 is used to report permanent write lock of BSEC_OTP_DATA64 to BSEC_OTP_DATA95. Permanent write lock requires a programming sequence to lock a word (see section:Section3.3.6: OTP operations on page178).
0x5C00504C C   FIELD 00w32 WRLOCK: WRLOCK
0x5C005050 B  REGISTER BSEC_OTP_WRLOCK1 (ro): BSEC_OTP_WLOCK0 is used to report permanent write lock of BSEC_OTP_DATA0 to BSEC_OTP_DATA31. BSEC_OTP_WLOCK1 is used to report permanent write lock of BSEC_OTP_DATA32 to BSEC_OTP_DATA63. BSEC_OTP_WLOCK2 is used to report permanent write lock of BSEC_OTP_DATA64 to BSEC_OTP_DATA95. Permanent write lock requires a programming sequence to lock a word (see section:Section3.3.6: OTP operations on page178).
0x5C005050 C   FIELD 00w32 WRLOCK: WRLOCK
0x5C005054 B  REGISTER BSEC_OTP_WRLOCK2 (ro): BSEC_OTP_WLOCK0 is used to report permanent write lock of BSEC_OTP_DATA0 to BSEC_OTP_DATA31. BSEC_OTP_WLOCK1 is used to report permanent write lock of BSEC_OTP_DATA32 to BSEC_OTP_DATA63. BSEC_OTP_WLOCK2 is used to report permanent write lock of BSEC_OTP_DATA64 to BSEC_OTP_DATA95. Permanent write lock requires a programming sequence to lock a word (see section:Section3.3.6: OTP operations on page178).
0x5C005054 C   FIELD 00w32 WRLOCK: WRLOCK
0x5C005064 B  REGISTER BSEC_OTP_SPLOCK0 (rw): BSEC_OTP_SPLOCK0 is used to lock the programming of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset BSEC_OTP_SPLOCK1 is used to lock the programming of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset BSEC_OTP_SPLOCK2 is used to lock the programming of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset Attempt to sticky program locked OTP word are silently ignored.
0x5C005064 C   FIELD 00w32 SPLOCK: SPLOCK
0x5C005068 B  REGISTER BSEC_OTP_SPLOCK1 (rw): BSEC_OTP_SPLOCK0 is used to lock the programming of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset BSEC_OTP_SPLOCK1 is used to lock the programming of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset BSEC_OTP_SPLOCK2 is used to lock the programming of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset Attempt to sticky program locked OTP word are silently ignored.
0x5C005068 C   FIELD 00w32 SPLOCK: SPLOCK
0x5C00506C B  REGISTER BSEC_OTP_SPLOCK2 (rw): BSEC_OTP_SPLOCK0 is used to lock the programming of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset BSEC_OTP_SPLOCK1 is used to lock the programming of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset BSEC_OTP_SPLOCK2 is used to lock the programming of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset Attempt to sticky program locked OTP word are silently ignored.
0x5C00506C C   FIELD 00w32 SPLOCK: SPLOCK
0x5C00507C B  REGISTER BSEC_OTP_SWLOCK0 (rw): BSEC_OTP_SWLOCK0 is used to prevent writing to BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset. BSEC_OTP_SWLOCK1 is used to prevent writing to BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset. BSEC_OTP_SWLOCK2 is used to prevent writing to BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset. Write to shadow write locked BSEC_OTP_DATA word are silently ignored. Writing to OTP word 0 shadow is always prevented.
0x5C00507C C   FIELD 00w32 SWLOCK: SWLOCK
0x5C005080 B  REGISTER BSEC_OTP_SWLOCK1 (rw): BSEC_OTP_SWLOCK0 is used to prevent writing to BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset. BSEC_OTP_SWLOCK1 is used to prevent writing to BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset. BSEC_OTP_SWLOCK2 is used to prevent writing to BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset. Write to shadow write locked BSEC_OTP_DATA word are silently ignored. Writing to OTP word 0 shadow is always prevented.
0x5C005080 C   FIELD 00w32 SWLOCK: SWLOCK
0x5C005084 B  REGISTER BSEC_OTP_SWLOCK2 (rw): BSEC_OTP_SWLOCK0 is used to prevent writing to BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset. BSEC_OTP_SWLOCK1 is used to prevent writing to BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset. BSEC_OTP_SWLOCK2 is used to prevent writing to BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset. Write to shadow write locked BSEC_OTP_DATA word are silently ignored. Writing to OTP word 0 shadow is always prevented.
0x5C005084 C   FIELD 00w32 SWLOCK: SWLOCK
0x5C005094 B  REGISTER BSEC_OTP_SRLOCK0 (rw): BSEC_OTP_SRLOCK0 is used to prevent reloading of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset. BSEC_OTP_SRLOCK1 is used to prevent reloading of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset. BSEC_OTP_SRLOCK2 is used to prevent reloading of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset. Setting SRLOCK bits or attempt to reload a locked OTP do not clear the corresponding BSEC_OTP_DATAx shadow register. BSEC_OTP_SRLOCK0 bit 0 is controlled by hardware according to fuse_ok, writing to this bit has no effect.
0x5C005094 C   FIELD 00w32 SRLOCK: SRLOCK
0x5C005098 B  REGISTER BSEC_OTP_SRLOCK1 (rw): BSEC_OTP_SRLOCK0 is used to prevent reloading of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset. BSEC_OTP_SRLOCK1 is used to prevent reloading of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset. BSEC_OTP_SRLOCK2 is used to prevent reloading of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset. Setting SRLOCK bits or attempt to reload a locked OTP do not clear the corresponding BSEC_OTP_DATAx shadow register. BSEC_OTP_SRLOCK0 bit 0 is controlled by hardware according to fuse_ok, writing to this bit has no effect.
0x5C005098 C   FIELD 00w32 SRLOCK: SRLOCK
0x5C00509C B  REGISTER BSEC_OTP_SRLOCK2 (rw): BSEC_OTP_SRLOCK0 is used to prevent reloading of BSEC_OTP_DATA0 to BSEC_OTP_DATA31 until next system-reset. BSEC_OTP_SRLOCK1 is used to prevent reloading of BSEC_OTP_DATA32 to BSEC_OTP_DATA63 until next system-reset. BSEC_OTP_SRLOCK2 is used to prevent reloading of BSEC_OTP_DATA64 to BSEC_OTP_DATA95 until next system-reset. Setting SRLOCK bits or attempt to reload a locked OTP do not clear the corresponding BSEC_OTP_DATAx shadow register. BSEC_OTP_SRLOCK0 bit 0 is controlled by hardware according to fuse_ok, writing to this bit has no effect.
0x5C00509C C   FIELD 00w32 SRLOCK: SRLOCK
0x5C0050AC B  REGISTER BSEC_JTAGIN (ro): BSEC JTAG input register
0x5C0050AC C   FIELD 00w16 DATA: DATA
0x5C0050B0 B  REGISTER BSEC_JTAGOUT (rw): BSEC JTAG output register
0x5C0050B0 C   FIELD 00w16 DATA: DATA
0x5C0050B4 B  REGISTER BSEC_SCRATCH (rw): BSEC scratch register
0x5C0050B4 C   FIELD 00w32 DATA: DATA
0x5C005200 B  REGISTER BSEC_OTP_DATA0 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005200 C   FIELD 00w32 DATA: DATA
0x5C005204 B  REGISTER BSEC_OTP_DATA1 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005204 C   FIELD 00w32 DATA: DATA
0x5C005208 B  REGISTER BSEC_OTP_DATA2 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005208 C   FIELD 00w32 DATA: DATA
0x5C00520C B  REGISTER BSEC_OTP_DATA3 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00520C C   FIELD 00w32 DATA: DATA
0x5C005210 B  REGISTER BSEC_OTP_DATA4 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005210 C   FIELD 00w32 DATA: DATA
0x5C005214 B  REGISTER BSEC_OTP_DATA5 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005214 C   FIELD 00w32 DATA: DATA
0x5C005218 B  REGISTER BSEC_OTP_DATA6 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005218 C   FIELD 00w32 DATA: DATA
0x5C00521C B  REGISTER BSEC_OTP_DATA7 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00521C C   FIELD 00w32 DATA: DATA
0x5C005220 B  REGISTER BSEC_OTP_DATA8 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005220 C   FIELD 00w32 DATA: DATA
0x5C005224 B  REGISTER BSEC_OTP_DATA9 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005224 C   FIELD 00w32 DATA: DATA
0x5C005228 B  REGISTER BSEC_OTP_DATA10 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005228 C   FIELD 00w32 DATA: DATA
0x5C00522C B  REGISTER BSEC_OTP_DATA11 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00522C C   FIELD 00w32 DATA: DATA
0x5C005230 B  REGISTER BSEC_OTP_DATA12 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005230 C   FIELD 00w32 DATA: DATA
0x5C005234 B  REGISTER BSEC_OTP_DATA13 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005234 C   FIELD 00w32 DATA: DATA
0x5C005238 B  REGISTER BSEC_OTP_DATA14 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005238 C   FIELD 00w32 DATA: DATA
0x5C00523C B  REGISTER BSEC_OTP_DATA15 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00523C C   FIELD 00w32 DATA: DATA
0x5C005240 B  REGISTER BSEC_OTP_DATA16 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005240 C   FIELD 00w32 DATA: DATA
0x5C005244 B  REGISTER BSEC_OTP_DATA17 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005244 C   FIELD 00w32 DATA: DATA
0x5C005248 B  REGISTER BSEC_OTP_DATA18 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005248 C   FIELD 00w32 DATA: DATA
0x5C00524C B  REGISTER BSEC_OTP_DATA19 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00524C C   FIELD 00w32 DATA: DATA
0x5C005250 B  REGISTER BSEC_OTP_DATA20 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005250 C   FIELD 00w32 DATA: DATA
0x5C005254 B  REGISTER BSEC_OTP_DATA21 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005254 C   FIELD 00w32 DATA: DATA
0x5C005258 B  REGISTER BSEC_OTP_DATA22 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005258 C   FIELD 00w32 DATA: DATA
0x5C00525C B  REGISTER BSEC_OTP_DATA23 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00525C C   FIELD 00w32 DATA: DATA
0x5C005260 B  REGISTER BSEC_OTP_DATA24 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005260 C   FIELD 00w32 DATA: DATA
0x5C005264 B  REGISTER BSEC_OTP_DATA25 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005264 C   FIELD 00w32 DATA: DATA
0x5C005268 B  REGISTER BSEC_OTP_DATA26 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005268 C   FIELD 00w32 DATA: DATA
0x5C00526C B  REGISTER BSEC_OTP_DATA27 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00526C C   FIELD 00w32 DATA: DATA
0x5C005270 B  REGISTER BSEC_OTP_DATA28 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005270 C   FIELD 00w32 DATA: DATA
0x5C005274 B  REGISTER BSEC_OTP_DATA29 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005274 C   FIELD 00w32 DATA: DATA
0x5C005278 B  REGISTER BSEC_OTP_DATA30 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005278 C   FIELD 00w32 DATA: DATA
0x5C00527C B  REGISTER BSEC_OTP_DATA31 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00527C C   FIELD 00w32 DATA: DATA
0x5C005280 B  REGISTER BSEC_OTP_DATA32 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005280 C   FIELD 00w32 DATA: DATA
0x5C005284 B  REGISTER BSEC_OTP_DATA33 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005284 C   FIELD 00w32 DATA: DATA
0x5C005288 B  REGISTER BSEC_OTP_DATA34 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005288 C   FIELD 00w32 DATA: DATA
0x5C00528C B  REGISTER BSEC_OTP_DATA35 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00528C C   FIELD 00w32 DATA: DATA
0x5C005290 B  REGISTER BSEC_OTP_DATA36 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005290 C   FIELD 00w32 DATA: DATA
0x5C005294 B  REGISTER BSEC_OTP_DATA37 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005294 C   FIELD 00w32 DATA: DATA
0x5C005298 B  REGISTER BSEC_OTP_DATA38 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005298 C   FIELD 00w32 DATA: DATA
0x5C00529C B  REGISTER BSEC_OTP_DATA39 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00529C C   FIELD 00w32 DATA: DATA
0x5C0052A0 B  REGISTER BSEC_OTP_DATA40 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052A0 C   FIELD 00w32 DATA: DATA
0x5C0052A4 B  REGISTER BSEC_OTP_DATA41 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052A4 C   FIELD 00w32 DATA: DATA
0x5C0052A8 B  REGISTER BSEC_OTP_DATA42 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052A8 C   FIELD 00w32 DATA: DATA
0x5C0052AC B  REGISTER BSEC_OTP_DATA43 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052AC C   FIELD 00w32 DATA: DATA
0x5C0052B0 B  REGISTER BSEC_OTP_DATA44 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052B0 C   FIELD 00w32 DATA: DATA
0x5C0052B4 B  REGISTER BSEC_OTP_DATA45 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052B4 C   FIELD 00w32 DATA: DATA
0x5C0052B8 B  REGISTER BSEC_OTP_DATA46 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052B8 C   FIELD 00w32 DATA: DATA
0x5C0052BC B  REGISTER BSEC_OTP_DATA47 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052BC C   FIELD 00w32 DATA: DATA
0x5C0052C0 B  REGISTER BSEC_OTP_DATA48 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052C0 C   FIELD 00w32 DATA: DATA
0x5C0052C4 B  REGISTER BSEC_OTP_DATA49 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052C4 C   FIELD 00w32 DATA: DATA
0x5C0052C8 B  REGISTER BSEC_OTP_DATA50 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052C8 C   FIELD 00w32 DATA: DATA
0x5C0052CC B  REGISTER BSEC_OTP_DATA51 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052CC C   FIELD 00w32 DATA: DATA
0x5C0052D0 B  REGISTER BSEC_OTP_DATA52 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052D0 C   FIELD 00w32 DATA: DATA
0x5C0052D4 B  REGISTER BSEC_OTP_DATA53 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052D4 C   FIELD 00w32 DATA: DATA
0x5C0052D8 B  REGISTER BSEC_OTP_DATA54 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052D8 C   FIELD 00w32 DATA: DATA
0x5C0052DC B  REGISTER BSEC_OTP_DATA55 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052DC C   FIELD 00w32 DATA: DATA
0x5C0052E0 B  REGISTER BSEC_OTP_DATA56 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052E0 C   FIELD 00w32 DATA: DATA
0x5C0052E4 B  REGISTER BSEC_OTP_DATA57 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052E4 C   FIELD 00w32 DATA: DATA
0x5C0052E8 B  REGISTER BSEC_OTP_DATA58 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052E8 C   FIELD 00w32 DATA: DATA
0x5C0052EC B  REGISTER BSEC_OTP_DATA59 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052EC C   FIELD 00w32 DATA: DATA
0x5C0052F0 B  REGISTER BSEC_OTP_DATA60 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052F0 C   FIELD 00w32 DATA: DATA
0x5C0052F4 B  REGISTER BSEC_OTP_DATA61 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052F4 C   FIELD 00w32 DATA: DATA
0x5C0052F8 B  REGISTER BSEC_OTP_DATA62 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052F8 C   FIELD 00w32 DATA: DATA
0x5C0052FC B  REGISTER BSEC_OTP_DATA63 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C0052FC C   FIELD 00w32 DATA: DATA
0x5C005300 B  REGISTER BSEC_OTP_DATA64 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005300 C   FIELD 00w32 DATA: DATA
0x5C005304 B  REGISTER BSEC_OTP_DATA65 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005304 C   FIELD 00w32 DATA: DATA
0x5C005308 B  REGISTER BSEC_OTP_DATA66 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005308 C   FIELD 00w32 DATA: DATA
0x5C00530C B  REGISTER BSEC_OTP_DATA67 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00530C C   FIELD 00w32 DATA: DATA
0x5C005310 B  REGISTER BSEC_OTP_DATA68 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005310 C   FIELD 00w32 DATA: DATA
0x5C005314 B  REGISTER BSEC_OTP_DATA69 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005314 C   FIELD 00w32 DATA: DATA
0x5C005318 B  REGISTER BSEC_OTP_DATA70 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005318 C   FIELD 00w32 DATA: DATA
0x5C00531C B  REGISTER BSEC_OTP_DATA71 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00531C C   FIELD 00w32 DATA: DATA
0x5C005320 B  REGISTER BSEC_OTP_DATA72 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005320 C   FIELD 00w32 DATA: DATA
0x5C005324 B  REGISTER BSEC_OTP_DATA73 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005324 C   FIELD 00w32 DATA: DATA
0x5C005328 B  REGISTER BSEC_OTP_DATA74 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005328 C   FIELD 00w32 DATA: DATA
0x5C00532C B  REGISTER BSEC_OTP_DATA75 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00532C C   FIELD 00w32 DATA: DATA
0x5C005330 B  REGISTER BSEC_OTP_DATA76 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005330 C   FIELD 00w32 DATA: DATA
0x5C005334 B  REGISTER BSEC_OTP_DATA77 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005334 C   FIELD 00w32 DATA: DATA
0x5C005338 B  REGISTER BSEC_OTP_DATA78 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005338 C   FIELD 00w32 DATA: DATA
0x5C00533C B  REGISTER BSEC_OTP_DATA79 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00533C C   FIELD 00w32 DATA: DATA
0x5C005340 B  REGISTER BSEC_OTP_DATA80 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005340 C   FIELD 00w32 DATA: DATA
0x5C005344 B  REGISTER BSEC_OTP_DATA81 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005344 C   FIELD 00w32 DATA: DATA
0x5C005348 B  REGISTER BSEC_OTP_DATA82 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005348 C   FIELD 00w32 DATA: DATA
0x5C00534C B  REGISTER BSEC_OTP_DATA83 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00534C C   FIELD 00w32 DATA: DATA
0x5C005350 B  REGISTER BSEC_OTP_DATA84 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005350 C   FIELD 00w32 DATA: DATA
0x5C005354 B  REGISTER BSEC_OTP_DATA85 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005354 C   FIELD 00w32 DATA: DATA
0x5C005358 B  REGISTER BSEC_OTP_DATA86 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005358 C   FIELD 00w32 DATA: DATA
0x5C00535C B  REGISTER BSEC_OTP_DATA87 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00535C C   FIELD 00w32 DATA: DATA
0x5C005360 B  REGISTER BSEC_OTP_DATA88 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005360 C   FIELD 00w32 DATA: DATA
0x5C005364 B  REGISTER BSEC_OTP_DATA89 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005364 C   FIELD 00w32 DATA: DATA
0x5C005368 B  REGISTER BSEC_OTP_DATA90 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005368 C   FIELD 00w32 DATA: DATA
0x5C00536C B  REGISTER BSEC_OTP_DATA91 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00536C C   FIELD 00w32 DATA: DATA
0x5C005370 B  REGISTER BSEC_OTP_DATA92 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005370 C   FIELD 00w32 DATA: DATA
0x5C005374 B  REGISTER BSEC_OTP_DATA93 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005374 C   FIELD 00w32 DATA: DATA
0x5C005378 B  REGISTER BSEC_OTP_DATA94 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C005378 C   FIELD 00w32 DATA: DATA
0x5C00537C B  REGISTER BSEC_OTP_DATA95 (rw): Several OTP directly impact BSEC behavior, such as: BSEC_OTP_DATA0[6:0] (see Table15: OTP modes definition on page175) BSEC_OTP_DATA1, 16 lsb used for SoC features control BSEC_OTP_DATA2, 2 lsb used to control the RAM handling The reset value depends on the actual OTP programmed value and the OTP mode.
0x5C00537C C   FIELD 00w32 DATA: DATA
0x5C005FF0 B  REGISTER BSEC_HWCFGR (ro): BSEC hardware configuration register
0x5C005FF0 C   FIELD 00w04 SIZE: SIZE
0x5C005FF0 C   FIELD 04w04 ECC_USE: ECC_USE
0x5C005FF4 B  REGISTER BSEC_VERR (ro): BSEC version register
0x5C005FF4 C   FIELD 00w04 MINREV: MINREV
0x5C005FF4 C   FIELD 04w04 MAJREV: MAJREV
0x5C005FF8 B  REGISTER BSEC_IPIDR (ro): BSEC identification register
0x5C005FF8 C   FIELD 00w32 ID: ID
0x5C005FFC B  REGISTER BSEC_SIDR (ro): BSEC size identification register
0x5C005FFC C   FIELD 00w32 SID: SID
0x5C006000 A PERIPHERAL TZC
0x5C006000 B  REGISTER TZC_BUILD_CONFIG (ro): Provides information about TZC configuration.
0x5C006000 C   FIELD 00w05 NO_OF_REGIONS (ro): NO_OF_REGIONS
0x5C006000 C   FIELD 08w06 ADDRESS_WIDTH (ro): ADDRESS_WIDTH
0x5C006000 C   FIELD 24w02 NO_OF_FILTERS (ro): NO_OF_FILTERS
0x5C006004 B  REGISTER TZC_ACTION (rw): Controls interrupt and bus error response behavior when regions permission failures occur.
0x5C006004 C   FIELD 00w02 REACTION_VALUE (rw): REACTION_VALUE
0x5C006008 B  REGISTER TZC_GATE_KEEPER (rw): Provides control and status for the gate keeper in each filter unit implemented.
0x5C006008 C   FIELD 00w02 OPENREQ (rw): OPENREQ
0x5C006008 C   FIELD 16w02 OPENSTAT (ro): OPENSTAT
0x5C00600C B  REGISTER TZC_SPECULATION_CTRL (rw): Controls read and write access speculation.
0x5C00600C C   FIELD 00w01 READSPEC_DISABLE (rw): READSPEC_DISABLE
0x5C00600C C   FIELD 01w01 WRITESPEC_DISABLE (rw): WRITESPEC_DISABLE
0x5C006010 B  REGISTER TZC_INT_STATUS (ro): Contains the status of the interrupt signal, TZCINT, that reports access security violations or region overlap errors.
0x5C006010 C   FIELD 00w02 STATUS (ro): STATUS
0x5C006010 C   FIELD 08w02 OVERRUN (ro): OVERRUN
0x5C006010 C   FIELD 16w02 OVERLAP (ro): OVERLAP
0x5C006014 B  REGISTER TZC_INT_CLEAR (rw): Interrupt clear for each filter.
0x5C006014 C   FIELD 00w02 CLEAR (wo): CLEAR
0x5C006020 B  REGISTER TZC_FAIL_ADDRESS_LOW0 (ro): Address low bits of the first failed access in the associated filter (0 to 1).
0x5C006020 C   FIELD 00w32 ADDR_STATUS_LOW (ro): ADDR_STATUS_LOW
0x5C006024 B  REGISTER TZC_FAIL_ADDRESS_HIGH0 (ro): Address high bit of the first failed access in the associated filter (0 to 1). Not used with 32bit address.
0x5C006028 B  REGISTER TZC_FAIL_CONTROL0 (ro): Status information about the first access that failed a region permission check in the associated filter (0 to 1).
0x5C006028 C   FIELD 20w01 PRIVILEGE (ro): PRIVILEGE
0x5C006028 C   FIELD 21w01 NON_SECURE (ro): NON_SECURE
0x5C006028 C   FIELD 24w01 DIRECTION (ro): DIRECTION
0x5C00602C B  REGISTER TZC_FAIL_ID0 (ro): Contains the master AXI ARID or AWID of the first access that failed a region permission check in the associated filter unit. This occurs even if the ACTION register is set to not drive the interrupt signal. AXI ID mapping is described in Table4: NSAID definition table (TBD).
0x5C00602C C   FIELD 00w11 ID (ro): ID
0x5C006030 B  REGISTER TZC_FAIL_ADDRESS_LOW1 (ro): Address low bits of the first failed access in the associated filter (0 to 1).
0x5C006030 C   FIELD 00w32 ADDR_STATUS_LOW (ro): ADDR_STATUS_LOW
0x5C006034 B  REGISTER TZC_FAIL_ADDRESS_HIGH1 (ro): Address high bit of the first failed access in the associated filter (0 to 1). Not used with 32bit address.
0x5C006038 B  REGISTER TZC_FAIL_CONTROL1 (ro): Status information about the first access that failed a region permission check in the associated filter (0 to 1).
0x5C006038 C   FIELD 20w01 PRIVILEGE (ro): PRIVILEGE
0x5C006038 C   FIELD 21w01 NON_SECURE (ro): NON_SECURE
0x5C006038 C   FIELD 24w01 DIRECTION (ro): DIRECTION
0x5C00603C B  REGISTER TZC_FAIL_ID1 (ro): Contains the master AXI ARID or AWID of the first access that failed a region permission check in the associated filter unit. This occurs even if the ACTION register is set to not drive the interrupt signal. AXI ID mapping is described in Table4: NSAID definition table (TBD).
0x5C00603C C   FIELD 00w11 ID (ro): ID
0x5C006104 B  REGISTER TZC_REGION_BASE_HIGH0 (ro): Base address high are not used with 32-bit address.
0x5C006108 B  REGISTER TZC_REGION_TOP_LOW0 (ro): Top address bits [31:12] for region 0.
0x5C006108 C   FIELD 12w20 TOP_ADDRESS_LOW (ro): TOP_ADDRESS_LOW
0x5C00610C B  REGISTER TZC_REGION_TOP_HIGH0 (ro): Top address high of region are not used with 32-bit address.
0x5C006110 B  REGISTER TZC_REGION_ATTRIBUTE0 (rw): Region 0 attributes.
0x5C006110 C   FIELD 00w02 FILTER_EN (ro): FILTER_EN
0x5C006110 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C006110 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C006114 B  REGISTER TZC_REGION_ID_ACCESS0 (rw): Region non-secure access based on NSAID.
0x5C006114 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C006114 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C006120 B  REGISTER TZC_REGION_BASE_LOW1 (rw): Base address low for regions 1 to 8.
0x5C006120 C   FIELD 12w20 BASE_ADDRESS_LOW (rw): BASE_ADDRESS_LOW
0x5C006124 B  REGISTER TZC_REGION_BASE_HIGH1 (ro): Base address high are not used with 32-bit address.
0x5C006128 B  REGISTER TZC_REGION_TOP_LOW1 (rw): Top address bits [31:12] for region x.
0x5C006128 C   FIELD 12w20 TOP_ADDRESS_LOW (rw): TOP_ADDRESS_LOW
0x5C00612C B  REGISTER TZC_REGION_TOP_HIGH1 (ro): Top address high of region are not used with 32-bit address.
0x5C006130 B  REGISTER TZC_REGION_ATTRIBUTE1 (rw): Region x attributes.
0x5C006130 C   FIELD 00w02 FILTER_EN (rw): FILTER_EN
0x5C006130 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C006130 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C006134 B  REGISTER TZC_REGION_ID_ACCESS1 (rw): Region non-secure access based on NSAID.
0x5C006134 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C006134 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C006140 B  REGISTER TZC_REGION_BASE_LOW2 (rw): Base address low for regions 1 to 8.
0x5C006140 C   FIELD 12w20 BASE_ADDRESS_LOW (rw): BASE_ADDRESS_LOW
0x5C006144 B  REGISTER TZC_REGION_BASE_HIGH2 (ro): Base address high are not used with 32-bit address.
0x5C006148 B  REGISTER TZC_REGION_TOP_LOW2 (rw): Top address bits [31:12] for region x.
0x5C006148 C   FIELD 12w20 TOP_ADDRESS_LOW (rw): TOP_ADDRESS_LOW
0x5C00614C B  REGISTER TZC_REGION_TOP_HIGH2 (ro): Top address high of region are not used with 32-bit address.
0x5C006150 B  REGISTER TZC_REGION_ATTRIBUTE2 (rw): Region x attributes.
0x5C006150 C   FIELD 00w02 FILTER_EN (rw): FILTER_EN
0x5C006150 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C006150 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C006154 B  REGISTER TZC_REGION_ID_ACCESS2 (rw): Region non-secure access based on NSAID.
0x5C006154 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C006154 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C006160 B  REGISTER TZC_REGION_BASE_LOW3 (rw): Base address low for regions 1 to 8.
0x5C006160 C   FIELD 12w20 BASE_ADDRESS_LOW (rw): BASE_ADDRESS_LOW
0x5C006164 B  REGISTER TZC_REGION_BASE_HIGH3 (ro): Base address high are not used with 32-bit address.
0x5C006168 B  REGISTER TZC_REGION_TOP_LOW3 (rw): Top address bits [31:12] for region x.
0x5C006168 C   FIELD 12w20 TOP_ADDRESS_LOW (rw): TOP_ADDRESS_LOW
0x5C00616C B  REGISTER TZC_REGION_TOP_HIGH3 (ro): Top address high of region are not used with 32-bit address.
0x5C006170 B  REGISTER TZC_REGION_ATTRIBUTE3 (rw): Region x attributes.
0x5C006170 C   FIELD 00w02 FILTER_EN (rw): FILTER_EN
0x5C006170 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C006170 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C006174 B  REGISTER TZC_REGION_ID_ACCESS3 (rw): Region non-secure access based on NSAID.
0x5C006174 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C006174 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C006180 B  REGISTER TZC_REGION_BASE_LOW4 (rw): Base address low for regions 1 to 8.
0x5C006180 C   FIELD 12w20 BASE_ADDRESS_LOW (rw): BASE_ADDRESS_LOW
0x5C006184 B  REGISTER TZC_REGION_BASE_HIGH4 (ro): Base address high are not used with 32-bit address.
0x5C006188 B  REGISTER TZC_REGION_TOP_LOW4 (rw): Top address bits [31:12] for region x.
0x5C006188 C   FIELD 12w20 TOP_ADDRESS_LOW (rw): TOP_ADDRESS_LOW
0x5C00618C B  REGISTER TZC_REGION_TOP_HIGH4 (ro): Top address high of region are not used with 32-bit address.
0x5C006190 B  REGISTER TZC_REGION_ATTRIBUTE4 (rw): Region x attributes.
0x5C006190 C   FIELD 00w02 FILTER_EN (rw): FILTER_EN
0x5C006190 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C006190 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C006194 B  REGISTER TZC_REGION_ID_ACCESS4 (rw): Region non-secure access based on NSAID.
0x5C006194 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C006194 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C0061A0 B  REGISTER TZC_REGION_BASE_LOW5 (rw): Base address low for regions 1 to 8.
0x5C0061A0 C   FIELD 12w20 BASE_ADDRESS_LOW (rw): BASE_ADDRESS_LOW
0x5C0061A4 B  REGISTER TZC_REGION_BASE_HIGH5 (ro): Base address high are not used with 32-bit address.
0x5C0061A8 B  REGISTER TZC_REGION_TOP_LOW5 (rw): Top address bits [31:12] for region x.
0x5C0061A8 C   FIELD 12w20 TOP_ADDRESS_LOW (rw): TOP_ADDRESS_LOW
0x5C0061AC B  REGISTER TZC_REGION_TOP_HIGH5 (ro): Top address high of region are not used with 32-bit address.
0x5C0061B0 B  REGISTER TZC_REGION_ATTRIBUTE5 (rw): Region x attributes.
0x5C0061B0 C   FIELD 00w02 FILTER_EN (rw): FILTER_EN
0x5C0061B0 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C0061B0 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C0061B4 B  REGISTER TZC_REGION_ID_ACCESS5 (rw): Region non-secure access based on NSAID.
0x5C0061B4 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C0061B4 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C0061C0 B  REGISTER TZC_REGION_BASE_LOW6 (rw): Base address low for regions 1 to 8.
0x5C0061C0 C   FIELD 12w20 BASE_ADDRESS_LOW (rw): BASE_ADDRESS_LOW
0x5C0061C4 B  REGISTER TZC_REGION_BASE_HIGH6 (ro): Base address high are not used with 32-bit address.
0x5C0061C8 B  REGISTER TZC_REGION_TOP_LOW6 (rw): Top address bits [31:12] for region x.
0x5C0061C8 C   FIELD 12w20 TOP_ADDRESS_LOW (rw): TOP_ADDRESS_LOW
0x5C0061CC B  REGISTER TZC_REGION_TOP_HIGH6 (ro): Top address high of region are not used with 32-bit address.
0x5C0061D0 B  REGISTER TZC_REGION_ATTRIBUTE6 (rw): Region x attributes.
0x5C0061D0 C   FIELD 00w02 FILTER_EN (rw): FILTER_EN
0x5C0061D0 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C0061D0 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C0061D4 B  REGISTER TZC_REGION_ID_ACCESS6 (rw): Region non-secure access based on NSAID.
0x5C0061D4 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C0061D4 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C0061E8 B  REGISTER TZC_REGION_TOP_LOW7 (rw): Top address bits [31:12] for region x.
0x5C0061E8 C   FIELD 12w20 TOP_ADDRESS_LOW (rw): TOP_ADDRESS_LOW
0x5C0061F0 B  REGISTER TZC_REGION_ATTRIBUTE7 (rw): Region x attributes.
0x5C0061F0 C   FIELD 00w02 FILTER_EN (rw): FILTER_EN
0x5C0061F0 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C0061F0 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C006200 B  REGISTER TZC_REGION_BASE_LOW8 (rw): Base address low for regions 1 to 8.
0x5C006200 C   FIELD 12w20 BASE_ADDRESS_LOW (rw): BASE_ADDRESS_LOW
0x5C006204 B  REGISTER TZC_REGION_BASE_HIGH8 (ro): Base address high are not used with 32-bit address.
0x5C006210 B  REGISTER TZC_REGION_ATTRIBUTE8 (rw): Region x attributes.
0x5C006210 C   FIELD 00w02 FILTER_EN (rw): FILTER_EN
0x5C006210 C   FIELD 30w01 S_RD_EN (rw): S_RD_EN
0x5C006210 C   FIELD 31w01 S_WR_EN (rw): S_WR_EN
0x5C0062E0 B  REGISTER TZC_REGION_BASE_LOW7 (rw): Base address low for regions 1 to 8.
0x5C0062E0 C   FIELD 12w20 BASE_ADDRESS_LOW (rw): BASE_ADDRESS_LOW
0x5C0062E4 B  REGISTER TZC_REGION_BASE_HIGH7 (ro): Base address high are not used with 32-bit address.
0x5C0062EC B  REGISTER TZC_REGION_TOP_HIGH7 (ro): Top address high of region are not used with 32-bit address.
0x5C0062F4 B  REGISTER TZC_REGION_ID_ACCESS7 (rw): Region non-secure access based on NSAID.
0x5C0062F4 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C0062F4 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C006308 B  REGISTER TZC_REGION_TOP_LOW8 (rw): Top address bits [31:12] for region x.
0x5C006308 C   FIELD 12w20 TOP_ADDRESS_LOW (rw): TOP_ADDRESS_LOW
0x5C00630C B  REGISTER TZC_REGION_TOP_HIGH8 (ro): Top address high of region are not used with 32-bit address.
0x5C006314 B  REGISTER TZC_REGION_ID_ACCESS8 (rw): Region non-secure access based on NSAID.
0x5C006314 C   FIELD 00w16 NSAID_RD_EN (rw): NSAID_RD_EN
0x5C006314 C   FIELD 16w16 NSAID_WR_EN (rw): NSAID_WR_EN
0x5C006FD0 B  REGISTER TZC_PID4 (ro): Peripheral ID 4.
0x5C006FD0 C   FIELD 00w08 PER_ID_4 (ro): PER_ID_4
0x5C006FD4 B  REGISTER TZC_PID5 (ro): Peripheral ID 5.
0x5C006FD4 C   FIELD 00w08 PER_ID_5 (ro): PER_ID_5
0x5C006FD8 B  REGISTER TZC_PID6 (ro): Peripheral ID 6.
0x5C006FD8 C   FIELD 00w08 PER_ID_6 (ro): PER_ID_6
0x5C006FDC B  REGISTER TZC_PID7 (ro): Peripheral ID 7.
0x5C006FDC C   FIELD 00w08 PER_ID_7 (ro): PER_ID_7
0x5C006FE0 B  REGISTER TZC_PID0 (ro): Peripheral ID 0.
0x5C006FE0 C   FIELD 00w08 PER_ID_0 (ro): PER_ID_0
0x5C006FE4 B  REGISTER TZC_PID1 (ro): Peripheral ID 1.
0x5C006FE4 C   FIELD 00w08 PER_ID_1 (ro): PER_ID_1
0x5C006FE8 B  REGISTER TZC_PID2 (ro): Peripheral ID 2.
0x5C006FE8 C   FIELD 00w08 PER_ID_2 (ro): PER_ID_2
0x5C006FEC B  REGISTER TZC_PID3 (ro): Peripheral ID 3.
0x5C006FEC C   FIELD 00w08 PER_ID_3 (ro): PER_ID_3
0x5C006FF0 B  REGISTER TZC_CID0 (ro): Component ID 0.
0x5C006FF0 C   FIELD 00w08 COMP_ID_0 (ro): COMP_ID_0
0x5C006FF4 B  REGISTER TZC_CID1 (ro): Component ID 1.
0x5C006FF4 C   FIELD 00w08 COMP_ID_1 (ro): COMP_ID_1
0x5C006FF8 B  REGISTER TZC_CID2 (ro): Component ID 2.
0x5C006FF8 C   FIELD 00w08 COMP_ID_2 (ro): COMP_ID_2
0x5C006FFC B  REGISTER TZC_CID3 (ro): Component ID 3.
0x5C006FFC C   FIELD 00w08 COMP_ID_3 (ro): COMP_ID_3
0x5C007000 A PERIPHERAL ETZPC
0x5C007000 B  REGISTER ETZPC_TZMA0_SIZE (rw): ETZPC ROM secure size definition
0x5C007000 C   FIELD 00w10 R0SIZE: R0SIZE
0x5C007000 C   FIELD 31w01 LOCK: LOCK
0x5C007004 B  REGISTER ETZPC_TZMA1_SIZE (rw): ETZPC RAM secure size definition
0x5C007004 C   FIELD 00w10 R0SIZE: R0SIZE
0x5C007004 C   FIELD 31w01 LOCK: LOCK
0x5C007010 B  REGISTER ETZPC_DECPROT0 (rw): Register reset values
0x5C007010 C   FIELD 00w02 DECPROT0: DECPROT0
0x5C007010 C   FIELD 02w02 DECPROT1: DECPROT1
0x5C007010 C   FIELD 04w02 DECPROT2: DECPROT2
0x5C007010 C   FIELD 06w02 DECPROT3: DECPROT3
0x5C007010 C   FIELD 08w02 DECPROT4: DECPROT4
0x5C007010 C   FIELD 10w02 DECPROT5: DECPROT5
0x5C007010 C   FIELD 12w02 DECPROT6: DECPROT6
0x5C007010 C   FIELD 14w02 DECPROT7: DECPROT7
0x5C007010 C   FIELD 16w02 DECPROT8: DECPROT8
0x5C007010 C   FIELD 18w02 DECPROT9: DECPROT9
0x5C007010 C   FIELD 20w02 DECPROT10: DECPROT10
0x5C007010 C   FIELD 22w02 DECPROT11: DECPROT11
0x5C007010 C   FIELD 24w02 DECPROT12: DECPROT12
0x5C007010 C   FIELD 26w02 DECPROT13: DECPROT13
0x5C007010 C   FIELD 28w02 DECPROT14: DECPROT14
0x5C007010 C   FIELD 30w02 DECPROT15: DECPROT15
0x5C007014 B  REGISTER ETZPC_DECPROT1 (rw): Register reset values
0x5C007014 C   FIELD 00w02 DECPROT0: DECPROT0
0x5C007014 C   FIELD 02w02 DECPROT1: DECPROT1
0x5C007014 C   FIELD 04w02 DECPROT2: DECPROT2
0x5C007014 C   FIELD 06w02 DECPROT3: DECPROT3
0x5C007014 C   FIELD 08w02 DECPROT4: DECPROT4
0x5C007014 C   FIELD 10w02 DECPROT5: DECPROT5
0x5C007014 C   FIELD 12w02 DECPROT6: DECPROT6
0x5C007014 C   FIELD 14w02 DECPROT7: DECPROT7
0x5C007014 C   FIELD 16w02 DECPROT8: DECPROT8
0x5C007014 C   FIELD 18w02 DECPROT9: DECPROT9
0x5C007014 C   FIELD 20w02 DECPROT10: DECPROT10
0x5C007014 C   FIELD 22w02 DECPROT11: DECPROT11
0x5C007014 C   FIELD 24w02 DECPROT12: DECPROT12
0x5C007014 C   FIELD 26w02 DECPROT13: DECPROT13
0x5C007014 C   FIELD 28w02 DECPROT14: DECPROT14
0x5C007014 C   FIELD 30w02 DECPROT15: DECPROT15
0x5C007018 B  REGISTER ETZPC_DECPROT2 (rw): Register reset values
0x5C007018 C   FIELD 00w02 DECPROT0: DECPROT0
0x5C007018 C   FIELD 02w02 DECPROT1: DECPROT1
0x5C007018 C   FIELD 04w02 DECPROT2: DECPROT2
0x5C007018 C   FIELD 06w02 DECPROT3: DECPROT3
0x5C007018 C   FIELD 08w02 DECPROT4: DECPROT4
0x5C007018 C   FIELD 10w02 DECPROT5: DECPROT5
0x5C007018 C   FIELD 12w02 DECPROT6: DECPROT6
0x5C007018 C   FIELD 14w02 DECPROT7: DECPROT7
0x5C007018 C   FIELD 16w02 DECPROT8: DECPROT8
0x5C007018 C   FIELD 18w02 DECPROT9: DECPROT9
0x5C007018 C   FIELD 20w02 DECPROT10: DECPROT10
0x5C007018 C   FIELD 22w02 DECPROT11: DECPROT11
0x5C007018 C   FIELD 24w02 DECPROT12: DECPROT12
0x5C007018 C   FIELD 26w02 DECPROT13: DECPROT13
0x5C007018 C   FIELD 28w02 DECPROT14: DECPROT14
0x5C007018 C   FIELD 30w02 DECPROT15: DECPROT15
0x5C00701C B  REGISTER ETZPC_DECPROT3 (rw): Register reset values
0x5C00701C C   FIELD 00w02 DECPROT0: DECPROT0
0x5C00701C C   FIELD 02w02 DECPROT1: DECPROT1
0x5C00701C C   FIELD 04w02 DECPROT2: DECPROT2
0x5C00701C C   FIELD 06w02 DECPROT3: DECPROT3
0x5C00701C C   FIELD 08w02 DECPROT4: DECPROT4
0x5C00701C C   FIELD 10w02 DECPROT5: DECPROT5
0x5C00701C C   FIELD 12w02 DECPROT6: DECPROT6
0x5C00701C C   FIELD 14w02 DECPROT7: DECPROT7
0x5C00701C C   FIELD 16w02 DECPROT8: DECPROT8
0x5C00701C C   FIELD 18w02 DECPROT9: DECPROT9
0x5C00701C C   FIELD 20w02 DECPROT10: DECPROT10
0x5C00701C C   FIELD 22w02 DECPROT11: DECPROT11
0x5C00701C C   FIELD 24w02 DECPROT12: DECPROT12
0x5C00701C C   FIELD 26w02 DECPROT13: DECPROT13
0x5C00701C C   FIELD 28w02 DECPROT14: DECPROT14
0x5C00701C C   FIELD 30w02 DECPROT15: DECPROT15
0x5C007020 B  REGISTER ETZPC_DECPROT4 (rw): Register reset values
0x5C007020 C   FIELD 00w02 DECPROT0: DECPROT0
0x5C007020 C   FIELD 02w02 DECPROT1: DECPROT1
0x5C007020 C   FIELD 04w02 DECPROT2: DECPROT2
0x5C007020 C   FIELD 06w02 DECPROT3: DECPROT3
0x5C007020 C   FIELD 08w02 DECPROT4: DECPROT4
0x5C007020 C   FIELD 10w02 DECPROT5: DECPROT5
0x5C007020 C   FIELD 12w02 DECPROT6: DECPROT6
0x5C007020 C   FIELD 14w02 DECPROT7: DECPROT7
0x5C007020 C   FIELD 16w02 DECPROT8: DECPROT8
0x5C007020 C   FIELD 18w02 DECPROT9: DECPROT9
0x5C007020 C   FIELD 20w02 DECPROT10: DECPROT10
0x5C007020 C   FIELD 22w02 DECPROT11: DECPROT11
0x5C007020 C   FIELD 24w02 DECPROT12: DECPROT12
0x5C007020 C   FIELD 26w02 DECPROT13: DECPROT13
0x5C007020 C   FIELD 28w02 DECPROT14: DECPROT14
0x5C007020 C   FIELD 30w02 DECPROT15: DECPROT15
0x5C007024 B  REGISTER ETZPC_DECPROT5 (rw): Register reset values
0x5C007024 C   FIELD 00w02 DECPROT0: DECPROT0
0x5C007024 C   FIELD 02w02 DECPROT1: DECPROT1
0x5C007024 C   FIELD 04w02 DECPROT2: DECPROT2
0x5C007024 C   FIELD 06w02 DECPROT3: DECPROT3
0x5C007024 C   FIELD 08w02 DECPROT4: DECPROT4
0x5C007024 C   FIELD 10w02 DECPROT5: DECPROT5
0x5C007024 C   FIELD 12w02 DECPROT6: DECPROT6
0x5C007024 C   FIELD 14w02 DECPROT7: DECPROT7
0x5C007024 C   FIELD 16w02 DECPROT8: DECPROT8
0x5C007024 C   FIELD 18w02 DECPROT9: DECPROT9
0x5C007024 C   FIELD 20w02 DECPROT10: DECPROT10
0x5C007024 C   FIELD 22w02 DECPROT11: DECPROT11
0x5C007024 C   FIELD 24w02 DECPROT12: DECPROT12
0x5C007024 C   FIELD 26w02 DECPROT13: DECPROT13
0x5C007024 C   FIELD 28w02 DECPROT14: DECPROT14
0x5C007024 C   FIELD 30w02 DECPROT15: DECPROT15
0x5C007030 B  REGISTER ETZPC_DECPROT_LOCK0 (rw): ETZPC decprot lock 0 register
0x5C007030 C   FIELD 00w01 LOCK0: LOCK0
0x5C007030 C   FIELD 01w01 LOCK1: LOCK1
0x5C007030 C   FIELD 02w01 LOCK2: LOCK2
0x5C007030 C   FIELD 03w01 LOCK3: LOCK3
0x5C007030 C   FIELD 04w01 LOCK4: LOCK4
0x5C007030 C   FIELD 05w01 LOCK5: LOCK5
0x5C007030 C   FIELD 06w01 LOCK6: LOCK6
0x5C007030 C   FIELD 07w01 LOCK7: LOCK7
0x5C007030 C   FIELD 08w01 LOCK8: LOCK8
0x5C007030 C   FIELD 09w01 LOCK9: LOCK9
0x5C007030 C   FIELD 10w01 LOCK10: LOCK10
0x5C007030 C   FIELD 11w01 LOCK11: LOCK11
0x5C007030 C   FIELD 12w01 LOCK12: LOCK12
0x5C007030 C   FIELD 13w01 LOCK13: LOCK13
0x5C007030 C   FIELD 14w01 LOCK14: LOCK14
0x5C007030 C   FIELD 15w01 LOCK15: LOCK15
0x5C007030 C   FIELD 16w01 LOCK16: LOCK16
0x5C007030 C   FIELD 17w01 LOCK17: LOCK17
0x5C007030 C   FIELD 18w01 LOCK18: LOCK18
0x5C007030 C   FIELD 19w01 LOCK19: LOCK19
0x5C007030 C   FIELD 20w01 LOCK20: LOCK20
0x5C007030 C   FIELD 21w01 LOCK21: LOCK21
0x5C007030 C   FIELD 22w01 LOCK22: LOCK22
0x5C007030 C   FIELD 23w01 LOCK23: LOCK23
0x5C007030 C   FIELD 24w01 LOCK24: LOCK24
0x5C007030 C   FIELD 25w01 LOCK25: LOCK25
0x5C007030 C   FIELD 26w01 LOCK26: LOCK26
0x5C007030 C   FIELD 27w01 LOCK27: LOCK27
0x5C007030 C   FIELD 28w01 LOCK28: LOCK28
0x5C007030 C   FIELD 29w01 LOCK29: LOCK29
0x5C007030 C   FIELD 30w01 LOCK30: LOCK30
0x5C007030 C   FIELD 31w01 LOCK31: LOCK31
0x5C007034 B  REGISTER ETZPC_DECPROT_LOCK1 (rw): ETZPC decprot lock 1 register
0x5C007034 C   FIELD 00w01 LOCK0: LOCK0
0x5C007034 C   FIELD 01w01 LOCK1: LOCK1
0x5C007034 C   FIELD 02w01 LOCK2: LOCK2
0x5C007034 C   FIELD 03w01 LOCK3: LOCK3
0x5C007034 C   FIELD 04w01 LOCK4: LOCK4
0x5C007034 C   FIELD 05w01 LOCK5: LOCK5
0x5C007034 C   FIELD 06w01 LOCK6: LOCK6
0x5C007034 C   FIELD 07w01 LOCK7: LOCK7
0x5C007034 C   FIELD 08w01 LOCK8: LOCK8
0x5C007034 C   FIELD 09w01 LOCK9: LOCK9
0x5C007034 C   FIELD 10w01 LOCK10: LOCK10
0x5C007034 C   FIELD 11w01 LOCK11: LOCK11
0x5C007034 C   FIELD 12w01 LOCK12: LOCK12
0x5C007034 C   FIELD 13w01 LOCK13: LOCK13
0x5C007034 C   FIELD 14w01 LOCK14: LOCK14
0x5C007034 C   FIELD 15w01 LOCK15: LOCK15
0x5C007034 C   FIELD 16w01 LOCK16: LOCK16
0x5C007034 C   FIELD 17w01 LOCK17: LOCK17
0x5C007034 C   FIELD 18w01 LOCK18: LOCK18
0x5C007034 C   FIELD 19w01 LOCK19: LOCK19
0x5C007034 C   FIELD 20w01 LOCK20: LOCK20
0x5C007034 C   FIELD 21w01 LOCK21: LOCK21
0x5C007034 C   FIELD 22w01 LOCK22: LOCK22
0x5C007034 C   FIELD 23w01 LOCK23: LOCK23
0x5C007034 C   FIELD 24w01 LOCK24: LOCK24
0x5C007034 C   FIELD 25w01 LOCK25: LOCK25
0x5C007034 C   FIELD 26w01 LOCK26: LOCK26
0x5C007034 C   FIELD 27w01 LOCK27: LOCK27
0x5C007034 C   FIELD 28w01 LOCK28: LOCK28
0x5C007034 C   FIELD 29w01 LOCK29: LOCK29
0x5C007034 C   FIELD 30w01 LOCK30: LOCK30
0x5C007034 C   FIELD 31w01 LOCK31: LOCK31
0x5C007038 B  REGISTER ETZPC_DECPROT_LOCK2 (rw): ETZPC decprot lock 2 register
0x5C007038 C   FIELD 00w01 LOCK0: LOCK0
0x5C007038 C   FIELD 01w01 LOCK1: LOCK1
0x5C007038 C   FIELD 02w01 LOCK2: LOCK2
0x5C007038 C   FIELD 03w01 LOCK3: LOCK3
0x5C007038 C   FIELD 04w01 LOCK4: LOCK4
0x5C007038 C   FIELD 05w01 LOCK5: LOCK5
0x5C007038 C   FIELD 06w01 LOCK6: LOCK6
0x5C007038 C   FIELD 07w01 LOCK7: LOCK7
0x5C007038 C   FIELD 08w01 LOCK8: LOCK8
0x5C007038 C   FIELD 09w01 LOCK9: LOCK9
0x5C007038 C   FIELD 10w01 LOCK10: LOCK10
0x5C007038 C   FIELD 11w01 LOCK11: LOCK11
0x5C007038 C   FIELD 12w01 LOCK12: LOCK12
0x5C007038 C   FIELD 13w01 LOCK13: LOCK13
0x5C007038 C   FIELD 14w01 LOCK14: LOCK14
0x5C007038 C   FIELD 15w01 LOCK15: LOCK15
0x5C007038 C   FIELD 16w01 LOCK16: LOCK16
0x5C007038 C   FIELD 17w01 LOCK17: LOCK17
0x5C007038 C   FIELD 18w01 LOCK18: LOCK18
0x5C007038 C   FIELD 19w01 LOCK19: LOCK19
0x5C007038 C   FIELD 20w01 LOCK20: LOCK20
0x5C007038 C   FIELD 21w01 LOCK21: LOCK21
0x5C007038 C   FIELD 22w01 LOCK22: LOCK22
0x5C007038 C   FIELD 23w01 LOCK23: LOCK23
0x5C007038 C   FIELD 24w01 LOCK24: LOCK24
0x5C007038 C   FIELD 25w01 LOCK25: LOCK25
0x5C007038 C   FIELD 26w01 LOCK26: LOCK26
0x5C007038 C   FIELD 27w01 LOCK27: LOCK27
0x5C007038 C   FIELD 28w01 LOCK28: LOCK28
0x5C007038 C   FIELD 29w01 LOCK29: LOCK29
0x5C007038 C   FIELD 30w01 LOCK30: LOCK30
0x5C007038 C   FIELD 31w01 LOCK31: LOCK31
0x5C0073F0 B  REGISTER ETZPC_HWCFGR (ro): ETZPC IP HW configuration register
0x5C0073F0 C   FIELD 00w08 NUM_TZMA: NUM_TZMA
0x5C0073F0 C   FIELD 08w08 NUM_PER_SEC: NUM_PER_SEC
0x5C0073F0 C   FIELD 16w08 NUM_AHB_SEC: NUM_AHB_SEC
0x5C0073F0 C   FIELD 24w08 CHUNKS1N4: CHUNKS1N4
0x5C0073F4 B  REGISTER ETZPC_VERR (ro): ETZPC IP version register
0x5C0073F4 C   FIELD 00w04 MINREV: MINREV
0x5C0073F4 C   FIELD 04w04 MAJREV: MAJREV
0x5C0073F8 B  REGISTER ETZPC_IDR (ro): ETZPC IP version register
0x5C0073F8 C   FIELD 00w32 ID: ID
0x5C0073FC B  REGISTER ETZPC_SIDR (ro): ETZPC IP version register
0x5C0073FC C   FIELD 00w32 SID: SID
0x5C008000 A PERIPHERAL STGENC
0x5C008000 B  REGISTER STGENC_CNTCR (rw): STGENC control register
0x5C008000 C   FIELD 00w01 EN: EN
0x5C008000 C   FIELD 01w01 HLTDBG: HLTDBG
0x5C008004 B  REGISTER STGENC_CNTSR (ro): STGENC status register
0x5C008004 C   FIELD 00w01 EN: EN
0x5C008004 C   FIELD 01w01 HLTDBG: HLTDBG
0x5C008008 B  REGISTER STGENC_CNTCVL (rw): the control interface must clear the STGENC_CNTCR.EN bit before writing to this register.
0x5C008008 C   FIELD 00w32 CNTCVL_L_32: CNTCVL_L_32
0x5C00800C B  REGISTER STGENC_CNTCVU (rw): the control interface must clear the STGENC_CNTCR.EN bit before writing to this register.
0x5C00800C C   FIELD 00w32 CNTCVU_U_32: CNTCVU_U_32
0x5C008020 B  REGISTER STGENC_CNTFID0 (rw): the control interface must clear the STGEN_CNTCR.EN bit before writing to this register.
0x5C008020 C   FIELD 00w32 FREQ: FREQ
0x5C008FD0 B  REGISTER STGENC_PIDR4 (ro): STGENC peripheral ID4 register
0x5C008FD0 C   FIELD 00w04 DES_2: DES_2
0x5C008FD0 C   FIELD 04w04 SIZE: SIZE
0x5C008FD4 B  REGISTER STGENC_PIDR5 (ro): STGENC peripheral ID5 register
0x5C008FD4 C   FIELD 00w32 PIDR5: PIDR5
0x5C008FD8 B  REGISTER STGENC_PIDR6 (ro): STGENC peripheral ID6 register
0x5C008FD8 C   FIELD 00w32 PIDR6: PIDR6
0x5C008FDC B  REGISTER STGENC_PIDR7 (ro): STGENC peripheral ID7 register
0x5C008FDC C   FIELD 00w32 PIDR7: PIDR7
0x5C008FE0 B  REGISTER STGENC_PIDR0 (ro): STGENC peripheral ID0 register
0x5C008FE0 C   FIELD 00w08 PART_0: PART_0
0x5C008FE4 B  REGISTER STGENC_PIDR1 (ro): STGENC peripheral ID1 register
0x5C008FE4 C   FIELD 00w04 PART_1: PART_1
0x5C008FE4 C   FIELD 04w04 DES_0: DES_0
0x5C008FE8 B  REGISTER STGENC_PIDR2 (ro): STGENC peripheral ID2 register
0x5C008FE8 C   FIELD 00w03 DES_1: DES_1
0x5C008FE8 C   FIELD 03w01 JEDEC: JEDEC
0x5C008FE8 C   FIELD 04w04 REVISION: REVISION
0x5C008FEC B  REGISTER STGENC_PIDR3 (ro): STGENC peripheral ID3 register
0x5C008FEC C   FIELD 00w04 CMOD: CMOD
0x5C008FEC C   FIELD 04w04 REVAND: REVAND
0x5C008FF0 B  REGISTER STGENC_CIDR0 (ro): STGENC component ID0 register
0x5C008FF0 C   FIELD 00w08 PRMBL_0: PRMBL_0
0x5C008FF4 B  REGISTER STGENC_CIDR1 (ro): STGENC component ID1 register
0x5C008FF4 C   FIELD 00w04 PRMBL_1: PRMBL_1
0x5C008FF4 C   FIELD 04w04 CLASS: CLASS
0x5C008FF8 B  REGISTER STGENC_CIDR2 (ro): STGENC component ID2 register
0x5C008FF8 C   FIELD 00w08 PRMBL_2: PRMBL_2
0x5C008FFC B  REGISTER STGENC_CIDR3 (ro): STGENC component ID3 register
0x5C008FFC C   FIELD 00w08 PRMBL_3: PRMBL_3
0x5C009000 A PERIPHERAL I2C6
0x5C009000 B  REGISTER I2C_CR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2xi2c_pclk+6xi2c_ker_ck.
0x5C009000 C   FIELD 00w01 PE: PE
0x5C009000 C   FIELD 01w01 TXIE: TXIE
0x5C009000 C   FIELD 02w01 RXIE: RXIE
0x5C009000 C   FIELD 03w01 ADDRIE: ADDRIE
0x5C009000 C   FIELD 04w01 NACKIE: NACKIE
0x5C009000 C   FIELD 05w01 STOPIE: STOPIE
0x5C009000 C   FIELD 06w01 TCIE: TCIE
0x5C009000 C   FIELD 07w01 ERRIE: ERRIE
0x5C009000 C   FIELD 08w04 DNF: DNF
0x5C009000 C   FIELD 12w01 ANFOFF: ANFOFF
0x5C009000 C   FIELD 14w01 TXDMAEN: TXDMAEN
0x5C009000 C   FIELD 15w01 RXDMAEN: RXDMAEN
0x5C009000 C   FIELD 16w01 SBC: SBC
0x5C009000 C   FIELD 17w01 NOSTRETCH: NOSTRETCH
0x5C009000 C   FIELD 18w01 WUPEN: WUPEN
0x5C009000 C   FIELD 19w01 GCEN: GCEN
0x5C009000 C   FIELD 20w01 SMBHEN: SMBHEN
0x5C009000 C   FIELD 21w01 SMBDEN: SMBDEN
0x5C009000 C   FIELD 22w01 ALERTEN: ALERTEN
0x5C009000 C   FIELD 23w01 PECEN: PECEN
0x5C009004 B  REGISTER I2C_CR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x5C009004 C   FIELD 00w10 SADD: SADD
0x5C009004 C   FIELD 10w01 RD_WRN: RD_WRN
0x5C009004 C   FIELD 11w01 ADD10: ADD10
0x5C009004 C   FIELD 12w01 HEAD10R: HEAD10R
0x5C009004 C   FIELD 13w01 START: START
0x5C009004 C   FIELD 14w01 STOP: STOP
0x5C009004 C   FIELD 15w01 NACK: NACK
0x5C009004 C   FIELD 16w08 NBYTES: NBYTES
0x5C009004 C   FIELD 24w01 RELOAD: RELOAD
0x5C009004 C   FIELD 25w01 AUTOEND: AUTOEND
0x5C009004 C   FIELD 26w01 PECBYTE: PECBYTE
0x5C009008 B  REGISTER I2C_OAR1 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x5C009008 C   FIELD 00w10 OA1: OA1
0x5C009008 C   FIELD 10w01 OA1MODE: OA1MODE
0x5C009008 C   FIELD 15w01 OA1EN: OA1EN
0x5C00900C B  REGISTER I2C_OAR2 (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x5C00900C C   FIELD 01w07 OA2: OA2
0x5C00900C C   FIELD 08w03 OA2MSK: OA2MSK
0x5C00900C C   FIELD 15w01 OA2EN: OA2EN
0x5C009010 B  REGISTER I2C_TIMINGR (rw): Access: No wait states
0x5C009010 C   FIELD 00w08 SCLL: SCLL
0x5C009010 C   FIELD 08w08 SCLH: SCLH
0x5C009010 C   FIELD 16w04 SDADEL: SDADEL
0x5C009010 C   FIELD 20w04 SCLDEL: SCLDEL
0x5C009010 C   FIELD 28w04 PRESC: PRESC
0x5C009014 B  REGISTER I2C_TIMEOUTR (rw): Access: No wait states, except if a write access occurs while a write access to this register is ongoing. In this case, wait states are inserted in the second write access until the previous one is completed. The latency of the second write access can be up to 2 x i2c_pclk + 6 x i2c_ker_ck.
0x5C009014 C   FIELD 00w12 TIMEOUTA: TIMEOUTA
0x5C009014 C   FIELD 12w01 TIDLE: TIDLE
0x5C009014 C   FIELD 15w01 TIMOUTEN: TIMOUTEN
0x5C009014 C   FIELD 16w12 TIMEOUTB: TIMEOUTB
0x5C009014 C   FIELD 31w01 TEXTEN: TEXTEN
0x5C009018 B  REGISTER I2C_ISR: Access: No wait states
0x5C009018 C   FIELD 00w01 TXE (rw): TXE
0x5C009018 C   FIELD 01w01 TXIS (rw): TXIS
0x5C009018 C   FIELD 02w01 RXNE (ro): RXNE
0x5C009018 C   FIELD 03w01 ADDR (ro): ADDR
0x5C009018 C   FIELD 04w01 NACKF (ro): NACKF
0x5C009018 C   FIELD 05w01 STOPF (ro): STOPF
0x5C009018 C   FIELD 06w01 TC (ro): TC
0x5C009018 C   FIELD 07w01 TCR (ro): TCR
0x5C009018 C   FIELD 08w01 BERR (ro): BERR
0x5C009018 C   FIELD 09w01 ARLO (ro): ARLO
0x5C009018 C   FIELD 10w01 OVR (ro): OVR
0x5C009018 C   FIELD 11w01 PECERR (ro): PECERR
0x5C009018 C   FIELD 12w01 TIMEOUT (ro): TIMEOUT
0x5C009018 C   FIELD 13w01 ALERT (ro): ALERT
0x5C009018 C   FIELD 15w01 BUSY (ro): BUSY
0x5C009018 C   FIELD 16w01 DIR (ro): DIR
0x5C009018 C   FIELD 17w07 ADDCODE (ro): ADDCODE
0x5C00901C B  REGISTER I2C_ICR (wo): Access: No wait states
0x5C00901C C   FIELD 03w01 ADDRCF: ADDRCF
0x5C00901C C   FIELD 04w01 NACKCF: NACKCF
0x5C00901C C   FIELD 05w01 STOPCF: STOPCF
0x5C00901C C   FIELD 08w01 BERRCF: BERRCF
0x5C00901C C   FIELD 09w01 ARLOCF: ARLOCF
0x5C00901C C   FIELD 10w01 OVRCF: OVRCF
0x5C00901C C   FIELD 11w01 PECCF: PECCF
0x5C00901C C   FIELD 12w01 TIMOUTCF: TIMOUTCF
0x5C00901C C   FIELD 13w01 ALERTCF: ALERTCF
0x5C009020 B  REGISTER I2C_PECR (ro): Access: No wait states
0x5C009020 C   FIELD 00w08 PEC: PEC
0x5C009024 B  REGISTER I2C_RXDR (ro): Access: No wait states
0x5C009024 C   FIELD 00w08 RXDATA: RXDATA
0x5C009028 B  REGISTER I2C_TXDR (rw): Access: No wait states
0x5C009028 C   FIELD 00w08 TXDATA: TXDATA
0x5C0093F0 B  REGISTER I2C_HWCFGR (ro): I2C hardware configuration register
0x5C0093F0 C   FIELD 00w04 SMBUS: SMBUS
0x5C0093F0 C   FIELD 04w04 ASYN: ASYN
0x5C0093F0 C   FIELD 08w04 WKP: WKP
0x5C0093F4 B  REGISTER I2C_VERR (ro): I2C version register
0x5C0093F4 C   FIELD 00w04 MINREV: MINREV
0x5C0093F4 C   FIELD 04w04 MAJREV: MAJREV
0x5C0093F8 B  REGISTER I2C_IPIDR (ro): I2C identification register
0x5C0093F8 C   FIELD 00w32 ID: ID
0x5C0093FC B  REGISTER I2C_SIDR (ro): I2C size identification register
0x5C0093FC C   FIELD 00w32 SID: SID
0x5C00A000 A PERIPHERAL TAMP
0x5C00A000 B  REGISTER TAMP_CR1 (rw): This register can be protected against non-secure access. Refer to Section51.3.3: TAMP secure protection modes.
0x5C00A000 C   FIELD 00w01 TAMP1E: TAMP1E
0x5C00A000 C   FIELD 01w01 TAMP2E: TAMP2E
0x5C00A000 C   FIELD 02w01 TAMP3E: TAMP3E
0x5C00A000 C   FIELD 16w01 ITAMP1E: ITAMP1E
0x5C00A000 C   FIELD 17w01 ITAMP2E: ITAMP2E
0x5C00A000 C   FIELD 18w01 ITAMP3E: ITAMP3E
0x5C00A000 C   FIELD 19w01 ITAMP4E: ITAMP4E
0x5C00A000 C   FIELD 20w01 ITAMP5E: ITAMP5E
0x5C00A000 C   FIELD 23w01 ITAMP8E: ITAMP8E
0x5C00A004 B  REGISTER TAMP_CR2 (rw): This register can be protected against non-secure access. Refer to Section51.3.3: TAMP secure protection modes.
0x5C00A004 C   FIELD 00w01 TAMP1NOER: TAMP1NOER
0x5C00A004 C   FIELD 01w01 TAMP2NOER: TAMP2NOER
0x5C00A004 C   FIELD 02w01 TAMP3NOER: TAMP3NOER
0x5C00A004 C   FIELD 16w01 TAMP1MSK: TAMP1MSK
0x5C00A004 C   FIELD 17w01 TAMP2MSK: TAMP2MSK
0x5C00A004 C   FIELD 18w01 TAMP3MSK: TAMP3MSK
0x5C00A004 C   FIELD 24w01 TAMP1TRG: TAMP1TRG
0x5C00A004 C   FIELD 25w01 TAMP2TRG: TAMP2TRG
0x5C00A004 C   FIELD 26w01 TAMP3TRG: TAMP3TRG
0x5C00A00C B  REGISTER TAMP_FLTCR (rw): This register can be protected against non-secure access. Refer to Section51.3.3: TAMP secure protection modes.
0x5C00A00C C   FIELD 00w03 TAMPFREQ: TAMPFREQ
0x5C00A00C C   FIELD 03w02 TAMPFLT: TAMPFLT
0x5C00A00C C   FIELD 05w02 TAMPPRCH: TAMPPRCH
0x5C00A00C C   FIELD 07w01 TAMPPUDIS: TAMPPUDIS
0x5C00A010 B  REGISTER TAMP_ATCR1 (rw): This register can be protected against non-secure access. Refer to Section51.3.3: TAMP secure protection modes.
0x5C00A010 C   FIELD 00w01 TAMP1AM: TAMP1AM
0x5C00A010 C   FIELD 01w01 TAMP2AM: TAMP2AM
0x5C00A010 C   FIELD 02w01 TAMP3AM: TAMP3AM
0x5C00A010 C   FIELD 08w02 ATOSEL1: ATOSEL1
0x5C00A010 C   FIELD 10w02 ATOSEL2: ATOSEL2
0x5C00A010 C   FIELD 12w02 ATOSEL3: ATOSEL3
0x5C00A010 C   FIELD 16w03 ATCKSEL: ATCKSEL
0x5C00A010 C   FIELD 24w03 ATPER: ATPER
0x5C00A010 C   FIELD 30w01 ATOSHARE: ATOSHARE
0x5C00A010 C   FIELD 31w01 FLTEN: FLTEN
0x5C00A014 B  REGISTER TAMP_ATSEEDR (wo): This register can be protected against non-secure access. Refer to Section51.3.3: TAMP secure protection modes.
0x5C00A014 C   FIELD 00w32 SEED: SEED
0x5C00A018 B  REGISTER TAMP_ATOR (ro): This register can be protected against non-secure access. Refer to Section51.3.3: TAMP secure protection modes.
0x5C00A018 C   FIELD 00w08 PRNG: PRNG
0x5C00A018 C   FIELD 14w01 SEEDF: SEEDF
0x5C00A018 C   FIELD 15w01 INITS: INITS
0x5C00A020 B  REGISTER TAMP_SMCR (rw): This register can be written only when the APB access is secure.
0x5C00A020 C   FIELD 00w08 BKPRWDPROT: BKPRWDPROT
0x5C00A020 C   FIELD 16w08 BKPWDPROT: BKPWDPROT
0x5C00A020 C   FIELD 31w01 TAMPDPROT: TAMPDPROT
0x5C00A02C B  REGISTER TAMP_IER (rw): This register can be protected against non-secure access. Refer to Section51.3.3: TAMP secure protection modes.
0x5C00A02C C   FIELD 00w01 TAMP1IE: TAMP1IE
0x5C00A02C C   FIELD 01w01 TAMP2IE: TAMP2IE
0x5C00A02C C   FIELD 02w01 TAMP3IE: TAMP3IE
0x5C00A02C C   FIELD 16w01 ITAMP1IE: ITAMP1IE
0x5C00A02C C   FIELD 17w01 ITAMP2IE: ITAMP2IE
0x5C00A02C C   FIELD 18w01 ITAMP3IE: ITAMP3IE
0x5C00A02C C   FIELD 19w01 ITAMP4IE: ITAMP4IE
0x5C00A02C C   FIELD 20w01 ITAMP5IE: ITAMP5IE
0x5C00A02C C   FIELD 23w01 ITAMP8IE: ITAMP8IE
0x5C00A030 B  REGISTER TAMP_SR (ro): This register can be protected against non-secure access. Refer to Section51.3.3: TAMP secure protection modes.
0x5C00A030 C   FIELD 00w01 TAMP1F: TAMP1F
0x5C00A030 C   FIELD 01w01 TAMP2F: TAMP2F
0x5C00A030 C   FIELD 02w01 TAMP3F: TAMP3F
0x5C00A030 C   FIELD 16w01 ITAMP1F: ITAMP1F
0x5C00A030 C   FIELD 17w01 ITAMP2F: ITAMP2F
0x5C00A030 C   FIELD 18w01 ITAMP3F: ITAMP3F
0x5C00A030 C   FIELD 19w01 ITAMP4F: ITAMP4F
0x5C00A030 C   FIELD 20w01 ITAMP5F: ITAMP5F
0x5C00A030 C   FIELD 23w01 ITAMP8F: ITAMP8F
0x5C00A034 B  REGISTER TAMP_MISR (ro): TAMP non-secure masked interrupt status register
0x5C00A034 C   FIELD 00w01 TAMP1MF: TAMP1MF
0x5C00A034 C   FIELD 01w01 TAMP2MF: TAMP2MF
0x5C00A034 C   FIELD 02w01 TAMP3MF: TAMP3MF
0x5C00A034 C   FIELD 16w01 ITAMP1MF: ITAMP1MF
0x5C00A034 C   FIELD 17w01 ITAMP2MF: ITAMP2MF
0x5C00A034 C   FIELD 18w01 ITAMP3MF: ITAMP3MF
0x5C00A034 C   FIELD 19w01 ITAMP4MF: ITAMP4MF
0x5C00A034 C   FIELD 20w01 ITAMP5MF: ITAMP5MF
0x5C00A034 C   FIELD 23w01 ITAMP8MF: ITAMP8MF
0x5C00A038 B  REGISTER TAMP_SMISR (ro): TAMP secure masked interrupt status register
0x5C00A038 C   FIELD 00w01 TAMP1MF: TAMP1MF
0x5C00A038 C   FIELD 01w01 TAMP2MF: TAMP2MF
0x5C00A038 C   FIELD 02w01 TAMP3MF: TAMP3MF
0x5C00A038 C   FIELD 16w01 ITAMP1MF: ITAMP1MF
0x5C00A038 C   FIELD 17w01 ITAMP2MF: ITAMP2MF
0x5C00A038 C   FIELD 18w01 ITAMP3MF: ITAMP3MF
0x5C00A038 C   FIELD 19w01 ITAMP4MF: ITAMP4MF
0x5C00A038 C   FIELD 20w01 ITAMP5MF: ITAMP5MF
0x5C00A038 C   FIELD 23w01 ITAMP8MF: ITAMP8MF
0x5C00A03C B  REGISTER TAMP_SCR (wo): TAMP status clear register
0x5C00A03C C   FIELD 00w01 CTAMP1F: CTAMP1F
0x5C00A03C C   FIELD 01w01 CTAMP2F: CTAMP2F
0x5C00A03C C   FIELD 02w01 CTAMP3F: CTAMP3F
0x5C00A03C C   FIELD 16w01 CITAMP1F: CITAMP1F
0x5C00A03C C   FIELD 17w01 CITAMP2F: CITAMP2F
0x5C00A03C C   FIELD 18w01 CITAMP3F: CITAMP3F
0x5C00A03C C   FIELD 19w01 CITAMP4F: CITAMP4F
0x5C00A03C C   FIELD 20w01 CITAMP5F: CITAMP5F
0x5C00A03C C   FIELD 23w01 CITAMP8F: CITAMP8F
0x5C00A040 B  REGISTER TAMP_COUNTR (ro): TAMP monotonic counter register
0x5C00A040 C   FIELD 00w32 COUNT: COUNT
0x5C00A050 B  REGISTER TAMP_CFGR (rw): TAMP configuration register
0x5C00A050 C   FIELD 00w01 OUT3_RMP: OUT3_RMP
0x5C00A100 B  REGISTER TAMP_BKP0R (rw): TAMP backup 0 register
0x5C00A100 C   FIELD 00w32 BKP: BKP
0x5C00A104 B  REGISTER TAMP_BKP1R (rw): TAMP backup 1 register
0x5C00A104 C   FIELD 00w32 BKP: BKP
0x5C00A108 B  REGISTER TAMP_BKP2R (rw): TAMP backup 2 register
0x5C00A108 C   FIELD 00w32 BKP: BKP
0x5C00A10C B  REGISTER TAMP_BKP3R (rw): TAMP backup 3 register
0x5C00A10C C   FIELD 00w32 BKP: BKP
0x5C00A110 B  REGISTER TAMP_BKP4R (rw): TAMP backup 4 register
0x5C00A110 C   FIELD 00w32 BKP: BKP
0x5C00A114 B  REGISTER TAMP_BKP5R (rw): TAMP backup 5 register
0x5C00A114 C   FIELD 00w32 BKP: BKP
0x5C00A118 B  REGISTER TAMP_BKP6R (rw): TAMP backup 6 register
0x5C00A118 C   FIELD 00w32 BKP: BKP
0x5C00A11C B  REGISTER TAMP_BKP7R (rw): TAMP backup 7 register
0x5C00A11C C   FIELD 00w32 BKP: BKP
0x5C00A120 B  REGISTER TAMP_BKP8R (rw): TAMP backup 8 register
0x5C00A120 C   FIELD 00w32 BKP: BKP
0x5C00A124 B  REGISTER TAMP_BKP9R (rw): TAMP backup 9 register
0x5C00A124 C   FIELD 00w32 BKP: BKP
0x5C00A128 B  REGISTER TAMP_BKP10R (rw): TAMP backup 10 register
0x5C00A128 C   FIELD 00w32 BKP: BKP
0x5C00A12C B  REGISTER TAMP_BKP11R (rw): TAMP backup 11 register
0x5C00A12C C   FIELD 00w32 BKP: BKP
0x5C00A130 B  REGISTER TAMP_BKP12R (rw): TAMP backup 12 register
0x5C00A130 C   FIELD 00w32 BKP: BKP
0x5C00A134 B  REGISTER TAMP_BKP13R (rw): TAMP backup 13 register
0x5C00A134 C   FIELD 00w32 BKP: BKP
0x5C00A138 B  REGISTER TAMP_BKP14R (rw): TAMP backup 14 register
0x5C00A138 C   FIELD 00w32 BKP: BKP
0x5C00A13C B  REGISTER TAMP_BKP15R (rw): TAMP backup 15 register
0x5C00A13C C   FIELD 00w32 BKP: BKP
0x5C00A140 B  REGISTER TAMP_BKP16R (rw): TAMP backup 16 register
0x5C00A140 C   FIELD 00w32 BKP: BKP
0x5C00A144 B  REGISTER TAMP_BKP17R (rw): TAMP backup 17 register
0x5C00A144 C   FIELD 00w32 BKP: BKP
0x5C00A148 B  REGISTER TAMP_BKP18R (rw): TAMP backup 18 register
0x5C00A148 C   FIELD 00w32 BKP: BKP
0x5C00A14C B  REGISTER TAMP_BKP19R (rw): TAMP backup 19 register
0x5C00A14C C   FIELD 00w32 BKP: BKP
0x5C00A150 B  REGISTER TAMP_BKP20R (rw): TAMP backup 20 register
0x5C00A150 C   FIELD 00w32 BKP: BKP
0x5C00A154 B  REGISTER TAMP_BKP21R (rw): TAMP backup 21 register
0x5C00A154 C   FIELD 00w32 BKP: BKP
0x5C00A158 B  REGISTER TAMP_BKP22R (rw): TAMP backup 22 register
0x5C00A158 C   FIELD 00w32 BKP: BKP
0x5C00A15C B  REGISTER TAMP_BKP23R (rw): TAMP backup 23 register
0x5C00A15C C   FIELD 00w32 BKP: BKP
0x5C00A160 B  REGISTER TAMP_BKP24R (rw): TAMP backup 24 register
0x5C00A160 C   FIELD 00w32 BKP: BKP
0x5C00A164 B  REGISTER TAMP_BKP25R (rw): TAMP backup 25 register
0x5C00A164 C   FIELD 00w32 BKP: BKP
0x5C00A168 B  REGISTER TAMP_BKP26R (rw): TAMP backup 26 register
0x5C00A168 C   FIELD 00w32 BKP: BKP
0x5C00A16C B  REGISTER TAMP_BKP27R (rw): TAMP backup 27 register
0x5C00A16C C   FIELD 00w32 BKP: BKP
0x5C00A170 B  REGISTER TAMP_BKP28R (rw): TAMP backup 28 register
0x5C00A170 C   FIELD 00w32 BKP: BKP
0x5C00A174 B  REGISTER TAMP_BKP29R (rw): TAMP backup 29 register
0x5C00A174 C   FIELD 00w32 BKP: BKP
0x5C00A178 B  REGISTER TAMP_BKP30R (rw): TAMP backup 30 register
0x5C00A178 C   FIELD 00w32 BKP: BKP
0x5C00A17C B  REGISTER TAMP_BKP31R (rw): TAMP backup 31 register
0x5C00A17C C   FIELD 00w32 BKP: BKP
0x5C00A3EC B  REGISTER TAMP_HWCFGR2 (ro): TAMP hardware configuration register 2
0x5C00A3EC C   FIELD 00w08 OPTIONREG_OUT: OPTIONREG_OUT
0x5C00A3EC C   FIELD 08w04 TRUST_ZONE: TRUST_ZONE
0x5C00A3F0 B  REGISTER TAMP_HWCFGR1 (ro): TAMP hardware configuration register 1
0x5C00A3F0 C   FIELD 00w08 BACKUP_REGS: BACKUP_REGS
0x5C00A3F0 C   FIELD 08w04 TAMPER: TAMPER
0x5C00A3F0 C   FIELD 12w04 ACTIVE_TAMPER: ACTIVE_TAMPER
0x5C00A3F0 C   FIELD 16w16 INT_TAMPER: INT_TAMPER
0x5C00A3F4 B  REGISTER TAMP_VERR (ro): TAMP version register
0x5C00A3F4 C   FIELD 00w04 MINREV: MINREV
0x5C00A3F4 C   FIELD 04w04 MAJREV: MAJREV
0x5C00A3F8 B  REGISTER TAMP_IPIDR (ro): TAMP identification register
0x5C00A3F8 C   FIELD 00w32 ID: ID
0x5C00A3FC B  REGISTER TAMP_SIDR (ro): TAMP size identification register
0x5C00A3FC C   FIELD 00w32 SID: SID
0xA0021000 A PERIPHERAL GICD
0xA0021000 B  REGISTER GICD_CTLR (rw): GICD control register
0xA0021000 C   FIELD 00w01 ENABLEGRP0: ENABLEGRP0
0xA0021000 C   FIELD 01w01 ENABLEGRP1: ENABLEGRP1
0xA0021004 B  REGISTER GICD_TYPER (ro): GICD interrupt controller type register
0xA0021004 C   FIELD 00w05 ITLINESNUMBER: ITLINESNUMBER
0xA0021004 C   FIELD 05w03 CPUNUMBER: CPUNUMBER
0xA0021004 C   FIELD 10w01 SECURITYEXTN: SECURITYEXTN
0xA0021004 C   FIELD 11w05 LSPI: LSPI
0xA0021008 B  REGISTER GICD_IIDR (ro): GICD implementer identification register
0xA0021008 C   FIELD 00w12 IMPLEMENTER: IMPLEMENTER
0xA0021008 C   FIELD 12w04 VARIANT: VARIANT
0xA0021008 C   FIELD 16w04 REVISION: REVISION
0xA0021008 C   FIELD 24w08 PRODUCTID: PRODUCTID
0xA0021080 B  REGISTER GICD_IGROUPR0 (rw): For interrupts ID
0xA0021080 C   FIELD 00w32 IGROUPR0: IGROUPR0
0xA0021084 B  REGISTER GICD_IGROUPR1 (rw): For interrupts ID
0xA0021084 C   FIELD 00w32 IGROUPR1: IGROUPR1
0xA0021088 B  REGISTER GICD_IGROUPR2 (rw): For interrupts ID
0xA0021088 C   FIELD 00w32 IGROUPR2: IGROUPR2
0xA002108C B  REGISTER GICD_IGROUPR3 (rw): For interrupts ID = x*32 to ID = x*32+31
0xA002108C C   FIELD 00w32 IGROUPR3: IGROUPR3
0xA0021090 B  REGISTER GICD_IGROUPR4 (rw): For interrupts ID = x*32 to ID = x*32+31
0xA0021090 C   FIELD 00w32 IGROUPR4: IGROUPR4
0xA0021094 B  REGISTER GICD_IGROUPR5 (rw): For interrupts ID
0xA0021094 C   FIELD 00w32 IGROUPR5: IGROUPR5
0xA0021098 B  REGISTER GICD_IGROUPR6 (rw): For interrupts ID
0xA0021098 C   FIELD 00w32 IGROUPR6: IGROUPR6
0xA002109C B  REGISTER GICD_IGROUPR7 (rw): For interrupts ID
0xA002109C C   FIELD 00w32 IGROUPR7: IGROUPR7
0xA00210A0 B  REGISTER GICD_IGROUPR8 (rw): For interrupts ID
0xA00210A0 C   FIELD 00w32 IGROUPR8: IGROUPR8
0xA0021100 B  REGISTER GICD_ISENABLER0 (rw): For interrupts ID = 0 to ID = 31
0xA0021100 C   FIELD 00w32 ISENABLER0: ISENABLER0
0xA0021104 B  REGISTER GICD_ISENABLER1 (rw): For interrupts ID
0xA0021104 C   FIELD 00w32 ISENABLER1: ISENABLER1
0xA0021108 B  REGISTER GICD_ISENABLER2 (rw): For interrupts ID
0xA0021108 C   FIELD 00w32 ISENABLER2: ISENABLER2
0xA002110C B  REGISTER GICD_ISENABLER3 (rw): For interrupts ID
0xA002110C C   FIELD 00w32 ISENABLER3: ISENABLER3
0xA0021110 B  REGISTER GICD_ISENABLER4 (rw): For interrupts ID
0xA0021110 C   FIELD 00w32 ISENABLER4: ISENABLER4
0xA0021114 B  REGISTER GICD_ISENABLER5 (rw): For interrupts ID
0xA0021114 C   FIELD 00w32 ISENABLER5: ISENABLER5
0xA0021118 B  REGISTER GICD_ISENABLER6 (rw): For interrupts ID
0xA0021118 C   FIELD 00w32 ISENABLER6: ISENABLER6
0xA002111C B  REGISTER GICD_ISENABLER7 (rw): For interrupts ID
0xA002111C C   FIELD 00w32 ISENABLER7: ISENABLER7
0xA0021120 B  REGISTER GICD_ISENABLER8 (rw): For interrupts ID
0xA0021120 C   FIELD 00w32 ISENABLER8: ISENABLER8
0xA0021180 B  REGISTER GICD_ICENABLER0 (rw): For interrupts ID = 0 to ID = 31
0xA0021180 C   FIELD 00w32 ICENABLER0: ICENABLER0
0xA0021184 B  REGISTER GICD_ICENABLER1 (rw): For interrupts ID
0xA0021184 C   FIELD 00w32 ICENABLER1: ICENABLER1
0xA0021188 B  REGISTER GICD_ICENABLER2 (rw): For interrupts ID
0xA0021188 C   FIELD 00w32 ICENABLER2: ICENABLER2
0xA002118C B  REGISTER GICD_ICENABLER3 (rw): For interrupts ID
0xA002118C C   FIELD 00w32 ICENABLER3: ICENABLER3
0xA0021190 B  REGISTER GICD_ICENABLER4 (rw): For interrupts ID
0xA0021190 C   FIELD 00w32 ICENABLER4: ICENABLER4
0xA0021194 B  REGISTER GICD_ICENABLER5 (rw): For interrupts ID
0xA0021194 C   FIELD 00w32 ICENABLER5: ICENABLER5
0xA0021198 B  REGISTER GICD_ICENABLER6 (rw): For interrupts ID
0xA0021198 C   FIELD 00w32 ICENABLER6: ICENABLER6
0xA002119C B  REGISTER GICD_ICENABLER7 (rw): For interrupts ID
0xA002119C C   FIELD 00w32 ICENABLER7: ICENABLER7
0xA00211A0 B  REGISTER GICD_ICENABLER8 (rw): For interrupts ID
0xA00211A0 C   FIELD 00w32 ICENABLER8: ICENABLER8
0xA0021200 B  REGISTER GICD_ISPENDR0 (rw): For interrupts ID
0xA0021200 C   FIELD 00w32 ISPENDR0: ISPENDR0
0xA0021204 B  REGISTER GICD_ISPENDR1 (rw): For interrupts ID
0xA0021204 C   FIELD 00w32 ISPENDR1: ISPENDR1
0xA0021208 B  REGISTER GICD_ISPENDR2 (rw): For interrupts ID
0xA0021208 C   FIELD 00w32 ISPENDR2: ISPENDR2
0xA002120C B  REGISTER GICD_ISPENDR3 (rw): For interrupts ID
0xA002120C C   FIELD 00w32 ISPENDR3: ISPENDR3
0xA0021210 B  REGISTER GICD_ISPENDR4 (rw): For interrupts ID
0xA0021210 C   FIELD 00w32 ISPENDR4: ISPENDR4
0xA0021214 B  REGISTER GICD_ISPENDR5 (rw): For interrupts ID
0xA0021214 C   FIELD 00w32 ISPENDR5: ISPENDR5
0xA0021218 B  REGISTER GICD_ISPENDR6 (rw): For interrupts ID
0xA0021218 C   FIELD 00w32 ISPENDR6: ISPENDR6
0xA002121C B  REGISTER GICD_ISPENDR7 (rw): For interrupts ID
0xA002121C C   FIELD 00w32 ISPENDR7: ISPENDR7
0xA0021220 B  REGISTER GICD_ISPENDR8 (rw): For interrupts ID
0xA0021220 C   FIELD 00w32 ISPENDR8: ISPENDR8
0xA0021280 B  REGISTER GICD_ICPENDR0 (rw): For interrupts ID
0xA0021280 C   FIELD 00w32 ICPENDR0: ICPENDR0
0xA0021284 B  REGISTER GICD_ICPENDR1 (rw): For interrupts ID
0xA0021284 C   FIELD 00w32 ICPENDR1: ICPENDR1
0xA0021288 B  REGISTER GICD_ICPENDR2 (rw): For interrupts ID
0xA0021288 C   FIELD 00w32 ICPENDR2: ICPENDR2
0xA002128C B  REGISTER GICD_ICPENDR3 (rw): For interrupts ID
0xA002128C C   FIELD 00w32 ICPENDR3: ICPENDR3
0xA0021290 B  REGISTER GICD_ICPENDR4 (rw): For interrupts ID
0xA0021290 C   FIELD 00w32 ICPENDR4: ICPENDR4
0xA0021294 B  REGISTER GICD_ICPENDR5 (rw): For interrupts ID
0xA0021294 C   FIELD 00w32 ICPENDR5: ICPENDR5
0xA0021298 B  REGISTER GICD_ICPENDR6 (rw): For interrupts ID
0xA0021298 C   FIELD 00w32 ICPENDR6: ICPENDR6
0xA002129C B  REGISTER GICD_ICPENDR7 (rw): For interrupts ID
0xA002129C C   FIELD 00w32 ICPENDR7: ICPENDR7
0xA00212A0 B  REGISTER GICD_ICPENDR8 (rw): For interrupts ID
0xA00212A0 C   FIELD 00w32 ICPENDR8: ICPENDR8
0xA0021300 B  REGISTER GICD_ISACTIVER0 (rw): For interrupts ID
0xA0021300 C   FIELD 00w32 ISACTIVER0: ISACTIVER0
0xA0021304 B  REGISTER GICD_ISACTIVER1 (rw): For interrupts ID
0xA0021304 C   FIELD 00w32 ISACTIVER1: ISACTIVER1
0xA0021308 B  REGISTER GICD_ISACTIVER2 (rw): For interrupts ID
0xA0021308 C   FIELD 00w32 ISACTIVER2: ISACTIVER2
0xA002130C B  REGISTER GICD_ISACTIVER3 (rw): For interrupts ID
0xA002130C C   FIELD 00w32 ISACTIVER3: ISACTIVER3
0xA0021310 B  REGISTER GICD_ISACTIVER4 (rw): For interrupts ID
0xA0021310 C   FIELD 00w32 ISACTIVER4: ISACTIVER4
0xA0021314 B  REGISTER GICD_ISACTIVER5 (rw): For interrupts ID
0xA0021314 C   FIELD 00w32 ISACTIVER5: ISACTIVER5
0xA0021318 B  REGISTER GICD_ISACTIVER6 (rw): For interrupts ID
0xA0021318 C   FIELD 00w32 ISACTIVER6: ISACTIVER6
0xA002131C B  REGISTER GICD_ISACTIVER7 (rw): For interrupts ID
0xA002131C C   FIELD 00w32 ISACTIVER7: ISACTIVER7
0xA0021320 B  REGISTER GICD_ISACTIVER8 (rw): For interrupts ID
0xA0021320 C   FIELD 00w32 ISACTIVER8: ISACTIVER8
0xA0021380 B  REGISTER GICD_ICACTIVER0 (rw): For interrupts ID
0xA0021380 C   FIELD 00w32 ICACTIVER0: ICACTIVER0
0xA0021384 B  REGISTER GICD_ICACTIVER1 (rw): For interrupts ID
0xA0021384 C   FIELD 00w32 ICACTIVER1: ICACTIVER1
0xA0021388 B  REGISTER GICD_ICACTIVER2 (rw): For interrupts ID
0xA0021388 C   FIELD 00w32 ICACTIVER2: ICACTIVER2
0xA002138C B  REGISTER GICD_ICACTIVER3 (rw): For interrupts ID
0xA002138C C   FIELD 00w32 ICACTIVER3: ICACTIVER3
0xA0021390 B  REGISTER GICD_ICACTIVER4 (rw): For interrupts ID
0xA0021390 C   FIELD 00w32 ICACTIVER4: ICACTIVER4
0xA0021394 B  REGISTER GICD_ICACTIVER5 (rw): For interrupts ID
0xA0021394 C   FIELD 00w32 ICACTIVER5: ICACTIVER5
0xA0021398 B  REGISTER GICD_ICACTIVER6 (rw): For interrupts ID
0xA0021398 C   FIELD 00w32 ICACTIVER6: ICACTIVER6
0xA002139C B  REGISTER GICD_ICACTIVER7 (rw): For interrupts ID
0xA002139C C   FIELD 00w32 ICACTIVER7: ICACTIVER7
0xA00213A0 B  REGISTER GICD_ICACTIVER8 (rw): For interrupts ID
0xA00213A0 C   FIELD 00w32 ICACTIVER8: ICACTIVER8
0xA0021400 B  REGISTER GICD_IPRIORITYR0 (rw): GICD interrupt priority register 0
0xA0021400 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021400 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021400 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021400 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021404 B  REGISTER GICD_IPRIORITYR1 (rw): GICD interrupt priority register 1
0xA0021404 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021404 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021404 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021404 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021408 B  REGISTER GICD_IPRIORITYR2 (rw): GICD interrupt priority register 2
0xA0021408 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021408 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021408 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021408 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002140C B  REGISTER GICD_IPRIORITYR3 (rw): GICD interrupt priority register 3
0xA002140C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002140C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002140C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002140C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021410 B  REGISTER GICD_IPRIORITYR4 (rw): GICD interrupt priority register 4
0xA0021410 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021410 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021410 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021410 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021414 B  REGISTER GICD_IPRIORITYR5 (rw): GICD interrupt priority register 5
0xA0021414 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021414 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021414 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021414 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021418 B  REGISTER GICD_IPRIORITYR6 (rw): GICD interrupt priority register 6
0xA0021418 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021418 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021418 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021418 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002141C B  REGISTER GICD_IPRIORITYR7 (rw): GICD interrupt priority register 7
0xA002141C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002141C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002141C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002141C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021420 B  REGISTER GICD_IPRIORITYR8 (rw): GICD interrupt priority register 8
0xA0021420 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021420 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021420 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021420 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021424 B  REGISTER GICD_IPRIORITYR9 (rw): GICD interrupt priority register 9
0xA0021424 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021424 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021424 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021424 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021428 B  REGISTER GICD_IPRIORITYR10 (rw): GICD interrupt priority register 10
0xA0021428 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021428 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021428 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021428 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002142C B  REGISTER GICD_IPRIORITYR11 (rw): GICD interrupt priority register 11
0xA002142C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002142C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002142C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002142C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021430 B  REGISTER GICD_IPRIORITYR12 (rw): GICD interrupt priority register 12
0xA0021430 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021430 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021430 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021430 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021434 B  REGISTER GICD_IPRIORITYR13 (rw): GICD interrupt priority register 13
0xA0021434 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021434 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021434 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021434 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021438 B  REGISTER GICD_IPRIORITYR14 (rw): GICD interrupt priority register 14
0xA0021438 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021438 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021438 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021438 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002143C B  REGISTER GICD_IPRIORITYR15 (rw): GICD interrupt priority register 15
0xA002143C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002143C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002143C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002143C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021440 B  REGISTER GICD_IPRIORITYR16 (rw): GICD interrupt priority register 16
0xA0021440 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021440 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021440 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021440 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021444 B  REGISTER GICD_IPRIORITYR17 (rw): GICD interrupt priority register 17
0xA0021444 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021444 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021444 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021444 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021448 B  REGISTER GICD_IPRIORITYR18 (rw): GICD interrupt priority register 18
0xA0021448 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021448 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021448 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021448 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002144C B  REGISTER GICD_IPRIORITYR19 (rw): GICD interrupt priority register 19
0xA002144C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002144C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002144C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002144C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021450 B  REGISTER GICD_IPRIORITYR20 (rw): GICD interrupt priority register 20
0xA0021450 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021450 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021450 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021450 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021454 B  REGISTER GICD_IPRIORITYR21 (rw): GICD interrupt priority register 21
0xA0021454 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021454 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021454 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021454 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021458 B  REGISTER GICD_IPRIORITYR22 (rw): GICD interrupt priority register 22
0xA0021458 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021458 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021458 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021458 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002145C B  REGISTER GICD_IPRIORITYR23 (rw): GICD interrupt priority register 23
0xA002145C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002145C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002145C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002145C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021460 B  REGISTER GICD_IPRIORITYR24 (rw): GICD interrupt priority register 24
0xA0021460 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021460 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021460 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021460 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021464 B  REGISTER GICD_IPRIORITYR25 (rw): GICD interrupt priority register 25
0xA0021464 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021464 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021464 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021464 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021468 B  REGISTER GICD_IPRIORITYR26 (rw): GICD interrupt priority register 26
0xA0021468 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021468 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021468 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021468 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002146C B  REGISTER GICD_IPRIORITYR27 (rw): GICD interrupt priority register 27
0xA002146C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002146C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002146C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002146C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021470 B  REGISTER GICD_IPRIORITYR28 (rw): GICD interrupt priority register 28
0xA0021470 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021470 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021470 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021470 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021474 B  REGISTER GICD_IPRIORITYR29 (rw): GICD interrupt priority register 29
0xA0021474 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021474 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021474 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021474 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021478 B  REGISTER GICD_IPRIORITYR30 (rw): GICD interrupt priority register 30
0xA0021478 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021478 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021478 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021478 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002147C B  REGISTER GICD_IPRIORITYR31 (rw): GICD interrupt priority register 31
0xA002147C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002147C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002147C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002147C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021480 B  REGISTER GICD_IPRIORITYR32 (rw): GICD interrupt priority register 32
0xA0021480 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021480 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021480 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021480 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021484 B  REGISTER GICD_IPRIORITYR33 (rw): GICD interrupt priority register 33
0xA0021484 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021484 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021484 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021484 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021488 B  REGISTER GICD_IPRIORITYR34 (rw): GICD interrupt priority register 34
0xA0021488 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021488 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021488 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021488 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002148C B  REGISTER GICD_IPRIORITYR35 (rw): GICD interrupt priority register 35
0xA002148C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002148C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002148C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002148C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021490 B  REGISTER GICD_IPRIORITYR36 (rw): GICD interrupt priority register 36
0xA0021490 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021490 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021490 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021490 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021494 B  REGISTER GICD_IPRIORITYR37 (rw): GICD interrupt priority register 37
0xA0021494 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021494 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021494 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021494 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021498 B  REGISTER GICD_IPRIORITYR38 (rw): GICD interrupt priority register 38
0xA0021498 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021498 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021498 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021498 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002149C B  REGISTER GICD_IPRIORITYR39 (rw): GICD interrupt priority register 39
0xA002149C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002149C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002149C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002149C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214A0 B  REGISTER GICD_IPRIORITYR40 (rw): GICD interrupt priority register 40
0xA00214A0 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214A0 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214A0 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214A0 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214A4 B  REGISTER GICD_IPRIORITYR41 (rw): GICD interrupt priority register 41
0xA00214A4 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214A4 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214A4 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214A4 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214A8 B  REGISTER GICD_IPRIORITYR42 (rw): GICD interrupt priority register 42
0xA00214A8 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214A8 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214A8 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214A8 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214AC B  REGISTER GICD_IPRIORITYR43 (rw): GICD interrupt priority register 43
0xA00214AC C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214AC C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214AC C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214AC C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214B0 B  REGISTER GICD_IPRIORITYR44 (rw): GICD interrupt priority register 44
0xA00214B0 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214B0 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214B0 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214B0 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214B4 B  REGISTER GICD_IPRIORITYR45 (rw): GICD interrupt priority register 45
0xA00214B4 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214B4 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214B4 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214B4 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214B8 B  REGISTER GICD_IPRIORITYR46 (rw): GICD interrupt priority register 46
0xA00214B8 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214B8 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214B8 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214B8 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214BC B  REGISTER GICD_IPRIORITYR47 (rw): GICD interrupt priority register 47
0xA00214BC C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214BC C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214BC C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214BC C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214C0 B  REGISTER GICD_IPRIORITYR48 (rw): GICD interrupt priority register 48
0xA00214C0 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214C0 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214C0 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214C0 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214C4 B  REGISTER GICD_IPRIORITYR49 (rw): GICD interrupt priority register 49
0xA00214C4 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214C4 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214C4 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214C4 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214C8 B  REGISTER GICD_IPRIORITYR50 (rw): GICD interrupt priority register 50
0xA00214C8 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214C8 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214C8 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214C8 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214CC B  REGISTER GICD_IPRIORITYR51 (rw): GICD interrupt priority register 51
0xA00214CC C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214CC C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214CC C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214CC C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214D0 B  REGISTER GICD_IPRIORITYR52 (rw): GICD interrupt priority register 52
0xA00214D0 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214D0 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214D0 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214D0 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214D4 B  REGISTER GICD_IPRIORITYR53 (rw): GICD interrupt priority register 53
0xA00214D4 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214D4 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214D4 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214D4 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214D8 B  REGISTER GICD_IPRIORITYR54 (rw): GICD interrupt priority register 54
0xA00214D8 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214D8 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214D8 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214D8 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214DC B  REGISTER GICD_IPRIORITYR55 (rw): GICD interrupt priority register 55
0xA00214DC C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214DC C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214DC C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214DC C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214E0 B  REGISTER GICD_IPRIORITYR56 (rw): GICD interrupt priority register 56
0xA00214E0 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214E0 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214E0 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214E0 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214E4 B  REGISTER GICD_IPRIORITYR57 (rw): GICD interrupt priority register 57
0xA00214E4 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214E4 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214E4 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214E4 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214E8 B  REGISTER GICD_IPRIORITYR58 (rw): GICD interrupt priority register 58
0xA00214E8 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214E8 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214E8 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214E8 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214EC B  REGISTER GICD_IPRIORITYR59 (rw): GICD interrupt priority register 59
0xA00214EC C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214EC C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214EC C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214EC C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214F0 B  REGISTER GICD_IPRIORITYR60 (rw): GICD interrupt priority register 60
0xA00214F0 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214F0 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214F0 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214F0 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214F4 B  REGISTER GICD_IPRIORITYR61 (rw): GICD interrupt priority register 61
0xA00214F4 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214F4 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214F4 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214F4 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214F8 B  REGISTER GICD_IPRIORITYR62 (rw): GICD interrupt priority register 62
0xA00214F8 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214F8 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214F8 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214F8 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA00214FC B  REGISTER GICD_IPRIORITYR63 (rw): GICD interrupt priority register 63
0xA00214FC C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA00214FC C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA00214FC C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA00214FC C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021500 B  REGISTER GICD_IPRIORITYR64 (rw): GICD interrupt priority register 64
0xA0021500 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021500 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021500 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021500 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021504 B  REGISTER GICD_IPRIORITYR65 (rw): GICD interrupt priority register 65
0xA0021504 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021504 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021504 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021504 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021508 B  REGISTER GICD_IPRIORITYR66 (rw): GICD interrupt priority register 66
0xA0021508 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021508 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021508 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021508 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002150C B  REGISTER GICD_IPRIORITYR67 (rw): GICD interrupt priority register 67
0xA002150C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002150C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002150C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002150C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021510 B  REGISTER GICD_IPRIORITYR68 (rw): GICD interrupt priority register 68
0xA0021510 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021510 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021510 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021510 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021514 B  REGISTER GICD_IPRIORITYR69 (rw): GICD interrupt priority register 69
0xA0021514 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021514 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021514 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021514 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021518 B  REGISTER GICD_IPRIORITYR70 (rw): GICD interrupt priority register 70
0xA0021518 C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA0021518 C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA0021518 C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA0021518 C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA002151C B  REGISTER GICD_IPRIORITYR71 (rw): GICD interrupt priority register 71
0xA002151C C   FIELD 03w05 PRIORITY0: PRIORITY0
0xA002151C C   FIELD 11w05 PRIORITY1: PRIORITY1
0xA002151C C   FIELD 19w05 PRIORITY2: PRIORITY2
0xA002151C C   FIELD 27w05 PRIORITY3: PRIORITY3
0xA0021800 B  REGISTER GICD_ITARGETSR0 (ro): For existing SGIs and PPIs, read of CPU targets field returns the number of the processor performing the read.
0xA0021800 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021800 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021800 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021800 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021804 B  REGISTER GICD_ITARGETSR1 (ro): For existing SGIs and PPIs, read of CPU targets field returns the number of the processor performing the read.
0xA0021804 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021804 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021804 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021804 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021808 B  REGISTER GICD_ITARGETSR2 (ro): For existing SGIs and PPIs, read of CPU targets field returns the number of the processor performing the read.
0xA0021808 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021808 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021808 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021808 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002180C B  REGISTER GICD_ITARGETSR3 (ro): For existing SGIs and PPIs, read of CPU targets field returns the number of the processor performing the read.
0xA002180C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002180C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002180C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002180C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021810 B  REGISTER GICD_ITARGETSR4 (ro): For existing SGIs and PPIs, read of CPU targets field returns the number of the processor performing the read.
0xA0021810 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021810 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021810 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021810 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021814 B  REGISTER GICD_ITARGETSR5 (ro): For existing SGIs and PPIs, read of CPU targets field returns the number of the processor performing the read.
0xA0021814 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021814 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021814 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021814 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021818 B  REGISTER GICD_ITARGETSR6 (ro): For existing SGIs and PPIs, read of CPU targets field returns the number of the processor performing the read.
0xA0021818 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021818 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021818 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021818 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002181C B  REGISTER GICD_ITARGETSR7 (ro): For existing SGIs and PPIs, read of CPU targets field returns the number of the processor performing the read.
0xA002181C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002181C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002181C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002181C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021820 B  REGISTER GICD_ITARGETSR8 (rw): GICD interrupt processor target register 8
0xA0021820 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021820 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021820 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021820 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021824 B  REGISTER GICD_ITARGETSR9 (rw): GICD interrupt processor target register 9
0xA0021824 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021824 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021824 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021824 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021828 B  REGISTER GICD_ITARGETSR10 (rw): GICD interrupt processor target register 10
0xA0021828 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021828 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021828 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021828 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002182C B  REGISTER GICD_ITARGETSR11 (rw): GICD interrupt processor target register 11
0xA002182C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002182C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002182C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002182C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021830 B  REGISTER GICD_ITARGETSR12 (rw): GICD interrupt processor target register 12
0xA0021830 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021830 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021830 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021830 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021834 B  REGISTER GICD_ITARGETSR13 (rw): GICD interrupt processor target register 13
0xA0021834 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021834 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021834 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021834 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021838 B  REGISTER GICD_ITARGETSR14 (rw): GICD interrupt processor target register 14
0xA0021838 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021838 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021838 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021838 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002183C B  REGISTER GICD_ITARGETSR15 (rw): GICD interrupt processor target register 15
0xA002183C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002183C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002183C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002183C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021840 B  REGISTER GICD_ITARGETSR16 (rw): GICD interrupt processor target register 16
0xA0021840 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021840 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021840 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021840 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021844 B  REGISTER GICD_ITARGETSR17 (rw): GICD interrupt processor target register 17
0xA0021844 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021844 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021844 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021844 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021848 B  REGISTER GICD_ITARGETSR18 (rw): GICD interrupt processor target register 18
0xA0021848 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021848 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021848 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021848 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002184C B  REGISTER GICD_ITARGETSR19 (rw): GICD interrupt processor target register 19
0xA002184C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002184C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002184C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002184C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021850 B  REGISTER GICD_ITARGETSR20 (rw): GICD interrupt processor target register 20
0xA0021850 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021850 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021850 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021850 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021854 B  REGISTER GICD_ITARGETSR21 (rw): GICD interrupt processor target register 21
0xA0021854 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021854 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021854 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021854 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021858 B  REGISTER GICD_ITARGETSR22 (rw): GICD interrupt processor target register 22
0xA0021858 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021858 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021858 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021858 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002185C B  REGISTER GICD_ITARGETSR23 (rw): GICD interrupt processor target register 23
0xA002185C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002185C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002185C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002185C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021860 B  REGISTER GICD_ITARGETSR24 (rw): GICD interrupt processor target register 24
0xA0021860 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021860 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021860 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021860 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021864 B  REGISTER GICD_ITARGETSR25 (rw): GICD interrupt processor target register 25
0xA0021864 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021864 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021864 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021864 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021868 B  REGISTER GICD_ITARGETSR26 (rw): GICD interrupt processor target register 26
0xA0021868 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021868 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021868 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021868 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002186C B  REGISTER GICD_ITARGETSR27 (rw): GICD interrupt processor target register 27
0xA002186C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002186C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002186C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002186C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021870 B  REGISTER GICD_ITARGETSR28 (rw): GICD interrupt processor target register 28
0xA0021870 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021870 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021870 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021870 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021874 B  REGISTER GICD_ITARGETSR29 (rw): GICD interrupt processor target register 29
0xA0021874 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021874 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021874 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021874 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021878 B  REGISTER GICD_ITARGETSR30 (rw): GICD interrupt processor target register 30
0xA0021878 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021878 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021878 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021878 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002187C B  REGISTER GICD_ITARGETSR31 (rw): GICD interrupt processor target register 31
0xA002187C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002187C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002187C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002187C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021880 B  REGISTER GICD_ITARGETSR32 (rw): GICD interrupt processor target register 32
0xA0021880 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021880 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021880 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021880 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021884 B  REGISTER GICD_ITARGETSR33 (rw): GICD interrupt processor target register 33
0xA0021884 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021884 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021884 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021884 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021888 B  REGISTER GICD_ITARGETSR34 (rw): GICD interrupt processor target register 34
0xA0021888 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021888 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021888 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021888 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002188C B  REGISTER GICD_ITARGETSR35 (rw): GICD interrupt processor target register 35
0xA002188C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002188C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002188C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002188C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021890 B  REGISTER GICD_ITARGETSR36 (rw): GICD interrupt processor target register 36
0xA0021890 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021890 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021890 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021890 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021894 B  REGISTER GICD_ITARGETSR37 (rw): GICD interrupt processor target register 37
0xA0021894 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021894 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021894 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021894 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021898 B  REGISTER GICD_ITARGETSR38 (rw): GICD interrupt processor target register 38
0xA0021898 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021898 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021898 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021898 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002189C B  REGISTER GICD_ITARGETSR39 (rw): GICD interrupt processor target register 39
0xA002189C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002189C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002189C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002189C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218A0 B  REGISTER GICD_ITARGETSR40 (rw): GICD interrupt processor target register 40
0xA00218A0 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218A0 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218A0 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218A0 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218A4 B  REGISTER GICD_ITARGETSR41 (rw): GICD interrupt processor target register 41
0xA00218A4 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218A4 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218A4 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218A4 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218A8 B  REGISTER GICD_ITARGETSR42 (rw): GICD interrupt processor target register 42
0xA00218A8 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218A8 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218A8 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218A8 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218AC B  REGISTER GICD_ITARGETSR43 (rw): GICD interrupt processor target register 43
0xA00218AC C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218AC C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218AC C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218AC C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218B0 B  REGISTER GICD_ITARGETSR44 (rw): GICD interrupt processor target register 44
0xA00218B0 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218B0 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218B0 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218B0 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218B4 B  REGISTER GICD_ITARGETSR45 (rw): GICD interrupt processor target register 45
0xA00218B4 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218B4 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218B4 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218B4 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218B8 B  REGISTER GICD_ITARGETSR46 (rw): GICD interrupt processor target register 46
0xA00218B8 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218B8 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218B8 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218B8 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218BC B  REGISTER GICD_ITARGETSR47 (rw): GICD interrupt processor target register 47
0xA00218BC C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218BC C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218BC C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218BC C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218C0 B  REGISTER GICD_ITARGETSR48 (rw): GICD interrupt processor target register 48
0xA00218C0 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218C0 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218C0 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218C0 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218C4 B  REGISTER GICD_ITARGETSR49 (rw): GICD interrupt processor target register 49
0xA00218C4 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218C4 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218C4 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218C4 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218C8 B  REGISTER GICD_ITARGETSR50 (rw): GICD interrupt processor target register 50
0xA00218C8 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218C8 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218C8 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218C8 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218CC B  REGISTER GICD_ITARGETSR51 (rw): GICD interrupt processor target register 51
0xA00218CC C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218CC C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218CC C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218CC C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218D0 B  REGISTER GICD_ITARGETSR52 (rw): GICD interrupt processor target register 52
0xA00218D0 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218D0 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218D0 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218D0 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218D4 B  REGISTER GICD_ITARGETSR53 (rw): GICD interrupt processor target register 53
0xA00218D4 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218D4 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218D4 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218D4 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218D8 B  REGISTER GICD_ITARGETSR54 (rw): GICD interrupt processor target register 54
0xA00218D8 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218D8 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218D8 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218D8 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218DC B  REGISTER GICD_ITARGETSR55 (rw): GICD interrupt processor target register 55
0xA00218DC C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218DC C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218DC C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218DC C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218E0 B  REGISTER GICD_ITARGETSR56 (rw): GICD interrupt processor target register 56
0xA00218E0 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218E0 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218E0 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218E0 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218E4 B  REGISTER GICD_ITARGETSR57 (rw): GICD interrupt processor target register 57
0xA00218E4 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218E4 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218E4 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218E4 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218E8 B  REGISTER GICD_ITARGETSR58 (rw): GICD interrupt processor target register 58
0xA00218E8 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218E8 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218E8 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218E8 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218EC B  REGISTER GICD_ITARGETSR59 (rw): GICD interrupt processor target register 59
0xA00218EC C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218EC C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218EC C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218EC C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218F0 B  REGISTER GICD_ITARGETSR60 (rw): GICD interrupt processor target register 60
0xA00218F0 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218F0 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218F0 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218F0 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218F4 B  REGISTER GICD_ITARGETSR61 (rw): GICD interrupt processor target register 61
0xA00218F4 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218F4 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218F4 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218F4 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218F8 B  REGISTER GICD_ITARGETSR62 (rw): GICD interrupt processor target register 62
0xA00218F8 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218F8 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218F8 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218F8 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA00218FC B  REGISTER GICD_ITARGETSR63 (rw): GICD interrupt processor target register 63
0xA00218FC C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA00218FC C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA00218FC C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA00218FC C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021900 B  REGISTER GICD_ITARGETSR64 (rw): GICD interrupt processor target register 64
0xA0021900 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021900 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021900 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021900 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021904 B  REGISTER GICD_ITARGETSR65 (rw): GICD interrupt processor target register 65
0xA0021904 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021904 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021904 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021904 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021908 B  REGISTER GICD_ITARGETSR66 (rw): GICD interrupt processor target register 66
0xA0021908 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021908 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021908 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021908 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002190C B  REGISTER GICD_ITARGETSR67 (rw): GICD interrupt processor target register 67
0xA002190C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002190C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002190C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002190C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021910 B  REGISTER GICD_ITARGETSR68 (rw): GICD interrupt processor target register 68
0xA0021910 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021910 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021910 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021910 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021914 B  REGISTER GICD_ITARGETSR69 (rw): GICD interrupt processor target register 69
0xA0021914 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021914 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021914 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021914 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021918 B  REGISTER GICD_ITARGETSR70 (rw): GICD interrupt processor target register 70
0xA0021918 C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA0021918 C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA0021918 C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA0021918 C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA002191C B  REGISTER GICD_ITARGETSR71 (rw): GICD interrupt processor target register 71
0xA002191C C   FIELD 00w02 CPU_TARGETS0: CPU_TARGETS0
0xA002191C C   FIELD 08w02 CPU_TARGETS1: CPU_TARGETS1
0xA002191C C   FIELD 16w02 CPU_TARGETS2: CPU_TARGETS2
0xA002191C C   FIELD 24w02 CPU_TARGETS3: CPU_TARGETS3
0xA0021C00 B  REGISTER GICD_ICFGR0 (rw): GICD interrupt configuration register
0xA0021C00 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C00 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C00 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C00 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C00 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C00 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C00 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C00 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C00 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C00 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C00 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C00 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C00 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C00 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C00 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C00 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C04 B  REGISTER GICD_ICFGR1 (rw): GICD interrupt configuration register
0xA0021C04 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C04 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C04 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C04 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C04 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C04 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C04 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C04 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C04 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C04 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C04 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C04 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C04 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C04 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C04 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C04 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C08 B  REGISTER GICD_ICFGR2 (rw): GICD interrupt configuration register 2
0xA0021C08 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C08 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C08 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C08 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C08 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C08 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C08 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C08 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C08 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C08 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C08 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C08 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C08 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C08 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C08 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C08 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C0C B  REGISTER GICD_ICFGR3 (rw): GICD interrupt configuration register 3
0xA0021C0C C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C0C C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C0C C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C0C C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C0C C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C0C C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C0C C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C0C C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C0C C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C0C C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C0C C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C0C C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C0C C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C0C C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C0C C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C0C C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C10 B  REGISTER GICD_ICFGR4 (rw): GICD interrupt configuration register 4
0xA0021C10 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C10 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C10 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C10 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C10 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C10 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C10 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C10 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C10 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C10 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C10 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C10 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C10 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C10 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C10 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C10 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C14 B  REGISTER GICD_ICFGR5 (rw): GICD interrupt configuration register 5
0xA0021C14 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C14 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C14 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C14 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C14 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C14 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C14 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C14 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C14 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C14 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C14 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C14 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C14 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C14 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C14 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C14 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C18 B  REGISTER GICD_ICFGR6 (rw): GICD interrupt configuration register 6
0xA0021C18 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C18 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C18 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C18 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C18 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C18 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C18 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C18 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C18 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C18 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C18 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C18 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C18 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C18 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C18 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C18 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C1C B  REGISTER GICD_ICFGR7 (rw): GICD interrupt configuration register 7
0xA0021C1C C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C1C C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C1C C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C1C C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C1C C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C1C C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C1C C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C1C C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C1C C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C1C C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C1C C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C1C C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C1C C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C1C C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C1C C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C1C C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C20 B  REGISTER GICD_ICFGR8 (rw): GICD interrupt configuration register 8
0xA0021C20 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C20 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C20 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C20 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C20 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C20 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C20 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C20 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C20 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C20 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C20 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C20 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C20 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C20 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C20 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C20 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C24 B  REGISTER GICD_ICFGR9 (rw): GICD interrupt configuration register 9
0xA0021C24 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C24 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C24 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C24 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C24 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C24 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C24 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C24 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C24 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C24 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C24 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C24 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C24 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C24 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C24 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C24 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C28 B  REGISTER GICD_ICFGR10 (rw): GICD interrupt configuration register 10
0xA0021C28 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C28 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C28 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C28 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C28 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C28 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C28 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C28 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C28 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C28 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C28 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C28 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C28 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C28 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C28 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C28 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C2C B  REGISTER GICD_ICFGR11 (rw): GICD interrupt configuration register 11
0xA0021C2C C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C2C C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C2C C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C2C C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C2C C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C2C C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C2C C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C2C C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C2C C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C2C C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C2C C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C2C C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C2C C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C2C C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C2C C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C2C C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C30 B  REGISTER GICD_ICFGR12 (rw): GICD interrupt configuration register 12
0xA0021C30 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C30 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C30 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C30 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C30 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C30 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C30 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C30 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C30 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C30 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C30 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C30 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C30 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C30 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C30 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C30 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C34 B  REGISTER GICD_ICFGR13 (rw): GICD interrupt configuration register 13
0xA0021C34 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C34 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C34 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C34 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C34 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C34 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C34 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C34 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C34 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C34 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C34 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C34 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C34 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C34 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C34 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C34 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C38 B  REGISTER GICD_ICFGR14 (rw): GICD interrupt configuration register 14
0xA0021C38 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C38 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C38 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C38 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C38 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C38 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C38 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C38 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C38 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C38 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C38 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C38 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C38 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C38 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C38 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C38 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C3C B  REGISTER GICD_ICFGR15 (rw): GICD interrupt configuration register 15
0xA0021C3C C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C3C C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C3C C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C3C C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C3C C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C3C C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C3C C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C3C C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C3C C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C3C C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C3C C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C3C C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C3C C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C3C C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C3C C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C3C C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C40 B  REGISTER GICD_ICFGR16 (rw): GICD interrupt configuration register 16
0xA0021C40 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C40 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C40 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C40 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C40 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C40 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C40 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C40 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C40 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C40 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C40 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C40 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C40 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C40 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C40 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C40 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021C44 B  REGISTER GICD_ICFGR17 (rw): GICD interrupt configuration register 17
0xA0021C44 C   FIELD 00w02 INT_CONFIG0: INT_CONFIG0
0xA0021C44 C   FIELD 02w02 INT_CONFIG1: INT_CONFIG1
0xA0021C44 C   FIELD 04w02 INT_CONFIG2: INT_CONFIG2
0xA0021C44 C   FIELD 06w02 INT_CONFIG3: INT_CONFIG3
0xA0021C44 C   FIELD 08w02 INT_CONFIG4: INT_CONFIG4
0xA0021C44 C   FIELD 10w02 INT_CONFIG5: INT_CONFIG5
0xA0021C44 C   FIELD 12w02 INT_CONFIG6: INT_CONFIG6
0xA0021C44 C   FIELD 14w02 INT_CONFIG7: INT_CONFIG7
0xA0021C44 C   FIELD 16w02 INT_CONFIG8: INT_CONFIG8
0xA0021C44 C   FIELD 18w02 INT_CONFIG9: INT_CONFIG9
0xA0021C44 C   FIELD 20w02 INT_CONFIG10: INT_CONFIG10
0xA0021C44 C   FIELD 22w02 INT_CONFIG11: INT_CONFIG11
0xA0021C44 C   FIELD 24w02 INT_CONFIG12: INT_CONFIG12
0xA0021C44 C   FIELD 26w02 INT_CONFIG13: INT_CONFIG13
0xA0021C44 C   FIELD 28w02 INT_CONFIG14: INT_CONFIG14
0xA0021C44 C   FIELD 30w02 INT_CONFIG15: INT_CONFIG15
0xA0021D00 B  REGISTER GICD_PPISR (ro): GICD private peripheral interrupt status register
0xA0021D00 C   FIELD 09w01 PPI6: PPI6
0xA0021D00 C   FIELD 10w01 PPI5: PPI5
0xA0021D00 C   FIELD 11w01 PPI4: PPI4
0xA0021D00 C   FIELD 12w01 PPI0: PPI0
0xA0021D00 C   FIELD 13w01 PPI1: PPI1
0xA0021D00 C   FIELD 14w01 PPI2: PPI2
0xA0021D00 C   FIELD 15w01 PPI3: PPI3
0xA0021D08 B  REGISTER GICD_SPISR1 (ro): For interrupts ID = SPI number+32, from SPI [x*32+31] to SPI [x*32]
0xA0021D08 C   FIELD 00w32 SPISR1: SPISR1
0xA0021D0C B  REGISTER GICD_SPISR2 (ro): For interrupts ID
0xA0021D0C C   FIELD 00w32 SPISR2: SPISR2
0xA0021D10 B  REGISTER GICD_SPISR3 (ro): For interrupts ID
0xA0021D10 C   FIELD 00w32 SPISR3: SPISR3
0xA0021D14 B  REGISTER GICD_SPISR4 (ro): For interrupts ID
0xA0021D14 C   FIELD 00w32 SPISR4: SPISR4
0xA0021D18 B  REGISTER GICD_SPISR5 (ro): For interrupts ID
0xA0021D18 C   FIELD 00w32 SPISR5: SPISR5
0xA0021D1C B  REGISTER GICD_SPISR6 (ro): For interrupts ID
0xA0021D1C C   FIELD 00w32 SPISR6: SPISR6
0xA0021D20 B  REGISTER GICD_SPISR7 (ro): For interrupts ID
0xA0021D20 C   FIELD 00w32 SPISR7: SPISR7
0xA0021F00 B  REGISTER GICD_SGIR (wo): GICD software generated interrupt register
0xA0021F00 C   FIELD 00w04 SGIINTID: SGIINTID
0xA0021F00 C   FIELD 15w01 NSATT: NSATT
0xA0021F00 C   FIELD 16w02 CPUTARGETLIST: CPUTARGETLIST
0xA0021F00 C   FIELD 24w02 TARGETLISTFILTER: TARGETLISTFILTER
0xA0021F10 B  REGISTER GICD_CPENDSGIR0 (rw): For SGI x*4 to SGI x*4+3
0xA0021F10 C   FIELD 00w02 SGI_CLEAR_PENDING0: SGI_CLEAR_PENDING0
0xA0021F10 C   FIELD 08w02 SGI_CLEAR_PENDING1: SGI_CLEAR_PENDING1
0xA0021F10 C   FIELD 16w02 SGI_CLEAR_PENDING2: SGI_CLEAR_PENDING2
0xA0021F10 C   FIELD 24w02 SGI_CLEAR_PENDING3: SGI_CLEAR_PENDING3
0xA0021F14 B  REGISTER GICD_CPENDSGIR1 (rw): For SGI x*4 to SGI x*4+3
0xA0021F14 C   FIELD 00w02 SGI_CLEAR_PENDING0: SGI_CLEAR_PENDING0
0xA0021F14 C   FIELD 08w02 SGI_CLEAR_PENDING1: SGI_CLEAR_PENDING1
0xA0021F14 C   FIELD 16w02 SGI_CLEAR_PENDING2: SGI_CLEAR_PENDING2
0xA0021F14 C   FIELD 24w02 SGI_CLEAR_PENDING3: SGI_CLEAR_PENDING3
0xA0021F18 B  REGISTER GICD_CPENDSGIR2 (rw): For SGI x*4 to SGI x*4+3
0xA0021F18 C   FIELD 00w02 SGI_CLEAR_PENDING0: SGI_CLEAR_PENDING0
0xA0021F18 C   FIELD 08w02 SGI_CLEAR_PENDING1: SGI_CLEAR_PENDING1
0xA0021F18 C   FIELD 16w02 SGI_CLEAR_PENDING2: SGI_CLEAR_PENDING2
0xA0021F18 C   FIELD 24w02 SGI_CLEAR_PENDING3: SGI_CLEAR_PENDING3
0xA0021F1C B  REGISTER GICD_CPENDSGIR3 (rw): For SGI x*4 to SGI x*4+3
0xA0021F1C C   FIELD 00w02 SGI_CLEAR_PENDING0: SGI_CLEAR_PENDING0
0xA0021F1C C   FIELD 08w02 SGI_CLEAR_PENDING1: SGI_CLEAR_PENDING1
0xA0021F1C C   FIELD 16w02 SGI_CLEAR_PENDING2: SGI_CLEAR_PENDING2
0xA0021F1C C   FIELD 24w02 SGI_CLEAR_PENDING3: SGI_CLEAR_PENDING3
0xA0021F20 B  REGISTER GICD_SPENDSGIR0 (rw): For SGI x*4 to SGI x*4+3
0xA0021F20 C   FIELD 00w02 SGI_SET_PENDING0: SGI_SET_PENDING0
0xA0021F20 C   FIELD 08w02 SGI_SET_PENDING1: SGI_SET_PENDING1
0xA0021F20 C   FIELD 16w02 SGI_SET_PENDING2: SGI_SET_PENDING2
0xA0021F20 C   FIELD 24w02 SGI_SET_PENDING3: SGI_SET_PENDING3
0xA0021F24 B  REGISTER GICD_SPENDSGIR1 (rw): For SGI x*4 to SGI x*4+3
0xA0021F24 C   FIELD 00w02 SGI_SET_PENDING0: SGI_SET_PENDING0
0xA0021F24 C   FIELD 08w02 SGI_SET_PENDING1: SGI_SET_PENDING1
0xA0021F24 C   FIELD 16w02 SGI_SET_PENDING2: SGI_SET_PENDING2
0xA0021F24 C   FIELD 24w02 SGI_SET_PENDING3: SGI_SET_PENDING3
0xA0021F28 B  REGISTER GICD_SPENDSGIR2 (rw): For SGI x*4 to SGI x*4+3
0xA0021F28 C   FIELD 00w02 SGI_SET_PENDING0: SGI_SET_PENDING0
0xA0021F28 C   FIELD 08w02 SGI_SET_PENDING1: SGI_SET_PENDING1
0xA0021F28 C   FIELD 16w02 SGI_SET_PENDING2: SGI_SET_PENDING2
0xA0021F28 C   FIELD 24w02 SGI_SET_PENDING3: SGI_SET_PENDING3
0xA0021F2C B  REGISTER GICD_SPENDSGIR3 (rw): For SGI x*4 to SGI x*4+3
0xA0021F2C C   FIELD 00w02 SGI_SET_PENDING0: SGI_SET_PENDING0
0xA0021F2C C   FIELD 08w02 SGI_SET_PENDING1: SGI_SET_PENDING1
0xA0021F2C C   FIELD 16w02 SGI_SET_PENDING2: SGI_SET_PENDING2
0xA0021F2C C   FIELD 24w02 SGI_SET_PENDING3: SGI_SET_PENDING3
0xA0021FD0 B  REGISTER GICD_PIDR4 (ro): GICD peripheral ID4 register
0xA0021FD0 C   FIELD 00w32 PIDR4: PIDR4
0xA0021FD4 B  REGISTER GICD_PIDR5 (ro): GICD peripheral ID5 to ID7 register 5
0xA0021FD4 C   FIELD 00w32 PIDR5: PIDR5
0xA0021FD8 B  REGISTER GICD_PIDR6 (ro): GICD peripheral ID5 to ID7 register 6
0xA0021FD8 C   FIELD 00w32 PIDR6: PIDR6
0xA0021FDC B  REGISTER GICD_PIDR7 (ro): GICD peripheral ID5 to ID7 register 7
0xA0021FDC C   FIELD 00w32 PIDR7: PIDR7
0xA0021FE0 B  REGISTER GICD_PIDR0 (ro): GICD peripheral ID0 register
0xA0021FE0 C   FIELD 00w32 PIDR0: PIDR0
0xA0021FE4 B  REGISTER GICD_PIDR1 (ro): GICD peripheral ID1 register
0xA0021FE4 C   FIELD 00w32 PIDR1: PIDR1
0xA0021FE8 B  REGISTER GICD_PIDR2 (ro): GICD peripheral ID2 register
0xA0021FE8 C   FIELD 00w32 PIDR2: PIDR2
0xA0021FEC B  REGISTER GICD_PIDR3 (ro): GICD peripheral ID3 register
0xA0021FEC C   FIELD 00w32 PIDR3: PIDR3
0xA0021FF0 B  REGISTER GICD_CIDR0 (ro): GICD component ID0 register
0xA0021FF0 C   FIELD 00w32 CIDR0: CIDR0
0xA0021FF4 B  REGISTER GICD_CIDR1 (ro): GICD component ID1 register
0xA0021FF4 C   FIELD 00w32 CIDR1: CIDR1
0xA0021FF8 B  REGISTER GICD_CIDR2 (ro): GICD component ID2 register
0xA0021FF8 C   FIELD 00w32 CIDR2: CIDR2
0xA0021FFC B  REGISTER GICD_CIDR3 (ro): GICD component ID3 register
0xA0021FFC C   FIELD 00w32 CIDR3: CIDR3
0xA0022000 A PERIPHERAL GICC
0xA0022000 B  REGISTER GICC_CTLR (rw): GICC control register
0xA0022000 C   FIELD 00w01 ENABLEGRP0: ENABLEGRP0
0xA0022000 C   FIELD 01w01 ENABLEGRP1: ENABLEGRP1
0xA0022000 C   FIELD 02w01 ACKCTL: ACKCTL
0xA0022000 C   FIELD 03w01 FIQEN: FIQEN
0xA0022000 C   FIELD 04w01 CBPR: CBPR
0xA0022000 C   FIELD 05w01 FIQBYPDISGRP0: FIQBYPDISGRP0
0xA0022000 C   FIELD 06w01 IRQBYPDISGRP0: IRQBYPDISGRP0
0xA0022000 C   FIELD 07w01 FIQBYPDISGRP1: FIQBYPDISGRP1
0xA0022000 C   FIELD 08w01 IRQBYPDISGRP1: IRQBYPDISGRP1
0xA0022000 C   FIELD 09w01 EOIMODES: EOIMODES
0xA0022000 C   FIELD 10w01 EOIMODENS: EOIMODENS
0xA0022004 B  REGISTER GICC_PMR (rw): GICC input priority mask register
0xA0022004 C   FIELD 03w05 PRIORITY: PRIORITY
0xA0022008 B  REGISTER GICC_BPR (rw): GICC binary point register
0xA0022008 C   FIELD 00w03 BINARY_POINT: BINARY_POINT
0xA002200C B  REGISTER GICC_IAR (ro): GICC interrupt acknowledge register
0xA002200C C   FIELD 00w10 INTERRUPT_ID: INTERRUPT_ID
0xA002200C C   FIELD 10w01 CPUID: CPUID
0xA0022010 B  REGISTER GICC_EOIR (wo): GICC end of interrupt register
0xA0022010 C   FIELD 00w10 EOIINTID: EOIINTID
0xA0022010 C   FIELD 10w01 CPUID: CPUID
0xA0022014 B  REGISTER GICC_RPR (ro): GICC running priority register
0xA0022014 C   FIELD 03w05 PRIORITY: PRIORITY
0xA0022018 B  REGISTER GICC_HPPIR (ro): GICC highest priority pending interrupt register
0xA0022018 C   FIELD 00w10 PENDINTID: PENDINTID
0xA0022018 C   FIELD 10w01 CPUID: CPUID
0xA002201C B  REGISTER GICC_ABPR (rw): GICC_ABPR is an alias of the non-secure GICC_BPR. When GICC_CTLR.CBPR is set to 0, a secure access to this register is equivalent to a non-secure access to GICC_BPR.
0xA002201C C   FIELD 00w03 BINARY_POINT: BINARY_POINT
0xA0022020 B  REGISTER GICC_AIAR (ro): GICC_AIAR is an alias of the non-secure view of GICC_IAR. A secure access to this register is identical to a non-secure access to GICC_IAR.
0xA0022020 C   FIELD 00w10 INTERRUPT_ID: INTERRUPT_ID
0xA0022020 C   FIELD 10w01 CPUID: CPUID
0xA0022024 B  REGISTER GICC_AEOIR (wo): GICC_AEOIR is an alias of the Non-secure GICC_EOIR. A secure access to this register is similar to a non-secure access to GICC_EOIR, except that the GICC_CTLR.EOImodeS bit is used.
0xA0022024 C   FIELD 00w10 EOIINTID: EOIINTID
0xA0022024 C   FIELD 10w01 CPUID: CPUID
0xA0022028 B  REGISTER GICC_AHPPIR (ro): ICC_AHPPIR is an alias of the non-secure GICC_HPPIR. A secure access to this register is equivalent to a non-secure access to GICC_HPPIR.
0xA0022028 C   FIELD 00w10 PENDINTID: PENDINTID
0xA0022028 C   FIELD 10w01 CPUID: CPUID
0xA00220D0 B  REGISTER GICC_APR0 (rw): GICC active priority register
0xA00220D0 C   FIELD 00w32 APR0: APR0
0xA00220E0 B  REGISTER GICC_NSAPR0 (rw): GICC non-secure active priority register
0xA00220E0 C   FIELD 00w32 NSAPR0: NSAPR0
0xA00220FC B  REGISTER GICC_IIDR (ro): GICC interface identification register
0xA00220FC C   FIELD 00w12 IMPLEMENTER: IMPLEMENTER
0xA00220FC C   FIELD 12w04 REVISION: REVISION
0xA00220FC C   FIELD 16w04 ARCH: ARCH
0xA00220FC C   FIELD 20w12 PRODUCTID: PRODUCTID
0xA0023000 B  REGISTER GICC_DIR (wo): GICC deactivate interrupt register
0xA0023000 C   FIELD 00w10 INTERRUPT_ID: INTERRUPT_ID
0xA0023000 C   FIELD 10w01 CPUID: CPUID
0xA0024000 A PERIPHERAL GICH
0xA0024000 B  REGISTER GICH_HCR (rw): GICH hypervisor control register
0xA0024000 C   FIELD 00w01 EN: EN
0xA0024000 C   FIELD 01w01 UIE: UIE
0xA0024000 C   FIELD 02w01 LRENPIE: LRENPIE
0xA0024000 C   FIELD 03w01 NPIE: NPIE
0xA0024000 C   FIELD 04w01 VGRP0EIE: VGRP0EIE
0xA0024000 C   FIELD 05w01 VGRP0DIE: VGRP0DIE
0xA0024000 C   FIELD 06w01 VGRP1EIE: VGRP1EIE
0xA0024000 C   FIELD 07w01 VGRP1DIE: VGRP1DIE
0xA0024000 C   FIELD 27w05 EOICOUNT: EOICOUNT
0xA0024004 B  REGISTER GICH_VTR (ro): GICH VGIC type register
0xA0024004 C   FIELD 00w05 LISTREGS: LISTREGS
0xA0024004 C   FIELD 26w03 PREBITS: PREBITS
0xA0024004 C   FIELD 29w03 PRIBITS: PRIBITS
0xA0024008 B  REGISTER GICH_VMCR (rw): GICH virtual machine control register
0xA0024008 C   FIELD 00w01 VMGRP0EN: VMGRP0EN
0xA0024008 C   FIELD 01w01 VMGRP1EN: VMGRP1EN
0xA0024008 C   FIELD 02w01 VMACKCTL: VMACKCTL
0xA0024008 C   FIELD 03w01 VMFIQEN: VMFIQEN
0xA0024008 C   FIELD 04w01 VMCBPR: VMCBPR
0xA0024008 C   FIELD 09w01 VEM: VEM
0xA0024008 C   FIELD 18w03 VMABP: VMABP
0xA0024008 C   FIELD 21w03 VMBP: VMBP
0xA0024008 C   FIELD 27w05 VMPRIMASK: VMPRIMASK
0xA0024010 B  REGISTER GICH_MISR (ro): GICH maintenance interrupt status register
0xA0024010 C   FIELD 00w01 EOI: EOI
0xA0024010 C   FIELD 01w01 U: U
0xA0024010 C   FIELD 02w01 LRENP: LRENP
0xA0024010 C   FIELD 03w01 NP: NP
0xA0024010 C   FIELD 04w01 VGRP0E: VGRP0E
0xA0024010 C   FIELD 05w01 VGRP0D: VGRP0D
0xA0024010 C   FIELD 06w01 VGRP1E: VGRP1E
0xA0024010 C   FIELD 07w01 VGRP1D: VGRP1D
0xA0024020 B  REGISTER GICH_EISR0 (ro): GICH end of interrupt status register
0xA0024020 C   FIELD 00w32 EISR0: EISR0
0xA0024030 B  REGISTER GICH_ELSR0 (ro): GICH empty list status register
0xA0024030 C   FIELD 00w32 ELSR0: ELSR0
0xA00240F0 B  REGISTER GICH_APR0 (rw): GICH active priority register
0xA00240F0 C   FIELD 00w32 APR0: APR0
0xA0024100 B  REGISTER GICH_LR0 (rw): GICH list register 0
0xA0024100 C   FIELD 00w10 VIRTUALID: VIRTUALID
0xA0024100 C   FIELD 10w10 PHYSICALID: PHYSICALID
0xA0024100 C   FIELD 23w05 PRIORITY: PRIORITY
0xA0024100 C   FIELD 28w02 STATE: STATE
0xA0024100 C   FIELD 30w01 GRP1: GRP1
0xA0024100 C   FIELD 31w01 HW: HW
0xA0024104 B  REGISTER GICH_LR1 (rw): GICH list register 1
0xA0024104 C   FIELD 00w10 VIRTUALID: VIRTUALID
0xA0024104 C   FIELD 10w10 PHYSICALID: PHYSICALID
0xA0024104 C   FIELD 23w05 PRIORITY: PRIORITY
0xA0024104 C   FIELD 28w02 STATE: STATE
0xA0024104 C   FIELD 30w01 GRP1: GRP1
0xA0024104 C   FIELD 31w01 HW: HW
0xA0024108 B  REGISTER GICH_LR2 (rw): GICH list register 2
0xA0024108 C   FIELD 00w10 VIRTUALID: VIRTUALID
0xA0024108 C   FIELD 10w10 PHYSICALID: PHYSICALID
0xA0024108 C   FIELD 23w05 PRIORITY: PRIORITY
0xA0024108 C   FIELD 28w02 STATE: STATE
0xA0024108 C   FIELD 30w01 GRP1: GRP1
0xA0024108 C   FIELD 31w01 HW: HW
0xA002410C B  REGISTER GICH_LR3 (rw): GICH list register 3
0xA002410C C   FIELD 00w10 VIRTUALID: VIRTUALID
0xA002410C C   FIELD 10w10 PHYSICALID: PHYSICALID
0xA002410C C   FIELD 23w05 PRIORITY: PRIORITY
0xA002410C C   FIELD 28w02 STATE: STATE
0xA002410C C   FIELD 30w01 GRP1: GRP1
0xA002410C C   FIELD 31w01 HW: HW
0xA0026000 A PERIPHERAL GICV
0xA0026000 B  REGISTER GICV_CTLR (rw): GICV virtual machine control register
0xA0026000 C   FIELD 00w01 ENABLEGRP0: ENABLEGRP0
0xA0026000 C   FIELD 01w01 ENABLEGRP1: ENABLEGRP1
0xA0026000 C   FIELD 02w01 ACKCTL: ACKCTL
0xA0026000 C   FIELD 03w01 FIQEN: FIQEN
0xA0026000 C   FIELD 04w01 CBPR: CBPR
0xA0026000 C   FIELD 09w01 EOIMODE: EOIMODE
0xA0026004 B  REGISTER GICV_PMR (rw): GICV VM priority mask register
0xA0026004 C   FIELD 03w05 PRIORITY: PRIORITY
0xA0026008 B  REGISTER GICV_BPR (rw): GICV VM binary point register
0xA0026008 C   FIELD 00w03 BINARY_POINT: BINARY_POINT
0xA002600C B  REGISTER GICV_IAR (ro): GICV VM interrupt acknowledge register
0xA002600C C   FIELD 00w10 INTERRUPT_ID: INTERRUPT_ID
0xA002600C C   FIELD 10w01 CPUID: CPUID
0xA0026010 B  REGISTER GICV_EOIR (wo): GICV VM end of interrupt register
0xA0026010 C   FIELD 00w10 EOIINTID: EOIINTID
0xA0026010 C   FIELD 10w01 CPUID: CPUID
0xA0026014 B  REGISTER GICV_RPR (ro): GICV VM running priority register
0xA0026014 C   FIELD 03w05 PRIORITY: PRIORITY
0xA0026018 B  REGISTER GICV_HPPIR (ro): GICV VM highest priority pending interrupt register
0xA0026018 C   FIELD 00w10 PENDINTID: PENDINTID
0xA0026018 C   FIELD 10w01 CPUID: CPUID
0xA002601C B  REGISTER GICV_ABPR (rw): GICV VM aliased binary point register
0xA002601C C   FIELD 00w03 BINARY_POINT: BINARY_POINT
0xA0026020 B  REGISTER GICV_AIAR (ro): GICV VM aliased interrupt register
0xA0026020 C   FIELD 00w10 INTERRUPT_ID: INTERRUPT_ID
0xA0026020 C   FIELD 10w01 CPUID: CPUID
0xA0026024 B  REGISTER GICV_AEOIR (wo): GICV VM aliased end of interrupt register
0xA0026024 C   FIELD 00w10 EOIINTID: EOIINTID
0xA0026024 C   FIELD 10w01 CPUID: CPUID
0xA0026028 B  REGISTER GICV_AHPPIR (ro): GICV VM aliased highest priority pending interrupt register
0xA0026028 C   FIELD 00w10 PENDINTID: PENDINTID
0xA0026028 C   FIELD 10w01 CPUID: CPUID
0xA00260D0 B  REGISTER GICV_APR0 (rw): The GICV_APR0 is an alias of GICH_APR.
0xA00260D0 C   FIELD 00w32 APR0: APR0
0xA00260FC B  REGISTER GICV_IIDR (ro): The GICV_IIDR is an alias of GICC_IIDR.
0xA00260FC C   FIELD 00w32 IIDR: IIDR
0xA0027000 B  REGISTER GICV_DIR (wo): GICV VM deactivate interrupt register
0xA0027000 C   FIELD 00w10 INTERRUPT_ID: INTERRUPT_ID
0xA0027000 C   FIELD 10w01 CPUID: CPUID
0xE000E100 A PERIPHERAL NVIC
0xE000E100 B  REGISTER ISER0 (rw): Interrupt Set-Enable Register
0xE000E100 C   FIELD 00w32 SETENA: SETENA
0xE000E104 B  REGISTER ISER1 (rw): Interrupt Set-Enable Register
0xE000E104 C   FIELD 00w32 SETENA: SETENA
0xE000E108 B  REGISTER ISER2 (rw): Interrupt Set-Enable Register
0xE000E108 C   FIELD 00w32 SETENA: SETENA
0xE000E10C B  REGISTER ISER3 (rw): Interrupt Set-Enable Register
0xE000E10C C   FIELD 00w32 SETENA: SETENA
0xE000E110 B  REGISTER ISER4 (rw): Interrupt Set-Enable Register
0xE000E180 B  REGISTER ICER0 (rw): Interrupt Clear-Enable Register
0xE000E180 C   FIELD 00w32 CLRENA: CLRENA
0xE000E184 B  REGISTER ICER1 (rw): Interrupt Clear-Enable Register
0xE000E184 C   FIELD 00w32 CLRENA: CLRENA
0xE000E188 B  REGISTER ICER2 (rw): Interrupt Clear-Enable Register
0xE000E188 C   FIELD 00w32 CLRENA: CLRENA
0xE000E18C B  REGISTER ICER3 (rw): Interrupt Clear-Enable Register
0xE000E18C C   FIELD 00w32 CLRENA: CLRENA
0xE000E190 B  REGISTER ICER4 (rw): Interrupt Clear-Enable Register
0xE000E200 B  REGISTER ISPR0 (rw): Interrupt Set-Pending Register
0xE000E200 C   FIELD 00w32 SETPEND: SETPEND
0xE000E204 B  REGISTER ISPR1 (rw): Interrupt Set-Pending Register
0xE000E204 C   FIELD 00w32 SETPEND: SETPEND
0xE000E208 B  REGISTER ISPR2 (rw): Interrupt Set-Pending Register
0xE000E208 C   FIELD 00w32 SETPEND: SETPEND
0xE000E20C B  REGISTER ISPR3 (rw): Interrupt Set-Pending Register
0xE000E20C C   FIELD 00w32 SETPEND: SETPEND
0xE000E210 B  REGISTER ISPR4 (rw): Interrupt Set-Pending Register
0xE000E280 B  REGISTER ICPR0 (rw): Interrupt Clear-Pending Register
0xE000E280 C   FIELD 00w32 CLRPEND: CLRPEND
0xE000E284 B  REGISTER ICPR1 (rw): Interrupt Clear-Pending Register
0xE000E284 C   FIELD 00w32 CLRPEND: CLRPEND
0xE000E288 B  REGISTER ICPR2 (rw): Interrupt Clear-Pending Register
0xE000E288 C   FIELD 00w32 CLRPEND: CLRPEND
0xE000E28C B  REGISTER ICPR3 (rw): Interrupt Clear-Pending Register
0xE000E28C C   FIELD 00w32 CLRPEND: CLRPEND
0xE000E2C4 B  REGISTER ICPR4 (rw): Interrupt Clear-Pending Register
0xE000E300 B  REGISTER IABR0 (ro): Interrupt Active Bit Register
0xE000E300 C   FIELD 00w32 ACTIVE: ACTIVE
0xE000E304 B  REGISTER IABR1 (ro): Interrupt Active Bit Register
0xE000E304 C   FIELD 00w32 ACTIVE: ACTIVE
0xE000E308 B  REGISTER IABR2 (ro): Interrupt Active Bit Register
0xE000E308 C   FIELD 00w32 ACTIVE: ACTIVE
0xE000E30C B  REGISTER IABR3 (ro): Interrupt Active Bit Register
0xE000E30C C   FIELD 00w32 ACTIVE: ACTIVE
0xE000E310 B  REGISTER IABR4 (rw): Interrupt Active Bit Register
0xE000E400 B  REGISTER IPR0 (rw): Interrupt Priority Register
0xE000E400 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E400 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E400 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E400 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E404 B  REGISTER IPR1 (rw): Interrupt Priority Register
0xE000E404 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E404 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E404 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E404 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E408 B  REGISTER IPR2 (rw): Interrupt Priority Register
0xE000E408 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E408 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E408 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E408 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E40C B  REGISTER IPR3 (rw): Interrupt Priority Register
0xE000E40C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E40C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E40C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E40C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E410 B  REGISTER IPR4 (rw): Interrupt Priority Register
0xE000E410 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E410 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E410 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E410 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E414 B  REGISTER IPR5 (rw): Interrupt Priority Register
0xE000E414 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E414 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E414 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E414 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E418 B  REGISTER IPR6 (rw): Interrupt Priority Register
0xE000E418 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E418 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E418 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E418 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E41C B  REGISTER IPR7 (rw): Interrupt Priority Register
0xE000E41C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E41C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E41C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E41C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E420 B  REGISTER IPR8 (rw): Interrupt Priority Register
0xE000E420 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E420 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E420 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E420 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E424 B  REGISTER IPR9 (rw): Interrupt Priority Register
0xE000E424 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E424 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E424 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E424 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E428 B  REGISTER IPR10 (rw): Interrupt Priority Register
0xE000E428 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E428 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E428 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E428 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E42C B  REGISTER IPR11 (rw): Interrupt Priority Register
0xE000E42C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E42C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E42C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E42C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E430 B  REGISTER IPR12 (rw): Interrupt Priority Register
0xE000E430 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E430 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E430 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E430 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E434 B  REGISTER IPR13 (rw): Interrupt Priority Register
0xE000E434 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E434 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E434 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E434 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E438 B  REGISTER IPR14 (rw): Interrupt Priority Register
0xE000E438 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E438 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E438 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E438 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E43C B  REGISTER IPR15 (rw): Interrupt Priority Register
0xE000E43C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E43C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E43C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E43C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E440 B  REGISTER IPR16 (rw): Interrupt Priority Register
0xE000E440 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E440 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E440 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E440 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E444 B  REGISTER IPR17 (rw): Interrupt Priority Register
0xE000E444 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E444 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E444 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E444 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E448 B  REGISTER IPR18 (rw): Interrupt Priority Register
0xE000E448 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E448 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E448 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E448 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E44C B  REGISTER IPR19 (rw): Interrupt Priority Register
0xE000E44C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E44C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E44C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E44C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E450 B  REGISTER IPR20 (rw): Interrupt Priority Register
0xE000E450 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E450 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E450 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E450 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E454 B  REGISTER IPR21 (rw): Interrupt Priority Register
0xE000E454 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E454 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E454 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E454 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E458 B  REGISTER IPR22 (rw): Interrupt Priority Register
0xE000E458 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E458 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E458 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E458 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E45C B  REGISTER IPR23 (rw): Interrupt Priority Register
0xE000E45C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E45C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E45C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E45C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E460 B  REGISTER IPR24 (rw): Interrupt Priority Register
0xE000E460 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E460 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E460 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E460 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E464 B  REGISTER IPR25 (rw): Interrupt Priority Register
0xE000E464 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E464 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E464 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E464 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E468 B  REGISTER IPR26 (rw): Interrupt Priority Register
0xE000E468 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E468 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E468 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E468 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E46C B  REGISTER IPR27 (rw): Interrupt Priority Register
0xE000E46C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E46C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E46C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E46C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E470 B  REGISTER IPR28 (rw): Interrupt Priority Register
0xE000E470 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E470 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E470 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E470 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E474 B  REGISTER IPR29 (rw): Interrupt Priority Register
0xE000E474 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E474 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E474 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E474 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E478 B  REGISTER IPR30 (rw): Interrupt Priority Register
0xE000E478 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E478 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E478 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E478 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E47C B  REGISTER IPR31 (rw): Interrupt Priority Register
0xE000E47C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E47C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E47C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E47C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E480 B  REGISTER IPR32 (rw): Interrupt Priority Register
0xE000E480 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E480 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E480 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E480 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E484 B  REGISTER IPR33 (rw): Interrupt Priority Register
0xE000E484 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E484 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E484 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E484 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E488 B  REGISTER IPR34 (rw): Interrupt Priority Register
0xE000E488 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E488 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E488 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E488 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E48C B  REGISTER IPR35 (rw): Interrupt Priority Register
0xE000E48C C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E48C C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E48C C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E48C C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E490 B  REGISTER IPR36 (rw): Interrupt Priority Register
0xE000E490 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E490 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E490 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E490 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E494 B  REGISTER IPR37 (rw): Interrupt Priority Register
0xE000E494 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E494 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E494 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E494 C   FIELD 24w08 IPR_N3: IPR_N3
0xE000E498 B  REGISTER IPR38 (rw): Interrupt Priority Register
0xE000E498 C   FIELD 00w08 IPR_N0: IPR_N0
0xE000E498 C   FIELD 08w08 IPR_N1: IPR_N1
0xE000E498 C   FIELD 16w08 IPR_N2: IPR_N2
0xE000E498 C   FIELD 24w08 IPR_N3: IPR_N3
INTERRUPT 000: WWDG1_IT (WWDG1): Window Watchdog interrupt
INTERRUPT 001: PVD_AVD (EXTI): PVD AND AVD detector through EXTI
INTERRUPT 002: TAMP (TAMP): Tamper interrupt (include LSECSS interrupts)
INTERRUPT 003: RTC_WKUP_ALARM (RTC): RTC Tamper or TimeStamp
INTERRUPT 004: TZC_IT (TZC): TrustZone DDR address space controller
INTERRUPT 005: RCC (RCC): RCC global interrupt
INTERRUPT 006: EXTI0 (EXTI): EXTI Line 0 interrupt
INTERRUPT 007: EXTI1 (EXTI): EXTI Line 1 interrupt
INTERRUPT 008: EXTI2 (EXTI): EXTI Line 2 interrupt
INTERRUPT 009: EXTI3 (EXTI): EXTI Line 3 interrupt
INTERRUPT 010: EXTI4 (EXTI): EXTI Line 4 interrupt
INTERRUPT 011: DMA1_STR0 (DMA1): DMA1 stream0 global interrupt
INTERRUPT 012: DMA1_STR1 (DMA1): DMA1 stream1 global interrupt
INTERRUPT 013: DMA1_STR2 (DMA1): DMA1 stream2 global interrupt
INTERRUPT 014: DMA1_STR3 (DMA1): DMA1 stream3 global interrupt
INTERRUPT 015: DMA1_STR4 (DMA1): DMA1 stream4 global interrupt
INTERRUPT 016: DMA1_STR5 (DMA1): DMA1 stream5 global interrupt
INTERRUPT 017: DMA1_STR6 (DMA1): DMA1 stream6 global interrupt
INTERRUPT 018: ADC1 (ADC): ADC1 global interrupt
INTERRUPT 019: FDCAN1_IT0 (FDCAN1): FDCAN1 interrupt 0
INTERRUPT 020: FDCAN2_IT0 (FDCAN2): FDCAN2 interrupt 0
INTERRUPT 021: FDCAN1_IT1 (FDCAN1): FDCAN1 interrupt 1
INTERRUPT 022: FDCAN2_IT1 (FDCAN2): FDCAN2 interrupt 1
INTERRUPT 023: EXTI5 (EXTI): EXTI line 5 interrupt
INTERRUPT 024: TIM1_BRK (TIM1): TIM1 break interrupt
INTERRUPT 025: TIM1_UP (TIM1): TIM1 update interrupt
INTERRUPT 026: TIM1_TRG_COM (TIM1): TIM1 trigger and commutation interrupt
INTERRUPT 027: TIM1_CC (TIM1): TIM1 capture compare interrupt
INTERRUPT 028: TIM2 (TIM2): TIM2 global interrupt
INTERRUPT 029: TIM3 (TIM3): TIM3 global interrupt
INTERRUPT 030: TIM4 (TIM4): TIM4 global interrupt
INTERRUPT 031: I2C1_EVT (I2C1): I2C1 event interrupt
INTERRUPT 032: I2C1_ERR (I2C1): I2C1 global error interrupt
INTERRUPT 033: I2C2_EVT (I2C2): I2C2 event interrupt
INTERRUPT 034: I2C2_ERR (I2C2): I2C2 global error interrupt
INTERRUPT 035: SPI1 (SPI1): SPI1 global interrupt
INTERRUPT 036: SPI2 (SPI2): SPI2 global interrupt
INTERRUPT 037: USART1 (USART1): USART1 global interrupt
INTERRUPT 038: USART2 (USART2): USART2 global interrupt
INTERRUPT 039: USART3 (USART3): USART3 global interrupt
INTERRUPT 040: EXTI10 (EXTI): EXTI line 10 interrupt
INTERRUPT 041: RTC_TS (RTC): RTC timestamp interrupt
INTERRUPT 042: EXTI11 (EXTI): EXTI line 11 interrupt
INTERRUPT 043: TIM8_BRK (TIM8): TIM8 break interrupt
INTERRUPT 044: TIM8_UP (TIM8): TIM8 update interrupt
INTERRUPT 045: TIM8_TRG_COM (TIM8): TIM8 trigger and commutation interrupt
INTERRUPT 046: TIM8_CC (TIM8): TIM8 capture compare interrupt
INTERRUPT 047: DMA1_STR7 (DMA1): DMA1 stream7 global interrupt
INTERRUPT 048: FMC (FMC): FMC global interrupt
INTERRUPT 049: SDMMC1 (SDMMC1): SDMMC1 global interrupt
INTERRUPT 050: TIM5 (TIM5): TIM5 global interrupt
INTERRUPT 051: SPI3 (SPI3): SPI3 global interrupt
INTERRUPT 052: USART4 (USART4): USART4 global interrupt
INTERRUPT 053: USART5 (USART5): USART5 global interrupt
INTERRUPT 054: TIM6 (TIM6): TIM6 global interrupt
INTERRUPT 055: TIM7 (TIM7): TIM7 global interrupt
INTERRUPT 056: DMA2_STR0 (DMA2): DMA2 stream0 global interrupt
INTERRUPT 057: DMA2_STR1 (DMA2): DMA2 stream1 global interrupt
INTERRUPT 058: DMA2_STR2 (DMA2): DMA2 stream2 global interrupt
INTERRUPT 059: DMA2_STR3 (DMA2): DMA2 stream3 global interrupt
INTERRUPT 060: DMA2_STR4 (DMA2): DMA2 stream4 global interrupt
INTERRUPT 061: ETH1 (ETH_MAC_MMC): ETH1 global interrupt
INTERRUPT 062: ETH1_WKUP (ETH_MAC_MMC): ETH1 wakeup interrupt
INTERRUPT 064: EXTI6 (EXTI): EXTI line 6 interrupt
INTERRUPT 065: EXTI7 (EXTI): EXTI line 7 interrupt
INTERRUPT 066: EXTI8 (EXTI): EXTI line 8 interrupt
INTERRUPT 067: EXTI9 (EXTI): EXTI line 9 interrupt
INTERRUPT 068: DMA2_STR5 (DMA2): DMA2 stream5 global interrupt
INTERRUPT 069: DMA2_STR6 (DMA2): DMA2 stream6 global interrupt
INTERRUPT 070: DMA2_STR7 (DMA2): DMA2 stream7 global interrupt
INTERRUPT 071: USART6 (USART6): USART6 global interrupt
INTERRUPT 072: I2C3_EVT (I2C3): I2C3 event interrupt
INTERRUPT 073: I2C3_ERR (I2C3): I2C3 global error interrupt
INTERRUPT 076: EXTI12 (EXTI): EXTI line 12 interrupt
INTERRUPT 077: EXTI13 (EXTI): EXTI line 13 interrupt
INTERRUPT 078: DCMI (DCMI): DCMI global interrupt
INTERRUPT 079: CRYP1 (CRYP1): CRYP1 global interrupt
INTERRUPT 080: HASH1 (HASH1): HASH1 interrupt
INTERRUPT 082: USART7 (USART7): USART7 global interrupt
INTERRUPT 083: USART8 (USART8): USART8 global interrupt
INTERRUPT 084: SPI4 (SPI4): SPI4 global interrupt
INTERRUPT 085: SPI5 (SPI5): SPI5 global interrupt
INTERRUPT 086: SPI6 (SPI6): SPI6 global interrupt
INTERRUPT 087: SAI1 (SAI1): SAI1 global interrupt
INTERRUPT 088: LTDC (LTDC): LTCD global interrupt
INTERRUPT 089: LTDC_ER (LTDC): LTCD global error interrupt
INTERRUPT 090: ADC2 (ADC2): ADC2 global interrupt
INTERRUPT 091: SAI2 (SAI2): SAI2 global interrupt
INTERRUPT 092: QUADSPI (QUADSPI): QUADSPI global interrupt
INTERRUPT 093: LPTIM1 (LPTIM1): LPTIMER1 global interrupt
INTERRUPT 094: CEC (HDMI_CEC): HDMI-CEC global interrupt
INTERRUPT 095: I2C4_EVT (I2C4): I2C4 event interrupt
INTERRUPT 096: I2C4_ERR (I2C4): I2C4 global error interrupt
INTERRUPT 097: SPDIFRX (SPDIFRX): SPDIFRX global interrupt
INTERRUPT 098: OTG (OTG): USB On-The-Go global interrupt
INTERRUPT 100: IPCC_RX0 (IPCC): IPCC RX0 occupied interrupt
INTERRUPT 101: IPCC_TX0 (IPCC): IPCC TX0 free interrupt
INTERRUPT 102: DMAMUX1_OVR_REQ (DMAMUX1): DMAMUX1 overrun interrupt
INTERRUPT 103: IPCC_RX1 (IPCC): IPCC RX1 occupied interrupt
INTERRUPT 104: IPCC_TX1 (IPCC): IPCC TX1 free interrupt
INTERRUPT 105: CRYP2 (CRYP2): CRYP2 global interrupt
INTERRUPT 106: HASH2 (HASH2): HASH2 interrupt
INTERRUPT 107: I2C5_EVT (I2C5): I2C5 event interrupt
INTERRUPT 108: I2C5_ERR (I2C5): I2C5 global error interrupt
INTERRUPT 110: DFSDM1_FLT0 (DFSDM1): DFSDM1 filter0 Interrupt
INTERRUPT 111: DFSDM1_FLT1 (DFSDM1): DFSDM1 filter1 Interrupt
INTERRUPT 112: DFSDM1_FLT2 (DFSDM1): DFSDM1 filter2 Interrupt
INTERRUPT 113: DFSDM1_FLT3 (DFSDM1): DFSDM1 filter3 Interrupt
INTERRUPT 114: SAI3 (SAI3): SAI3 global interrupt
INTERRUPT 115: DFSDM1_FLT4 (DFSDM1): DFSDM1 filter4 Interrupt
INTERRUPT 116: TIM15 (TIM15): TIM15 global interrupt
INTERRUPT 117: TIM16 (TIM16): TIM16 global interrupt
INTERRUPT 118: TIM17 (TIM17): TIM17 global interrupt
INTERRUPT 119: TIM12 (TIM12): TIM12 gloabl interrupt
INTERRUPT 120: MDIOS (MDIOS): MDIOS global interrupt
INTERRUPT 121: EXTI14 (EXTI): EXTI line 14 interrupt
INTERRUPT 122: MDMA (MDMA): MDMA global interrupt
INTERRUPT 123: DSI (DSI): DSI Host controller global interrupt
INTERRUPT 124: SDMMC2 (SDMMC2): SDMMC2 global interrupt
INTERRUPT 125: HSEM_IT2 (HSEM): HSEM semaphore interrupt 2
INTERRUPT 126: DFSDM1_FLT5 (DFSDM1): DFSDM1 filter5 Interrupt
INTERRUPT 127: EXTI15 (EXTI): EXTI line 15 interrupt
INTERRUPT 130: TIM13 (TIM13): TIM13 global interrupt
INTERRUPT 131: TIM14 (TIM14): TIM14 global interrupt
INTERRUPT 132: DAC (DAC1): DAC1 and DAC2 underrun error interrupts
INTERRUPT 133: RNG1 (RNG1): RNG1 interrupt
INTERRUPT 134: RNG2 (RNG2): RNG2 interrupt
INTERRUPT 135: I2C6_EVT (I2C6): I2C6 event interrupt
INTERRUPT 136: I2C6_ERR (I2C6): I2C6 global error interrupt
INTERRUPT 137: SDMMC3 (SDMMC3): SDMMC3 global interrupt
INTERRUPT 138: LPTIM2 (LPTIM2): LPTIMER2 global interrupt
INTERRUPT 139: LPTIM3 (LPTIM3): LPTIMER3 global interrupt
INTERRUPT 140: LPTIM4 (LPTIM4): LPTIMER4 global interrupt
INTERRUPT 141: LPTIM5 (LPTIM5): LPTIMER5 global interrupt
INTERRUPT 142: ETH1_LPI (ETH_MAC_MMC): ETH1 LPI interrupt
INTERRUPT 145: RCC_WAKEUP (RCC): RCC MPU wakeup interrupt
INTERRUPT 146: SAI4 (SAI4): SAI4 global interrupt
INTERRUPT 147: DTS (DTS): Digital temperature sensor interrupt
INTERRUPT 150: IWDG1_IT (IWDG1): IWDG1 early wake
INTERRUPT 151: IWDG2_IT (IWDG2): IWDG2 early wake
INTERRUPT 197: TAMP_S (TAMP): TAMP tamper secure interrupt
INTERRUPT 198: RTC_WKUP_ALARM_S (RTC): RTC wakeup timer and alarms (A and B) secure interrupt
INTERRUPT 199: RTC_TS_S (RTC): RTC timestamp secure interrupt
INTERRUPT 213: DDRPERFM (DDRPERFM): DDR performance monitor interrupt
