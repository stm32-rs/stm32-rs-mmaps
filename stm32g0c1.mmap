0x40000000 A PERIPHERAL TIM2
0x40000000 B  REGISTER CR1 (rw): control register 1
0x40000000 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock, gated mode and encoder mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware. CEN is cleared automatically in one-pulse mode, when an update event occurs.
0x40000000 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40000000 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40000000 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40000000 C   FIELD 04w01 DIR (rw): Direction Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder mode.
0x40000000 C   FIELD 05w02 CMS (rw): Center-aligned mode selection Note: It is not allowed to switch from edge-aligned mode to center-aligned mode as long as the counter is enabled (CEN=1)
0x40000000 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40000000 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and sampling clock used by the digital filters (ETR, TIx),
0x40000000 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40000004 B  REGISTER CR2 (rw): control register 2
0x40000004 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40000004 C   FIELD 04w03 MMS (rw): Master mode selection These bits permit to select the information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows: When the Counter Enable signal is controlled by the trigger input, there is a delay on TRGO, except if the master/slave mode is selected (see the MSM bit description in TIMx_SMCR register). Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x40000004 C   FIELD 07w01 TI1S (rw): TI1 selection
0x40000008 B  REGISTER SMCR (rw): slave mode control register
0x40000008 C   FIELD 00w03 SMS1 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. reinitializes the counter, generates an update of the registers and starts the counter. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=00100). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40000008 C   FIELD 03w01 OCCS (rw): OCREF clear selection This bit is used to select the OCREF clear source
0x40000008 C   FIELD 04w03 TS1 (rw): Trigger selection This bit-field selects the trigger input to be used to synchronize the counter. Others: Reserved See for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40000008 C   FIELD 07w01 MSM (rw): Master/Slave mode
0x40000008 C   FIELD 08w04 ETF (rw): External trigger filter This bit-field then defines the frequency used to sample ETRP signal and the length of the digital filter applied to ETRP. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40000008 C   FIELD 12w02 ETPS (rw): External trigger prescaler External trigger signal ETRP frequency must be at most 1/4 of CK_INT frequency. A prescaler can be enabled to reduce ETRP frequency. It is useful when inputting fast external clocks.
0x40000008 C   FIELD 14w01 ECE (rw): External clock enable This bit enables External clock mode 2. Note: Setting the ECE bit has the same effect as selecting external clock mode 1 with TRGI connected to ETRF (SMS=111 and TS=00111). It is possible to simultaneously use external clock mode 2 with the following slave modes: reset mode, gated mode and trigger mode. Nevertheless, TRGI must not be connected to ETRF in this case (TS bits must not be 00111). If external clock mode 1 and external clock mode 2 are enabled at the same time, the external clock input is ETRF.
0x40000008 C   FIELD 15w01 ETP (rw): External trigger polarity This bit selects whether ETR or ETR is used for trigger operations
0x40000008 C   FIELD 16w01 SMS2 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. reinitializes the counter, generates an update of the registers and starts the counter. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=00100). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40000008 C   FIELD 20w02 TS2 (rw): Trigger selection This bit-field selects the trigger input to be used to synchronize the counter. Others: Reserved See for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x4000000C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000000C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000000C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4000000C C   FIELD 02w01 CC2IE (rw): Capture/Compare 2 interrupt enable
0x4000000C C   FIELD 03w01 CC3IE (rw): Capture/Compare 3 interrupt enable
0x4000000C C   FIELD 04w01 CC4IE (rw): Capture/Compare 4 interrupt enable
0x4000000C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x4000000C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4000000C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x4000000C C   FIELD 10w01 CC2DE (rw): Capture/Compare 2 DMA request enable
0x4000000C C   FIELD 11w01 CC3DE (rw): Capture/Compare 3 DMA request enable
0x4000000C C   FIELD 12w01 CC4DE (rw): Capture/Compare 4 DMA request enable
0x4000000C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40000010 B  REGISTER SR (rw): status register
0x40000010 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow and if UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to the synchro control register description), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40000010 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40000010 C   FIELD 02w01 CC2IF (rw): Capture/Compare 2 interrupt flag Refer to CC1IF description
0x40000010 C   FIELD 03w01 CC3IF (rw): Capture/Compare 3 interrupt flag Refer to CC1IF description
0x40000010 C   FIELD 04w01 CC4IF (rw): Capture/Compare 4 interrupt flag Refer to CC1IF description
0x40000010 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on TRGI input when the slave mode controller is enabled in all modes but gated mode. It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x40000010 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40000010 C   FIELD 10w01 CC2OF (rw): Capture/compare 2 overcapture flag refer to CC1OF description
0x40000010 C   FIELD 11w01 CC3OF (rw): Capture/Compare 3 overcapture flag refer to CC1OF description
0x40000010 C   FIELD 12w01 CC4OF (rw): Capture/Compare 4 overcapture flag refer to CC1OF description
0x40000014 B  REGISTER EGR (wo): event generation register
0x40000014 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40000014 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40000014 C   FIELD 02w01 CC2G (wo): Capture/compare 2 generation Refer to CC1G description
0x40000014 C   FIELD 03w01 CC3G (wo): Capture/compare 3 generation Refer to CC1G description
0x40000014 C   FIELD 04w01 CC4G (wo): Capture/compare 4 generation Refer to CC1G description
0x40000014 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40000018 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40000018 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40000018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = 0 in TIMx_CCER).
0x40000018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000018 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x40000018 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40000018 C   FIELD 03w01 OC1PE (rw): Output compare 1 preload enable Note: The PWM mode can be used without validating the preload register only in one-pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
0x40000018 C   FIELD 04w03 OC1M1 (rw): Output compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. Note: In PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. Note: The OC1M[3] bit is not contiguous, located in bit 16.
0x40000018 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40000018 C   FIELD 07w01 OC1CE (rw): Output compare 1 clear enable
0x40000018 C   FIELD 08w02 CC2S (rw): Capture/compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = 0 in TIMx_CCER).
0x40000018 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x40000018 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x40000018 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x40000018 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x40000018 C   FIELD 12w03 OC2M: Output compare 2 mode
0x40000018 C   FIELD 12w04 IC2F: Input capture 2 filter
0x40000018 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x40000018 C   FIELD 16w01 OC1M_3: Output Compare 1 mode - bit 3
0x40000018 C   FIELD 24w01 OC2M_3: Output Compare 2 mode - bit 3
0x4000001C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x4000001C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x4000001C C   FIELD 00w02 CC3S (rw): Capture/Compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = 0 in TIMx_CCER).
0x4000001C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x4000001C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x4000001C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x4000001C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x4000001C C   FIELD 04w03 OC3M: Output compare 3 mode
0x4000001C C   FIELD 04w04 IC3F: Input capture 3 filter
0x4000001C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x4000001C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = 0 in TIMx_CCER).
0x4000001C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x4000001C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x4000001C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x4000001C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x4000001C C   FIELD 12w03 OC4M: Output compare 4 mode
0x4000001C C   FIELD 12w04 IC4F: Input capture 4 filter
0x4000001C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x4000001C C   FIELD 16w01 OC3M_3: Output Compare 3 mode - bit 3
0x4000001C C   FIELD 24w01 OC4M_3: Output Compare 4 mode - bit 3
0x40000020 B  REGISTER CCER (rw): capture/compare enable register
0x40000020 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable.
0x40000020 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output Polarity. When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges. The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: This configuration is reserved, it must not be used.
0x40000020 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 output Polarity. CC1 channel configured as output: CC1NP must be kept cleared in this case. CC1 channel configured as input: This bit is used in conjunction with CC1P to define TI1FP1/TI2FP1 polarity. refer to CC1P description.
0x40000020 C   FIELD 04w01 CC2E (rw): Capture/Compare 2 output enable. Refer to CC1E description
0x40000020 C   FIELD 05w01 CC2P (rw): Capture/Compare 2 output Polarity. refer to CC1P description
0x40000020 C   FIELD 07w01 CC2NP (rw): Capture/Compare 2 output Polarity. Refer to CC1NP description
0x40000020 C   FIELD 08w01 CC3E (rw): Capture/Compare 3 output enable. Refer to CC1E description
0x40000020 C   FIELD 09w01 CC3P (rw): Capture/Compare 3 output Polarity. Refer to CC1P description
0x40000020 C   FIELD 11w01 CC3NP (rw): Capture/Compare 3 output Polarity. Refer to CC1NP description
0x40000020 C   FIELD 12w01 CC4E (rw): Capture/Compare 4 output enable. refer to CC1E description
0x40000020 C   FIELD 13w01 CC4P (rw): Capture/Compare 4 output Polarity. Refer to CC1P description
0x40000020 C   FIELD 15w01 CC4NP (rw): Capture/Compare 4 output Polarity. Refer to CC1NP description
0x40000024 B  REGISTER CNT (rw): counter
0x40000024 B  REGISTER CNT_ALTERNATE5 (rw): counter
0x40000024 C   FIELD 00w16 CNT_L: Low counter value
0x40000024 C   FIELD 00w31 CNT (rw): Most significant part counter value (TIM2) nullLeast significant part of counter value
0x40000024 C   FIELD 16w16 CNT_H: High counter value (TIM2 only)
0x40000024 C   FIELD 31w01 UIFCPY (rw): UIF Copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register
0x40000028 B  REGISTER PSC (rw): prescaler
0x40000028 C   FIELD 00w16 PSC: Prescaler value
0x4000002C B  REGISTER ARR (rw): auto-reload register
0x4000002C C   FIELD 00w32 ARR (rw): High auto-reload value (TIM2) nullLow Auto-reload value ARR is the value to be loaded in the actual auto-reload register. Refer to the for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null.
0x40000034 B  REGISTER CCR1 (rw): capture/compare register 1
0x40000034 C   FIELD 00w32 CCR1 (rw): High Capture/Compare 1 value (TIM2) nullLow Capture/Compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC1PE). Else the preload value is copied in the active capture/compare 1 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on OC1 output. If channel CC1is configured as input: CCR1 is the counter value transferred by the last input capture 1 event (IC1). The TIMx_CCR1 register is read-only and cannot be programmed.
0x40000038 B  REGISTER CCR2 (rw): capture/compare register 2
0x40000038 C   FIELD 00w32 CCR2 (rw): High Capture/Compare 2 value (TIM2) nullLow Capture/Compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC2PE). Else the preload value is copied in the active capture/compare 2 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on OC2 output. If channel CC2 is configured as input: CCR2 is the counter value transferred by the last input capture 2 event (IC2). The TIMx_CCR2 register is read-only and cannot be programmed.
0x4000003C B  REGISTER CCR3 (rw): capture/compare register 3
0x4000003C C   FIELD 00w32 CCR3 (rw): High Capture/Compare 3 value (TIM2) nullLow Capture/Compare value If channel CC3 is configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC3PE). Else the preload value is copied in the active capture/compare 3 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on OC3 output. If channel CC3is configured as input: CCR3 is the counter value transferred by the last input capture 3 event (IC3). The TIMx_CCR3 register is read-only and cannot be programmed.
0x40000040 B  REGISTER CCR4 (rw): capture/compare register 4
0x40000040 C   FIELD 00w32 CCR4 (rw): High Capture/Compare 4 value (TIM2) nullLow Capture/Compare value if CC4 channel is configured as output (CC4S bits): CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC4PE). Else the preload value is copied in the active capture/compare 4 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on OC4 output. if CC4 channel is configured as input (CC4S bits in TIMx_CCMR4 register): CCR4 is the counter value transferred by the last input capture 4 event (IC4). The TIMx_CCR4 register is read-only and cannot be programmed.
0x40000048 B  REGISTER DCR (rw): DMA control register
0x40000048 C   FIELD 00w05 DBA (rw): DMA base address This 5-bit vector defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ... Example: Let us consider the following transfer: DBL = 7 transfers & DBA = TIMx_CR1. In this case the transfer is done to/from 7 registers starting from the TIMx_CR1 address.
0x40000048 C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit vector defines the number of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address). ...
0x4000004C B  REGISTER DMAR (rw): DMA address for full transfer
0x4000004C C   FIELD 00w16 DMAB: DMA register for burst accesses
0x40000050 B  REGISTER OR1 (rw): TIM option register
0x40000050 C   FIELD 00w01 OCREF_CLR (rw): Ocref_clr source selection This bit selects the ocref_clr input source.
0x40000060 B  REGISTER AF1 (rw): TIM alternate function option register 1
0x40000060 C   FIELD 14w04 ETRSEL (rw): ETR source selection These bits select the ETR input source. Others: Reserved
0x40000068 B  REGISTER TISEL (rw): TIM alternate function option register 1
0x40000068 C   FIELD 00w04 TI1SEL (rw): TI1[0] to TI1[15] input selection These bits select the TI1[0] to TI1[15] input source. Others: Reserved
0x40000068 C   FIELD 08w04 TI2SEL (rw): TI2[0] to TI2[15] input selection These bits select the TI2[0] to TI2[15] input source. Others: Reserved
0x40000400 A PERIPHERAL TIM3
0x40000400 B  REGISTER CR1 (rw): control register 1
0x40000400 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock, gated mode and encoder mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware. CEN is cleared automatically in one-pulse mode, when an update event occurs.
0x40000400 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40000400 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40000400 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40000400 C   FIELD 04w01 DIR (rw): Direction Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder mode.
0x40000400 C   FIELD 05w02 CMS (rw): Center-aligned mode selection Note: It is not allowed to switch from edge-aligned mode to center-aligned mode as long as the counter is enabled (CEN=1)
0x40000400 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40000400 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and sampling clock used by the digital filters (ETR, TIx),
0x40000400 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40000404 B  REGISTER CR2 (rw): control register 2
0x40000404 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40000404 C   FIELD 04w03 MMS (rw): Master mode selection These bits permit to select the information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows: When the Counter Enable signal is controlled by the trigger input, there is a delay on TRGO, except if the master/slave mode is selected (see the MSM bit description in TIMx_SMCR register). Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x40000404 C   FIELD 07w01 TI1S (rw): TI1 selection
0x40000408 B  REGISTER SMCR (rw): slave mode control register
0x40000408 C   FIELD 00w03 SMS1 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. reinitializes the counter, generates an update of the registers and starts the counter. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=00100). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40000408 C   FIELD 03w01 OCCS (rw): OCREF clear selection This bit is used to select the OCREF clear source
0x40000408 C   FIELD 04w03 TS1 (rw): Trigger selection This bit-field selects the trigger input to be used to synchronize the counter. Others: Reserved See for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40000408 C   FIELD 07w01 MSM (rw): Master/Slave mode
0x40000408 C   FIELD 08w04 ETF (rw): External trigger filter This bit-field then defines the frequency used to sample ETRP signal and the length of the digital filter applied to ETRP. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40000408 C   FIELD 12w02 ETPS (rw): External trigger prescaler External trigger signal ETRP frequency must be at most 1/4 of CK_INT frequency. A prescaler can be enabled to reduce ETRP frequency. It is useful when inputting fast external clocks.
0x40000408 C   FIELD 14w01 ECE (rw): External clock enable This bit enables External clock mode 2. Note: Setting the ECE bit has the same effect as selecting external clock mode 1 with TRGI connected to ETRF (SMS=111 and TS=00111). It is possible to simultaneously use external clock mode 2 with the following slave modes: reset mode, gated mode and trigger mode. Nevertheless, TRGI must not be connected to ETRF in this case (TS bits must not be 00111). If external clock mode 1 and external clock mode 2 are enabled at the same time, the external clock input is ETRF.
0x40000408 C   FIELD 15w01 ETP (rw): External trigger polarity This bit selects whether ETR or ETR is used for trigger operations
0x40000408 C   FIELD 16w01 SMS2 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. reinitializes the counter, generates an update of the registers and starts the counter. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=00100). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40000408 C   FIELD 20w02 TS2 (rw): Trigger selection This bit-field selects the trigger input to be used to synchronize the counter. Others: Reserved See for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x4000040C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000040C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000040C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4000040C C   FIELD 02w01 CC2IE (rw): Capture/Compare 2 interrupt enable
0x4000040C C   FIELD 03w01 CC3IE (rw): Capture/Compare 3 interrupt enable
0x4000040C C   FIELD 04w01 CC4IE (rw): Capture/Compare 4 interrupt enable
0x4000040C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x4000040C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4000040C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x4000040C C   FIELD 10w01 CC2DE (rw): Capture/Compare 2 DMA request enable
0x4000040C C   FIELD 11w01 CC3DE (rw): Capture/Compare 3 DMA request enable
0x4000040C C   FIELD 12w01 CC4DE (rw): Capture/Compare 4 DMA request enable
0x4000040C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40000410 B  REGISTER SR (rw): status register
0x40000410 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow and if UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to the synchro control register description), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40000410 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40000410 C   FIELD 02w01 CC2IF (rw): Capture/Compare 2 interrupt flag Refer to CC1IF description
0x40000410 C   FIELD 03w01 CC3IF (rw): Capture/Compare 3 interrupt flag Refer to CC1IF description
0x40000410 C   FIELD 04w01 CC4IF (rw): Capture/Compare 4 interrupt flag Refer to CC1IF description
0x40000410 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on TRGI input when the slave mode controller is enabled in all modes but gated mode. It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x40000410 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40000410 C   FIELD 10w01 CC2OF (rw): Capture/compare 2 overcapture flag refer to CC1OF description
0x40000410 C   FIELD 11w01 CC3OF (rw): Capture/Compare 3 overcapture flag refer to CC1OF description
0x40000410 C   FIELD 12w01 CC4OF (rw): Capture/Compare 4 overcapture flag refer to CC1OF description
0x40000414 B  REGISTER EGR (wo): event generation register
0x40000414 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40000414 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40000414 C   FIELD 02w01 CC2G (wo): Capture/compare 2 generation Refer to CC1G description
0x40000414 C   FIELD 03w01 CC3G (wo): Capture/compare 3 generation Refer to CC1G description
0x40000414 C   FIELD 04w01 CC4G (wo): Capture/compare 4 generation Refer to CC1G description
0x40000414 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40000418 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40000418 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40000418 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = 0 in TIMx_CCER).
0x40000418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000418 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x40000418 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40000418 C   FIELD 03w01 OC1PE (rw): Output compare 1 preload enable Note: The PWM mode can be used without validating the preload register only in one-pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
0x40000418 C   FIELD 04w03 OC1M1 (rw): Output compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. Note: In PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. Note: The OC1M[3] bit is not contiguous, located in bit 16.
0x40000418 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40000418 C   FIELD 07w01 OC1CE (rw): Output compare 1 clear enable
0x40000418 C   FIELD 08w02 CC2S (rw): Capture/compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = 0 in TIMx_CCER).
0x40000418 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x40000418 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x40000418 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x40000418 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x40000418 C   FIELD 12w03 OC2M: Output compare 2 mode
0x40000418 C   FIELD 12w04 IC2F: Input capture 2 filter
0x40000418 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x40000418 C   FIELD 16w01 OC1M_3: Output Compare 1 mode - bit 3
0x40000418 C   FIELD 24w01 OC2M_3: Output Compare 2 mode - bit 3
0x4000041C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x4000041C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x4000041C C   FIELD 00w02 CC3S (rw): Capture/Compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = 0 in TIMx_CCER).
0x4000041C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x4000041C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x4000041C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x4000041C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x4000041C C   FIELD 04w03 OC3M: Output compare 3 mode
0x4000041C C   FIELD 04w04 IC3F: Input capture 3 filter
0x4000041C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x4000041C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = 0 in TIMx_CCER).
0x4000041C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x4000041C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x4000041C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x4000041C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x4000041C C   FIELD 12w03 OC4M: Output compare 4 mode
0x4000041C C   FIELD 12w04 IC4F: Input capture 4 filter
0x4000041C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x4000041C C   FIELD 16w01 OC3M_3: Output Compare 3 mode - bit 3
0x4000041C C   FIELD 24w01 OC4M_3: Output Compare 4 mode - bit 3
0x40000420 B  REGISTER CCER (rw): capture/compare enable register
0x40000420 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable.
0x40000420 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output Polarity. When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges. The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: This configuration is reserved, it must not be used.
0x40000420 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 output Polarity. CC1 channel configured as output: CC1NP must be kept cleared in this case. CC1 channel configured as input: This bit is used in conjunction with CC1P to define TI1FP1/TI2FP1 polarity. refer to CC1P description.
0x40000420 C   FIELD 04w01 CC2E (rw): Capture/Compare 2 output enable. Refer to CC1E description
0x40000420 C   FIELD 05w01 CC2P (rw): Capture/Compare 2 output Polarity. refer to CC1P description
0x40000420 C   FIELD 07w01 CC2NP (rw): Capture/Compare 2 output Polarity. Refer to CC1NP description
0x40000420 C   FIELD 08w01 CC3E (rw): Capture/Compare 3 output enable. Refer to CC1E description
0x40000420 C   FIELD 09w01 CC3P (rw): Capture/Compare 3 output Polarity. Refer to CC1P description
0x40000420 C   FIELD 11w01 CC3NP (rw): Capture/Compare 3 output Polarity. Refer to CC1NP description
0x40000420 C   FIELD 12w01 CC4E (rw): Capture/Compare 4 output enable. refer to CC1E description
0x40000420 C   FIELD 13w01 CC4P (rw): Capture/Compare 4 output Polarity. Refer to CC1P description
0x40000420 C   FIELD 15w01 CC4NP (rw): Capture/Compare 4 output Polarity. Refer to CC1NP description
0x40000424 B  REGISTER CNT (rw): counter
0x40000424 B  REGISTER CNT_ALTERNATE5 (rw): counter
0x40000424 C   FIELD 00w16 CNT_L: Low counter value
0x40000424 C   FIELD 00w31 CNT (rw): Most significant part counter value (TIM2) nullLeast significant part of counter value
0x40000424 C   FIELD 16w16 CNT_H: High counter value (TIM2 only)
0x40000424 C   FIELD 31w01 UIFCPY (rw): UIF Copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register
0x40000428 B  REGISTER PSC (rw): prescaler
0x40000428 C   FIELD 00w16 PSC: Prescaler value
0x4000042C B  REGISTER ARR (rw): auto-reload register
0x4000042C C   FIELD 00w32 ARR (rw): High auto-reload value (TIM2) nullLow Auto-reload value ARR is the value to be loaded in the actual auto-reload register. Refer to the for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null.
0x40000434 B  REGISTER CCR1 (rw): capture/compare register 1
0x40000434 C   FIELD 00w32 CCR1 (rw): High Capture/Compare 1 value (TIM2) nullLow Capture/Compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC1PE). Else the preload value is copied in the active capture/compare 1 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on OC1 output. If channel CC1is configured as input: CCR1 is the counter value transferred by the last input capture 1 event (IC1). The TIMx_CCR1 register is read-only and cannot be programmed.
0x40000438 B  REGISTER CCR2 (rw): capture/compare register 2
0x40000438 C   FIELD 00w32 CCR2 (rw): High Capture/Compare 2 value (TIM2) nullLow Capture/Compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC2PE). Else the preload value is copied in the active capture/compare 2 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on OC2 output. If channel CC2 is configured as input: CCR2 is the counter value transferred by the last input capture 2 event (IC2). The TIMx_CCR2 register is read-only and cannot be programmed.
0x4000043C B  REGISTER CCR3 (rw): capture/compare register 3
0x4000043C C   FIELD 00w32 CCR3 (rw): High Capture/Compare 3 value (TIM2) nullLow Capture/Compare value If channel CC3 is configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC3PE). Else the preload value is copied in the active capture/compare 3 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on OC3 output. If channel CC3is configured as input: CCR3 is the counter value transferred by the last input capture 3 event (IC3). The TIMx_CCR3 register is read-only and cannot be programmed.
0x40000440 B  REGISTER CCR4 (rw): capture/compare register 4
0x40000440 C   FIELD 00w32 CCR4 (rw): High Capture/Compare 4 value (TIM2) nullLow Capture/Compare value if CC4 channel is configured as output (CC4S bits): CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC4PE). Else the preload value is copied in the active capture/compare 4 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on OC4 output. if CC4 channel is configured as input (CC4S bits in TIMx_CCMR4 register): CCR4 is the counter value transferred by the last input capture 4 event (IC4). The TIMx_CCR4 register is read-only and cannot be programmed.
0x40000448 B  REGISTER DCR (rw): DMA control register
0x40000448 C   FIELD 00w05 DBA (rw): DMA base address This 5-bit vector defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ... Example: Let us consider the following transfer: DBL = 7 transfers & DBA = TIMx_CR1. In this case the transfer is done to/from 7 registers starting from the TIMx_CR1 address.
0x40000448 C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit vector defines the number of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address). ...
0x4000044C B  REGISTER DMAR (rw): DMA address for full transfer
0x4000044C C   FIELD 00w16 DMAB: DMA register for burst accesses
0x40000450 B  REGISTER OR1 (rw): TIM option register
0x40000450 C   FIELD 00w01 OCREF_CLR (rw): Ocref_clr source selection This bit selects the ocref_clr input source.
0x40000460 B  REGISTER AF1 (rw): TIM alternate function option register 1
0x40000460 C   FIELD 14w04 ETRSEL (rw): ETR source selection These bits select the ETR input source. Others: Reserved
0x40000468 B  REGISTER TISEL (rw): TIM alternate function option register 1
0x40000468 C   FIELD 00w04 TI1SEL (rw): TI1[0] to TI1[15] input selection These bits select the TI1[0] to TI1[15] input source. Others: Reserved
0x40000468 C   FIELD 08w04 TI2SEL (rw): TI2[0] to TI2[15] input selection These bits select the TI2[0] to TI2[15] input source. Others: Reserved
0x40001000 A PERIPHERAL TIM6
0x40001000 B  REGISTER CR1 (rw): control register 1
0x40001000 C   FIELD 00w01 CEN (rw): Counter enable Note: Gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware. CEN is cleared automatically in one-pulse mode, when an update event occurs.
0x40001000 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40001000 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40001000 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40001000 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40001000 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40001004 B  REGISTER CR2 (rw): control register 2
0x40001004 C   FIELD 04w03 MMS (rw): Master mode selection These bits are used to select the information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows: When the Counter Enable signal is controlled by the trigger input, there is a delay on TRGO, except if the master/slave mode is selected (see the MSM bit description in the TIMx_SMCR register). Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x4000100C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000100C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000100C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x40001010 B  REGISTER SR (rw): status register
0x40001010 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value and if UDIS = 0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in the TIMx_EGR register, if URS = 0 and UDIS = 0 in the TIMx_CR1 register.
0x40001014 B  REGISTER EGR (wo): event generation register
0x40001014 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40001024 B  REGISTER CNT (rw): counter
0x40001024 C   FIELD 00w16 CNT (rw): Counter value
0x40001024 C   FIELD 31w01 UIFCPY (ro): UIF Copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in TIMx_CR1 is reset, bit 31 is reserved and read as 0.
0x40001028 B  REGISTER PSC (rw): prescaler
0x40001028 C   FIELD 00w16 PSC: Prescaler value
0x4000102C B  REGISTER ARR (rw): auto-reload register
0x4000102C C   FIELD 00w16 ARR: Prescaler value
0x40001400 A PERIPHERAL TIM7
0x40001400 B  REGISTER CR1 (rw): control register 1
0x40001400 C   FIELD 00w01 CEN (rw): Counter enable Note: Gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware. CEN is cleared automatically in one-pulse mode, when an update event occurs.
0x40001400 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40001400 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40001400 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40001400 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40001400 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40001404 B  REGISTER CR2 (rw): control register 2
0x40001404 C   FIELD 04w03 MMS (rw): Master mode selection These bits are used to select the information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows: When the Counter Enable signal is controlled by the trigger input, there is a delay on TRGO, except if the master/slave mode is selected (see the MSM bit description in the TIMx_SMCR register). Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x4000140C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000140C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000140C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x40001410 B  REGISTER SR (rw): status register
0x40001410 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value and if UDIS = 0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in the TIMx_EGR register, if URS = 0 and UDIS = 0 in the TIMx_CR1 register.
0x40001414 B  REGISTER EGR (wo): event generation register
0x40001414 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40001424 B  REGISTER CNT (rw): counter
0x40001424 C   FIELD 00w16 CNT (rw): Counter value
0x40001424 C   FIELD 31w01 UIFCPY (ro): UIF Copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in TIMx_CR1 is reset, bit 31 is reserved and read as 0.
0x40001428 B  REGISTER PSC (rw): prescaler
0x40001428 C   FIELD 00w16 PSC: Prescaler value
0x4000142C B  REGISTER ARR (rw): auto-reload register
0x4000142C C   FIELD 00w16 ARR: Prescaler value
0x40002000 A PERIPHERAL TIM14
0x40002000 B  REGISTER CR1 (rw): control register 1
0x40002000 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock and gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x40002000 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable update interrupt (UEV) event generation. Counter overflow Setting the UG bit. Buffered registers are then loaded with their preload values.
0x40002000 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the update interrupt (UEV) sources. Counter overflow Setting the UG bit
0x40002000 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40002000 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40002000 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and sampling clock used by the digital filters (TIx),
0x40002000 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x4000200C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000200C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000200C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x40002010 B  REGISTER SR (rw): status register
0x40002010 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow and if UDIS=â0â in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=â0â and UDIS=â0â in the TIMx_CR1 register.
0x40002010 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when he content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40002010 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40002014 B  REGISTER EGR (wo): event generation register
0x40002014 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40002014 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40002018 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40002018 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40002018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = 0 in TIMx_CCER).
0x40002018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = 0 in TIMx_CCER).
0x40002018 C   FIELD 02w01 OC1FE (rw): Output compare 1 fast enable This bit decreases the latency between a trigger event and a transition on the timer output. It must be used in one-pulse mode (OPM bit set in TIMx_CR1 register), to have the output pulse starting as soon as possible after the starting trigger.
0x40002018 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (IC1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x40002018 C   FIELD 03w01 OC1PE (rw): Output compare 1 preload enable Note: The PWM mode can be used without validating the preload register only in one pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
0x40002018 C   FIELD 04w03 OC1M1 (rw): Output compare 1 mode (refer to bit 16 for OC1M[3]) These bits define the behavior of the output reference signal OC1REF from which OC1 is derived. OC1REF is active high whereas OC1 active level depends on CC1P bit. Others: Reserved Note: In PWM mode 1 or 2, the OCREF level changes when the result of the comparison changes or when the output compare mode switches from frozen to PWM mode. Note: The OC1M[3] bit is not contiguous, located in bit 16.
0x40002018 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample TI1 input and the length of the digital filter applied to TI1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40002018 C   FIELD 16w01 OC1M2 (rw): Output compare 1 mode (refer to bit 16 for OC1M[3]) These bits define the behavior of the output reference signal OC1REF from which OC1 is derived. OC1REF is active high whereas OC1 active level depends on CC1P bit. Others: Reserved Note: In PWM mode 1 or 2, the OCREF level changes when the result of the comparison changes or when the output compare mode switches from frozen to PWM mode. Note: The OC1M[3] bit is not contiguous, located in bit 16.
0x40002020 B  REGISTER CCER (rw): capture/compare enable register
0x40002020 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable.
0x40002020 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output Polarity. When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: This configuration is reserved, it must not be used.
0x40002020 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 complementary output Polarity. CC1 channel configured as output: CC1NP must be kept cleared. CC1 channel configured as input: CC1NP bit is used in conjunction with CC1P to define TI1FP1 polarity (refer to CC1P description).
0x40002024 B  REGISTER CNT (rw): counter
0x40002024 C   FIELD 00w16 CNT: low counter value
0x40002024 C   FIELD 31w01 UIFCPY: UIF Copy
0x40002028 B  REGISTER PSC (rw): prescaler
0x40002028 C   FIELD 00w16 PSC: Prescaler value
0x4000202C B  REGISTER ARR (rw): auto-reload register
0x4000202C C   FIELD 00w16 ARR: Low Auto-reload value
0x40002034 B  REGISTER CCR1 (rw): capture/compare register 1
0x40002034 C   FIELD 00w16 CCR1: Low Capture/Compare 1 value
0x40002068 B  REGISTER TISEL (rw): TIM timer input selection register
0x40002068 C   FIELD 00w04 TI1SEL (rw): selects TI1[0] to TI1[15] input Others: Reserved
0x40002C00 A PERIPHERAL WWDG
0x40002C00 B  REGISTER WWDG_CR (rw): Control register
0x40002C00 C   FIELD 00w07 T (rw): 7-bit counter (MSB to LSB) These bits contain the value of the watchdog counter, decremented every (4096 x 2WDGTB[1:0]) PCLK cycles. A reset is produced when it is decremented from 0x40 to 0x3F (T6 becomes cleared).
0x40002C00 C   FIELD 07w01 WDGA (rw): Activation bit This bit is set by software and only cleared by hardware after a reset. When WDGAÂ =Â 1, the watchdog can generate a reset.
0x40002C04 B  REGISTER WWDG_CFR (rw): Configuration register
0x40002C04 C   FIELD 00w07 W (rw): 7-bit window value These bits contain the window value to be compared with the down-counter.
0x40002C04 C   FIELD 09w01 EWI (rw): Early wakeup interrupt When set, an interrupt occurs whenever the counter reaches the value 0x40. This interrupt is only cleared by hardware after a reset.
0x40002C04 C   FIELD 11w03 WDGTB (rw): Timer base The timebase of the prescaler can be modified as follows:
0x40002C08 B  REGISTER WWDG_SR (rw): Status register
0x40002C08 C   FIELD 00w01 EWIF: Early wakeup interrupt flag
0x40003000 A PERIPHERAL IWDG
0x40003000 B  REGISTER IWDG_KR (wo): Key register
0x40003000 C   FIELD 00w16 KEY: Key value (write only, read 0x0000)
0x40003004 B  REGISTER IWDG_PR (rw): Prescaler register
0x40003004 C   FIELD 00w03 PR (rw): Prescaler divider These bits are write access protected see . They are written by software to select the prescaler divider feeding the counter clock. PVU bit of the must be reset in order to be able to change the prescaler divider. Note: Reading this register returns the prescaler value from the VDD voltage domain. This value may not be up to date/valid if a write operation to this register is ongoing. For this reason the value read from this register is valid only when the PVU bit in the status register (IWDG_SR) is reset.
0x40003008 B  REGISTER IWDG_RLR (rw): Reload register
0x40003008 C   FIELD 00w12 RL: Watchdog counter reload value
0x4000300C B  REGISTER IWDG_SR (ro): Status register
0x4000300C C   FIELD 00w01 PVU (ro): Watchdog prescaler value update This bit is set by hardware to indicate that an update of the prescaler value is ongoing. It is reset by hardware when the prescaler update operation is completed in the VDD voltage domain (takes up to five LSI cycles). Prescaler value can be updated only when PVU bit is reset.
0x4000300C C   FIELD 01w01 RVU (ro): Watchdog counter reload value update This bit is set by hardware to indicate that an update of the reload value is ongoing. It is reset by hardware when the reload value update operation is completed in the VDD voltage domain (takes up to five LSI cycles). Reload value can be updated only when RVU bit is reset.
0x4000300C C   FIELD 02w01 WVU (ro): Watchdog counter window value update This bit is set by hardware to indicate that an update of the window value is ongoing. It is reset by hardware when the reload value update operation is completed in the VDD voltage domain (takes up to five LSI cycles). Window value can be updated only when WVU bit is reset.
0x40003010 B  REGISTER IWDG_WINR (rw): Window register
0x40003010 C   FIELD 00w12 WIN: Watchdog counter window value
0x40004400 A PERIPHERAL USART2
0x40004400 B  REGISTER CR1_FIFO_DISABLED (rw): Control register 1
0x40004400 B  REGISTER CR1_FIFO_ENABLED (rw): Control register 1
0x40004400 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004400 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004400 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004400 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004400 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004400 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004400 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004400 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004400 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40004400 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40004400 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004400 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004400 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004400 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004400 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004400 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004400 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004400 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004400 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004400 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004400 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004400 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004400 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004400 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004400 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004400 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004400 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40004400 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40004400 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004400 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004400 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004400 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004400 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004400 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004400 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40004404 B  REGISTER CR2 (rw): Control register 2
0x40004404 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40004404 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the SCLK pin in synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see and ) This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the SCLK pin. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If neither synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to . In Smartcard mode, in order to provide correctly the SCLK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 UE = 1
0x40004404 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004404 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004404 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004404 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004404 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004404 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004404 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UEÂ =Â 0). Note: If DATAINVÂ =Â 1 and/or MSBFIRSTÂ =Â 1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004404 C   FIELD 24w08 ADD (rw): Address of the USART node ADD[7:4]: These bits give the address of the USART node or a character code to be recognized. They are used to wake up the MCU with 7-bit address mark detection in multiprocessor communication during Mute mode or low-power mode. The MSB of the character sent by the transmitter should be equal to 1. They can also be used for character detection during normal reception, Mute mode inactive (for example, end of block detection in ModBus protocol). In this case, the whole received character (8-bit) is compared to the ADD[7:0] value and CMF flag is set on match. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0). ADD[3:0]: These bits give the address of the USART node or a character code to be recognized. They are used for wakeup with address mark detection, in multiprocessor communication during Mute mode or low-power mode. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0).
0x40004408 B  REGISTER CR3 (rw): Control register 3
0x40004408 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FEÂ =Â 1 or OREÂ =Â 1 or NEÂ =Â 1 or UDR = 1 in the USART_ISR register).
0x40004408 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004408 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40004408 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40004408 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004408 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data is written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: This control bit enables checking the communication flow w/o reading the data
0x40004408 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40004408 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. .
0x40004408 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UEÂ =Â 0). When the USART is enabled (UEÂ =Â 1), this bitfield may only be written to 0x0, in order to stop retransmission. Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 20w02 WUS (rw): Wakeup from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wakeup from low-power mode flag). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004408 C   FIELD 22w01 WUFIE (rw): Wakeup from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004408 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004408 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004408 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40004408 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004408 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x4000440C B  REGISTER BRR (rw): Baud rate register
0x4000440C C   FIELD 00w16 BRR (rw): USART baud rate
0x40004410 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40004410 C   FIELD 00w08 PSC (rw): Prescaler value In IrDA low-power and normal IrDA mode: PSC[7:0] = IrDA Normal and Low-Power baud rate PSC[7:0] is used to program the prescaler for dividing the USART source clock to achieve the low-power frequency: the source clock is divided by the value given in the register (8 significant bits): In Smartcard mode: PSC[4:0]Â =Â Prescaler value PSC[4:0] is used to program the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... 0010Â 0000: Divides the source clock by 32 (IrDA mode) ... 1111Â 1111: Divides the source clock by 255 (IrDA mode) This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. This bitfield is reserved and forced by hardware to '0â when the Smartcard and IrDA modes are not supported. Refer to .
0x40004410 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004414 B  REGISTER RTOR (rw): Receiver timeout register
0x40004414 C   FIELD 00w24 RTO: Receiver timeout value
0x40004414 C   FIELD 24w08 BLEN: Block Length
0x40004418 B  REGISTER RQR (wo): Request register
0x40004418 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF flag in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004418 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software should wait for the TXE flag assertion before setting the SBKRQ bit.
0x40004418 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40004418 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40004418 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing '1â to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4000441C B  REGISTER ISR_FIFO_DISABLED (ro): Interrupt & status register
0x4000441C B  REGISTER ISR_FIFO_ENABLED (ro): Interrupt & status register
0x4000441C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register.
0x4000441C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register.
0x4000441C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861). This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861).
0x4000441C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIEÂ =Â 1 or EIE = 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000441C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNEÂ =Â 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIEÂ =Â 1 or EIE Â =Â 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000441C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x4000441C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x4000441C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIEÂ =Â 1 in the USART_CR1 register.
0x4000441C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIEÂ =Â 1 in the USART_CR1 register.
0x4000441C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is set immediately.
0x4000441C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXFE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is immediately set.
0x4000441C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard TÂ =Â 0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit Â =Â 1 in the USART_CR1 register.
0x4000441C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF should be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). This bit is used during single buffer transmission.
0x4000441C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000441C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000441C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x4000441C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x4000441C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000441C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000441C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x4000441C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x4000441C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000441C C   FIELD 23w01 TXFE (ro): TXFIFO empty This bit is set by hardware when TXFIFO is empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit Â =Â 1 (bit 30) in the USART_CR1 register.
0x4000441C C   FIELD 24w01 RXFF (ro): RXFIFO full This bit is set by hardware when the number of received data corresponds to RXFIFOÂ sizeÂ +Â 1 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit Â =Â 1 in the USART_CR1 register.
0x4000441C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x4000441C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x4000441C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit Â =Â 1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to '101â, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x4000441C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit Â =Â 1 (bit 31) in the USART_CR3 register.
0x40004420 B  REGISTER ICR (wo): Interrupt flag clear register
0x40004420 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40004420 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40004420 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40004420 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40004420 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40004420 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40004420 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40004420 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40004420 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004420 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004420 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004420 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004420 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to
0x40004420 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40004420 C   FIELD 20w01 WUCF (wo): Wakeup from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004424 B  REGISTER RDR (ro): Receive data register
0x40004424 C   FIELD 00w09 RDR: Receive data value
0x40004428 B  REGISTER TDR (rw): Transmit data register
0x40004428 C   FIELD 00w09 TDR: Transmit data value
0x4000442C B  REGISTER PRESC (rw): Prescaler register
0x4000442C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is 1011 i.e. input clock divided by 256.
0x40004800 A PERIPHERAL USART3
0x40004800 B  REGISTER CR1_FIFO_DISABLED (rw): Control register 1
0x40004800 B  REGISTER CR1_FIFO_ENABLED (rw): Control register 1
0x40004800 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004800 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004800 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004800 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004800 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004800 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004800 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004800 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004800 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40004800 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40004800 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004800 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004800 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004800 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004800 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004800 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004800 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004800 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004800 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004800 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004800 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004800 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004800 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004800 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004800 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004800 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004800 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40004800 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40004800 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004800 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004800 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004800 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004800 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004800 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004800 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40004804 B  REGISTER CR2 (rw): Control register 2
0x40004804 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40004804 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the SCLK pin in synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see and ) This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the SCLK pin. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If neither synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to . In Smartcard mode, in order to provide correctly the SCLK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 UE = 1
0x40004804 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004804 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004804 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004804 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004804 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004804 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004804 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UEÂ =Â 0). Note: If DATAINVÂ =Â 1 and/or MSBFIRSTÂ =Â 1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004804 C   FIELD 24w08 ADD (rw): Address of the USART node ADD[7:4]: These bits give the address of the USART node or a character code to be recognized. They are used to wake up the MCU with 7-bit address mark detection in multiprocessor communication during Mute mode or low-power mode. The MSB of the character sent by the transmitter should be equal to 1. They can also be used for character detection during normal reception, Mute mode inactive (for example, end of block detection in ModBus protocol). In this case, the whole received character (8-bit) is compared to the ADD[7:0] value and CMF flag is set on match. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0). ADD[3:0]: These bits give the address of the USART node or a character code to be recognized. They are used for wakeup with address mark detection, in multiprocessor communication during Mute mode or low-power mode. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0).
0x40004808 B  REGISTER CR3 (rw): Control register 3
0x40004808 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FEÂ =Â 1 or OREÂ =Â 1 or NEÂ =Â 1 or UDR = 1 in the USART_ISR register).
0x40004808 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004808 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40004808 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40004808 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004808 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data is written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: This control bit enables checking the communication flow w/o reading the data
0x40004808 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40004808 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. .
0x40004808 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UEÂ =Â 0). When the USART is enabled (UEÂ =Â 1), this bitfield may only be written to 0x0, in order to stop retransmission. Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 20w02 WUS (rw): Wakeup from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wakeup from low-power mode flag). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004808 C   FIELD 22w01 WUFIE (rw): Wakeup from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004808 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004808 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004808 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40004808 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004808 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x4000480C B  REGISTER BRR (rw): Baud rate register
0x4000480C C   FIELD 00w16 BRR (rw): USART baud rate
0x40004810 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40004810 C   FIELD 00w08 PSC (rw): Prescaler value In IrDA low-power and normal IrDA mode: PSC[7:0] = IrDA Normal and Low-Power baud rate PSC[7:0] is used to program the prescaler for dividing the USART source clock to achieve the low-power frequency: the source clock is divided by the value given in the register (8 significant bits): In Smartcard mode: PSC[4:0]Â =Â Prescaler value PSC[4:0] is used to program the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... 0010Â 0000: Divides the source clock by 32 (IrDA mode) ... 1111Â 1111: Divides the source clock by 255 (IrDA mode) This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. This bitfield is reserved and forced by hardware to '0â when the Smartcard and IrDA modes are not supported. Refer to .
0x40004810 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004814 B  REGISTER RTOR (rw): Receiver timeout register
0x40004814 C   FIELD 00w24 RTO: Receiver timeout value
0x40004814 C   FIELD 24w08 BLEN: Block Length
0x40004818 B  REGISTER RQR (wo): Request register
0x40004818 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF flag in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004818 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software should wait for the TXE flag assertion before setting the SBKRQ bit.
0x40004818 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40004818 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40004818 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing '1â to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4000481C B  REGISTER ISR_FIFO_DISABLED (ro): Interrupt & status register
0x4000481C B  REGISTER ISR_FIFO_ENABLED (ro): Interrupt & status register
0x4000481C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register.
0x4000481C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register.
0x4000481C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861). This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861).
0x4000481C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIEÂ =Â 1 or EIE = 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000481C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNEÂ =Â 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIEÂ =Â 1 or EIE Â =Â 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000481C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x4000481C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x4000481C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIEÂ =Â 1 in the USART_CR1 register.
0x4000481C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIEÂ =Â 1 in the USART_CR1 register.
0x4000481C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is set immediately.
0x4000481C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXFE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is immediately set.
0x4000481C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard TÂ =Â 0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit Â =Â 1 in the USART_CR1 register.
0x4000481C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF should be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). This bit is used during single buffer transmission.
0x4000481C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000481C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000481C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x4000481C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x4000481C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000481C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000481C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x4000481C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x4000481C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000481C C   FIELD 23w01 TXFE (ro): TXFIFO empty This bit is set by hardware when TXFIFO is empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit Â =Â 1 (bit 30) in the USART_CR1 register.
0x4000481C C   FIELD 24w01 RXFF (ro): RXFIFO full This bit is set by hardware when the number of received data corresponds to RXFIFOÂ sizeÂ +Â 1 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit Â =Â 1 in the USART_CR1 register.
0x4000481C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x4000481C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x4000481C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit Â =Â 1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to '101â, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x4000481C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit Â =Â 1 (bit 31) in the USART_CR3 register.
0x40004820 B  REGISTER ICR (wo): Interrupt flag clear register
0x40004820 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40004820 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40004820 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40004820 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40004820 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40004820 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40004820 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40004820 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40004820 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004820 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004820 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004820 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004820 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to
0x40004820 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40004820 C   FIELD 20w01 WUCF (wo): Wakeup from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004824 B  REGISTER RDR (ro): Receive data register
0x40004824 C   FIELD 00w09 RDR: Receive data value
0x40004828 B  REGISTER TDR (rw): Transmit data register
0x40004828 C   FIELD 00w09 TDR: Transmit data value
0x4000482C B  REGISTER PRESC (rw): Prescaler register
0x4000482C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is 1011 i.e. input clock divided by 256.
0x40004C00 A PERIPHERAL USART4
0x40004C00 B  REGISTER CR1_FIFO_DISABLED (rw): Control register 1
0x40004C00 B  REGISTER CR1_FIFO_ENABLED (rw): Control register 1
0x40004C00 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004C00 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004C00 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004C00 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004C00 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004C00 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004C00 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004C00 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004C00 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40004C00 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40004C00 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C00 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C00 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C00 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C00 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C00 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C00 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C00 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C00 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004C00 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004C00 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004C00 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004C00 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C00 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C00 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C00 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C00 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40004C00 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40004C00 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004C00 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004C00 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004C00 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004C00 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004C00 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004C00 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40004C04 B  REGISTER CR2 (rw): Control register 2
0x40004C04 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40004C04 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the SCLK pin in synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see and ) This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the SCLK pin. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If neither synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to . In Smartcard mode, in order to provide correctly the SCLK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 UE = 1
0x40004C04 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C04 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C04 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C04 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C04 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C04 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C04 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UEÂ =Â 0). Note: If DATAINVÂ =Â 1 and/or MSBFIRSTÂ =Â 1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004C04 C   FIELD 24w08 ADD (rw): Address of the USART node ADD[7:4]: These bits give the address of the USART node or a character code to be recognized. They are used to wake up the MCU with 7-bit address mark detection in multiprocessor communication during Mute mode or low-power mode. The MSB of the character sent by the transmitter should be equal to 1. They can also be used for character detection during normal reception, Mute mode inactive (for example, end of block detection in ModBus protocol). In this case, the whole received character (8-bit) is compared to the ADD[7:0] value and CMF flag is set on match. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0). ADD[3:0]: These bits give the address of the USART node or a character code to be recognized. They are used for wakeup with address mark detection, in multiprocessor communication during Mute mode or low-power mode. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0).
0x40004C08 B  REGISTER CR3 (rw): Control register 3
0x40004C08 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FEÂ =Â 1 or OREÂ =Â 1 or NEÂ =Â 1 or UDR = 1 in the USART_ISR register).
0x40004C08 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C08 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40004C08 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40004C08 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40004C08 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data is written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: This control bit enables checking the communication flow w/o reading the data
0x40004C08 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40004C08 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. .
0x40004C08 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UEÂ =Â 0). When the USART is enabled (UEÂ =Â 1), this bitfield may only be written to 0x0, in order to stop retransmission. Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 20w02 WUS (rw): Wakeup from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wakeup from low-power mode flag). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004C08 C   FIELD 22w01 WUFIE (rw): Wakeup from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004C08 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004C08 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004C08 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40004C08 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004C08 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x40004C0C B  REGISTER BRR (rw): Baud rate register
0x40004C0C C   FIELD 00w16 BRR (rw): USART baud rate
0x40004C10 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40004C10 C   FIELD 00w08 PSC (rw): Prescaler value In IrDA low-power and normal IrDA mode: PSC[7:0] = IrDA Normal and Low-Power baud rate PSC[7:0] is used to program the prescaler for dividing the USART source clock to achieve the low-power frequency: the source clock is divided by the value given in the register (8 significant bits): In Smartcard mode: PSC[4:0]Â =Â Prescaler value PSC[4:0] is used to program the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... 0010Â 0000: Divides the source clock by 32 (IrDA mode) ... 1111Â 1111: Divides the source clock by 255 (IrDA mode) This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. This bitfield is reserved and forced by hardware to '0â when the Smartcard and IrDA modes are not supported. Refer to .
0x40004C10 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C14 B  REGISTER RTOR (rw): Receiver timeout register
0x40004C14 C   FIELD 00w24 RTO: Receiver timeout value
0x40004C14 C   FIELD 24w08 BLEN: Block Length
0x40004C18 B  REGISTER RQR (wo): Request register
0x40004C18 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF flag in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40004C18 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software should wait for the TXE flag assertion before setting the SBKRQ bit.
0x40004C18 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40004C18 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40004C18 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing '1â to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x40004C1C B  REGISTER ISR_FIFO_DISABLED (ro): Interrupt & status register
0x40004C1C B  REGISTER ISR_FIFO_ENABLED (ro): Interrupt & status register
0x40004C1C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register.
0x40004C1C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register.
0x40004C1C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861). This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861).
0x40004C1C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIEÂ =Â 1 or EIE = 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x40004C1C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNEÂ =Â 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIEÂ =Â 1 or EIE Â =Â 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x40004C1C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x40004C1C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x40004C1C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIEÂ =Â 1 in the USART_CR1 register.
0x40004C1C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIEÂ =Â 1 in the USART_CR1 register.
0x40004C1C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is set immediately.
0x40004C1C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXFE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is immediately set.
0x40004C1C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard TÂ =Â 0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit Â =Â 1 in the USART_CR1 register.
0x40004C1C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF should be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). This bit is used during single buffer transmission.
0x40004C1C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x40004C1C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x40004C1C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x40004C1C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x40004C1C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x40004C1C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x40004C1C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x40004C1C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x40004C1C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40004C1C C   FIELD 23w01 TXFE (ro): TXFIFO empty This bit is set by hardware when TXFIFO is empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit Â =Â 1 (bit 30) in the USART_CR1 register.
0x40004C1C C   FIELD 24w01 RXFF (ro): RXFIFO full This bit is set by hardware when the number of received data corresponds to RXFIFOÂ sizeÂ +Â 1 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit Â =Â 1 in the USART_CR1 register.
0x40004C1C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x40004C1C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x40004C1C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit Â =Â 1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to '101â, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x40004C1C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit Â =Â 1 (bit 31) in the USART_CR3 register.
0x40004C20 B  REGISTER ICR (wo): Interrupt flag clear register
0x40004C20 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40004C20 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40004C20 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40004C20 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40004C20 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40004C20 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40004C20 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40004C20 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40004C20 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C20 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40004C20 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004C20 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40004C20 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to
0x40004C20 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40004C20 C   FIELD 20w01 WUCF (wo): Wakeup from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40004C24 B  REGISTER RDR (ro): Receive data register
0x40004C24 C   FIELD 00w09 RDR: Receive data value
0x40004C28 B  REGISTER TDR (rw): Transmit data register
0x40004C28 C   FIELD 00w09 TDR: Transmit data value
0x40004C2C B  REGISTER PRESC (rw): Prescaler register
0x40004C2C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is 1011 i.e. input clock divided by 256.
0x40005000 A PERIPHERAL USART5
0x40005000 B  REGISTER CR1_FIFO_DISABLED (rw): Control register 1
0x40005000 B  REGISTER CR1_FIFO_ENABLED (rw): Control register 1
0x40005000 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40005000 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40005000 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40005000 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40005000 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40005000 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40005000 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40005000 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40005000 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40005000 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40005000 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005000 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005000 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005000 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005000 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005000 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005000 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40005000 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40005000 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40005000 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40005000 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40005000 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40005000 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005000 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005000 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005000 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005000 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40005000 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40005000 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40005000 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40005000 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40005000 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40005000 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40005000 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40005000 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40005000 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40005004 B  REGISTER CR2 (rw): Control register 2
0x40005004 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40005004 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the SCLK pin in synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see and ) This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the SCLK pin. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If neither synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to . In Smartcard mode, in order to provide correctly the SCLK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 UE = 1
0x40005004 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005004 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005004 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005004 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005004 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005004 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40005004 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UEÂ =Â 0). Note: If DATAINVÂ =Â 1 and/or MSBFIRSTÂ =Â 1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to .
0x40005004 C   FIELD 24w08 ADD (rw): Address of the USART node ADD[7:4]: These bits give the address of the USART node or a character code to be recognized. They are used to wake up the MCU with 7-bit address mark detection in multiprocessor communication during Mute mode or low-power mode. The MSB of the character sent by the transmitter should be equal to 1. They can also be used for character detection during normal reception, Mute mode inactive (for example, end of block detection in ModBus protocol). In this case, the whole received character (8-bit) is compared to the ADD[7:0] value and CMF flag is set on match. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0). ADD[3:0]: These bits give the address of the USART node or a character code to be recognized. They are used for wakeup with address mark detection, in multiprocessor communication during Mute mode or low-power mode. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0).
0x40005008 B  REGISTER CR3 (rw): Control register 3
0x40005008 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FEÂ =Â 1 or OREÂ =Â 1 or NEÂ =Â 1 or UDR = 1 in the USART_ISR register).
0x40005008 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40005008 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40005008 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40005008 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40005008 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data is written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: This control bit enables checking the communication flow w/o reading the data
0x40005008 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40005008 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. .
0x40005008 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UEÂ =Â 0). When the USART is enabled (UEÂ =Â 1), this bitfield may only be written to 0x0, in order to stop retransmission. Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 20w02 WUS (rw): Wakeup from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wakeup from low-power mode flag). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40005008 C   FIELD 22w01 WUFIE (rw): Wakeup from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40005008 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40005008 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40005008 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40005008 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40005008 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x4000500C B  REGISTER BRR (rw): Baud rate register
0x4000500C C   FIELD 00w16 BRR (rw): USART baud rate
0x40005010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40005010 C   FIELD 00w08 PSC (rw): Prescaler value In IrDA low-power and normal IrDA mode: PSC[7:0] = IrDA Normal and Low-Power baud rate PSC[7:0] is used to program the prescaler for dividing the USART source clock to achieve the low-power frequency: the source clock is divided by the value given in the register (8 significant bits): In Smartcard mode: PSC[4:0]Â =Â Prescaler value PSC[4:0] is used to program the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... 0010Â 0000: Divides the source clock by 32 (IrDA mode) ... 1111Â 1111: Divides the source clock by 255 (IrDA mode) This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. This bitfield is reserved and forced by hardware to '0â when the Smartcard and IrDA modes are not supported. Refer to .
0x40005010 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005014 B  REGISTER RTOR (rw): Receiver timeout register
0x40005014 C   FIELD 00w24 RTO: Receiver timeout value
0x40005014 C   FIELD 24w08 BLEN: Block Length
0x40005018 B  REGISTER RQR (wo): Request register
0x40005018 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF flag in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40005018 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software should wait for the TXE flag assertion before setting the SBKRQ bit.
0x40005018 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40005018 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40005018 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing '1â to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4000501C B  REGISTER ISR_FIFO_DISABLED (ro): Interrupt & status register
0x4000501C B  REGISTER ISR_FIFO_ENABLED (ro): Interrupt & status register
0x4000501C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register.
0x4000501C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000501C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register.
0x4000501C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000501C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861). This error is associated with the character in the USART_RDR.
0x4000501C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861).
0x4000501C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIEÂ =Â 1 or EIE = 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000501C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNEÂ =Â 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIEÂ =Â 1 or EIE Â =Â 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000501C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x4000501C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x4000501C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIEÂ =Â 1 in the USART_CR1 register.
0x4000501C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIEÂ =Â 1 in the USART_CR1 register.
0x4000501C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is set immediately.
0x4000501C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXFE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is immediately set.
0x4000501C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard TÂ =Â 0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit Â =Â 1 in the USART_CR1 register.
0x4000501C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF should be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). This bit is used during single buffer transmission.
0x4000501C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000501C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000501C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000501C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x4000501C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x4000501C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000501C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000501C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x4000501C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x4000501C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4000501C C   FIELD 23w01 TXFE (ro): TXFIFO empty This bit is set by hardware when TXFIFO is empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit Â =Â 1 (bit 30) in the USART_CR1 register.
0x4000501C C   FIELD 24w01 RXFF (ro): RXFIFO full This bit is set by hardware when the number of received data corresponds to RXFIFOÂ sizeÂ +Â 1 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit Â =Â 1 in the USART_CR1 register.
0x4000501C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x4000501C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x4000501C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit Â =Â 1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to '101â, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x4000501C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit Â =Â 1 (bit 31) in the USART_CR3 register.
0x40005020 B  REGISTER ICR (wo): Interrupt flag clear register
0x40005020 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40005020 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40005020 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40005020 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40005020 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40005020 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40005020 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40005020 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40005020 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005020 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40005020 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40005020 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40005020 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to
0x40005020 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40005020 C   FIELD 20w01 WUCF (wo): Wakeup from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40005024 B  REGISTER RDR (ro): Receive data register
0x40005024 C   FIELD 00w09 RDR: Receive data value
0x40005028 B  REGISTER TDR (rw): Transmit data register
0x40005028 C   FIELD 00w09 TDR: Transmit data value
0x4000502C B  REGISTER PRESC (rw): Prescaler register
0x4000502C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is 1011 i.e. input clock divided by 256.
0x40005400 A PERIPHERAL I2C1
0x40005400 B  REGISTER I2C_CR1 (rw): Control register 1
0x40005400 C   FIELD 00w01 PE (rw): Peripheral enable Note: When PE=0, the I2C SCL and SDA lines are released. Internal state machines and status bits are put back to their reset value. When cleared, PE must be kept low for at least 3 APB clock cycles.
0x40005400 C   FIELD 01w01 TXIE (rw): TX Interrupt enable
0x40005400 C   FIELD 02w01 RXIE (rw): RX Interrupt enable
0x40005400 C   FIELD 03w01 ADDRIE (rw): Address match Interrupt enable (slave only)
0x40005400 C   FIELD 04w01 NACKIE (rw): Not acknowledge received Interrupt enable
0x40005400 C   FIELD 05w01 STOPIE (rw): Stop detection Interrupt enable
0x40005400 C   FIELD 06w01 TCIE (rw): Transfer Complete interrupt enable Note: Any of these events generate an interrupt: Transfer Complete (TC) Transfer Complete Reload (TCR)
0x40005400 C   FIELD 07w01 ERRIE (rw): Error interrupts enable Note: Any of these errors generate an interrupt: Arbitration Loss (ARLO) Bus Error detection (BERR) Overrun/Underrun (OVR) Timeout detection (TIMEOUT) PEC error detection (PECERR) Alert pin event detection (ALERT)
0x40005400 C   FIELD 08w04 DNF (rw): Digital noise filter These bits are used to configure the digital noise filter on SDA and SCL input. The digital filter, filters spikes with a length of up to DNF[3:0] * tI2CCLK ... Note: If the analog filter is also enabled, the digital filter is added to the analog filter. This filter can only be programmed when the I2C is disabled (PE = 0).
0x40005400 C   FIELD 12w01 ANFOFF (rw): Analog noise filter OFF Note: This bit can only be programmed when the I2C is disabled (PE = 0).
0x40005400 C   FIELD 14w01 TXDMAEN (rw): DMA transmission requests enable
0x40005400 C   FIELD 15w01 RXDMAEN (rw): DMA reception requests enable
0x40005400 C   FIELD 16w01 SBC (rw): Slave byte control This bit is used to enable hardware byte control in slave mode.
0x40005400 C   FIELD 17w01 NOSTRETCH (rw): Clock stretching disable This bit is used to disable clock stretching in slave mode. It must be kept cleared in master mode. Note: This bit can only be programmed when the I2C is disabled (PE = 0).
0x40005400 C   FIELD 18w01 WUPEN (rw): Wakeup from Stop mode enable Note: If the Wakeup from Stop mode feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to . Note: WUPEN can be set only when DNF = '0000â
0x40005400 C   FIELD 19w01 GCEN (rw): General call enable
0x40005400 C   FIELD 20w01 SMBHEN (rw): SMBus Host Address enable Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005400 C   FIELD 21w01 SMBDEN (rw): SMBus Device Default Address enable Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005400 C   FIELD 22w01 ALERTEN (rw): SMBus alert enable Note: When ALERTEN=0, the SMBA pin can be used as a standard GPIO. If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005400 C   FIELD 23w01 PECEN (rw): PEC enable Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005404 B  REGISTER I2C_CR2 (rw): Control register 2
0x40005404 C   FIELD 00w10 SADD (rw): Slave address (master mode) In 7-bit addressing mode (ADD10 = 0): SADD[7:1] should be written with the 7-bit slave address to be sent. The bits SADD[9], SADD[8] and SADD[0] are don't care. In 10-bit addressing mode (ADD10 = 1): SADD[9:0] should be written with the 10-bit slave address to be sent. Note: Changing these bits when the START bit is set is not allowed.
0x40005404 C   FIELD 10w01 RD_WRN (rw): Transfer direction (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005404 C   FIELD 11w01 ADD10 (rw): 10-bit addressing mode (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005404 C   FIELD 12w01 HEAD10R (rw): 10-bit address header only read direction (master receiver mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005404 C   FIELD 13w01 START (rw): Start generation This bit is set by software, and cleared by hardware after the Start followed by the address sequence is sent, by an arbitration loss, by a timeout error detection, or when PE = 0. It can also be cleared by software by writing '1â to the ADDRCF bit in the I2C_ICR register. If the I2C is already in master mode with AUTOEND = 0, setting this bit generates a Repeated Start condition when RELOAD=0, after the end of the NBYTES transfer. Otherwise setting this bit generates a START condition once the bus is free. Note: Writing '0â to this bit has no effect. The START bit can be set even if the bus is BUSY or I2C is in slave mode. This bit has no effect when RELOAD is set.
0x40005404 C   FIELD 14w01 STOP (rw): Stop generation (master mode) The bit is set by software, cleared by hardware when a STOP condition is detected, or when PE = 0. In Master Mode: Note: Writing '0â to this bit has no effect.
0x40005404 C   FIELD 15w01 NACK (rw): NACK generation (slave mode) The bit is set by software, cleared by hardware when the NACK is sent, or when a STOP condition or an Address matched is received, or when PE=0. Note: Writing '0â to this bit has no effect. This bit is used in slave mode only: in master receiver mode, NACK is automatically generated after last byte preceding STOP or RESTART condition, whatever the NACK bit value. When an overrun occurs in slave receiver NOSTRETCH mode, a NACK is automatically generated whatever the NACK bit value. When hardware PEC checking is enabled (PECBYTE=1), the PEC acknowledge value does not depend on the NACK value.
0x40005404 C   FIELD 16w08 NBYTES (rw): Number of bytes The number of bytes to be transmitted/received is programmed there. This field is donât care in slave mode with SBC=0. Note: Changing these bits when the START bit is set is not allowed.
0x40005404 C   FIELD 24w01 RELOAD (rw): NBYTES reload mode This bit is set and cleared by software.
0x40005404 C   FIELD 25w01 AUTOEND (rw): Automatic end mode (master mode) This bit is set and cleared by software. Note: This bit has no effect in slave mode or when the RELOAD bit is set.
0x40005404 C   FIELD 26w01 PECBYTE (rw): Packet error checking byte This bit is set by software, and cleared by hardware when the PEC is transferred, or when a STOP condition or an Address matched is received, also when PE=0. Note: Writing '0â to this bit has no effect. This bit has no effect when RELOAD is set. This bit has no effect is slave mode when SBC=0. If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005408 B  REGISTER I2C_OAR1 (rw): Own address register 1
0x40005408 C   FIELD 00w10 OA1 (rw): Interface own slave address 7-bit addressing mode: OA1[7:1] contains the 7-bit own slave address. The bits OA1[9], OA1[8] and OA1[0] are don't care. 10-bit addressing mode: OA1[9:0] contains the 10-bit own slave address. Note: These bits can be written only when OA1EN=0.
0x40005408 C   FIELD 10w01 OA1MODE (rw): Own Address 1 10-bit mode Note: This bit can be written only when OA1EN=0.
0x40005408 C   FIELD 15w01 OA1EN (rw): Own Address 1 enable
0x4000540C B  REGISTER I2C_OAR2 (rw): Own address register 2
0x4000540C C   FIELD 01w07 OA2 (rw): Interface address 7-bit addressing mode: 7-bit address Note: These bits can be written only when OA2EN=0.
0x4000540C C   FIELD 08w03 OA2MSK (rw): Own Address 2 masks Note: These bits can be written only when OA2EN=0. As soon as OA2MSK is not equal to 0, the reserved I2C addresses (0b0000xxx and 0b1111xxx) are not acknowledged even if the comparison matches.
0x4000540C C   FIELD 15w01 OA2EN (rw): Own Address 2 enable
0x40005410 B  REGISTER I2C_TIMINGR (rw): Timing register
0x40005410 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x40005410 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x40005410 C   FIELD 16w04 SDADEL: Data hold time
0x40005410 C   FIELD 20w04 SCLDEL: Data setup time
0x40005410 C   FIELD 28w04 PRESC: Timing prescaler
0x40005414 B  REGISTER I2C_TIMEOUTR (rw): Status register 1
0x40005414 C   FIELD 00w12 TIMEOUTA (rw): Bus Timeout A This field is used to configure: The SCL low timeout condition tTIMEOUT when TIDLE=0 tTIMEOUT= (TIMEOUTA+1) x 2048 x tI2CCLK The bus idle condition (both SCL and SDA high) when TIDLE=1 tIDLE= (TIMEOUTA+1) x 4 x tI2CCLK Note: These bits can be written only when TIMOUTEN=0.
0x40005414 C   FIELD 12w01 TIDLE (rw): Idle clock timeout detection Note: This bit can be written only when TIMOUTEN=0.
0x40005414 C   FIELD 15w01 TIMOUTEN (rw): Clock timeout enable
0x40005414 C   FIELD 16w12 TIMEOUTB (rw): Bus timeout B This field is used to configure the cumulative clock extension timeout: In master mode, the master cumulative clock low extend time (tLOW:MEXT) is detected In slave mode, the slave cumulative clock low extend time (tLOW:SEXT) is detected tLOW:EXT= (TIMEOUTB+1) x 2048 x tI2CCLK Note: These bits can be written only when TEXTEN=0.
0x40005414 C   FIELD 31w01 TEXTEN (rw): Extended clock timeout enable
0x40005418 B  REGISTER I2C_ISR: Interrupt and Status register
0x40005418 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x40005418 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x40005418 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x40005418 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x40005418 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x40005418 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x40005418 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x40005418 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x40005418 C   FIELD 08w01 BERR (ro): Bus error
0x40005418 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x40005418 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x40005418 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x40005418 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x40005418 C   FIELD 13w01 ALERT (ro): SMBus alert
0x40005418 C   FIELD 15w01 BUSY (ro): Bus busy
0x40005418 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode) This flag is updated when an address match event occurs (ADDR=1).
0x40005418 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x4000541C B  REGISTER I2C_ICR (wo): Interrupt clear register
0x4000541C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x4000541C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x4000541C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x4000541C C   FIELD 08w01 BERRCF: Bus error flag clear
0x4000541C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x4000541C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x4000541C C   FIELD 11w01 PECCF: PEC Error flag clear
0x4000541C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x4000541C C   FIELD 13w01 ALERTCF: Alert flag clear
0x40005420 B  REGISTER I2C_PECR (ro): PEC register
0x40005420 C   FIELD 00w08 PEC: Packet error checking register
0x40005424 B  REGISTER I2C_RXDR (ro): Receive data register
0x40005424 C   FIELD 00w08 RXDATA: 8-bit receive data
0x40005428 B  REGISTER I2C_TXDR (rw): Transmit data register
0x40005428 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x40005800 A PERIPHERAL I2C2
0x40005800 B  REGISTER I2C_CR1 (rw): Control register 1
0x40005800 C   FIELD 00w01 PE (rw): Peripheral enable Note: When PE=0, the I2C SCL and SDA lines are released. Internal state machines and status bits are put back to their reset value. When cleared, PE must be kept low for at least 3 APB clock cycles.
0x40005800 C   FIELD 01w01 TXIE (rw): TX Interrupt enable
0x40005800 C   FIELD 02w01 RXIE (rw): RX Interrupt enable
0x40005800 C   FIELD 03w01 ADDRIE (rw): Address match Interrupt enable (slave only)
0x40005800 C   FIELD 04w01 NACKIE (rw): Not acknowledge received Interrupt enable
0x40005800 C   FIELD 05w01 STOPIE (rw): Stop detection Interrupt enable
0x40005800 C   FIELD 06w01 TCIE (rw): Transfer Complete interrupt enable Note: Any of these events generate an interrupt: Transfer Complete (TC) Transfer Complete Reload (TCR)
0x40005800 C   FIELD 07w01 ERRIE (rw): Error interrupts enable Note: Any of these errors generate an interrupt: Arbitration Loss (ARLO) Bus Error detection (BERR) Overrun/Underrun (OVR) Timeout detection (TIMEOUT) PEC error detection (PECERR) Alert pin event detection (ALERT)
0x40005800 C   FIELD 08w04 DNF (rw): Digital noise filter These bits are used to configure the digital noise filter on SDA and SCL input. The digital filter, filters spikes with a length of up to DNF[3:0] * tI2CCLK ... Note: If the analog filter is also enabled, the digital filter is added to the analog filter. This filter can only be programmed when the I2C is disabled (PE = 0).
0x40005800 C   FIELD 12w01 ANFOFF (rw): Analog noise filter OFF Note: This bit can only be programmed when the I2C is disabled (PE = 0).
0x40005800 C   FIELD 14w01 TXDMAEN (rw): DMA transmission requests enable
0x40005800 C   FIELD 15w01 RXDMAEN (rw): DMA reception requests enable
0x40005800 C   FIELD 16w01 SBC (rw): Slave byte control This bit is used to enable hardware byte control in slave mode.
0x40005800 C   FIELD 17w01 NOSTRETCH (rw): Clock stretching disable This bit is used to disable clock stretching in slave mode. It must be kept cleared in master mode. Note: This bit can only be programmed when the I2C is disabled (PE = 0).
0x40005800 C   FIELD 18w01 WUPEN (rw): Wakeup from Stop mode enable Note: If the Wakeup from Stop mode feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to . Note: WUPEN can be set only when DNF = '0000â
0x40005800 C   FIELD 19w01 GCEN (rw): General call enable
0x40005800 C   FIELD 20w01 SMBHEN (rw): SMBus Host Address enable Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005800 C   FIELD 21w01 SMBDEN (rw): SMBus Device Default Address enable Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005800 C   FIELD 22w01 ALERTEN (rw): SMBus alert enable Note: When ALERTEN=0, the SMBA pin can be used as a standard GPIO. If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005800 C   FIELD 23w01 PECEN (rw): PEC enable Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005804 B  REGISTER I2C_CR2 (rw): Control register 2
0x40005804 C   FIELD 00w10 SADD (rw): Slave address (master mode) In 7-bit addressing mode (ADD10 = 0): SADD[7:1] should be written with the 7-bit slave address to be sent. The bits SADD[9], SADD[8] and SADD[0] are don't care. In 10-bit addressing mode (ADD10 = 1): SADD[9:0] should be written with the 10-bit slave address to be sent. Note: Changing these bits when the START bit is set is not allowed.
0x40005804 C   FIELD 10w01 RD_WRN (rw): Transfer direction (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005804 C   FIELD 11w01 ADD10 (rw): 10-bit addressing mode (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005804 C   FIELD 12w01 HEAD10R (rw): 10-bit address header only read direction (master receiver mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005804 C   FIELD 13w01 START (rw): Start generation This bit is set by software, and cleared by hardware after the Start followed by the address sequence is sent, by an arbitration loss, by a timeout error detection, or when PE = 0. It can also be cleared by software by writing '1â to the ADDRCF bit in the I2C_ICR register. If the I2C is already in master mode with AUTOEND = 0, setting this bit generates a Repeated Start condition when RELOAD=0, after the end of the NBYTES transfer. Otherwise setting this bit generates a START condition once the bus is free. Note: Writing '0â to this bit has no effect. The START bit can be set even if the bus is BUSY or I2C is in slave mode. This bit has no effect when RELOAD is set.
0x40005804 C   FIELD 14w01 STOP (rw): Stop generation (master mode) The bit is set by software, cleared by hardware when a STOP condition is detected, or when PE = 0. In Master Mode: Note: Writing '0â to this bit has no effect.
0x40005804 C   FIELD 15w01 NACK (rw): NACK generation (slave mode) The bit is set by software, cleared by hardware when the NACK is sent, or when a STOP condition or an Address matched is received, or when PE=0. Note: Writing '0â to this bit has no effect. This bit is used in slave mode only: in master receiver mode, NACK is automatically generated after last byte preceding STOP or RESTART condition, whatever the NACK bit value. When an overrun occurs in slave receiver NOSTRETCH mode, a NACK is automatically generated whatever the NACK bit value. When hardware PEC checking is enabled (PECBYTE=1), the PEC acknowledge value does not depend on the NACK value.
0x40005804 C   FIELD 16w08 NBYTES (rw): Number of bytes The number of bytes to be transmitted/received is programmed there. This field is donât care in slave mode with SBC=0. Note: Changing these bits when the START bit is set is not allowed.
0x40005804 C   FIELD 24w01 RELOAD (rw): NBYTES reload mode This bit is set and cleared by software.
0x40005804 C   FIELD 25w01 AUTOEND (rw): Automatic end mode (master mode) This bit is set and cleared by software. Note: This bit has no effect in slave mode or when the RELOAD bit is set.
0x40005804 C   FIELD 26w01 PECBYTE (rw): Packet error checking byte This bit is set by software, and cleared by hardware when the PEC is transferred, or when a STOP condition or an Address matched is received, also when PE=0. Note: Writing '0â to this bit has no effect. This bit has no effect when RELOAD is set. This bit has no effect is slave mode when SBC=0. If the SMBus feature is not supported, this bit is reserved and forced by hardware to '0â. Refer to .
0x40005808 B  REGISTER I2C_OAR1 (rw): Own address register 1
0x40005808 C   FIELD 00w10 OA1 (rw): Interface own slave address 7-bit addressing mode: OA1[7:1] contains the 7-bit own slave address. The bits OA1[9], OA1[8] and OA1[0] are don't care. 10-bit addressing mode: OA1[9:0] contains the 10-bit own slave address. Note: These bits can be written only when OA1EN=0.
0x40005808 C   FIELD 10w01 OA1MODE (rw): Own Address 1 10-bit mode Note: This bit can be written only when OA1EN=0.
0x40005808 C   FIELD 15w01 OA1EN (rw): Own Address 1 enable
0x4000580C B  REGISTER I2C_OAR2 (rw): Own address register 2
0x4000580C C   FIELD 01w07 OA2 (rw): Interface address 7-bit addressing mode: 7-bit address Note: These bits can be written only when OA2EN=0.
0x4000580C C   FIELD 08w03 OA2MSK (rw): Own Address 2 masks Note: These bits can be written only when OA2EN=0. As soon as OA2MSK is not equal to 0, the reserved I2C addresses (0b0000xxx and 0b1111xxx) are not acknowledged even if the comparison matches.
0x4000580C C   FIELD 15w01 OA2EN (rw): Own Address 2 enable
0x40005810 B  REGISTER I2C_TIMINGR (rw): Timing register
0x40005810 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x40005810 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x40005810 C   FIELD 16w04 SDADEL: Data hold time
0x40005810 C   FIELD 20w04 SCLDEL: Data setup time
0x40005810 C   FIELD 28w04 PRESC: Timing prescaler
0x40005814 B  REGISTER I2C_TIMEOUTR (rw): Status register 1
0x40005814 C   FIELD 00w12 TIMEOUTA (rw): Bus Timeout A This field is used to configure: The SCL low timeout condition tTIMEOUT when TIDLE=0 tTIMEOUT= (TIMEOUTA+1) x 2048 x tI2CCLK The bus idle condition (both SCL and SDA high) when TIDLE=1 tIDLE= (TIMEOUTA+1) x 4 x tI2CCLK Note: These bits can be written only when TIMOUTEN=0.
0x40005814 C   FIELD 12w01 TIDLE (rw): Idle clock timeout detection Note: This bit can be written only when TIMOUTEN=0.
0x40005814 C   FIELD 15w01 TIMOUTEN (rw): Clock timeout enable
0x40005814 C   FIELD 16w12 TIMEOUTB (rw): Bus timeout B This field is used to configure the cumulative clock extension timeout: In master mode, the master cumulative clock low extend time (tLOW:MEXT) is detected In slave mode, the slave cumulative clock low extend time (tLOW:SEXT) is detected tLOW:EXT= (TIMEOUTB+1) x 2048 x tI2CCLK Note: These bits can be written only when TEXTEN=0.
0x40005814 C   FIELD 31w01 TEXTEN (rw): Extended clock timeout enable
0x40005818 B  REGISTER I2C_ISR: Interrupt and Status register
0x40005818 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x40005818 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x40005818 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x40005818 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x40005818 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x40005818 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x40005818 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x40005818 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x40005818 C   FIELD 08w01 BERR (ro): Bus error
0x40005818 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x40005818 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x40005818 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x40005818 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x40005818 C   FIELD 13w01 ALERT (ro): SMBus alert
0x40005818 C   FIELD 15w01 BUSY (ro): Bus busy
0x40005818 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode) This flag is updated when an address match event occurs (ADDR=1).
0x40005818 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x4000581C B  REGISTER I2C_ICR (wo): Interrupt clear register
0x4000581C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x4000581C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x4000581C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x4000581C C   FIELD 08w01 BERRCF: Bus error flag clear
0x4000581C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x4000581C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x4000581C C   FIELD 11w01 PECCF: PEC Error flag clear
0x4000581C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x4000581C C   FIELD 13w01 ALERTCF: Alert flag clear
0x40005820 B  REGISTER I2C_PECR (ro): PEC register
0x40005820 C   FIELD 00w08 PEC: Packet error checking register
0x40005824 B  REGISTER I2C_RXDR (ro): Receive data register
0x40005824 C   FIELD 00w08 RXDATA: 8-bit receive data
0x40005828 B  REGISTER I2C_TXDR (rw): Transmit data register
0x40005828 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x40007400 A PERIPHERAL DAC
0x40007400 B  REGISTER DAC_CR (rw): DAC control register
0x40007400 C   FIELD 00w01 EN1 (rw): DAC channel1 enable This bit is set and cleared by software to enable/disable DAC channel1.
0x40007400 C   FIELD 01w01 TEN1 (rw): DAC channel1 trigger enable This bit is set and cleared by software to enable/disable DAC channel1 trigger. Note: When software trigger is selected, the transfer from the DAC_DHR1 register to the DAC_DOR1 register takes only one dac_pclk clock cycle.
0x40007400 C   FIELD 02w04 TSEL1 (rw): DAC channel1 trigger selection These bits select the external event used to trigger DAC channel1 ... Refer to the trigger selection tables in for details on trigger configuration and mapping. Note: Only used if bit TEN1 = 1 (DAC channel1 trigger enabled).
0x40007400 C   FIELD 06w02 WAVE1 (rw): DAC channel1 noise/triangle wave generation enable These bits are set and cleared by software. 1x: Triangle wave generation enabled Only used if bit TEN1 = 1 (DAC channel1 trigger enabled).
0x40007400 C   FIELD 08w04 MAMP1 (rw): DAC channel1 mask/amplitude selector These bits are written by software to select mask in wave generation mode or amplitude in triangle generation mode. ≥ 1011: Unmask bits[11:0] of LFSR/ triangle amplitude equal to 4095
0x40007400 C   FIELD 12w01 DMAEN1 (rw): DAC channel1 DMA enable This bit is set and cleared by software.
0x40007400 C   FIELD 13w01 DMAUDRIE1 (rw): DAC channel1 DMA Underrun Interrupt enable This bit is set and cleared by software.
0x40007400 C   FIELD 14w01 CEN1 (rw): DAC channel1 calibration enable This bit is set and cleared by software to enable/disable DAC channel1 calibration, it can be written only if bit EN1=0 into DAC_CR (the calibration mode can be entered/exit only when the DAC channel is disabled) Otherwise, the write operation is ignored.
0x40007400 C   FIELD 16w01 EN2 (rw): DAC channel2 enable This bit is set and cleared by software to enable/disable DAC channel2. Note: These bits are available only on dual-channel DACs. Refer to implementation.
0x40007400 C   FIELD 17w01 TEN2 (rw): DAC channel2 trigger enable This bit is set and cleared by software to enable/disable DAC channel2 trigger Note: When software trigger is selected, the transfer from the DAC_DHR2 register to the DAC_DOR2 register takes only one dac_pclk clock cycle. These bits are available only on dual-channel DACs. Refer to implementation.
0x40007400 C   FIELD 18w04 TSEL2 (rw): DAC channel2 trigger selection These bits select the external event used to trigger DAC channel2 ... Refer to the trigger selection tables in for details on trigger configuration and mapping. Note: Only used if bit TEN2 = 1 (DAC channel2 trigger enabled). These bits are available only on dual-channel DACs. Refer to implementation.
0x40007400 C   FIELD 22w02 WAVE2 (rw): DAC channel2 noise/triangle wave generation enable These bits are set/reset by software. 1x: Triangle wave generation enabled Note: Only used if bit TEN2 = 1 (DAC channel2 trigger enabled) These bits are available only on dual-channel DACs. Refer to implementation.
0x40007400 C   FIELD 24w04 MAMP2 (rw): DAC channel2 mask/amplitude selector These bits are written by software to select mask in wave generation mode or amplitude in triangle generation mode. ≥ 1011: Unmask bits[11:0] of LFSR/ triangle amplitude equal to 4095 Note: These bits are available only on dual-channel DACs. Refer to implementation.
0x40007400 C   FIELD 28w01 DMAEN2 (rw): DAC channel2 DMA enable This bit is set and cleared by software. Note: This bit is available only on dual-channel DACs. Refer to implementation.
0x40007400 C   FIELD 29w01 DMAUDRIE2 (rw): DAC channel2 DMA underrun interrupt enable This bit is set and cleared by software. Note: This bit is available only on dual-channel DACs. Refer to implementation.
0x40007400 C   FIELD 30w01 CEN2 (rw): DAC channel2 calibration enable This bit is set and cleared by software to enable/disable DAC channel2 calibration, it can be written only if EN2 bit is set to 0 into DAC_CR (the calibration mode can be entered/exit only when the DAC channel is disabled) Otherwise, the write operation is ignored. Note: This bit is available only on dual-channel DACs. Refer to implementation.
0x40007404 B  REGISTER DAC_SWTRGR (wo): DAC software trigger register
0x40007404 C   FIELD 00w01 SWTRIG1 (wo): DAC channel1 software trigger This bit is set by software to trigger the DAC in software trigger mode. Note: This bit is cleared by hardware (one dac_pclk clock cycle later) once the DAC_DHR1 register value has been loaded into the DAC_DOR1 register.
0x40007404 C   FIELD 01w01 SWTRIG2 (wo): DAC channel2 software trigger This bit is set by software to trigger the DAC in software trigger mode. Note: This bit is cleared by hardware (one dac_pclk clock cycle later) once the DAC_DHR2 register value has been loaded into the DAC_DOR2 register. This bit is available only on dual-channel DACs. Refer to implementation.
0x40007408 B  REGISTER DAC_DHR12R1 (rw): DAC channel1 12-bit right-aligned data holding register
0x40007408 C   FIELD 00w12 DACC1DHR (rw): DAC channel1 12-bit right-aligned data These bits are written by software. They specify 12-bit data for DAC channel1.
0x4000740C B  REGISTER DAC_DHR12L1 (rw): DAC channel1 12-bit left aligned data holding register
0x4000740C C   FIELD 04w12 DACC1DHR (rw): DAC channel1 12-bit left-aligned data These bits are written by software. They specify 12-bit data for DAC channel1.
0x40007410 B  REGISTER DAC_DHR8R1 (rw): DAC channel1 8-bit right aligned data holding register
0x40007410 C   FIELD 00w08 DACC1DHR (rw): DAC channel1 8-bit right-aligned data These bits are written by software. They specify 8-bit data for DAC channel1.
0x40007414 B  REGISTER DAC_DHR12R2 (rw): DAC channel2 12-bit right aligned data holding register
0x40007414 C   FIELD 00w12 DACC2DHR (rw): DAC channel2 12-bit right-aligned data These bits are written by software. They specify 12-bit data for DAC channel2.
0x40007418 B  REGISTER DAC_DHR12L2 (rw): DAC channel2 12-bit left aligned data holding register
0x40007418 C   FIELD 04w12 DACC2DHR (rw): DAC channel2 12-bit left-aligned data These bits are written by software which specify 12-bit data for DAC channel2.
0x4000741C B  REGISTER DAC_DHR8R2 (rw): DAC channel2 8-bit right-aligned data holding register
0x4000741C C   FIELD 00w08 DACC2DHR (rw): DAC channel2 8-bit right-aligned data These bits are written by software which specifies 8-bit data for DAC channel2.
0x40007420 B  REGISTER DAC_DHR12RD (rw): Dual DAC 12-bit right-aligned data holding register
0x40007420 C   FIELD 00w12 DACC1DHR (rw): DAC channel1 12-bit right-aligned data These bits are written by software which specifies 12-bit data for DAC channel1.
0x40007420 C   FIELD 16w12 DACC2DHR (rw): DAC channel2 12-bit right-aligned data These bits are written by software which specifies 12-bit data for DAC channel2.
0x40007424 B  REGISTER DAC_DHR12LD (rw): DUAL DAC 12-bit left aligned data holding register
0x40007424 C   FIELD 04w12 DACC1DHR (rw): DAC channel1 12-bit left-aligned data These bits are written by software which specifies 12-bit data for DAC channel1.
0x40007424 C   FIELD 20w12 DACC2DHR (rw): DAC channel2 12-bit left-aligned data These bits are written by software which specifies 12-bit data for DAC channel2.
0x40007428 B  REGISTER DAC_DHR8RD (rw): DUAL DAC 8-bit right aligned data holding register
0x40007428 C   FIELD 00w08 DACC1DHR (rw): DAC channel1 8-bit right-aligned data These bits are written by software which specifies 8-bit data for DAC channel1.
0x40007428 C   FIELD 08w08 DACC2DHR (rw): DAC channel2 8-bit right-aligned data These bits are written by software which specifies 8-bit data for DAC channel2.
0x4000742C B  REGISTER DAC_DOR1 (ro): DAC channel1 data output register
0x4000742C C   FIELD 00w12 DACC1DOR (ro): DAC channel1 data output These bits are read-only, they contain data output for DAC channel1.
0x40007430 B  REGISTER DAC_DOR2 (ro): DAC channel2 data output register
0x40007430 C   FIELD 00w12 DACC2DOR (ro): DAC channel2 data output These bits are read-only, they contain data output for DAC channel2.
0x40007434 B  REGISTER DAC_SR: DAC status register
0x40007434 C   FIELD 13w01 DMAUDR1 (rw): DAC channel1 DMA underrun flag This bit is set by hardware and cleared by software (by writing it to 1).
0x40007434 C   FIELD 14w01 CAL_FLAG1 (ro): DAC channel1 calibration offset status This bit is set and cleared by hardware
0x40007434 C   FIELD 15w01 BWST1 (ro): DAC channel1 busy writing sample time flag This bit is systematically set just after Sample and hold mode enable and is set each time the software writes the register DAC_SHSR1, It is cleared by hardware when the write operation of DAC_SHSR1 is complete. (It takes about 3 LSI periods of synchronization).
0x40007434 C   FIELD 29w01 DMAUDR2 (rw): DAC channel2 DMA underrun flag This bit is set by hardware and cleared by software (by writing it to 1). Note: This bit is available only on dual-channel DACs. Refer to implementation.
0x40007434 C   FIELD 30w01 CAL_FLAG2 (ro): DAC channel2 calibration offset status This bit is set and cleared by hardware Note: This bit is available only on dual-channel DACs. Refer to implementation.
0x40007434 C   FIELD 31w01 BWST2 (ro): DAC channel2 busy writing sample time flag This bit is systematically set just after Sample and hold mode enable. It is set each time the software writes the register DAC_SHSR2, It is cleared by hardware when the write operation of DAC_SHSR2 is complete. (It takes about 3 LSI periods of synchronization). Note: This bit is available only on dual-channel DACs. Refer to implementation.
0x40007438 B  REGISTER DAC_CCR (rw): DAC calibration control register
0x40007438 C   FIELD 00w05 OTRIM1 (rw): DAC channel1 offset trimming value
0x40007438 C   FIELD 16w05 OTRIM2 (rw): DAC channel2 offset trimming value These bits are available only on dual-channel DACs. Refer to implementation.
0x4000743C B  REGISTER DAC_MCR (rw): DAC mode control register
0x4000743C C   FIELD 00w03 MODE1 (rw): DAC channel1 mode These bits can be written only when the DAC is disabled and not in the calibration mode (when bit EN1=0 and bit CEN1 =0 in the DAC_CR register). If EN1=1 or CEN1 =1 the write operation is ignored. They can be set and cleared by software to select the DAC channel1 mode: DAC channel1 in Normal mode DAC channel1 in sample & hold mode Note: This register can be modified only when EN1=0.
0x4000743C C   FIELD 16w03 MODE2 (rw): DAC channel2 mode These bits can be written only when the DAC is disabled and not in the calibration mode (when bit EN2=0 and bit CEN2 =0 in the DAC_CR register). If EN2=1 or CEN2 =1 the write operation is ignored. They can be set and cleared by software to select the DAC channel2 mode: DAC channel2 in Normal mode DAC channel2 in Sample and hold mode Note: This register can be modified only when EN2=0. Refer to for the availability of DAC channel2.
0x40007440 B  REGISTER DAC_SHSR1 (rw): DAC Sample and Hold sample time register 1
0x40007440 C   FIELD 00w10 TSAMPLE1 (rw): DAC channel1 sample time (only valid in Sample and hold mode) These bits can be written when the DAC channel1 is disabled or also during normal operation. in the latter case, the write can be done only when BWST1 of DAC_SR register is low, If BWST1=1, the write operation is ignored.
0x40007444 B  REGISTER DAC_SHSR2 (rw): DAC Sample and Hold sample time register 2
0x40007444 C   FIELD 00w10 TSAMPLE2 (rw): DAC channel2 sample time (only valid in Sample and hold mode) These bits can be written when the DAC channel2 is disabled or also during normal operation. in the latter case, the write can be done only when BWST2 of DAC_SR register is low, if BWST2=1, the write operation is ignored.
0x40007448 B  REGISTER DAC_SHHR (rw): DAC Sample and Hold hold time register
0x40007448 C   FIELD 00w10 THOLD1 (rw): DAC channel1 hold time (only valid in Sample and hold mode) Hold time= (THOLD[9:0]) x LSI clock period Note: This register can be modified only when EN1=0.
0x40007448 C   FIELD 16w10 THOLD2 (rw): DAC channel2 hold time (only valid in Sample and hold mode). Hold time= (THOLD[9:0]) x LSI clock period Note: This register can be modified only when EN2=0. These bits are available only on dual-channel DACs. Refer to implementation.
0x4000744C B  REGISTER DAC_SHRR (rw): DAC Sample and Hold refresh time register
0x4000744C C   FIELD 00w08 TREFRESH1 (rw): DAC channel1 refresh time (only valid in Sample and hold mode) Refresh time= (TREFRESH[7:0]) x LSI clock period Note: This register can be modified only when EN1=0.
0x4000744C C   FIELD 16w08 TREFRESH2 (rw): DAC channel2 refresh time (only valid in Sample and hold mode) Refresh time= (TREFRESH[7:0]) x LSI clock period Note: This register can be modified only when EN2=0. These bits are available only on dual-channel DACs. Refer to implementation.
0x40007800 A PERIPHERAL HDMI_CEC
0x40007800 B  REGISTER CEC_CR (rw): CEC control register
0x40007800 C   FIELD 00w01 CECEN (rw): CEC enable The CECEN bit is set and cleared by software. CECEN = 1 starts message reception and enables the TXSOM control. CECEN = 0 disables the CEC peripheral, clears all bits of CEC_CR register and aborts any on-going reception or transmission.
0x40007800 C   FIELD 01w01 TXSOM (rw): Tx start of message TXSOM is set by software to command transmission of the first byte of a CEC message. If the CEC message consists of only one byte, TXEOM must be set before of TXSOM. Start-bit is effectively started on the CEC line after SFT is counted. If TXSOM is set while a message reception is ongoing, transmission starts after the end of reception. TXSOM is cleared by hardware after the last byte of the message is sent with a positive acknowledge (TXEND = 1), in case of transmission underrun (TXUDR = 1), negative acknowledge (TXACKE = 1), and transmission error (TXERR = 1). It is also cleared by CECEN = 0. It is not cleared and transmission is automatically retried in case of arbitration lost (ARBLST = 1). TXSOM can be also used as a status bit informing application whether any transmission request is pending or under execution. The application can abort a transmission request at any time by clearing the CECEN bit. Note: TXSOM must be set when CECEN = 1. TXSOM must be set when transmission data is available into TXDR. HEADER first four bits containing own peripheral address are taken from TXDR[7:4], not from CEC_CFGR.OAR that is used only for reception.
0x40007800 C   FIELD 02w01 TXEOM (rw): Tx end of message The TXEOM bit is set by software to command transmission of the last byte of a CEC message. TXEOM is cleared by hardware at the same time and under the same conditions as for TXSOM. Note: TXEOM must be set when CECEN = 1. TXEOM must be set before writing transmission data to TXDR. If TXEOM is set when TXSOM = 0, transmitted message consists of 1 byte (HEADER) only (PING message).
0x40007804 B  REGISTER CEC_CFGR (rw): This register is used to configure the HDMI-CEC controller. It is mandatory to write CEC_CFGR only when CECEN=0.
0x40007804 C   FIELD 00w03 SFT (rw): Signal free time SFT bits are set by software. In the SFT = 0x0 configuration, the number of nominal data bit periods waited before transmission is ruled by hardware according to the transmission history. In all the other configurations the SFT number is determined by software. 0x0 2.5 data-bit periods if CEC is the last bus initiator with unsuccessful transmission (ARBLST = 1, TXERR = 1, TXUDR = 1 or TXACKE = 1) 4 data-bit periods if CEC is the new bus initiator 6 data-bit periods if CEC is the last bus initiator with successful transmission (TXEOM = 1)
0x40007804 C   FIELD 03w01 RXTOL (rw): Rx-tolerance The RXTOL bit is set and cleared by software. Start-bit, +/- 200 µs rise, +/- 200 µs fall Data-bit: +/- 200 µs rise. +/- 350 µs fall Start-bit: +/- 400 µs rise, +/- 400 µs fall Data-bit: +/-300 µs rise, +/- 500 µs fall
0x40007804 C   FIELD 04w01 BRESTP (rw): Rx-stop on bit rising error The BRESTP bit is set and cleared by software.
0x40007804 C   FIELD 05w01 BREGEN (rw): Generate error-bit on bit rising error The BREGEN bit is set and cleared by software. Note: If BRDNOGEN = 0, an error-bit is generated upon BRE detection with BRESTP = 1 in broadcast even if BREGEN = 0.
0x40007804 C   FIELD 06w01 LBPEGEN (rw): Generate error-bit on long bit period error The LBPEGEN bit is set and cleared by software. Note: If BRDNOGEN = 0, an error-bit is generated upon LBPE detection in broadcast even if LBPEGEN = 0.
0x40007804 C   FIELD 07w01 BRDNOGEN (rw): Avoid error-bit generation in broadcast The BRDNOGEN bit is set and cleared by software. error-bit on the CEC line. LBPE detection with LBPEGEN = 0 on a broadcast message generates an error-bit on the CEC line.
0x40007804 C   FIELD 08w01 SFTOP (rw): SFT option bit The SFTOPT bit is set and cleared by software.
0x40007804 C   FIELD 16w15 OAR (rw): Own addresses configuration The OAR bits are set by software to select which destination logical addresses has to be considered in receive mode. Each bit, when set, enables the CEC logical address identified by the given bit position. At the end of HEADER reception, the received destination address is compared with the enabled addresses. In case of matching address, the incoming message is acknowledged and received. In case of non-matching address, the incoming message is received only in listen mode (LSTN = 1), but without acknowledge sent. Broadcast messages are always received. Example: OAR = 0b000 0000 0010 0001 means that CEC acknowledges addresses 0x0 and 0x5. Consequently, each message directed to one of these addresses is received.
0x40007804 C   FIELD 31w01 LSTN (rw): Listen mode LSTN bit is set and cleared by software.
0x40007808 B  REGISTER CEC_TXDR (wo): CEC Tx data register
0x40007808 C   FIELD 00w08 TXD: Tx Data register. TXD is a write-only register containing the data byte to be transmitted. Note: TXD must be written when TXSTART=1
0x4000780C B  REGISTER CEC_RXDR (ro): CEC Rx Data Register
0x4000780C C   FIELD 00w08 RXD: Rx Data register. RXD is read-only and contains the last data byte which has been received from the CEC line.
0x40007810 B  REGISTER CEC_ISR (rw): CEC Interrupt and Status Register
0x40007810 C   FIELD 00w01 RXBR: Rx-Byte Received The RXBR bit is set by hardware to inform application that a new byte has been received from the CEC line and stored into the RXD buffer. RXBR is cleared by software write at 1.
0x40007810 C   FIELD 01w01 RXEND: End Of Reception RXEND is set by hardware to inform application that the last byte of a CEC message is received from the CEC line and stored into the RXD buffer. RXEND is set at the same time of RXBR. RXEND is cleared by software write at 1.
0x40007810 C   FIELD 02w01 RXOVR: Rx-Overrun RXOVR is set by hardware if RXBR is not yet cleared at the time a new byte is received on the CEC line and stored into RXD. RXOVR assertion stops message reception so that no acknowledge is sent. In case of broadcast, a negative acknowledge is sent. RXOVR is cleared by software write at 1.
0x40007810 C   FIELD 03w01 BRE: Rx-Bit Rising Error BRE is set by hardware in case a Data-Bit waveform is detected with Bit Rising Error. BRE is set either at the time the misplaced rising edge occurs, or at the end of the maximum BRE tolerance allowed by RXTOL, in case rising edge is still longing. BRE stops message reception if BRESTP=1. BRE generates an Error-Bit on the CEC line if BREGEN=1. BRE is cleared by software write at 1.
0x40007810 C   FIELD 04w01 SBPE: Rx-Short Bit Period Error SBPE is set by hardware in case a Data-Bit waveform is detected with Short Bit Period Error. SBPE is set at the time the anticipated falling edge occurs. SBPE generates an Error-Bit on the CEC line. SBPE is cleared by software write at 1.
0x40007810 C   FIELD 05w01 LBPE: Rx-Long Bit Period Error LBPE is set by hardware in case a Data-Bit waveform is detected with Long Bit Period Error. LBPE is set at the end of the maximum bit-extension tolerance allowed by RXTOL, in case falling edge is still longing. LBPE always stops reception of the CEC message. LBPE generates an Error-Bit on the CEC line if LBPEGEN=1. In case of broadcast, Error-Bit is generated even in case of LBPEGEN=0. LBPE is cleared by software write at 1.
0x40007810 C   FIELD 06w01 RXACKE: Rx-Missing Acknowledge In receive mode, RXACKE is set by hardware to inform application that no acknowledge was seen on the CEC line. RXACKE applies only for broadcast messages and in listen mode also for not directly addressed messages (destination address not enabled in OAR). RXACKE aborts message reception. RXACKE is cleared by software write at 1.
0x40007810 C   FIELD 07w01 ARBLST: Arbitration Lost ARBLST is set by hardware to inform application that CEC device is switching to reception due to arbitration lost event following the TXSOM command. ARBLST can be due either to a contending CEC device starting earlier or starting at the same time but with higher HEADER priority. After ARBLST assertion TXSOM bit keeps pending for next transmission attempt. ARBLST is cleared by software write at 1.
0x40007810 C   FIELD 08w01 TXBR: Tx-Byte Request TXBR is set by hardware to inform application that the next transmission data has to be written to TXDR. TXBR is set when the 4th bit of currently transmitted byte is sent. Application must write the next byte to TXDR within 6 nominal data-bit periods before transmission underrun error occurs (TXUDR). TXBR is cleared by software write at 1.
0x40007810 C   FIELD 09w01 TXEND: End of Transmission TXEND is set by hardware to inform application that the last byte of the CEC message has been successfully transmitted. TXEND clears the TXSOM and TXEOM control bits. TXEND is cleared by software write at 1.
0x40007810 C   FIELD 10w01 TXUDR: Tx-Buffer Underrun In transmission mode, TXUDR is set by hardware if application was not in time to load TXDR before of next byte transmission. TXUDR aborts message transmission and clears TXSOM and TXEOM control bits. TXUDR is cleared by software write at 1
0x40007810 C   FIELD 11w01 TXERR: Tx-Error In transmission mode, TXERR is set by hardware if the CEC initiator detects low impedance on the CEC line while it is released. TXERR aborts message transmission and clears TXSOM and TXEOM controls. TXERR is cleared by software write at 1.
0x40007810 C   FIELD 12w01 TXACKE: Tx-Missing Acknowledge Error In transmission mode, TXACKE is set by hardware to inform application that no acknowledge was received. In case of broadcast transmission, TXACKE informs application that a negative acknowledge was received. TXACKE aborts message transmission and clears TXSOM and TXEOM controls. TXACKE is cleared by software write at 1.
0x40007814 B  REGISTER CEC_IER (rw): CEC interrupt enable register
0x40007814 C   FIELD 00w01 RXBRIE (rw): Rx-byte received interrupt enable The RXBRIE bit is set and cleared by software.
0x40007814 C   FIELD 01w01 RXENDIE (rw): End of reception interrupt enable The RXENDIE bit is set and cleared by software.
0x40007814 C   FIELD 02w01 RXOVRIE (rw): Rx-buffer overrun interrupt enable The RXOVRIE bit is set and cleared by software.
0x40007814 C   FIELD 03w01 BREIE (rw): Bit rising error interrupt enable The BREIE bit is set and cleared by software.
0x40007814 C   FIELD 04w01 SBPEIE (rw): Short bit period error interrupt enable The SBPEIE bit is set and cleared by software.
0x40007814 C   FIELD 05w01 LBPEIE (rw): Long bit period error interrupt enable The LBPEIE bit is set and cleared by software.
0x40007814 C   FIELD 06w01 RXACKIE (rw): Rx-missing acknowledge error interrupt enable The RXACKIE bit is set and cleared by software.
0x40007814 C   FIELD 07w01 ARBLSTIE (rw): Arbitration lost interrupt enable The ARBLSTIE bit is set and cleared by software.
0x40007814 C   FIELD 08w01 TXBRIE (rw): Tx-byte request interrupt enable The TXBRIE bit is set and cleared by software.
0x40007814 C   FIELD 09w01 TXENDIE (rw): Tx-end of message interrupt enable The TXENDIE bit is set and cleared by software.
0x40007814 C   FIELD 10w01 TXUDRIE (rw): Tx-underrun interrupt enable The TXUDRIE bit is set and cleared by software.
0x40007814 C   FIELD 11w01 TXERRIE (rw): Tx-error interrupt enable The TXERRIE bit is set and cleared by software.
0x40007814 C   FIELD 12w01 TXACKIE (rw): Tx-missing acknowledge error interrupt enable The TXACKEIE bit is set and cleared by software.
0x40007C00 A PERIPHERAL LPTIM1
0x40007C00 B  REGISTER LPTIM_ISR (ro): Interrupt and Status Register
0x40007C00 C   FIELD 00w01 CMPM (ro): Compare match The CMPM bit is set by hardware to inform application that LPTIM_CNT register value reached the LPTIM_CMP registerâs value.
0x40007C00 C   FIELD 01w01 ARRM (ro): Autoreload match ARRM is set by hardware to inform application that LPTIM_CNT registerâs value reached the LPTIM_ARR registerâs value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 02w01 EXTTRIG (ro): External trigger edge event EXTTRIG is set by hardware to inform application that a valid edge on the selected external trigger input has occurred. If the trigger is ignored because the timer has already started, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 03w01 CMPOK (ro): Compare register update OK CMPOK is set by hardware to inform application that the APB bus write operation to the LPTIM_CMP register has been successfully completed.
0x40007C00 C   FIELD 04w01 ARROK (ro): Autoreload register update OK ARROK is set by hardware to inform application that the APB bus write operation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 05w01 UP (ro): Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40007C00 C   FIELD 06w01 DOWN (ro): Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40007C04 B  REGISTER LPTIM_ICR (wo): Interrupt Clear Register
0x40007C04 C   FIELD 00w01 CMPMCF (wo): Compare match clear flag Writing 1 to this bit clears the CMP flag in the LPTIM_ISR register
0x40007C04 C   FIELD 01w01 ARRMCF (wo): Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register
0x40007C04 C   FIELD 02w01 EXTTRIGCF (wo): External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register
0x40007C04 C   FIELD 03w01 CMPOKCF (wo): Compare register update OK clear flag Writing 1 to this bit clears the CMPOK flag in the LPTIM_ISR register
0x40007C04 C   FIELD 04w01 ARROKCF (wo): Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register
0x40007C04 C   FIELD 05w01 UPCF (wo): Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40007C04 C   FIELD 06w01 DOWNCF (wo): Direction change to down clear flag Writing 1 to this bit clear the DOWN flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40007C08 B  REGISTER LPTIM_IER (rw): Interrupt Enable Register
0x40007C08 C   FIELD 00w01 CMPMIE (rw): Compare match Interrupt Enable
0x40007C08 C   FIELD 01w01 ARRMIE (rw): Autoreload match Interrupt Enable
0x40007C08 C   FIELD 02w01 EXTTRIGIE (rw): External trigger valid edge Interrupt Enable
0x40007C08 C   FIELD 03w01 CMPOKIE (rw): Compare register update OK Interrupt Enable
0x40007C08 C   FIELD 04w01 ARROKIE (rw): Autoreload register update OK Interrupt Enable
0x40007C08 C   FIELD 05w01 UPIE (rw): Direction change to UP Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40007C08 C   FIELD 06w01 DOWNIE (rw): Direction change to down Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40007C0C B  REGISTER LPTIM_CFGR (rw): Configuration Register
0x40007C0C C   FIELD 00w01 CKSEL (rw): Clock selector The CKSEL bit selects which clock source the LPTIM will use:
0x40007C0C C   FIELD 01w02 CKPOL (rw): Clock Polarity If LPTIM is clocked by an external clock source: When the LPTIM is clocked by an external clock source, CKPOL bits is used to configure the active edge or edges used by the counter: If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 1 is active. If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 2 is active. Refer to for more details about Encoder mode sub-modes.
0x40007C0C C   FIELD 03w02 CKFLT (rw): Configurable digital filter for external clock The CKFLT value sets the number of consecutive equal samples that should be detected when a level change occurs on an external clock signal before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x40007C0C C   FIELD 06w02 TRGFLT (rw): Configurable digital filter for trigger The TRGFLT value sets the number of consecutive equal samples that should be detected when a level change occurs on an internal trigger before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x40007C0C C   FIELD 09w03 PRESC (rw): Clock prescaler The PRESC bits configure the prescaler division factor. It can be one among the following division factors:
0x40007C0C C   FIELD 13w03 TRIGSEL (rw): Trigger selector The TRIGSEL bits select the trigger source that will serve as a trigger event for the LPTIM among the below 8 available sources: See for details.
0x40007C0C C   FIELD 17w02 TRIGEN (rw): Trigger enable and polarity The TRIGEN bits controls whether the LPTIM counter is started by an external trigger or not. If the external trigger option is selected, three configurations are possible for the trigger active edge:
0x40007C0C C   FIELD 19w01 TIMOUT (rw): Timeout enable The TIMOUT bit controls the Timeout feature
0x40007C0C C   FIELD 20w01 WAVE (rw): Waveform shape The WAVE bit controls the output shape
0x40007C0C C   FIELD 21w01 WAVPOL (rw): Waveform shape polarity The WAVEPOL bit controls the output polarity
0x40007C0C C   FIELD 22w01 PRELOAD (rw): Registers update mode The PRELOAD bit controls the LPTIM_ARR and the LPTIM_CMP registers update modality
0x40007C0C C   FIELD 23w01 COUNTMODE (rw): counter mode enabled The COUNTMODE bit selects which clock source is used by the LPTIM to clock the counter:
0x40007C0C C   FIELD 24w01 ENC (rw): Encoder mode enable The ENC bit controls the Encoder mode Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40007C10 B  REGISTER LPTIM_CR (rw): Control Register
0x40007C10 C   FIELD 00w01 ENABLE (rw): LPTIM enable The ENABLE bit is set and cleared by software.
0x40007C10 C   FIELD 01w01 SNGSTRT (rw): LPTIM start in Single mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = '00â), setting this bit starts the LPTIM in single pulse mode. If the software start is disabled (TRIGEN[1:0] different than '00â), setting this bit starts the LPTIM in single pulse mode as soon as an external trigger is detected. If this bit is set when the LPTIM is in continuous counting mode, then the LPTIM will stop at the following match between LPTIM_ARR and LPTIM_CNT registers. This bit can only be set when the LPTIM is enabled. It will be automatically reset by hardware.
0x40007C10 C   FIELD 02w01 CNTSTRT (rw): Timer start in Continuous mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = '00â), setting this bit starts the LPTIM in Continuous mode. If the software start is disabled (TRIGEN[1:0] different than '00â), setting this bit starts the timer in Continuous mode as soon as an external trigger is detected. If this bit is set when a single pulse mode counting is ongoing, then the timer will not stop at the next match between the LPTIM_ARR and LPTIM_CNT registers and the LPTIM counter keeps counting in Continuous mode. This bit can be set only when the LPTIM is enabled. It will be automatically reset by hardware.
0x40007C10 C   FIELD 03w01 COUNTRST (rw): Counter reset This bit is set by software and cleared by hardware. When set to '1' this bit will trigger a synchronous reset of the LPTIM_CNT counter register. Due to the synchronous nature of this reset, it only takes place after a synchronization delay of 3 LPTimer core clock cycles (LPTimer core clock may be different from APB clock). COUNTRST must never be set to '1' by software before it is already cleared to '0' by hardware. Software should consequently check that COUNTRST bit is already cleared to '0' before attempting to set it to '1'.
0x40007C10 C   FIELD 04w01 RSTARE (rw): Reset after read enable This bit is set and cleared by software. When RSTARE is set to '1', any read access to LPTIM_CNT register will asynchronously reset LPTIM_CNT register content.
0x40007C14 B  REGISTER LPTIM_CMP (rw): Compare Register
0x40007C14 C   FIELD 00w16 CMP: Compare value
0x40007C18 B  REGISTER LPTIM_ARR (rw): Autoreload Register
0x40007C18 C   FIELD 00w16 ARR: Auto reload value
0x40007C1C B  REGISTER LPTIM_CNT (ro): Counter Register
0x40007C1C C   FIELD 00w16 CNT: Counter value
0x40007C24 B  REGISTER LPTIM_CFGR2 (rw): LPTIM configuration register 2
0x40007C24 C   FIELD 00w02 IN1SEL (rw): LPTIM input 1 selection The IN1SEL bits control the LPTIM Input 1 multiplexer, which connects LPTIM Input 1 to one of the available inputs. For connection details refer to .
0x40007C24 C   FIELD 04w02 IN2SEL (rw): LPTIM input 2 selection The IN2SEL bits control the LPTIM Input 2 multiplexer, which connect LPTIM Input 2 to one of the available inputs. For connection details refer to . Note: If the LPTIM does not support encoder mode feature, these bits are reserved. Please refer to .
0x40009400 A PERIPHERAL LPTIM2
0x40009400 B  REGISTER LPTIM_ISR (ro): Interrupt and Status Register
0x40009400 C   FIELD 00w01 CMPM (ro): Compare match The CMPM bit is set by hardware to inform application that LPTIM_CNT register value reached the LPTIM_CMP registerâs value.
0x40009400 C   FIELD 01w01 ARRM (ro): Autoreload match ARRM is set by hardware to inform application that LPTIM_CNT registerâs value reached the LPTIM_ARR registerâs value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 02w01 EXTTRIG (ro): External trigger edge event EXTTRIG is set by hardware to inform application that a valid edge on the selected external trigger input has occurred. If the trigger is ignored because the timer has already started, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 03w01 CMPOK (ro): Compare register update OK CMPOK is set by hardware to inform application that the APB bus write operation to the LPTIM_CMP register has been successfully completed.
0x40009400 C   FIELD 04w01 ARROK (ro): Autoreload register update OK ARROK is set by hardware to inform application that the APB bus write operation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 05w01 UP (ro): Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40009400 C   FIELD 06w01 DOWN (ro): Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40009404 B  REGISTER LPTIM_ICR (wo): Interrupt Clear Register
0x40009404 C   FIELD 00w01 CMPMCF (wo): Compare match clear flag Writing 1 to this bit clears the CMP flag in the LPTIM_ISR register
0x40009404 C   FIELD 01w01 ARRMCF (wo): Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register
0x40009404 C   FIELD 02w01 EXTTRIGCF (wo): External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register
0x40009404 C   FIELD 03w01 CMPOKCF (wo): Compare register update OK clear flag Writing 1 to this bit clears the CMPOK flag in the LPTIM_ISR register
0x40009404 C   FIELD 04w01 ARROKCF (wo): Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register
0x40009404 C   FIELD 05w01 UPCF (wo): Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40009404 C   FIELD 06w01 DOWNCF (wo): Direction change to down clear flag Writing 1 to this bit clear the DOWN flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40009408 B  REGISTER LPTIM_IER (rw): Interrupt Enable Register
0x40009408 C   FIELD 00w01 CMPMIE (rw): Compare match Interrupt Enable
0x40009408 C   FIELD 01w01 ARRMIE (rw): Autoreload match Interrupt Enable
0x40009408 C   FIELD 02w01 EXTTRIGIE (rw): External trigger valid edge Interrupt Enable
0x40009408 C   FIELD 03w01 CMPOKIE (rw): Compare register update OK Interrupt Enable
0x40009408 C   FIELD 04w01 ARROKIE (rw): Autoreload register update OK Interrupt Enable
0x40009408 C   FIELD 05w01 UPIE (rw): Direction change to UP Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40009408 C   FIELD 06w01 DOWNIE (rw): Direction change to down Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x4000940C B  REGISTER LPTIM_CFGR (rw): Configuration Register
0x4000940C C   FIELD 00w01 CKSEL (rw): Clock selector The CKSEL bit selects which clock source the LPTIM will use:
0x4000940C C   FIELD 01w02 CKPOL (rw): Clock Polarity If LPTIM is clocked by an external clock source: When the LPTIM is clocked by an external clock source, CKPOL bits is used to configure the active edge or edges used by the counter: If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 1 is active. If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 2 is active. Refer to for more details about Encoder mode sub-modes.
0x4000940C C   FIELD 03w02 CKFLT (rw): Configurable digital filter for external clock The CKFLT value sets the number of consecutive equal samples that should be detected when a level change occurs on an external clock signal before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x4000940C C   FIELD 06w02 TRGFLT (rw): Configurable digital filter for trigger The TRGFLT value sets the number of consecutive equal samples that should be detected when a level change occurs on an internal trigger before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x4000940C C   FIELD 09w03 PRESC (rw): Clock prescaler The PRESC bits configure the prescaler division factor. It can be one among the following division factors:
0x4000940C C   FIELD 13w03 TRIGSEL (rw): Trigger selector The TRIGSEL bits select the trigger source that will serve as a trigger event for the LPTIM among the below 8 available sources: See for details.
0x4000940C C   FIELD 17w02 TRIGEN (rw): Trigger enable and polarity The TRIGEN bits controls whether the LPTIM counter is started by an external trigger or not. If the external trigger option is selected, three configurations are possible for the trigger active edge:
0x4000940C C   FIELD 19w01 TIMOUT (rw): Timeout enable The TIMOUT bit controls the Timeout feature
0x4000940C C   FIELD 20w01 WAVE (rw): Waveform shape The WAVE bit controls the output shape
0x4000940C C   FIELD 21w01 WAVPOL (rw): Waveform shape polarity The WAVEPOL bit controls the output polarity
0x4000940C C   FIELD 22w01 PRELOAD (rw): Registers update mode The PRELOAD bit controls the LPTIM_ARR and the LPTIM_CMP registers update modality
0x4000940C C   FIELD 23w01 COUNTMODE (rw): counter mode enabled The COUNTMODE bit selects which clock source is used by the LPTIM to clock the counter:
0x4000940C C   FIELD 24w01 ENC (rw): Encoder mode enable The ENC bit controls the Encoder mode Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Please refer to .
0x40009410 B  REGISTER LPTIM_CR (rw): Control Register
0x40009410 C   FIELD 00w01 ENABLE (rw): LPTIM enable The ENABLE bit is set and cleared by software.
0x40009410 C   FIELD 01w01 SNGSTRT (rw): LPTIM start in Single mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = '00â), setting this bit starts the LPTIM in single pulse mode. If the software start is disabled (TRIGEN[1:0] different than '00â), setting this bit starts the LPTIM in single pulse mode as soon as an external trigger is detected. If this bit is set when the LPTIM is in continuous counting mode, then the LPTIM will stop at the following match between LPTIM_ARR and LPTIM_CNT registers. This bit can only be set when the LPTIM is enabled. It will be automatically reset by hardware.
0x40009410 C   FIELD 02w01 CNTSTRT (rw): Timer start in Continuous mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = '00â), setting this bit starts the LPTIM in Continuous mode. If the software start is disabled (TRIGEN[1:0] different than '00â), setting this bit starts the timer in Continuous mode as soon as an external trigger is detected. If this bit is set when a single pulse mode counting is ongoing, then the timer will not stop at the next match between the LPTIM_ARR and LPTIM_CNT registers and the LPTIM counter keeps counting in Continuous mode. This bit can be set only when the LPTIM is enabled. It will be automatically reset by hardware.
0x40009410 C   FIELD 03w01 COUNTRST (rw): Counter reset This bit is set by software and cleared by hardware. When set to '1' this bit will trigger a synchronous reset of the LPTIM_CNT counter register. Due to the synchronous nature of this reset, it only takes place after a synchronization delay of 3 LPTimer core clock cycles (LPTimer core clock may be different from APB clock). COUNTRST must never be set to '1' by software before it is already cleared to '0' by hardware. Software should consequently check that COUNTRST bit is already cleared to '0' before attempting to set it to '1'.
0x40009410 C   FIELD 04w01 RSTARE (rw): Reset after read enable This bit is set and cleared by software. When RSTARE is set to '1', any read access to LPTIM_CNT register will asynchronously reset LPTIM_CNT register content.
0x40009414 B  REGISTER LPTIM_CMP (rw): Compare Register
0x40009414 C   FIELD 00w16 CMP: Compare value
0x40009418 B  REGISTER LPTIM_ARR (rw): Autoreload Register
0x40009418 C   FIELD 00w16 ARR: Auto reload value
0x4000941C B  REGISTER LPTIM_CNT (ro): Counter Register
0x4000941C C   FIELD 00w16 CNT: Counter value
0x40009424 B  REGISTER LPTIM_CFGR2 (rw): LPTIM configuration register 2
0x40009424 C   FIELD 00w02 IN1SEL (rw): LPTIM input 1 selection The IN1SEL bits control the LPTIM Input 1 multiplexer, which connects LPTIM Input 1 to one of the available inputs. For connection details refer to .
0x40009424 C   FIELD 04w02 IN2SEL (rw): LPTIM input 2 selection The IN2SEL bits control the LPTIM Input 2 multiplexer, which connect LPTIM Input 2 to one of the available inputs. For connection details refer to . Note: If the LPTIM does not support encoder mode feature, these bits are reserved. Please refer to .
0x40010030 A PERIPHERAL VREFBUF
0x40010030 B  REGISTER VREFBUF_CSR: VREFBUF control and status register
0x40010030 C   FIELD 00w01 ENVR (rw): Voltage reference buffer mode enable This bit is used to enable the voltage reference buffer mode.
0x40010030 C   FIELD 01w01 HIZ (rw): High impedance mode This bit controls the analog switch to connect or not the VREF+ pin. Refer to for the mode descriptions depending on ENVR bit configuration.
0x40010030 C   FIELD 02w01 VRS (rw): Voltage reference scale This bit selects the value generated by the voltage reference buffer.
0x40010030 C   FIELD 03w01 VRR (ro): Voltage reference buffer ready
0x40010034 B  REGISTER VREFBUF_CCR (rw): VREFBUF calibration control register
0x40010034 C   FIELD 00w06 TRIM (rw): Trimming code These bits are automatically initialized after reset with the trimming value stored in the Flash memory during the production test. Writing into these bits allows the tuning of the internal reference buffer voltage.
0x40012C00 A PERIPHERAL TIM1
0x40012C00 B  REGISTER TIM1_CR1 (rw): control register 1
0x40012C00 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock, gated mode and encoder mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x40012C00 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40012C00 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40012C00 C   FIELD 03w01 OPM (rw): One pulse mode
0x40012C00 C   FIELD 04w01 DIR (rw): Direction Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder mode.
0x40012C00 C   FIELD 05w02 CMS (rw): Center-aligned mode selection Note: Switch from edge-aligned mode to center-aligned mode as long as the counter is enabled (CEN=1) is not allowed
0x40012C00 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40012C00 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and the dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters (ETR, TIx): Note: tDTS = 1/fDTS, tCK_INT = 1/fCK_INT.
0x40012C00 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40012C04 B  REGISTER TIM1_CR2 (rw): control register 2
0x40012C04 C   FIELD 00w01 CCPC (rw): Capture/compare preloaded control Note: This bit acts only on channels that have a complementary output.
0x40012C04 C   FIELD 02w01 CCUS (rw): Capture/compare control update selection Note: This bit acts only on channels that have a complementary output.
0x40012C04 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40012C04 C   FIELD 04w03 MMS (rw): Master mode selection These bits allow selected information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows: Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x40012C04 C   FIELD 07w01 TI1S (rw): TI1 selection
0x40012C04 C   FIELD 08w01 OIS1 (rw): Output Idle state 1 (OC1 output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C04 C   FIELD 09w01 OIS1N (rw): Output Idle state 1 (OC1N output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C04 C   FIELD 10w01 OIS2 (rw): Output Idle state 2 (OC2 output) Refer to OIS1 bit
0x40012C04 C   FIELD 11w01 OIS2N (rw): Output Idle state 2 (OC2N output) Refer to OIS1N bit
0x40012C04 C   FIELD 12w01 OIS3 (rw): Output Idle state 3 (OC3 output) Refer to OIS1 bit
0x40012C04 C   FIELD 13w01 OIS3N (rw): Output Idle state 3 (OC3N output) Refer to OIS1N bit
0x40012C04 C   FIELD 14w01 OIS4 (rw): Output Idle state 4 (OC4 output) Refer to OIS1 bit
0x40012C04 C   FIELD 16w01 OIS5 (rw): Output Idle state 5 (OC5 output) Refer to OIS1 bit
0x40012C04 C   FIELD 18w01 OIS6 (rw): Output Idle state 6 (OC6 output) Refer to OIS1 bit
0x40012C04 C   FIELD 20w04 MMS2 (rw): Master mode selection 2 These bits allow the information to be sent to ADC for synchronization (TRGO2) to be selected. The combination is as follows: Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x40012C08 B  REGISTER TIM1_SMCR (rw): slave mode control register
0x40012C08 C   FIELD 00w03 SMS1 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=00100). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40012C08 C   FIELD 03w01 OCCS (rw): OCREF clear selection This bit is used to select the OCREF clear source.
0x40012C08 C   FIELD 04w03 TS1 (rw): Trigger selection This bit-field selects the trigger input to be used to synchronize the counter. Others: Reserved See for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40012C08 C   FIELD 07w01 MSM (rw): Master/slave mode
0x40012C08 C   FIELD 08w04 ETF (rw): External trigger filter This bit-field then defines the frequency used to sample ETRP signal and the length of the digital filter applied to ETRP. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40012C08 C   FIELD 12w02 ETPS (rw): External trigger prescaler External trigger signal ETRP frequency must be at most 1/4 of fCK_INT frequency. A prescaler can be enabled to reduce ETRP frequency. It is useful when inputting fast external clocks.
0x40012C08 C   FIELD 14w01 ECE (rw): External clock enable This bit enables External clock mode 2. Note: Setting the ECE bit has the same effect as selecting external clock mode 1 with TRGI connected to ETRF (SMS=111 and TS=00111). It is possible to simultaneously use external clock mode 2 with the following slave modes: reset mode, gated mode and trigger mode. Nevertheless, TRGI must not be connected to ETRF in this case (TS bits must not be 00111). If external clock mode 1 and external clock mode 2 are enabled at the same time, the external clock input is ETRF.
0x40012C08 C   FIELD 15w01 ETP (rw): External trigger polarity This bit selects whether ETR or ETR is used for trigger operations
0x40012C08 C   FIELD 16w01 SMS2 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=00100). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40012C08 C   FIELD 20w02 TS2 (rw): Trigger selection This bit-field selects the trigger input to be used to synchronize the counter. Others: Reserved See for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40012C0C B  REGISTER TIM1_DIER (rw): DMA/Interrupt enable register
0x40012C0C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x40012C0C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x40012C0C C   FIELD 02w01 CC2IE (rw): Capture/Compare 2 interrupt enable
0x40012C0C C   FIELD 03w01 CC3IE (rw): Capture/Compare 3 interrupt enable
0x40012C0C C   FIELD 04w01 CC4IE (rw): Capture/Compare 4 interrupt enable
0x40012C0C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x40012C0C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x40012C0C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x40012C0C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x40012C0C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x40012C0C C   FIELD 10w01 CC2DE (rw): Capture/Compare 2 DMA request enable
0x40012C0C C   FIELD 11w01 CC3DE (rw): Capture/Compare 3 DMA request enable
0x40012C0C C   FIELD 12w01 CC4DE (rw): Capture/Compare 4 DMA request enable
0x40012C0C C   FIELD 13w01 COMDE (rw): COM DMA request enable
0x40012C0C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40012C10 B  REGISTER TIM1_SR (rw): status register
0x40012C10 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to control register (TIM1_SMCRTIMx_SMCR)N/A), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40012C10 C   FIELD 01w01 CC1IF (rw): Capture/Compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when he content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40012C10 C   FIELD 02w01 CC2IF (rw): Capture/Compare 2 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 03w01 CC3IF (rw): Capture/Compare 3 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 04w01 CC4IF (rw): Capture/Compare 4 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on COM event (when Capture/compare Control bits - CCxE, CCxNE, OCxM - have been updated). It is cleared by software.
0x40012C10 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on TRGI input when the slave mode controller is enabled in all modes but gated mode. It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x40012C10 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x40012C10 C   FIELD 08w01 B2IF (rw): Break 2 interrupt flag This flag is set by hardware as soon as the break 2 input goes active. It can be cleared by software if the break 2 input is not active.
0x40012C10 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40012C10 C   FIELD 10w01 CC2OF (rw): Capture/Compare 2 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 11w01 CC3OF (rw): Capture/Compare 3 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 12w01 CC4OF (rw): Capture/Compare 4 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 13w01 SBIF (rw): System Break interrupt flag This flag is set by hardware as soon as the system break input goes active. It can be cleared by software if the system break input is not active. This flag must be reset to re-start PWM operation.
0x40012C10 C   FIELD 16w01 CC5IF (rw): Compare 5 interrupt flag Refer to CC1IF description (Note: Channel 5 can only be configured as output)
0x40012C10 C   FIELD 17w01 CC6IF (rw): Compare 6 interrupt flag Refer to CC1IF description (Note: Channel 6 can only be configured as output)
0x40012C14 B  REGISTER TIM1_EGR (wo): event generation register
0x40012C14 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40012C14 C   FIELD 01w01 CC1G (wo): Capture/Compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40012C14 C   FIELD 02w01 CC2G (wo): Capture/Compare 2 generation Refer to CC1G description
0x40012C14 C   FIELD 03w01 CC3G (wo): Capture/Compare 3 generation Refer to CC1G description
0x40012C14 C   FIELD 04w01 CC4G (wo): Capture/Compare 4 generation Refer to CC1G description
0x40012C14 C   FIELD 05w01 COMG (wo): Capture/Compare control update generation This bit can be set by software, it is automatically cleared by hardware Note: This bit acts only on channels having a complementary output.
0x40012C14 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C14 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C14 C   FIELD 08w01 B2G (wo): Break 2 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C18 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (output mode)
0x40012C18 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40012C18 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40012C18 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40012C18 C   FIELD 02w01 OC1FE (rw): Output Compare 1 fast enable This bit decreases the latency between a trigger event and a transition on the timer output. It must be used in one-pulse mode (OPM bit set in TIMx_CR1 register), to have the output pulse starting as soon as possible after the starting trigger.
0x40012C18 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (IC1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x40012C18 C   FIELD 03w01 OC1PE (rw): Output Compare 1 preload enable Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). The PWM mode can be used without validating the preload register only in one pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
0x40012C18 C   FIELD 04w03 OC1M1 (rw): Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). Note: In PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. Note: On channels having a complementary output, this bit field is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the OC1M active bits take the new value from the preloaded bits only when a COM event is generated. Note: The OC1M[3] bit is not contiguous, located in bit 16.
0x40012C18 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample TI1 input and the length of the digital filter applied to TI1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40012C18 C   FIELD 07w01 OC1CE (rw): Output Compare 1 clear enable
0x40012C18 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = '0â in TIMx_CCER).
0x40012C18 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = '0â in TIMx_CCER).
0x40012C18 C   FIELD 10w01 OC2FE (rw): Output Compare 2 fast enable Refer to OC1FE description.
0x40012C18 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler Refer to IC1PSC[1:0] description.
0x40012C18 C   FIELD 11w01 OC2PE (rw): Output Compare 2 preload enable Refer to OC1PE description.
0x40012C18 C   FIELD 12w03 OC2M1 (rw): Output Compare 2 mode Refer to OC1M[3:0] description.
0x40012C18 C   FIELD 12w04 IC2F (rw): Input capture 2 filter Refer to IC1F[3:0] description.
0x40012C18 C   FIELD 15w01 OC2CE (rw): Output Compare 2 clear enable Refer to OC1CE description.
0x40012C18 C   FIELD 16w01 OC1M2 (rw): Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). Note: In PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. Note: On channels having a complementary output, this bit field is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the OC1M active bits take the new value from the preloaded bits only when a COM event is generated. Note: The OC1M[3] bit is not contiguous, located in bit 16.
0x40012C18 C   FIELD 24w01 OC2M2 (rw): Output Compare 2 mode Refer to OC1M[3:0] description.
0x40012C1C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (output mode)
0x40012C1C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x40012C1C C   FIELD 00w02 CC3S (rw): Capture/Compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = '0â in TIMx_CCER).
0x40012C1C C   FIELD 00w02 CC3S (rw): Capture/compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = '0â in TIMx_CCER).
0x40012C1C C   FIELD 02w01 OC3FE (rw): Output compare 3 fast enable Refer to OC1FE description.
0x40012C1C C   FIELD 02w02 IC3PSC (rw): Input capture 3 prescaler Refer to IC1PSC[1:0] description.
0x40012C1C C   FIELD 03w01 OC3PE (rw): Output compare 3 preload enable Refer to OC1PE description.
0x40012C1C C   FIELD 04w03 OC3M1 (rw): Output compare 3 mode Refer to OC1M[3:0] description.
0x40012C1C C   FIELD 04w04 IC3F (rw): Input capture 3 filter Refer to IC1F[3:0] description.
0x40012C1C C   FIELD 07w01 OC3CE (rw): Output compare 3 clear enable Refer to OC1CE description.
0x40012C1C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = '0â in TIMx_CCER).
0x40012C1C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = '0â in TIMx_CCER).
0x40012C1C C   FIELD 10w01 OC4FE (rw): Output compare 4 fast enable Refer to OC1FE description.
0x40012C1C C   FIELD 10w02 IC4PSC (rw): Input capture 4 prescaler Refer to IC1PSC[1:0] description.
0x40012C1C C   FIELD 11w01 OC4PE (rw): Output compare 4 preload enable Refer to OC1PE description.
0x40012C1C C   FIELD 12w03 OC4M1 (rw): Output compare 4 mode Refer to OC3M[3:0] description.
0x40012C1C C   FIELD 12w04 IC4F (rw): Input capture 4 filter Refer to IC1F[3:0] description.
0x40012C1C C   FIELD 15w01 OC4CE (rw): Output compare 4 clear enable Refer to OC1CE description.
0x40012C1C C   FIELD 16w01 OC3M2 (rw): Output compare 3 mode Refer to OC1M[3:0] description.
0x40012C1C C   FIELD 24w01 OC4M2 (rw): Output compare 4 mode Refer to OC3M[3:0] description.
0x40012C20 B  REGISTER TIM1_CCER (rw): capture/compare enable register
0x40012C20 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to for details. Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1E active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: The configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 02w01 CC1NE (rw): Capture/Compare 1 complementary output enable On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NE active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of TI1FP1 and TI2FP1. Refer to CC1P description. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (channel configured as output). On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 04w01 CC2E (rw): Capture/Compare 2 output enable Refer to CC1E description
0x40012C20 C   FIELD 05w01 CC2P (rw): Capture/Compare 2 output polarity Refer to CC1P description
0x40012C20 C   FIELD 06w01 CC2NE (rw): Capture/Compare 2 complementary output enable Refer to CC1NE description
0x40012C20 C   FIELD 07w01 CC2NP (rw): Capture/Compare 2 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 08w01 CC3E (rw): Capture/Compare 3 output enable Refer to CC1E description
0x40012C20 C   FIELD 09w01 CC3P (rw): Capture/Compare 3 output polarity Refer to CC1P description
0x40012C20 C   FIELD 10w01 CC3NE (rw): Capture/Compare 3 complementary output enable Refer to CC1NE description
0x40012C20 C   FIELD 11w01 CC3NP (rw): Capture/Compare 3 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 12w01 CC4E (rw): Capture/Compare 4 output enable Refer to CC1E description
0x40012C20 C   FIELD 13w01 CC4P (rw): Capture/Compare 4 output polarity Refer to CC1P description
0x40012C20 C   FIELD 15w01 CC4NP (rw): Capture/Compare 4 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 16w01 CC5E (rw): Capture/Compare 5 output enable Refer to CC1E description
0x40012C20 C   FIELD 17w01 CC5P (rw): Capture/Compare 5 output polarity Refer to CC1P description
0x40012C20 C   FIELD 20w01 CC6E (rw): Capture/Compare 6 output enable Refer to CC1E description
0x40012C20 C   FIELD 21w01 CC6P (rw): Capture/Compare 6 output polarity Refer to CC1P description
0x40012C24 B  REGISTER TIM1_CNT: counter
0x40012C24 C   FIELD 00w16 CNT (rw): Counter value
0x40012C24 C   FIELD 31w01 UIFCPY (ro): UIF copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in the TIMxCR1 is reset, bit 31 is reserved and read at 0.
0x40012C28 B  REGISTER TIM1_PSC (rw): prescaler
0x40012C28 C   FIELD 00w16 PSC (rw): Prescaler value The counter clock frequency (CK_CNT) is equal to fCK_PSC / (PSC[15:0] + 1). PSC contains the value to be loaded in the active prescaler register at each update event (including when the counter is cleared through UG bit of TIMx_EGR register or through trigger controller when configured in âreset modeâ).
0x40012C2C B  REGISTER TIM1_ARR (rw): auto-reload register
0x40012C2C C   FIELD 00w16 ARR (rw): Auto-reload value ARR is the value to be loaded in the actual auto-reload register. Refer to the for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null.
0x40012C30 B  REGISTER TIM1_RCR (rw): repetition counter register
0x40012C30 C   FIELD 00w16 REP: Repetition counter value
0x40012C34 B  REGISTER TIM1_CCR1 (rw): capture/compare register 1
0x40012C34 C   FIELD 00w16 CCR1: Capture/Compare 1 value
0x40012C38 B  REGISTER TIM1_CCR2 (rw): capture/compare register 2
0x40012C38 C   FIELD 00w16 CCR2: Capture/Compare 2 value
0x40012C3C B  REGISTER TIM1_CCR3 (rw): capture/compare register 3
0x40012C3C C   FIELD 00w16 CCR3: Capture/Compare value
0x40012C40 B  REGISTER TIM1_CCR4 (rw): capture/compare register 4
0x40012C40 C   FIELD 00w16 CCR4: Capture/Compare value
0x40012C44 B  REGISTER TIM1_BDTR (rw): break and dead-time register
0x40012C44 C   FIELD 00w08 DTG (rw): Dead-time generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration. DTG[7:5]=0xx => DT=DTG[7:0]x tDTG with tDTG=tDTS. DTG[7:5]=10x => DT=(64+DTG[5:0])xtDTG with tDTG=2xtDTS. DTG[7:5]=110 => DT=(32+DTG[4:0])xtDTG with tDTG=8xtDTS. DTG[7:5]=111 => DT=(32+DTG[4:0])xtDTG with tDTG=16xtDTS. Example if tDTS=125Â ns (8Â MHz), dead-time possible values are: 0 to 15875Â ns by 125Â ns steps, 16Â Î¼s to 31750Â nsÂ by 250Â ns steps, 32Â Î¼s to 63Â Î¼s by 1Â Î¼s steps, 64Â Î¼s to 126Â Î¼s by 2Â Î¼s steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x40012C44 C   FIELD 10w01 OSSI (rw): Off-state selection for Idle mode This bit is used when MOE=0 due to a break event or by a software write, on channels configured as outputs. See OC/OCN enable description for more details (enable register (TIM1_CCERTIMx_CCER)N/A). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels having a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (enable register (TIM1_CCERTIMx_CCER)N/A). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 12w01 BKE (rw): Break enable This bit enables the complete break protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as one of the break inputs is active (BRK or BRK2). It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. In response to a break event or if MOE is written to 0: OC and OCN outputs are disabled or forced to idle state depending on the OSSI bit. See OC/OCN enable description for more details (enable register (TIM1_CCERTIMx_CCER)N/A).
0x40012C44 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample BRK input and the length of the digital filter applied to BRK. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 20w04 BK2F (rw): Break 2 filter This bit-field defines the frequency used to sample BRK2 input and the length of the digital filter applied to BRK2. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 24w01 BK2E (rw): Break 2 enable Note: The BRK2 must only be used with OSSR = OSSI = 1. Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 25w01 BK2P (rw): Break 2 polarity Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 26w01 BKDSRM (rw): Break Disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 27w01 BK2DSRM (rw): Break2 Disarm Refer to BKDSRM description
0x40012C44 C   FIELD 28w01 BKBID (rw): Break Bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 29w01 BK2BID (rw): Break2 bidirectional Refer to BKBID description
0x40012C48 B  REGISTER TIM1_DCR (rw): DMA control register
0x40012C48 C   FIELD 00w05 DBA (rw): DMA base address This 5-bits vector defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ...
0x40012C48 C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit vector defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers. Transfers can be in half-words or in bytes (see example below). ... Example: Let us consider the following transfer: DBL = 7 bytes & DBA = TIMx_CR1. If DBL = 7 bytes and DBA = TIMx_CR1 represents the address of the byte to be transferred, the address of the transfer should be given by the following equation: (TIMx_CR1 address) + DBA + (DMA index), where DMA index = DBL In this example, 7 bytes are added to (TIMx_CR1 address) + DBA, which gives us the address from/to which the data is copied. In this case, the transfer is done to 7 registers starting from the following address: (TIMx_CR1 address) + DBA According to the configuration of the DMA Data Size, several cases may occur: If the DMA Data Size is configured in half-words, 16-bit data is transferred to each of the 7 registers. If the DMA Data Size is configured in bytes, the data is also transferred to 7 registers: the first register contains the first MSB byte, the second register, the first LSB byte and so on. So with the transfer Timer, one also has to specify the size of data transferred by DMA.
0x40012C4C B  REGISTER TIM1_DMAR (rw): DMA address for full transfer
0x40012C4C C   FIELD 00w32 DMAB (rw): DMA register for burst accesses A read or write operation to the DMAR register accesses the register located at the address (TIMx_CR1 address) + (DBA + DMA index) x 4 where TIMx_CR1 address is the address of the control register 1, DBA is the DMA base address configured in TIMx_DCR register, DMA index is automatically controlled by the DMA transfer, and ranges from 0 to DBL (DBL configured in TIMx_DCR).
0x40012C50 B  REGISTER TIM1_OR1 (rw): option register 1
0x40012C50 C   FIELD 00w01 OCREF_CLR (rw): Ocref_clr source selection This bit selects the ocref_clr input source.
0x40012C54 B  REGISTER CCMR3_Output (rw): capture/compare mode register 2 (output mode)
0x40012C54 C   FIELD 02w01 OC5FE: Output compare 5 fast enable
0x40012C54 C   FIELD 03w01 OC5PE: Output compare 5 preload enable
0x40012C54 C   FIELD 04w03 OC5M: Output compare 5 mode
0x40012C54 C   FIELD 07w01 OC5CE: Output compare 5 clear enable
0x40012C54 C   FIELD 10w01 OC6FE: Output compare 6 fast enable
0x40012C54 C   FIELD 11w01 OC6PE: Output compare 6 preload enable
0x40012C54 C   FIELD 12w03 OC6M: Output compare 6 mode
0x40012C54 C   FIELD 15w01 OC6CE: Output compare 6 clear enable
0x40012C54 C   FIELD 16w01 OC5M_bit3: Output Compare 5 mode bit 3
0x40012C54 C   FIELD 24w01 OC6M_bit3: Output Compare 6 mode bit 3
0x40012C58 B  REGISTER TIM1_CCR5 (rw): capture/compare register 4
0x40012C58 C   FIELD 00w16 CCR5 (rw): Capture/Compare 5 value CCR5 is the value to be loaded in the actual capture/compare 5 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC5PE). Else the preload value is copied in the active capture/compare 5 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on OC5 output.
0x40012C58 C   FIELD 29w01 GC5C1 (rw): Group Channel 5 and Channel 1 Distortion on Channel 1 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C58 C   FIELD 30w01 GC5C2 (rw): Group Channel 5 and Channel 2 Distortion on Channel 2 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C58 C   FIELD 31w01 GC5C3 (rw): Group Channel 5 and Channel 3 Distortion on Channel 3 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR2). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C5C B  REGISTER TIM1_CCR6 (rw): capture/compare register 4
0x40012C5C C   FIELD 00w16 CCR6: Capture/Compare value
0x40012C60 B  REGISTER TIM1_AF1 (rw): DMA address for full transfer
0x40012C60 C   FIELD 00w01 BKINE (rw): BRK BKIN input enable This bit enables the BKIN alternate function input for the timerâs BRK input. BKIN input is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 01w01 BKCMP1E (rw): BRK COMP1 enable This bit enables the COMP1 for the timerâs BRK input. COMP1 output is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 02w01 BKCMP2E (rw): BRK COMP2 enable This bit enables the COMP2 for the timerâs BRK input. COMP2 output is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 09w01 BKINP (rw): BRK BKIN input polarity This bit selects the BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 10w01 BKCMP1P (rw): BRK COMP1 input polarity This bit selects the COMP1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 11w01 BKCMP2P (rw): BRK COMP2 input polarity This bit selects the COMP2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 14w04 ETRSEL (rw): ETR source selection These bits select the ETR input source. Others: Reserved Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 B  REGISTER TIM1_AF2 (rw): DMA address for full transfer
0x40012C64 C   FIELD 00w01 BK2INE (rw): BRK2 BKIN input enable This bit enables the BKIN2 alternate function input for the timerâs BRK2 input. BKIN2 input is 'ORedâ with the other BRK2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 01w01 BK2CMP1E (rw): BRK2 COMP1 enable This bit enables the COMP1 for the timerâs BRK2 input. COMP1 output is 'ORedâ with the other BRK2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 02w01 BK2CMP2E (rw): BRK2 COMP2 enable This bit enables the COMP2 for the timerâs BRK2 input. COMP2 output is 'ORedâ with the other BRK2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 09w01 BK2INP (rw): BRK2 BKIN2 input polarity This bit selects the BKIN2 alternate function input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 10w01 BK2CMP1P (rw): BRK2 COMP1 input polarity This bit selects the COMP1 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 11w01 BK2CMP2P (rw): BRK2 COMP2 input polarity This bit selects the COMP2 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C68 B  REGISTER TIM1_TISEL (rw): TIM1 timer input selection register
0x40012C68 C   FIELD 00w04 TI1SEL (rw): selects TI1[0] to TI1[15] input Others: Reserved
0x40012C68 C   FIELD 08w04 TI2SEL (rw): selects TI2[0] to TI2[15] input Others: Reserved
0x40012C68 C   FIELD 16w04 TI3SEL (rw): selects TI3[0] to TI3[15] input Others: Reserved
0x40012C68 C   FIELD 24w04 TI4SEL (rw): selects TI4[0] to TI4[15] input Others: Reserved
0x40013800 A PERIPHERAL USART1
0x40013800 B  REGISTER CR1_FIFO_DISABLED (rw): Control register 1
0x40013800 B  REGISTER CR1_FIFO_ENABLED (rw): Control register 1
0x40013800 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40013800 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40013800 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013800 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013800 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40013800 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40013800 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40013800 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40013800 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40013800 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40013800 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013800 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013800 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013800 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013800 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013800 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013800 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40013800 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40013800 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40013800 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40013800 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40013800 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40013800 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013800 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013800 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013800 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013800 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40013800 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40013800 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013800 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013800 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40013800 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40013800 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40013800 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40013800 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40013804 B  REGISTER CR2 (rw): Control register 2
0x40013804 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40013804 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the SCLK pin in synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see and ) This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the SCLK pin. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If neither synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to . In Smartcard mode, in order to provide correctly the SCLK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 UE = 1
0x40013804 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013804 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013804 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013804 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013804 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013804 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013804 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UEÂ =Â 0). Note: If DATAINVÂ =Â 1 and/or MSBFIRSTÂ =Â 1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013804 C   FIELD 24w08 ADD (rw): Address of the USART node ADD[7:4]: These bits give the address of the USART node or a character code to be recognized. They are used to wake up the MCU with 7-bit address mark detection in multiprocessor communication during Mute mode or low-power mode. The MSB of the character sent by the transmitter should be equal to 1. They can also be used for character detection during normal reception, Mute mode inactive (for example, end of block detection in ModBus protocol). In this case, the whole received character (8-bit) is compared to the ADD[7:0] value and CMF flag is set on match. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0). ADD[3:0]: These bits give the address of the USART node or a character code to be recognized. They are used for wakeup with address mark detection, in multiprocessor communication during Mute mode or low-power mode. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0).
0x40013808 B  REGISTER CR3 (rw): Control register 3
0x40013808 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FEÂ =Â 1 or OREÂ =Â 1 or NEÂ =Â 1 or UDR = 1 in the USART_ISR register).
0x40013808 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40013808 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40013808 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40013808 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40013808 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data is written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: This control bit enables checking the communication flow w/o reading the data
0x40013808 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40013808 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. .
0x40013808 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UEÂ =Â 0). When the USART is enabled (UEÂ =Â 1), this bitfield may only be written to 0x0, in order to stop retransmission. Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 20w02 WUS (rw): Wakeup from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wakeup from low-power mode flag). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40013808 C   FIELD 22w01 WUFIE (rw): Wakeup from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40013808 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40013808 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013808 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40013808 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40013808 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x4001380C B  REGISTER BRR (rw): Baud rate register
0x4001380C C   FIELD 00w16 BRR (rw): USART baud rate
0x40013810 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40013810 C   FIELD 00w08 PSC (rw): Prescaler value In IrDA low-power and normal IrDA mode: PSC[7:0] = IrDA Normal and Low-Power baud rate PSC[7:0] is used to program the prescaler for dividing the USART source clock to achieve the low-power frequency: the source clock is divided by the value given in the register (8 significant bits): In Smartcard mode: PSC[4:0]Â =Â Prescaler value PSC[4:0] is used to program the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... 0010Â 0000: Divides the source clock by 32 (IrDA mode) ... 1111Â 1111: Divides the source clock by 255 (IrDA mode) This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. This bitfield is reserved and forced by hardware to '0â when the Smartcard and IrDA modes are not supported. Refer to .
0x40013810 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013814 B  REGISTER RTOR (rw): Receiver timeout register
0x40013814 C   FIELD 00w24 RTO: Receiver timeout value
0x40013814 C   FIELD 24w08 BLEN: Block Length
0x40013818 B  REGISTER RQR (wo): Request register
0x40013818 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF flag in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013818 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software should wait for the TXE flag assertion before setting the SBKRQ bit.
0x40013818 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40013818 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40013818 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing '1â to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4001381C B  REGISTER ISR_FIFO_DISABLED (ro): Interrupt & status register
0x4001381C B  REGISTER ISR_FIFO_ENABLED (ro): Interrupt & status register
0x4001381C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register.
0x4001381C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register.
0x4001381C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861). This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861).
0x4001381C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIEÂ =Â 1 or EIE = 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4001381C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNEÂ =Â 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIEÂ =Â 1 or EIE Â =Â 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4001381C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x4001381C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x4001381C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIEÂ =Â 1 in the USART_CR1 register.
0x4001381C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIEÂ =Â 1 in the USART_CR1 register.
0x4001381C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is set immediately.
0x4001381C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXFE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is immediately set.
0x4001381C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard TÂ =Â 0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit Â =Â 1 in the USART_CR1 register.
0x4001381C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF should be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). This bit is used during single buffer transmission.
0x4001381C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4001381C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4001381C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x4001381C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x4001381C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4001381C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4001381C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x4001381C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x4001381C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x4001381C C   FIELD 23w01 TXFE (ro): TXFIFO empty This bit is set by hardware when TXFIFO is empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit Â =Â 1 (bit 30) in the USART_CR1 register.
0x4001381C C   FIELD 24w01 RXFF (ro): RXFIFO full This bit is set by hardware when the number of received data corresponds to RXFIFOÂ sizeÂ +Â 1 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit Â =Â 1 in the USART_CR1 register.
0x4001381C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x4001381C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x4001381C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit Â =Â 1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to '101â, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x4001381C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit Â =Â 1 (bit 31) in the USART_CR3 register.
0x40013820 B  REGISTER ICR (wo): Interrupt flag clear register
0x40013820 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40013820 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40013820 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40013820 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40013820 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40013820 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40013820 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40013820 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40013820 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013820 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013820 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40013820 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013820 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to
0x40013820 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40013820 C   FIELD 20w01 WUCF (wo): Wakeup from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40013824 B  REGISTER RDR (ro): Receive data register
0x40013824 C   FIELD 00w09 RDR: Receive data value
0x40013828 B  REGISTER TDR (rw): Transmit data register
0x40013828 C   FIELD 00w09 TDR: Transmit data value
0x4001382C B  REGISTER PRESC (rw): Prescaler register
0x4001382C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is 1011 i.e. input clock divided by 256.
0x40013C00 A PERIPHERAL USART6
0x40013C00 B  REGISTER CR1_FIFO_DISABLED (rw): Control register 1
0x40013C00 B  REGISTER CR1_FIFO_ENABLED (rw): Control register 1
0x40013C00 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40013C00 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. In Smartcard mode, (SCEN = 1), the SCLK is always available when CLKEN = 1, regardless of the UE bit value.
0x40013C00 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013C00 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode and clear it when exit from low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013C00 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40013C00 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40013C00 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40013C00 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit ('0â followed by '1â) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to '1â. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40013C00 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40013C00 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40013C00 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C00 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C00 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C00 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if MÂ =Â 1; 8th bit if MÂ =Â 0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C00 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C00 C   FIELD 11w01 WAKE (rw): Receiver wakeup method This bit determines the USART wakeup method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C00 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C00 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C00 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40013C00 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40013C00 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40013C00 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40013C00 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C00 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C00 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C00 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C00 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40013C00 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. .
0x40013C00 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013C00 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013C00 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40013C00 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = '00â: 1 start bit, 8 Data bits, n Stop bit M[1:0] = '01â: 1 start bit, 9 Data bits, n Stop bit M[1:0] = '10â: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and Auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40013C00 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40013C00 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: FIFO mode can be used on standard UART communication, in SPI master/slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40013C00 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40013C00 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40013C04 B  REGISTER CR2 (rw): Control register 2
0x40013C04 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40013C04 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the SCLK pin in synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see and ) This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the SCLK pin in synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the SCLK pin. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If neither synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to . In Smartcard mode, in order to provide correctly the SCLK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 UE = 1
0x40013C04 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C04 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C04 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C04 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C04 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C04 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C04 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UEÂ =Â 0). Note: If DATAINVÂ =Â 1 and/or MSBFIRSTÂ =Â 1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013C04 C   FIELD 24w08 ADD (rw): Address of the USART node ADD[7:4]: These bits give the address of the USART node or a character code to be recognized. They are used to wake up the MCU with 7-bit address mark detection in multiprocessor communication during Mute mode or low-power mode. The MSB of the character sent by the transmitter should be equal to 1. They can also be used for character detection during normal reception, Mute mode inactive (for example, end of block detection in ModBus protocol). In this case, the whole received character (8-bit) is compared to the ADD[7:0] value and CMF flag is set on match. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0). ADD[3:0]: These bits give the address of the USART node or a character code to be recognized. They are used for wakeup with address mark detection, in multiprocessor communication during Mute mode or low-power mode. These bits can only be written when reception is disabled (RE = 0) or the USART is disabled (UEÂ =Â 0).
0x40013C08 B  REGISTER CR3 (rw): Control register 3
0x40013C08 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FEÂ =Â 1 or OREÂ =Â 1 or NEÂ =Â 1 or UDR = 1 in the USART_ISR register).
0x40013C08 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C08 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40013C08 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40013C08 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UEÂ =Â 0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UEÂ =Â 0).
0x40013C08 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data is written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: This control bit enables checking the communication flow w/o reading the data
0x40013C08 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40013C08 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. .
0x40013C08 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UEÂ =Â 0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UEÂ =Â 0). When the USART is enabled (UEÂ =Â 1), this bitfield may only be written to 0x0, in order to stop retransmission. Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 20w02 WUS (rw): Wakeup from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wakeup from low-power mode flag). This bitfield can only be written when the USART is disabled (UEÂ =Â 0). If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40013C08 C   FIELD 22w01 WUFIE (rw): Wakeup from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40013C08 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40013C08 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013C08 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40013C08 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40013C08 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x40013C0C B  REGISTER BRR (rw): Baud rate register
0x40013C0C C   FIELD 00w16 BRR (rw): USART baud rate
0x40013C10 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40013C10 C   FIELD 00w08 PSC (rw): Prescaler value In IrDA low-power and normal IrDA mode: PSC[7:0] = IrDA Normal and Low-Power baud rate PSC[7:0] is used to program the prescaler for dividing the USART source clock to achieve the low-power frequency: the source clock is divided by the value given in the register (8 significant bits): In Smartcard mode: PSC[4:0]Â =Â Prescaler value PSC[4:0] is used to program the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... 0010Â 0000: Divides the source clock by 32 (IrDA mode) ... 1111Â 1111: Divides the source clock by 255 (IrDA mode) This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. This bitfield is reserved and forced by hardware to '0â when the Smartcard and IrDA modes are not supported. Refer to .
0x40013C10 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UEÂ =Â 0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C14 B  REGISTER RTOR (rw): Receiver timeout register
0x40013C14 C   FIELD 00w24 RTO: Receiver timeout value
0x40013C14 C   FIELD 24w08 BLEN: Block Length
0x40013C18 B  REGISTER RQR (wo): Request register
0x40013C18 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF flag in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to .
0x40013C18 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software should wait for the TXE flag assertion before setting the SBKRQ bit.
0x40013C18 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40013C18 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40013C18 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing '1â to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x40013C1C B  REGISTER ISR_FIFO_DISABLED (ro): Interrupt & status register
0x40013C1C B  REGISTER ISR_FIFO_ENABLED (ro): Interrupt & status register
0x40013C1C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register.
0x40013C1C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x40013C1C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register.
0x40013C1C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIEÂ =Â 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x40013C1C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861). This error is associated with the character in the USART_RDR.
0x40013C1C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NECF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Tolerance of the USART receiver to clock deviation on pageÂ 861).
0x40013C1C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIEÂ =Â 1 or EIE = 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x40013C1C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNEÂ =Â 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIEÂ =Â 1 or EIE Â =Â 1 in the USART_CR1 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x40013C1C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x40013C1C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIEÂ =Â 1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). If Mute mode is enabled (MMEÂ =Â 1), IDLE is set if the USART is not mute (RWUÂ =Â 0), whatever the Mute mode selected by the WAKE bit. If RWUÂ =Â 1, IDLE is not set.
0x40013C1C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIEÂ =Â 1 in the USART_CR1 register.
0x40013C1C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIEÂ =Â 1 in the USART_CR1 register.
0x40013C1C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is set immediately.
0x40013C1C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. It is set by hardware when the transmission of a frame containing data is complete and when TXFE is set. An interrupt is generated if TCIEÂ =Â 1 in the USART_CR1 register. TC bit is is cleared by software, by writing 1 to the TCCF in the USART_ICR register or by a write to the USART_TDR register. Note: If TE bit is reset and no transmission is on going, the TC bit is immediately set.
0x40013C1C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard TÂ =Â 0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit Â =Â 1 in the USART_CR1 register.
0x40013C1C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF should be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). This bit is used during single buffer transmission.
0x40013C1C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIEÂ =Â 1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIEÂ =Â 1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example TÂ =Â 1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if the EOBIEÂ =Â 1 in the USART_CR2 register. It is cleared by software, writing 1 to the EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABREÂ =Â 1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40013C1C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x40013C1C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x40013C1C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x40013C1C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIEÂ =Â 1in the USART_CR1 register.
0x40013C1C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x40013C1C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x40013C1C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 19w01 RWU (ro): Receiver wakeup from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wakeup/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 20w01 WUF (ro): Wakeup from low-power mode flag This bit is set by hardware, when a wakeup event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIEÂ =Â 1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x40013C1C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TEÂ =Â 0, followed by TEÂ =Â 1 in the USART_CR1 register, in order to respect the TEÂ =Â 0 minimum period.
0x40013C1C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and kept at reset value. Refer to .
0x40013C1C C   FIELD 23w01 TXFE (ro): TXFIFO empty This bit is set by hardware when TXFIFO is empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit Â =Â 1 (bit 30) in the USART_CR1 register.
0x40013C1C C   FIELD 24w01 RXFF (ro): RXFIFO full This bit is set by hardware when the number of received data corresponds to RXFIFOÂ sizeÂ +Â 1 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit Â =Â 1 in the USART_CR1 register.
0x40013C1C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x40013C1C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIEÂ =Â 1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is '1â. Refer to on pageÂ 835.
0x40013C1C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit Â =Â 1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to '101â, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x40013C1C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit Â =Â 1 (bit 31) in the USART_CR3 register.
0x40013C20 B  REGISTER ICR (wo): Interrupt flag clear register
0x40013C20 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40013C20 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40013C20 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40013C20 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40013C20 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40013C20 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40013C20 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40013C20 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40013C20 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C20 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to .
0x40013C20 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40013C20 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to .
0x40013C20 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to
0x40013C20 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40013C20 C   FIELD 20w01 WUCF (wo): Wakeup from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wakeup from Stop feature, this bit is reserved and must be kept at reset value. Refer to pageÂ 835.
0x40013C24 B  REGISTER RDR (ro): Receive data register
0x40013C24 C   FIELD 00w09 RDR: Receive data value
0x40013C28 B  REGISTER TDR (rw): Transmit data register
0x40013C28 C   FIELD 00w09 TDR: Transmit data value
0x40013C2C B  REGISTER PRESC (rw): Prescaler register
0x40013C2C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is 1011 i.e. input clock divided by 256.
0x40014000 A PERIPHERAL TIM15
0x40014000 B  REGISTER CR1 (rw): control register 1
0x40014000 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock and gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x40014000 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40014000 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40014000 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40014000 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40014000 C   FIELD 08w02 CKD (rw): Clock division This bitfield indicates the division ratio between the timer clock (CK_INT) frequency and the dead-time and sampling clock (tDTS) used by the dead-time generators and the digital filters (TIx)
0x40014000 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40014004 B  REGISTER CR2 (rw): control register 2
0x40014004 C   FIELD 00w01 CCPC (rw): Capture/compare preloaded control Note: This bit acts only on channels that have a complementary output.
0x40014004 C   FIELD 02w01 CCUS (rw): Capture/compare control update selection Note: This bit acts only on channels that have a complementary output.
0x40014004 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40014004 C   FIELD 04w03 MMS (rw): Master mode selection These bits allow to select the information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows:
0x40014004 C   FIELD 07w01 TI1S (rw): TI1 selection
0x40014004 C   FIELD 08w01 OIS1 (rw): Output Idle state 1 (OC1 output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIM15_BDTR register).
0x40014004 C   FIELD 09w01 OIS1N (rw): Output Idle state 1 (OC1N output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIM15_BDTR register).
0x40014004 C   FIELD 10w01 OIS2 (rw): Output idle state 2 (OC2 output) Note: This bit cannot be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in the TIM15_BDTR register).
0x40014008 B  REGISTER SMCR (rw): slave mode control register
0x40014008 C   FIELD 00w03 SMS1 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Other codes: reserved. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=â00100â). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40014008 C   FIELD 04w03 TS1 (rw): Trigger selection This bit field selects the trigger input to be used to synchronize the counter. Other: Reserved See for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40014008 C   FIELD 07w01 MSM (rw): Master/slave mode
0x40014008 C   FIELD 16w01 SMS2 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Other codes: reserved. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=â00100â). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40014008 C   FIELD 20w02 TS2 (rw): Trigger selection This bit field selects the trigger input to be used to synchronize the counter. Other: Reserved See for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x4001400C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4001400C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4001400C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4001400C C   FIELD 02w01 CC2IE (rw): Capture/Compare 2 interrupt enable
0x4001400C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x4001400C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x4001400C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x4001400C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4001400C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x4001400C C   FIELD 10w01 CC2DE (rw): Capture/Compare 2 DMA request enable
0x4001400C C   FIELD 13w01 COMDE (rw): COM DMA request enable
0x4001400C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40014010 B  REGISTER SR (rw): status register
0x40014010 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to control register (TIM15_SMCR)), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40014010 C   FIELD 01w01 CC1IF (rw): Capture/Compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40014010 C   FIELD 02w01 CC2IF (rw): Capture/Compare 2 interrupt flag refer to CC1IF description
0x40014010 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on a COM event (once the capture/compare control bits âCCxE, CCxNE, OCxMâ have been updated). It is cleared by software.
0x40014010 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on TRGI input when the slave mode controller is enabled in all modes but gated mode, both edges in case gated mode is selected). It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x40014010 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x40014010 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40014010 C   FIELD 10w01 CC2OF (rw): Capture/Compare 2 overcapture flag Refer to CC1OF description
0x40014014 B  REGISTER EGR (wo): event generation register
0x40014014 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40014014 C   FIELD 01w01 CC1G (wo): Capture/Compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40014014 C   FIELD 02w01 CC2G (wo): Capture/Compare 2 generation Refer to CC1G description
0x40014014 C   FIELD 05w01 COMG (rw): Capture/Compare control update generation This bit can be set by software, it is automatically cleared by hardware. Note: This bit acts only on channels that have a complementary output.
0x40014014 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40014014 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40014018 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40014018 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x40014018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40014018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40014018 C   FIELD 02w01 OC1FE (rw): Output Compare 1 fast enable This bit decreases the latency between a trigger event and a transition on the timer output. It must be used in one-pulse mode (OPM bit set in TIMx_CR1 register), to have the output pulse starting as soon as possible after the starting trigger.
0x40014018 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (IC1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x40014018 C   FIELD 03w01 OC1PE (rw): Output Compare 1 preload enable Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). The PWM mode can be used without validating the preload register only in one pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
0x40014018 C   FIELD 04w03 OC1M1 (rw): Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). In PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. On channels that have a complementary output, this bit field is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the OC1M active bits take the new value from the preloaded bits only when a COM event is generated. The OC1M[3] bit is not contiguous, located in bit 16.
0x40014018 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample TI1 input and the length of the digital filter applied to TI1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40014018 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = '0â in TIMx_CCER).
0x40014018 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = '0â in TIMx_CCER).
0x40014018 C   FIELD 10w01 OC2FE (rw): Output Compare 2 fast enable
0x40014018 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler
0x40014018 C   FIELD 11w01 OC2PE (rw): Output Compare 2 preload enable
0x40014018 C   FIELD 12w03 OC2M1 (rw): Output Compare 2 mode
0x40014018 C   FIELD 12w04 IC2F (rw): Input capture 2 filter
0x40014018 C   FIELD 16w01 OC1M2 (rw): Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). In PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. On channels that have a complementary output, this bit field is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the OC1M active bits take the new value from the preloaded bits only when a COM event is generated. The OC1M[3] bit is not contiguous, located in bit 16.
0x40014018 C   FIELD 24w01 OC2M2 (rw): Output Compare 2 mode
0x40014020 B  REGISTER CCER (rw): capture/compare enable register
0x40014020 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to for details.
0x40014020 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: this configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). On channels that have a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40014020 C   FIELD 02w01 CC1NE (rw): Capture/Compare 1 complementary output enable
0x40014020 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of TI1FP1 and TI2FP1. Refer to CC1P description. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). On channels that have a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40014020 C   FIELD 04w01 CC2E (rw): Capture/Compare 2 output enable Refer to CC1E description
0x40014020 C   FIELD 05w01 CC2P (rw): Capture/Compare 2 output polarity Refer to CC1P description
0x40014020 C   FIELD 07w01 CC2NP (rw): Capture/Compare 2 complementary output polarity Refer to CC1NP description
0x40014024 B  REGISTER CNT: counter
0x40014024 C   FIELD 00w16 CNT (rw): counter value
0x40014024 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x40014028 B  REGISTER PSC (rw): prescaler
0x40014028 C   FIELD 00w16 PSC: Prescaler value
0x4001402C B  REGISTER ARR (rw): auto-reload register
0x4001402C C   FIELD 00w16 ARR: Auto-reload value
0x40014030 B  REGISTER RCR (rw): repetition counter register
0x40014030 C   FIELD 00w08 REP: Repetition counter value
0x40014034 B  REGISTER CCR1 (rw): capture/compare register 1
0x40014034 C   FIELD 00w16 CCR1: Capture/Compare 1 value
0x40014038 B  REGISTER CCR2 (rw): capture/compare register 2
0x40014038 C   FIELD 00w16 CCR2: Capture/Compare 2 value
0x40014044 B  REGISTER BDTR (rw): break and dead-time register
0x40014044 C   FIELD 00w08 DTG (rw): Dead-time generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration. DTG[7:5]=0xx => DT=DTG[7:0]x tdtg with tdtg=tDTS DTG[7:5]=10x => DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS DTG[7:5]=110 => DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS DTG[7:5]=111 => DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 Âµs to 31750 ns by 250 ns steps, 32 Âµs to 63 Âµs by 1 Âµs steps, 64 Âµs to 126 Âµs by 2 Âµs steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014044 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x40014044 C   FIELD 10w01 OSSI (rw): Off-state selection for Idle mode This bit is used when MOE=0 on channels configured as outputs. See OC/OCN enable description for more details (enable register (TIM15_CCER) on pageÂ 818). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014044 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels that have a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (enable register (TIM15_CCER) on pageÂ 818). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014044 C   FIELD 12w01 BKE (rw): Break enable 1; Break inputs (BRK and CCS clock failure event) enabled This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014044 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014044 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014044 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as the break input is active. It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. See OC/OCN enable description for more details (enable register (TIM15_CCER) on pageÂ 818).
0x40014044 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample the BRK input signal and the length of the digital filter applied to BRK. The digital filter is made of an event counter in which N events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014044 C   FIELD 26w01 BKDSRM (rw): Break Disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014044 C   FIELD 28w01 BKBID (rw): Break Bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014048 B  REGISTER DCR (rw): DMA control register
0x40014048 C   FIELD 00w05 DBA (rw): DMA base address This 5-bit field defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ...
0x40014048 C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit field defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address). ...
0x4001404C B  REGISTER DMAR (rw): DMA address for full transfer
0x4001404C C   FIELD 00w16 DMAB: DMA register for burst accesses
0x40014060 B  REGISTER AF1 (rw): TIM15 alternate register 1
0x40014060 C   FIELD 00w01 BKINE (rw): BRK BKIN input enable This bit enables the BKIN alternate function input for the timerâs BRK input. BKIN input is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014060 C   FIELD 01w01 BKCMP1E (rw): BRK COMP1 enable This bit enables the COMP1 for the timerâs BRK input. COMP1 output is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014060 C   FIELD 02w01 BKCMP2E (rw): BRK COMP2 enable This bit enables the COMP2 for the timerâs BRK input. COMP2 output is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014060 C   FIELD 09w01 BKINP (rw): BRK BKIN input polarity This bit selects the BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014060 C   FIELD 10w01 BKCMP1P (rw): BRK COMP1 input polarity This bit selects the COMP1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014060 C   FIELD 11w01 BKCMP2P (rw): BRK COMP2 input polarity This bit selects the COMP2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014068 B  REGISTER TISEL (rw): input selection register
0x40014068 C   FIELD 00w04 TI1SEL (rw): selects TI1[0] to TI1[15] input Others: Reserved
0x40014068 C   FIELD 08w04 TI2SEL (rw): selects TI2[0] to TI2[15] input Others: Reserved
0x40014400 A PERIPHERAL TIM16
0x40014400 B  REGISTER CR1 (rw): control register 1
0x40014400 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock and gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x40014400 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40014400 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40014400 C   FIELD 03w01 OPM (rw): One pulse mode
0x40014400 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40014400 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and the dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters (TIx),
0x40014400 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40014404 B  REGISTER CR2 (rw): control register 2
0x40014404 C   FIELD 00w01 CCPC (rw): Capture/compare preloaded control Note: This bit acts only on channels that have a complementary output.
0x40014404 C   FIELD 02w01 CCUS (rw): Capture/compare control update selection Note: This bit acts only on channels that have a complementary output.
0x40014404 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40014404 C   FIELD 08w01 OIS1 (rw): Output Idle state 1 (OC1 output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014404 C   FIELD 09w01 OIS1N (rw): Output Idle state 1 (OC1N output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x4001440C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4001440C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4001440C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4001440C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x4001440C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x4001440C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4001440C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x40014410 B  REGISTER SR (rw): status register
0x40014410 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40014410 C   FIELD 01w01 CC1IF (rw): Capture/Compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40014410 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on a COM event (once the capture/compare control bits âCCxE, CCxNE, OCxMâ have been updated). It is cleared by software.
0x40014410 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x40014410 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40014414 B  REGISTER EGR (wo): event generation register
0x40014414 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40014414 C   FIELD 01w01 CC1G (wo): Capture/Compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40014414 C   FIELD 05w01 COMG (wo): Capture/Compare control update generation This bit can be set by software, it is automatically cleared by hardware. Note: This bit acts only on channels that have a complementary output.
0x40014414 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40014418 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40014418 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x40014418 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Others: Reserved Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40014418 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Others: Reserved Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40014418 C   FIELD 02w01 OC1FE (rw): Output Compare 1 fast enable This bit decreases the latency between a trigger event and a transition on the timer output. It must be used in one-pulse mode (OPM bit set in TIMx_CR1 register), to have the output pulse starting as soon as possible after the starting trigger.
0x40014418 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (IC1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x40014418 C   FIELD 03w01 OC1PE (rw): Output Compare 1 preload enable Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). The PWM mode can be used without validating the preload register only in one pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
0x40014418 C   FIELD 04w03 OC1M1 (rw): Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. All other values: Reserved Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). In PWM mode 1 or 2, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. The OC1M[3] bit is not contiguous, located in bit 16.
0x40014418 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample TI1 input and the length of the digital filter applied to TI1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40014418 C   FIELD 16w01 OC1M2 (rw): Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. All other values: Reserved Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). In PWM mode 1 or 2, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. The OC1M[3] bit is not contiguous, located in bit 16.
0x40014420 B  REGISTER CCER (rw): capture/compare enable register
0x40014420 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to for details.
0x40014420 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: this configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). On channels that have a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40014420 C   FIELD 02w01 CC1NE (rw): Capture/Compare 1 complementary output enable
0x40014420 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of TI1FP1 and TI2FP1. Refer to the description of CC1P. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). On channels that have a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a commutation event is generated.
0x40014424 B  REGISTER CNT: counter
0x40014424 C   FIELD 00w16 CNT (rw): counter value
0x40014424 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x40014428 B  REGISTER PSC (rw): prescaler
0x40014428 C   FIELD 00w16 PSC: Prescaler value
0x4001442C B  REGISTER ARR (rw): auto-reload register
0x4001442C C   FIELD 00w16 ARR: Auto-reload value
0x40014430 B  REGISTER RCR (rw): repetition counter register
0x40014430 C   FIELD 00w08 REP: Repetition counter value
0x40014434 B  REGISTER CCR1 (rw): capture/compare register 1
0x40014434 C   FIELD 00w16 CCR1: Capture/Compare 1 value
0x40014444 B  REGISTER BDTR (rw): break and dead-time register
0x40014444 C   FIELD 00w08 DTG (rw): Dead-time generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration. DTG[7:5]=0xx => DT=DTG[7:0]x tdtg with tdtg=tDTS DTG[7:5]=10x => DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS DTG[7:5]=110 => DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS DTG[7:5]=111 => DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 Âµs to 31750 ns by 250 ns steps, 32 Âµs to 63 Âµs by 1 Âµs steps, 64 Âµs to 126 Âµs by 2 Âµs steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014444 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x40014444 C   FIELD 10w01 OSSI (rw): Off-state selection for Idle mode This bit is used when MOE=0 on channels configured as outputs. See OC/OCN enable description for more details (enable register (TIM16_CCER)(TIMx_CCER)(x = 16 to 17) on pageÂ 846). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014444 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels that have a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (enable register (TIM16_CCER)(TIMx_CCER)(x = 16 to 17) on pageÂ 846). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014444 C   FIELD 12w01 BKE (rw): Break enable 1; Break inputs (BRK and CCS clock failure event) enabled Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014444 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014444 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014444 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as the break input is active. It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. enable register (TIM16_CCER)(TIMx_CCER)(x = 16 to 17) on pageÂ 846).
0x40014444 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample BRK input and the length of the digital filter applied to BRK. The digital filter is made of an event counter in which N events are needed to validate a transition on the output: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014444 C   FIELD 26w01 BKDSRM (rw): Break Disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014444 C   FIELD 28w01 BKBID (rw): Break Bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014448 B  REGISTER DCR (rw): DMA control register
0x40014448 C   FIELD 00w05 DBA (rw): DMA base address This 5-bit field defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ... Example: Let us consider the following transfer: DBL = 7 transfers and DBA = TIMx_CR1. In this case the transfer is done to/from 7 registers starting from the TIMx_CR1 address.
0x40014448 C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit field defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers. Transfers can be in half-words or in bytes (see example below). ...
0x4001444C B  REGISTER DMAR (rw): DMA address for full transfer
0x4001444C C   FIELD 00w16 DMAB: DMA register for burst accesses
0x40014460 B  REGISTER AF1 (rw): TIM17 option register 1
0x40014460 C   FIELD 00w01 BKINE (rw): BRK BKIN input enable This bit enables the BKIN alternate function input for the timerâs BRK input. BKIN input is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014460 C   FIELD 01w01 BKCMP1E (rw): BRK COMP1 enable This bit enables the COMP1 for the timerâs BRK input. COMP1 output is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014460 C   FIELD 02w01 BKCMP2E (rw): BRK COMP2 enable This bit enables the COMP2 for the timerâs BRK input. COMP2 output is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014460 C   FIELD 09w01 BKINP (rw): BRK BKIN input polarity This bit selects the BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014460 C   FIELD 10w01 BKCMP1P (rw): BRK COMP1 input polarity This bit selects the COMP1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014460 C   FIELD 11w01 BKCMP2P (rw): BRK COMP2 input polarity This bit selects the COMP2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014468 B  REGISTER TISEL (rw): input selection register
0x40014468 C   FIELD 00w04 TI1SEL (rw): selects TI1[0] to TI1[15] input Others: Reserved
0x40014800 A PERIPHERAL TIM17
0x40014800 B  REGISTER CR1 (rw): control register 1
0x40014800 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock and gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x40014800 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40014800 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40014800 C   FIELD 03w01 OPM (rw): One pulse mode
0x40014800 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40014800 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and the dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters (TIx),
0x40014800 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40014804 B  REGISTER CR2 (rw): control register 2
0x40014804 C   FIELD 00w01 CCPC (rw): Capture/compare preloaded control Note: This bit acts only on channels that have a complementary output.
0x40014804 C   FIELD 02w01 CCUS (rw): Capture/compare control update selection Note: This bit acts only on channels that have a complementary output.
0x40014804 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40014804 C   FIELD 08w01 OIS1 (rw): Output Idle state 1 (OC1 output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014804 C   FIELD 09w01 OIS1N (rw): Output Idle state 1 (OC1N output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x4001480C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4001480C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4001480C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4001480C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x4001480C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x4001480C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4001480C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x40014810 B  REGISTER SR (rw): status register
0x40014810 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40014810 C   FIELD 01w01 CC1IF (rw): Capture/Compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40014810 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on a COM event (once the capture/compare control bits âCCxE, CCxNE, OCxMâ have been updated). It is cleared by software.
0x40014810 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x40014810 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40014814 B  REGISTER EGR (wo): event generation register
0x40014814 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40014814 C   FIELD 01w01 CC1G (wo): Capture/Compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40014814 C   FIELD 05w01 COMG (wo): Capture/Compare control update generation This bit can be set by software, it is automatically cleared by hardware. Note: This bit acts only on channels that have a complementary output.
0x40014814 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40014818 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40014818 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x40014818 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Others: Reserved Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40014818 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Others: Reserved Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40014818 C   FIELD 02w01 OC1FE (rw): Output Compare 1 fast enable This bit decreases the latency between a trigger event and a transition on the timer output. It must be used in one-pulse mode (OPM bit set in TIMx_CR1 register), to have the output pulse starting as soon as possible after the starting trigger.
0x40014818 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (IC1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x40014818 C   FIELD 03w01 OC1PE (rw): Output Compare 1 preload enable Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). The PWM mode can be used without validating the preload register only in one pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.
0x40014818 C   FIELD 04w03 OC1M1 (rw): Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. All other values: Reserved Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). In PWM mode 1 or 2, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. The OC1M[3] bit is not contiguous, located in bit 16.
0x40014818 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample TI1 input and the length of the digital filter applied to TI1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40014818 C   FIELD 16w01 OC1M2 (rw): Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. All other values: Reserved Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). In PWM mode 1 or 2, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from âfrozenâ mode to âPWMâ mode. The OC1M[3] bit is not contiguous, located in bit 16.
0x40014820 B  REGISTER CCER (rw): capture/compare enable register
0x40014820 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to for details.
0x40014820 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: this configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). On channels that have a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40014820 C   FIELD 02w01 CC1NE (rw): Capture/Compare 1 complementary output enable
0x40014820 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of TI1FP1 and TI2FP1. Refer to the description of CC1P. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (the channel is configured in output). On channels that have a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a commutation event is generated.
0x40014824 B  REGISTER CNT: counter
0x40014824 C   FIELD 00w16 CNT (rw): counter value
0x40014824 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x40014828 B  REGISTER PSC (rw): prescaler
0x40014828 C   FIELD 00w16 PSC: Prescaler value
0x4001482C B  REGISTER ARR (rw): auto-reload register
0x4001482C C   FIELD 00w16 ARR: Auto-reload value
0x40014830 B  REGISTER RCR (rw): repetition counter register
0x40014830 C   FIELD 00w08 REP: Repetition counter value
0x40014834 B  REGISTER CCR1 (rw): capture/compare register 1
0x40014834 C   FIELD 00w16 CCR1: Capture/Compare 1 value
0x40014844 B  REGISTER BDTR (rw): break and dead-time register
0x40014844 C   FIELD 00w08 DTG (rw): Dead-time generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration. DTG[7:5]=0xx => DT=DTG[7:0]x tdtg with tdtg=tDTS DTG[7:5]=10x => DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS DTG[7:5]=110 => DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS DTG[7:5]=111 => DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 Âµs to 31750 ns by 250 ns steps, 32 Âµs to 63 Âµs by 1 Âµs steps, 64 Âµs to 126 Âµs by 2 Âµs steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014844 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x40014844 C   FIELD 10w01 OSSI (rw): Off-state selection for Idle mode This bit is used when MOE=0 on channels configured as outputs. See OC/OCN enable description for more details (enable register (TIM16_CCER)(TIMx_CCER)(x = 16 to 17) on pageÂ 846). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014844 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels that have a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (enable register (TIM16_CCER)(TIMx_CCER)(x = 16 to 17) on pageÂ 846). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014844 C   FIELD 12w01 BKE (rw): Break enable 1; Break inputs (BRK and CCS clock failure event) enabled Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014844 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014844 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014844 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as the break input is active. It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. enable register (TIM16_CCER)(TIMx_CCER)(x = 16 to 17) on pageÂ 846).
0x40014844 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample BRK input and the length of the digital filter applied to BRK. The digital filter is made of an event counter in which N events are needed to validate a transition on the output: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014844 C   FIELD 26w01 BKDSRM (rw): Break Disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014844 C   FIELD 28w01 BKBID (rw): Break Bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40014848 B  REGISTER DCR (rw): DMA control register
0x40014848 C   FIELD 00w05 DBA (rw): DMA base address This 5-bit field defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ... Example: Let us consider the following transfer: DBL = 7 transfers and DBA = TIMx_CR1. In this case the transfer is done to/from 7 registers starting from the TIMx_CR1 address.
0x40014848 C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit field defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers. Transfers can be in half-words or in bytes (see example below). ...
0x4001484C B  REGISTER DMAR (rw): DMA address for full transfer
0x4001484C C   FIELD 00w16 DMAB: DMA register for burst accesses
0x40014860 B  REGISTER AF1 (rw): TIM17 option register 1
0x40014860 C   FIELD 00w01 BKINE (rw): BRK BKIN input enable This bit enables the BKIN alternate function input for the timerâs BRK input. BKIN input is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014860 C   FIELD 01w01 BKCMP1E (rw): BRK COMP1 enable This bit enables the COMP1 for the timerâs BRK input. COMP1 output is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014860 C   FIELD 02w01 BKCMP2E (rw): BRK COMP2 enable This bit enables the COMP2 for the timerâs BRK input. COMP2 output is 'ORedâ with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014860 C   FIELD 09w01 BKINP (rw): BRK BKIN input polarity This bit selects the BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014860 C   FIELD 10w01 BKCMP1P (rw): BRK COMP1 input polarity This bit selects the COMP1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014860 C   FIELD 11w01 BKCMP2P (rw): BRK COMP2 input polarity This bit selects the COMP2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40014868 B  REGISTER TISEL (rw): input selection register
0x40014868 C   FIELD 00w04 TI1SEL (rw): selects TI1[0] to TI1[15] input Others: Reserved
0x40015800 A PERIPHERAL DBG
0x40015800 B  REGISTER IDCODE (ro): MCU Device ID Code Register
0x40015800 C   FIELD 00w12 DEV_ID: Device Identifier
0x40015800 C   FIELD 16w16 REV_ID: Revision Identifier
0x40015804 B  REGISTER DBG_CR (rw): DBG configuration register
0x40015804 C   FIELD 01w01 DBG_STOP (rw): Debug Stop mode Debug options in Stop mode. Upon Stop mode exit, the software must re-establish the desired clock configuration.
0x40015804 C   FIELD 02w01 DBG_STANDBY (rw): Debug Standby and Shutdown modes Debug options in Standby or Shutdown mode.
0x40015808 B  REGISTER DBG_APB_FZ1 (rw): DBG APB freeze register 1
0x40015808 C   FIELD 00w01 DBG_TIM2_STOP (rw): Clocking of TIM2 counter when the core is halted This bit enables/disables the clock to the counter of TIM2 when the core is halted:
0x40015808 C   FIELD 01w01 DBG_TIM3_STOP (rw): Clocking of TIM3 counter when the core is halted This bit enables/disables the clock to the counter of TIM3 when the core is halted:
0x40015808 C   FIELD 04w01 DBG_TIM6_STOP (rw): Clocking of TIM6 counter when the core is halted This bit enables/disables the clock to the counter of TIM6 when the core is halted:
0x40015808 C   FIELD 05w01 DBG_TIM7_STOP (rw): Clocking of TIM7 counter when the core is halted. This bit enables/disables the clock to the counter of ITIM7 when the core is halted:
0x40015808 C   FIELD 10w01 DBG_RTC_STOP (rw): Clocking of RTC counter when the core is halted This bit enables/disables the clock to the counter of RTC when the core is halted:
0x40015808 C   FIELD 11w01 DBG_WWDG_STOP (rw): Clocking of WWDG counter when the core is halted This bit enables/disables the clock to the counter of WWDG when the core is halted:
0x40015808 C   FIELD 12w01 DBG_IWDG_STOP (rw): Clocking of IWDG counter when the core is halted This bit enables/disables the clock to the counter of IWDG when the core is halted:
0x40015808 C   FIELD 21w01 DBG_I2C1_SMBUS_TIMEOUT (rw): SMBUS timeout when core is halted
0x40015808 C   FIELD 30w01 DBG_LPTIM2_STOP (rw): Clocking of LPTIMER2 counter when the core is halted This bit enables/disables the clock to the counter of LPTIMER2 when the core is halted:
0x40015808 C   FIELD 31w01 DBG_LPTIM1_STOP (rw): Clocking of LPTIMER1 counter when the core is halted This bit enables/disables the clock to the counter of LPTIMER1 when the core is halted:
0x4001580C B  REGISTER DBG_APB_FZ2 (rw): DBG APB freeze register 2
0x4001580C C   FIELD 11w01 DBG_TIM1_STOP (rw): Clocking of TIM1 counter when the core is halted This bit enables/disables the clock to the counter of TIM1 when the core is halted:
0x4001580C C   FIELD 15w01 DBG_TIM14_STOP (rw): Clocking of TIM14 counter when the core is halted This bit enables/disables the clock to the counter of TIM14 when the core is halted:
0x4001580C C   FIELD 16w01 DBG_TIM15_STOP (rw): Clocking of TIM15 counter when the core is halted This bit enables/disables the clock to the counter of TIM15 when the core is halted: Only available on STM32G071xx and STM32G081xx, reserved on STM32G031xx and STM32G041xx.
0x4001580C C   FIELD 17w01 DBG_TIM16_STOP (rw): Clocking of TIM16 counter when the core is halted This bit enables/disables the clock to the counter of TIM16 when the core is halted:
0x4001580C C   FIELD 18w01 DBG_TIM17_STOP (rw): Clocking of TIM17 counter when the core is halted This bit enables/disables the clock to the counter of TIM17 when the core is halted:
0x40020000 A PERIPHERAL DMA1
0x40020000 B  REGISTER ISR (ro): low interrupt status register
0x40020000 C   FIELD 00w01 GIF1 (ro): Channel 1 global interrupt flag
0x40020000 C   FIELD 01w01 TCIF1 (ro): Channel 1 transfer complete flag
0x40020000 C   FIELD 02w01 HTIF1 (ro): Channel 1 half transfer flag
0x40020000 C   FIELD 03w01 TEIF1 (ro): Channel 1 transfer error flag
0x40020000 C   FIELD 04w01 GIF2 (ro): Channel 2 global interrupt flag
0x40020000 C   FIELD 05w01 TCIF2 (ro): Channel 2 transfer complete flag
0x40020000 C   FIELD 06w01 HTIF2 (ro): Channel 2 half transfer flag
0x40020000 C   FIELD 07w01 TEIF2 (ro): Channel 2 transfer error flag
0x40020000 C   FIELD 08w01 GIF3 (ro): Channel 3 global interrupt flag
0x40020000 C   FIELD 09w01 TCIF3 (ro): Channel 3 transfer complete flag
0x40020000 C   FIELD 10w01 HTIF3 (ro): Channel 3 half transfer flag
0x40020000 C   FIELD 11w01 TEIF3 (ro): Channel 3 transfer error flag
0x40020000 C   FIELD 12w01 GIF4 (ro): Channel 4 global interrupt flag
0x40020000 C   FIELD 13w01 TCIF4 (ro): Channel 4 transfer complete flag
0x40020000 C   FIELD 14w01 HTIF4 (ro): Channel 4 half transfer flag
0x40020000 C   FIELD 15w01 TEIF4 (ro): Channel 4 transfer error flag
0x40020000 C   FIELD 16w01 GIF5 (ro): Channel 5 global interrupt flag
0x40020000 C   FIELD 17w01 TCIF5 (ro): Channel 5 transfer complete flag
0x40020000 C   FIELD 18w01 HTIF5 (ro): Channel 5 half transfer flag
0x40020000 C   FIELD 19w01 TEIF5 (ro): Channel 5 transfer error flag
0x40020000 C   FIELD 20w01 GIF6 (ro): Channel 6 global interrupt flag
0x40020000 C   FIELD 21w01 TCIF6 (ro): Channel 6 transfer complete flag
0x40020000 C   FIELD 22w01 HTIF6 (ro): Channel 6 half transfer flag
0x40020000 C   FIELD 23w01 TEIF6 (ro): Channel 6 transfer error flag
0x40020000 C   FIELD 24w01 GIF7 (ro): Channel 7 global interrupt flag
0x40020000 C   FIELD 25w01 TCIF7 (ro): Channel 7 transfer complete flag
0x40020000 C   FIELD 26w01 HTIF7 (ro): Channel 7 half transfer flag
0x40020000 C   FIELD 27w01 TEIF7 (ro): Channel 7 transfer error flag
0x40020004 B  REGISTER IFCR (ro): high interrupt status register
0x40020004 C   FIELD 00w01 CGIF1: Clear channel 1 global interrupt flag
0x40020004 C   FIELD 01w01 CTCIF1: Clear channel 1 transfer complete flag
0x40020004 C   FIELD 02w01 CHTIF1: Clear channel 1 half transfer flag
0x40020004 C   FIELD 03w01 CTEIF1: Clear channel 1 transfer error flag
0x40020004 C   FIELD 04w01 CGIF2: Clear channel 2 global interrupt flag
0x40020004 C   FIELD 05w01 CTCIF2: Clear channel 2 transfer complete flag
0x40020004 C   FIELD 06w01 CHTIF2: Clear channel 2 half transfer flag
0x40020004 C   FIELD 07w01 CTEIF2: Clear channel 2 transfer error flag
0x40020004 C   FIELD 08w01 CGIF3: Clear channel 3 global interrupt flag
0x40020004 C   FIELD 09w01 CTCIF3: Clear channel 3 transfer complete flag
0x40020004 C   FIELD 10w01 CHTIF3: Clear channel 3 half transfer flag
0x40020004 C   FIELD 11w01 CTEIF3: Clear channel 3 transfer error flag
0x40020004 C   FIELD 12w01 CGIF4: Clear channel 4 global interrupt flag
0x40020004 C   FIELD 13w01 CTCIF4: Clear channel 4 transfer complete flag
0x40020004 C   FIELD 14w01 CHTIF4: Clear channel 4 half transfer flag
0x40020004 C   FIELD 15w01 CTEIF15: Clear channel 4 transfer error flag
0x40020004 C   FIELD 16w01 CGIF5: Clear channel 5 global interrupt flag
0x40020004 C   FIELD 17w01 CTCIF5: Clear channel 5 transfer complete flag
0x40020004 C   FIELD 18w01 CHTIF5: Clear channel 5 half transfer flag
0x40020004 C   FIELD 19w01 CTEIF5: Clear channel 5 transfer error flag
0x40020004 C   FIELD 20w01 CGIF6: Clear channel 6 global interrupt flag
0x40020004 C   FIELD 21w01 CTCIF6: Clear channel 6 transfer complete flag
0x40020004 C   FIELD 22w01 CHTIF6: Clear channel 6 half transfer flag
0x40020004 C   FIELD 23w01 CTEIF6: Clear channel 6 transfer error flag
0x40020004 C   FIELD 24w01 CGIF7: Clear channel 7 global interrupt flag
0x40020004 C   FIELD 25w01 CTCIF7: Clear channel 7 transfer complete flag
0x40020004 C   FIELD 26w01 CHTIF7: Clear channel 7 half transfer flag
0x40020004 C   FIELD 27w01 CTEIF7: Clear channel 7 transfer error flag
0x40020008 B  CLUSTER CH1: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020008 B  REGISTER CR1 (rw): DMA channel 1 configuration register
0x40020008 C   FIELD 00w01 EN: Channel enable
0x40020008 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020008 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020008 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020008 C   FIELD 04w01 DIR: Data transfer direction
0x40020008 C   FIELD 05w01 CIRC: Circular mode
0x40020008 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020008 C   FIELD 07w01 MINC: Memory increment mode
0x40020008 C   FIELD 08w02 PSIZE: Peripheral size
0x40020008 C   FIELD 10w02 MSIZE: Memory size
0x40020008 C   FIELD 12w02 PL: Channel priority level
0x40020008 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x4002000C B  REGISTER NDTR1 (rw): DMA channel 1 number of data tegister
0x4002000C C   FIELD 00w16 NDT: Number of data to transfer
0x40020010 B  REGISTER PAR1 (rw): DMA channel 1 peripheral address
0x40020010 C   FIELD 00w32 PA: Peripheral address
0x40020014 B  REGISTER MAR1 (rw): DMA channel 1 memory address
0x40020014 C   FIELD 00w32 MA: Memory address
0x4002001C B  CLUSTER CH2: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x4002001C B  REGISTER CR2 (rw): DMA channel 1 configuration register
0x4002001C C   FIELD 00w01 EN: Channel enable
0x4002001C C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x4002001C C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x4002001C C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x4002001C C   FIELD 04w01 DIR: Data transfer direction
0x4002001C C   FIELD 05w01 CIRC: Circular mode
0x4002001C C   FIELD 06w01 PINC: Peripherarl increment mode
0x4002001C C   FIELD 07w01 MINC: Memory increment mode
0x4002001C C   FIELD 08w02 PSIZE: Peripheral size
0x4002001C C   FIELD 10w02 MSIZE: Memory size
0x4002001C C   FIELD 12w02 PL: Channel priority level
0x4002001C C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x40020020 B  REGISTER NDTR2 (rw): DMA channel 1 number of data tegister
0x40020020 C   FIELD 00w16 NDT: Number of data to transfer
0x40020024 B  REGISTER PAR2 (rw): DMA channel 1 peripheral address
0x40020024 C   FIELD 00w32 PA: Peripheral address
0x40020028 B  REGISTER MAR2 (rw): DMA channel 1 memory address
0x40020028 C   FIELD 00w32 MA: Memory address
0x40020030 B  CLUSTER CH3: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020030 B  REGISTER CR3 (rw): DMA channel 1 configuration register
0x40020030 C   FIELD 00w01 EN: Channel enable
0x40020030 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020030 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020030 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020030 C   FIELD 04w01 DIR: Data transfer direction
0x40020030 C   FIELD 05w01 CIRC: Circular mode
0x40020030 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020030 C   FIELD 07w01 MINC: Memory increment mode
0x40020030 C   FIELD 08w02 PSIZE: Peripheral size
0x40020030 C   FIELD 10w02 MSIZE: Memory size
0x40020030 C   FIELD 12w02 PL: Channel priority level
0x40020030 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x40020034 B  REGISTER NDTR3 (rw): DMA channel 1 number of data tegister
0x40020034 C   FIELD 00w16 NDT: Number of data to transfer
0x40020038 B  REGISTER PAR3 (rw): DMA channel 1 peripheral address
0x40020038 C   FIELD 00w32 PA: Peripheral address
0x4002003C B  REGISTER MAR3 (rw): DMA channel 1 memory address
0x4002003C C   FIELD 00w32 MA: Memory address
0x40020044 B  CLUSTER CH4: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020044 B  REGISTER CR4 (rw): DMA channel 1 configuration register
0x40020044 C   FIELD 00w01 EN: Channel enable
0x40020044 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020044 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020044 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020044 C   FIELD 04w01 DIR: Data transfer direction
0x40020044 C   FIELD 05w01 CIRC: Circular mode
0x40020044 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020044 C   FIELD 07w01 MINC: Memory increment mode
0x40020044 C   FIELD 08w02 PSIZE: Peripheral size
0x40020044 C   FIELD 10w02 MSIZE: Memory size
0x40020044 C   FIELD 12w02 PL: Channel priority level
0x40020044 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x40020048 B  REGISTER NDTR4 (rw): DMA channel 1 number of data tegister
0x40020048 C   FIELD 00w16 NDT: Number of data to transfer
0x4002004C B  REGISTER PAR4 (rw): DMA channel 1 peripheral address
0x4002004C C   FIELD 00w32 PA: Peripheral address
0x40020050 B  REGISTER MAR4 (rw): DMA channel 1 memory address
0x40020050 C   FIELD 00w32 MA: Memory address
0x40020058 B  CLUSTER CH5: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020058 B  REGISTER CR5 (rw): DMA channel 1 configuration register
0x40020058 C   FIELD 00w01 EN: Channel enable
0x40020058 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020058 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020058 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020058 C   FIELD 04w01 DIR: Data transfer direction
0x40020058 C   FIELD 05w01 CIRC: Circular mode
0x40020058 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020058 C   FIELD 07w01 MINC: Memory increment mode
0x40020058 C   FIELD 08w02 PSIZE: Peripheral size
0x40020058 C   FIELD 10w02 MSIZE: Memory size
0x40020058 C   FIELD 12w02 PL: Channel priority level
0x40020058 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x4002005C B  REGISTER NDTR5 (rw): DMA channel 1 number of data tegister
0x4002005C C   FIELD 00w16 NDT: Number of data to transfer
0x40020060 B  REGISTER PAR5 (rw): DMA channel 1 peripheral address
0x40020060 C   FIELD 00w32 PA: Peripheral address
0x40020064 B  REGISTER MAR5 (rw): DMA channel 1 memory address
0x40020064 C   FIELD 00w32 MA: Memory address
0x4002006C B  CLUSTER CH6: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x4002006C B  REGISTER CR6 (rw): DMA channel 1 configuration register
0x4002006C C   FIELD 00w01 EN: Channel enable
0x4002006C C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x4002006C C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x4002006C C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x4002006C C   FIELD 04w01 DIR: Data transfer direction
0x4002006C C   FIELD 05w01 CIRC: Circular mode
0x4002006C C   FIELD 06w01 PINC: Peripherarl increment mode
0x4002006C C   FIELD 07w01 MINC: Memory increment mode
0x4002006C C   FIELD 08w02 PSIZE: Peripheral size
0x4002006C C   FIELD 10w02 MSIZE: Memory size
0x4002006C C   FIELD 12w02 PL: Channel priority level
0x4002006C C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x40020070 B  REGISTER NDTR6 (rw): DMA channel 1 number of data tegister
0x40020070 C   FIELD 00w16 NDT: Number of data to transfer
0x40020074 B  REGISTER PAR6 (rw): DMA channel 1 peripheral address
0x40020074 C   FIELD 00w32 PA: Peripheral address
0x40020078 B  REGISTER MAR6 (rw): DMA channel 1 memory address
0x40020078 C   FIELD 00w32 MA: Memory address
0x40020080 B  CLUSTER CH7: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020080 B  REGISTER CR7 (rw): DMA channel 1 configuration register
0x40020080 C   FIELD 00w01 EN: Channel enable
0x40020080 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020080 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020080 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020080 C   FIELD 04w01 DIR: Data transfer direction
0x40020080 C   FIELD 05w01 CIRC: Circular mode
0x40020080 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020080 C   FIELD 07w01 MINC: Memory increment mode
0x40020080 C   FIELD 08w02 PSIZE: Peripheral size
0x40020080 C   FIELD 10w02 MSIZE: Memory size
0x40020080 C   FIELD 12w02 PL: Channel priority level
0x40020080 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x40020084 B  REGISTER NDTR7 (rw): DMA channel 1 number of data tegister
0x40020084 C   FIELD 00w16 NDT: Number of data to transfer
0x40020088 B  REGISTER PAR7 (rw): DMA channel 1 peripheral address
0x40020088 C   FIELD 00w32 PA: Peripheral address
0x4002008C B  REGISTER MAR7 (rw): DMA channel 1 memory address
0x4002008C C   FIELD 00w32 MA: Memory address
0x40020400 A PERIPHERAL DMA2
0x40020400 B  REGISTER ISR (ro): low interrupt status register
0x40020400 C   FIELD 00w01 GIF1 (ro): Channel 1 global interrupt flag
0x40020400 C   FIELD 01w01 TCIF1 (ro): Channel 1 transfer complete flag
0x40020400 C   FIELD 02w01 HTIF1 (ro): Channel 1 half transfer flag
0x40020400 C   FIELD 03w01 TEIF1 (ro): Channel 1 transfer error flag
0x40020400 C   FIELD 04w01 GIF2 (ro): Channel 2 global interrupt flag
0x40020400 C   FIELD 05w01 TCIF2 (ro): Channel 2 transfer complete flag
0x40020400 C   FIELD 06w01 HTIF2 (ro): Channel 2 half transfer flag
0x40020400 C   FIELD 07w01 TEIF2 (ro): Channel 2 transfer error flag
0x40020400 C   FIELD 08w01 GIF3 (ro): Channel 3 global interrupt flag
0x40020400 C   FIELD 09w01 TCIF3 (ro): Channel 3 transfer complete flag
0x40020400 C   FIELD 10w01 HTIF3 (ro): Channel 3 half transfer flag
0x40020400 C   FIELD 11w01 TEIF3 (ro): Channel 3 transfer error flag
0x40020400 C   FIELD 12w01 GIF4 (ro): Channel 4 global interrupt flag
0x40020400 C   FIELD 13w01 TCIF4 (ro): Channel 4 transfer complete flag
0x40020400 C   FIELD 14w01 HTIF4 (ro): Channel 4 half transfer flag
0x40020400 C   FIELD 15w01 TEIF4 (ro): Channel 4 transfer error flag
0x40020400 C   FIELD 16w01 GIF5 (ro): Channel 5 global interrupt flag
0x40020400 C   FIELD 17w01 TCIF5 (ro): Channel 5 transfer complete flag
0x40020400 C   FIELD 18w01 HTIF5 (ro): Channel 5 half transfer flag
0x40020400 C   FIELD 19w01 TEIF5 (ro): Channel 5 transfer error flag
0x40020404 B  REGISTER IFCR (ro): high interrupt status register
0x40020404 C   FIELD 00w01 CGIF1: Clear channel 1 global interrupt flag
0x40020404 C   FIELD 01w01 CTCIF1: Clear channel 1 transfer complete flag
0x40020404 C   FIELD 02w01 CHTIF1: Clear channel 1 half transfer flag
0x40020404 C   FIELD 03w01 CTEIF1: Clear channel 1 transfer error flag
0x40020404 C   FIELD 04w01 CGIF2: Clear channel 2 global interrupt flag
0x40020404 C   FIELD 05w01 CTCIF2: Clear channel 2 transfer complete flag
0x40020404 C   FIELD 06w01 CHTIF2: Clear channel 2 half transfer flag
0x40020404 C   FIELD 07w01 CTEIF2: Clear channel 2 transfer error flag
0x40020404 C   FIELD 08w01 CGIF3: Clear channel 3 global interrupt flag
0x40020404 C   FIELD 09w01 CTCIF3: Clear channel 3 transfer complete flag
0x40020404 C   FIELD 10w01 CHTIF3: Clear channel 3 half transfer flag
0x40020404 C   FIELD 11w01 CTEIF3: Clear channel 3 transfer error flag
0x40020404 C   FIELD 12w01 CGIF4: Clear channel 4 global interrupt flag
0x40020404 C   FIELD 13w01 CTCIF4: Clear channel 4 transfer complete flag
0x40020404 C   FIELD 14w01 CHTIF4: Clear channel 4 half transfer flag
0x40020404 C   FIELD 15w01 CTEIF15: Clear channel 4 transfer error flag
0x40020404 C   FIELD 16w01 CGIF5: Clear channel 5 global interrupt flag
0x40020404 C   FIELD 17w01 CTCIF5: Clear channel 5 transfer complete flag
0x40020404 C   FIELD 18w01 CHTIF5: Clear channel 5 half transfer flag
0x40020404 C   FIELD 19w01 CTEIF5: Clear channel 5 transfer error flag
0x40020408 B  CLUSTER CH1: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020408 B  REGISTER CR1 (rw): DMA channel 1 configuration register
0x40020408 C   FIELD 00w01 EN: Channel enable
0x40020408 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020408 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020408 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020408 C   FIELD 04w01 DIR: Data transfer direction
0x40020408 C   FIELD 05w01 CIRC: Circular mode
0x40020408 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020408 C   FIELD 07w01 MINC: Memory increment mode
0x40020408 C   FIELD 08w02 PSIZE: Peripheral size
0x40020408 C   FIELD 10w02 MSIZE: Memory size
0x40020408 C   FIELD 12w02 PL: Channel priority level
0x40020408 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x4002040C B  REGISTER NDTR1 (rw): DMA channel 1 number of data tegister
0x4002040C C   FIELD 00w16 NDT: Number of data to transfer
0x40020410 B  REGISTER PAR1 (rw): DMA channel 1 peripheral address
0x40020410 C   FIELD 00w32 PA: Peripheral address
0x40020414 B  REGISTER MAR1 (rw): DMA channel 1 memory address
0x40020414 C   FIELD 00w32 MA: Memory address
0x4002041C B  CLUSTER CH2: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x4002041C B  REGISTER CR2 (rw): DMA channel 1 configuration register
0x4002041C C   FIELD 00w01 EN: Channel enable
0x4002041C C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x4002041C C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x4002041C C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x4002041C C   FIELD 04w01 DIR: Data transfer direction
0x4002041C C   FIELD 05w01 CIRC: Circular mode
0x4002041C C   FIELD 06w01 PINC: Peripherarl increment mode
0x4002041C C   FIELD 07w01 MINC: Memory increment mode
0x4002041C C   FIELD 08w02 PSIZE: Peripheral size
0x4002041C C   FIELD 10w02 MSIZE: Memory size
0x4002041C C   FIELD 12w02 PL: Channel priority level
0x4002041C C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x40020420 B  REGISTER NDTR2 (rw): DMA channel 1 number of data tegister
0x40020420 C   FIELD 00w16 NDT: Number of data to transfer
0x40020424 B  REGISTER PAR2 (rw): DMA channel 1 peripheral address
0x40020424 C   FIELD 00w32 PA: Peripheral address
0x40020428 B  REGISTER MAR2 (rw): DMA channel 1 memory address
0x40020428 C   FIELD 00w32 MA: Memory address
0x40020430 B  CLUSTER CH3: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020430 B  REGISTER CR3 (rw): DMA channel 1 configuration register
0x40020430 C   FIELD 00w01 EN: Channel enable
0x40020430 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020430 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020430 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020430 C   FIELD 04w01 DIR: Data transfer direction
0x40020430 C   FIELD 05w01 CIRC: Circular mode
0x40020430 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020430 C   FIELD 07w01 MINC: Memory increment mode
0x40020430 C   FIELD 08w02 PSIZE: Peripheral size
0x40020430 C   FIELD 10w02 MSIZE: Memory size
0x40020430 C   FIELD 12w02 PL: Channel priority level
0x40020430 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x40020434 B  REGISTER NDTR3 (rw): DMA channel 1 number of data tegister
0x40020434 C   FIELD 00w16 NDT: Number of data to transfer
0x40020438 B  REGISTER PAR3 (rw): DMA channel 1 peripheral address
0x40020438 C   FIELD 00w32 PA: Peripheral address
0x4002043C B  REGISTER MAR3 (rw): DMA channel 1 memory address
0x4002043C C   FIELD 00w32 MA: Memory address
0x40020444 B  CLUSTER CH4: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020444 B  REGISTER CR4 (rw): DMA channel 1 configuration register
0x40020444 C   FIELD 00w01 EN: Channel enable
0x40020444 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020444 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020444 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020444 C   FIELD 04w01 DIR: Data transfer direction
0x40020444 C   FIELD 05w01 CIRC: Circular mode
0x40020444 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020444 C   FIELD 07w01 MINC: Memory increment mode
0x40020444 C   FIELD 08w02 PSIZE: Peripheral size
0x40020444 C   FIELD 10w02 MSIZE: Memory size
0x40020444 C   FIELD 12w02 PL: Channel priority level
0x40020444 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x40020448 B  REGISTER NDTR4 (rw): DMA channel 1 number of data tegister
0x40020448 C   FIELD 00w16 NDT: Number of data to transfer
0x4002044C B  REGISTER PAR4 (rw): DMA channel 1 peripheral address
0x4002044C C   FIELD 00w32 PA: Peripheral address
0x40020450 B  REGISTER MAR4 (rw): DMA channel 1 memory address
0x40020450 C   FIELD 00w32 MA: Memory address
0x40020458 B  CLUSTER CH5: Channel cluster: CCR?, CNDTR?, CPAR?, and CMAR? registers
0x40020458 B  REGISTER CR5 (rw): DMA channel 1 configuration register
0x40020458 C   FIELD 00w01 EN: Channel enable
0x40020458 C   FIELD 01w01 TCIE: Transfer complete interrupt enable
0x40020458 C   FIELD 02w01 HTIE: Half transfer interrupt enable
0x40020458 C   FIELD 03w01 TEIE: Transfer error interrupt enable
0x40020458 C   FIELD 04w01 DIR: Data transfer direction
0x40020458 C   FIELD 05w01 CIRC: Circular mode
0x40020458 C   FIELD 06w01 PINC: Peripherarl increment mode
0x40020458 C   FIELD 07w01 MINC: Memory increment mode
0x40020458 C   FIELD 08w02 PSIZE: Peripheral size
0x40020458 C   FIELD 10w02 MSIZE: Memory size
0x40020458 C   FIELD 12w02 PL: Channel priority level
0x40020458 C   FIELD 14w01 MEM2MEM: Memory to memory mode
0x4002045C B  REGISTER NDTR5 (rw): DMA channel 1 number of data tegister
0x4002045C C   FIELD 00w16 NDT: Number of data to transfer
0x40020460 B  REGISTER PAR5 (rw): DMA channel 1 peripheral address
0x40020460 C   FIELD 00w32 PA: Peripheral address
0x40020464 B  REGISTER MAR5 (rw): DMA channel 1 memory address
0x40020464 C   FIELD 00w32 MA: Memory address
0x40020800 A PERIPHERAL DMAMUX
0x40020800 B  REGISTER DMAMUX_C0CR (rw): DMAMUX request line multiplexer channel x configuration register
0x40020800 C   FIELD 00w06 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020800 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020800 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020800 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020800 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020800 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field shall only be written when both SE and EGE bits are low.
0x40020800 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see inputs to resources STM32G0).
0x40020804 B  REGISTER DMAMUX_C1CR (rw): DMAMUX request line multiplexer channel x configuration register
0x40020804 C   FIELD 00w06 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020804 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020804 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020804 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020804 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020804 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field shall only be written when both SE and EGE bits are low.
0x40020804 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see inputs to resources STM32G0).
0x40020808 B  REGISTER DMAMUX_C2CR (rw): DMAMUX request line multiplexer channel x configuration register
0x40020808 C   FIELD 00w06 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020808 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020808 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020808 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020808 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020808 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field shall only be written when both SE and EGE bits are low.
0x40020808 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see inputs to resources STM32G0).
0x4002080C B  REGISTER DMAMUX_C3CR (rw): DMAMUX request line multiplexer channel x configuration register
0x4002080C C   FIELD 00w06 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x4002080C C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x4002080C C   FIELD 09w01 EGE (rw): Event generation enable
0x4002080C C   FIELD 16w01 SE (rw): Synchronization enable
0x4002080C C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x4002080C C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field shall only be written when both SE and EGE bits are low.
0x4002080C C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see inputs to resources STM32G0).
0x40020810 B  REGISTER DMAMUX_C4CR (rw): DMAMUX request line multiplexer channel x configuration register
0x40020810 C   FIELD 00w06 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020810 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020810 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020810 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020810 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020810 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field shall only be written when both SE and EGE bits are low.
0x40020810 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see inputs to resources STM32G0).
0x40020814 B  REGISTER DMAMUX_C5CR (rw): DMAMUX request line multiplexer channel x configuration register
0x40020814 C   FIELD 00w06 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020814 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020814 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020814 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020814 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020814 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field shall only be written when both SE and EGE bits are low.
0x40020814 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see inputs to resources STM32G0).
0x40020818 B  REGISTER DMAMUX_C6CR (rw): DMAMUX request line multiplexer channel x configuration register
0x40020818 C   FIELD 00w06 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020818 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020818 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020818 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020818 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020818 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field shall only be written when both SE and EGE bits are low.
0x40020818 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see inputs to resources STM32G0).
0x40020880 B  REGISTER DMAMUX_CSR (ro): DMAMUX request line multiplexer interrupt channel status register
0x40020880 C   FIELD 00w01 SOF0 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 01w01 SOF1 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 02w01 SOF2 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 03w01 SOF3 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 04w01 SOF4 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 05w01 SOF5 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 06w01 SOF6 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020884 B  REGISTER DMAMUX_CFR (wo): DMAMUX request line multiplexer interrupt clear flag register
0x40020884 C   FIELD 00w01 CSOF0 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 01w01 CSOF1 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 02w01 CSOF2 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 03w01 CSOF3 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 04w01 CSOF4 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 05w01 CSOF5 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 06w01 CSOF6 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020900 B  REGISTER DMAMUX_RG0CR (rw): DMAMUX request generator channel x configuration register
0x40020900 C   FIELD 00w05 SIG_ID (rw): Signal identification Selects the DMA request trigger input used for the channel x of the DMA request generator
0x40020900 C   FIELD 08w01 OIE (rw): Trigger overrun interrupt enable
0x40020900 C   FIELD 16w01 GE (rw): DMA request generator channel x enable
0x40020900 C   FIELD 17w02 GPOL (rw): DMA request generator trigger polarity Defines the edge polarity of the selected trigger input
0x40020900 C   FIELD 19w05 GNBREQ (rw): Number of DMA requests to be generated (minus 1) Defines the number of DMA requests to be generated after a trigger event. The actual number of generated DMA requests is GNBREQ +1. Note: This field shall only be written when GE bit is disabled.
0x40020904 B  REGISTER DMAMUX_RG1CR (rw): DMAMUX request generator channel x configuration register
0x40020904 C   FIELD 00w05 SIG_ID (rw): Signal identification Selects the DMA request trigger input used for the channel x of the DMA request generator
0x40020904 C   FIELD 08w01 OIE (rw): Trigger overrun interrupt enable
0x40020904 C   FIELD 16w01 GE (rw): DMA request generator channel x enable
0x40020904 C   FIELD 17w02 GPOL (rw): DMA request generator trigger polarity Defines the edge polarity of the selected trigger input
0x40020904 C   FIELD 19w05 GNBREQ (rw): Number of DMA requests to be generated (minus 1) Defines the number of DMA requests to be generated after a trigger event. The actual number of generated DMA requests is GNBREQ +1. Note: This field shall only be written when GE bit is disabled.
0x40020908 B  REGISTER DMAMUX_RG2CR (rw): DMAMUX request generator channel x configuration register
0x40020908 C   FIELD 00w05 SIG_ID (rw): Signal identification Selects the DMA request trigger input used for the channel x of the DMA request generator
0x40020908 C   FIELD 08w01 OIE (rw): Trigger overrun interrupt enable
0x40020908 C   FIELD 16w01 GE (rw): DMA request generator channel x enable
0x40020908 C   FIELD 17w02 GPOL (rw): DMA request generator trigger polarity Defines the edge polarity of the selected trigger input
0x40020908 C   FIELD 19w05 GNBREQ (rw): Number of DMA requests to be generated (minus 1) Defines the number of DMA requests to be generated after a trigger event. The actual number of generated DMA requests is GNBREQ +1. Note: This field shall only be written when GE bit is disabled.
0x4002090C B  REGISTER DMAMUX_RG3CR (rw): DMAMUX request generator channel x configuration register
0x4002090C C   FIELD 00w05 SIG_ID (rw): Signal identification Selects the DMA request trigger input used for the channel x of the DMA request generator
0x4002090C C   FIELD 08w01 OIE (rw): Trigger overrun interrupt enable
0x4002090C C   FIELD 16w01 GE (rw): DMA request generator channel x enable
0x4002090C C   FIELD 17w02 GPOL (rw): DMA request generator trigger polarity Defines the edge polarity of the selected trigger input
0x4002090C C   FIELD 19w05 GNBREQ (rw): Number of DMA requests to be generated (minus 1) Defines the number of DMA requests to be generated after a trigger event. The actual number of generated DMA requests is GNBREQ +1. Note: This field shall only be written when GE bit is disabled.
0x40020940 B  REGISTER DMAMUX_RGSR (ro): DMAMUX request generator interrupt status register
0x40020940 C   FIELD 00w01 OF0 (ro): Trigger overrun event flag The flag is set when a new trigger event occurs on DMA request generator channel x, before the request counter underrun (the internal request counter programmed via the GNBREQ field of the DMAMUX_RGxCR register). The flag is cleared by writing 1 to the corresponding COFx bit in the DMAMUX_RGCFR register.
0x40020940 C   FIELD 01w01 OF1 (ro): Trigger overrun event flag The flag is set when a new trigger event occurs on DMA request generator channel x, before the request counter underrun (the internal request counter programmed via the GNBREQ field of the DMAMUX_RGxCR register). The flag is cleared by writing 1 to the corresponding COFx bit in the DMAMUX_RGCFR register.
0x40020940 C   FIELD 02w01 OF2 (ro): Trigger overrun event flag The flag is set when a new trigger event occurs on DMA request generator channel x, before the request counter underrun (the internal request counter programmed via the GNBREQ field of the DMAMUX_RGxCR register). The flag is cleared by writing 1 to the corresponding COFx bit in the DMAMUX_RGCFR register.
0x40020940 C   FIELD 03w01 OF3 (ro): Trigger overrun event flag The flag is set when a new trigger event occurs on DMA request generator channel x, before the request counter underrun (the internal request counter programmed via the GNBREQ field of the DMAMUX_RGxCR register). The flag is cleared by writing 1 to the corresponding COFx bit in the DMAMUX_RGCFR register.
0x40020944 B  REGISTER DMAMUX_RGCFR (wo): DMAMUX request generator interrupt clear flag register
0x40020944 C   FIELD 00w01 COF0 (wo): Clear trigger overrun event flag Writing 1 in each bit clears the corresponding overrun flag OFx in the DMAMUX_RGSR register.
0x40020944 C   FIELD 01w01 COF1 (wo): Clear trigger overrun event flag Writing 1 in each bit clears the corresponding overrun flag OFx in the DMAMUX_RGSR register.
0x40020944 C   FIELD 02w01 COF2 (wo): Clear trigger overrun event flag Writing 1 in each bit clears the corresponding overrun flag OFx in the DMAMUX_RGSR register.
0x40020944 C   FIELD 03w01 COF3 (wo): Clear trigger overrun event flag Writing 1 in each bit clears the corresponding overrun flag OFx in the DMAMUX_RGSR register.
0x40023000 A PERIPHERAL CRC
0x40023000 B  REGISTER CRC_DR (rw): Data register
0x40023000 C   FIELD 00w32 DR: Data register bits
0x40023004 B  REGISTER CRC_IDR (rw): Independent data register
0x40023004 C   FIELD 00w32 IDR: General-purpose 32-bit data register bits
0x40023008 B  REGISTER CRC_CR: Control register
0x40023008 C   FIELD 00w01 RESET (wo): RESET bit
0x40023008 C   FIELD 03w02 POLYSIZE (rw): Polynomial size These bits control the size of the polynomial.
0x40023008 C   FIELD 05w02 REV_IN (rw): Reverse input data These bits control the reversal of the bit order of the input data
0x40023008 C   FIELD 07w01 REV_OUT (rw): Reverse output data This bit controls the reversal of the bit order of the output data.
0x40023010 B  REGISTER CRC_INIT (rw): Initial CRC value
0x40023010 C   FIELD 00w32 CRC_INIT: Programmable initial CRC value
0x40023014 B  REGISTER CRC_POL (rw): polynomial
0x40023014 C   FIELD 00w32 POL: Programmable polynomial
0x40025000 A PERIPHERAL RNG
0x40025000 B  REGISTER RNG_CR (rw): control register
0x40025000 C   FIELD 02w01 RNGEN (rw): True random number generator enable
0x40025000 C   FIELD 03w01 IE (rw): Interrupt Enable
0x40025000 C   FIELD 05w01 CED (rw): Clock error detection The clock error detection cannot be enabled nor disabled on-the-fly when the RNG is enabled, i.e. to enable or disable CED the RNG must be disabled.
0x40025004 B  REGISTER RNG_SR: status register
0x40025004 C   FIELD 00w01 DRDY (ro): Data Ready Once the output buffer becomes empty (after reading the RNG_DR register), this bit returns to 0 until a new random value is generated. Note: The DRDY bit can rise when the peripheral is disabled (RNGEN=0 in the RNG_CR register). If IE=1 in the RNG_CR register, an interrupt is generated when DRDY=1.
0x40025004 C   FIELD 01w01 CECS (ro): Clock error current status Note: CECS bit is valid only if the CED bit in the RNG_CR register is set to 0.
0x40025004 C   FIELD 02w01 SECS (ro): Seed error current status One of the noise source has provided more than 64 consecutive bits at a constant value (â0â or â1â), or more than 32 consecutive occurrence of two bit patterns (â01â or â10â) Both noise sources have delivered more than 32 consecutive bits at a constant value (â0â or â1â), or more than 16 consecutive occurrence of two bit patterns (â01â or â10â)
0x40025004 C   FIELD 05w01 CEIS (rw): Clock error interrupt status This bit is set at the same time as CECS. It is cleared by writing 0. Writing 1 has no effect. An interrupt is pending if IE = 1 in the RNG_CR register.
0x40025004 C   FIELD 06w01 SEIS (rw): Seed error interrupt status This bit is set at the same time as SECS. It is cleared by writing 0. Writing 1 has no effect. An interrupt is pending if IE = 1 in the RNG_CR register.
0x40025008 B  REGISTER RNG_DR (ro): data register
0x40025008 C   FIELD 00w32 RNDATA: Random data
0x40026000 A PERIPHERAL AES
0x40026000 B  REGISTER AES_CR: AES control register
0x40026000 C   FIELD 00w01 EN (rw): AES enable This bit enables/disables the AES peripheral: At any moment, clearing then setting the bit re-initializes the AES peripheral. This bit is automatically cleared by hardware upon the completion of the key preparation (Mode 2) and upon the completion of GCM/GMAC/CCM initial phase.
0x40026000 C   FIELD 01w02 DATATYPE (rw): Data type selection This bitfield defines the format of data written in the AES_DINR register or read from the AES_DOUTR register, through selecting the mode of data swapping: For more details, refer to . Attempts to write the bitfield are ignored when the EN bit of the AES_CR register is set before the write access and it is not cleared by that write access.
0x40026000 C   FIELD 03w02 MODE (rw): AES operating mode This bitfield selects the AES operating mode: Attempts to write the bitfield are ignored when the EN bit of the AES_CR register is set before the write access and it is not cleared by that write access. Any attempt to selecting Mode 4 while either ECB or CBC chaining mode is not selected, defaults to effective selection of Mode 3. It is not possible to select a Mode 3 following a Mode 4.
0x40026000 C   FIELD 05w02 CHMOD1 (rw): Chaining mode selection, bit [2] Refer to the bits [5:6] of the register for the description of the CHMOD[2:0] bitfield CHMOD[1:0]: Chaining mode selection, bits [1:0] This bitfield, together with the bit CHMOD[2] forming CHMOD[2:0], selects the AES chaining mode: others: Reserved Attempts to write the bitfield are ignored when the EN bit of the AES_CR register is set before the write access and it is not cleared by that write access.
0x40026000 C   FIELD 07w01 CCFC (rw): Computation complete flag clear Upon written to 1, this bit clears the computation complete flag (CCF) in the AES_SR register: Reading the flag always returns zero.
0x40026000 C   FIELD 08w01 ERRC (rw): Error flag clear Upon written to 1, this bit clears the RDERR and WRERR error flags in the AES_SR register: Reading the flag always returns zero.
0x40026000 C   FIELD 09w01 CCFIE (rw): CCF interrupt enable This bit enables or disables (masks) the AES interrupt generation when CCF (computation complete flag) is set:
0x40026000 C   FIELD 10w01 ERRIE (rw): Error interrupt enable This bit enables or disables (masks) the AES interrupt generation when RDERR and/or WRERR is set:
0x40026000 C   FIELD 11w01 DMAINEN (rw): DMA input enable This bit enables/disables data transferring with DMA, in the input phase: When the bit is set, DMA requests are automatically generated by AES during the input data phase. This feature is only effective when Mode 1 or Mode 3 is selected through the MODE[1:0] bitfield. It is not effective for Mode 2 (key derivation). Usage of DMA with Mode 4 (single decryption) is not recommended.
0x40026000 C   FIELD 12w01 DMAOUTEN (rw): DMA output enable This bit enables/disables data transferring with DMA, in the output phase: When the bit is set, DMA requests are automatically generated by AES during the output data phase. This feature is only effective when Mode 1 or Mode 3 is selected through the MODE[1:0] bitfield. It is not effective for Mode 2 (key derivation). Usage of DMA with Mode 4 (single decryption) is not recommended.
0x40026000 C   FIELD 13w02 GCMPH (rw): GCM or CCM phase selection This bitfield selects the phase of GCM, GMAC or CCM algorithm: The bitfield has no effect if other than GCM, GMAC or CCM algorithms are selected (through the ALGOMODE bitfield).
0x40026000 C   FIELD 16w01 CHMOD2 (rw): Chaining mode selection, bit [2] Refer to the bits [5:6] of the register for the description of the CHMOD[2:0] bitfield CHMOD[1:0]: Chaining mode selection, bits [1:0] This bitfield, together with the bit CHMOD[2] forming CHMOD[2:0], selects the AES chaining mode: others: Reserved Attempts to write the bitfield are ignored when the EN bit of the AES_CR register is set before the write access and it is not cleared by that write access.
0x40026000 C   FIELD 18w01 KEYSIZE (rw): Key size selection This bitfield defines the length of the key used in the AES cryptographic core, in bits: Attempts to write the bit are ignored when the EN bit of the AES_CR register is set before the write access and it is not cleared by that write access.
0x40026000 C   FIELD 20w04 NPBLB (rw): Number of padding bytes in last block The bitfield sets the number of padding bytes in last block of payload: ...
0x40026004 B  REGISTER AES_SR: AES status register
0x40026004 C   FIELD 00w01 CCF (ro): Computation completed flag This flag indicates whether the computation is completed: The flag is set by hardware upon the completion of the computation. It is cleared by software, upon setting the CCFC bit of the AES_CR register. Upon the flag setting, an interrupt is generated if enabled through the CCFIE bit of the AES_CR register. The flag is significant only when the DMAOUTEN bit is 0. It may stay high when DMA_EN is 1.
0x40026004 C   FIELD 01w01 RDERR (ro): Read error flag This flag indicates the detection of an unexpected read operation from the AES_DOUTR register (during computation or data input phase): The flag is set by hardware. It is cleared by software upon setting the ERRC bit of the AES_CR register. Upon the flag setting, an interrupt is generated if enabled through the ERRIE bit of the AES_CR register. The flag setting has no impact on the AES operation. Unexpected read returns zero.
0x40026004 C   FIELD 02w01 WRERR (ro): Write error This flag indicates the detection of an unexpected write operation to the AES_DINR register (during computation or data output phase): The flag is set by hardware. It is cleared by software upon setting the ERRC bit of the AES_CR register. Upon the flag setting, an interrupt is generated if enabled through the ERRIE bit of the AES_CR register. The flag setting has no impact on the AES operation. Unexpected write is ignored.
0x40026004 C   FIELD 03w01 BUSY (ro): Busy This flag indicates whether AES is idle or busy during GCM payload encryption phase: When the flag indicates “idle”, the current GCM encryption processing may be suspended to process a higher-priority message. In other chaining modes, or in GCM phases other than payload encryption, the flag must be ignored for the suspend process.
0x40026008 B  REGISTER AES_DINR: AES data input register
0x40026008 C   FIELD 00w32 DIN (rw): Input data word A four-fold sequential write to this bitfield during the input phase results in writing a complete 128-bit block of input data to the AES peripheral. From the first to the fourth write, the corresponding data weights are [127:96], [95:64], [63:32], and [31:0]. Upon each write, the data from the 32-bit input buffer are handled by the data swap block according to the DATATYPE[1:0] bitfield, then written into the AES core 128-bit input buffer. The data signification of the input data block depends on the AES operating mode: - Mode 1 (encryption): plaintext - Mode 2 (key derivation): the bitfield is not used (AES_KEYRx registers used for input) - Mode 3 (decryption) and Mode 4 (key derivation then single decryption): ciphertext The data swap operation is described in page 499.
0x4002600C B  REGISTER AES_DOUTR: AES data output register
0x4002600C C   FIELD 00w32 DOUT (ro): Output data word This read-only bitfield fetches a 32-bit output buffer. A four-fold sequential read of this bitfield, upon the computation completion (CCF set), virtually reads a complete 128-bit block of output data from the AES peripheral. Before reaching the output buffer, the data produced by the AES core are handled by the data swap block according to the DATATYPE[1:0] bitfield. Data weights from the first to the fourth read operation are: [127:96], [95:64], [63:32], and [31:0]. The data signification of the output data block depends on the AES operating mode: - Mode 1 (encryption): ciphertext - Mode 2 (key derivation): the bitfield is not used (AES_KEYRx registers used for output) - Mode 3 (decryption) and Mode 4 (key derivation then single decryption): plaintext The data swap operation is described in page 499.
0x40026010 B  REGISTER AES_KEYR0: AES key register 0
0x40026010 C   FIELD 00w32 KEY (rw): Cryptographic key, bits [31:0] This bitfield contains the bits [31:0] of the AES encryption or decryption key, depending on the operating mode: - In Mode 1 (encryption), Mode 2 (key derivation) and Mode 4 (key derivation then single decryption): the value to write into the bitfield is the encryption key. - In Mode 3 (decryption): the value to write into the bitfield is the encryption key to be derived before being used for decryption. After writing the encryption key into the bitfield, its reading before enabling AES returns the same value. Its reading after enabling AES and after the CCF flag is set returns the decryption key derived from the encryption key. Note: In mode 4 (key derivation then single decryption) the bitfield always contains the encryption key. The AES_KEYRx registers may be written only when KEYSIZE value is correct and when the AES peripheral is disabled (EN bit of the AES_CR register cleared). Note that, if, the key is directly loaded to AES_KEYRx registers (hence writes to key register is ignored and KEIF is set). Refer to for more details.
0x40026014 B  REGISTER AES_KEYR1: AES key register 1
0x40026014 C   FIELD 00w32 KEY (rw): Cryptographic key, bits [63:32] Refer to the AES_KEYR0 register for description of the KEY[255:0] bitfield.
0x40026018 B  REGISTER AES_KEYR2: AES key register 2
0x40026018 C   FIELD 00w32 KEY (rw): Cryptographic key, bits [95:64] Refer to the AES_KEYR0 register for description of the KEY[255:0] bitfield.
0x4002601C B  REGISTER AES_KEYR3: AES key register 3
0x4002601C C   FIELD 00w32 KEY (rw): Cryptographic key, bits [127:96] Refer to the AES_KEYR0 register for description of the KEY[255:0] bitfield.
0x40026020 B  REGISTER AES_IVR0: AES initialization vector register 0
0x40026020 C   FIELD 00w32 IVI (rw): Initialization vector input, bits [31:0] Refer to for description of the IVI[127:0] bitfield. The initialization vector is only used in chaining modes other than ECB. The AES_IVRx registers may be written only when the AES peripheral is disabled
0x40026024 B  REGISTER AES_IVR1: AES initialization vector register 1
0x40026024 C   FIELD 00w32 IVI (rw): Initialization vector input, bits [63:32] Refer to the AES_IVR0 register for description of the IVI[128:0] bitfield.
0x40026028 B  REGISTER AES_IVR2: AES initialization vector register 2
0x40026028 C   FIELD 00w32 IVI (rw): Initialization vector input, bits [95:64] Refer to the AES_IVR0 register for description of the IVI[128:0] bitfield.
0x4002602C B  REGISTER AES_IVR3: AES initialization vector register 3
0x4002602C C   FIELD 00w32 IVI (rw): Initialization vector input, bits [127:96] Refer to the AES_IVR0 register for description of the IVI[128:0] bitfield.
0x40026030 B  REGISTER AES_KEYR4: AES key register 4
0x40026030 C   FIELD 00w32 KEY (rw): Cryptographic key, bits [159:128] Refer to the AES_KEYR0 register for description of the KEY[255:0] bitfield.
0x40026034 B  REGISTER AES_KEYR5: AES key register 5
0x40026034 C   FIELD 00w32 KEY (rw): Cryptographic key, bits [191:160] Refer to the AES_KEYR0 register for description of the KEY[255:0] bitfield.
0x40026038 B  REGISTER AES_KEYR6: AES key register 6
0x40026038 C   FIELD 00w32 KEY (rw): Cryptographic key, bits [223:192] Refer to the AES_KEYR0 register for description of the KEY[255:0] bitfield.
0x4002603C B  REGISTER AES_KEYR7: AES key register 7
0x4002603C C   FIELD 00w32 KEY (rw): Cryptographic key, bits [255:224] Refer to the AES_KEYR0 register for description of the KEY[255:0] bitfield.
0x40026040 B  REGISTER AES_SUSP0R: AES suspend registers
0x40026040 C   FIELD 00w32 SUSP (rw): AES suspend Upon suspend operation, this bitfield of every AES_SUSPxR register takes the value of one of internal AES registers.
0x40026044 B  REGISTER AES_SUSP1R: AES suspend registers
0x40026044 C   FIELD 00w32 SUSP (rw): AES suspend Upon suspend operation, this bitfield of every AES_SUSPxR register takes the value of one of internal AES registers.
0x40026048 B  REGISTER AES_SUSP2R: AES suspend registers
0x40026048 C   FIELD 00w32 SUSP (rw): AES suspend Upon suspend operation, this bitfield of every AES_SUSPxR register takes the value of one of internal AES registers.
0x4002604C B  REGISTER AES_SUSP3R: AES suspend registers
0x4002604C C   FIELD 00w32 SUSP (rw): AES suspend Upon suspend operation, this bitfield of every AES_SUSPxR register takes the value of one of internal AES registers.
0x40026050 B  REGISTER AES_SUSP4R: AES suspend registers
0x40026050 C   FIELD 00w32 SUSP (rw): AES suspend Upon suspend operation, this bitfield of every AES_SUSPxR register takes the value of one of internal AES registers.
0x40026054 B  REGISTER AES_SUSP5R: AES suspend registers
0x40026054 C   FIELD 00w32 SUSP (rw): AES suspend Upon suspend operation, this bitfield of every AES_SUSPxR register takes the value of one of internal AES registers.
0x40026058 B  REGISTER AES_SUSP6R: AES suspend registers
0x40026058 C   FIELD 00w32 SUSP (rw): AES suspend Upon suspend operation, this bitfield of every AES_SUSPxR register takes the value of one of internal AES registers.
0x4002605C B  REGISTER AES_SUSP7R: AES suspend registers
0x4002605C C   FIELD 00w32 SUSP (rw): AES suspend Upon suspend operation, this bitfield of every AES_SUSPxR register takes the value of one of internal AES registers.
0x50000000 A PERIPHERAL GPIOA
0x50000000 B  REGISTER MODER (rw): GPIO port mode register
0x50000000 C   FIELD 00w02 MODER0: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 02w02 MODER1: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 04w02 MODER2: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 06w02 MODER3: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 08w02 MODER4: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 10w02 MODER5: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 12w02 MODER6: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 14w02 MODER7: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 16w02 MODER8: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 18w02 MODER9: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 20w02 MODER10: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 22w02 MODER11: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 24w02 MODER12: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 26w02 MODER13: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 28w02 MODER14: Port x configuration bits (y = 0..15)
0x50000000 C   FIELD 30w02 MODER15: Port x configuration bits (y = 0..15)
0x50000004 B  REGISTER OTYPER (rw): GPIO port output type register
0x50000004 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x50000004 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x50000008 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x50000008 C   FIELD 00w02 OSPEEDR0: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 02w02 OSPEEDR1: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 04w02 OSPEEDR2: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 06w02 OSPEEDR3: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 08w02 OSPEEDR4: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 10w02 OSPEEDR5: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 12w02 OSPEEDR6: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 14w02 OSPEEDR7: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 16w02 OSPEEDR8: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 18w02 OSPEEDR9: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 20w02 OSPEEDR10: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 22w02 OSPEEDR11: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 24w02 OSPEEDR12: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 26w02 OSPEEDR13: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 28w02 OSPEEDR14: Port x configuration bits (y = 0..15)
0x50000008 C   FIELD 30w02 OSPEEDR15: Port x configuration bits (y = 0..15)
0x5000000C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5000000C C   FIELD 00w02 PUPDR0: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 02w02 PUPDR1: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 04w02 PUPDR2: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 06w02 PUPDR3: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 08w02 PUPDR4: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 10w02 PUPDR5: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 12w02 PUPDR6: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 14w02 PUPDR7: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 16w02 PUPDR8: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 18w02 PUPDR9: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 20w02 PUPDR10: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 22w02 PUPDR11: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 24w02 PUPDR12: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 26w02 PUPDR13: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 28w02 PUPDR14: Port x configuration bits (y = 0..15)
0x5000000C C   FIELD 30w02 PUPDR15: Port x configuration bits (y = 0..15)
0x50000010 B  REGISTER IDR (ro): GPIO port input data register
0x50000010 C   FIELD 00w01 IDR0: Port input data (y = 0..15)
0x50000010 C   FIELD 01w01 IDR1: Port input data (y = 0..15)
0x50000010 C   FIELD 02w01 IDR2: Port input data (y = 0..15)
0x50000010 C   FIELD 03w01 IDR3: Port input data (y = 0..15)
0x50000010 C   FIELD 04w01 IDR4: Port input data (y = 0..15)
0x50000010 C   FIELD 05w01 IDR5: Port input data (y = 0..15)
0x50000010 C   FIELD 06w01 IDR6: Port input data (y = 0..15)
0x50000010 C   FIELD 07w01 IDR7: Port input data (y = 0..15)
0x50000010 C   FIELD 08w01 IDR8: Port input data (y = 0..15)
0x50000010 C   FIELD 09w01 IDR9: Port input data (y = 0..15)
0x50000010 C   FIELD 10w01 IDR10: Port input data (y = 0..15)
0x50000010 C   FIELD 11w01 IDR11: Port input data (y = 0..15)
0x50000010 C   FIELD 12w01 IDR12: Port input data (y = 0..15)
0x50000010 C   FIELD 13w01 IDR13: Port input data (y = 0..15)
0x50000010 C   FIELD 14w01 IDR14: Port input data (y = 0..15)
0x50000010 C   FIELD 15w01 IDR15: Port input data (y = 0..15)
0x50000014 B  REGISTER ODR (rw): GPIO port output data register
0x50000014 C   FIELD 00w01 ODR0: Port output data (y = 0..15)
0x50000014 C   FIELD 01w01 ODR1: Port output data (y = 0..15)
0x50000014 C   FIELD 02w01 ODR2: Port output data (y = 0..15)
0x50000014 C   FIELD 03w01 ODR3: Port output data (y = 0..15)
0x50000014 C   FIELD 04w01 ODR4: Port output data (y = 0..15)
0x50000014 C   FIELD 05w01 ODR5: Port output data (y = 0..15)
0x50000014 C   FIELD 06w01 ODR6: Port output data (y = 0..15)
0x50000014 C   FIELD 07w01 ODR7: Port output data (y = 0..15)
0x50000014 C   FIELD 08w01 ODR8: Port output data (y = 0..15)
0x50000014 C   FIELD 09w01 ODR9: Port output data (y = 0..15)
0x50000014 C   FIELD 10w01 ODR10: Port output data (y = 0..15)
0x50000014 C   FIELD 11w01 ODR11: Port output data (y = 0..15)
0x50000014 C   FIELD 12w01 ODR12: Port output data (y = 0..15)
0x50000014 C   FIELD 13w01 ODR13: Port output data (y = 0..15)
0x50000014 C   FIELD 14w01 ODR14: Port output data (y = 0..15)
0x50000014 C   FIELD 15w01 ODR15: Port output data (y = 0..15)
0x50000018 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x50000018 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x50000018 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x50000018 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5000001C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5000001C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5000001C C   FIELD 16w01 LCKK: Port x lock bit y (y= 0..15)
0x50000020 B  REGISTER AFRL (rw): GPIO alternate function low register
0x50000020 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x50000020 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x50000020 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x50000020 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x50000020 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x50000020 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x50000020 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x50000020 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x50000024 B  REGISTER AFRH (rw): GPIO alternate function high register
0x50000024 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x50000024 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x50000024 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x50000024 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x50000024 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x50000024 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x50000024 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x50000024 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x50000028 B  REGISTER BRR (wo): port bit reset register
0x50000028 C   FIELD 00w01 BR0: Port Reset bit
0x50000028 C   FIELD 01w01 BR1: Port Reset bit
0x50000028 C   FIELD 02w01 BR2: Port Reset bit
0x50000028 C   FIELD 03w01 BR3: Port Reset bit
0x50000028 C   FIELD 04w01 BR4: Port Reset bit
0x50000028 C   FIELD 05w01 BR5: Port Reset bit
0x50000028 C   FIELD 06w01 BR6: Port Reset bit
0x50000028 C   FIELD 07w01 BR7: Port Reset bit
0x50000028 C   FIELD 08w01 BR8: Port Reset bit
0x50000028 C   FIELD 09w01 BR9: Port Reset bit
0x50000028 C   FIELD 10w01 BR10: Port Reset bit
0x50000028 C   FIELD 11w01 BR11: Port Reset bit
0x50000028 C   FIELD 12w01 BR12: Port Reset bit
0x50000028 C   FIELD 13w01 BR13: Port Reset bit
0x50000028 C   FIELD 14w01 BR14: Port Reset bit
0x50000028 C   FIELD 15w01 BR15: Port Reset bit
0x50000400 A PERIPHERAL GPIOB
0x50000400 B  REGISTER MODER (rw): GPIO port mode register
0x50000400 C   FIELD 00w02 MODER0: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 02w02 MODER1: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 04w02 MODER2: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 06w02 MODER3: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 08w02 MODER4: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 10w02 MODER5: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 12w02 MODER6: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 14w02 MODER7: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 16w02 MODER8: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 18w02 MODER9: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 20w02 MODER10: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 22w02 MODER11: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 24w02 MODER12: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 26w02 MODER13: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 28w02 MODER14: Port x configuration bits (y = 0..15)
0x50000400 C   FIELD 30w02 MODER15: Port x configuration bits (y = 0..15)
0x50000404 B  REGISTER OTYPER (rw): GPIO port output type register
0x50000404 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x50000404 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x50000408 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x50000408 C   FIELD 00w02 OSPEEDR0: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 02w02 OSPEEDR1: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 04w02 OSPEEDR2: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 06w02 OSPEEDR3: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 08w02 OSPEEDR4: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 10w02 OSPEEDR5: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 12w02 OSPEEDR6: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 14w02 OSPEEDR7: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 16w02 OSPEEDR8: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 18w02 OSPEEDR9: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 20w02 OSPEEDR10: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 22w02 OSPEEDR11: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 24w02 OSPEEDR12: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 26w02 OSPEEDR13: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 28w02 OSPEEDR14: Port x configuration bits (y = 0..15)
0x50000408 C   FIELD 30w02 OSPEEDR15: Port x configuration bits (y = 0..15)
0x5000040C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5000040C C   FIELD 00w02 PUPDR0: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 02w02 PUPDR1: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 04w02 PUPDR2: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 06w02 PUPDR3: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 08w02 PUPDR4: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 10w02 PUPDR5: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 12w02 PUPDR6: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 14w02 PUPDR7: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 16w02 PUPDR8: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 18w02 PUPDR9: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 20w02 PUPDR10: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 22w02 PUPDR11: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 24w02 PUPDR12: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 26w02 PUPDR13: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 28w02 PUPDR14: Port x configuration bits (y = 0..15)
0x5000040C C   FIELD 30w02 PUPDR15: Port x configuration bits (y = 0..15)
0x50000410 B  REGISTER IDR (ro): GPIO port input data register
0x50000410 C   FIELD 00w01 IDR0: Port input data (y = 0..15)
0x50000410 C   FIELD 01w01 IDR1: Port input data (y = 0..15)
0x50000410 C   FIELD 02w01 IDR2: Port input data (y = 0..15)
0x50000410 C   FIELD 03w01 IDR3: Port input data (y = 0..15)
0x50000410 C   FIELD 04w01 IDR4: Port input data (y = 0..15)
0x50000410 C   FIELD 05w01 IDR5: Port input data (y = 0..15)
0x50000410 C   FIELD 06w01 IDR6: Port input data (y = 0..15)
0x50000410 C   FIELD 07w01 IDR7: Port input data (y = 0..15)
0x50000410 C   FIELD 08w01 IDR8: Port input data (y = 0..15)
0x50000410 C   FIELD 09w01 IDR9: Port input data (y = 0..15)
0x50000410 C   FIELD 10w01 IDR10: Port input data (y = 0..15)
0x50000410 C   FIELD 11w01 IDR11: Port input data (y = 0..15)
0x50000410 C   FIELD 12w01 IDR12: Port input data (y = 0..15)
0x50000410 C   FIELD 13w01 IDR13: Port input data (y = 0..15)
0x50000410 C   FIELD 14w01 IDR14: Port input data (y = 0..15)
0x50000410 C   FIELD 15w01 IDR15: Port input data (y = 0..15)
0x50000414 B  REGISTER ODR (rw): GPIO port output data register
0x50000414 C   FIELD 00w01 ODR0: Port output data (y = 0..15)
0x50000414 C   FIELD 01w01 ODR1: Port output data (y = 0..15)
0x50000414 C   FIELD 02w01 ODR2: Port output data (y = 0..15)
0x50000414 C   FIELD 03w01 ODR3: Port output data (y = 0..15)
0x50000414 C   FIELD 04w01 ODR4: Port output data (y = 0..15)
0x50000414 C   FIELD 05w01 ODR5: Port output data (y = 0..15)
0x50000414 C   FIELD 06w01 ODR6: Port output data (y = 0..15)
0x50000414 C   FIELD 07w01 ODR7: Port output data (y = 0..15)
0x50000414 C   FIELD 08w01 ODR8: Port output data (y = 0..15)
0x50000414 C   FIELD 09w01 ODR9: Port output data (y = 0..15)
0x50000414 C   FIELD 10w01 ODR10: Port output data (y = 0..15)
0x50000414 C   FIELD 11w01 ODR11: Port output data (y = 0..15)
0x50000414 C   FIELD 12w01 ODR12: Port output data (y = 0..15)
0x50000414 C   FIELD 13w01 ODR13: Port output data (y = 0..15)
0x50000414 C   FIELD 14w01 ODR14: Port output data (y = 0..15)
0x50000414 C   FIELD 15w01 ODR15: Port output data (y = 0..15)
0x50000418 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x50000418 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x50000418 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x50000418 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5000041C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5000041C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5000041C C   FIELD 16w01 LCKK: Port x lock bit y (y= 0..15)
0x50000420 B  REGISTER AFRL (rw): GPIO alternate function low register
0x50000420 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x50000420 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x50000420 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x50000420 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x50000420 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x50000420 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x50000420 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x50000420 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x50000424 B  REGISTER AFRH (rw): GPIO alternate function high register
0x50000424 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x50000424 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x50000424 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x50000424 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x50000424 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x50000424 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x50000424 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x50000424 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x50000428 B  REGISTER BRR (wo): port bit reset register
0x50000428 C   FIELD 00w01 BR0: Port Reset bit
0x50000428 C   FIELD 01w01 BR1: Port Reset bit
0x50000428 C   FIELD 02w01 BR2: Port Reset bit
0x50000428 C   FIELD 03w01 BR3: Port Reset bit
0x50000428 C   FIELD 04w01 BR4: Port Reset bit
0x50000428 C   FIELD 05w01 BR5: Port Reset bit
0x50000428 C   FIELD 06w01 BR6: Port Reset bit
0x50000428 C   FIELD 07w01 BR7: Port Reset bit
0x50000428 C   FIELD 08w01 BR8: Port Reset bit
0x50000428 C   FIELD 09w01 BR9: Port Reset bit
0x50000428 C   FIELD 10w01 BR10: Port Reset bit
0x50000428 C   FIELD 11w01 BR11: Port Reset bit
0x50000428 C   FIELD 12w01 BR12: Port Reset bit
0x50000428 C   FIELD 13w01 BR13: Port Reset bit
0x50000428 C   FIELD 14w01 BR14: Port Reset bit
0x50000428 C   FIELD 15w01 BR15: Port Reset bit
0x50000800 A PERIPHERAL GPIOC
0x50000800 B  REGISTER MODER (rw): GPIO port mode register
0x50000800 C   FIELD 00w02 MODER0: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 02w02 MODER1: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 04w02 MODER2: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 06w02 MODER3: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 08w02 MODER4: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 10w02 MODER5: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 12w02 MODER6: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 14w02 MODER7: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 16w02 MODER8: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 18w02 MODER9: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 20w02 MODER10: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 22w02 MODER11: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 24w02 MODER12: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 26w02 MODER13: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 28w02 MODER14: Port x configuration bits (y = 0..15)
0x50000800 C   FIELD 30w02 MODER15: Port x configuration bits (y = 0..15)
0x50000804 B  REGISTER OTYPER (rw): GPIO port output type register
0x50000804 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x50000804 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x50000808 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x50000808 C   FIELD 00w02 OSPEEDR0: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 02w02 OSPEEDR1: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 04w02 OSPEEDR2: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 06w02 OSPEEDR3: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 08w02 OSPEEDR4: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 10w02 OSPEEDR5: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 12w02 OSPEEDR6: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 14w02 OSPEEDR7: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 16w02 OSPEEDR8: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 18w02 OSPEEDR9: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 20w02 OSPEEDR10: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 22w02 OSPEEDR11: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 24w02 OSPEEDR12: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 26w02 OSPEEDR13: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 28w02 OSPEEDR14: Port x configuration bits (y = 0..15)
0x50000808 C   FIELD 30w02 OSPEEDR15: Port x configuration bits (y = 0..15)
0x5000080C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5000080C C   FIELD 00w02 PUPDR0: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 02w02 PUPDR1: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 04w02 PUPDR2: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 06w02 PUPDR3: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 08w02 PUPDR4: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 10w02 PUPDR5: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 12w02 PUPDR6: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 14w02 PUPDR7: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 16w02 PUPDR8: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 18w02 PUPDR9: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 20w02 PUPDR10: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 22w02 PUPDR11: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 24w02 PUPDR12: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 26w02 PUPDR13: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 28w02 PUPDR14: Port x configuration bits (y = 0..15)
0x5000080C C   FIELD 30w02 PUPDR15: Port x configuration bits (y = 0..15)
0x50000810 B  REGISTER IDR (ro): GPIO port input data register
0x50000810 C   FIELD 00w01 IDR0: Port input data (y = 0..15)
0x50000810 C   FIELD 01w01 IDR1: Port input data (y = 0..15)
0x50000810 C   FIELD 02w01 IDR2: Port input data (y = 0..15)
0x50000810 C   FIELD 03w01 IDR3: Port input data (y = 0..15)
0x50000810 C   FIELD 04w01 IDR4: Port input data (y = 0..15)
0x50000810 C   FIELD 05w01 IDR5: Port input data (y = 0..15)
0x50000810 C   FIELD 06w01 IDR6: Port input data (y = 0..15)
0x50000810 C   FIELD 07w01 IDR7: Port input data (y = 0..15)
0x50000810 C   FIELD 08w01 IDR8: Port input data (y = 0..15)
0x50000810 C   FIELD 09w01 IDR9: Port input data (y = 0..15)
0x50000810 C   FIELD 10w01 IDR10: Port input data (y = 0..15)
0x50000810 C   FIELD 11w01 IDR11: Port input data (y = 0..15)
0x50000810 C   FIELD 12w01 IDR12: Port input data (y = 0..15)
0x50000810 C   FIELD 13w01 IDR13: Port input data (y = 0..15)
0x50000810 C   FIELD 14w01 IDR14: Port input data (y = 0..15)
0x50000810 C   FIELD 15w01 IDR15: Port input data (y = 0..15)
0x50000814 B  REGISTER ODR (rw): GPIO port output data register
0x50000814 C   FIELD 00w01 ODR0: Port output data (y = 0..15)
0x50000814 C   FIELD 01w01 ODR1: Port output data (y = 0..15)
0x50000814 C   FIELD 02w01 ODR2: Port output data (y = 0..15)
0x50000814 C   FIELD 03w01 ODR3: Port output data (y = 0..15)
0x50000814 C   FIELD 04w01 ODR4: Port output data (y = 0..15)
0x50000814 C   FIELD 05w01 ODR5: Port output data (y = 0..15)
0x50000814 C   FIELD 06w01 ODR6: Port output data (y = 0..15)
0x50000814 C   FIELD 07w01 ODR7: Port output data (y = 0..15)
0x50000814 C   FIELD 08w01 ODR8: Port output data (y = 0..15)
0x50000814 C   FIELD 09w01 ODR9: Port output data (y = 0..15)
0x50000814 C   FIELD 10w01 ODR10: Port output data (y = 0..15)
0x50000814 C   FIELD 11w01 ODR11: Port output data (y = 0..15)
0x50000814 C   FIELD 12w01 ODR12: Port output data (y = 0..15)
0x50000814 C   FIELD 13w01 ODR13: Port output data (y = 0..15)
0x50000814 C   FIELD 14w01 ODR14: Port output data (y = 0..15)
0x50000814 C   FIELD 15w01 ODR15: Port output data (y = 0..15)
0x50000818 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x50000818 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x50000818 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x50000818 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5000081C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5000081C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5000081C C   FIELD 16w01 LCKK: Port x lock bit y (y= 0..15)
0x50000820 B  REGISTER AFRL (rw): GPIO alternate function low register
0x50000820 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x50000820 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x50000820 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x50000820 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x50000820 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x50000820 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x50000820 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x50000820 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x50000824 B  REGISTER AFRH (rw): GPIO alternate function high register
0x50000824 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x50000824 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x50000824 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x50000824 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x50000824 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x50000824 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x50000824 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x50000824 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x50000828 B  REGISTER BRR (wo): port bit reset register
0x50000828 C   FIELD 00w01 BR0: Port Reset bit
0x50000828 C   FIELD 01w01 BR1: Port Reset bit
0x50000828 C   FIELD 02w01 BR2: Port Reset bit
0x50000828 C   FIELD 03w01 BR3: Port Reset bit
0x50000828 C   FIELD 04w01 BR4: Port Reset bit
0x50000828 C   FIELD 05w01 BR5: Port Reset bit
0x50000828 C   FIELD 06w01 BR6: Port Reset bit
0x50000828 C   FIELD 07w01 BR7: Port Reset bit
0x50000828 C   FIELD 08w01 BR8: Port Reset bit
0x50000828 C   FIELD 09w01 BR9: Port Reset bit
0x50000828 C   FIELD 10w01 BR10: Port Reset bit
0x50000828 C   FIELD 11w01 BR11: Port Reset bit
0x50000828 C   FIELD 12w01 BR12: Port Reset bit
0x50000828 C   FIELD 13w01 BR13: Port Reset bit
0x50000828 C   FIELD 14w01 BR14: Port Reset bit
0x50000828 C   FIELD 15w01 BR15: Port Reset bit
0x50000C00 A PERIPHERAL GPIOD
0x50000C00 B  REGISTER MODER (rw): GPIO port mode register
0x50000C00 C   FIELD 00w02 MODER0: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 02w02 MODER1: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 04w02 MODER2: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 06w02 MODER3: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 08w02 MODER4: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 10w02 MODER5: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 12w02 MODER6: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 14w02 MODER7: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 16w02 MODER8: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 18w02 MODER9: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 20w02 MODER10: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 22w02 MODER11: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 24w02 MODER12: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 26w02 MODER13: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 28w02 MODER14: Port x configuration bits (y = 0..15)
0x50000C00 C   FIELD 30w02 MODER15: Port x configuration bits (y = 0..15)
0x50000C04 B  REGISTER OTYPER (rw): GPIO port output type register
0x50000C04 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x50000C04 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x50000C08 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x50000C08 C   FIELD 00w02 OSPEEDR0: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 02w02 OSPEEDR1: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 04w02 OSPEEDR2: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 06w02 OSPEEDR3: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 08w02 OSPEEDR4: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 10w02 OSPEEDR5: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 12w02 OSPEEDR6: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 14w02 OSPEEDR7: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 16w02 OSPEEDR8: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 18w02 OSPEEDR9: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 20w02 OSPEEDR10: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 22w02 OSPEEDR11: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 24w02 OSPEEDR12: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 26w02 OSPEEDR13: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 28w02 OSPEEDR14: Port x configuration bits (y = 0..15)
0x50000C08 C   FIELD 30w02 OSPEEDR15: Port x configuration bits (y = 0..15)
0x50000C0C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x50000C0C C   FIELD 00w02 PUPDR0: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 02w02 PUPDR1: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 04w02 PUPDR2: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 06w02 PUPDR3: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 08w02 PUPDR4: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 10w02 PUPDR5: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 12w02 PUPDR6: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 14w02 PUPDR7: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 16w02 PUPDR8: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 18w02 PUPDR9: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 20w02 PUPDR10: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 22w02 PUPDR11: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 24w02 PUPDR12: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 26w02 PUPDR13: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 28w02 PUPDR14: Port x configuration bits (y = 0..15)
0x50000C0C C   FIELD 30w02 PUPDR15: Port x configuration bits (y = 0..15)
0x50000C10 B  REGISTER IDR (ro): GPIO port input data register
0x50000C10 C   FIELD 00w01 IDR0: Port input data (y = 0..15)
0x50000C10 C   FIELD 01w01 IDR1: Port input data (y = 0..15)
0x50000C10 C   FIELD 02w01 IDR2: Port input data (y = 0..15)
0x50000C10 C   FIELD 03w01 IDR3: Port input data (y = 0..15)
0x50000C10 C   FIELD 04w01 IDR4: Port input data (y = 0..15)
0x50000C10 C   FIELD 05w01 IDR5: Port input data (y = 0..15)
0x50000C10 C   FIELD 06w01 IDR6: Port input data (y = 0..15)
0x50000C10 C   FIELD 07w01 IDR7: Port input data (y = 0..15)
0x50000C10 C   FIELD 08w01 IDR8: Port input data (y = 0..15)
0x50000C10 C   FIELD 09w01 IDR9: Port input data (y = 0..15)
0x50000C10 C   FIELD 10w01 IDR10: Port input data (y = 0..15)
0x50000C10 C   FIELD 11w01 IDR11: Port input data (y = 0..15)
0x50000C10 C   FIELD 12w01 IDR12: Port input data (y = 0..15)
0x50000C10 C   FIELD 13w01 IDR13: Port input data (y = 0..15)
0x50000C10 C   FIELD 14w01 IDR14: Port input data (y = 0..15)
0x50000C10 C   FIELD 15w01 IDR15: Port input data (y = 0..15)
0x50000C14 B  REGISTER ODR (rw): GPIO port output data register
0x50000C14 C   FIELD 00w01 ODR0: Port output data (y = 0..15)
0x50000C14 C   FIELD 01w01 ODR1: Port output data (y = 0..15)
0x50000C14 C   FIELD 02w01 ODR2: Port output data (y = 0..15)
0x50000C14 C   FIELD 03w01 ODR3: Port output data (y = 0..15)
0x50000C14 C   FIELD 04w01 ODR4: Port output data (y = 0..15)
0x50000C14 C   FIELD 05w01 ODR5: Port output data (y = 0..15)
0x50000C14 C   FIELD 06w01 ODR6: Port output data (y = 0..15)
0x50000C14 C   FIELD 07w01 ODR7: Port output data (y = 0..15)
0x50000C14 C   FIELD 08w01 ODR8: Port output data (y = 0..15)
0x50000C14 C   FIELD 09w01 ODR9: Port output data (y = 0..15)
0x50000C14 C   FIELD 10w01 ODR10: Port output data (y = 0..15)
0x50000C14 C   FIELD 11w01 ODR11: Port output data (y = 0..15)
0x50000C14 C   FIELD 12w01 ODR12: Port output data (y = 0..15)
0x50000C14 C   FIELD 13w01 ODR13: Port output data (y = 0..15)
0x50000C14 C   FIELD 14w01 ODR14: Port output data (y = 0..15)
0x50000C14 C   FIELD 15w01 ODR15: Port output data (y = 0..15)
0x50000C18 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x50000C18 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x50000C18 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x50000C18 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x50000C1C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x50000C1C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x50000C1C C   FIELD 16w01 LCKK: Port x lock bit y (y= 0..15)
0x50000C20 B  REGISTER AFRL (rw): GPIO alternate function low register
0x50000C20 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x50000C20 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x50000C20 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x50000C20 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x50000C20 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x50000C20 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x50000C20 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x50000C20 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x50000C24 B  REGISTER AFRH (rw): GPIO alternate function high register
0x50000C24 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x50000C24 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x50000C24 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x50000C24 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x50000C24 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x50000C24 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x50000C24 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x50000C24 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x50000C28 B  REGISTER BRR (wo): port bit reset register
0x50000C28 C   FIELD 00w01 BR0: Port Reset bit
0x50000C28 C   FIELD 01w01 BR1: Port Reset bit
0x50000C28 C   FIELD 02w01 BR2: Port Reset bit
0x50000C28 C   FIELD 03w01 BR3: Port Reset bit
0x50000C28 C   FIELD 04w01 BR4: Port Reset bit
0x50000C28 C   FIELD 05w01 BR5: Port Reset bit
0x50000C28 C   FIELD 06w01 BR6: Port Reset bit
0x50000C28 C   FIELD 07w01 BR7: Port Reset bit
0x50000C28 C   FIELD 08w01 BR8: Port Reset bit
0x50000C28 C   FIELD 09w01 BR9: Port Reset bit
0x50000C28 C   FIELD 10w01 BR10: Port Reset bit
0x50000C28 C   FIELD 11w01 BR11: Port Reset bit
0x50000C28 C   FIELD 12w01 BR12: Port Reset bit
0x50000C28 C   FIELD 13w01 BR13: Port Reset bit
0x50000C28 C   FIELD 14w01 BR14: Port Reset bit
0x50000C28 C   FIELD 15w01 BR15: Port Reset bit
0x50001000 A PERIPHERAL GPIOE
0x50001000 B  REGISTER MODER (rw): GPIO port mode register
0x50001000 C   FIELD 00w02 MODER0: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 02w02 MODER1: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 04w02 MODER2: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 06w02 MODER3: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 08w02 MODER4: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 10w02 MODER5: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 12w02 MODER6: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 14w02 MODER7: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 16w02 MODER8: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 18w02 MODER9: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 20w02 MODER10: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 22w02 MODER11: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 24w02 MODER12: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 26w02 MODER13: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 28w02 MODER14: Port x configuration bits (y = 0..15)
0x50001000 C   FIELD 30w02 MODER15: Port x configuration bits (y = 0..15)
0x50001004 B  REGISTER OTYPER (rw): GPIO port output type register
0x50001004 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x50001004 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x50001008 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x50001008 C   FIELD 00w02 OSPEEDR0: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 02w02 OSPEEDR1: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 04w02 OSPEEDR2: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 06w02 OSPEEDR3: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 08w02 OSPEEDR4: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 10w02 OSPEEDR5: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 12w02 OSPEEDR6: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 14w02 OSPEEDR7: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 16w02 OSPEEDR8: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 18w02 OSPEEDR9: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 20w02 OSPEEDR10: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 22w02 OSPEEDR11: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 24w02 OSPEEDR12: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 26w02 OSPEEDR13: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 28w02 OSPEEDR14: Port x configuration bits (y = 0..15)
0x50001008 C   FIELD 30w02 OSPEEDR15: Port x configuration bits (y = 0..15)
0x5000100C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5000100C C   FIELD 00w02 PUPDR0: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 02w02 PUPDR1: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 04w02 PUPDR2: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 06w02 PUPDR3: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 08w02 PUPDR4: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 10w02 PUPDR5: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 12w02 PUPDR6: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 14w02 PUPDR7: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 16w02 PUPDR8: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 18w02 PUPDR9: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 20w02 PUPDR10: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 22w02 PUPDR11: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 24w02 PUPDR12: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 26w02 PUPDR13: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 28w02 PUPDR14: Port x configuration bits (y = 0..15)
0x5000100C C   FIELD 30w02 PUPDR15: Port x configuration bits (y = 0..15)
0x50001010 B  REGISTER IDR (ro): GPIO port input data register
0x50001010 C   FIELD 00w01 IDR0: Port input data (y = 0..15)
0x50001010 C   FIELD 01w01 IDR1: Port input data (y = 0..15)
0x50001010 C   FIELD 02w01 IDR2: Port input data (y = 0..15)
0x50001010 C   FIELD 03w01 IDR3: Port input data (y = 0..15)
0x50001010 C   FIELD 04w01 IDR4: Port input data (y = 0..15)
0x50001010 C   FIELD 05w01 IDR5: Port input data (y = 0..15)
0x50001010 C   FIELD 06w01 IDR6: Port input data (y = 0..15)
0x50001010 C   FIELD 07w01 IDR7: Port input data (y = 0..15)
0x50001010 C   FIELD 08w01 IDR8: Port input data (y = 0..15)
0x50001010 C   FIELD 09w01 IDR9: Port input data (y = 0..15)
0x50001010 C   FIELD 10w01 IDR10: Port input data (y = 0..15)
0x50001010 C   FIELD 11w01 IDR11: Port input data (y = 0..15)
0x50001010 C   FIELD 12w01 IDR12: Port input data (y = 0..15)
0x50001010 C   FIELD 13w01 IDR13: Port input data (y = 0..15)
0x50001010 C   FIELD 14w01 IDR14: Port input data (y = 0..15)
0x50001010 C   FIELD 15w01 IDR15: Port input data (y = 0..15)
0x50001014 B  REGISTER ODR (rw): GPIO port output data register
0x50001014 C   FIELD 00w01 ODR0: Port output data (y = 0..15)
0x50001014 C   FIELD 01w01 ODR1: Port output data (y = 0..15)
0x50001014 C   FIELD 02w01 ODR2: Port output data (y = 0..15)
0x50001014 C   FIELD 03w01 ODR3: Port output data (y = 0..15)
0x50001014 C   FIELD 04w01 ODR4: Port output data (y = 0..15)
0x50001014 C   FIELD 05w01 ODR5: Port output data (y = 0..15)
0x50001014 C   FIELD 06w01 ODR6: Port output data (y = 0..15)
0x50001014 C   FIELD 07w01 ODR7: Port output data (y = 0..15)
0x50001014 C   FIELD 08w01 ODR8: Port output data (y = 0..15)
0x50001014 C   FIELD 09w01 ODR9: Port output data (y = 0..15)
0x50001014 C   FIELD 10w01 ODR10: Port output data (y = 0..15)
0x50001014 C   FIELD 11w01 ODR11: Port output data (y = 0..15)
0x50001014 C   FIELD 12w01 ODR12: Port output data (y = 0..15)
0x50001014 C   FIELD 13w01 ODR13: Port output data (y = 0..15)
0x50001014 C   FIELD 14w01 ODR14: Port output data (y = 0..15)
0x50001014 C   FIELD 15w01 ODR15: Port output data (y = 0..15)
0x50001018 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x50001018 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x50001018 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x50001018 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5000101C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5000101C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5000101C C   FIELD 16w01 LCKK: Port x lock bit y (y= 0..15)
0x50001020 B  REGISTER AFRL (rw): GPIO alternate function low register
0x50001020 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x50001020 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x50001020 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x50001020 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x50001020 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x50001020 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x50001020 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x50001020 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x50001024 B  REGISTER AFRH (rw): GPIO alternate function high register
0x50001024 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x50001024 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x50001024 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x50001024 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x50001024 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x50001024 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x50001024 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x50001024 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x50001028 B  REGISTER BRR (wo): port bit reset register
0x50001028 C   FIELD 00w01 BR0: Port Reset bit
0x50001028 C   FIELD 01w01 BR1: Port Reset bit
0x50001028 C   FIELD 02w01 BR2: Port Reset bit
0x50001028 C   FIELD 03w01 BR3: Port Reset bit
0x50001028 C   FIELD 04w01 BR4: Port Reset bit
0x50001028 C   FIELD 05w01 BR5: Port Reset bit
0x50001028 C   FIELD 06w01 BR6: Port Reset bit
0x50001028 C   FIELD 07w01 BR7: Port Reset bit
0x50001028 C   FIELD 08w01 BR8: Port Reset bit
0x50001028 C   FIELD 09w01 BR9: Port Reset bit
0x50001028 C   FIELD 10w01 BR10: Port Reset bit
0x50001028 C   FIELD 11w01 BR11: Port Reset bit
0x50001028 C   FIELD 12w01 BR12: Port Reset bit
0x50001028 C   FIELD 13w01 BR13: Port Reset bit
0x50001028 C   FIELD 14w01 BR14: Port Reset bit
0x50001028 C   FIELD 15w01 BR15: Port Reset bit
0x50001400 A PERIPHERAL GPIOF
0x50001400 B  REGISTER MODER (rw): GPIO port mode register
0x50001400 C   FIELD 00w02 MODER0: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 02w02 MODER1: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 04w02 MODER2: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 06w02 MODER3: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 08w02 MODER4: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 10w02 MODER5: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 12w02 MODER6: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 14w02 MODER7: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 16w02 MODER8: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 18w02 MODER9: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 20w02 MODER10: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 22w02 MODER11: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 24w02 MODER12: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 26w02 MODER13: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 28w02 MODER14: Port x configuration bits (y = 0..15)
0x50001400 C   FIELD 30w02 MODER15: Port x configuration bits (y = 0..15)
0x50001404 B  REGISTER OTYPER (rw): GPIO port output type register
0x50001404 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x50001404 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x50001408 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x50001408 C   FIELD 00w02 OSPEEDR0: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 02w02 OSPEEDR1: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 04w02 OSPEEDR2: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 06w02 OSPEEDR3: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 08w02 OSPEEDR4: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 10w02 OSPEEDR5: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 12w02 OSPEEDR6: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 14w02 OSPEEDR7: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 16w02 OSPEEDR8: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 18w02 OSPEEDR9: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 20w02 OSPEEDR10: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 22w02 OSPEEDR11: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 24w02 OSPEEDR12: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 26w02 OSPEEDR13: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 28w02 OSPEEDR14: Port x configuration bits (y = 0..15)
0x50001408 C   FIELD 30w02 OSPEEDR15: Port x configuration bits (y = 0..15)
0x5000140C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5000140C C   FIELD 00w02 PUPDR0: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 02w02 PUPDR1: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 04w02 PUPDR2: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 06w02 PUPDR3: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 08w02 PUPDR4: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 10w02 PUPDR5: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 12w02 PUPDR6: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 14w02 PUPDR7: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 16w02 PUPDR8: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 18w02 PUPDR9: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 20w02 PUPDR10: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 22w02 PUPDR11: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 24w02 PUPDR12: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 26w02 PUPDR13: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 28w02 PUPDR14: Port x configuration bits (y = 0..15)
0x5000140C C   FIELD 30w02 PUPDR15: Port x configuration bits (y = 0..15)
0x50001410 B  REGISTER IDR (ro): GPIO port input data register
0x50001410 C   FIELD 00w01 IDR0: Port input data (y = 0..15)
0x50001410 C   FIELD 01w01 IDR1: Port input data (y = 0..15)
0x50001410 C   FIELD 02w01 IDR2: Port input data (y = 0..15)
0x50001410 C   FIELD 03w01 IDR3: Port input data (y = 0..15)
0x50001410 C   FIELD 04w01 IDR4: Port input data (y = 0..15)
0x50001410 C   FIELD 05w01 IDR5: Port input data (y = 0..15)
0x50001410 C   FIELD 06w01 IDR6: Port input data (y = 0..15)
0x50001410 C   FIELD 07w01 IDR7: Port input data (y = 0..15)
0x50001410 C   FIELD 08w01 IDR8: Port input data (y = 0..15)
0x50001410 C   FIELD 09w01 IDR9: Port input data (y = 0..15)
0x50001410 C   FIELD 10w01 IDR10: Port input data (y = 0..15)
0x50001410 C   FIELD 11w01 IDR11: Port input data (y = 0..15)
0x50001410 C   FIELD 12w01 IDR12: Port input data (y = 0..15)
0x50001410 C   FIELD 13w01 IDR13: Port input data (y = 0..15)
0x50001410 C   FIELD 14w01 IDR14: Port input data (y = 0..15)
0x50001410 C   FIELD 15w01 IDR15: Port input data (y = 0..15)
0x50001414 B  REGISTER ODR (rw): GPIO port output data register
0x50001414 C   FIELD 00w01 ODR0: Port output data (y = 0..15)
0x50001414 C   FIELD 01w01 ODR1: Port output data (y = 0..15)
0x50001414 C   FIELD 02w01 ODR2: Port output data (y = 0..15)
0x50001414 C   FIELD 03w01 ODR3: Port output data (y = 0..15)
0x50001414 C   FIELD 04w01 ODR4: Port output data (y = 0..15)
0x50001414 C   FIELD 05w01 ODR5: Port output data (y = 0..15)
0x50001414 C   FIELD 06w01 ODR6: Port output data (y = 0..15)
0x50001414 C   FIELD 07w01 ODR7: Port output data (y = 0..15)
0x50001414 C   FIELD 08w01 ODR8: Port output data (y = 0..15)
0x50001414 C   FIELD 09w01 ODR9: Port output data (y = 0..15)
0x50001414 C   FIELD 10w01 ODR10: Port output data (y = 0..15)
0x50001414 C   FIELD 11w01 ODR11: Port output data (y = 0..15)
0x50001414 C   FIELD 12w01 ODR12: Port output data (y = 0..15)
0x50001414 C   FIELD 13w01 ODR13: Port output data (y = 0..15)
0x50001414 C   FIELD 14w01 ODR14: Port output data (y = 0..15)
0x50001414 C   FIELD 15w01 ODR15: Port output data (y = 0..15)
0x50001418 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x50001418 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x50001418 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x50001418 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5000141C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5000141C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5000141C C   FIELD 16w01 LCKK: Port x lock bit y (y= 0..15)
0x50001420 B  REGISTER AFRL (rw): GPIO alternate function low register
0x50001420 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x50001420 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x50001420 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x50001420 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x50001420 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x50001420 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x50001420 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x50001420 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x50001424 B  REGISTER AFRH (rw): GPIO alternate function high register
0x50001424 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x50001424 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x50001424 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x50001424 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x50001424 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x50001424 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x50001424 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x50001424 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x50001428 B  REGISTER BRR (wo): port bit reset register
0x50001428 C   FIELD 00w01 BR0: Port Reset bit
0x50001428 C   FIELD 01w01 BR1: Port Reset bit
0x50001428 C   FIELD 02w01 BR2: Port Reset bit
0x50001428 C   FIELD 03w01 BR3: Port Reset bit
0x50001428 C   FIELD 04w01 BR4: Port Reset bit
0x50001428 C   FIELD 05w01 BR5: Port Reset bit
0x50001428 C   FIELD 06w01 BR6: Port Reset bit
0x50001428 C   FIELD 07w01 BR7: Port Reset bit
0x50001428 C   FIELD 08w01 BR8: Port Reset bit
0x50001428 C   FIELD 09w01 BR9: Port Reset bit
0x50001428 C   FIELD 10w01 BR10: Port Reset bit
0x50001428 C   FIELD 11w01 BR11: Port Reset bit
0x50001428 C   FIELD 12w01 BR12: Port Reset bit
0x50001428 C   FIELD 13w01 BR13: Port Reset bit
0x50001428 C   FIELD 14w01 BR14: Port Reset bit
0x50001428 C   FIELD 15w01 BR15: Port Reset bit
INTERRUPT 000: WWDG (WWDG): Window watchdog interrupt
INTERRUPT 011: DMA_Channel4_5_6_7 (DMAMUX): DMA channel 4, 5, 6 & 7 and DMAMUX
INTERRUPT 013: TIM1_BRK_UP_TRG_COM (TIM1): IM1 break, update, trigger and commutation interrupts
INTERRUPT 014: TIM1_CC (TIM1): TIM1 Capture Compare interrupt
INTERRUPT 015: TIM2 (TIM2): TIM2 global interrupt
INTERRUPT 016: TIM3 (TIM3): TIM3 global interrupt
INTERRUPT 017: TIM6_DAC (TIM6): TIM6 + LPTIM1 and DAC global interrupt
INTERRUPT 018: TIM7 (TIM7): TIM7 + LPTIM2 global interrupt
INTERRUPT 019: TIM14 (TIM14): TIM14 global interrupt
INTERRUPT 020: TIM15 (TIM15): Timer 15 global interrupt
INTERRUPT 021: TIM16 (TIM16): TIM16 global interrupt
INTERRUPT 022: TIM17 (TIM17): TIM17 global interrupt
INTERRUPT 023: I2C1 (I2C1): I2C1 global interrupt
INTERRUPT 024: I2C2 (I2C2): I2C2 global interrupt
INTERRUPT 027: USART1 (USART1): USART1 global interrupt
INTERRUPT 028: USART2 (USART2): USART2 global interrupt
INTERRUPT 029: USART3_USART4_USART5_USART6_LPUART1 (USART3): USART3,4,5,6 and LPUART1 global interrupt
INTERRUPT 030: CEC (HDMI_CEC): CEC global interrupt
INTERRUPT 031: AES_RNG (RNG): AES and RNG global interrupts
