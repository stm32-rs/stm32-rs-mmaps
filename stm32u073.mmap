0x40000000 A PERIPHERAL TIM2
0x40000000 B  REGISTER TIM2_CR1 (rw): TIM2 control register 1
0x40000000 C   FIELD 00w01 CEN (rw): Counter enable
0x40000000 C   FIELD 01w01 UDIS (rw): Update disable
0x40000000 C   FIELD 02w01 URS (rw): Update request source
0x40000000 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40000000 C   FIELD 04w01 DIR (rw): Direction
0x40000000 C   FIELD 05w02 CMS (rw): Center-aligned mode selection
0x40000000 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40000000 C   FIELD 08w02 CKD (rw): Clock division
0x40000000 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40000004 B  REGISTER TIM2_CR2 (rw): TIM2 control register 2
0x40000004 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40000004 C   FIELD 04w03 MMS (rw): Master mode selection
0x40000004 C   FIELD 07w01 TI1S (rw): TI1 selection
0x40000008 B  REGISTER TIM2_SMCR (rw): TIM2 slave mode control register
0x40000008 C   FIELD 00w03 SMS (rw): SMS[2:0]: Slave mode selection
0x40000008 C   FIELD 03w01 OCCS (rw): OCREF clear selection
0x40000008 C   FIELD 04w03 TS (rw): TS[2:0]: Trigger selection
0x40000008 C   FIELD 07w01 MSM (rw): Master/Slave mode
0x40000008 C   FIELD 08w04 ETF (rw): External trigger filter
0x40000008 C   FIELD 12w02 ETPS (rw): External trigger prescaler
0x40000008 C   FIELD 14w01 ECE (rw): External clock enable
0x40000008 C   FIELD 15w01 ETP (rw): External trigger polarity
0x40000008 C   FIELD 16w01 SMS_1 (rw): SMS[3]
0x40000008 C   FIELD 20w02 TS_1 (rw): TS[4:3]
0x4000000C B  REGISTER TIM2_DIER (rw): TIM2 DMA/Interrupt enable register
0x4000000C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000000C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4000000C C   FIELD 02w01 CC2IE (rw): Capture/Compare 2 interrupt enable
0x4000000C C   FIELD 03w01 CC3IE (rw): Capture/Compare 3 interrupt enable
0x4000000C C   FIELD 04w01 CC4IE (rw): Capture/Compare 4 interrupt enable
0x4000000C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x4000000C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4000000C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x4000000C C   FIELD 10w01 CC2DE (rw): Capture/Compare 2 DMA request enable
0x4000000C C   FIELD 11w01 CC3DE (rw): Capture/Compare 3 DMA request enable
0x4000000C C   FIELD 12w01 CC4DE (rw): Capture/Compare 4 DMA request enable
0x4000000C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40000010 B  REGISTER TIM2_SR (rw): TIM2 status register
0x40000010 C   FIELD 00w01 UIF (rw): Update interrupt flag
0x40000010 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag
0x40000010 C   FIELD 02w01 CC2IF (rw): Capture/Compare 2 interrupt flag
0x40000010 C   FIELD 03w01 CC3IF (rw): Capture/Compare 3 interrupt flag
0x40000010 C   FIELD 04w01 CC4IF (rw): Capture/Compare 4 interrupt flag
0x40000010 C   FIELD 06w01 TIF (rw): Trigger interrupt flag
0x40000010 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag
0x40000010 C   FIELD 10w01 CC2OF (rw): Capture/compare 2 overcapture flag
0x40000010 C   FIELD 11w01 CC3OF (rw): Capture/Compare 3 overcapture flag
0x40000010 C   FIELD 12w01 CC4OF (rw): Capture/Compare 4 overcapture flag
0x40000014 B  REGISTER TIM2_EGR (wo): TIM2 event generation register
0x40000014 C   FIELD 00w01 UG (wo): Update generation
0x40000014 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation
0x40000014 C   FIELD 02w01 CC2G (wo): Capture/compare 2 generation
0x40000014 C   FIELD 03w01 CC3G (wo): Capture/compare 3 generation
0x40000014 C   FIELD 04w01 CC4G (wo): Capture/compare 4 generation
0x40000014 C   FIELD 06w01 TG (wo): Trigger generation
0x40000018 B  REGISTER TIM2_CCMR1 (rw): TIM2 capture/compare mode register 1
0x40000018 B  REGISTER TIM2_CCMR1_ALTERNATE1 (rw): TIM2 capture/compare mode register 1
0x40000018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection
0x40000018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection
0x40000018 C   FIELD 02w01 OC1FE (rw): Output compare 1 fast enable
0x40000018 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler
0x40000018 C   FIELD 03w01 OC1PE (rw): Output compare 1 preload enable
0x40000018 C   FIELD 04w03 OC1M (rw): OC1M[2:0]: Output compare 1 mode
0x40000018 C   FIELD 04w04 IC1F (rw): Input capture 1 filter
0x40000018 C   FIELD 07w01 OC1CE (rw): Output compare 1 clear enable
0x40000018 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection
0x40000018 C   FIELD 08w02 CC2S (rw): Capture/compare 2 selection
0x40000018 C   FIELD 10w01 OC2FE (rw): Output compare 2 fast enable
0x40000018 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler
0x40000018 C   FIELD 11w01 OC2PE (rw): Output compare 2 preload enable
0x40000018 C   FIELD 12w03 OC2M (rw): OC2M[2:0]: Output compare 2 mode
0x40000018 C   FIELD 12w04 IC2F (rw): Input capture 2 filter
0x40000018 C   FIELD 15w01 OC2CE (rw): Output compare 2 clear enable
0x40000018 C   FIELD 16w01 OC1M_1 (rw): OC1M[3]
0x40000018 C   FIELD 24w01 OC2M_1 (rw): OC2M[3]
0x4000001C B  REGISTER TIM2_CCMR2 (rw): TIM2 capture/compare mode register 2
0x4000001C B  REGISTER TIM2_CCMR2_ALTERNATE1 (rw): TIM2 capture/compare mode register 2
0x4000001C C   FIELD 00w02 CC3S (rw): Capture/Compare 3 selection
0x4000001C C   FIELD 00w02 CC3S (rw): Capture/Compare 3 selection
0x4000001C C   FIELD 02w01 OC3FE (rw): Output compare 3 fast enable
0x4000001C C   FIELD 02w02 IC3PSC (rw): Input capture 3 prescaler
0x4000001C C   FIELD 03w01 OC3PE (rw): Output compare 3 preload enable
0x4000001C C   FIELD 04w03 OC3M (rw): OC3M[2:0]: Output compare 3 mode
0x4000001C C   FIELD 04w04 IC3F (rw): Input capture 3 filter
0x4000001C C   FIELD 07w01 OC3CE (rw): Output compare 3 clear enable
0x4000001C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection
0x4000001C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection
0x4000001C C   FIELD 10w01 OC4FE (rw): Output compare 4 fast enable
0x4000001C C   FIELD 10w02 IC4PSC (rw): Input capture 4 prescaler
0x4000001C C   FIELD 11w01 OC4PE (rw): Output compare 4 preload enable
0x4000001C C   FIELD 12w03 OC4M (rw): OC4M[2:0]: Output compare 4 mode
0x4000001C C   FIELD 12w04 IC4F (rw): Input capture 4 filter
0x4000001C C   FIELD 15w01 OC4CE (rw): Output compare 4 clear enable
0x4000001C C   FIELD 16w01 OC3M_1 (rw): OC3M[3]
0x4000001C C   FIELD 24w01 OC4M_1 (rw): OC4M[3]
0x40000020 B  REGISTER TIM2_CCER (rw): TIM2 capture/compare enable register
0x40000020 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable.
0x40000020 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output Polarity.
0x40000020 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 output Polarity.
0x40000020 C   FIELD 04w01 CC2E (rw): Capture/Compare 2 output enable.
0x40000020 C   FIELD 05w01 CC2P (rw): Capture/Compare 2 output Polarity.
0x40000020 C   FIELD 07w01 CC2NP (rw): Capture/Compare 2 output Polarity.
0x40000020 C   FIELD 08w01 CC3E (rw): Capture/Compare 3 output enable.
0x40000020 C   FIELD 09w01 CC3P (rw): Capture/Compare 3 output Polarity.
0x40000020 C   FIELD 11w01 CC3NP (rw): Capture/Compare 3 output Polarity.
0x40000020 C   FIELD 12w01 CC4E (rw): Capture/Compare 4 output enable.
0x40000020 C   FIELD 13w01 CC4P (rw): Capture/Compare 4 output Polarity.
0x40000020 C   FIELD 15w01 CC4NP (rw): Capture/Compare 4 output Polarity.
0x40000024 B  REGISTER TIM2_CNT (rw): TIM2 counter
0x40000024 B  REGISTER TIM2_CNT_ALTERNATE1 (rw): TIM2 counter
0x40000024 C   FIELD 00w31 CNT (rw): Least significant part of counter value
0x40000024 C   FIELD 00w32 CNT (rw): Least significant part of counter value
0x40000024 C   FIELD 31w01 UIFCPY (rw): UIF Copy
0x40000028 B  REGISTER TIM2_PSC (rw): TIM2 prescaler
0x40000028 C   FIELD 00w16 PSC (rw): Prescaler value
0x4000002C B  REGISTER TIM2_ARR (rw): TIM2 auto-reload register
0x4000002C C   FIELD 00w32 ARR (rw): Low Auto-reload value
0x40000034 B  REGISTER TIM2_CCR1 (rw): TIM2 capture/compare register 1
0x40000034 C   FIELD 00w32 CCR1 (rw): Low Capture/Compare 1 value
0x40000038 B  REGISTER TIM2_CCR2 (rw): TIM2 capture/compare register 2
0x40000038 C   FIELD 00w32 CCR2 (rw): Low Capture/Compare 2 value
0x4000003C B  REGISTER TIM2_CCR3 (rw): TIM2 capture/compare register 3
0x4000003C C   FIELD 00w32 CCR3 (rw): Low Capture/Compare value
0x40000040 B  REGISTER TIM2_CCR4 (rw): TIM2 capture/compare register 4
0x40000040 C   FIELD 00w32 CCR4 (rw): Low Capture/Compare value
0x40000048 B  REGISTER TIM2_DCR (rw): TIM2 DMA control register
0x40000048 C   FIELD 00w05 DBA (rw): DMA base address
0x40000048 C   FIELD 08w05 DBL (rw): DMA burst length
0x4000004C B  REGISTER TIM2_DMAR (rw): TIM2 DMA address for full transfer
0x4000004C C   FIELD 00w16 DMAB (rw): DMA register for burst accesses
0x40000050 B  REGISTER TIM2_OR1 (rw): TIM2 option register 1
0x40000050 C   FIELD 00w02 OCREF_CLR (rw): Ocref_clr source selection
0x40000060 B  REGISTER TIM2_AF1 (rw): TIM2 alternate function option register 1
0x40000060 C   FIELD 14w04 ETRSEL (rw): ETR source selection
0x40000068 B  REGISTER TIM2_TISEL (rw): TIM2 timer input selection register
0x40000068 C   FIELD 00w04 TI1SEL (rw): TI1[0] to TI1[15] input selection
0x40000068 C   FIELD 08w04 TI2SEL (rw): TI2[0] to TI2[15] input selection
0x40000068 C   FIELD 16w04 TI3SEL (rw): TI3[0] to TI3[15] input selection
0x40000400 A PERIPHERAL TIM3
0x40000400 B  REGISTER TIM3_CR1 (rw): TIM3 control register 1
0x40000400 C   FIELD 00w01 CEN (rw): Counter enable
0x40000400 C   FIELD 01w01 UDIS (rw): Update disable
0x40000400 C   FIELD 02w01 URS (rw): Update request source
0x40000400 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40000400 C   FIELD 04w01 DIR (rw): Direction
0x40000400 C   FIELD 05w02 CMS (rw): Center-aligned mode selection
0x40000400 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40000400 C   FIELD 08w02 CKD (rw): Clock division
0x40000400 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40000404 B  REGISTER TIM3_CR2 (rw): TIM3 control register 2
0x40000404 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40000404 C   FIELD 04w03 MMS (rw): Master mode selection
0x40000404 C   FIELD 07w01 TI1S (rw): TI1 selection
0x40000408 B  REGISTER TIM3_SMCR (rw): TIM3 slave mode control register
0x40000408 C   FIELD 00w03 SMS (rw): SMS[2:0]: Slave mode selection
0x40000408 C   FIELD 03w01 OCCS (rw): OCREF clear selection
0x40000408 C   FIELD 04w03 TS (rw): TS[2:0]: Trigger selection
0x40000408 C   FIELD 07w01 MSM (rw): Master/Slave mode
0x40000408 C   FIELD 08w04 ETF (rw): External trigger filter
0x40000408 C   FIELD 12w02 ETPS (rw): External trigger prescaler
0x40000408 C   FIELD 14w01 ECE (rw): External clock enable
0x40000408 C   FIELD 15w01 ETP (rw): External trigger polarity
0x40000408 C   FIELD 16w01 SMS_1 (rw): SMS[3]
0x40000408 C   FIELD 20w02 TS_1 (rw): TS[4:3]
0x4000040C B  REGISTER TIM3_DIER (rw): TIM3 DMA/Interrupt enable register
0x4000040C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000040C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4000040C C   FIELD 02w01 CC2IE (rw): Capture/Compare 2 interrupt enable
0x4000040C C   FIELD 03w01 CC3IE (rw): Capture/Compare 3 interrupt enable
0x4000040C C   FIELD 04w01 CC4IE (rw): Capture/Compare 4 interrupt enable
0x4000040C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x4000040C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4000040C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x4000040C C   FIELD 10w01 CC2DE (rw): Capture/Compare 2 DMA request enable
0x4000040C C   FIELD 11w01 CC3DE (rw): Capture/Compare 3 DMA request enable
0x4000040C C   FIELD 12w01 CC4DE (rw): Capture/Compare 4 DMA request enable
0x4000040C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40000410 B  REGISTER TIM3_SR (rw): TIM3 status register
0x40000410 C   FIELD 00w01 UIF (rw): Update interrupt flag
0x40000410 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag
0x40000410 C   FIELD 02w01 CC2IF (rw): Capture/Compare 2 interrupt flag
0x40000410 C   FIELD 03w01 CC3IF (rw): Capture/Compare 3 interrupt flag
0x40000410 C   FIELD 04w01 CC4IF (rw): Capture/Compare 4 interrupt flag
0x40000410 C   FIELD 06w01 TIF (rw): Trigger interrupt flag
0x40000410 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag
0x40000410 C   FIELD 10w01 CC2OF (rw): Capture/compare 2 overcapture flag
0x40000410 C   FIELD 11w01 CC3OF (rw): Capture/Compare 3 overcapture flag
0x40000410 C   FIELD 12w01 CC4OF (rw): Capture/Compare 4 overcapture flag
0x40000414 B  REGISTER TIM3_EGR (wo): TIM3 event generation register
0x40000414 C   FIELD 00w01 UG (wo): Update generation
0x40000414 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation
0x40000414 C   FIELD 02w01 CC2G (wo): Capture/compare 2 generation
0x40000414 C   FIELD 03w01 CC3G (wo): Capture/compare 3 generation
0x40000414 C   FIELD 04w01 CC4G (wo): Capture/compare 4 generation
0x40000414 C   FIELD 06w01 TG (wo): Trigger generation
0x40000418 B  REGISTER TIM3_CCMR1 (rw): TIM3 capture/compare mode register 1
0x40000418 B  REGISTER TIM3_CCMR1_ALTERNATE1 (rw): TIM3 capture/compare mode register 1
0x40000418 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection
0x40000418 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection
0x40000418 C   FIELD 02w01 OC1FE (rw): Output compare 1 fast enable
0x40000418 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler
0x40000418 C   FIELD 03w01 OC1PE (rw): Output compare 1 preload enable
0x40000418 C   FIELD 04w03 OC1M (rw): OC1M[2:0]: Output compare 1 mode
0x40000418 C   FIELD 04w04 IC1F (rw): Input capture 1 filter
0x40000418 C   FIELD 07w01 OC1CE (rw): Output compare 1 clear enable
0x40000418 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection
0x40000418 C   FIELD 08w02 CC2S (rw): Capture/compare 2 selection
0x40000418 C   FIELD 10w01 OC2FE (rw): Output compare 2 fast enable
0x40000418 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler
0x40000418 C   FIELD 11w01 OC2PE (rw): Output compare 2 preload enable
0x40000418 C   FIELD 12w03 OC2M (rw): OC2M[2:0]: Output compare 2 mode
0x40000418 C   FIELD 12w04 IC2F (rw): Input capture 2 filter
0x40000418 C   FIELD 15w01 OC2CE (rw): Output compare 2 clear enable
0x40000418 C   FIELD 16w01 OC1M_1 (rw): OC1M[3]
0x40000418 C   FIELD 24w01 OC2M_1 (rw): OC2M[3]
0x4000041C B  REGISTER TIM3_CCMR2 (rw): TIM3 capture/compare mode register 2
0x4000041C B  REGISTER TIM3_CCMR2_ALTERNATE1 (rw): TIM3 capture/compare mode register 2
0x4000041C C   FIELD 00w02 CC3S (rw): Capture/Compare 3 selection
0x4000041C C   FIELD 00w02 CC3S (rw): Capture/Compare 3 selection
0x4000041C C   FIELD 02w01 OC3FE (rw): Output compare 3 fast enable
0x4000041C C   FIELD 02w02 IC3PSC (rw): Input capture 3 prescaler
0x4000041C C   FIELD 03w01 OC3PE (rw): Output compare 3 preload enable
0x4000041C C   FIELD 04w03 OC3M (rw): OC3M[2:0]: Output compare 3 mode
0x4000041C C   FIELD 04w04 IC3F (rw): Input capture 3 filter
0x4000041C C   FIELD 07w01 OC3CE (rw): Output compare 3 clear enable
0x4000041C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection
0x4000041C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection
0x4000041C C   FIELD 10w01 OC4FE (rw): Output compare 4 fast enable
0x4000041C C   FIELD 10w02 IC4PSC (rw): Input capture 4 prescaler
0x4000041C C   FIELD 11w01 OC4PE (rw): Output compare 4 preload enable
0x4000041C C   FIELD 12w03 OC4M (rw): OC4M[2:0]: Output compare 4 mode
0x4000041C C   FIELD 12w04 IC4F (rw): Input capture 4 filter
0x4000041C C   FIELD 15w01 OC4CE (rw): Output compare 4 clear enable
0x4000041C C   FIELD 16w01 OC3M_1 (rw): OC3M[3]
0x4000041C C   FIELD 24w01 OC4M_1 (rw): OC4M[3]
0x40000420 B  REGISTER TIM3_CCER (rw): TIM3 capture/compare enable register
0x40000420 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable.
0x40000420 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output Polarity.
0x40000420 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 output Polarity.
0x40000420 C   FIELD 04w01 CC2E (rw): Capture/Compare 2 output enable.
0x40000420 C   FIELD 05w01 CC2P (rw): Capture/Compare 2 output Polarity.
0x40000420 C   FIELD 07w01 CC2NP (rw): Capture/Compare 2 output Polarity.
0x40000420 C   FIELD 08w01 CC3E (rw): Capture/Compare 3 output enable.
0x40000420 C   FIELD 09w01 CC3P (rw): Capture/Compare 3 output Polarity.
0x40000420 C   FIELD 11w01 CC3NP (rw): Capture/Compare 3 output Polarity.
0x40000420 C   FIELD 12w01 CC4E (rw): Capture/Compare 4 output enable.
0x40000420 C   FIELD 13w01 CC4P (rw): Capture/Compare 4 output Polarity.
0x40000420 C   FIELD 15w01 CC4NP (rw): Capture/Compare 4 output Polarity.
0x40000424 B  REGISTER TIM3_CNT (rw): TIM3 counter
0x40000424 B  REGISTER TIM3_CNT_ALTERNATE1 (rw): TIM3 counter
0x40000424 C   FIELD 00w31 CNT (rw): Least significant part of counter value
0x40000424 C   FIELD 00w32 CNT (rw): Least significant part of counter value
0x40000424 C   FIELD 31w01 UIFCPY (rw): UIF Copy
0x40000428 B  REGISTER TIM3_PSC (rw): TIM3 prescaler
0x40000428 C   FIELD 00w16 PSC (rw): Prescaler value
0x4000042C B  REGISTER TIM3_ARR (rw): TIM3 auto-reload register
0x4000042C C   FIELD 00w32 ARR (rw): Low Auto-reload value
0x40000434 B  REGISTER TIM3_CCR1 (rw): TIM3 capture/compare register 1
0x40000434 C   FIELD 00w32 CCR1 (rw): Low Capture/Compare 1 value
0x40000438 B  REGISTER TIM3_CCR2 (rw): TIM3 capture/compare register 2
0x40000438 C   FIELD 00w32 CCR2 (rw): Low Capture/Compare 2 value
0x4000043C B  REGISTER TIM3_CCR3 (rw): TIM3 capture/compare register 3
0x4000043C C   FIELD 00w32 CCR3 (rw): Low Capture/Compare value
0x40000440 B  REGISTER TIM3_CCR4 (rw): TIM3 capture/compare register 4
0x40000440 C   FIELD 00w32 CCR4 (rw): Low Capture/Compare value
0x40000448 B  REGISTER TIM3_DCR (rw): TIM3 DMA control register
0x40000448 C   FIELD 00w05 DBA (rw): DMA base address
0x40000448 C   FIELD 08w05 DBL (rw): DMA burst length
0x4000044C B  REGISTER TIM3_DMAR (rw): TIM3 DMA address for full transfer
0x4000044C C   FIELD 00w16 DMAB (rw): DMA register for burst accesses
0x40000450 B  REGISTER TIM3_OR1 (rw): TIM3 option register 1
0x40000450 C   FIELD 00w02 OCREF_CLR (rw): Ocref_clr source selection
0x40000460 B  REGISTER TIM3_AF1 (rw): TIM3 alternate function option register 1
0x40000460 C   FIELD 14w04 ETRSEL (rw): ETR source selection
0x40000468 B  REGISTER TIM3_TISEL (rw): TIM3 timer input selection register
0x40000468 C   FIELD 00w04 TI1SEL (rw): TI1[0] to TI1[15] input selection
0x40000468 C   FIELD 08w04 TI2SEL (rw): TI2[0] to TI2[15] input selection
0x40000468 C   FIELD 16w04 TI3SEL (rw): TI3[0] to TI3[15] input selection
0x40001000 A PERIPHERAL TIM6
0x40001000 B  REGISTER TIM6_CR1: TIM6 control register 1
0x40001000 C   FIELD 00w01 CEN (rw): Counter enable Note: Gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware. CEN is cleared automatically in one-pulse mode, when an update event occurs.
0x40001000 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40001000 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40001000 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40001000 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40001000 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40001004 B  REGISTER TIM6_CR2: TIM6 control register 2
0x40001004 C   FIELD 04w03 MMS (rw): Master mode selection These bits are used to select the information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows: When the Counter Enable signal is controlled by the trigger input, there is a delay on TRGO, except if the master/slave mode is selected (see the MSM bit description in the TIMx_SMCR register). Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x4000100C B  REGISTER TIM6_DIER: TIM6 DMA/Interrupt enable register
0x4000100C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000100C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x40001010 B  REGISTER TIM6_SR: TIM6 status register
0x40001010 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value and if UDIS = 0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in the TIMx_EGR register, if URS1=10 and UDIS1=10 in the TIMx_CR1 register.
0x40001014 B  REGISTER TIM6_EGR: TIM6 event generation register
0x40001014 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40001024 B  REGISTER TIM6_CNT: TIM6 counter
0x40001024 C   FIELD 00w16 CNT (rw): Counter value
0x40001024 C   FIELD 31w01 UIFCPY (ro): UIF Copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in TIMx_CR1 is reset, bit 31 is reserved and read as 0.
0x40001028 B  REGISTER TIM6_PSC: TIM6 prescaler
0x40001028 C   FIELD 00w16 PSC (rw): Prescaler value The counter clock frequency CK_CNT is equal to f<sub>CK_PSC</sub> / (PSC[15:0] + 1). PSC contains the value to be loaded into the active prescaler register at each update event. (including when the counter is cleared through UG bit of TIMx_EGR register or through trigger controller when configured in reset mode).
0x4000102C B  REGISTER TIM6_ARR: TIM6 auto-reload register
0x4000102C C   FIELD 00w16 ARR (rw): Prescaler value ARR is the value to be loaded into the actual auto-reload register. Refer to Section123.3.1: Time-base unit on page1596 for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null.
0x40001400 A PERIPHERAL TIM7
0x40001400 B  REGISTER TIM7_CR1: TIM7 control register 1
0x40001400 C   FIELD 00w01 CEN (rw): Counter enable Note: Gated mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware. CEN is cleared automatically in one-pulse mode, when an update event occurs.
0x40001400 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40001400 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40001400 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40001400 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40001400 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40001404 B  REGISTER TIM7_CR2: TIM7 control register 2
0x40001404 C   FIELD 04w03 MMS (rw): Master mode selection These bits are used to select the information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows: When the Counter Enable signal is controlled by the trigger input, there is a delay on TRGO, except if the master/slave mode is selected (see the MSM bit description in the TIMx_SMCR register). Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x4000140C B  REGISTER TIM7_DIER: TIM7 DMA/Interrupt enable register
0x4000140C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4000140C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x40001410 B  REGISTER TIM7_SR: TIM7 status register
0x40001410 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value and if UDIS = 0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in the TIMx_EGR register, if URS1=10 and UDIS1=10 in the TIMx_CR1 register.
0x40001414 B  REGISTER TIM7_EGR: TIM7 event generation register
0x40001414 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40001424 B  REGISTER TIM7_CNT: TIM7 counter
0x40001424 C   FIELD 00w16 CNT (rw): Counter value
0x40001424 C   FIELD 31w01 UIFCPY (ro): UIF Copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in TIMx_CR1 is reset, bit 31 is reserved and read as 0.
0x40001428 B  REGISTER TIM7_PSC: TIM7 prescaler
0x40001428 C   FIELD 00w16 PSC (rw): Prescaler value The counter clock frequency CK_CNT is equal to f<sub>CK_PSC</sub> / (PSC[15:0] + 1). PSC contains the value to be loaded into the active prescaler register at each update event. (including when the counter is cleared through UG bit of TIMx_EGR register or through trigger controller when configured in reset mode).
0x4000142C B  REGISTER TIM7_ARR: TIM7 auto-reload register
0x4000142C C   FIELD 00w16 ARR (rw): Prescaler value ARR is the value to be loaded into the actual auto-reload register. Refer to Section123.3.1: Time-base unit on page1596 for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null.
0x40002400 A PERIPHERAL LCD
0x40002400 B  REGISTER CR: LCD control register
0x40002400 C   FIELD 00w01 LCDEN (rw): LCD controller enable This bit is set by software to enable the LCD controller/driver. It is cleared by software to turn off the LCD at the beginning of the next frame. When the LCD is disabled, all COM and SEG pins are driven to V<sub>SS</sub>.
0x40002400 C   FIELD 01w01 VSEL (rw): Voltage source selection This bit determines the voltage source for the LCD.
0x40002400 C   FIELD 02w03 DUTY (rw): Duty selection These bits determine the duty cycle. Values 101, 110 and 111 are forbidden. Others: Reserved
0x40002400 C   FIELD 05w02 BIAS (rw): Bias selector These bits determine the bias used. Value 11 is forbidden.
0x40002400 C   FIELD 07w01 MUX_SEG (rw): Mux segment enable This bit is used to enable SEG pin remapping. Four SEG pins can be multiplexed with1SEG[31:28] or SEG[15:12]. See Section118.3.7.
0x40002400 C   FIELD 08w01 BUFEN (rw): Voltage output buffer enable This bit is used to enable/disable the voltage output buffer for higher driving capability.
0x40002404 B  REGISTER FCR: LCD frame control register
0x40002404 C   FIELD 00w01 HD (rw): High drive enable This bit is written by software to enable a low resistance divider. Displays with high internal resistance may need a longer drive time to achieve satisfactory contrast. This bit is useful in this case if some additional power consumption can be tolerated.
0x40002404 C   FIELD 01w01 SOFIE (rw): Start of frame interrupt enable This bit is set and cleared by software.
0x40002404 C   FIELD 03w01 UDDIE (rw): Update display done interrupt enable This bit is set and cleared by software.
0x40002404 C   FIELD 04w03 PON (rw): Pulse ON duration These bits are written by software to define the pulse duration in terms of ck_ps pulses. A1short pulse leads to lower power consumption, but displays with high internal resistance may need a longer pulse to achieve satisfactory contrast. Note that the pulse is never longer than one half prescaled LCD clock period. PON duration example with LCDCLK = 32.7681kHz and PS=0x03:
0x40002404 C   FIELD 07w03 DEAD (rw): Dead time duration These bits are written by software to configure the length of the dead time between frames. During the dead time the COM and SEG voltage levels are held at 0 V to reduce the contrast without modifying the frame rate. ......
0x40002404 C   FIELD 10w03 CC (rw): Contrast control These bits specify one of the V<sub>LCD </sub>maximum voltages (independent of V<sub>DD</sub>). It ranges from12.60 V to 3.51V. Note: Refer to the datasheet for the V<sub>LCDx</sub> values.
0x40002404 C   FIELD 13w03 BLINKF (rw): Blink frequency selection
0x40002404 C   FIELD 16w02 BLINK (rw): Blink mode selection
0x40002404 C   FIELD 18w04 DIV (rw): DIV clock divider These bits are written by software to define the division factor of the DIV divider (see1Section118.3.2.) ...
0x40002404 C   FIELD 22w04 PS (rw): PS 16-bit prescaler These bits are written by software to define the division factor of the PS 16-bit prescaler. ck_ps = LCDCLK/(2<sup>PS[3:0]</sup>). See<sub> </sub>Section118.3.2. ...
0x40002408 B  REGISTER SR: LCD status register
0x40002408 C   FIELD 00w01 ENS (ro): LCD enabled status This bit is set and cleared by hardware. It indicates the LCD controller status. Note: This bit is set immediately when LCDEN in LCD_CR goes from 0 to 1. On deactivation, it reflects the real LCD status. It becomes 0 at the end of the last displayed frame.
0x40002408 C   FIELD 01w01 SOF (ro): Start-of-frame flag This bit is set by hardware at the beginning of a new frame, at the same time as the display data is updated. It is cleared by writing a 1 to SOFC in LCD_CLR. The bit clear has priority over the set.
0x40002408 C   FIELD 02w01 UDR (rw): Update display request Each time software modifies the LCD_RAM, it must set this bit to transfer the updated data to the second level buffer. This bit stays set until the end of the update. During this time, the LCD_RAM is write protected. When the display is disabled, the update is performed for all LCD_DISPLAY locations. When the display is enabled, the update is performed only for locations for which commons are active (depending on DUTY). For example if DUTY = 1/2, Note: only the LCD_DISPLAY of COM0 and COM1 are updated. Note: Writing 0 on this bit or writing 1 when it is already 1 has no effect. This bit can be cleared by hardware only. It can be cleared only when LCDEN = 1
0x40002408 C   FIELD 03w01 UDD (ro): Update display done This bit is set by hardware. It is cleared by writing 1 to UDDC in LCD_CLR. The bit set has priority over the clear. Note: If the device is in Stop mode (PCLK not provided), UDD does not generate an interrupt even if UDDIE = 1. If the display is not enabled, the UDD interrupt never occurs.
0x40002408 C   FIELD 04w01 RDY (ro): Ready flag This bit is set and cleared by hardware. It indicates the status of the stepup converter.
0x40002408 C   FIELD 05w01 FCRSF (ro): LCD frame control register synchronization flag This bit is set by hardware each time the LCD_FCR register is updated in the LCDCLK domain. It is cleared by hardware when writing to the LCD_FCR register.
0x4000240C B  REGISTER CLR: LCD clear register
0x4000240C C   FIELD 01w01 SOFC (wo): Start-of-frame flag clear This bit is written by software to clear SOF in LCD_SR.
0x4000240C C   FIELD 03w01 UDDC (wo): Update display done clear This bit is written by software to clear UDD in LCD_SR.
0x40002414 B  REGISTER RAM_COM0 (rw): LCD display memory
0x40002414 C   FIELD 00w48 SEGS: Segment states, one bit per segment, LSB: S00, MSB: S47
0x4000241C B  REGISTER RAM_COM1 (=RAM_COM0): 
0x40002424 B  REGISTER RAM_COM2 (=RAM_COM0): 
0x4000242C B  REGISTER RAM_COM3 (=RAM_COM0): 
0x40002434 B  REGISTER RAM_COM4 (rw): LCD display memory
0x40002434 C   FIELD 00w52 SEGS: Segment states, one bit per segment, LSB: S00, MSB: S51
0x4000243C B  REGISTER RAM_COM5 (=RAM_COM4): 
0x40002444 B  REGISTER RAM_COM6 (=RAM_COM4): 
0x4000244C B  REGISTER RAM_COM7 (=RAM_COM4): 
0x40002800 A PERIPHERAL RTC
0x40002800 B  REGISTER TR: RTC time register
0x40002800 C   FIELD 00w04 SU (rw): Second units in BCD format
0x40002800 C   FIELD 04w03 ST (rw): Second tens in BCD format
0x40002800 C   FIELD 08w04 MNU (rw): Minute units in BCD format
0x40002800 C   FIELD 12w03 MNT (rw): Minute tens in BCD format
0x40002800 C   FIELD 16w04 HU (rw): Hour units in BCD format
0x40002800 C   FIELD 20w02 HT (rw): Hour tens in BCD format
0x40002800 C   FIELD 22w01 PM (rw): AM/PM notation
0x40002804 B  REGISTER DR: RTC date register
0x40002804 C   FIELD 00w04 DU (rw): Date units in BCD format
0x40002804 C   FIELD 04w02 DT (rw): Date tens in BCD format
0x40002804 C   FIELD 08w04 MU (rw): Month units in BCD format
0x40002804 C   FIELD 12w01 MT (rw): Month tens in BCD format
0x40002804 C   FIELD 13w03 WDU (rw): Week day units ...
0x40002804 C   FIELD 16w04 YU (rw): Year units in BCD format
0x40002804 C   FIELD 20w04 YT (rw): Year tens in BCD format
0x40002808 B  REGISTER SSR: RTC subsecond register
0x40002808 C   FIELD 00w32 SS (ro): Synchronous binary counter SS[31:16]: Synchronous binary counter MSB values When Binary or Mixed mode is selected (BIN = 01 or 10 or 11): SS[31:16] are the 16 MSB of the SS[31:0] free-running down-counter. When BCD mode is selected (BIN=00): SS[31:16] are forced by hardware to 0x0000. SS[15:0]: Subsecond value/synchronous binary counter LSB values When Binary mode is selected (BIN = 01 or 10 or 11): SS[15:0] are the 16 LSB of the SS[31:0] free-running down-counter. When BCD mode is selected (BIN=00): SS[15:0] is the value in the synchronous prescaler counter. The fraction of a second is given by the formula below: Second fraction = (PREDIV_S - SS) / (PREDIV_S + 1) SS can be larger than PREDIV_S only after a shift operation. In that case, the correct time/date is one second less than as indicated by RTC_TR/RTC_DR.
0x4000280C B  REGISTER ICSR: RTC initialization control and status register
0x4000280C C   FIELD 02w01 WUTWF (ro): Wake-up timer write flag This bit is set by hardware when WUT value can be changed, after the WUTE bit has been set to 0 in RTC_CR. It is cleared by hardware in initialization mode.
0x4000280C C   FIELD 03w01 SHPF (ro): Shift operation pending This flag is set by hardware as soon as a shift operation is initiated by a write to the RTC_SHIFTR register. It is cleared by hardware when the corresponding shift operation has been executed. Writing to the SHPF bit has no effect.
0x4000280C C   FIELD 04w01 INITS (ro): Initialization status flag This bit is set by hardware when the calendar year field is different from 0 (Backup domain reset state).
0x4000280C C   FIELD 05w01 RSF (rw): Registers synchronization flag This bit is set by hardware each time the calendar registers are copied into the shadow registers (RTC_SSR, RTC_TR and RTC_DR). This bit is cleared by hardware in initialization mode, while a shift operation is pending (SHPF = 1), or when in bypass shadow register mode (BYPSHAD = 1). This bit can also be cleared by software. It is cleared either by software or by hardware in initialization mode.
0x4000280C C   FIELD 06w01 INITF (ro): Initialization flag When this bit is set to 1, the RTC is in initialization state, and the time, date and prescaler registers can be updated.
0x4000280C C   FIELD 07w01 INIT (rw): Initialization mode
0x4000280C C   FIELD 08w02 BIN (rw): Binary mode
0x4000280C C   FIELD 10w03 BCDU (rw): BCD update (BIN = 10 or 11) In mixed mode when both BCD calendar and binary extended counter are used (BIN = 10 or 11), the calendar second is incremented using the SSR Least Significant Bits.
0x4000280C C   FIELD 16w01 RECALPF (ro): Recalibration pending Flag The RECALPF status flag is automatically set to 1 when software writes to the RTC_CALR register, indicating that the RTC_CALR register is blocked. When the new calibration settings are taken into account, this bit returns to 0. Refer to Re-calibration on-the-fly.
0x40002810 B  REGISTER PRER: RTC prescaler register
0x40002810 C   FIELD 00w15 PREDIV_S (rw): Synchronous prescaler factor This is the synchronous division factor: ck_spre frequency = ck_apre frequency/(PREDIV_S+1)
0x40002810 C   FIELD 16w07 PREDIV_A (rw): Asynchronous prescaler factor This is the asynchronous division factor: ck_apre frequency = RTCCLK frequency/(PREDIV_A+1)
0x40002814 B  REGISTER WUTR: RTC wake-up timer register
0x40002814 C   FIELD 00w16 WUT (rw): Wake-up auto-reload value bits When the wake-up timer is enabled (WUTE set to 1), the WUTF flag is set every (WUT[15:0]1+11) ck_wut cycles. The ck_wut period is selected through WUCKSEL[2:0] bits of the RTC_CR register. When WUCKSEL[2] = 1, the wake-up timer becomes 17-bits and WUCKSEL[1] effectively becomes WUT[16] the most-significant bit to be reloaded into the timer. The first assertion of WUTF occurs between WUT and (WUT + 2) ck_wut cycles after WUTE is set. Setting WUT[15:0] to 0x0000 with WUCKSEL[2:0] = 011 (RTCCLK/2) is forbidden.
0x40002814 C   FIELD 16w16 WUTOCLR (rw): Wake-up auto-reload output clear value When WUTOCLR[15:0] is different from 0x0000, WUTF is set by hardware when the auto-reload down-counter reaches 0 and is cleared by hardware when the auto-reload downcounter reaches WUTOCLR[15:0]. When WUTOCLR[15:0] = 0x0000, WUTF is set by hardware when the WUT down-counter reaches 0 and is cleared by software.
0x40002818 B  REGISTER CR: RTC control register
0x40002818 C   FIELD 00w03 WUCKSEL (rw): ck_wut wake-up clock selection 10x: ck_spre (usually 11Hz) clock is selected in BCD mode. In binary or mixed mode, this is the clock selected by BCDU. 11x: ck_spre (usually 1 Hz) clock is selected in BCD mode. In binary or mixed mode, this is the clock selected by BCDU. Furthermore, 2<sup>16</sup> is added to the WUT counter value.
0x40002818 C   FIELD 03w01 TSEDGE (rw): Timestamp event active edge TSE must be reset when TSEDGE is changed to avoid unwanted TSF setting.
0x40002818 C   FIELD 04w01 REFCKON (rw): RTC_REFIN reference clock detection enable (50 or 601Hz) Note: BIN must be 0x00 and PREDIV_S must be 0x00FF.
0x40002818 C   FIELD 05w01 BYPSHAD (rw): Bypass the shadow registers Note: If the frequency of the APB clock is less than seven times the frequency of RTCCLK, BYPSHAD must be set to 1.
0x40002818 C   FIELD 06w01 FMT (rw): Hour format
0x40002818 C   FIELD 07w01 SSRUIE (rw): SSR underflow interrupt enable
0x40002818 C   FIELD 08w01 ALRAE (rw): Alarm A enable
0x40002818 C   FIELD 09w01 ALRBE (rw): Alarm B enable
0x40002818 C   FIELD 10w01 WUTE (rw): Wake-up timer enable Note: When the wake-up timer is disabled, wait for WUTWF = 1 before enabling it again.
0x40002818 C   FIELD 11w01 TSE (rw): timestamp enable
0x40002818 C   FIELD 12w01 ALRAIE (rw): Alarm A interrupt enable
0x40002818 C   FIELD 13w01 ALRBIE (rw): Alarm B interrupt enable
0x40002818 C   FIELD 14w01 WUTIE (rw): Wake-up timer interrupt enable
0x40002818 C   FIELD 15w01 TSIE (rw): Timestamp interrupt enable
0x40002818 C   FIELD 16w01 ADD1H (wo): Add 1 hour (summer time change) When this bit is set outside initialization mode, 1 hour is added to the calendar time. This bit is always read as 0.
0x40002818 C   FIELD 17w01 SUB1H (wo): Subtract 1 hour (winter time change) When this bit is set outside initialization mode, 1 hour is subtracted to the calendar time if the current hour is not 0. This bit is always read as 0. Setting this bit has no effect when current hour is 0.
0x40002818 C   FIELD 18w01 BKP (rw): Backup This bit can be written by the user to memorize whether the daylight saving time change has been performed or not.
0x40002818 C   FIELD 19w01 COSEL (rw): Calibration output selection When COE = 1, this bit selects which signal is output on CALIB. These frequencies are valid for RTCCLK at 32.7681kHz and prescalers at their default values (PREDIV_A = 127 and PREDIV_S = 255). Refer to Section128.3.16: Calibration clock output.
0x40002818 C   FIELD 20w01 POL (rw): Output polarity This bit is used to configure the polarity of TAMPALRM output.
0x40002818 C   FIELD 21w02 OSEL (rw): Output selection These bits are used to select the flag to be routed to TAMPALRM output.
0x40002818 C   FIELD 23w01 COE (rw): Calibration output enable This bit enables the CALIB output
0x40002818 C   FIELD 24w01 ITSE (rw): timestamp on internal event enable
0x40002818 C   FIELD 25w01 TAMPTS (rw): Activate timestamp on tamper detection event TAMPTS is valid even if TSE = 0 in the RTC_CR register. Timestamp flag is set up to 3 ck_apre cycles after the tamper flags. Note: TAMPTS must be cleared before entering RTC initialization mode.
0x40002818 C   FIELD 26w01 TAMPOE (rw): Tamper detection output enable on TAMPALRM
0x40002818 C   FIELD 27w01 ALRAFCLR (rw): Alarm A flag automatic clear
0x40002818 C   FIELD 28w01 ALRBFCLR (rw): Alarm B flag automatic clear
0x40002818 C   FIELD 29w01 TAMPALRM_PU (rw): TAMPALRM pull-up enable
0x40002818 C   FIELD 30w01 TAMPALRM_TYPE (rw): TAMPALRM output type
0x40002818 C   FIELD 31w01 OUT2EN (rw): RTC_OUT2 output enable
0x40002824 B  REGISTER WPR: RTC write protection register
0x40002824 C   FIELD 00w08 KEY (wo): Write protection key This byte is written by software. Reading this byte always returns 0x00. Refer to RTC register write protection for a description of how to unlock RTC register write protection.
0x40002828 B  REGISTER CALR: RTC calibration register
0x40002828 C   FIELD 00w09 CALM (rw): Calibration minus The frequency of the calendar is reduced by masking CALM out of 2<sup>20</sup> RTCCLK pulses (321seconds if the input frequency is 327681Hz). This decreases the frequency of the calendar with a resolution of 0.95371ppm. To increase the frequency of the calendar, this feature should be used in conjunction with CALP. See Section128.3.14: RTC smooth digital calibration on page1733.
0x40002828 C   FIELD 12w01 LPCAL (rw): RTC low-power mode
0x40002828 C   FIELD 13w01 CALW16 (rw): Use a 16-second calibration cycle period When CALW16 is set to 1, the 16-second calibration cycle period is selected. This bit must not be set to 1 if CALW8 = 1. Note: CALM[0] is stuck at 0 when CALW16 = 1. Refer to Section128.3.14: RTC smooth digital calibration.
0x40002828 C   FIELD 14w01 CALW8 (rw): Use an 8-second calibration cycle period When CALW8 is set to 1, the 8-second calibration cycle period is selected. Note: CALM[1:0] are stuck at 00 when CALW8 = 1. Refer to Section128.3.14: RTC smooth digital calibration.
0x40002828 C   FIELD 15w01 CALP (rw): Increase frequency of RTC by 488.51ppm.
0x4000282C B  REGISTER SHIFTR: RTC shift control register
0x4000282C C   FIELD 00w15 SUBFS (wo): Subtract a fraction of a second These bits are write only and is always read as zero. Writing to this bit has no effect when a shift operation is pending (when SHPF = 1, in RTC_ICSR). The value which is written to SUBFS is added to the synchronous prescaler counter. Since this counter counts down, this operation effectively subtracts from (delays) the clock by: Delay (seconds) = SUBFS / (PREDIV_S + 1) A fraction of a second can effectively be added to the clock (advancing the clock) when the ADD1S function is used in conjunction with SUBFS, effectively advancing the clock by: Advance (seconds) = (1 - (SUBFS / (PREDIV_S + 1))). In mixed BCD-binary mode (BIN=10 or 11), the SUBFS[14:BCDU+8] must be written with 0. Note: Writing to SUBFS causes RSF to be cleared. Software can then wait until RSF = 1 to be sure that the shadow registers have been updated with the shifted time.
0x4000282C C   FIELD 31w01 ADD1S (wo): Add one second This bit is write only and is always read as zero. Writing to this bit has no effect when a shift operation is pending (when SHPF = 1, in RTC_ICSR). This function is intended to be used with SUBFS (see description below) in order to effectively add a fraction of a second to the clock in an atomic operation.
0x40002830 B  REGISTER TSTR (=TR): RTC timestamp time register
0x40002834 B  REGISTER TSDR (=DR): RTC timestamp date register
0x40002838 B  REGISTER TSSSR (=SSR): RTC timestamp subsecond register
0x40002840 B  REGISTER ALRMAR: Alarm A register
0x40002840 C   FIELD 00w04 SU (rw): Second units in BCD format
0x40002840 C   FIELD 04w03 ST (rw): Second tens in BCD format
0x40002840 C   FIELD 07w01 MSK1 (rw): Alarm seconds mask
0x40002840 C   FIELD 08w04 MNU (rw): Minute units in BCD format
0x40002840 C   FIELD 12w03 MNT (rw): Minute tens in BCD format
0x40002840 C   FIELD 15w01 MSK2 (rw): Alarm minutes mask
0x40002840 C   FIELD 16w04 HU (rw): Hour units in BCD format
0x40002840 C   FIELD 20w02 HT (rw): Hour tens in BCD format
0x40002840 C   FIELD 22w01 PM (rw): AM/PM notation
0x40002840 C   FIELD 23w01 MSK3 (rw): Alarm hours mask
0x40002840 C   FIELD 24w04 DU (rw): Date units or day in BCD format
0x40002840 C   FIELD 28w02 DT (rw): Date tens in BCD format
0x40002840 C   FIELD 30w01 WDSEL (rw): Week day selection
0x40002840 C   FIELD 31w01 MSK4 (rw): Alarm date mask
0x40002844 B  REGISTER ALRMASSR: Alarm A sub-second register
0x40002844 C   FIELD 00w15 SS (rw): Subseconds value This value is compared with the contents of the synchronous prescaler counter to determine if alarm A is to be activated. Only bits 0 up MASKSS-1 are compared. This field is the mirror of SS[14:0] in the RTC_ALRABINR, and so can also be read or written through RTC_ALRABINR.
0x40002844 C   FIELD 24w06 MASKSS (rw): Mask the most-significant bits starting at this bit ... From 32 to 63: All 32 SS bits are compared and must match to activate alarm. Note: In BCD mode (BIN=00) the overflow bits of the synchronous counter (bits 31:15) are never compared. These bits can be different from 0 only after a shift operation.
0x40002844 C   FIELD 31w01 SSCLR (rw): Clear synchronous counter on alarm (Binary mode only) Note: SSCLR must be kept to 0 when BCD or mixed mode is used (BIN = 00, 10 or 11).
0x40002848 B  REGISTER ALRMBR: Alarm B register
0x40002848 C   FIELD 00w04 SU (rw): Second units in BCD format
0x40002848 C   FIELD 04w03 ST (rw): Second tens in BCD format
0x40002848 C   FIELD 07w01 MSK1 (rw): Alarm seconds mask
0x40002848 C   FIELD 08w04 MNU (rw): Minute units in BCD format
0x40002848 C   FIELD 12w03 MNT (rw): Minute tens in BCD format
0x40002848 C   FIELD 15w01 MSK2 (rw): Alarm minutes mask
0x40002848 C   FIELD 16w04 HU (rw): Hour units in BCD format
0x40002848 C   FIELD 20w02 HT (rw): Hour tens in BCD format
0x40002848 C   FIELD 22w01 PM (rw): AM/PM notation
0x40002848 C   FIELD 23w01 MSK3 (rw): Alarm hours mask
0x40002848 C   FIELD 24w04 DU (rw): Date units or day in BCD format
0x40002848 C   FIELD 28w02 DT (rw): Date tens in BCD format
0x40002848 C   FIELD 30w01 WDSEL (rw): Week day selection
0x40002848 C   FIELD 31w01 MSK4 (rw): Alarm date mask
0x4000284C B  REGISTER ALRMBSSR: Alarm B sub-second register
0x4000284C C   FIELD 00w15 SS (rw): Subseconds value This value is compared with the contents of the synchronous prescaler counter to determine if alarm A is to be activated. Only bits 0 up MASKSS-1 are compared. This field is the mirror of SS[14:0] in the RTC_ALRABINR, and so can also be read or written through RTC_ALRABINR.
0x4000284C C   FIELD 24w06 MASKSS (rw): Mask the most-significant bits starting at this bit ... From 32 to 63: All 32 SS bits are compared and must match to activate alarm. Note: In BCD mode (BIN=00) the overflow bits of the synchronous counter (bits 31:15) are never compared. These bits can be different from 0 only after a shift operation.
0x4000284C C   FIELD 31w01 SSCLR (rw): Clear synchronous counter on alarm (Binary mode only) Note: SSCLR must be kept to 0 when BCD or mixed mode is used (BIN = 00, 10 or 11).
0x40002850 B  REGISTER SR: RTC status register
0x40002850 C   FIELD 00w01 ALRAF (ro): Alarm A flag
0x40002850 C   FIELD 01w01 ALRBF (ro): Alarm B flag
0x40002850 C   FIELD 02w01 WUTF (ro): Wake-up timer flag This flag is set by hardware when the wake-up auto-reload counter reaches 0. If WUTOCLR[15:0] is different from 0x0000, WUTF is cleared by hardware when the wake-up auto-reload counter reaches WUTOCLR value. If WUTOCLR[15:0] is 0x0000, WUTF must be cleared by software. This flag must be cleared by software at least 1.5 RTCCLK periods before WUTF is set to 1 again.
0x40002850 C   FIELD 03w01 TSF (ro): Timestamp flag This flag is set by hardware when a timestamp event occurs. If ITSF flag is set, TSF must be cleared together with ITSF. Note: TSF is not set if TAMPTS1=11 and the tamper flag is read during the 3 ck_apre cycles following tamper event. Refer to Timestamp on tamper event for more details.
0x40002850 C   FIELD 04w01 TSOVF (ro): Timestamp overflow flag This flag is set by hardware when a timestamp event occurs while TSF is already set. It is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp event occurs immediately before the TSF bit is cleared.
0x40002850 C   FIELD 05w01 ITSF (ro): Internal timestamp flag This flag is set by hardware when a timestamp on the internal event occurs.
0x40002850 C   FIELD 06w01 SSRUF (ro): SSR underflow flag This flag is set by hardware when the SSR rolls under 0. SSRUF is not set when SSCLR=1.
0x40002854 B  REGISTER MISR: RTC masked interrupt status register
0x40002854 C   FIELD 00w01 ALRAMF (ro): Alarm A masked flag
0x40002854 C   FIELD 01w01 ALRBMF (ro): Alarm B masked flag
0x40002854 C   FIELD 02w01 WUTMF (ro): Wake-up timer masked flag This flag is set by hardware when the wake-up timer interrupt occurs. This flag must be cleared by software at least 1.5 RTCCLK periods before WUTF is set to 1 again.
0x40002854 C   FIELD 03w01 TSMF (ro): Timestamp masked flag This flag is set by hardware when a timestamp interrupt occurs. If ITSF flag is set, TSF must be cleared together with ITSF.
0x40002854 C   FIELD 04w01 TSOVMF (ro): Timestamp overflow masked flag This flag is set by hardware when a timestamp interrupt occurs while TSMF is already set. It is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp event occurs immediately before the TSF bit is cleared.
0x40002854 C   FIELD 05w01 ITSMF (ro): Internal timestamp masked flag This flag is set by hardware when a timestamp on the internal event occurs and timestampinterrupt is raised.
0x40002854 C   FIELD 06w01 SSRUMF (ro): SSR underflow masked flag This flag is set by hardware when the SSR underflow interrupt occurs.
0x4000285C B  REGISTER SCR: RTC status clear register
0x4000285C C   FIELD 00w01 CALRAF (wo): Clear alarm A flag Writing 1 in this bit clears the ALRAF bit in the RTC_SR register.
0x4000285C C   FIELD 01w01 CALRBF (wo): Clear alarm B flag Writing 1 in this bit clears the ALRBF bit in the RTC_SR register.
0x4000285C C   FIELD 02w01 CWUTF (wo): Clear wake-up timer flag Writing 1 in this bit clears the WUTF bit in the RTC_SR register.
0x4000285C C   FIELD 03w01 CTSF (wo): Clear timestamp flag Writing 1 in this bit clears the TSF bit in the RTC_SR register. If ITSF flag is set, TSF must be cleared together with ITSF by setting CRSF and CITSF.
0x4000285C C   FIELD 04w01 CTSOVF (wo): Clear timestamp overflow flag Writing 1 in this bit clears the TSOVF bit in the RTC_SR register. It is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp event occurs immediately before the TSF bit is cleared.
0x4000285C C   FIELD 05w01 CITSF (wo): Clear internal timestamp flag Writing 1 in this bit clears the ITSF bit in the RTC_SR register.
0x4000285C C   FIELD 06w01 CSSRUF (wo): Clear SSR underflow flag Writing 1 in this bit clears the SSRUF in the RTC_SR register.
0x40002870 B  REGISTER ALRABINR: Alarm A binary mode register
0x40002870 C   FIELD 00w32 SS (rw): Synchronous counter alarm value in Binary mode This value is compared with the contents of the synchronous counter to determine if Alarm A is to be activated. Only bits 0 up MASKSS-1 are compared. SS[14:0] is the mirror of SS[14:0] in the RTC_ALRMASSRR, and so can also be read or written through RTC_ALRMASSR.
0x40002874 B  REGISTER ALRBBINR: Alarm B binary mode register
0x40002874 C   FIELD 00w32 SS (rw): Synchronous counter alarm value in Binary mode This value is compared with the contents of the synchronous counter to determine if Alarm A is to be activated. Only bits 0 up MASKSS-1 are compared. SS[14:0] is the mirror of SS[14:0] in the RTC_ALRMASSRR, and so can also be read or written through RTC_ALRMASSR.
0x40002C00 A PERIPHERAL WWDG
0x40002C00 B  REGISTER WWDG_CR: WWDG control register
0x40002C00 C   FIELD 00w07 T (rw): 7-bit counter (MSB to LSB) These bits contain the value of the watchdog counter, decremented every (4096 x 2<sup>WDGTB[2:0]</sup>) PCLK cycles. A reset is produced when it is decremented from 0x40 to 0x3F (T6 becomes cleared).
0x40002C00 C   FIELD 07w01 WDGA (rw): Activation bit This bit is set by software and only cleared by hardware after a reset. When WDGA=1, the watchdog can generate a reset.
0x40002C04 B  REGISTER WWDG_CFR: WWDG configuration register
0x40002C04 C   FIELD 00w07 W (rw): 7-bit window value These bits contain the window value to be compared with the down-counter.
0x40002C04 C   FIELD 09w01 EWI (rw): Early wake-up interrupt enable Set by software and cleared by hardware after a reset. When set, an interrupt occurs whenever the counter reaches the value 0x40.
0x40002C04 C   FIELD 11w03 WDGTB (rw): Timer base The timebase of the prescaler can be modified as follows:
0x40002C08 B  REGISTER WWDG_SR: WWDG status register
0x40002C08 C   FIELD 00w01 EWIF (rw): Early wake-up interrupt flag This bit is set by hardware when the counter has reached the value 0x40. It must be cleared by software by writing 0. Writing 1 has no effect. This bit is also set if the interrupt is not enabled.
0x40003000 A PERIPHERAL IWDG
0x40003000 B  REGISTER IWDG_KR: IWDG key register
0x40003000 C   FIELD 00w16 KEY (wo): Key value (write only, read 0x0000) These bits can be used for several functions, depending upon the value written by the application: - 0xAAAA: reloads the RL[11:0] value into the IWDCNT down-counter (watchdog refresh), and write-protects registers. This value must be written by software at regular intervals, otherwise the watchdog generates a reset when the counter reaches 0. - 0x5555: enables write-accesses to the registers. - 0xCCCC: enables the watchdog (except if the hardware watchdog option is selected) and write-protects registers. - values different from 0x5555: write-protects registers. Note that only IWDG_PR, IWDG_RLR, IWDG_EWCR and IWDG_WINR registers have a write-protection mechanism.
0x40003004 B  REGISTER IWDG_PR: IWDG prescaler register
0x40003004 C   FIELD 00w04 PR (rw): Prescaler divider These bits are write access protected, see Section126.4.6. They are written by software to select the prescaler divider feeding the counter clock. PVU bit of the IWDG status register (IWDG_SR) must be reset to be able to change the prescaler divider. Others: divider / 1024 Note: Reading this register returns the prescaler value from the V<sub>DD</sub> voltage domain. This value may not be up to date/valid if a write operation to this register is ongoing. For this reason the value read from this register is valid only when the PVU bit in the IWDG status register (IWDG_SR) is reset.
0x40003008 B  REGISTER IWDG_RLR: IWDG reload register
0x40003008 C   FIELD 00w12 RL (rw): Watchdog counter reload value These bits are write access protected, see Section126.4.6. They are written by software to define the value to be loaded in the watchdog counter each time the value 0xAAAA is written in the IWDG key register (IWDG_KR). The watchdog counter counts down from this value. The timeout period is a function of this value and the prescaler.clock. It is not recommended to set RL[11:0] to a value lower than 2. The RVU bit in the IWDG status register (IWDG_SR) must be reset to be able to change the reload value. Note: Reading this register returns the reload value from the V<sub>DD</sub> voltage domain. This value may not be up to date/valid if a write operation to this register is ongoing, hence the value read from this register is valid only when the RVU bit in the IWDG status register (IWDG_SR) is reset.
0x4000300C B  REGISTER IWDG_SR: IWDG status register
0x4000300C C   FIELD 00w01 PVU (ro): Watchdog prescaler value update This bit is set by hardware to indicate that an update of the prescaler value is ongoing. It is reset by hardware when the prescaler update operation is completed in the V<sub>DD</sub> voltage domain (takes up to six periods of the IWDG kernel clock iwdg_ker_ck). The prescaler value can be updated only when PVU bit is reset.
0x4000300C C   FIELD 01w01 RVU (ro): Watchdog counter reload value update This bit is set by hardware to indicate that an update of the reload value is ongoing. It is reset by hardware when the reload value update operation is completed in the V<sub>DD</sub> voltage domain (takes up to six periods of the IWDG kernel clock iwdg_ker_ck). The reload value can be updated only when RVU bit is reset.
0x4000300C C   FIELD 02w01 WVU (ro): Watchdog counter window value update This bit is set by hardware to indicate that an update of the window value is ongoing. It is reset by hardware when the reload value update operation is completed in the V<sub>DD</sub> voltage domain (takes up to one period of presc_ck and two periods of the IWDG kernel clock iwdg_ker_ck). The window value can be updated only when WVU bit is reset. This bit is generated only if generic window = 1.
0x4000300C C   FIELD 03w01 EWU (ro): Watchdog interrupt comparator value update This bit is set by hardware to indicate that an update of the interrupt comparator value (EWIT[11:0]) or an update of the EWIE is ongoing. It is reset by hardware when the update operation is completed in the V<sub>DD</sub> voltage domain (takes up to one period of presc_ck and two periods of the IWDG kernel clock iwdg_ker_ck). The EWIT[11:0] and EWIE fields can be updated only when EWU bit is reset.
0x4000300C C   FIELD 08w01 ONF (ro): Watchdog enable status bit Set to 1 by hardware as soon as the IWDG is started. In software mode, it remains to '1' until the IWDG is reset. In hardware mode, this bit is always set to '1'.
0x4000300C C   FIELD 14w01 EWIF (ro): Watchdog early interrupt flag This bit is set to 1 by hardware in order to indicate that an early interrupt is pending. This bit must be cleared by the software by writing the bit EWIC of IWDG_EWCR register to 1.
0x40003010 B  REGISTER IWDG_WINR: IWDG window register
0x40003010 C   FIELD 00w12 WIN (rw): Watchdog counter window value These bits are write access protected, see Section126.4.6.They contain the high limit of the window value to be compared with the downcounter. To prevent a reset, the IWDCNT downcounter must be reloaded when its value is lower than WIN[11:0]1+11 and greater than 1. The WVU bit in the IWDG status register (IWDG_SR) must be reset to be able to change the reload value. Note: Reading this register returns the reload value from the V<sub>DD</sub> voltage domain. This value may not be valid if a write operation to this register is ongoing. For this reason the value read from this register is valid only when the WVU bit in the IWDG status register (IWDG_SR) is reset.
0x40003014 B  REGISTER IWDG_EWCR: IWDG early wake-up interrupt register
0x40003014 C   FIELD 00w12 EWIT (rw): Watchdog counter window value These bits are write access protected (see Section126.4.6). They are written by software to define at which position of the IWDCNT down-counter the early wake-up interrupt must be generated. The early interrupt is generated when the IWDCNT is lower or equal to EWIT[11:0]1-11. EWIT[11:0] must be bigger than 1. An interrupt is generated only if EWIE = 1. The EWU bit in the IWDG status register (IWDG_SR) must be reset to be able to change the reload value. Note: Reading this register returns the Early wake-up comparator value and the Interrupt enable bit from the V<sub>DD</sub> voltage domain. This value may not be up to date/valid if a write operation to this register is ongoing, hence the value read from this register is valid only when the EWU bit in the IWDG status register (IWDG_SR) is reset.
0x40003014 C   FIELD 14w01 EWIC (wo): Watchdog early interrupt acknowledge The software must write a 1 into this bit in order to acknowledge the early wake-up interrupt and to clear the EWIF flag. Writing 0 has not effect, reading this flag returns a 0.
0x40003014 C   FIELD 15w01 EWIE (rw): Watchdog early interrupt enable Set and reset by software. The EWU bit in the IWDG status register (IWDG_SR) must be reset to be able to change the value of this bit.
0x40003800 A PERIPHERAL SPI2
0x40003800 B  REGISTER SPI_CR1: SPI control register 1
0x40003800 C   FIELD 00w01 CPHA (rw): Clock phase Note: This bit should not be changed when communication is ongoing. Note: This bit is not used in SPI TI mode except the case when CRC is applied at TI mode.
0x40003800 C   FIELD 01w01 CPOL (rw): Clock polarity Note: This bit should not be changed when communication is ongoing. Note: This bit is not used in SPI TI mode except the case when CRC is applied at TI mode.
0x40003800 C   FIELD 02w01 MSTR (rw): Master selection Note: This bit should not be changed when communication is ongoing.
0x40003800 C   FIELD 03w03 BR (rw): Baud rate control Note: These bits should not be changed when communication is ongoing.
0x40003800 C   FIELD 06w01 SPE (rw): SPI enable Note: When disabling the SPI, follow the procedure described in Procedure for disabling the SPI on page1954.
0x40003800 C   FIELD 07w01 LSBFIRST (rw): Frame format Note: 1. This bit should not be changed when communication is ongoing. Note: 2. This bit is not used in SPI TI mode.
0x40003800 C   FIELD 08w01 SSI (rw): Internal slave select This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the NSS pin and the I/O value of the NSS pin is ignored. Note: This bit is not used in SPI TI mode.
0x40003800 C   FIELD 09w01 SSM (rw): Software slave management When the SSM bit is set, the NSS pin input is replaced with the value from the SSI bit. Note: This bit is not used in SPI TI mode.
0x40003800 C   FIELD 10w01 RXONLY (rw): Receive only mode enabled. This bit enables simplex communication using a single unidirectional line to receive data exclusively. Keep BIDIMODE bit clear when receive only mode is active.This bit is also useful in a multislave system in which this particular slave is not accessed, the output from the accessed slave is not corrupted.
0x40003800 C   FIELD 11w01 CRCL (rw): CRC length This bit is set and cleared by software to select the CRC length. Note: This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
0x40003800 C   FIELD 12w01 CRCNEXT (rw): Transmit CRC next Note: This bit has to be written as soon as the last data is written in the SPI_DR register.
0x40003800 C   FIELD 13w01 CRCEN (rw): Hardware CRC calculation enable Note: This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
0x40003800 C   FIELD 14w01 BIDIOE (rw): Output enable in bidirectional mode This bit combined with the BIDIMODE bit selects the direction of transfer in bidirectional mode. Note: In master mode, the MOSI pin is used and in slave mode, the MISO pin is used.
0x40003800 C   FIELD 15w01 BIDIMODE (rw): Bidirectional data mode enable. This bit enables half-duplex communication using common single bidirectional data line. Keep RXONLY bit clear when bidirectional mode is active.
0x40003804 B  REGISTER SPI_CR2: SPI control register 2
0x40003804 C   FIELD 00w01 RXDMAEN (rw): Rx buffer DMA enable When this bit is set, a DMA request is generated whenever the RXNE flag is set.
0x40003804 C   FIELD 01w01 TXDMAEN (rw): Tx buffer DMA enable When this bit is set, a DMA request is generated whenever the TXE flag is set.
0x40003804 C   FIELD 02w01 SSOE (rw): SS output enable Note: This bit is not used in SPI TI mode.
0x40003804 C   FIELD 03w01 NSSP (rw): NSS pulse management This bit is used in master mode only. it allows the SPI to generate an NSS pulse between two consecutive data when doing continuous transfers. In the case of a single data transfer, it forces the NSS pin high level after the transfer. It has no meaning if CPHA = 1, or FRF = 1. Note: 1. This bit must be written only when the SPI is disabled (SPE=0). Note: 2. This bit is not used in SPI TI mode.
0x40003804 C   FIELD 04w01 FRF (rw): Frame format 1 SPI TI mode Note: This bit must be written only when the SPI is disabled (SPE=0).
0x40003804 C   FIELD 05w01 ERRIE (rw): Error interrupt enable This bit controls the generation of an interrupt when an error condition occurs (CRCERR, OVR, MODF in SPI mode, FRE at TI mode).
0x40003804 C   FIELD 06w01 RXNEIE (rw): RX buffer not empty interrupt enable
0x40003804 C   FIELD 07w01 TXEIE (rw): Tx buffer empty interrupt enable
0x40003804 C   FIELD 08w04 DS (rw): Data size These bits configure the data length for SPI transfers. If software attempts to write one of the Not used values, they are forced to the value 0111 (8-bit)
0x40003804 C   FIELD 12w01 FRXTH (rw): FIFO reception threshold This bit is used to set the threshold of the RXFIFO that triggers an RXNE event
0x40003804 C   FIELD 13w01 LDMA_RX (rw): Last DMA transfer for reception This bit is used in data packing mode, to define if the total number of data to receive by DMA is odd or even. It has significance only if the RXDMAEN bit in the SPI_CR2 register is set and if packing mode is used (data length =< 8-bit and write access to SPI_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPI_CR1 register). Note: Refer to Procedure for disabling the SPI on page1954 if the CRCEN bit is set.
0x40003804 C   FIELD 14w01 LDMA_TX (rw): Last DMA transfer for transmission This bit is used in data packing mode, to define if the total number of data to transmit by DMA is odd or even. It has significance only if the TXDMAEN bit in the SPI_CR2 register is set and if packing mode is used (data length =< 8-bit and write access to SPI_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPI_CR1 register). Note: Refer to Procedure for disabling the SPI on page1954 if the CRCEN bit is set.
0x40003808 B  REGISTER SPI_SR: SPI status register
0x40003808 C   FIELD 00w01 RXNE (ro): Receive buffer not empty
0x40003808 C   FIELD 01w01 TXE (ro): Transmit buffer empty
0x40003808 C   FIELD 04w01 CRCERR (rw): CRC error flag Note: This flag is set by hardware and cleared by software writing 0.
0x40003808 C   FIELD 05w01 MODF (ro): Mode fault This flag is set by hardware and reset by a software sequence. Refer to Section1: Mode fault (MODF) on page1964 for the software sequence.
0x40003808 C   FIELD 06w01 OVR (ro): Overrun flag This flag is set by hardware and reset by a software sequence.
0x40003808 C   FIELD 07w01 BSY (ro): Busy flag This flag is set and cleared by hardware. Note: The BSY flag must be used with caution: refer to Section133.4.10: SPI status flags and Procedure for disabling the SPI on page1954.
0x40003808 C   FIELD 08w01 FRE (ro): Frame format error This flag is used for SPI in TI slave mode. Refer to Section133.4.11: SPI error flags. This flag is set by hardware and reset when SPI_SR is read by software.
0x40003808 C   FIELD 09w02 FRLVL (ro): FIFO reception level These bits are set and cleared by hardware. Note: These bits are not used in SPI receive-only mode while CRC calculation is enabled.
0x40003808 C   FIELD 11w02 FTLVL (ro): FIFO transmission level These bits are set and cleared by hardware.
0x4000380C B  REGISTER SPI_DR: SPI data register
0x4000380C C   FIELD 00w16 DR (rw): Data register Data received or to be transmitted The data register serves as an interface between the Rx and Tx FIFOs. When the data register is read, RxFIFO is accessed while the write to data register accesses TxFIFO (See Section133.4.9: Data transmission and reception procedures). Note: Data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. The Rx threshold setting must always correspond with the read access currently used.
0x40003810 B  REGISTER SPI_CRCPR: SPI CRC polynomial register
0x40003810 C   FIELD 00w16 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The CRC polynomial (0x0007) is the reset value of this register. Another polynomial can be configured as required.
0x40003814 B  REGISTER SPI_RXCRCR: SPI Rx CRC register
0x40003814 C   FIELD 00w16 RXCRC (ro): Rx CRC register When CRC calculation is enabled, the RXCRC[15:0] bits contain the computed CRC value of the subsequently received bytes. This register is reset when the CRCEN bit in SPI_CR1 register is written to 1. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPR register. Only the 8 LSB bits are considered when the CRC frame format is set to be 8-bit length (CRCL bit in the SPI_CR1 is cleared). CRC calculation is done based on any CRC8 standard. The entire 16-bits of this register are considered when a 16-bit CRC frame format is selected (CRCL bit in the SPI_CR1 register is set). CRC calculation is done based on any CRC16 standard. Note: A read to this register when the BSY Flag is set could return an incorrect value.
0x40003818 B  REGISTER SPI_TXCRCR: SPI Tx CRC register
0x40003818 C   FIELD 00w16 TXCRC (ro): Tx CRC register When CRC calculation is enabled, the TXCRC[7:0] bits contain the computed CRC value of the subsequently transmitted bytes. This register is reset when the CRCEN bit of SPI_CR1 is written to 1. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPR register. Only the 8 LSB bits are considered when the CRC frame format is set to be 8-bit length (CRCL bit in the SPI_CR1 is cleared). CRC calculation is done based on any CRC8 standard. The entire 16-bits of this register are considered when a 16-bit CRC frame format is selected (CRCL bit in the SPI_CR1 register is set). CRC calculation is done based on any CRC16 standard. Note: A read to this register when the BSY flag is set could return an incorrect value.
0x40003C00 A PERIPHERAL SPI3
0x40003C00 B  REGISTER SPI_CR1: SPI control register 1
0x40003C00 C   FIELD 00w01 CPHA (rw): Clock phase Note: This bit should not be changed when communication is ongoing. Note: This bit is not used in SPI TI mode except the case when CRC is applied at TI mode.
0x40003C00 C   FIELD 01w01 CPOL (rw): Clock polarity Note: This bit should not be changed when communication is ongoing. Note: This bit is not used in SPI TI mode except the case when CRC is applied at TI mode.
0x40003C00 C   FIELD 02w01 MSTR (rw): Master selection Note: This bit should not be changed when communication is ongoing.
0x40003C00 C   FIELD 03w03 BR (rw): Baud rate control Note: These bits should not be changed when communication is ongoing.
0x40003C00 C   FIELD 06w01 SPE (rw): SPI enable Note: When disabling the SPI, follow the procedure described in Procedure for disabling the SPI on page1954.
0x40003C00 C   FIELD 07w01 LSBFIRST (rw): Frame format Note: 1. This bit should not be changed when communication is ongoing. Note: 2. This bit is not used in SPI TI mode.
0x40003C00 C   FIELD 08w01 SSI (rw): Internal slave select This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the NSS pin and the I/O value of the NSS pin is ignored. Note: This bit is not used in SPI TI mode.
0x40003C00 C   FIELD 09w01 SSM (rw): Software slave management When the SSM bit is set, the NSS pin input is replaced with the value from the SSI bit. Note: This bit is not used in SPI TI mode.
0x40003C00 C   FIELD 10w01 RXONLY (rw): Receive only mode enabled. This bit enables simplex communication using a single unidirectional line to receive data exclusively. Keep BIDIMODE bit clear when receive only mode is active.This bit is also useful in a multislave system in which this particular slave is not accessed, the output from the accessed slave is not corrupted.
0x40003C00 C   FIELD 11w01 CRCL (rw): CRC length This bit is set and cleared by software to select the CRC length. Note: This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
0x40003C00 C   FIELD 12w01 CRCNEXT (rw): Transmit CRC next Note: This bit has to be written as soon as the last data is written in the SPI_DR register.
0x40003C00 C   FIELD 13w01 CRCEN (rw): Hardware CRC calculation enable Note: This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
0x40003C00 C   FIELD 14w01 BIDIOE (rw): Output enable in bidirectional mode This bit combined with the BIDIMODE bit selects the direction of transfer in bidirectional mode. Note: In master mode, the MOSI pin is used and in slave mode, the MISO pin is used.
0x40003C00 C   FIELD 15w01 BIDIMODE (rw): Bidirectional data mode enable. This bit enables half-duplex communication using common single bidirectional data line. Keep RXONLY bit clear when bidirectional mode is active.
0x40003C04 B  REGISTER SPI_CR2: SPI control register 2
0x40003C04 C   FIELD 00w01 RXDMAEN (rw): Rx buffer DMA enable When this bit is set, a DMA request is generated whenever the RXNE flag is set.
0x40003C04 C   FIELD 01w01 TXDMAEN (rw): Tx buffer DMA enable When this bit is set, a DMA request is generated whenever the TXE flag is set.
0x40003C04 C   FIELD 02w01 SSOE (rw): SS output enable Note: This bit is not used in SPI TI mode.
0x40003C04 C   FIELD 03w01 NSSP (rw): NSS pulse management This bit is used in master mode only. it allows the SPI to generate an NSS pulse between two consecutive data when doing continuous transfers. In the case of a single data transfer, it forces the NSS pin high level after the transfer. It has no meaning if CPHA = 1, or FRF = 1. Note: 1. This bit must be written only when the SPI is disabled (SPE=0). Note: 2. This bit is not used in SPI TI mode.
0x40003C04 C   FIELD 04w01 FRF (rw): Frame format 1 SPI TI mode Note: This bit must be written only when the SPI is disabled (SPE=0).
0x40003C04 C   FIELD 05w01 ERRIE (rw): Error interrupt enable This bit controls the generation of an interrupt when an error condition occurs (CRCERR, OVR, MODF in SPI mode, FRE at TI mode).
0x40003C04 C   FIELD 06w01 RXNEIE (rw): RX buffer not empty interrupt enable
0x40003C04 C   FIELD 07w01 TXEIE (rw): Tx buffer empty interrupt enable
0x40003C04 C   FIELD 08w04 DS (rw): Data size These bits configure the data length for SPI transfers. If software attempts to write one of the Not used values, they are forced to the value 0111 (8-bit)
0x40003C04 C   FIELD 12w01 FRXTH (rw): FIFO reception threshold This bit is used to set the threshold of the RXFIFO that triggers an RXNE event
0x40003C04 C   FIELD 13w01 LDMA_RX (rw): Last DMA transfer for reception This bit is used in data packing mode, to define if the total number of data to receive by DMA is odd or even. It has significance only if the RXDMAEN bit in the SPI_CR2 register is set and if packing mode is used (data length =< 8-bit and write access to SPI_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPI_CR1 register). Note: Refer to Procedure for disabling the SPI on page1954 if the CRCEN bit is set.
0x40003C04 C   FIELD 14w01 LDMA_TX (rw): Last DMA transfer for transmission This bit is used in data packing mode, to define if the total number of data to transmit by DMA is odd or even. It has significance only if the TXDMAEN bit in the SPI_CR2 register is set and if packing mode is used (data length =< 8-bit and write access to SPI_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPI_CR1 register). Note: Refer to Procedure for disabling the SPI on page1954 if the CRCEN bit is set.
0x40003C08 B  REGISTER SPI_SR: SPI status register
0x40003C08 C   FIELD 00w01 RXNE (ro): Receive buffer not empty
0x40003C08 C   FIELD 01w01 TXE (ro): Transmit buffer empty
0x40003C08 C   FIELD 04w01 CRCERR (rw): CRC error flag Note: This flag is set by hardware and cleared by software writing 0.
0x40003C08 C   FIELD 05w01 MODF (ro): Mode fault This flag is set by hardware and reset by a software sequence. Refer to Section1: Mode fault (MODF) on page1964 for the software sequence.
0x40003C08 C   FIELD 06w01 OVR (ro): Overrun flag This flag is set by hardware and reset by a software sequence.
0x40003C08 C   FIELD 07w01 BSY (ro): Busy flag This flag is set and cleared by hardware. Note: The BSY flag must be used with caution: refer to Section133.4.10: SPI status flags and Procedure for disabling the SPI on page1954.
0x40003C08 C   FIELD 08w01 FRE (ro): Frame format error This flag is used for SPI in TI slave mode. Refer to Section133.4.11: SPI error flags. This flag is set by hardware and reset when SPI_SR is read by software.
0x40003C08 C   FIELD 09w02 FRLVL (ro): FIFO reception level These bits are set and cleared by hardware. Note: These bits are not used in SPI receive-only mode while CRC calculation is enabled.
0x40003C08 C   FIELD 11w02 FTLVL (ro): FIFO transmission level These bits are set and cleared by hardware.
0x40003C0C B  REGISTER SPI_DR: SPI data register
0x40003C0C C   FIELD 00w16 DR (rw): Data register Data received or to be transmitted The data register serves as an interface between the Rx and Tx FIFOs. When the data register is read, RxFIFO is accessed while the write to data register accesses TxFIFO (See Section133.4.9: Data transmission and reception procedures). Note: Data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. The Rx threshold setting must always correspond with the read access currently used.
0x40003C10 B  REGISTER SPI_CRCPR: SPI CRC polynomial register
0x40003C10 C   FIELD 00w16 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The CRC polynomial (0x0007) is the reset value of this register. Another polynomial can be configured as required.
0x40003C14 B  REGISTER SPI_RXCRCR: SPI Rx CRC register
0x40003C14 C   FIELD 00w16 RXCRC (ro): Rx CRC register When CRC calculation is enabled, the RXCRC[15:0] bits contain the computed CRC value of the subsequently received bytes. This register is reset when the CRCEN bit in SPI_CR1 register is written to 1. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPR register. Only the 8 LSB bits are considered when the CRC frame format is set to be 8-bit length (CRCL bit in the SPI_CR1 is cleared). CRC calculation is done based on any CRC8 standard. The entire 16-bits of this register are considered when a 16-bit CRC frame format is selected (CRCL bit in the SPI_CR1 register is set). CRC calculation is done based on any CRC16 standard. Note: A read to this register when the BSY Flag is set could return an incorrect value.
0x40003C18 B  REGISTER SPI_TXCRCR: SPI Tx CRC register
0x40003C18 C   FIELD 00w16 TXCRC (ro): Tx CRC register When CRC calculation is enabled, the TXCRC[7:0] bits contain the computed CRC value of the subsequently transmitted bytes. This register is reset when the CRCEN bit of SPI_CR1 is written to 1. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPR register. Only the 8 LSB bits are considered when the CRC frame format is set to be 8-bit length (CRCL bit in the SPI_CR1 is cleared). CRC calculation is done based on any CRC8 standard. The entire 16-bits of this register are considered when a 16-bit CRC frame format is selected (CRCL bit in the SPI_CR1 register is set). CRC calculation is done based on any CRC16 standard. Note: A read to this register when the BSY flag is set could return an incorrect value.
0x40004400 A PERIPHERAL USART2
0x40004400 B  REGISTER USART_CR1: USART control register 1
0x40004400 B  REGISTER USART_CR1_ALTERNATE: USART control register 1
0x40004400 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. Note: In Smartcard mode, (SCEN = 1), the CK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004400 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. Note: In Smartcard mode, (SCEN = 1), the CK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004400 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40004400 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40004400 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004400 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004400 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004400 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004400 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40004400 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40004400 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UE=0).
0x40004400 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UE=0).
0x40004400 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UE=0).
0x40004400 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UE=0).
0x40004400 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the USART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004400 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the USART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004400 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UE=0).
0x40004400 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UE=0).
0x40004400 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004400 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004400 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UE=0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004400 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UE=0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004400 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004400 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004400 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004400 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004400 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004400 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004400 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004400 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004400 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UE=0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004400 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UE=0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004400 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0). Note: FIFO mode can be used on standard UART communication, in SPI Master/Slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004400 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0). Note: FIFO mode can be used on standard UART communication, in SPI Master/Slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004400 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40004400 C   FIELD 31w01 RXFFIE (rw): None
0x40004404 B  REGISTER USART_CR2: USART control register 2
0x40004404 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the Synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UE=0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40004404 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UE=0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the CK pin in Synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the CK pin in Synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see Figure1233 and Figure1234) This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the CK pin in Synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the CK pin. This bit can only be written when the USART is disabled (UE=0). Note: If neither Synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826. In Smartcard mode, in order to provide correctly the CK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 Note: UE = 1
0x40004404 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UE=0).
0x40004404 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004404 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UE=0).
0x40004404 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UE=0).
0x40004404 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004404 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004404 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UE=0). Note: If DATAINV=1 and/or MSBFIRST=1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004404 C   FIELD 24w08 ADD (rw): Address of the USART node These bits give the address of the USART node in Mute mode or a character code to be recognized in low-power or Run mode: In Mute mode: they are used in multiprocessor communication to wake up from Mute mode with 4-bit/7-bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1. In 4-bit address mark detection, only ADD[3:0] bits are used. In low-power mode: they are used for wake up from low-power mode on character match. When WUS[1:0] is programmed to 0b00 (WUF active on address match), the wake-up from low-power mode is performed when the received character corresponds to the character programmed through ADD[6:0] or ADD[3:0] bitfield (depending on ADDM7 bit), and WUF interrupt is enabled by setting WUFIE bit. The MSB of the character sent by transmitter should be equal to 1. In Run mode with Mute mode inactive (for example, end-of-block detection in ModBus protocol): the whole received character (8 bits) is compared to ADD[7:0] value and CMF flag is set on match. An interrupt is generated if the CMIE bit is set. These bits can only be written when the reception is disabled (RE1=10) or when the USART is disabled (UE1=10).
0x40004408 B  REGISTER USART_CR3: USART control register 3
0x40004408 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FE=1 or ORE=1 or NE=1or UDR = 1 in the USART_ISR register).
0x40004408 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UE=0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UE=0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UE=0).
0x40004408 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40004408 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40004408 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UE=0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UE=0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UE=0).
0x40004408 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data are written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UE=0). Note: This control bit enables checking the communication flow w/o reading the data
0x40004408 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40004408 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In Transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In Reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UE=0). When the USART is enabled (UE=1), this bitfield may only be written to 0x0, in order to stop retransmission. 0x1 to 0x7: number of automatic retransmission attempts (before signaling error) Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 20w01 WUS0 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (wake-up from low-power mode flag). This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 21w01 WUS1 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (wake-up from low-power mode flag). This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 22w01 WUFIE (rw): Wake-up from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004408 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004408 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40004408 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004408 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x4000440C B  REGISTER USART_BRR: USART baud rate register
0x4000440C C   FIELD 00w16 BRR (rw): USART baud rate BRR[15:4] BRR[15:4] correspond to USARTDIV[15:4] BRR[3:0] When OVER8 = 0, BRR[3:0] = USARTDIV[3:0]. When OVER8 = 1: BRR[2:0] = USARTDIV[3:0] shifted 1 bit to the right. BRR[3] must be kept cleared.
0x40004410 B  REGISTER USART_GTPR: USART guard time and prescaler register
0x40004410 C   FIELD 00w08 PSC (rw): Prescaler value PSC[7:0] = IrDA Normal and Low-power baud rate This bitfield is used for programming the prescaler for dividing the USART source clock to achieve the low-power frequency: The source clock is divided by the value given in the register (8 significant bits): ... PSC[4:0]: Prescaler value This bitfield is used for programming the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... This bitfield can only be written when the USART is disabled (UE=0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. Note: This bitfield is reserved and forced by hardware to 0 when the Smartcard and IrDA modes are not supported. Refer to Section131.4: USART implementation on page1826.
0x40004410 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UE=0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004414 B  REGISTER USART_RTOR: USART receiver timeout register
0x40004414 C   FIELD 00w24 RTO (rw): Receiver timeout value This bitfield gives the Receiver timeout value in terms of number of bit duration. In Standard mode, the RTOF flag is set if, after the last received character, no new start bit is detected for more than the RTO value. In Smartcard mode, this value is used to implement the CWT and BWT. See Smartcard chapter for more details. In the standard, the CWT/BWT measurement is done starting from the start bit of the last received character. Note: This value must only be programmed once per received character.
0x40004414 C   FIELD 24w08 BLEN (rw): Block Length This bitfield gives the Block length in Smartcard T=1 Reception. Its value equals the number of information characters + the length of the Epilogue Field (1-LEC/2-CRC) - 1. Examples: BLEN = 0 -> 0 information characters + LEC BLEN = 1 -> 0 information characters + CRC BLEN = 255 -> 254 information characters + CRC (total 256 characters)) In Smartcard mode, the Block length counter is reset when TXE=0 (TXFE = 0 in case FIFO mode is enabled). This bitfield can be used also in other modes. In this case, the Block length counter is reset when RE=0 (receiver disabled) and/or when the EOBCF bit is written to 1. Note: This value can be programmed after the start of the block reception (using the data from the LEN character in the Prologue Field). It must be programmed only once per received block.
0x40004418 B  REGISTER USART_RQR: USART request register
0x40004418 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF and ABRE flags in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004418 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software must wait for the TXE flag assertion before setting the SBKRQ bit.
0x40004418 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40004418 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40004418 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing 1 to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4000441C B  REGISTER USART_ISR: USART interrupt and status register
0x4000441C B  REGISTER USART_ISR_ALTERNATE: USART interrupt and status register
0x4000441C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the USART_CR3 register. Note: This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the USART_CR3 register. Note: This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NFCF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Section131.5.9: Tolerance of the USART receiver to clock deviation on page1845). Note: This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NFCF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Section131.5.9: Tolerance of the USART receiver to clock deviation on page1845). Note: This error is associated with the character in the USART_RDR.
0x4000441C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIE=1 in the USART_CR1 register, or EIE = 1 in the USART_CR3 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000441C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNE=1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIE=1 in the USART_CR1 register, or EIE = 1 in the USART_CR3 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000441C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the USART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4000441C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the USART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4000441C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIE=1 in the USART_CR1 register.
0x4000441C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIE=1 in the USART_CR1 register.
0x4000441C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag behaves as follows: When TDN = 0, the TC flag is set when the transmission of a frame containing data is complete and when TXE/TXFE is set. When TDN is equal to the number of data in the TXFIFO, the TC flag is set when TXFIFO is empty and TDN is reached. When TDN is greater than the number of data in the TXFIFO, TC remains cleared until the TXFIFO is filled again to reach the programmed number of data to be transferred. When TDN is less than the number of data in the TXFIFO, TC is set when TDN is reached even if the TXFIFO is not empty. An interrupt is generated if TCIE=1 in the USART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x4000441C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag is set when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIE=1 in the USART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x4000441C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard T=0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit =1 in the USART_CR1 register.
0x4000441C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF must be checked prior to writing in TXFIFO (TXFNF and TXFE is set at the same time). Note: This bit is used during single buffer transmission.
0x4000441C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIE=1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIE=1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIE=1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. Note: The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIE=1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. Note: The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example T=1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if EOBIE1=11 in the USART_CR1 register. It is cleared by software, writing 1 to EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example T=1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if EOBIE1=11 in the USART_CR1 register. It is cleared by software, writing 1 to EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In Slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In Slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABRE=1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABRE=1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000441C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000441C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000441C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIE=1in the USART_CR1 register.
0x4000441C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIE=1in the USART_CR1 register.
0x4000441C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000441C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000441C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIE=1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIE=1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the USART_CR1 register, in order to respect the TE=0 minimum period.
0x4000441C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the USART_CR1 register, in order to respect the TE=0 minimum period.
0x4000441C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 23w01 TXFE (ro): TXFIFO Empty This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit =1 (bit 30) in the USART_CR1 register.
0x4000441C C   FIELD 24w01 RXFF (ro): RXFIFO Full This bit is set by hardware when the number of received data corresponds to RXFIFO1size1+11 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit =1 in the USART_CR1 register.
0x4000441C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIE=1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is 1. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIE=1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is 1. Refer to Section131.4: USART implementation on page1826.
0x4000441C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit =1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to 101, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x4000441C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit =1 (bit 31) in the USART_CR3 register.
0x40004420 B  REGISTER USART_ICR: USART interrupt flag clear register
0x40004420 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40004420 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40004420 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40004420 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40004420 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40004420 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40004420 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40004420 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40004420 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004420 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004420 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004420 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004420 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826
0x40004420 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40004420 C   FIELD 20w01 WUCF (wo): Wake-up from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004424 B  REGISTER USART_RDR: USART receive data register
0x40004424 C   FIELD 00w09 RDR (ro): Receive data value Contains the received data character. The RDR register provides the parallel interface between the input shift register and the internal bus (see Figure1227). When receiving with the parity enabled, the value read in the MSB bit is the received parity bit.
0x40004428 B  REGISTER USART_TDR: USART transmit data register
0x40004428 C   FIELD 00w09 TDR (rw): Transmit data value Contains the data character to be transmitted. The USART_TDR register provides the parallel interface between the internal bus and the output shift register (see Figure1227). When transmitting with the parity enabled (PCE bit set to 1 in the USART_CR1 register), the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect because it is replaced by the parity. Note: This register must be written only when TXE/TXFNF=1.
0x4000442C B  REGISTER USART_PRESC: USART prescaler register
0x4000442C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is equal to 1011 i.e. input clock divided by 256.
0x40004800 A PERIPHERAL USART3
0x40004800 B  REGISTER USART_CR1: USART control register 1
0x40004800 B  REGISTER USART_CR1_ALTERNATE: USART control register 1
0x40004800 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. Note: In Smartcard mode, (SCEN = 1), the CK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004800 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. Note: In Smartcard mode, (SCEN = 1), the CK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004800 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40004800 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40004800 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004800 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004800 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004800 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004800 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40004800 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40004800 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UE=0).
0x40004800 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UE=0).
0x40004800 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UE=0).
0x40004800 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UE=0).
0x40004800 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the USART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004800 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the USART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004800 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UE=0).
0x40004800 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UE=0).
0x40004800 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004800 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004800 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UE=0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004800 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UE=0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004800 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004800 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004800 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004800 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004800 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004800 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004800 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004800 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004800 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UE=0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004800 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UE=0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004800 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0). Note: FIFO mode can be used on standard UART communication, in SPI Master/Slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004800 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0). Note: FIFO mode can be used on standard UART communication, in SPI Master/Slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004800 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40004800 C   FIELD 31w01 RXFFIE (rw): None
0x40004804 B  REGISTER USART_CR2: USART control register 2
0x40004804 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the Synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UE=0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40004804 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UE=0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the CK pin in Synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the CK pin in Synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see Figure1233 and Figure1234) This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the CK pin in Synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the CK pin. This bit can only be written when the USART is disabled (UE=0). Note: If neither Synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826. In Smartcard mode, in order to provide correctly the CK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 Note: UE = 1
0x40004804 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UE=0).
0x40004804 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004804 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UE=0).
0x40004804 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UE=0).
0x40004804 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004804 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004804 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UE=0). Note: If DATAINV=1 and/or MSBFIRST=1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004804 C   FIELD 24w08 ADD (rw): Address of the USART node These bits give the address of the USART node in Mute mode or a character code to be recognized in low-power or Run mode: In Mute mode: they are used in multiprocessor communication to wake up from Mute mode with 4-bit/7-bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1. In 4-bit address mark detection, only ADD[3:0] bits are used. In low-power mode: they are used for wake up from low-power mode on character match. When WUS[1:0] is programmed to 0b00 (WUF active on address match), the wake-up from low-power mode is performed when the received character corresponds to the character programmed through ADD[6:0] or ADD[3:0] bitfield (depending on ADDM7 bit), and WUF interrupt is enabled by setting WUFIE bit. The MSB of the character sent by transmitter should be equal to 1. In Run mode with Mute mode inactive (for example, end-of-block detection in ModBus protocol): the whole received character (8 bits) is compared to ADD[7:0] value and CMF flag is set on match. An interrupt is generated if the CMIE bit is set. These bits can only be written when the reception is disabled (RE1=10) or when the USART is disabled (UE1=10).
0x40004808 B  REGISTER USART_CR3: USART control register 3
0x40004808 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FE=1 or ORE=1 or NE=1or UDR = 1 in the USART_ISR register).
0x40004808 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UE=0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UE=0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UE=0).
0x40004808 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40004808 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40004808 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UE=0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UE=0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UE=0).
0x40004808 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data are written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UE=0). Note: This control bit enables checking the communication flow w/o reading the data
0x40004808 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40004808 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In Transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In Reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UE=0). When the USART is enabled (UE=1), this bitfield may only be written to 0x0, in order to stop retransmission. 0x1 to 0x7: number of automatic retransmission attempts (before signaling error) Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 20w01 WUS0 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (wake-up from low-power mode flag). This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 21w01 WUS1 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (wake-up from low-power mode flag). This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 22w01 WUFIE (rw): Wake-up from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004808 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004808 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40004808 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004808 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x4000480C B  REGISTER USART_BRR: USART baud rate register
0x4000480C C   FIELD 00w16 BRR (rw): USART baud rate BRR[15:4] BRR[15:4] correspond to USARTDIV[15:4] BRR[3:0] When OVER8 = 0, BRR[3:0] = USARTDIV[3:0]. When OVER8 = 1: BRR[2:0] = USARTDIV[3:0] shifted 1 bit to the right. BRR[3] must be kept cleared.
0x40004810 B  REGISTER USART_GTPR: USART guard time and prescaler register
0x40004810 C   FIELD 00w08 PSC (rw): Prescaler value PSC[7:0] = IrDA Normal and Low-power baud rate This bitfield is used for programming the prescaler for dividing the USART source clock to achieve the low-power frequency: The source clock is divided by the value given in the register (8 significant bits): ... PSC[4:0]: Prescaler value This bitfield is used for programming the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... This bitfield can only be written when the USART is disabled (UE=0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. Note: This bitfield is reserved and forced by hardware to 0 when the Smartcard and IrDA modes are not supported. Refer to Section131.4: USART implementation on page1826.
0x40004810 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UE=0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004814 B  REGISTER USART_RTOR: USART receiver timeout register
0x40004814 C   FIELD 00w24 RTO (rw): Receiver timeout value This bitfield gives the Receiver timeout value in terms of number of bit duration. In Standard mode, the RTOF flag is set if, after the last received character, no new start bit is detected for more than the RTO value. In Smartcard mode, this value is used to implement the CWT and BWT. See Smartcard chapter for more details. In the standard, the CWT/BWT measurement is done starting from the start bit of the last received character. Note: This value must only be programmed once per received character.
0x40004814 C   FIELD 24w08 BLEN (rw): Block Length This bitfield gives the Block length in Smartcard T=1 Reception. Its value equals the number of information characters + the length of the Epilogue Field (1-LEC/2-CRC) - 1. Examples: BLEN = 0 -> 0 information characters + LEC BLEN = 1 -> 0 information characters + CRC BLEN = 255 -> 254 information characters + CRC (total 256 characters)) In Smartcard mode, the Block length counter is reset when TXE=0 (TXFE = 0 in case FIFO mode is enabled). This bitfield can be used also in other modes. In this case, the Block length counter is reset when RE=0 (receiver disabled) and/or when the EOBCF bit is written to 1. Note: This value can be programmed after the start of the block reception (using the data from the LEN character in the Prologue Field). It must be programmed only once per received block.
0x40004818 B  REGISTER USART_RQR: USART request register
0x40004818 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF and ABRE flags in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004818 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software must wait for the TXE flag assertion before setting the SBKRQ bit.
0x40004818 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40004818 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40004818 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing 1 to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4000481C B  REGISTER USART_ISR: USART interrupt and status register
0x4000481C B  REGISTER USART_ISR_ALTERNATE: USART interrupt and status register
0x4000481C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the USART_CR3 register. Note: This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the USART_CR3 register. Note: This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NFCF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Section131.5.9: Tolerance of the USART receiver to clock deviation on page1845). Note: This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NFCF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Section131.5.9: Tolerance of the USART receiver to clock deviation on page1845). Note: This error is associated with the character in the USART_RDR.
0x4000481C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIE=1 in the USART_CR1 register, or EIE = 1 in the USART_CR3 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000481C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNE=1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIE=1 in the USART_CR1 register, or EIE = 1 in the USART_CR3 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4000481C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the USART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4000481C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the USART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4000481C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIE=1 in the USART_CR1 register.
0x4000481C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIE=1 in the USART_CR1 register.
0x4000481C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag behaves as follows: When TDN = 0, the TC flag is set when the transmission of a frame containing data is complete and when TXE/TXFE is set. When TDN is equal to the number of data in the TXFIFO, the TC flag is set when TXFIFO is empty and TDN is reached. When TDN is greater than the number of data in the TXFIFO, TC remains cleared until the TXFIFO is filled again to reach the programmed number of data to be transferred. When TDN is less than the number of data in the TXFIFO, TC is set when TDN is reached even if the TXFIFO is not empty. An interrupt is generated if TCIE=1 in the USART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x4000481C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag is set when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIE=1 in the USART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x4000481C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard T=0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit =1 in the USART_CR1 register.
0x4000481C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF must be checked prior to writing in TXFIFO (TXFNF and TXFE is set at the same time). Note: This bit is used during single buffer transmission.
0x4000481C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIE=1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIE=1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIE=1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. Note: The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIE=1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. Note: The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example T=1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if EOBIE1=11 in the USART_CR1 register. It is cleared by software, writing 1 to EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example T=1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if EOBIE1=11 in the USART_CR1 register. It is cleared by software, writing 1 to EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In Slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In Slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABRE=1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABRE=1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4000481C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000481C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000481C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIE=1in the USART_CR1 register.
0x4000481C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIE=1in the USART_CR1 register.
0x4000481C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000481C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000481C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIE=1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIE=1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the USART_CR1 register, in order to respect the TE=0 minimum period.
0x4000481C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the USART_CR1 register, in order to respect the TE=0 minimum period.
0x4000481C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 23w01 TXFE (ro): TXFIFO Empty This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit =1 (bit 30) in the USART_CR1 register.
0x4000481C C   FIELD 24w01 RXFF (ro): RXFIFO Full This bit is set by hardware when the number of received data corresponds to RXFIFO1size1+11 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit =1 in the USART_CR1 register.
0x4000481C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIE=1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is 1. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIE=1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is 1. Refer to Section131.4: USART implementation on page1826.
0x4000481C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit =1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to 101, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x4000481C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit =1 (bit 31) in the USART_CR3 register.
0x40004820 B  REGISTER USART_ICR: USART interrupt flag clear register
0x40004820 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40004820 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40004820 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40004820 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40004820 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40004820 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40004820 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40004820 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40004820 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004820 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004820 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004820 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004820 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826
0x40004820 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40004820 C   FIELD 20w01 WUCF (wo): Wake-up from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004824 B  REGISTER USART_RDR: USART receive data register
0x40004824 C   FIELD 00w09 RDR (ro): Receive data value Contains the received data character. The RDR register provides the parallel interface between the input shift register and the internal bus (see Figure1227). When receiving with the parity enabled, the value read in the MSB bit is the received parity bit.
0x40004828 B  REGISTER USART_TDR: USART transmit data register
0x40004828 C   FIELD 00w09 TDR (rw): Transmit data value Contains the data character to be transmitted. The USART_TDR register provides the parallel interface between the internal bus and the output shift register (see Figure1227). When transmitting with the parity enabled (PCE bit set to 1 in the USART_CR1 register), the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect because it is replaced by the parity. Note: This register must be written only when TXE/TXFNF=1.
0x4000482C B  REGISTER USART_PRESC: USART prescaler register
0x4000482C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is equal to 1011 i.e. input clock divided by 256.
0x40004C00 A PERIPHERAL USART4
0x40004C00 B  REGISTER USART_CR1: USART control register 1
0x40004C00 B  REGISTER USART_CR1_ALTERNATE: USART control register 1
0x40004C00 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. Note: In Smartcard mode, (SCEN = 1), the CK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004C00 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. Note: In Smartcard mode, (SCEN = 1), the CK is always available when CLKEN = 1, regardless of the UE bit value.
0x40004C00 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40004C00 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40004C00 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004C00 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40004C00 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004C00 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40004C00 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40004C00 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40004C00 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C00 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C00 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UE=0).
0x40004C00 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UE=0).
0x40004C00 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the USART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C00 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the USART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C00 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UE=0).
0x40004C00 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UE=0).
0x40004C00 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004C00 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40004C00 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UE=0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004C00 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UE=0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40004C00 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C00 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C00 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C00 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C00 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004C00 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004C00 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C00 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C00 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UE=0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004C00 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UE=0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40004C00 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0). Note: FIFO mode can be used on standard UART communication, in SPI Master/Slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004C00 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0). Note: FIFO mode can be used on standard UART communication, in SPI Master/Slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40004C00 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40004C00 C   FIELD 31w01 RXFFIE (rw): None
0x40004C04 B  REGISTER USART_CR2: USART control register 2
0x40004C04 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the Synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UE=0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40004C04 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UE=0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the CK pin in Synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the CK pin in Synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see Figure1233 and Figure1234) This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the CK pin in Synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the CK pin. This bit can only be written when the USART is disabled (UE=0). Note: If neither Synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826. In Smartcard mode, in order to provide correctly the CK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 Note: UE = 1
0x40004C04 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C04 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C04 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C04 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C04 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C04 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40004C04 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UE=0). Note: If DATAINV=1 and/or MSBFIRST=1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C04 C   FIELD 24w08 ADD (rw): Address of the USART node These bits give the address of the USART node in Mute mode or a character code to be recognized in low-power or Run mode: In Mute mode: they are used in multiprocessor communication to wake up from Mute mode with 4-bit/7-bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1. In 4-bit address mark detection, only ADD[3:0] bits are used. In low-power mode: they are used for wake up from low-power mode on character match. When WUS[1:0] is programmed to 0b00 (WUF active on address match), the wake-up from low-power mode is performed when the received character corresponds to the character programmed through ADD[6:0] or ADD[3:0] bitfield (depending on ADDM7 bit), and WUF interrupt is enabled by setting WUFIE bit. The MSB of the character sent by transmitter should be equal to 1. In Run mode with Mute mode inactive (for example, end-of-block detection in ModBus protocol): the whole received character (8 bits) is compared to ADD[7:0] value and CMF flag is set on match. An interrupt is generated if the CMIE bit is set. These bits can only be written when the reception is disabled (RE1=10) or when the USART is disabled (UE1=10).
0x40004C08 B  REGISTER USART_CR3: USART control register 3
0x40004C08 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FE=1 or ORE=1 or NE=1or UDR = 1 in the USART_ISR register).
0x40004C08 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UE=0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UE=0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UE=0).
0x40004C08 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40004C08 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40004C08 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UE=0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UE=0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UE=0).
0x40004C08 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data are written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UE=0). Note: This control bit enables checking the communication flow w/o reading the data
0x40004C08 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40004C08 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In Transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In Reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UE=0). When the USART is enabled (UE=1), this bitfield may only be written to 0x0, in order to stop retransmission. 0x1 to 0x7: number of automatic retransmission attempts (before signaling error) Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 20w01 WUS0 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (wake-up from low-power mode flag). This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 21w01 WUS1 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (wake-up from low-power mode flag). This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 22w01 WUFIE (rw): Wake-up from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004C08 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C08 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40004C08 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40004C08 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x40004C0C B  REGISTER USART_BRR: USART baud rate register
0x40004C0C C   FIELD 00w16 BRR (rw): USART baud rate BRR[15:4] BRR[15:4] correspond to USARTDIV[15:4] BRR[3:0] When OVER8 = 0, BRR[3:0] = USARTDIV[3:0]. When OVER8 = 1: BRR[2:0] = USARTDIV[3:0] shifted 1 bit to the right. BRR[3] must be kept cleared.
0x40004C10 B  REGISTER USART_GTPR: USART guard time and prescaler register
0x40004C10 C   FIELD 00w08 PSC (rw): Prescaler value PSC[7:0] = IrDA Normal and Low-power baud rate This bitfield is used for programming the prescaler for dividing the USART source clock to achieve the low-power frequency: The source clock is divided by the value given in the register (8 significant bits): ... PSC[4:0]: Prescaler value This bitfield is used for programming the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... This bitfield can only be written when the USART is disabled (UE=0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. Note: This bitfield is reserved and forced by hardware to 0 when the Smartcard and IrDA modes are not supported. Refer to Section131.4: USART implementation on page1826.
0x40004C10 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UE=0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C14 B  REGISTER USART_RTOR: USART receiver timeout register
0x40004C14 C   FIELD 00w24 RTO (rw): Receiver timeout value This bitfield gives the Receiver timeout value in terms of number of bit duration. In Standard mode, the RTOF flag is set if, after the last received character, no new start bit is detected for more than the RTO value. In Smartcard mode, this value is used to implement the CWT and BWT. See Smartcard chapter for more details. In the standard, the CWT/BWT measurement is done starting from the start bit of the last received character. Note: This value must only be programmed once per received character.
0x40004C14 C   FIELD 24w08 BLEN (rw): Block Length This bitfield gives the Block length in Smartcard T=1 Reception. Its value equals the number of information characters + the length of the Epilogue Field (1-LEC/2-CRC) - 1. Examples: BLEN = 0 -> 0 information characters + LEC BLEN = 1 -> 0 information characters + CRC BLEN = 255 -> 254 information characters + CRC (total 256 characters)) In Smartcard mode, the Block length counter is reset when TXE=0 (TXFE = 0 in case FIFO mode is enabled). This bitfield can be used also in other modes. In this case, the Block length counter is reset when RE=0 (receiver disabled) and/or when the EOBCF bit is written to 1. Note: This value can be programmed after the start of the block reception (using the data from the LEN character in the Prologue Field). It must be programmed only once per received block.
0x40004C18 B  REGISTER USART_RQR: USART request register
0x40004C18 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF and ABRE flags in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C18 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software must wait for the TXE flag assertion before setting the SBKRQ bit.
0x40004C18 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40004C18 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40004C18 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing 1 to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x40004C1C B  REGISTER USART_ISR: USART interrupt and status register
0x40004C1C B  REGISTER USART_ISR_ALTERNATE: USART interrupt and status register
0x40004C1C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the USART_CR3 register. Note: This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the USART_CR3 register. Note: This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NFCF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Section131.5.9: Tolerance of the USART receiver to clock deviation on page1845). Note: This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NFCF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Section131.5.9: Tolerance of the USART receiver to clock deviation on page1845). Note: This error is associated with the character in the USART_RDR.
0x40004C1C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIE=1 in the USART_CR1 register, or EIE = 1 in the USART_CR3 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x40004C1C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNE=1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIE=1 in the USART_CR1 register, or EIE = 1 in the USART_CR3 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x40004C1C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the USART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x40004C1C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the USART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x40004C1C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIE=1 in the USART_CR1 register.
0x40004C1C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIE=1 in the USART_CR1 register.
0x40004C1C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag behaves as follows: When TDN = 0, the TC flag is set when the transmission of a frame containing data is complete and when TXE/TXFE is set. When TDN is equal to the number of data in the TXFIFO, the TC flag is set when TXFIFO is empty and TDN is reached. When TDN is greater than the number of data in the TXFIFO, TC remains cleared until the TXFIFO is filled again to reach the programmed number of data to be transferred. When TDN is less than the number of data in the TXFIFO, TC is set when TDN is reached even if the TXFIFO is not empty. An interrupt is generated if TCIE=1 in the USART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x40004C1C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag is set when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIE=1 in the USART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x40004C1C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard T=0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit =1 in the USART_CR1 register.
0x40004C1C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF must be checked prior to writing in TXFIFO (TXFNF and TXFE is set at the same time). Note: This bit is used during single buffer transmission.
0x40004C1C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIE=1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIE=1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIE=1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. Note: The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIE=1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. Note: The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example T=1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if EOBIE1=11 in the USART_CR1 register. It is cleared by software, writing 1 to EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example T=1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if EOBIE1=11 in the USART_CR1 register. It is cleared by software, writing 1 to EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In Slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In Slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABRE=1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABRE=1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x40004C1C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x40004C1C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x40004C1C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIE=1in the USART_CR1 register.
0x40004C1C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIE=1in the USART_CR1 register.
0x40004C1C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x40004C1C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x40004C1C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIE=1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIE=1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the USART_CR1 register, in order to respect the TE=0 minimum period.
0x40004C1C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the USART_CR1 register, in order to respect the TE=0 minimum period.
0x40004C1C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 23w01 TXFE (ro): TXFIFO Empty This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit =1 (bit 30) in the USART_CR1 register.
0x40004C1C C   FIELD 24w01 RXFF (ro): RXFIFO Full This bit is set by hardware when the number of received data corresponds to RXFIFO1size1+11 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit =1 in the USART_CR1 register.
0x40004C1C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIE=1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is 1. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIE=1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is 1. Refer to Section131.4: USART implementation on page1826.
0x40004C1C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit =1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to 101, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x40004C1C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit =1 (bit 31) in the USART_CR3 register.
0x40004C20 B  REGISTER USART_ICR: USART interrupt flag clear register
0x40004C20 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40004C20 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40004C20 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40004C20 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40004C20 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40004C20 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40004C20 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40004C20 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40004C20 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C20 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C20 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C20 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C20 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826
0x40004C20 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40004C20 C   FIELD 20w01 WUCF (wo): Wake-up from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40004C24 B  REGISTER USART_RDR: USART receive data register
0x40004C24 C   FIELD 00w09 RDR (ro): Receive data value Contains the received data character. The RDR register provides the parallel interface between the input shift register and the internal bus (see Figure1227). When receiving with the parity enabled, the value read in the MSB bit is the received parity bit.
0x40004C28 B  REGISTER USART_TDR: USART transmit data register
0x40004C28 C   FIELD 00w09 TDR (rw): Transmit data value Contains the data character to be transmitted. The USART_TDR register provides the parallel interface between the internal bus and the output shift register (see Figure1227). When transmitting with the parity enabled (PCE bit set to 1 in the USART_CR1 register), the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect because it is replaced by the parity. Note: This register must be written only when TXE/TXFNF=1.
0x40004C2C B  REGISTER USART_PRESC: USART prescaler register
0x40004C2C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is equal to 1011 i.e. input clock divided by 256.
0x40005400 A PERIPHERAL I2C1
0x40005400 B  REGISTER I2C_CR1: I2C control register 1
0x40005400 C   FIELD 00w01 PE (rw): Peripheral enable Note: When PE = 0, the I2C SCL and SDA lines are released. Internal state machines and status bits are put back to their reset value. When cleared, PE must be kept low for at least three APB clock cycles.
0x40005400 C   FIELD 01w01 TXIE (rw): TX interrupt enable
0x40005400 C   FIELD 02w01 RXIE (rw): RX interrupt enable
0x40005400 C   FIELD 03w01 ADDRIE (rw): Address match interrupt enable (slave only)
0x40005400 C   FIELD 04w01 NACKIE (rw): Not acknowledge received interrupt enable
0x40005400 C   FIELD 05w01 STOPIE (rw): Stop detection interrupt enable
0x40005400 C   FIELD 06w01 TCIE (rw): Transfer complete interrupt enable Note: Any of these events generate an interrupt: Note: Transfer complete (TC) Note: Transfer complete reload (TCR)
0x40005400 C   FIELD 07w01 ERRIE (rw): Error interrupts enable Note: Any of these errors generate an interrupt: Note: Arbitration loss (ARLO) Note: Bus error detection (BERR) Note: Overrun/Underrun (OVR)
0x40005400 C   FIELD 08w04 DNF (rw): Digital noise filter These bits are used to configure the digital noise filter on SDA and SCL input. The digital filter, filters spikes with a length of up to DNF[3:0] * t<sub>I2CCLK</sub> <sub>...</sub> Note: If the analog filter is enabled, the digital filter is added to it. This filter can be programmed only when the I2C is disabled (PE = 0).
0x40005400 C   FIELD 12w01 ANFOFF (rw): Analog noise filter OFF Note: This bit can be programmed only when the I2C is disabled (PE = 0).
0x40005400 C   FIELD 14w01 TXDMAEN (rw): DMA transmission requests enable
0x40005400 C   FIELD 15w01 RXDMAEN (rw): DMA reception requests enable
0x40005400 C   FIELD 16w01 SBC (rw): Slave byte control This bit is used to enable hardware byte control in slave mode.
0x40005400 C   FIELD 17w01 NOSTRETCH (rw): Clock stretching disable This bit is used to disable clock stretching in slave mode. It must be kept cleared in master mode. Note: This bit can be programmed only when the I2C is disabled (PE = 0).
0x40005400 C   FIELD 18w01 WUPEN (rw): Wake-up from Stop mode enable
0x40005400 C   FIELD 19w01 GCEN (rw): General call enable
0x40005400 C   FIELD 24w01 FMP (rw): Fast-mode Plus 20 mA drive enable
0x40005400 C   FIELD 30w01 ADDRACLR (rw): Address match flag (ADDR) automatic clear
0x40005400 C   FIELD 31w01 STOPFACLR (rw): STOP detection flag (STOPF) automatic clear
0x40005404 B  REGISTER I2C_CR2: I2C control register 2
0x40005404 C   FIELD 00w10 SADD (rw): Slave address (master mode) In 7-bit addressing mode (ADD10 = 0): SADD[7:1] must be written with the 7-bit slave address to be sent. Bits SADD[9], SADD[8] and SADD[0] are don't care. In 10-bit addressing mode (ADD10 = 1): SADD[9:0] must be written with the 10-bit slave address to be sent. Note: Changing these bits when the START bit is set is not allowed.
0x40005404 C   FIELD 10w01 RD_WRN (rw): Transfer direction (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005404 C   FIELD 11w01 ADD10 (rw): 10-bit addressing mode (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005404 C   FIELD 12w01 HEAD10R (rw): 10-bit address header only read direction (master receiver mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005404 C   FIELD 13w01 START (rw): Start generation This bit is set by software, and cleared by hardware after the Start followed by the address sequence is sent, by an arbitration loss, by an address matched in slave mode, by a timeout error detection, or when PE = 0. If the I2C is already in master mode with AUTOEND = 0, setting this bit generates a Repeated start condition when RELOAD = 0, after the end of the NBYTES transfer. Otherwise, setting this bit generates a START condition once the bus is free. Note: Writing 0 to this bit has no effect. Note: The START bit can be set even if the bus is BUSY or I2C is in slave mode. Note: This bit has no effect when RELOAD is set.
0x40005404 C   FIELD 14w01 STOP (rw): Stop generation (master mode) The bit is set by software, cleared by hardware when a STOP condition is detected, or when PE = 0. In master mode: Note: Writing 0 to this bit has no effect.
0x40005404 C   FIELD 15w01 NACK (rw): NACK generation (slave mode) The bit is set by software, cleared by hardware when the NACK is sent, or when a STOP condition or an Address matched is received, or when PE = 0. Note: Writing 0 to this bit has no effect. Note: This bit is used in slave mode only: in master receiver mode, NACK is automatically generated after last byte preceding STOP or RESTART condition, whatever the NACK bit value. Note: When an overrun occurs in slave receiver NOSTRETCH mode, a NACK is automatically generated, whatever the NACK bit value. Note: When hardware PEC checking is enabled (PECBYTE = 1), the PEC acknowledge value does not depend on the NACK value.
0x40005404 C   FIELD 16w08 NBYTES (rw): Number of bytes
0x40005404 C   FIELD 24w01 RELOAD (rw): NBYTES reload mode This bit is set and cleared by software.
0x40005404 C   FIELD 25w01 AUTOEND (rw): Automatic end mode (master mode) This bit is set and cleared by software. Note: This bit has no effect in slave mode or when the RELOAD bit is set.
0x40005408 B  REGISTER I2C_OAR1: I2C own address 1 register
0x40005408 C   FIELD 00w10 OA1 (rw): Interface own slave address 7-bit addressing mode: OA1[7:1] contains the 7-bit own slave address. Bits OA1[9], OA1[8] and OA1[0] are don't care. 10-bit addressing mode: OA1[9:0] contains the 10-bit own slave address. Note: These bits can be written only when OA1EN = 0.
0x40005408 C   FIELD 10w01 OA1MODE (rw): Own address 1 10-bit mode Note: This bit can be written only when OA1EN = 0.
0x40005408 C   FIELD 15w01 OA1EN (rw): Own address 1 enable
0x4000540C B  REGISTER I2C_OAR2: I2C own address 2 register
0x4000540C C   FIELD 01w07 OA2 (rw): Interface address 7-bit addressing mode: 7-bit address Note: These bits can be written only when OA2EN = 0.
0x4000540C C   FIELD 08w03 OA2MSK (rw): Own address 2 masks Note: These bits can be written only when OA2EN = 0. Note: As soon as OA2MSK is not equal to 0, the reserved I2C addresses (0b0000xxx and 0b1111xxx) are not acknowledged even if the comparison matches.
0x4000540C C   FIELD 15w01 OA2EN (rw): Own address 2 enable
0x40005410 B  REGISTER I2C_TIMINGR: I2C timing register
0x40005410 C   FIELD 00w08 SCLL (rw): SCL low period (master mode) This field is used to generate the SCL low period in master mode. t<sub>SCLL </sub>= (SCLL + 1) x t<sub>PRESC</sub> Note: SCLL is also used to generate t<sub>BUF </sub>and t<sub>SU:STA </sub>timings.
0x40005410 C   FIELD 08w08 SCLH (rw): SCL high period (master mode) This field is used to generate the SCL high period in master mode. t<sub>SCLH </sub>= (SCLH + 1) x t<sub>PRESC</sub> Note: SCLH is also used to generate t<sub>SU:STO </sub>and t<sub>HD:STA </sub>timing.
0x40005410 C   FIELD 16w04 SDADEL (rw): Data hold time This field is used to generate the delay t<sub>SDADEL </sub>between SCL falling edge and SDA edge. In master and in slave modes with NOSTRETCH = 0, the SCL line is stretched low during t<sub>SDADEL</sub>. t<sub>SDADEL</sub>= SDADEL x t<sub>PRESC</sub> Note: SDADEL is used to generate t<sub>HD:DAT </sub>timing.
0x40005410 C   FIELD 20w04 SCLDEL (rw): Data setup time This field is used to generate a delay t<sub>SCLDEL </sub>between SDA edge and SCL rising edge. In master and in slave modes with NOSTRETCH = 0, the SCL line is stretched low during t<sub>SCLDEL</sub>. t<sub>SCLDEL </sub>= (SCLDEL + 1) x t<sub>PRESC</sub> Note: t<sub>SCLDEL</sub> is used to generate t<sub>SU:DAT </sub>timing.
0x40005410 C   FIELD 28w04 PRESC (rw): Timing prescaler This field is used to prescale I2CCLK to generate the clock period t<sub>PRESC </sub>used for data setup and hold counters (refer to I2C timings) and for SCL high and low level counters (refer to I2C master initialization). t<sub>PRESC </sub>= (PRESC + 1) x t<sub>I2CCLK</sub>
0x40005414 B  REGISTER I2C_TIMEOUTR: I2C timeout register
0x40005414 C   FIELD 00w12 TIMEOUTA (rw): Bus timeout A This field is used to configure: The SCL low timeout condition t<sub>TIMEOUT</sub> when TIDLE = 0 t<sub>TIMEOUT</sub>= (TIMEOUTA + 1) x 2048 x t<sub>I2CCLK</sub> The bus idle condition (both SCL and SDA high) when TIDLE = 1 t<sub>IDLE</sub>= (TIMEOUTA + 1) x 4 x t<sub>I2CCLK</sub> Note: These bits can be written only when TIMOUTEN = 0.
0x40005414 C   FIELD 12w01 TIDLE (rw): Idle clock timeout detection Note: This bit can be written only when TIMOUTEN = 0.
0x40005414 C   FIELD 15w01 TIMOUTEN (rw): Clock timeout enable
0x40005414 C   FIELD 16w12 TIMEOUTB (rw): Bus timeout B This field is used to configure the cumulative clock extension timeout: In master mode, the master cumulative clock low extend time (t<sub>LOW:MEXT</sub>) is detected In slave mode, the slave cumulative clock low extend time (t<sub>LOW:SEXT</sub>) is detected t<sub>LOW:EXT </sub>= (TIMEOUTB + TIDLE = 01) x 2048 x t<sub>I2CCLK</sub> Note: These bits can be written only when TEXTEN = 0.
0x40005414 C   FIELD 31w01 TEXTEN (rw): Extended clock timeout enable
0x40005418 B  REGISTER I2C_ISR: I2C interrupt and status register
0x40005418 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters) This bit is set by hardware when the I2C_TXDR register is empty. It is cleared when the next data to be sent is written in the I2C_TXDR register. This bit can be written to 1 by software in order to flush the transmit data register I2C_TXDR. Note: This bit is set by hardware when PE = 0.
0x40005418 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters) This bit is set by hardware when the I2C_TXDR register is empty and the data to be transmitted must be written in the I2C_TXDR register. It is cleared when the next data to be sent is written in the I2C_TXDR register. This bit can be written to 1 by software only when NOSTRETCH = 1, to generate a TXIS event (interrupt if TXIE = 1 or DMA request if TXDMAEN = 1). Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers) This bit is set by hardware when the received data is copied into the I2C_RXDR register, and is ready to be read. It is cleared when I2C_RXDR is read. Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 03w01 ADDR (ro): Address matched (slave mode) This bit is set by hardware as soon as the received slave address matched with one of the enabled slave addresses. It is cleared by software by setting ADDRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 04w01 NACKF (ro): Not Acknowledge received flag This flag is set by hardware when a NACK is received after a byte transmission. It is cleared by software by setting the NACKCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 05w01 STOPF (ro): Stop detection flag This flag is set by hardware when a STOP condition is detected on the bus and the peripheral is involved in this transfer: either as a master, provided that the STOP condition is generated by the peripheral. or as a slave, provided that the peripheral has been addressed previously during this transfer. It is cleared by software by setting the STOPCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 06w01 TC (ro): Transfer Complete (master mode) This flag is set by hardware when RELOAD = 0, AUTOEND = 0 and NBYTES data have been transferred. It is cleared by software when START bit or STOP bit is set. Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 07w01 TCR (ro): Transfer Complete Reload This flag is set by hardware when RELOAD = 1 and NBYTES data have been transferred. It is cleared by software when NBYTES is written to a non-zero value. Note: This bit is cleared by hardware when PE = 0. Note: This flag is only for master mode, or for slave mode when the SBC bit is set.
0x40005418 C   FIELD 08w01 BERR (ro): Bus error This flag is set by hardware when a misplaced Start or STOP condition is detected whereas the peripheral is involved in the transfer. The flag is not set during the address phase in slave mode. It is cleared by software by setting BERRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 09w01 ARLO (ro): Arbitration lost This flag is set by hardware in case of arbitration loss. It is cleared by software by setting the ARLOCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode) This flag is set by hardware in slave mode with NOSTRETCH = 1, when an overrun/underrun error occurs. It is cleared by software by setting the OVRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005418 C   FIELD 15w01 BUSY (ro): Bus busy This flag indicates that a communication is in progress on the bus. It is set by hardware when a START condition is detected, and cleared by hardware when a STOP condition is detected, or when PE = 0.
0x40005418 C   FIELD 16w01 DIR (ro): Transfer direction (slave mode) This flag is updated when an address match event occurs (ADDR = 1).
0x40005418 C   FIELD 17w07 ADDCODE (ro): Address match code (slave mode) These bits are updated with the received address when an address match event occurs (ADDR = 1). In the case of a 10-bit address, ADDCODE provides the 10-bit header followed by the two MSBs of the address.
0x4000541C B  REGISTER I2C_ICR: I2C interrupt clear register
0x4000541C C   FIELD 03w01 ADDRCF (wo): Address matched flag clear Writing 1 to this bit clears the ADDR flag in the I2C_ISR register. Writing 1 to this bit also clears the START bit in the I2C_CR2 register.
0x4000541C C   FIELD 04w01 NACKCF (wo): Not Acknowledge flag clear Writing 1 to this bit clears the NACKF flag in I2C_ISR register.
0x4000541C C   FIELD 05w01 STOPCF (wo): STOP detection flag clear Writing 1 to this bit clears the STOPF flag in the I2C_ISR register.
0x4000541C C   FIELD 08w01 BERRCF (wo): Bus error flag clear Writing 1 to this bit clears the BERRF flag in the I2C_ISR register.
0x4000541C C   FIELD 09w01 ARLOCF (wo): Arbitration lost flag clear Writing 1 to this bit clears the ARLO flag in the I2C_ISR register.
0x4000541C C   FIELD 10w01 OVRCF (wo): Overrun/Underrun flag clear Writing 1 to this bit clears the OVR flag in the I2C_ISR register.
0x40005420 B  REGISTER I2C_PECR: I2C PEC register
0x40005420 C   FIELD 00w08 PEC (ro): Packet error checking register This field contains the internal PEC when PECEN=1. The PEC is cleared by hardware when PE = 0.
0x40005424 B  REGISTER I2C_RXDR: I2C receive data register
0x40005424 C   FIELD 00w08 RXDATA (ro): 8-bit receive data Data byte received from the I<sup>2</sup>C bus
0x40005428 B  REGISTER I2C_TXDR: I2C transmit data register
0x40005428 C   FIELD 00w08 TXDATA (rw): 8-bit transmit data Data byte to be transmitted to the I<sup>2</sup>C bus Note: These bits can be written only when TXE = 1.
0x40005800 A PERIPHERAL I2C2
0x40005800 B  REGISTER I2C_CR1: I2C control register 1
0x40005800 C   FIELD 00w01 PE (rw): Peripheral enable Note: When PE = 0, the I2C SCL and SDA lines are released. Internal state machines and status bits are put back to their reset value. When cleared, PE must be kept low for at least three APB clock cycles.
0x40005800 C   FIELD 01w01 TXIE (rw): TX interrupt enable
0x40005800 C   FIELD 02w01 RXIE (rw): RX interrupt enable
0x40005800 C   FIELD 03w01 ADDRIE (rw): Address match interrupt enable (slave only)
0x40005800 C   FIELD 04w01 NACKIE (rw): Not acknowledge received interrupt enable
0x40005800 C   FIELD 05w01 STOPIE (rw): Stop detection interrupt enable
0x40005800 C   FIELD 06w01 TCIE (rw): Transfer complete interrupt enable Note: Any of these events generate an interrupt: Note: Transfer complete (TC) Note: Transfer complete reload (TCR)
0x40005800 C   FIELD 07w01 ERRIE (rw): Error interrupts enable Note: Any of these errors generate an interrupt: Note: Arbitration loss (ARLO) Note: Bus error detection (BERR) Note: Overrun/Underrun (OVR)
0x40005800 C   FIELD 08w04 DNF (rw): Digital noise filter These bits are used to configure the digital noise filter on SDA and SCL input. The digital filter, filters spikes with a length of up to DNF[3:0] * t<sub>I2CCLK</sub> <sub>...</sub> Note: If the analog filter is enabled, the digital filter is added to it. This filter can be programmed only when the I2C is disabled (PE = 0).
0x40005800 C   FIELD 12w01 ANFOFF (rw): Analog noise filter OFF Note: This bit can be programmed only when the I2C is disabled (PE = 0).
0x40005800 C   FIELD 14w01 TXDMAEN (rw): DMA transmission requests enable
0x40005800 C   FIELD 15w01 RXDMAEN (rw): DMA reception requests enable
0x40005800 C   FIELD 16w01 SBC (rw): Slave byte control This bit is used to enable hardware byte control in slave mode.
0x40005800 C   FIELD 17w01 NOSTRETCH (rw): Clock stretching disable This bit is used to disable clock stretching in slave mode. It must be kept cleared in master mode. Note: This bit can be programmed only when the I2C is disabled (PE = 0).
0x40005800 C   FIELD 18w01 WUPEN (rw): Wake-up from Stop mode enable
0x40005800 C   FIELD 19w01 GCEN (rw): General call enable
0x40005800 C   FIELD 24w01 FMP (rw): Fast-mode Plus 20 mA drive enable
0x40005800 C   FIELD 30w01 ADDRACLR (rw): Address match flag (ADDR) automatic clear
0x40005800 C   FIELD 31w01 STOPFACLR (rw): STOP detection flag (STOPF) automatic clear
0x40005804 B  REGISTER I2C_CR2: I2C control register 2
0x40005804 C   FIELD 00w10 SADD (rw): Slave address (master mode) In 7-bit addressing mode (ADD10 = 0): SADD[7:1] must be written with the 7-bit slave address to be sent. Bits SADD[9], SADD[8] and SADD[0] are don't care. In 10-bit addressing mode (ADD10 = 1): SADD[9:0] must be written with the 10-bit slave address to be sent. Note: Changing these bits when the START bit is set is not allowed.
0x40005804 C   FIELD 10w01 RD_WRN (rw): Transfer direction (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005804 C   FIELD 11w01 ADD10 (rw): 10-bit addressing mode (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005804 C   FIELD 12w01 HEAD10R (rw): 10-bit address header only read direction (master receiver mode) Note: Changing this bit when the START bit is set is not allowed.
0x40005804 C   FIELD 13w01 START (rw): Start generation This bit is set by software, and cleared by hardware after the Start followed by the address sequence is sent, by an arbitration loss, by an address matched in slave mode, by a timeout error detection, or when PE = 0. If the I2C is already in master mode with AUTOEND = 0, setting this bit generates a Repeated start condition when RELOAD = 0, after the end of the NBYTES transfer. Otherwise, setting this bit generates a START condition once the bus is free. Note: Writing 0 to this bit has no effect. Note: The START bit can be set even if the bus is BUSY or I2C is in slave mode. Note: This bit has no effect when RELOAD is set.
0x40005804 C   FIELD 14w01 STOP (rw): Stop generation (master mode) The bit is set by software, cleared by hardware when a STOP condition is detected, or when PE = 0. In master mode: Note: Writing 0 to this bit has no effect.
0x40005804 C   FIELD 15w01 NACK (rw): NACK generation (slave mode) The bit is set by software, cleared by hardware when the NACK is sent, or when a STOP condition or an Address matched is received, or when PE = 0. Note: Writing 0 to this bit has no effect. Note: This bit is used in slave mode only: in master receiver mode, NACK is automatically generated after last byte preceding STOP or RESTART condition, whatever the NACK bit value. Note: When an overrun occurs in slave receiver NOSTRETCH mode, a NACK is automatically generated, whatever the NACK bit value. Note: When hardware PEC checking is enabled (PECBYTE = 1), the PEC acknowledge value does not depend on the NACK value.
0x40005804 C   FIELD 16w08 NBYTES (rw): Number of bytes
0x40005804 C   FIELD 24w01 RELOAD (rw): NBYTES reload mode This bit is set and cleared by software.
0x40005804 C   FIELD 25w01 AUTOEND (rw): Automatic end mode (master mode) This bit is set and cleared by software. Note: This bit has no effect in slave mode or when the RELOAD bit is set.
0x40005808 B  REGISTER I2C_OAR1: I2C own address 1 register
0x40005808 C   FIELD 00w10 OA1 (rw): Interface own slave address 7-bit addressing mode: OA1[7:1] contains the 7-bit own slave address. Bits OA1[9], OA1[8] and OA1[0] are don't care. 10-bit addressing mode: OA1[9:0] contains the 10-bit own slave address. Note: These bits can be written only when OA1EN = 0.
0x40005808 C   FIELD 10w01 OA1MODE (rw): Own address 1 10-bit mode Note: This bit can be written only when OA1EN = 0.
0x40005808 C   FIELD 15w01 OA1EN (rw): Own address 1 enable
0x4000580C B  REGISTER I2C_OAR2: I2C own address 2 register
0x4000580C C   FIELD 01w07 OA2 (rw): Interface address 7-bit addressing mode: 7-bit address Note: These bits can be written only when OA2EN = 0.
0x4000580C C   FIELD 08w03 OA2MSK (rw): Own address 2 masks Note: These bits can be written only when OA2EN = 0. Note: As soon as OA2MSK is not equal to 0, the reserved I2C addresses (0b0000xxx and 0b1111xxx) are not acknowledged even if the comparison matches.
0x4000580C C   FIELD 15w01 OA2EN (rw): Own address 2 enable
0x40005810 B  REGISTER I2C_TIMINGR: I2C timing register
0x40005810 C   FIELD 00w08 SCLL (rw): SCL low period (master mode) This field is used to generate the SCL low period in master mode. t<sub>SCLL </sub>= (SCLL + 1) x t<sub>PRESC</sub> Note: SCLL is also used to generate t<sub>BUF </sub>and t<sub>SU:STA </sub>timings.
0x40005810 C   FIELD 08w08 SCLH (rw): SCL high period (master mode) This field is used to generate the SCL high period in master mode. t<sub>SCLH </sub>= (SCLH + 1) x t<sub>PRESC</sub> Note: SCLH is also used to generate t<sub>SU:STO </sub>and t<sub>HD:STA </sub>timing.
0x40005810 C   FIELD 16w04 SDADEL (rw): Data hold time This field is used to generate the delay t<sub>SDADEL </sub>between SCL falling edge and SDA edge. In master and in slave modes with NOSTRETCH = 0, the SCL line is stretched low during t<sub>SDADEL</sub>. t<sub>SDADEL</sub>= SDADEL x t<sub>PRESC</sub> Note: SDADEL is used to generate t<sub>HD:DAT </sub>timing.
0x40005810 C   FIELD 20w04 SCLDEL (rw): Data setup time This field is used to generate a delay t<sub>SCLDEL </sub>between SDA edge and SCL rising edge. In master and in slave modes with NOSTRETCH = 0, the SCL line is stretched low during t<sub>SCLDEL</sub>. t<sub>SCLDEL </sub>= (SCLDEL + 1) x t<sub>PRESC</sub> Note: t<sub>SCLDEL</sub> is used to generate t<sub>SU:DAT </sub>timing.
0x40005810 C   FIELD 28w04 PRESC (rw): Timing prescaler This field is used to prescale I2CCLK to generate the clock period t<sub>PRESC </sub>used for data setup and hold counters (refer to I2C timings) and for SCL high and low level counters (refer to I2C master initialization). t<sub>PRESC </sub>= (PRESC + 1) x t<sub>I2CCLK</sub>
0x40005814 B  REGISTER I2C_TIMEOUTR: I2C timeout register
0x40005814 C   FIELD 00w12 TIMEOUTA (rw): Bus timeout A This field is used to configure: The SCL low timeout condition t<sub>TIMEOUT</sub> when TIDLE = 0 t<sub>TIMEOUT</sub>= (TIMEOUTA + 1) x 2048 x t<sub>I2CCLK</sub> The bus idle condition (both SCL and SDA high) when TIDLE = 1 t<sub>IDLE</sub>= (TIMEOUTA + 1) x 4 x t<sub>I2CCLK</sub> Note: These bits can be written only when TIMOUTEN = 0.
0x40005814 C   FIELD 12w01 TIDLE (rw): Idle clock timeout detection Note: This bit can be written only when TIMOUTEN = 0.
0x40005814 C   FIELD 15w01 TIMOUTEN (rw): Clock timeout enable
0x40005814 C   FIELD 16w12 TIMEOUTB (rw): Bus timeout B This field is used to configure the cumulative clock extension timeout: In master mode, the master cumulative clock low extend time (t<sub>LOW:MEXT</sub>) is detected In slave mode, the slave cumulative clock low extend time (t<sub>LOW:SEXT</sub>) is detected t<sub>LOW:EXT </sub>= (TIMEOUTB + TIDLE = 01) x 2048 x t<sub>I2CCLK</sub> Note: These bits can be written only when TEXTEN = 0.
0x40005814 C   FIELD 31w01 TEXTEN (rw): Extended clock timeout enable
0x40005818 B  REGISTER I2C_ISR: I2C interrupt and status register
0x40005818 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters) This bit is set by hardware when the I2C_TXDR register is empty. It is cleared when the next data to be sent is written in the I2C_TXDR register. This bit can be written to 1 by software in order to flush the transmit data register I2C_TXDR. Note: This bit is set by hardware when PE = 0.
0x40005818 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters) This bit is set by hardware when the I2C_TXDR register is empty and the data to be transmitted must be written in the I2C_TXDR register. It is cleared when the next data to be sent is written in the I2C_TXDR register. This bit can be written to 1 by software only when NOSTRETCH = 1, to generate a TXIS event (interrupt if TXIE = 1 or DMA request if TXDMAEN = 1). Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers) This bit is set by hardware when the received data is copied into the I2C_RXDR register, and is ready to be read. It is cleared when I2C_RXDR is read. Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 03w01 ADDR (ro): Address matched (slave mode) This bit is set by hardware as soon as the received slave address matched with one of the enabled slave addresses. It is cleared by software by setting ADDRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 04w01 NACKF (ro): Not Acknowledge received flag This flag is set by hardware when a NACK is received after a byte transmission. It is cleared by software by setting the NACKCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 05w01 STOPF (ro): Stop detection flag This flag is set by hardware when a STOP condition is detected on the bus and the peripheral is involved in this transfer: either as a master, provided that the STOP condition is generated by the peripheral. or as a slave, provided that the peripheral has been addressed previously during this transfer. It is cleared by software by setting the STOPCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 06w01 TC (ro): Transfer Complete (master mode) This flag is set by hardware when RELOAD = 0, AUTOEND = 0 and NBYTES data have been transferred. It is cleared by software when START bit or STOP bit is set. Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 07w01 TCR (ro): Transfer Complete Reload This flag is set by hardware when RELOAD = 1 and NBYTES data have been transferred. It is cleared by software when NBYTES is written to a non-zero value. Note: This bit is cleared by hardware when PE = 0. Note: This flag is only for master mode, or for slave mode when the SBC bit is set.
0x40005818 C   FIELD 08w01 BERR (ro): Bus error This flag is set by hardware when a misplaced Start or STOP condition is detected whereas the peripheral is involved in the transfer. The flag is not set during the address phase in slave mode. It is cleared by software by setting BERRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 09w01 ARLO (ro): Arbitration lost This flag is set by hardware in case of arbitration loss. It is cleared by software by setting the ARLOCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode) This flag is set by hardware in slave mode with NOSTRETCH = 1, when an overrun/underrun error occurs. It is cleared by software by setting the OVRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40005818 C   FIELD 15w01 BUSY (ro): Bus busy This flag indicates that a communication is in progress on the bus. It is set by hardware when a START condition is detected, and cleared by hardware when a STOP condition is detected, or when PE = 0.
0x40005818 C   FIELD 16w01 DIR (ro): Transfer direction (slave mode) This flag is updated when an address match event occurs (ADDR = 1).
0x40005818 C   FIELD 17w07 ADDCODE (ro): Address match code (slave mode) These bits are updated with the received address when an address match event occurs (ADDR = 1). In the case of a 10-bit address, ADDCODE provides the 10-bit header followed by the two MSBs of the address.
0x4000581C B  REGISTER I2C_ICR: I2C interrupt clear register
0x4000581C C   FIELD 03w01 ADDRCF (wo): Address matched flag clear Writing 1 to this bit clears the ADDR flag in the I2C_ISR register. Writing 1 to this bit also clears the START bit in the I2C_CR2 register.
0x4000581C C   FIELD 04w01 NACKCF (wo): Not Acknowledge flag clear Writing 1 to this bit clears the NACKF flag in I2C_ISR register.
0x4000581C C   FIELD 05w01 STOPCF (wo): STOP detection flag clear Writing 1 to this bit clears the STOPF flag in the I2C_ISR register.
0x4000581C C   FIELD 08w01 BERRCF (wo): Bus error flag clear Writing 1 to this bit clears the BERRF flag in the I2C_ISR register.
0x4000581C C   FIELD 09w01 ARLOCF (wo): Arbitration lost flag clear Writing 1 to this bit clears the ARLO flag in the I2C_ISR register.
0x4000581C C   FIELD 10w01 OVRCF (wo): Overrun/Underrun flag clear Writing 1 to this bit clears the OVR flag in the I2C_ISR register.
0x40005820 B  REGISTER I2C_PECR: I2C PEC register
0x40005820 C   FIELD 00w08 PEC (ro): Packet error checking register This field contains the internal PEC when PECEN=1. The PEC is cleared by hardware when PE = 0.
0x40005824 B  REGISTER I2C_RXDR: I2C receive data register
0x40005824 C   FIELD 00w08 RXDATA (ro): 8-bit receive data Data byte received from the I<sup>2</sup>C bus
0x40005828 B  REGISTER I2C_TXDR: I2C transmit data register
0x40005828 C   FIELD 00w08 TXDATA (rw): 8-bit transmit data Data byte to be transmitted to the I<sup>2</sup>C bus Note: These bits can be written only when TXE = 1.
0x40005C00 A PERIPHERAL USB
0x40005C00 B  REGISTER USB_CHEP0R: USB endpoint/channel 0 register
0x40005C00 C   FIELD 00w04 EA (rw): endpoint/channel address Device mode Software must write in this field the 4-bit address used to identify the transactions directed to this endpoint. A value must be written before enabling the corresponding endpoint. Host mode Software must write in this field the 4-bit address used to identify the channel addressed by the host transaction.
0x40005C00 C   FIELD 04w02 STATTX (wo): Status bits, for transmission transfers
0x40005C00 C   FIELD 06w01 DTOGTX (wo): Data toggle, for transmission transfers If the endpoint/channel is non-isochronous, this bit contains the required value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be transmitted. Hardware toggles this bit when the ACK handshake is received from the USB host, following a data packet transmission. If the endpoint/channel is defined as a control one, hardware sets this bit to 1 at the reception of a SETUP PID addressed to this endpoint (in device mode) or when a SETUP transaction is acknowledged by the device (in host mode). If the endpoint/channel is using the double buffer feature, this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used to support packet buffer swapping since no data toggling is used for this sort of endpoints and only DATA0 packet are transmitted (refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet transmission, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint/channel is not a control one) or to force a specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGTX remains unchanged, while writing 1 makes the bit value to toggle. This bit is read/write but it can only be toggled by writing 1.
0x40005C00 C   FIELD 07w01 VTTX (rw): Valid USB transaction transmitted Device mode This bit is set by the hardware when an IN transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in the USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written. Host mode Same as VTRX behavior but for USB OUT and SETUP transactions.
0x40005C00 C   FIELD 08w01 EPKIND (rw): endpoint/channel kind The meaning of this bit depends on the endpoint/channel type configured by the UTYPE bits. Table1217 summarizes the different meanings. DBL_BUF: This bit is set by the software to enable the double-buffering feature for this bulk endpoint. The usage of double-buffered bulk endpoints is explained in Section134.5.3: Double-buffered endpoints and usage in Device mode. STATUS_OUT: This bit is set by the software to indicate that a status out transaction is expected: in this case all OUT transactions containing more than zero data bytes are answered STALL instead of ACK. This bit may be used to improve the robustness of the application to protocol errors during control transfers and its usage is intended for control endpoints only. When STATUS_OUT is reset, OUT transactions can have any number of bytes, as required.
0x40005C00 C   FIELD 09w02 UTYPE (rw): USB type of transaction These bits configure the behavior of this endpoint/channel as described in Table1216: Endpoint/channel type encoding. Channel0/Endpoint0 must always be a control endpoint/channel and each USB function must have at least one control endpoint/channel which has address 0, but there may be other control channels/endpoints if required. Only control channels/endpoints handle SETUP transactions, which are ignored by endpoints of other kinds. SETUP transactions cannot be answered with NAK or STALL. If a control endpoint/channel is defined as NAK, the USB peripheral does not answer, simulating a receive error, in the receive direction when a SETUP transaction is received. If the control endpoint/channel is defined as STALL in the receive direction, then the SETUP packet is accepted anyway, transferring data and issuing the CTR interrupt. The reception of OUT transactions is handled in the normal way, even if the endpoint/channel is a control one. Bulk and interrupt endpoints have very similar behavior and they differ only in the special feature available using the EPKIND configuration bit. The usage of isochronous channels/endpoints is explained in Section134.5.5: Isochronous transfers in Device mode
0x40005C00 C   FIELD 11w01 SETUP (ro): Setup transaction completed Device mode This bit is read-only and it is set by the hardware when the last completed transaction is a SETUP. This bit changes its value only for control endpoints. It must be examined, in the case of a successful receive transaction (VTRX event), to determine the type of transaction occurred. To protect the interrupt service routine from the changes in SETUP bits due to next incoming tokens, this bit is kept frozen while VTRX bit is at 1; its state changes when VTRX is at 0. This bit is read-only. Host mode This bit is set by the software to send a SETUP transaction on a control endpoint. This bit changes its value only for control endpoints. It is cleared by hardware when the SETUP transaction is acknowledged and VTTX interrupt generated.
0x40005C00 C   FIELD 12w02 STATRX (wo): Status bits, for reception transfers Device mode These bits contain information about the endpoint status, which are listed in Table1215: Reception status encoding on page11025. These bits can be toggled by software to initialize their value. When the application software writes 0, the value remains unchanged, while writing 1 makes the bit value to toggle. Hardware sets the STATRX bits to NAK when a correct transfer has occurred (VTRX1=11) corresponding to a OUT or SETUP (control only) transaction addressed to this endpoint, so the software has the time to elaborate the received data before it acknowledges a new transaction. Double-buffered bulk endpoints implement a special transaction flow control, which control the status based upon buffer availability condition (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint is defined as isochronous, its status can be only VALID or DISABLED, so that the hardware cannot change the status of the endpoint after a successful transaction. If the software sets the STATRX bits to STALL or NAK for an isochronous endpoint, the USB peripheral behavior is not defined. These bits are read/write but they can be only toggled by writing 1. Host mode These bits are the host application controls to start, retry, or abort host transactions driven by the channel. These bits also contain information about the device answer to the last IN channel transaction and report the current status of the channel according to the following STATRX table of states: - DISABLE DISABLE value is reported in case of ACK acknowledge is received on a single-buffer channel. When in DISABLE state the channel is unused or not active waiting for application to restart it by writing VALID. Application can reset a VALID channel to DISABLE to abort a transaction. In this case the transaction is immediately removed from the host execution list. If the aborted transaction was already under execution it is regularly terminated on the USB but the relative VTRX interrupt is not generated. - VALID A host channel is actively trying to submit USB transaction to device only when in VALID state.VALID state can be set by software or automatically by hardware on a NAKED channel at the start of a new frame. When set to VALID, an host channel enters the host execution queue and waits permission from the host frame scheduler to submit its configured transaction. VALID value is also reported in case of ACK acknowledge is received on a double-buffered channel. In this case the channel remains active on the alternate buffer while application needs to read the current buffer and toggle DTOGTX. In case software is late in reading and the alternate buffer is not ready, the host channel is automatically suspended transparently to the application. The suspended double buffered channel is re-activated as soon as delay is recovered and DTOGTX is toggled. - NAK NAK value is reported in case of NAK acknowledge received. When in NAK state the channel is suspended and does not try to transmit. NAK state is moved to VALID by hardware at the start of the next frame, or software can change it to immediately retry transmission by writing it to VALID, or can disable it and abort the transaction by writing DISABLE - STALL STALL value is reported in case of STALL acknowledge received. When in STALL state the channel behaves as disabled. Application must not retry transmission but reset the USB and re-enumerate.
0x40005C00 C   FIELD 14w01 DTOGRX (wo): Data Toggle, for reception transfers If the endpoint/channel is not isochronous, this bit contains the expected value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be received. Hardware toggles this bit, when the ACK handshake is sent following a data packet reception having a matching data PID value; if the endpoint is defined as a control one, hardware clears this bit at the reception of a SETUP PID received from host (in device mode), while it sets this bit to 1 when SETUP transaction is acknowledged by device (in host mode). If the endpoint/channel is using the double-buffering feature this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used only to support packet buffer swapping for data transmission since no data toggling is used for this kind of channels/endpoints and only DATA0 packet are transmitted (Refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet reception, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint is not a control one) or to force specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGRX remains unchanged, while writing 1 makes the bit value toggle. This bit is read/write but it can be only toggled by writing 1.
0x40005C00 C   FIELD 15w01 VTRX (rw): USB valid transaction received Device mode This bit is set by the hardware when an OUT/SETUP transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. The type of occurred transaction, OUT or SETUP, can be determined from the SETUP bit described below. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written, writing 1 has no effect. Host mode This bit is set by the hardware when an IN transaction is successfully completed on this channel. The software can only clear this bit. If the CTRM bit in USB_CNTR register is set a generic interrupt condition is generated together with the channel related flag, which is always activated. - A transaction ended with a NAK sets this bit and NAK answer is reported to application reading the NAK state from the STATRX field of this register. One NAKed transaction keeps pending and is automatically retried by the host at the next frame, or the host can immediately retry by resetting STATRX state to VALID. - A transaction ended by STALL handshake sets this bit and the STALL answer is reported to application reading the STALL state from the STATRX field of this register. Host application must consequently disable the channel and re-enumerate. - A transaction ended with ACK handshake sets this bit If double buffering is disabled, ACK answer is reported by application reading the DISABLE state from the STATRX field of this register. Host application must read received data from USBRAM and re-arm the channel by writing VALID to the STATRX field of this register. If double buffering is enabled, ACK answer is reported by application reading VALID state from the STATRX field of this register. Host application must read received data from USBRAM and toggle the DTOGTX bit of this register. - A transaction ended with error sets this bit. Errors can be seen via the bits ERR_RX (host mode only). This bit is read/write but only 0 can be written, writing 1 has no effect.
0x40005C00 C   FIELD 16w07 DEVADDR (rw): Host mode Device address assigned to the endpoint during the enumeration process.
0x40005C00 C   FIELD 23w01 NAK (rw): Host mode This bit is set by the hardware when a device responds with a NAK. Software can use this bit to monitor the number of NAKs received from a device.
0x40005C00 C   FIELD 24w01 LS_EP (rw): Low speed endpoint
0x40005C00 C   FIELD 25w01 ERR_TX (rw): Received error for an OUT/SETUP transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an OUT or SETUP transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C00 C   FIELD 26w01 ERR_RX (rw): Received error for an IN transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an IN transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C00 C   FIELD 27w02 THREE_ERR_TX (rw): Three errors for an OUT or SETUP transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an OUT transaction. THREE_ERR_TX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C00 C   FIELD 29w02 THREE_ERR_RX (rw): Three errors for an IN transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an IN transaction. THREE_ERR_RX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C04 B  REGISTER USB_CHEP1R: USB endpoint/channel 1 register
0x40005C04 C   FIELD 00w04 EA (rw): endpoint/channel address Device mode Software must write in this field the 4-bit address used to identify the transactions directed to this endpoint. A value must be written before enabling the corresponding endpoint. Host mode Software must write in this field the 4-bit address used to identify the channel addressed by the host transaction.
0x40005C04 C   FIELD 04w02 STATTX (wo): Status bits, for transmission transfers
0x40005C04 C   FIELD 06w01 DTOGTX (wo): Data toggle, for transmission transfers If the endpoint/channel is non-isochronous, this bit contains the required value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be transmitted. Hardware toggles this bit when the ACK handshake is received from the USB host, following a data packet transmission. If the endpoint/channel is defined as a control one, hardware sets this bit to 1 at the reception of a SETUP PID addressed to this endpoint (in device mode) or when a SETUP transaction is acknowledged by the device (in host mode). If the endpoint/channel is using the double buffer feature, this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used to support packet buffer swapping since no data toggling is used for this sort of endpoints and only DATA0 packet are transmitted (refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet transmission, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint/channel is not a control one) or to force a specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGTX remains unchanged, while writing 1 makes the bit value to toggle. This bit is read/write but it can only be toggled by writing 1.
0x40005C04 C   FIELD 07w01 VTTX (rw): Valid USB transaction transmitted Device mode This bit is set by the hardware when an IN transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in the USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written. Host mode Same as VTRX behavior but for USB OUT and SETUP transactions.
0x40005C04 C   FIELD 08w01 EPKIND (rw): endpoint/channel kind The meaning of this bit depends on the endpoint/channel type configured by the UTYPE bits. Table1217 summarizes the different meanings. DBL_BUF: This bit is set by the software to enable the double-buffering feature for this bulk endpoint. The usage of double-buffered bulk endpoints is explained in Section134.5.3: Double-buffered endpoints and usage in Device mode. STATUS_OUT: This bit is set by the software to indicate that a status out transaction is expected: in this case all OUT transactions containing more than zero data bytes are answered STALL instead of ACK. This bit may be used to improve the robustness of the application to protocol errors during control transfers and its usage is intended for control endpoints only. When STATUS_OUT is reset, OUT transactions can have any number of bytes, as required.
0x40005C04 C   FIELD 09w02 UTYPE (rw): USB type of transaction These bits configure the behavior of this endpoint/channel as described in Table1216: Endpoint/channel type encoding. Channel0/Endpoint0 must always be a control endpoint/channel and each USB function must have at least one control endpoint/channel which has address 0, but there may be other control channels/endpoints if required. Only control channels/endpoints handle SETUP transactions, which are ignored by endpoints of other kinds. SETUP transactions cannot be answered with NAK or STALL. If a control endpoint/channel is defined as NAK, the USB peripheral does not answer, simulating a receive error, in the receive direction when a SETUP transaction is received. If the control endpoint/channel is defined as STALL in the receive direction, then the SETUP packet is accepted anyway, transferring data and issuing the CTR interrupt. The reception of OUT transactions is handled in the normal way, even if the endpoint/channel is a control one. Bulk and interrupt endpoints have very similar behavior and they differ only in the special feature available using the EPKIND configuration bit. The usage of isochronous channels/endpoints is explained in Section134.5.5: Isochronous transfers in Device mode
0x40005C04 C   FIELD 11w01 SETUP (ro): Setup transaction completed Device mode This bit is read-only and it is set by the hardware when the last completed transaction is a SETUP. This bit changes its value only for control endpoints. It must be examined, in the case of a successful receive transaction (VTRX event), to determine the type of transaction occurred. To protect the interrupt service routine from the changes in SETUP bits due to next incoming tokens, this bit is kept frozen while VTRX bit is at 1; its state changes when VTRX is at 0. This bit is read-only. Host mode This bit is set by the software to send a SETUP transaction on a control endpoint. This bit changes its value only for control endpoints. It is cleared by hardware when the SETUP transaction is acknowledged and VTTX interrupt generated.
0x40005C04 C   FIELD 12w02 STATRX (wo): Status bits, for reception transfers Device mode These bits contain information about the endpoint status, which are listed in Table1215: Reception status encoding on page11025. These bits can be toggled by software to initialize their value. When the application software writes 0, the value remains unchanged, while writing 1 makes the bit value to toggle. Hardware sets the STATRX bits to NAK when a correct transfer has occurred (VTRX1=11) corresponding to a OUT or SETUP (control only) transaction addressed to this endpoint, so the software has the time to elaborate the received data before it acknowledges a new transaction. Double-buffered bulk endpoints implement a special transaction flow control, which control the status based upon buffer availability condition (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint is defined as isochronous, its status can be only VALID or DISABLED, so that the hardware cannot change the status of the endpoint after a successful transaction. If the software sets the STATRX bits to STALL or NAK for an isochronous endpoint, the USB peripheral behavior is not defined. These bits are read/write but they can be only toggled by writing 1. Host mode These bits are the host application controls to start, retry, or abort host transactions driven by the channel. These bits also contain information about the device answer to the last IN channel transaction and report the current status of the channel according to the following STATRX table of states: - DISABLE DISABLE value is reported in case of ACK acknowledge is received on a single-buffer channel. When in DISABLE state the channel is unused or not active waiting for application to restart it by writing VALID. Application can reset a VALID channel to DISABLE to abort a transaction. In this case the transaction is immediately removed from the host execution list. If the aborted transaction was already under execution it is regularly terminated on the USB but the relative VTRX interrupt is not generated. - VALID A host channel is actively trying to submit USB transaction to device only when in VALID state.VALID state can be set by software or automatically by hardware on a NAKED channel at the start of a new frame. When set to VALID, an host channel enters the host execution queue and waits permission from the host frame scheduler to submit its configured transaction. VALID value is also reported in case of ACK acknowledge is received on a double-buffered channel. In this case the channel remains active on the alternate buffer while application needs to read the current buffer and toggle DTOGTX. In case software is late in reading and the alternate buffer is not ready, the host channel is automatically suspended transparently to the application. The suspended double buffered channel is re-activated as soon as delay is recovered and DTOGTX is toggled. - NAK NAK value is reported in case of NAK acknowledge received. When in NAK state the channel is suspended and does not try to transmit. NAK state is moved to VALID by hardware at the start of the next frame, or software can change it to immediately retry transmission by writing it to VALID, or can disable it and abort the transaction by writing DISABLE - STALL STALL value is reported in case of STALL acknowledge received. When in STALL state the channel behaves as disabled. Application must not retry transmission but reset the USB and re-enumerate.
0x40005C04 C   FIELD 14w01 DTOGRX (wo): Data Toggle, for reception transfers If the endpoint/channel is not isochronous, this bit contains the expected value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be received. Hardware toggles this bit, when the ACK handshake is sent following a data packet reception having a matching data PID value; if the endpoint is defined as a control one, hardware clears this bit at the reception of a SETUP PID received from host (in device mode), while it sets this bit to 1 when SETUP transaction is acknowledged by device (in host mode). If the endpoint/channel is using the double-buffering feature this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used only to support packet buffer swapping for data transmission since no data toggling is used for this kind of channels/endpoints and only DATA0 packet are transmitted (Refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet reception, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint is not a control one) or to force specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGRX remains unchanged, while writing 1 makes the bit value toggle. This bit is read/write but it can be only toggled by writing 1.
0x40005C04 C   FIELD 15w01 VTRX (rw): USB valid transaction received Device mode This bit is set by the hardware when an OUT/SETUP transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. The type of occurred transaction, OUT or SETUP, can be determined from the SETUP bit described below. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written, writing 1 has no effect. Host mode This bit is set by the hardware when an IN transaction is successfully completed on this channel. The software can only clear this bit. If the CTRM bit in USB_CNTR register is set a generic interrupt condition is generated together with the channel related flag, which is always activated. - A transaction ended with a NAK sets this bit and NAK answer is reported to application reading the NAK state from the STATRX field of this register. One NAKed transaction keeps pending and is automatically retried by the host at the next frame, or the host can immediately retry by resetting STATRX state to VALID. - A transaction ended by STALL handshake sets this bit and the STALL answer is reported to application reading the STALL state from the STATRX field of this register. Host application must consequently disable the channel and re-enumerate. - A transaction ended with ACK handshake sets this bit If double buffering is disabled, ACK answer is reported by application reading the DISABLE state from the STATRX field of this register. Host application must read received data from USBRAM and re-arm the channel by writing VALID to the STATRX field of this register. If double buffering is enabled, ACK answer is reported by application reading VALID state from the STATRX field of this register. Host application must read received data from USBRAM and toggle the DTOGTX bit of this register. - A transaction ended with error sets this bit. Errors can be seen via the bits ERR_RX (host mode only). This bit is read/write but only 0 can be written, writing 1 has no effect.
0x40005C04 C   FIELD 16w07 DEVADDR (rw): Host mode Device address assigned to the endpoint during the enumeration process.
0x40005C04 C   FIELD 23w01 NAK (rw): Host mode This bit is set by the hardware when a device responds with a NAK. Software can use this bit to monitor the number of NAKs received from a device.
0x40005C04 C   FIELD 24w01 LS_EP (rw): Low speed endpoint
0x40005C04 C   FIELD 25w01 ERR_TX (rw): Received error for an OUT/SETUP transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an OUT or SETUP transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C04 C   FIELD 26w01 ERR_RX (rw): Received error for an IN transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an IN transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C04 C   FIELD 27w02 THREE_ERR_TX (rw): Three errors for an OUT or SETUP transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an OUT transaction. THREE_ERR_TX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C04 C   FIELD 29w02 THREE_ERR_RX (rw): Three errors for an IN transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an IN transaction. THREE_ERR_RX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C08 B  REGISTER USB_CHEP2R: USB endpoint/channel 2 register
0x40005C08 C   FIELD 00w04 EA (rw): endpoint/channel address Device mode Software must write in this field the 4-bit address used to identify the transactions directed to this endpoint. A value must be written before enabling the corresponding endpoint. Host mode Software must write in this field the 4-bit address used to identify the channel addressed by the host transaction.
0x40005C08 C   FIELD 04w02 STATTX (wo): Status bits, for transmission transfers
0x40005C08 C   FIELD 06w01 DTOGTX (wo): Data toggle, for transmission transfers If the endpoint/channel is non-isochronous, this bit contains the required value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be transmitted. Hardware toggles this bit when the ACK handshake is received from the USB host, following a data packet transmission. If the endpoint/channel is defined as a control one, hardware sets this bit to 1 at the reception of a SETUP PID addressed to this endpoint (in device mode) or when a SETUP transaction is acknowledged by the device (in host mode). If the endpoint/channel is using the double buffer feature, this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used to support packet buffer swapping since no data toggling is used for this sort of endpoints and only DATA0 packet are transmitted (refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet transmission, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint/channel is not a control one) or to force a specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGTX remains unchanged, while writing 1 makes the bit value to toggle. This bit is read/write but it can only be toggled by writing 1.
0x40005C08 C   FIELD 07w01 VTTX (rw): Valid USB transaction transmitted Device mode This bit is set by the hardware when an IN transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in the USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written. Host mode Same as VTRX behavior but for USB OUT and SETUP transactions.
0x40005C08 C   FIELD 08w01 EPKIND (rw): endpoint/channel kind The meaning of this bit depends on the endpoint/channel type configured by the UTYPE bits. Table1217 summarizes the different meanings. DBL_BUF: This bit is set by the software to enable the double-buffering feature for this bulk endpoint. The usage of double-buffered bulk endpoints is explained in Section134.5.3: Double-buffered endpoints and usage in Device mode. STATUS_OUT: This bit is set by the software to indicate that a status out transaction is expected: in this case all OUT transactions containing more than zero data bytes are answered STALL instead of ACK. This bit may be used to improve the robustness of the application to protocol errors during control transfers and its usage is intended for control endpoints only. When STATUS_OUT is reset, OUT transactions can have any number of bytes, as required.
0x40005C08 C   FIELD 09w02 UTYPE (rw): USB type of transaction These bits configure the behavior of this endpoint/channel as described in Table1216: Endpoint/channel type encoding. Channel0/Endpoint0 must always be a control endpoint/channel and each USB function must have at least one control endpoint/channel which has address 0, but there may be other control channels/endpoints if required. Only control channels/endpoints handle SETUP transactions, which are ignored by endpoints of other kinds. SETUP transactions cannot be answered with NAK or STALL. If a control endpoint/channel is defined as NAK, the USB peripheral does not answer, simulating a receive error, in the receive direction when a SETUP transaction is received. If the control endpoint/channel is defined as STALL in the receive direction, then the SETUP packet is accepted anyway, transferring data and issuing the CTR interrupt. The reception of OUT transactions is handled in the normal way, even if the endpoint/channel is a control one. Bulk and interrupt endpoints have very similar behavior and they differ only in the special feature available using the EPKIND configuration bit. The usage of isochronous channels/endpoints is explained in Section134.5.5: Isochronous transfers in Device mode
0x40005C08 C   FIELD 11w01 SETUP (ro): Setup transaction completed Device mode This bit is read-only and it is set by the hardware when the last completed transaction is a SETUP. This bit changes its value only for control endpoints. It must be examined, in the case of a successful receive transaction (VTRX event), to determine the type of transaction occurred. To protect the interrupt service routine from the changes in SETUP bits due to next incoming tokens, this bit is kept frozen while VTRX bit is at 1; its state changes when VTRX is at 0. This bit is read-only. Host mode This bit is set by the software to send a SETUP transaction on a control endpoint. This bit changes its value only for control endpoints. It is cleared by hardware when the SETUP transaction is acknowledged and VTTX interrupt generated.
0x40005C08 C   FIELD 12w02 STATRX (wo): Status bits, for reception transfers Device mode These bits contain information about the endpoint status, which are listed in Table1215: Reception status encoding on page11025. These bits can be toggled by software to initialize their value. When the application software writes 0, the value remains unchanged, while writing 1 makes the bit value to toggle. Hardware sets the STATRX bits to NAK when a correct transfer has occurred (VTRX1=11) corresponding to a OUT or SETUP (control only) transaction addressed to this endpoint, so the software has the time to elaborate the received data before it acknowledges a new transaction. Double-buffered bulk endpoints implement a special transaction flow control, which control the status based upon buffer availability condition (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint is defined as isochronous, its status can be only VALID or DISABLED, so that the hardware cannot change the status of the endpoint after a successful transaction. If the software sets the STATRX bits to STALL or NAK for an isochronous endpoint, the USB peripheral behavior is not defined. These bits are read/write but they can be only toggled by writing 1. Host mode These bits are the host application controls to start, retry, or abort host transactions driven by the channel. These bits also contain information about the device answer to the last IN channel transaction and report the current status of the channel according to the following STATRX table of states: - DISABLE DISABLE value is reported in case of ACK acknowledge is received on a single-buffer channel. When in DISABLE state the channel is unused or not active waiting for application to restart it by writing VALID. Application can reset a VALID channel to DISABLE to abort a transaction. In this case the transaction is immediately removed from the host execution list. If the aborted transaction was already under execution it is regularly terminated on the USB but the relative VTRX interrupt is not generated. - VALID A host channel is actively trying to submit USB transaction to device only when in VALID state.VALID state can be set by software or automatically by hardware on a NAKED channel at the start of a new frame. When set to VALID, an host channel enters the host execution queue and waits permission from the host frame scheduler to submit its configured transaction. VALID value is also reported in case of ACK acknowledge is received on a double-buffered channel. In this case the channel remains active on the alternate buffer while application needs to read the current buffer and toggle DTOGTX. In case software is late in reading and the alternate buffer is not ready, the host channel is automatically suspended transparently to the application. The suspended double buffered channel is re-activated as soon as delay is recovered and DTOGTX is toggled. - NAK NAK value is reported in case of NAK acknowledge received. When in NAK state the channel is suspended and does not try to transmit. NAK state is moved to VALID by hardware at the start of the next frame, or software can change it to immediately retry transmission by writing it to VALID, or can disable it and abort the transaction by writing DISABLE - STALL STALL value is reported in case of STALL acknowledge received. When in STALL state the channel behaves as disabled. Application must not retry transmission but reset the USB and re-enumerate.
0x40005C08 C   FIELD 14w01 DTOGRX (wo): Data Toggle, for reception transfers If the endpoint/channel is not isochronous, this bit contains the expected value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be received. Hardware toggles this bit, when the ACK handshake is sent following a data packet reception having a matching data PID value; if the endpoint is defined as a control one, hardware clears this bit at the reception of a SETUP PID received from host (in device mode), while it sets this bit to 1 when SETUP transaction is acknowledged by device (in host mode). If the endpoint/channel is using the double-buffering feature this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used only to support packet buffer swapping for data transmission since no data toggling is used for this kind of channels/endpoints and only DATA0 packet are transmitted (Refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet reception, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint is not a control one) or to force specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGRX remains unchanged, while writing 1 makes the bit value toggle. This bit is read/write but it can be only toggled by writing 1.
0x40005C08 C   FIELD 15w01 VTRX (rw): USB valid transaction received Device mode This bit is set by the hardware when an OUT/SETUP transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. The type of occurred transaction, OUT or SETUP, can be determined from the SETUP bit described below. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written, writing 1 has no effect. Host mode This bit is set by the hardware when an IN transaction is successfully completed on this channel. The software can only clear this bit. If the CTRM bit in USB_CNTR register is set a generic interrupt condition is generated together with the channel related flag, which is always activated. - A transaction ended with a NAK sets this bit and NAK answer is reported to application reading the NAK state from the STATRX field of this register. One NAKed transaction keeps pending and is automatically retried by the host at the next frame, or the host can immediately retry by resetting STATRX state to VALID. - A transaction ended by STALL handshake sets this bit and the STALL answer is reported to application reading the STALL state from the STATRX field of this register. Host application must consequently disable the channel and re-enumerate. - A transaction ended with ACK handshake sets this bit If double buffering is disabled, ACK answer is reported by application reading the DISABLE state from the STATRX field of this register. Host application must read received data from USBRAM and re-arm the channel by writing VALID to the STATRX field of this register. If double buffering is enabled, ACK answer is reported by application reading VALID state from the STATRX field of this register. Host application must read received data from USBRAM and toggle the DTOGTX bit of this register. - A transaction ended with error sets this bit. Errors can be seen via the bits ERR_RX (host mode only). This bit is read/write but only 0 can be written, writing 1 has no effect.
0x40005C08 C   FIELD 16w07 DEVADDR (rw): Host mode Device address assigned to the endpoint during the enumeration process.
0x40005C08 C   FIELD 23w01 NAK (rw): Host mode This bit is set by the hardware when a device responds with a NAK. Software can use this bit to monitor the number of NAKs received from a device.
0x40005C08 C   FIELD 24w01 LS_EP (rw): Low speed endpoint
0x40005C08 C   FIELD 25w01 ERR_TX (rw): Received error for an OUT/SETUP transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an OUT or SETUP transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C08 C   FIELD 26w01 ERR_RX (rw): Received error for an IN transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an IN transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C08 C   FIELD 27w02 THREE_ERR_TX (rw): Three errors for an OUT or SETUP transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an OUT transaction. THREE_ERR_TX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C08 C   FIELD 29w02 THREE_ERR_RX (rw): Three errors for an IN transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an IN transaction. THREE_ERR_RX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C0C B  REGISTER USB_CHEP3R: USB endpoint/channel 3 register
0x40005C0C C   FIELD 00w04 EA (rw): endpoint/channel address Device mode Software must write in this field the 4-bit address used to identify the transactions directed to this endpoint. A value must be written before enabling the corresponding endpoint. Host mode Software must write in this field the 4-bit address used to identify the channel addressed by the host transaction.
0x40005C0C C   FIELD 04w02 STATTX (wo): Status bits, for transmission transfers
0x40005C0C C   FIELD 06w01 DTOGTX (wo): Data toggle, for transmission transfers If the endpoint/channel is non-isochronous, this bit contains the required value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be transmitted. Hardware toggles this bit when the ACK handshake is received from the USB host, following a data packet transmission. If the endpoint/channel is defined as a control one, hardware sets this bit to 1 at the reception of a SETUP PID addressed to this endpoint (in device mode) or when a SETUP transaction is acknowledged by the device (in host mode). If the endpoint/channel is using the double buffer feature, this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used to support packet buffer swapping since no data toggling is used for this sort of endpoints and only DATA0 packet are transmitted (refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet transmission, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint/channel is not a control one) or to force a specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGTX remains unchanged, while writing 1 makes the bit value to toggle. This bit is read/write but it can only be toggled by writing 1.
0x40005C0C C   FIELD 07w01 VTTX (rw): Valid USB transaction transmitted Device mode This bit is set by the hardware when an IN transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in the USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written. Host mode Same as VTRX behavior but for USB OUT and SETUP transactions.
0x40005C0C C   FIELD 08w01 EPKIND (rw): endpoint/channel kind The meaning of this bit depends on the endpoint/channel type configured by the UTYPE bits. Table1217 summarizes the different meanings. DBL_BUF: This bit is set by the software to enable the double-buffering feature for this bulk endpoint. The usage of double-buffered bulk endpoints is explained in Section134.5.3: Double-buffered endpoints and usage in Device mode. STATUS_OUT: This bit is set by the software to indicate that a status out transaction is expected: in this case all OUT transactions containing more than zero data bytes are answered STALL instead of ACK. This bit may be used to improve the robustness of the application to protocol errors during control transfers and its usage is intended for control endpoints only. When STATUS_OUT is reset, OUT transactions can have any number of bytes, as required.
0x40005C0C C   FIELD 09w02 UTYPE (rw): USB type of transaction These bits configure the behavior of this endpoint/channel as described in Table1216: Endpoint/channel type encoding. Channel0/Endpoint0 must always be a control endpoint/channel and each USB function must have at least one control endpoint/channel which has address 0, but there may be other control channels/endpoints if required. Only control channels/endpoints handle SETUP transactions, which are ignored by endpoints of other kinds. SETUP transactions cannot be answered with NAK or STALL. If a control endpoint/channel is defined as NAK, the USB peripheral does not answer, simulating a receive error, in the receive direction when a SETUP transaction is received. If the control endpoint/channel is defined as STALL in the receive direction, then the SETUP packet is accepted anyway, transferring data and issuing the CTR interrupt. The reception of OUT transactions is handled in the normal way, even if the endpoint/channel is a control one. Bulk and interrupt endpoints have very similar behavior and they differ only in the special feature available using the EPKIND configuration bit. The usage of isochronous channels/endpoints is explained in Section134.5.5: Isochronous transfers in Device mode
0x40005C0C C   FIELD 11w01 SETUP (ro): Setup transaction completed Device mode This bit is read-only and it is set by the hardware when the last completed transaction is a SETUP. This bit changes its value only for control endpoints. It must be examined, in the case of a successful receive transaction (VTRX event), to determine the type of transaction occurred. To protect the interrupt service routine from the changes in SETUP bits due to next incoming tokens, this bit is kept frozen while VTRX bit is at 1; its state changes when VTRX is at 0. This bit is read-only. Host mode This bit is set by the software to send a SETUP transaction on a control endpoint. This bit changes its value only for control endpoints. It is cleared by hardware when the SETUP transaction is acknowledged and VTTX interrupt generated.
0x40005C0C C   FIELD 12w02 STATRX (wo): Status bits, for reception transfers Device mode These bits contain information about the endpoint status, which are listed in Table1215: Reception status encoding on page11025. These bits can be toggled by software to initialize their value. When the application software writes 0, the value remains unchanged, while writing 1 makes the bit value to toggle. Hardware sets the STATRX bits to NAK when a correct transfer has occurred (VTRX1=11) corresponding to a OUT or SETUP (control only) transaction addressed to this endpoint, so the software has the time to elaborate the received data before it acknowledges a new transaction. Double-buffered bulk endpoints implement a special transaction flow control, which control the status based upon buffer availability condition (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint is defined as isochronous, its status can be only VALID or DISABLED, so that the hardware cannot change the status of the endpoint after a successful transaction. If the software sets the STATRX bits to STALL or NAK for an isochronous endpoint, the USB peripheral behavior is not defined. These bits are read/write but they can be only toggled by writing 1. Host mode These bits are the host application controls to start, retry, or abort host transactions driven by the channel. These bits also contain information about the device answer to the last IN channel transaction and report the current status of the channel according to the following STATRX table of states: - DISABLE DISABLE value is reported in case of ACK acknowledge is received on a single-buffer channel. When in DISABLE state the channel is unused or not active waiting for application to restart it by writing VALID. Application can reset a VALID channel to DISABLE to abort a transaction. In this case the transaction is immediately removed from the host execution list. If the aborted transaction was already under execution it is regularly terminated on the USB but the relative VTRX interrupt is not generated. - VALID A host channel is actively trying to submit USB transaction to device only when in VALID state.VALID state can be set by software or automatically by hardware on a NAKED channel at the start of a new frame. When set to VALID, an host channel enters the host execution queue and waits permission from the host frame scheduler to submit its configured transaction. VALID value is also reported in case of ACK acknowledge is received on a double-buffered channel. In this case the channel remains active on the alternate buffer while application needs to read the current buffer and toggle DTOGTX. In case software is late in reading and the alternate buffer is not ready, the host channel is automatically suspended transparently to the application. The suspended double buffered channel is re-activated as soon as delay is recovered and DTOGTX is toggled. - NAK NAK value is reported in case of NAK acknowledge received. When in NAK state the channel is suspended and does not try to transmit. NAK state is moved to VALID by hardware at the start of the next frame, or software can change it to immediately retry transmission by writing it to VALID, or can disable it and abort the transaction by writing DISABLE - STALL STALL value is reported in case of STALL acknowledge received. When in STALL state the channel behaves as disabled. Application must not retry transmission but reset the USB and re-enumerate.
0x40005C0C C   FIELD 14w01 DTOGRX (wo): Data Toggle, for reception transfers If the endpoint/channel is not isochronous, this bit contains the expected value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be received. Hardware toggles this bit, when the ACK handshake is sent following a data packet reception having a matching data PID value; if the endpoint is defined as a control one, hardware clears this bit at the reception of a SETUP PID received from host (in device mode), while it sets this bit to 1 when SETUP transaction is acknowledged by device (in host mode). If the endpoint/channel is using the double-buffering feature this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used only to support packet buffer swapping for data transmission since no data toggling is used for this kind of channels/endpoints and only DATA0 packet are transmitted (Refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet reception, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint is not a control one) or to force specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGRX remains unchanged, while writing 1 makes the bit value toggle. This bit is read/write but it can be only toggled by writing 1.
0x40005C0C C   FIELD 15w01 VTRX (rw): USB valid transaction received Device mode This bit is set by the hardware when an OUT/SETUP transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. The type of occurred transaction, OUT or SETUP, can be determined from the SETUP bit described below. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written, writing 1 has no effect. Host mode This bit is set by the hardware when an IN transaction is successfully completed on this channel. The software can only clear this bit. If the CTRM bit in USB_CNTR register is set a generic interrupt condition is generated together with the channel related flag, which is always activated. - A transaction ended with a NAK sets this bit and NAK answer is reported to application reading the NAK state from the STATRX field of this register. One NAKed transaction keeps pending and is automatically retried by the host at the next frame, or the host can immediately retry by resetting STATRX state to VALID. - A transaction ended by STALL handshake sets this bit and the STALL answer is reported to application reading the STALL state from the STATRX field of this register. Host application must consequently disable the channel and re-enumerate. - A transaction ended with ACK handshake sets this bit If double buffering is disabled, ACK answer is reported by application reading the DISABLE state from the STATRX field of this register. Host application must read received data from USBRAM and re-arm the channel by writing VALID to the STATRX field of this register. If double buffering is enabled, ACK answer is reported by application reading VALID state from the STATRX field of this register. Host application must read received data from USBRAM and toggle the DTOGTX bit of this register. - A transaction ended with error sets this bit. Errors can be seen via the bits ERR_RX (host mode only). This bit is read/write but only 0 can be written, writing 1 has no effect.
0x40005C0C C   FIELD 16w07 DEVADDR (rw): Host mode Device address assigned to the endpoint during the enumeration process.
0x40005C0C C   FIELD 23w01 NAK (rw): Host mode This bit is set by the hardware when a device responds with a NAK. Software can use this bit to monitor the number of NAKs received from a device.
0x40005C0C C   FIELD 24w01 LS_EP (rw): Low speed endpoint
0x40005C0C C   FIELD 25w01 ERR_TX (rw): Received error for an OUT/SETUP transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an OUT or SETUP transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C0C C   FIELD 26w01 ERR_RX (rw): Received error for an IN transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an IN transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C0C C   FIELD 27w02 THREE_ERR_TX (rw): Three errors for an OUT or SETUP transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an OUT transaction. THREE_ERR_TX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C0C C   FIELD 29w02 THREE_ERR_RX (rw): Three errors for an IN transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an IN transaction. THREE_ERR_RX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C10 B  REGISTER USB_CHEP4R: USB endpoint/channel 4 register
0x40005C10 C   FIELD 00w04 EA (rw): endpoint/channel address Device mode Software must write in this field the 4-bit address used to identify the transactions directed to this endpoint. A value must be written before enabling the corresponding endpoint. Host mode Software must write in this field the 4-bit address used to identify the channel addressed by the host transaction.
0x40005C10 C   FIELD 04w02 STATTX (wo): Status bits, for transmission transfers
0x40005C10 C   FIELD 06w01 DTOGTX (wo): Data toggle, for transmission transfers If the endpoint/channel is non-isochronous, this bit contains the required value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be transmitted. Hardware toggles this bit when the ACK handshake is received from the USB host, following a data packet transmission. If the endpoint/channel is defined as a control one, hardware sets this bit to 1 at the reception of a SETUP PID addressed to this endpoint (in device mode) or when a SETUP transaction is acknowledged by the device (in host mode). If the endpoint/channel is using the double buffer feature, this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used to support packet buffer swapping since no data toggling is used for this sort of endpoints and only DATA0 packet are transmitted (refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet transmission, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint/channel is not a control one) or to force a specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGTX remains unchanged, while writing 1 makes the bit value to toggle. This bit is read/write but it can only be toggled by writing 1.
0x40005C10 C   FIELD 07w01 VTTX (rw): Valid USB transaction transmitted Device mode This bit is set by the hardware when an IN transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in the USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written. Host mode Same as VTRX behavior but for USB OUT and SETUP transactions.
0x40005C10 C   FIELD 08w01 EPKIND (rw): endpoint/channel kind The meaning of this bit depends on the endpoint/channel type configured by the UTYPE bits. Table1217 summarizes the different meanings. DBL_BUF: This bit is set by the software to enable the double-buffering feature for this bulk endpoint. The usage of double-buffered bulk endpoints is explained in Section134.5.3: Double-buffered endpoints and usage in Device mode. STATUS_OUT: This bit is set by the software to indicate that a status out transaction is expected: in this case all OUT transactions containing more than zero data bytes are answered STALL instead of ACK. This bit may be used to improve the robustness of the application to protocol errors during control transfers and its usage is intended for control endpoints only. When STATUS_OUT is reset, OUT transactions can have any number of bytes, as required.
0x40005C10 C   FIELD 09w02 UTYPE (rw): USB type of transaction These bits configure the behavior of this endpoint/channel as described in Table1216: Endpoint/channel type encoding. Channel0/Endpoint0 must always be a control endpoint/channel and each USB function must have at least one control endpoint/channel which has address 0, but there may be other control channels/endpoints if required. Only control channels/endpoints handle SETUP transactions, which are ignored by endpoints of other kinds. SETUP transactions cannot be answered with NAK or STALL. If a control endpoint/channel is defined as NAK, the USB peripheral does not answer, simulating a receive error, in the receive direction when a SETUP transaction is received. If the control endpoint/channel is defined as STALL in the receive direction, then the SETUP packet is accepted anyway, transferring data and issuing the CTR interrupt. The reception of OUT transactions is handled in the normal way, even if the endpoint/channel is a control one. Bulk and interrupt endpoints have very similar behavior and they differ only in the special feature available using the EPKIND configuration bit. The usage of isochronous channels/endpoints is explained in Section134.5.5: Isochronous transfers in Device mode
0x40005C10 C   FIELD 11w01 SETUP (ro): Setup transaction completed Device mode This bit is read-only and it is set by the hardware when the last completed transaction is a SETUP. This bit changes its value only for control endpoints. It must be examined, in the case of a successful receive transaction (VTRX event), to determine the type of transaction occurred. To protect the interrupt service routine from the changes in SETUP bits due to next incoming tokens, this bit is kept frozen while VTRX bit is at 1; its state changes when VTRX is at 0. This bit is read-only. Host mode This bit is set by the software to send a SETUP transaction on a control endpoint. This bit changes its value only for control endpoints. It is cleared by hardware when the SETUP transaction is acknowledged and VTTX interrupt generated.
0x40005C10 C   FIELD 12w02 STATRX (wo): Status bits, for reception transfers Device mode These bits contain information about the endpoint status, which are listed in Table1215: Reception status encoding on page11025. These bits can be toggled by software to initialize their value. When the application software writes 0, the value remains unchanged, while writing 1 makes the bit value to toggle. Hardware sets the STATRX bits to NAK when a correct transfer has occurred (VTRX1=11) corresponding to a OUT or SETUP (control only) transaction addressed to this endpoint, so the software has the time to elaborate the received data before it acknowledges a new transaction. Double-buffered bulk endpoints implement a special transaction flow control, which control the status based upon buffer availability condition (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint is defined as isochronous, its status can be only VALID or DISABLED, so that the hardware cannot change the status of the endpoint after a successful transaction. If the software sets the STATRX bits to STALL or NAK for an isochronous endpoint, the USB peripheral behavior is not defined. These bits are read/write but they can be only toggled by writing 1. Host mode These bits are the host application controls to start, retry, or abort host transactions driven by the channel. These bits also contain information about the device answer to the last IN channel transaction and report the current status of the channel according to the following STATRX table of states: - DISABLE DISABLE value is reported in case of ACK acknowledge is received on a single-buffer channel. When in DISABLE state the channel is unused or not active waiting for application to restart it by writing VALID. Application can reset a VALID channel to DISABLE to abort a transaction. In this case the transaction is immediately removed from the host execution list. If the aborted transaction was already under execution it is regularly terminated on the USB but the relative VTRX interrupt is not generated. - VALID A host channel is actively trying to submit USB transaction to device only when in VALID state.VALID state can be set by software or automatically by hardware on a NAKED channel at the start of a new frame. When set to VALID, an host channel enters the host execution queue and waits permission from the host frame scheduler to submit its configured transaction. VALID value is also reported in case of ACK acknowledge is received on a double-buffered channel. In this case the channel remains active on the alternate buffer while application needs to read the current buffer and toggle DTOGTX. In case software is late in reading and the alternate buffer is not ready, the host channel is automatically suspended transparently to the application. The suspended double buffered channel is re-activated as soon as delay is recovered and DTOGTX is toggled. - NAK NAK value is reported in case of NAK acknowledge received. When in NAK state the channel is suspended and does not try to transmit. NAK state is moved to VALID by hardware at the start of the next frame, or software can change it to immediately retry transmission by writing it to VALID, or can disable it and abort the transaction by writing DISABLE - STALL STALL value is reported in case of STALL acknowledge received. When in STALL state the channel behaves as disabled. Application must not retry transmission but reset the USB and re-enumerate.
0x40005C10 C   FIELD 14w01 DTOGRX (wo): Data Toggle, for reception transfers If the endpoint/channel is not isochronous, this bit contains the expected value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be received. Hardware toggles this bit, when the ACK handshake is sent following a data packet reception having a matching data PID value; if the endpoint is defined as a control one, hardware clears this bit at the reception of a SETUP PID received from host (in device mode), while it sets this bit to 1 when SETUP transaction is acknowledged by device (in host mode). If the endpoint/channel is using the double-buffering feature this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used only to support packet buffer swapping for data transmission since no data toggling is used for this kind of channels/endpoints and only DATA0 packet are transmitted (Refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet reception, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint is not a control one) or to force specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGRX remains unchanged, while writing 1 makes the bit value toggle. This bit is read/write but it can be only toggled by writing 1.
0x40005C10 C   FIELD 15w01 VTRX (rw): USB valid transaction received Device mode This bit is set by the hardware when an OUT/SETUP transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. The type of occurred transaction, OUT or SETUP, can be determined from the SETUP bit described below. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written, writing 1 has no effect. Host mode This bit is set by the hardware when an IN transaction is successfully completed on this channel. The software can only clear this bit. If the CTRM bit in USB_CNTR register is set a generic interrupt condition is generated together with the channel related flag, which is always activated. - A transaction ended with a NAK sets this bit and NAK answer is reported to application reading the NAK state from the STATRX field of this register. One NAKed transaction keeps pending and is automatically retried by the host at the next frame, or the host can immediately retry by resetting STATRX state to VALID. - A transaction ended by STALL handshake sets this bit and the STALL answer is reported to application reading the STALL state from the STATRX field of this register. Host application must consequently disable the channel and re-enumerate. - A transaction ended with ACK handshake sets this bit If double buffering is disabled, ACK answer is reported by application reading the DISABLE state from the STATRX field of this register. Host application must read received data from USBRAM and re-arm the channel by writing VALID to the STATRX field of this register. If double buffering is enabled, ACK answer is reported by application reading VALID state from the STATRX field of this register. Host application must read received data from USBRAM and toggle the DTOGTX bit of this register. - A transaction ended with error sets this bit. Errors can be seen via the bits ERR_RX (host mode only). This bit is read/write but only 0 can be written, writing 1 has no effect.
0x40005C10 C   FIELD 16w07 DEVADDR (rw): Host mode Device address assigned to the endpoint during the enumeration process.
0x40005C10 C   FIELD 23w01 NAK (rw): Host mode This bit is set by the hardware when a device responds with a NAK. Software can use this bit to monitor the number of NAKs received from a device.
0x40005C10 C   FIELD 24w01 LS_EP (rw): Low speed endpoint
0x40005C10 C   FIELD 25w01 ERR_TX (rw): Received error for an OUT/SETUP transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an OUT or SETUP transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C10 C   FIELD 26w01 ERR_RX (rw): Received error for an IN transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an IN transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C10 C   FIELD 27w02 THREE_ERR_TX (rw): Three errors for an OUT or SETUP transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an OUT transaction. THREE_ERR_TX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C10 C   FIELD 29w02 THREE_ERR_RX (rw): Three errors for an IN transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an IN transaction. THREE_ERR_RX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C14 B  REGISTER USB_CHEP5R: USB endpoint/channel 5 register
0x40005C14 C   FIELD 00w04 EA (rw): endpoint/channel address Device mode Software must write in this field the 4-bit address used to identify the transactions directed to this endpoint. A value must be written before enabling the corresponding endpoint. Host mode Software must write in this field the 4-bit address used to identify the channel addressed by the host transaction.
0x40005C14 C   FIELD 04w02 STATTX (wo): Status bits, for transmission transfers
0x40005C14 C   FIELD 06w01 DTOGTX (wo): Data toggle, for transmission transfers If the endpoint/channel is non-isochronous, this bit contains the required value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be transmitted. Hardware toggles this bit when the ACK handshake is received from the USB host, following a data packet transmission. If the endpoint/channel is defined as a control one, hardware sets this bit to 1 at the reception of a SETUP PID addressed to this endpoint (in device mode) or when a SETUP transaction is acknowledged by the device (in host mode). If the endpoint/channel is using the double buffer feature, this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used to support packet buffer swapping since no data toggling is used for this sort of endpoints and only DATA0 packet are transmitted (refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet transmission, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint/channel is not a control one) or to force a specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGTX remains unchanged, while writing 1 makes the bit value to toggle. This bit is read/write but it can only be toggled by writing 1.
0x40005C14 C   FIELD 07w01 VTTX (rw): Valid USB transaction transmitted Device mode This bit is set by the hardware when an IN transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in the USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written. Host mode Same as VTRX behavior but for USB OUT and SETUP transactions.
0x40005C14 C   FIELD 08w01 EPKIND (rw): endpoint/channel kind The meaning of this bit depends on the endpoint/channel type configured by the UTYPE bits. Table1217 summarizes the different meanings. DBL_BUF: This bit is set by the software to enable the double-buffering feature for this bulk endpoint. The usage of double-buffered bulk endpoints is explained in Section134.5.3: Double-buffered endpoints and usage in Device mode. STATUS_OUT: This bit is set by the software to indicate that a status out transaction is expected: in this case all OUT transactions containing more than zero data bytes are answered STALL instead of ACK. This bit may be used to improve the robustness of the application to protocol errors during control transfers and its usage is intended for control endpoints only. When STATUS_OUT is reset, OUT transactions can have any number of bytes, as required.
0x40005C14 C   FIELD 09w02 UTYPE (rw): USB type of transaction These bits configure the behavior of this endpoint/channel as described in Table1216: Endpoint/channel type encoding. Channel0/Endpoint0 must always be a control endpoint/channel and each USB function must have at least one control endpoint/channel which has address 0, but there may be other control channels/endpoints if required. Only control channels/endpoints handle SETUP transactions, which are ignored by endpoints of other kinds. SETUP transactions cannot be answered with NAK or STALL. If a control endpoint/channel is defined as NAK, the USB peripheral does not answer, simulating a receive error, in the receive direction when a SETUP transaction is received. If the control endpoint/channel is defined as STALL in the receive direction, then the SETUP packet is accepted anyway, transferring data and issuing the CTR interrupt. The reception of OUT transactions is handled in the normal way, even if the endpoint/channel is a control one. Bulk and interrupt endpoints have very similar behavior and they differ only in the special feature available using the EPKIND configuration bit. The usage of isochronous channels/endpoints is explained in Section134.5.5: Isochronous transfers in Device mode
0x40005C14 C   FIELD 11w01 SETUP (ro): Setup transaction completed Device mode This bit is read-only and it is set by the hardware when the last completed transaction is a SETUP. This bit changes its value only for control endpoints. It must be examined, in the case of a successful receive transaction (VTRX event), to determine the type of transaction occurred. To protect the interrupt service routine from the changes in SETUP bits due to next incoming tokens, this bit is kept frozen while VTRX bit is at 1; its state changes when VTRX is at 0. This bit is read-only. Host mode This bit is set by the software to send a SETUP transaction on a control endpoint. This bit changes its value only for control endpoints. It is cleared by hardware when the SETUP transaction is acknowledged and VTTX interrupt generated.
0x40005C14 C   FIELD 12w02 STATRX (wo): Status bits, for reception transfers Device mode These bits contain information about the endpoint status, which are listed in Table1215: Reception status encoding on page11025. These bits can be toggled by software to initialize their value. When the application software writes 0, the value remains unchanged, while writing 1 makes the bit value to toggle. Hardware sets the STATRX bits to NAK when a correct transfer has occurred (VTRX1=11) corresponding to a OUT or SETUP (control only) transaction addressed to this endpoint, so the software has the time to elaborate the received data before it acknowledges a new transaction. Double-buffered bulk endpoints implement a special transaction flow control, which control the status based upon buffer availability condition (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint is defined as isochronous, its status can be only VALID or DISABLED, so that the hardware cannot change the status of the endpoint after a successful transaction. If the software sets the STATRX bits to STALL or NAK for an isochronous endpoint, the USB peripheral behavior is not defined. These bits are read/write but they can be only toggled by writing 1. Host mode These bits are the host application controls to start, retry, or abort host transactions driven by the channel. These bits also contain information about the device answer to the last IN channel transaction and report the current status of the channel according to the following STATRX table of states: - DISABLE DISABLE value is reported in case of ACK acknowledge is received on a single-buffer channel. When in DISABLE state the channel is unused or not active waiting for application to restart it by writing VALID. Application can reset a VALID channel to DISABLE to abort a transaction. In this case the transaction is immediately removed from the host execution list. If the aborted transaction was already under execution it is regularly terminated on the USB but the relative VTRX interrupt is not generated. - VALID A host channel is actively trying to submit USB transaction to device only when in VALID state.VALID state can be set by software or automatically by hardware on a NAKED channel at the start of a new frame. When set to VALID, an host channel enters the host execution queue and waits permission from the host frame scheduler to submit its configured transaction. VALID value is also reported in case of ACK acknowledge is received on a double-buffered channel. In this case the channel remains active on the alternate buffer while application needs to read the current buffer and toggle DTOGTX. In case software is late in reading and the alternate buffer is not ready, the host channel is automatically suspended transparently to the application. The suspended double buffered channel is re-activated as soon as delay is recovered and DTOGTX is toggled. - NAK NAK value is reported in case of NAK acknowledge received. When in NAK state the channel is suspended and does not try to transmit. NAK state is moved to VALID by hardware at the start of the next frame, or software can change it to immediately retry transmission by writing it to VALID, or can disable it and abort the transaction by writing DISABLE - STALL STALL value is reported in case of STALL acknowledge received. When in STALL state the channel behaves as disabled. Application must not retry transmission but reset the USB and re-enumerate.
0x40005C14 C   FIELD 14w01 DTOGRX (wo): Data Toggle, for reception transfers If the endpoint/channel is not isochronous, this bit contains the expected value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be received. Hardware toggles this bit, when the ACK handshake is sent following a data packet reception having a matching data PID value; if the endpoint is defined as a control one, hardware clears this bit at the reception of a SETUP PID received from host (in device mode), while it sets this bit to 1 when SETUP transaction is acknowledged by device (in host mode). If the endpoint/channel is using the double-buffering feature this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used only to support packet buffer swapping for data transmission since no data toggling is used for this kind of channels/endpoints and only DATA0 packet are transmitted (Refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet reception, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint is not a control one) or to force specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGRX remains unchanged, while writing 1 makes the bit value toggle. This bit is read/write but it can be only toggled by writing 1.
0x40005C14 C   FIELD 15w01 VTRX (rw): USB valid transaction received Device mode This bit is set by the hardware when an OUT/SETUP transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. The type of occurred transaction, OUT or SETUP, can be determined from the SETUP bit described below. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written, writing 1 has no effect. Host mode This bit is set by the hardware when an IN transaction is successfully completed on this channel. The software can only clear this bit. If the CTRM bit in USB_CNTR register is set a generic interrupt condition is generated together with the channel related flag, which is always activated. - A transaction ended with a NAK sets this bit and NAK answer is reported to application reading the NAK state from the STATRX field of this register. One NAKed transaction keeps pending and is automatically retried by the host at the next frame, or the host can immediately retry by resetting STATRX state to VALID. - A transaction ended by STALL handshake sets this bit and the STALL answer is reported to application reading the STALL state from the STATRX field of this register. Host application must consequently disable the channel and re-enumerate. - A transaction ended with ACK handshake sets this bit If double buffering is disabled, ACK answer is reported by application reading the DISABLE state from the STATRX field of this register. Host application must read received data from USBRAM and re-arm the channel by writing VALID to the STATRX field of this register. If double buffering is enabled, ACK answer is reported by application reading VALID state from the STATRX field of this register. Host application must read received data from USBRAM and toggle the DTOGTX bit of this register. - A transaction ended with error sets this bit. Errors can be seen via the bits ERR_RX (host mode only). This bit is read/write but only 0 can be written, writing 1 has no effect.
0x40005C14 C   FIELD 16w07 DEVADDR (rw): Host mode Device address assigned to the endpoint during the enumeration process.
0x40005C14 C   FIELD 23w01 NAK (rw): Host mode This bit is set by the hardware when a device responds with a NAK. Software can use this bit to monitor the number of NAKs received from a device.
0x40005C14 C   FIELD 24w01 LS_EP (rw): Low speed endpoint
0x40005C14 C   FIELD 25w01 ERR_TX (rw): Received error for an OUT/SETUP transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an OUT or SETUP transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C14 C   FIELD 26w01 ERR_RX (rw): Received error for an IN transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an IN transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C14 C   FIELD 27w02 THREE_ERR_TX (rw): Three errors for an OUT or SETUP transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an OUT transaction. THREE_ERR_TX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C14 C   FIELD 29w02 THREE_ERR_RX (rw): Three errors for an IN transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an IN transaction. THREE_ERR_RX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C18 B  REGISTER USB_CHEP6R: USB endpoint/channel 6 register
0x40005C18 C   FIELD 00w04 EA (rw): endpoint/channel address Device mode Software must write in this field the 4-bit address used to identify the transactions directed to this endpoint. A value must be written before enabling the corresponding endpoint. Host mode Software must write in this field the 4-bit address used to identify the channel addressed by the host transaction.
0x40005C18 C   FIELD 04w02 STATTX (wo): Status bits, for transmission transfers
0x40005C18 C   FIELD 06w01 DTOGTX (wo): Data toggle, for transmission transfers If the endpoint/channel is non-isochronous, this bit contains the required value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be transmitted. Hardware toggles this bit when the ACK handshake is received from the USB host, following a data packet transmission. If the endpoint/channel is defined as a control one, hardware sets this bit to 1 at the reception of a SETUP PID addressed to this endpoint (in device mode) or when a SETUP transaction is acknowledged by the device (in host mode). If the endpoint/channel is using the double buffer feature, this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used to support packet buffer swapping since no data toggling is used for this sort of endpoints and only DATA0 packet are transmitted (refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet transmission, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint/channel is not a control one) or to force a specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGTX remains unchanged, while writing 1 makes the bit value to toggle. This bit is read/write but it can only be toggled by writing 1.
0x40005C18 C   FIELD 07w01 VTTX (rw): Valid USB transaction transmitted Device mode This bit is set by the hardware when an IN transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in the USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written. Host mode Same as VTRX behavior but for USB OUT and SETUP transactions.
0x40005C18 C   FIELD 08w01 EPKIND (rw): endpoint/channel kind The meaning of this bit depends on the endpoint/channel type configured by the UTYPE bits. Table1217 summarizes the different meanings. DBL_BUF: This bit is set by the software to enable the double-buffering feature for this bulk endpoint. The usage of double-buffered bulk endpoints is explained in Section134.5.3: Double-buffered endpoints and usage in Device mode. STATUS_OUT: This bit is set by the software to indicate that a status out transaction is expected: in this case all OUT transactions containing more than zero data bytes are answered STALL instead of ACK. This bit may be used to improve the robustness of the application to protocol errors during control transfers and its usage is intended for control endpoints only. When STATUS_OUT is reset, OUT transactions can have any number of bytes, as required.
0x40005C18 C   FIELD 09w02 UTYPE (rw): USB type of transaction These bits configure the behavior of this endpoint/channel as described in Table1216: Endpoint/channel type encoding. Channel0/Endpoint0 must always be a control endpoint/channel and each USB function must have at least one control endpoint/channel which has address 0, but there may be other control channels/endpoints if required. Only control channels/endpoints handle SETUP transactions, which are ignored by endpoints of other kinds. SETUP transactions cannot be answered with NAK or STALL. If a control endpoint/channel is defined as NAK, the USB peripheral does not answer, simulating a receive error, in the receive direction when a SETUP transaction is received. If the control endpoint/channel is defined as STALL in the receive direction, then the SETUP packet is accepted anyway, transferring data and issuing the CTR interrupt. The reception of OUT transactions is handled in the normal way, even if the endpoint/channel is a control one. Bulk and interrupt endpoints have very similar behavior and they differ only in the special feature available using the EPKIND configuration bit. The usage of isochronous channels/endpoints is explained in Section134.5.5: Isochronous transfers in Device mode
0x40005C18 C   FIELD 11w01 SETUP (ro): Setup transaction completed Device mode This bit is read-only and it is set by the hardware when the last completed transaction is a SETUP. This bit changes its value only for control endpoints. It must be examined, in the case of a successful receive transaction (VTRX event), to determine the type of transaction occurred. To protect the interrupt service routine from the changes in SETUP bits due to next incoming tokens, this bit is kept frozen while VTRX bit is at 1; its state changes when VTRX is at 0. This bit is read-only. Host mode This bit is set by the software to send a SETUP transaction on a control endpoint. This bit changes its value only for control endpoints. It is cleared by hardware when the SETUP transaction is acknowledged and VTTX interrupt generated.
0x40005C18 C   FIELD 12w02 STATRX (wo): Status bits, for reception transfers Device mode These bits contain information about the endpoint status, which are listed in Table1215: Reception status encoding on page11025. These bits can be toggled by software to initialize their value. When the application software writes 0, the value remains unchanged, while writing 1 makes the bit value to toggle. Hardware sets the STATRX bits to NAK when a correct transfer has occurred (VTRX1=11) corresponding to a OUT or SETUP (control only) transaction addressed to this endpoint, so the software has the time to elaborate the received data before it acknowledges a new transaction. Double-buffered bulk endpoints implement a special transaction flow control, which control the status based upon buffer availability condition (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint is defined as isochronous, its status can be only VALID or DISABLED, so that the hardware cannot change the status of the endpoint after a successful transaction. If the software sets the STATRX bits to STALL or NAK for an isochronous endpoint, the USB peripheral behavior is not defined. These bits are read/write but they can be only toggled by writing 1. Host mode These bits are the host application controls to start, retry, or abort host transactions driven by the channel. These bits also contain information about the device answer to the last IN channel transaction and report the current status of the channel according to the following STATRX table of states: - DISABLE DISABLE value is reported in case of ACK acknowledge is received on a single-buffer channel. When in DISABLE state the channel is unused or not active waiting for application to restart it by writing VALID. Application can reset a VALID channel to DISABLE to abort a transaction. In this case the transaction is immediately removed from the host execution list. If the aborted transaction was already under execution it is regularly terminated on the USB but the relative VTRX interrupt is not generated. - VALID A host channel is actively trying to submit USB transaction to device only when in VALID state.VALID state can be set by software or automatically by hardware on a NAKED channel at the start of a new frame. When set to VALID, an host channel enters the host execution queue and waits permission from the host frame scheduler to submit its configured transaction. VALID value is also reported in case of ACK acknowledge is received on a double-buffered channel. In this case the channel remains active on the alternate buffer while application needs to read the current buffer and toggle DTOGTX. In case software is late in reading and the alternate buffer is not ready, the host channel is automatically suspended transparently to the application. The suspended double buffered channel is re-activated as soon as delay is recovered and DTOGTX is toggled. - NAK NAK value is reported in case of NAK acknowledge received. When in NAK state the channel is suspended and does not try to transmit. NAK state is moved to VALID by hardware at the start of the next frame, or software can change it to immediately retry transmission by writing it to VALID, or can disable it and abort the transaction by writing DISABLE - STALL STALL value is reported in case of STALL acknowledge received. When in STALL state the channel behaves as disabled. Application must not retry transmission but reset the USB and re-enumerate.
0x40005C18 C   FIELD 14w01 DTOGRX (wo): Data Toggle, for reception transfers If the endpoint/channel is not isochronous, this bit contains the expected value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be received. Hardware toggles this bit, when the ACK handshake is sent following a data packet reception having a matching data PID value; if the endpoint is defined as a control one, hardware clears this bit at the reception of a SETUP PID received from host (in device mode), while it sets this bit to 1 when SETUP transaction is acknowledged by device (in host mode). If the endpoint/channel is using the double-buffering feature this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used only to support packet buffer swapping for data transmission since no data toggling is used for this kind of channels/endpoints and only DATA0 packet are transmitted (Refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet reception, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint is not a control one) or to force specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGRX remains unchanged, while writing 1 makes the bit value toggle. This bit is read/write but it can be only toggled by writing 1.
0x40005C18 C   FIELD 15w01 VTRX (rw): USB valid transaction received Device mode This bit is set by the hardware when an OUT/SETUP transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. The type of occurred transaction, OUT or SETUP, can be determined from the SETUP bit described below. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written, writing 1 has no effect. Host mode This bit is set by the hardware when an IN transaction is successfully completed on this channel. The software can only clear this bit. If the CTRM bit in USB_CNTR register is set a generic interrupt condition is generated together with the channel related flag, which is always activated. - A transaction ended with a NAK sets this bit and NAK answer is reported to application reading the NAK state from the STATRX field of this register. One NAKed transaction keeps pending and is automatically retried by the host at the next frame, or the host can immediately retry by resetting STATRX state to VALID. - A transaction ended by STALL handshake sets this bit and the STALL answer is reported to application reading the STALL state from the STATRX field of this register. Host application must consequently disable the channel and re-enumerate. - A transaction ended with ACK handshake sets this bit If double buffering is disabled, ACK answer is reported by application reading the DISABLE state from the STATRX field of this register. Host application must read received data from USBRAM and re-arm the channel by writing VALID to the STATRX field of this register. If double buffering is enabled, ACK answer is reported by application reading VALID state from the STATRX field of this register. Host application must read received data from USBRAM and toggle the DTOGTX bit of this register. - A transaction ended with error sets this bit. Errors can be seen via the bits ERR_RX (host mode only). This bit is read/write but only 0 can be written, writing 1 has no effect.
0x40005C18 C   FIELD 16w07 DEVADDR (rw): Host mode Device address assigned to the endpoint during the enumeration process.
0x40005C18 C   FIELD 23w01 NAK (rw): Host mode This bit is set by the hardware when a device responds with a NAK. Software can use this bit to monitor the number of NAKs received from a device.
0x40005C18 C   FIELD 24w01 LS_EP (rw): Low speed endpoint
0x40005C18 C   FIELD 25w01 ERR_TX (rw): Received error for an OUT/SETUP transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an OUT or SETUP transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C18 C   FIELD 26w01 ERR_RX (rw): Received error for an IN transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an IN transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C18 C   FIELD 27w02 THREE_ERR_TX (rw): Three errors for an OUT or SETUP transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an OUT transaction. THREE_ERR_TX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C18 C   FIELD 29w02 THREE_ERR_RX (rw): Three errors for an IN transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an IN transaction. THREE_ERR_RX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C1C B  REGISTER USB_CHEP7R: USB endpoint/channel 7 register
0x40005C1C C   FIELD 00w04 EA (rw): endpoint/channel address Device mode Software must write in this field the 4-bit address used to identify the transactions directed to this endpoint. A value must be written before enabling the corresponding endpoint. Host mode Software must write in this field the 4-bit address used to identify the channel addressed by the host transaction.
0x40005C1C C   FIELD 04w02 STATTX (wo): Status bits, for transmission transfers
0x40005C1C C   FIELD 06w01 DTOGTX (wo): Data toggle, for transmission transfers If the endpoint/channel is non-isochronous, this bit contains the required value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be transmitted. Hardware toggles this bit when the ACK handshake is received from the USB host, following a data packet transmission. If the endpoint/channel is defined as a control one, hardware sets this bit to 1 at the reception of a SETUP PID addressed to this endpoint (in device mode) or when a SETUP transaction is acknowledged by the device (in host mode). If the endpoint/channel is using the double buffer feature, this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used to support packet buffer swapping since no data toggling is used for this sort of endpoints and only DATA0 packet are transmitted (refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet transmission, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint/channel is not a control one) or to force a specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGTX remains unchanged, while writing 1 makes the bit value to toggle. This bit is read/write but it can only be toggled by writing 1.
0x40005C1C C   FIELD 07w01 VTTX (rw): Valid USB transaction transmitted Device mode This bit is set by the hardware when an IN transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in the USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written. Host mode Same as VTRX behavior but for USB OUT and SETUP transactions.
0x40005C1C C   FIELD 08w01 EPKIND (rw): endpoint/channel kind The meaning of this bit depends on the endpoint/channel type configured by the UTYPE bits. Table1217 summarizes the different meanings. DBL_BUF: This bit is set by the software to enable the double-buffering feature for this bulk endpoint. The usage of double-buffered bulk endpoints is explained in Section134.5.3: Double-buffered endpoints and usage in Device mode. STATUS_OUT: This bit is set by the software to indicate that a status out transaction is expected: in this case all OUT transactions containing more than zero data bytes are answered STALL instead of ACK. This bit may be used to improve the robustness of the application to protocol errors during control transfers and its usage is intended for control endpoints only. When STATUS_OUT is reset, OUT transactions can have any number of bytes, as required.
0x40005C1C C   FIELD 09w02 UTYPE (rw): USB type of transaction These bits configure the behavior of this endpoint/channel as described in Table1216: Endpoint/channel type encoding. Channel0/Endpoint0 must always be a control endpoint/channel and each USB function must have at least one control endpoint/channel which has address 0, but there may be other control channels/endpoints if required. Only control channels/endpoints handle SETUP transactions, which are ignored by endpoints of other kinds. SETUP transactions cannot be answered with NAK or STALL. If a control endpoint/channel is defined as NAK, the USB peripheral does not answer, simulating a receive error, in the receive direction when a SETUP transaction is received. If the control endpoint/channel is defined as STALL in the receive direction, then the SETUP packet is accepted anyway, transferring data and issuing the CTR interrupt. The reception of OUT transactions is handled in the normal way, even if the endpoint/channel is a control one. Bulk and interrupt endpoints have very similar behavior and they differ only in the special feature available using the EPKIND configuration bit. The usage of isochronous channels/endpoints is explained in Section134.5.5: Isochronous transfers in Device mode
0x40005C1C C   FIELD 11w01 SETUP (ro): Setup transaction completed Device mode This bit is read-only and it is set by the hardware when the last completed transaction is a SETUP. This bit changes its value only for control endpoints. It must be examined, in the case of a successful receive transaction (VTRX event), to determine the type of transaction occurred. To protect the interrupt service routine from the changes in SETUP bits due to next incoming tokens, this bit is kept frozen while VTRX bit is at 1; its state changes when VTRX is at 0. This bit is read-only. Host mode This bit is set by the software to send a SETUP transaction on a control endpoint. This bit changes its value only for control endpoints. It is cleared by hardware when the SETUP transaction is acknowledged and VTTX interrupt generated.
0x40005C1C C   FIELD 12w02 STATRX (wo): Status bits, for reception transfers Device mode These bits contain information about the endpoint status, which are listed in Table1215: Reception status encoding on page11025. These bits can be toggled by software to initialize their value. When the application software writes 0, the value remains unchanged, while writing 1 makes the bit value to toggle. Hardware sets the STATRX bits to NAK when a correct transfer has occurred (VTRX1=11) corresponding to a OUT or SETUP (control only) transaction addressed to this endpoint, so the software has the time to elaborate the received data before it acknowledges a new transaction. Double-buffered bulk endpoints implement a special transaction flow control, which control the status based upon buffer availability condition (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint is defined as isochronous, its status can be only VALID or DISABLED, so that the hardware cannot change the status of the endpoint after a successful transaction. If the software sets the STATRX bits to STALL or NAK for an isochronous endpoint, the USB peripheral behavior is not defined. These bits are read/write but they can be only toggled by writing 1. Host mode These bits are the host application controls to start, retry, or abort host transactions driven by the channel. These bits also contain information about the device answer to the last IN channel transaction and report the current status of the channel according to the following STATRX table of states: - DISABLE DISABLE value is reported in case of ACK acknowledge is received on a single-buffer channel. When in DISABLE state the channel is unused or not active waiting for application to restart it by writing VALID. Application can reset a VALID channel to DISABLE to abort a transaction. In this case the transaction is immediately removed from the host execution list. If the aborted transaction was already under execution it is regularly terminated on the USB but the relative VTRX interrupt is not generated. - VALID A host channel is actively trying to submit USB transaction to device only when in VALID state.VALID state can be set by software or automatically by hardware on a NAKED channel at the start of a new frame. When set to VALID, an host channel enters the host execution queue and waits permission from the host frame scheduler to submit its configured transaction. VALID value is also reported in case of ACK acknowledge is received on a double-buffered channel. In this case the channel remains active on the alternate buffer while application needs to read the current buffer and toggle DTOGTX. In case software is late in reading and the alternate buffer is not ready, the host channel is automatically suspended transparently to the application. The suspended double buffered channel is re-activated as soon as delay is recovered and DTOGTX is toggled. - NAK NAK value is reported in case of NAK acknowledge received. When in NAK state the channel is suspended and does not try to transmit. NAK state is moved to VALID by hardware at the start of the next frame, or software can change it to immediately retry transmission by writing it to VALID, or can disable it and abort the transaction by writing DISABLE - STALL STALL value is reported in case of STALL acknowledge received. When in STALL state the channel behaves as disabled. Application must not retry transmission but reset the USB and re-enumerate.
0x40005C1C C   FIELD 14w01 DTOGRX (wo): Data Toggle, for reception transfers If the endpoint/channel is not isochronous, this bit contains the expected value of the data toggle bit (01=1DATA0, 11=1DATA1) for the next data packet to be received. Hardware toggles this bit, when the ACK handshake is sent following a data packet reception having a matching data PID value; if the endpoint is defined as a control one, hardware clears this bit at the reception of a SETUP PID received from host (in device mode), while it sets this bit to 1 when SETUP transaction is acknowledged by device (in host mode). If the endpoint/channel is using the double-buffering feature this bit is used to support packet buffer swapping too (Refer to Section134.5.3: Double-buffered endpoints and usage in Device mode). If the endpoint/channel is isochronous, this bit is used only to support packet buffer swapping for data transmission since no data toggling is used for this kind of channels/endpoints and only DATA0 packet are transmitted (Refer to Section134.5.5: Isochronous transfers in Device mode). Hardware toggles this bit just after the end of data packet reception, since no handshake is used for isochronous transfers. This bit can also be toggled by the software to initialize its value (mandatory when the endpoint is not a control one) or to force specific data toggle/packet buffer usage. When the application software writes 0, the value of DTOGRX remains unchanged, while writing 1 makes the bit value toggle. This bit is read/write but it can be only toggled by writing 1.
0x40005C1C C   FIELD 15w01 VTRX (rw): USB valid transaction received Device mode This bit is set by the hardware when an OUT/SETUP transaction is successfully completed on this endpoint; the software can only clear this bit. If the CTRM bit in USB_CNTR register is set accordingly, a generic interrupt condition is generated together with the endpoint related interrupt condition, which is always activated. The type of occurred transaction, OUT or SETUP, can be determined from the SETUP bit described below. A transaction ended with a NAK or STALL handshake does not set this bit, since no data is actually transferred, as in the case of protocol errors or data toggle mismatches. This bit is read/write but only 0 can be written, writing 1 has no effect. Host mode This bit is set by the hardware when an IN transaction is successfully completed on this channel. The software can only clear this bit. If the CTRM bit in USB_CNTR register is set a generic interrupt condition is generated together with the channel related flag, which is always activated. - A transaction ended with a NAK sets this bit and NAK answer is reported to application reading the NAK state from the STATRX field of this register. One NAKed transaction keeps pending and is automatically retried by the host at the next frame, or the host can immediately retry by resetting STATRX state to VALID. - A transaction ended by STALL handshake sets this bit and the STALL answer is reported to application reading the STALL state from the STATRX field of this register. Host application must consequently disable the channel and re-enumerate. - A transaction ended with ACK handshake sets this bit If double buffering is disabled, ACK answer is reported by application reading the DISABLE state from the STATRX field of this register. Host application must read received data from USBRAM and re-arm the channel by writing VALID to the STATRX field of this register. If double buffering is enabled, ACK answer is reported by application reading VALID state from the STATRX field of this register. Host application must read received data from USBRAM and toggle the DTOGTX bit of this register. - A transaction ended with error sets this bit. Errors can be seen via the bits ERR_RX (host mode only). This bit is read/write but only 0 can be written, writing 1 has no effect.
0x40005C1C C   FIELD 16w07 DEVADDR (rw): Host mode Device address assigned to the endpoint during the enumeration process.
0x40005C1C C   FIELD 23w01 NAK (rw): Host mode This bit is set by the hardware when a device responds with a NAK. Software can use this bit to monitor the number of NAKs received from a device.
0x40005C1C C   FIELD 24w01 LS_EP (rw): Low speed endpoint
0x40005C1C C   FIELD 25w01 ERR_TX (rw): Received error for an OUT/SETUP transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an OUT or SETUP transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C1C C   FIELD 26w01 ERR_RX (rw): Received error for an IN transaction Host mode This bit is set by the hardware when an error (for example no answer by the device, CRC error, bit stuffing error, framing format violation, etc.) has occurred during an IN transaction on this channel. The software can only clear this bit. If the ERRM bit in USB_CNTR register is set, a generic interrupt condition is generated together with the channel related flag, which is always activated.
0x40005C1C C   FIELD 27w02 THREE_ERR_TX (rw): Three errors for an OUT or SETUP transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an OUT transaction. THREE_ERR_TX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C1C C   FIELD 29w02 THREE_ERR_RX (rw): Three errors for an IN transaction Host mode This bit is set by the hardware when 3 consecutive transaction errors occurred on the USB bus for an IN transaction. THREE_ERR_RX is not generated for isochronous transactions. The software can only clear this bit. Coding of the received error:
0x40005C40 B  REGISTER USB_CNTR: USB control register
0x40005C40 C   FIELD 00w01 USBRST (rw): USB Reset Software can set this bit to reset the USB core, exactly as it happens when receiving a RESET signaling on the USB.The USB peripheral, in response to a RESET, resets its internal protocol state machine. Reception and transmission are disabled until the RST_DCON bit is cleared. All configuration registers do not reset: the microcontroller must explicitly clear these registers (this is to ensure that the RST_DCON interrupt can be safely delivered, and any transaction immediately followed by a RESET can be completed). The function address and endpoint registers are reset by an USB reset event. Software sets this bit to drive USB reset state on the bus and initialize the device. USB reset terminates as soon as this bit is cleared by software.
0x40005C40 C   FIELD 01w01 PDWN (rw): Power down This bit is used to completely switch off all USB-related analog parts if it is required to completely disable the USB peripheral for any reason. When this bit is set, the USB peripheral is disconnected from the transceivers and it cannot be used.
0x40005C40 C   FIELD 02w01 SUSPRDY (ro): Suspend state effective This bit is set by hardware as soon as the suspend state entered through the SUSPEN control gets internally effective. In this state USB activity is suspended, USB clock is gated, transceiver is set in low power mode by disabling the differential receiver. Only asynchronous wake-up logic and single ended receiver is kept alive to detect remote wake-up or resume events. Software must poll this bit to confirm it to be set before any STOP mode entry. This bit is cleared by hardware simultaneously to the WAKEUP flag being set.
0x40005C40 C   FIELD 03w01 SUSPEN (rw): Suspend state enable Software can set this bit when the SUSP interrupt is received, which is issued when no traffic is received by the USB peripheral for 31ms. Software can also set this bit when the L1REQ interrupt is received with positive acknowledge sent. As soon as the suspend state is propagated internally all device activity is stopped, USB clock is gated, USB transceiver is set into low power mode and the SUSPRDY bit is set by hardware. In the case that device application wants to pursue more aggressive power saving by stopping the USB clock source and by moving the microcontroller to stop mode, as in the case of bus powered device application, it must first wait few cycles to see the SUSPRDY1=11 acknowledge the suspend request. This bit is cleared by hardware simultaneous with the WAKEUP flag set. Software can set this bit when host application has nothing scheduled for the next frames and wants to enter long term power saving. When set, it stops immediately SOF generation and any other host activity, gates the USB clock and sets the transceiver in low power mode. If any USB transaction is on-going at the time SUSPEN is set, suspend is entered at the end of the current transaction. As soon as suspend state is propagated internally and gets effective the SUSPRDY bit is set. In the case that host application wants to pursue more aggressive power saving by stopping the USB clock source and by moving the micro-controller to STOP mode, it must first wait few cycles to see SUSPRDY=1 acknowledge to the suspend request. This bit is cleared by hardware simultaneous with the WAKEUP flag set.
0x40005C40 C   FIELD 04w01 L2RES (rw): L2 remote wake-up / resume driver Device mode The microcontroller can set this bit to send remote wake-up signaling to the host. It must be activated, according to USB specifications, for no less than 11ms and no more than 151ms after which the host PC is ready to drive the resume sequence up to its end. Host mode Software sets this bit to send resume signaling to the device. Software clears this bit to send end of resume to device and restart SOF generation. In the context of remote wake up, this bit is to be set following the WAKEUP interrupt.
0x40005C40 C   FIELD 05w01 L1RES (rw): L1 remote wake-up / resume driver
0x40005C40 C   FIELD 07w01 L1REQM (rw): LPM L1 state request interrupt mask
0x40005C40 C   FIELD 08w01 ESOFM (rw): Expected start of frame interrupt mask
0x40005C40 C   FIELD 09w01 SOFM (rw): Start of frame interrupt mask
0x40005C40 C   FIELD 10w01 RST_DCONM (rw): USB reset request (Device mode) or device connect/disconnect (Host mode) interrupt mask
0x40005C40 C   FIELD 11w01 SUSPM (rw): Suspend mode interrupt mask
0x40005C40 C   FIELD 12w01 WKUPM (rw): Wake-up interrupt mask
0x40005C40 C   FIELD 13w01 ERRM (rw): Error interrupt mask
0x40005C40 C   FIELD 14w01 PMAOVRM (rw): Packet memory area over / underrun interrupt mask
0x40005C40 C   FIELD 15w01 CTRM (rw): Correct transfer interrupt mask
0x40005C40 C   FIELD 16w01 THR512M (rw): 512 byte threshold interrupt mask
0x40005C40 C   FIELD 17w01 DDISCM (rw): Device disconnection mask Host mode
0x40005C40 C   FIELD 31w01 HOST (rw): HOST mode HOST bit selects betweens host or device USB mode of operation. It must be set before enabling the USB peripheral by the function enable bit.
0x40005C44 B  REGISTER USB_ISTR: USB interrupt status register
0x40005C44 C   FIELD 00w04 IDN (ro): Device Endpoint / host channel identification number These bits are written by the hardware according to the host channel or device endpoint number, which generated the interrupt request. If several endpoint/channel transactions are pending, the hardware writes the identification number related to the endpoint/channel having the highest priority defined in the following way: two levels are defined, in order of priority: isochronous and double-buffered bulk channels/endpoints are considered first and then the others are examined. If more than one endpoint/channel from the same set is requesting an interrupt, the IDN bits in USB_ISTR register are assigned according to the lowest requesting register, CHEP0R having the highest priority followed by CHEP1R and so on. The application software can assign a register to each endpoint/channel according to this priority scheme, so as to order the concurring endpoint/channel requests in a suitable way. These bits are read only.
0x40005C44 C   FIELD 04w01 DIR (ro): Direction of transaction This bit is written by the hardware according to the direction of the successful transaction, which generated the interrupt request. If DIR bit1=10, VTTX bit is set in the USB_CHEPnR register related to the interrupting endpoint. The interrupting transaction is of IN type (data transmitted by the USB peripheral to the host PC). If DIR bit1=11, VTRX bit or both VTTX/VTRX are set in the USB_CHEPnR register related to the interrupting endpoint. The interrupting transaction is of OUT type (data received by the USB peripheral from the host PC) or two pending transactions are waiting to be processed. This information can be used by the application software to access the USB_CHEPnR bits related to the triggering transaction since it represents the direction having the interrupt pending. This bit is read-only.
0x40005C44 C   FIELD 07w01 L1REQ (rw): LPM L1 state request Device mode This bit is set by the hardware when LPM command to enter the L1 state is successfully received and acknowledged. This bit is read/write but only 0 can be written and writing 1 has no effect.
0x40005C44 C   FIELD 08w01 ESOF (rw): Expected start of frame Device mode This bit is set by the hardware when an SOF packet is expected but not received. The host sends an SOF packet each 11ms, but if the device does not receive it properly, the suspend timer issues this interrupt. If three consecutive ESOF interrupts are generated (for example three SOF packets are lost) without any traffic occurring in between, a SUSP interrupt is generated. This bit is set even when the missing SOF packets occur while the suspend timer is not yet locked. This bit is read/write but only 0 can be written and writing 1 has no effect.
0x40005C44 C   FIELD 09w01 SOF (rw): Start of frame This bit signals the beginning of a new USB frame and it is set when a SOF packet arrives through the USB bus. The interrupt service routine may monitor the SOF events to have a 11ms synchronization event to the USB host and to safely read the USB_FNR register which is updated at the SOF packet reception (this can be useful for isochronous applications). This bit is read/write but only 0 can be written and writing 1 has no effect.
0x40005C44 C   FIELD 10w01 RST_DCON (rw): USB reset request (Device mode) or device connect/disconnect (Host mode) Device mode This bit is set by hardware when an USB reset is released by the host and the bus returns to idle. USB reset state is internally detected after the sampling of 60 consecutive SE0 cycles. Host mode This bit is set by hardware when device connection or device disconnection is detected. Device connection is signaled after J state is sampled for 22 cycles consecutively from unconnected state. Device disconnection is signaled after SE0 state is seen for 22 bit times consecutively from connected state.
0x40005C44 C   FIELD 11w01 SUSP (rw): Suspend mode request Device mode This bit is set by the hardware when no traffic has been received for 31ms, indicating a suspend mode request from the USB bus. The suspend condition check is enabled immediately after any USB reset and it is disabled by the hardware when the suspend mode is active (SUSPEN=1) until the end of resume sequence. This bit is read/write but only 0 can be written and writing 1 has no effect.
0x40005C44 C   FIELD 12w01 WKUP (rw): Wake-up This bit is set to 1 by the hardware when, during suspend mode, activity is detected that wakes up the USB peripheral. This event asynchronously clears the SUSPRDY bit in the CTLR register and activates the USB_WAKEUP line, which can be used to notify the rest of the device (for example wake-up unit) about the start of the resume process. This bit is read/write but only 0 can be written and writing 1 has no effect.
0x40005C44 C   FIELD 13w01 ERR (rw): Error This flag is set whenever one of the errors listed below has occurred: NANS: No ANSwer. The timeout for a host response has expired. CRC: Cyclic redundancy check error. One of the received CRCs, either in the token or in the data, was wrong. BST: Bit stuffing error. A bit stuffing error was detected anywhere in the PID, data, and/or CRC. FVIO: Framing format violation. A non-standard frame was received (EOP not in the right place, wrong token sequence, etc.). The USB software can usually ignore errors, since the USB peripheral and the PC host manage retransmission in case of errors in a fully transparent way. This interrupt can be useful during the software development phase, or to monitor the quality of transmission over the USB bus, to flag possible problems to the user (for example loose connector, too noisy environment, broken conductor in the USB cable and so on). This bit is read/write but only 0 can be written and writing 1 has no effect.
0x40005C44 C   FIELD 14w01 PMAOVR (rw): Packet memory area over / underrun This bit is set if the microcontroller has not been able to respond in time to an USB memory request. The USB peripheral handles this event in the following way: During reception an ACK handshake packet is not sent, during transmission a bit-stuff error is forced on the transmitted stream; in both cases the host retries the transaction. The PMAOVR interrupt must never occur during normal operations. Since the failed transaction is retried by the host, the application software has the chance to speed-up device operations during this interrupt handling, to be ready for the next transaction retry; however this does not happen during isochronous transfers (no isochronous transaction is anyway retried) leading to a loss of data in this case. This bit is read/write but only 0 can be written and writing 1 has no effect.
0x40005C44 C   FIELD 15w01 CTR (ro): Completed transfer in host mode This bit is set by the hardware to indicate that an endpoint/channel has successfully completed a transaction; using DIR and IDN bits software can determine which endpoint/channel requested the interrupt. This bit is read-only.
0x40005C44 C   FIELD 16w01 THR512 (rw): 512 byte threshold interrupt This bit is set to 1 by the hardware when 512 bytes have been transmitted or received during isochronous transfers. This bit is read/write but only 0 can be written and writing 1 has no effect. Note that no information is available to indicate the associated channel/endpoint, however in practice only one ISO endpoint/channel with such large packets can be supported, so that channel.
0x40005C44 C   FIELD 17w01 DDISC (rw): Device connection Host mode This bit is set when a device connection is detected. This bit is read/write but only 0 can be written and writing 1 has no effect.
0x40005C44 C   FIELD 29w01 DCON_STAT (ro): Device connection status Host mode: This bit contains information about device connection status. It is set by hardware when a LS/FS device is attached to the host while it is reset when the device is disconnected.
0x40005C44 C   FIELD 30w01 LS_DCON (ro): Low speed device connected Host mode: This bit is set by hardware when an LS device connection is detected. Device connection is signaled after LS J-state is sampled for 22 consecutive cycles of the USB clock (481MHz) from the unconnected state.
0x40005C48 B  REGISTER USB_FNR: USB frame number register
0x40005C48 C   FIELD 00w11 FN (ro): Frame number This bit field contains the 11-bits frame number contained in the last received SOF packet. The frame number is incremented for every frame sent by the host and it is useful for isochronous transfers. This bit field is updated on the generation of an SOF interrupt.
0x40005C48 C   FIELD 11w02 LSOF (ro): Lost SOF Device mode These bits are written by the hardware when an ESOF interrupt is generated, counting the number of consecutive SOF packets lost. At the reception of an SOF packet, these bits are cleared.
0x40005C48 C   FIELD 13w01 LCK (ro): Locked Device mode This bit is set by the hardware when at least two consecutive SOF packets have been received after the end of an USB reset condition or after the end of an USB resume sequence. Once locked, the frame timer remains in this state until an USB reset or USB suspend event occurs.
0x40005C48 C   FIELD 14w01 RXDM (ro): Receive data - line status This bit can be used to observe the status of received data minus upstream port data line. It can be used during end-of-suspend routines to help determining the wake-up event.
0x40005C48 C   FIELD 15w01 RXDP (ro): Receive data + line status This bit can be used to observe the status of received data plus upstream port data line. It can be used during end-of-suspend routines to help determining the wake-up event.
0x40005C4C B  REGISTER USB_DADDR: USB Device address
0x40005C4C C   FIELD 00w07 ADD (rw): Device address Device mode These bits contain the USB function address assigned by the host PC during the enumeration process. Both this field and the endpoint/channel address (EA) field in the associated USB_CHEPnR register must match with the information contained in a USB token in order to handle a transaction to the required endpoint. Host mode These bits contain the address transmitted with the LPM transaction
0x40005C4C C   FIELD 07w01 EF (rw): Enable function This bit is set by the software to enable the USB Device. The address of this device is contained in the following ADD[6:0] bits. If this bit is at 0 no transactions are handled, irrespective of the settings of USB_CHEPnR registers.
0x40005C54 B  REGISTER USB_LPMCSR: LPM control and status register
0x40005C54 C   FIELD 00w01 LPMEN (rw): LPM support enable Device mode This bit is set by the software to enable the LPM support within the USB Device. If this bit is at 0 no LPM transactions are handled.
0x40005C54 C   FIELD 01w01 LPMACK (rw): LPM token acknowledge enable Device mode: The NYET/ACK is returned only on a successful LPM transaction: No errors in both the EXT token and the LPM token (else ERROR) A valid bLinkState = 0001B (L1) is received (else STALL)
0x40005C54 C   FIELD 03w01 REMWAKE (ro): bRemoteWake value Device mode This bit contains the bRemoteWake value received with last ACKed LPM Token
0x40005C54 C   FIELD 04w04 BESL (ro): BESL value Device mode These bits contain the BESL value received with last ACKed LPM Token
0x40005C58 B  REGISTER USB_BCDR: Battery charging detector
0x40005C58 C   FIELD 00w01 BCDEN (rw): Battery charging detector (BCD) enable Device mode This bit is set by the software to enable the BCD support within the USB Device. When enabled, the USB PHY is fully controlled by BCD and cannot be used for normal communication. Once the BCD discovery is finished, the BCD must be placed in OFF mode by clearing this bit to 0 in order to allow the normal USB operation.
0x40005C58 C   FIELD 01w01 DCDEN (rw): Data contact detection (DCD) mode enable Device mode This bit is set by the software to put the BCD into DCD mode. Only one detection mode (DCD, PD, SD or OFF) must be selected to work correctly.
0x40005C58 C   FIELD 02w01 PDEN (rw): Primary detection (PD) mode enable Device mode This bit is set by the software to put the BCD into PD mode. Only one detection mode (DCD, PD, SD or OFF) must be selected to work correctly.
0x40005C58 C   FIELD 03w01 SDEN (rw): Secondary detection (SD) mode enable Device mode This bit is set by the software to put the BCD into SD mode. Only one detection mode (DCD, PD, SD or OFF) must be selected to work correctly.
0x40005C58 C   FIELD 04w01 DCDET (ro): Data contact detection (DCD) status Device mode This bit gives the result of DCD.
0x40005C58 C   FIELD 05w01 PDET (ro): Primary detection (PD) status Device mode This bit gives the result of PD.
0x40005C58 C   FIELD 06w01 SDET (ro): Secondary detection (SD) status Device mode This bit gives the result of SD.
0x40005C58 C   FIELD 07w01 PS2DET (ro): DM pull-up detection status Device mode This bit is active only during PD and gives the result of comparison between DM voltage level and V<sub>LGC</sub> threshold. In normal situation, the DM level must be below this threshold. If it is above, it means that the DM is externally pulled high. This can be caused by connection to a PS2 port (which pulls-up both DP and DM lines) or to some proprietary charger not following the BCD specification.
0x40005C58 C   FIELD 15w01 DPPU_DPD (rw): DP pull-up / DPDM pull-down Device mode This bit is set by software to enable the embedded pull-up on DP line. Clearing it to 0 can be used to signal disconnect to the host when needed by the user software. Host mode This bit is set by software to enable the embedded pull-down on DP and DM lines.
0x40006C00 A PERIPHERAL CRS
0x40006C00 B  REGISTER CRS_CR: CRS control register
0x40006C00 C   FIELD 00w01 SYNCOKIE (rw): SYNC event OK interrupt enable
0x40006C00 C   FIELD 01w01 SYNCWARNIE (rw): SYNC warning interrupt enable
0x40006C00 C   FIELD 02w01 ERRIE (rw): Synchronization or trimming error interrupt enable
0x40006C00 C   FIELD 03w01 ESYNCIE (rw): Expected SYNC interrupt enable
0x40006C00 C   FIELD 05w01 CEN (rw): Frequency error counter enable This bit enables the oscillator clock for the frequency error counter. When this bit is set, the CRS_CFGR register is write-protected and cannot be modified.
0x40006C00 C   FIELD 06w01 AUTOTRIMEN (rw): Automatic trimming enable This bit enables the automatic hardware adjustment of TRIM bits according to the measured frequency error between two SYNC events. If this bit is set, the TRIM bits are read-only. The TRIM value can be adjusted by hardware by one or two steps at a time, depending on the measured frequency error value. Refer to Section15.4.4 for more details.
0x40006C00 C   FIELD 07w01 SWSYNC (rw): Generate software SYNC event This bit is set by software in order to generate a software SYNC event. It is automatically cleared by hardware.
0x40006C00 C   FIELD 08w07 TRIM (rw): HSI48 oscillator smooth trimming The default value of the HSI48 oscillator smooth trimming is 64, which corresponds to the middle of the trimming interval.
0x40006C04 B  REGISTER CRS_CFGR: CRS configuration register
0x40006C04 C   FIELD 00w16 RELOAD (rw): Counter reload value RELOAD is the value to be loaded in the frequency error counter with each SYNC event. Refer to Section15.4.3 for more details about counter behavior.
0x40006C04 C   FIELD 16w08 FELIM (rw): Frequency error limit FELIM contains the value to be used to evaluate the captured frequency error value latched in the FECAP[15:0] bits of the CRS_ISR register. Refer to Section15.4.4 for more details about FECAP evaluation.
0x40006C04 C   FIELD 24w03 SYNCDIV (rw): SYNC divider These bits are set and cleared by software to control the division factor of the SYNC signal.
0x40006C04 C   FIELD 28w02 SYNCSRC (rw): SYNC signal source selection These bits are set and cleared by software to select the SYNC signal source (see Table122): Note: When using USB LPM (Link Power Management) and the device is in Sleep mode, the periodic USB SOF is not generated by the host. No SYNC signal is therefore provided to the CRS to calibrate the HSI48 oscillator on the run. To guarantee the required clock precision after waking up from Sleep mode, the LSE or reference clock on the GPIOs must be used as SYNC signal.
0x40006C04 C   FIELD 31w01 SYNCPOL (rw): SYNC polarity selection This bit is set and cleared by software to select the input polarity for the SYNC signal source.
0x40006C08 B  REGISTER CRS_ISR: CRS interrupt and status register
0x40006C08 C   FIELD 00w01 SYNCOKF (ro): SYNC event OK flag This flag is set by hardware when the measured frequency error is smaller than FELIM * 3. This means that either no adjustment of the TRIM value is needed or that an adjustment by one trimming step is enough to compensate the frequency error. An interrupt is generated if the SYNCOKIE bit is set in the CRS_CR register. It is cleared by software by setting the SYNCOKC bit in the CRS_ICR register.
0x40006C08 C   FIELD 01w01 SYNCWARNF (ro): SYNC warning flag This flag is set by hardware when the measured frequency error is greater than or equal to FELIM * 3, but smaller than FELIM * 128. This means that to compensate the frequency error, the TRIM value must be adjusted by two steps or more. An interrupt is generated if the SYNCWARNIE bit is set in the CRS_CR register. It is cleared by software by setting the SYNCWARNC bit in the CRS_ICR register.
0x40006C08 C   FIELD 02w01 ERRF (ro): Error flag This flag is set by hardware in case of any synchronization or trimming error. It is the logical OR of the TRIMOVF, SYNCMISS and SYNCERR bits. An interrupt is generated if the ERRIE bit is set in the CRS_CR register. It is cleared by software in reaction to setting the ERRC bit in the CRS_ICR register, which clears the TRIMOVF, SYNCMISS and SYNCERR bits.
0x40006C08 C   FIELD 03w01 ESYNCF (ro): Expected SYNC flag This flag is set by hardware when the frequency error counter reached a zero value. An interrupt is generated if the ESYNCIE bit is set in the CRS_CR register. It is cleared by software by setting the ESYNCC bit in the CRS_ICR register.
0x40006C08 C   FIELD 08w01 SYNCERR (ro): SYNC error This flag is set by hardware when the SYNC pulse arrives before the ESYNC event and the measured frequency error is greater than or equal to FELIM * 128. This means that the frequency error is too big (internal frequency too low) to be compensated by adjusting the TRIM value, and that some other action has to be taken. An interrupt is generated if the ERRIE bit is set in the CRS_CR register. It is cleared by software by setting the ERRC bit in the CRS_ICR register.
0x40006C08 C   FIELD 09w01 SYNCMISS (ro): SYNC missed This flag is set by hardware when the frequency error counter reaches value FELIM * 128 and no SYNC is detected, meaning either that a SYNC pulse was missed, or the frequency error is too big (internal frequency too high) to be compensated by adjusting the TRIM value, hence some other action must be taken. At this point, the frequency error counter is stopped (waiting for a next SYNC), and an interrupt is generated if the ERRIE bit is set in the CRS_CR register. It is cleared by software by setting the ERRC bit in the CRS_ICR register.
0x40006C08 C   FIELD 10w01 TRIMOVF (ro): Trimming overflow or underflow This flag is set by hardware when the automatic trimming tries to over- or under-flow the TRIM value. An interrupt is generated if the ERRIE bit is set in the CRS_CR register. It is cleared by software by setting the ERRC bit in the CRS_ICR register.
0x40006C08 C   FIELD 15w01 FEDIR (ro): Frequency error direction FEDIR is the counting direction of the frequency error counter latched in the time of the last SYNC event. It shows whether the actual frequency is below or above the target.
0x40006C08 C   FIELD 16w16 FECAP (ro): Frequency error capture FECAP is the frequency error counter value latched in the time of the last SYNC event. Refer to Section15.4.4 for more details about FECAP usage.
0x40006C0C B  REGISTER CRS_ICR: CRS interrupt flag clear register
0x40006C0C C   FIELD 00w01 SYNCOKC (rw): SYNC event OK clear flag Writing 1 to this bit clears the SYNCOKF flag in the CRS_ISR register.
0x40006C0C C   FIELD 01w01 SYNCWARNC (rw): SYNC warning clear flag Writing 1 to this bit clears the SYNCWARNF flag in the CRS_ISR register.
0x40006C0C C   FIELD 02w01 ERRC (rw): Error clear flag Writing 1 to this bit clears TRIMOVF, SYNCMISS and SYNCERR bits and consequently also the ERRF flag in the CRS_ISR register.
0x40006C0C C   FIELD 03w01 ESYNCC (rw): Expected SYNC clear flag Writing 1 to this bit clears the ESYNCF flag in the CRS_ISR register.
0x40007000 A PERIPHERAL PWR
0x40007000 B  REGISTER PWR_CR1: Power control register 1
0x40007000 C   FIELD 00w03 LPMS (rw): Low-power mode selection These bits select the low-power mode entered when CPU enters the deepsleep mode. 1xx: Shutdown mode Note: If LPR bit is set, Stop 2 mode cannot be selected and Stop 1 mode shall be entered instead of Stop 2. Note: In Standby mode, SRAM2 can be preserved or not, depending on RRS bit configuration in PWR_CR3.
0x40007000 C   FIELD 03w01 FPD_STOP (rw): Flash memory powered down during Stop mode. This bit determines whether the flash memory is put in power-down mode or remains in idle mode when the device enters Stop mode.
0x40007000 C   FIELD 04w01 FPD_LPRUN (rw): Flash memory powered down during Low-power run mode. This bit determines whether the flash memory is put in power-down mode or remains in idle mode when the device enters Low-power sleep mode.
0x40007000 C   FIELD 05w01 FPD_LPSLP (rw): Flash memory powered down during Low-power sleep mode. This bit determines whether the flash memory is put in power-down mode or remains in idle mode when the device enters Low-power sleep mode.
0x40007000 C   FIELD 08w01 DBP (rw): Disable backup domain write protection In reset state, the RTC and backup registers are protected against parasitic write access. This bit must be set to enable write access to these registers.
0x40007000 C   FIELD 09w02 VOS (rw): Voltage scaling range selection
0x40007000 C   FIELD 14w01 LPR (rw): Low-power run When this bit is set, the regulator is switched from main mode (MR) to low-power mode (LPR). Note: Stop 2 mode cannot be entered when LPR bit is set. Stop 1 is entered instead.
0x40007004 B  REGISTER PWR_CR2: Power control register 2
0x40007004 C   FIELD 00w01 PVDE (rw): Programmable voltage detector enable Note: This bit is write-protected when the bit PVDL (PVD Lock) is set in the SYSCFG_CBR register. Note: This bit is reset only by a system reset.
0x40007004 C   FIELD 01w03 PLS (rw): Programmable voltage detector level selection. These bits select the voltage threshold detected by the programmable voltage detector: Note: These bits are write-protected when the bit PVDL (PVD Lock) is set in the SYSCFG_CBR register. Note: These bits are reset only by a system reset.
0x40007004 C   FIELD 04w01 PVME1 (rw): Peripheral voltage monitoring 1 enable: V<sub>DDUSB</sub> vs. 1.21V
0x40007004 C   FIELD 05w01 PVME3 (rw): Peripheral voltage monitoring 3 enable: V<sub>DDA</sub> vs. 1.621V
0x40007004 C   FIELD 06w01 PVME4 (rw): Peripheral voltage monitoring 4 enable: V<sub>DDA</sub> vs. 1.861V
0x40007004 C   FIELD 10w01 USV (rw): V<sub>DDUSB</sub> USB supply valid This bit is used to validate the V<sub>DDUSB</sub> supply for electrical and logical isolation purpose. Setting this bit is mandatory to use the USB FS peripheral. If V<sub>DDUSB</sub> is not always present in the application, the PVM can be used to determine whether this supply is ready or not.
0x40007008 B  REGISTER PWR_CR3: Power control register 3
0x40007008 C   FIELD 00w01 EWUP1 (rw): Enable Wake-up pin WKUP1 When this bit is set, the external wake-up pin WKUP1 is enabled and triggers a wake-up from Standby or Shutdown event when a rising or a falling edge occurs. The active edge is configured via the WP1 bit in the PWR_CR4 register.
0x40007008 C   FIELD 01w01 EWUP2 (rw): Enable Wake-up pin WKUP2 When this bit is set, the external wake-up pin WKUP2 is enabled and triggers a wake-up from Standby or Shutdown event when a rising or a falling edge occurs. The active edge is configured via the WP2 bit in the PWR_CR4 register.
0x40007008 C   FIELD 02w01 EWUP3 (rw): Enable Wake-up pin WKUP3 When this bit is set, the external wake-up pin WKUP3 is enabled and triggers a wake-up from Standby or Shutdown event when a rising or a falling edge occurs. The active edge is configured via the WP3 bit in the PWR_CR4 register.
0x40007008 C   FIELD 03w01 EWUP4 (rw): Enable Wake-up pin WKUP4 When this bit is set, the external wake-up pin WKUP4 is enabled and triggers a wake-up from Standby or Shutdown event when a rising or a falling edge occurs. The active edge is configured via the WP4 bit in the PWR_CR4 register.
0x40007008 C   FIELD 04w01 EWUP5 (rw): Enable Wake-up pin WKUP5 When this bit is set, the external wake-up pin WKUP5 is enabled and triggers a wake-up from Standby or Shutdown event when a rising or a falling edge occurs.The active edge is configured via the WP5 bit in the PWR_CR4 register.
0x40007008 C   FIELD 06w01 EWUP7 (rw): Enable Wake-up pin WKUP7. When this bit is set, the external wake-up pin WKUP7 is enabled and triggers a wake-up from Standby or Shutdown event when a rising or a falling edge occurs.The active edge is configured via the WP7 bit in the PWR_CR4 register.
0x40007008 C   FIELD 08w01 RRS (rw): SRAM2 retention in Standby mode
0x40007008 C   FIELD 09w01 ENULP (rw): Enable ULP sampling When this bit is set, the BORL, BORH and PVD are periodically sampled instead continuous monitoring to reduce power consumption. Fast supply drop between two sample/compare phases is not detected in this mode. This bit has impact only on STOP2, Standby and shutdown low power modes.
0x40007008 C   FIELD 10w01 APC (rw): Apply pull-up and pull-down configuration When this bit is set, the I/O pull-up and pull-down configurations defined in the PWR_PUCRx and PWR_PDCRx registers are applied. When this bit is cleared, the PWR_PUCRx and PWR_PDCRx registers are not applied to the I/Os, instead the I/Os are in floating mode during Standby or configured according GPIO controller GPIOx_PUPDR register during RUN mode.
0x40007008 C   FIELD 15w01 EIWUL (rw): Enable internal wake-up line
0x4000700C B  REGISTER PWR_CR4: Power control register 4
0x4000700C C   FIELD 00w01 WP1 (rw): Wake-up pin WKUP1 polarity This bit defines the polarity used for an event detection on external wake-up pin, WKUP1
0x4000700C C   FIELD 01w01 WP2 (rw): Wake-up pin WKUP2 polarity This bit defines the polarity used for an event detection on external wake-up pin, WKUP2
0x4000700C C   FIELD 02w01 WP3 (rw): Wake-up pin WKUP3 polarity This bit defines the polarity used for an event detection on external wake-up pin, WKUP3
0x4000700C C   FIELD 03w01 WP4 (rw): Wake-up pin WKUP4 polarity This bit defines the polarity used for an event detection on external wake-up pin, WKUP4
0x4000700C C   FIELD 04w01 WP5 (rw): Wake-up pin WKUP5 polarity This bit defines the polarity used for an event detection on external wake-up pin, WKUP5
0x4000700C C   FIELD 06w01 WP7 (rw): Wake-up pin WKUP7 polarity This bit defines the polarity used for an event detection on external wake-up pin, WKUP7
0x4000700C C   FIELD 08w01 VBE (rw): V<sub>BAT</sub> battery charging enable
0x4000700C C   FIELD 09w01 VBRS (rw): V<sub>BAT</sub> battery charging resistor selection
0x40007010 B  REGISTER PWR_SR1: Power status register 1
0x40007010 C   FIELD 00w01 WUF1 (ro): Wake-up flag 1 This bit is set when a wake-up event is detected on wake-up pin, WKUP1. It is cleared by writing 1 in the CWUF1 bit of the PWR_SCR register.
0x40007010 C   FIELD 01w01 WUF2 (ro): Wake-up flag 2 This bit is set when a wake-up event is detected on wake-up pin, WKUP2. It is cleared by writing 1 in the CWUF2 bit of the PWR_SCR register.
0x40007010 C   FIELD 02w01 WUF3 (ro): Wake-up flag 3 This bit is set when a wake-up event is detected on wake-up pin, WKUP3. It is cleared by writing 1 in the CWUF3 bit of the PWR_SCR register.
0x40007010 C   FIELD 03w01 WUF4 (ro): Wake-up flag 4 This bit is set when a wake-up event is detected on wake-up pin,WKUP4. It is cleared by writing 1 in the CWUF4 bit of the PWR_SCR register.
0x40007010 C   FIELD 04w01 WUF5 (ro): Wake-up flag 5 This bit is set when a wake-up event is detected on wake-up pin, WKUP5. It is cleared by writing 1 in the CWUF5 bit of the PWR_SCR register.
0x40007010 C   FIELD 06w01 WUF7 (ro): Wake-up flag 7 This bit is set when a wake-up event is detected on wake-up pin, WKUP7. It is cleared by writing 1 in the CWUF7 bit of the PWR_SCR register.
0x40007010 C   FIELD 08w01 SBF (ro): Standby flag This bit is set by hardware when the device enters the Standby mode and is cleared by setting the CSBF bit in the PWR_SCR register, or by a power-on reset. It is not cleared by the system reset.
0x40007010 C   FIELD 09w03 STOPF (ro): Stop Flags These bits are set by hardware when the device enters any stop mode and are cleared by setting the CSBF bit in the PWR_SCR register, or by a power-on reset. It is not cleared by the system reset.
0x40007010 C   FIELD 15w01 WUFI (ro): Wake-up flag internal This bit is set when a wake-up is detected on the internal wake-up line. It is cleared when all internal wake-up sources are cleared.
0x40007014 B  REGISTER PWR_SR2: Power status register 2
0x40007014 C   FIELD 07w01 FLASH_RDY (ro): Flash ready flag This bit is set by hardware to indicate when the flash memory is readey to be accessed after wake-up from power-down. To place the flash memory in power-down, set either FPD_LPRUN, FPD_LPSLP or FPD_STP bits. Note : If the system boots from SRAM, the user application must wait until the FLASH_RDY bit is set, prior to jumping to flash memory.
0x40007014 C   FIELD 08w01 REGLPS (ro): Low-power regulator started This bit provides the information whether the low-power regulator is ready after a power-on reset or a Standby/Shutdown. If the Standby mode is entered while REGLPS bit is still cleared, the wake-up from Standby mode time may be increased.
0x40007014 C   FIELD 09w01 REGLPF (ro): Low-power regulator flag This bit is set by hardware when the MCU is in Low-power run mode. When the MCU exits from the Low-power run mode, this bit remains at 1 until the regulator is ready in main mode. A polling on this bit must be done before increasing the product frequency. This bit is cleared by hardware when the regulator is ready.
0x40007014 C   FIELD 10w01 VOSF (ro): Voltage scaling flag A delay is required for the internal regulator to be ready after the voltage scaling has been changed. VOSF indicates that the regulator reached the voltage level defined with VOS bits of the PWR_CR1 register.
0x40007014 C   FIELD 11w01 PVDO (ro): Programmable voltage detector output
0x40007014 C   FIELD 12w01 PVMO1 (ro): Peripheral voltage monitoring output: V<sub>DDUSB</sub> vs. 1.2 V Note: PVMO1 is cleared when PVM1 is disabled (PVME1 = 0). After enabling PVM1, the PVM1 output is valid after the PVM1 wake-up time.
0x40007014 C   FIELD 14w01 PVMO3 (ro): Peripheral voltage monitoring output: V<sub>DDA</sub> vs. 1.621V Note: PVMO3 is cleared when PVM3 is disabled (PVME3 = 0). After enabling PVM3, the PVM3 output is valid after the PVM3 wake-up time.
0x40007014 C   FIELD 15w01 PVMO4 (ro): Peripheral voltage monitoring output: V<sub>DDA</sub> vs. 2.21V Note: PVMO4 is cleared when PVM4 is disabled (PVME4 = 0). After enabling PVM4, the PVM4 output is valid after the PVM4 wake-up time.
0x40007018 B  REGISTER PWR_SCR: Power status clear register
0x40007018 C   FIELD 00w01 CWUF1 (wo): Clear wake-up flag 1 Setting this bit clears the WUF1 flag in the PWR_SR1 register.
0x40007018 C   FIELD 01w01 CWUF2 (wo): Clear wake-up flag 2 Setting this bit clears the WUF2 flag in the PWR_SR1 register.
0x40007018 C   FIELD 02w01 CWUF3 (wo): Clear wake-up flag 3 Setting this bit clears the WUF3 flag in the PWR_SR1 register.
0x40007018 C   FIELD 03w01 CWUF4 (wo): Clear wake-up flag 4 Setting this bit clears the WUF4 flag in the PWR_SR1 register.
0x40007018 C   FIELD 04w01 CWUF5 (wo): Clear wake-up flag 5 Setting this bit clears the WUF5 flag in the PWR_SR1 register.
0x40007018 C   FIELD 06w01 CWUF7 (wo): Clear wake-up flag 7 Setting this bit clears the WUF7 flag in the PWR_SR1 register.
0x40007018 C   FIELD 08w01 CSBF (wo): Clear standby flag Setting this bit clears the SBF flag in the PWR_SR1 register.
0x40007020 B  REGISTER PWR_PUCRA: Power Port A pull-up control register
0x40007020 C   FIELD 00w01 PU0 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 01w01 PU1 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 02w01 PU2 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 03w01 PU3 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 04w01 PU4 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 05w01 PU5 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 06w01 PU6 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 07w01 PU7 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 08w01 PU8 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 09w01 PU9 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 10w01 PU10 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 11w01 PU11 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 12w01 PU12 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 13w01 PU13 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 14w01 PU14 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007020 C   FIELD 15w01 PU15 (rw): Port A pull-up bit y (y1=115 to 0) When set, this bit activates the pull-up on PA[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007024 B  REGISTER PWR_PDCRA: Power Port A pull-down control register
0x40007024 C   FIELD 00w01 PD0 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 01w01 PD1 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 02w01 PD2 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 03w01 PD3 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 04w01 PD4 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 05w01 PD5 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 06w01 PD6 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 07w01 PD7 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 08w01 PD8 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 09w01 PD9 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 10w01 PD10 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 11w01 PD11 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 12w01 PD12 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 13w01 PD13 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 14w01 PD14 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007024 C   FIELD 15w01 PD15 (rw): Port A pull-down bit y When set, this bit activates the pull-down on PA[y] when APC bit is set in PWR_CR3 register.
0x40007028 B  REGISTER PWR_PUCRB: Power Port B pull-up control register
0x40007028 C   FIELD 00w01 PU0 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 01w01 PU1 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 02w01 PU2 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 03w01 PU3 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 04w01 PU4 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 05w01 PU5 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 06w01 PU6 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 07w01 PU7 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 08w01 PU8 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 09w01 PU9 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 10w01 PU10 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 11w01 PU11 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 12w01 PU12 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 13w01 PU13 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 14w01 PU14 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x40007028 C   FIELD 15w01 PU15 (rw): Port B pull-up bit y When set, this bit activates the pull-up on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C B  REGISTER PWR_PDCRB: Power Port B pull-down control register
0x4000702C C   FIELD 00w01 PD0 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 01w01 PD1 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 02w01 PD2 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 03w01 PD3 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 04w01 PD4 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 05w01 PD5 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 06w01 PD6 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 07w01 PD7 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 08w01 PD8 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 09w01 PD9 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 10w01 PD10 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 11w01 PD11 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 12w01 PD12 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 13w01 PD13 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 14w01 PD14 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x4000702C C   FIELD 15w01 PD15 (rw): Port B pull-down bit y When set, this bit activates the pull-down on PB[y] when APC bit is set in PWR_CR3 register.
0x40007030 B  REGISTER PWR_PUCRC: Power Port C pull-up control register
0x40007030 C   FIELD 00w01 PU0 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 01w01 PU1 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 02w01 PU2 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 03w01 PU3 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 04w01 PU4 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 05w01 PU5 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 06w01 PU6 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 07w01 PU7 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 08w01 PU8 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 09w01 PU9 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 10w01 PU10 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 11w01 PU11 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 12w01 PU12 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 13w01 PU13 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 14w01 PU14 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007030 C   FIELD 15w01 PU15 (rw): Port C pull-up bit y When set, this bit activates the pull-up on PC[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007034 B  REGISTER PWR_PDCRC: Power Port C pull-down control register
0x40007034 C   FIELD 00w01 PD0 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 01w01 PD1 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 02w01 PD2 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 03w01 PD3 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 04w01 PD4 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 05w01 PD5 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 06w01 PD6 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 07w01 PD7 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 08w01 PD8 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 09w01 PD9 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 10w01 PD10 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 11w01 PD11 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 12w01 PD12 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 13w01 PD13 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 14w01 PD14 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007034 C   FIELD 15w01 PD15 (rw): Port C pull-down bit y When set, this bit activates the pull-down on PC[y] when APC bit is set in PWR_CR3 register.
0x40007038 B  REGISTER PWR_PUCRD: Power Port D pull-up control register
0x40007038 C   FIELD 00w01 PU0 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 01w01 PU1 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 02w01 PU2 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 03w01 PU3 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 04w01 PU4 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 05w01 PU5 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 06w01 PU6 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 08w01 PU8 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 09w01 PU9 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 10w01 PU10 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 11w01 PU11 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 12w01 PU12 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007038 C   FIELD 13w01 PU13 (rw): Port D pull-up bit y When set, this bit activates the pull-up on PD[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x4000703C B  REGISTER PWR_PDCRD: Power Port D pull-down control register
0x4000703C C   FIELD 00w01 PD0 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 01w01 PD1 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 02w01 PD2 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 03w01 PD3 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 04w01 PD4 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 05w01 PD5 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 06w01 PD6 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 08w01 PD8 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 09w01 PD9 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 10w01 PD10 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 11w01 PD11 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 12w01 PD12 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x4000703C C   FIELD 13w01 PD13 (rw): Port D pull-down bit y When set, this bit activates the pull-down on PD[y] when APC bit is set in PWR_CR3 register.
0x40007040 B  REGISTER PWR_PUCRE: Power Port E pull-up control register
0x40007040 C   FIELD 03w01 PU3 (rw): Port E pull-up bit 3 When set, this bit activates the pull-up on PE[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007040 C   FIELD 07w01 PU7 (rw): Port E pull-up bit y When set, this bit activates the pull-up on PE[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007040 C   FIELD 08w01 PU8 (rw): Port E pull-up bit y When set, this bit activates the pull-up on PE[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007040 C   FIELD 09w01 PU9 (rw): Port E pull-up bit y When set, this bit activates the pull-up on PE[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007044 B  REGISTER PWR_PDCRE: Power Port E pull-down control register
0x40007044 C   FIELD 03w01 PD3 (rw): Port E pull-down bit 3 When set, this bit activates the pull-down on PE[y] when APC bit is set in PWR_CR3 register.
0x40007044 C   FIELD 07w01 PD7 (rw): Port E pull-down bit y When set, this bit activates the pull-down on PE[y] when APC bit is set in PWR_CR3 register.
0x40007044 C   FIELD 08w01 PD8 (rw): Port E pull-down bit y When set, this bit activates the pull-down on PE[y] when APC bit is set in PWR_CR3 register.
0x40007044 C   FIELD 09w01 PD9 (rw): Port E pull-down bit y When set, this bit activates the pull-down on PE[y] when APC bit is set in PWR_CR3 register.
0x40007048 B  REGISTER PWR_PUCRF: Power Port F pull-up control register
0x40007048 C   FIELD 00w01 PU0 (rw): Port F pull-up bit y When set, this bit activates the pull-up on PH[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007048 C   FIELD 01w01 PU1 (rw): Port F pull-up bit y When set, this bit activates the pull-up on PH[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007048 C   FIELD 02w01 PU2 (rw): Port F pull-up bit y When set, this bit activates the pull-up on PH[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x40007048 C   FIELD 03w01 PU3 (rw): Port F pull-up bit y When set, this bit activates the pull-up on PH[y] when APC bit is set in PWR_CR3 register. If the corresponding PDy bit is also set, the pull-up is not activated and the pull-down is activated instead with highest priority.
0x4000704C B  REGISTER PWR_PDCRF: Power Port F pull-down control register
0x4000704C C   FIELD 00w01 PD0 (rw): Port F pull-down bit y When set, this bit activates the pull-down on PH[y] when APC bit is set in PWR_CR3 register.
0x4000704C C   FIELD 01w01 PD1 (rw): Port F pull-down bit y When set, this bit activates the pull-down on PH[y] when APC bit is set in PWR_CR3 register.
0x4000704C C   FIELD 02w01 PD2 (rw): Port F pull-down bit y When set, this bit activates the pull-down on PH[y] when APC bit is set in PWR_CR3 register.
0x4000704C C   FIELD 03w01 PD3 (rw): Port F pull-down bit y When set, this bit activates the pull-down on PH[y] when APC bit is set in PWR_CR3 register.
0x40007400 A PERIPHERAL DAC
0x40007400 B  REGISTER DAC_CR: DAC control register
0x40007400 C   FIELD 00w01 EN1 (rw): DAC channel1 enable This bit is set and cleared by software to enable/disable DAC channel1.
0x40007400 C   FIELD 01w01 TEN1 (rw): DAC channel1 trigger enable This bit is set and cleared by software to enable/disable DAC channel1 trigger. Note: When software trigger is selected, the transfer from the DAC_DHR1 register to the DAC_DOR1 register takes only one dac_pclk clock cycle.
0x40007400 C   FIELD 02w04 TSEL1 (rw): DAC channel1 trigger selection These bits select the external event used to trigger DAC channel1 ... Refer to the trigger selection tables in Section114.4.2: DAC pins and internal signals for details on trigger configuration and mapping. Note: Only used if bit TEN11=11 (DAC channel1 trigger enabled).
0x40007400 C   FIELD 06w02 WAVE1 (rw): DAC channel1 noise/triangle wave generation enable These bits are set and cleared by software. 1x: Triangle wave generation enabled Only used if bit TEN11=11 (DAC channel1 trigger enabled).
0x40007400 C   FIELD 08w04 MAMP1 (rw): DAC channel1 mask/amplitude selector
0x40007400 C   FIELD 12w01 DMAEN1 (rw): DAC channel1 DMA enable This bit is set and cleared by software.
0x40007400 C   FIELD 13w01 DMAUDRIE1 (rw): DAC channel1 DMA Underrun Interrupt enable This bit is set and cleared by software.
0x40007400 C   FIELD 14w01 CEN1 (rw): DAC channel1 calibration enable This bit is set and cleared by software to enable/disable DAC channel1 calibration, it can be written only if bit EN11=10 into DAC_CR (the calibration mode can be entered/exit only when the DAC channel is disabled) Otherwise, the write operation is ignored.
0x40007404 B  REGISTER DAC_SWTRGR: DAC software trigger register
0x40007404 C   FIELD 00w01 SWTRIG1 (wo): DAC channel1 software trigger This bit is set by software to trigger the DAC in software trigger mode. Note: This bit is cleared by hardware (one dac_pclk clock cycle later) once the DAC_DHR1 register value has been loaded into the DAC_DOR1 register.
0x40007408 B  REGISTER DAC_DHR12R1: DAC channel1 12-bit right-aligned data holding register
0x40007408 C   FIELD 00w12 DACC1DHR (rw): DAC channel1 12-bit right-aligned data These bits are written by software. They specify 12-bit data for DAC channel1.
0x4000740C B  REGISTER DAC_DHR12L1: DAC channel1 12-bit left aligned data holding register
0x4000740C C   FIELD 04w12 DACC1DHR (rw): DAC channel1 12-bit left-aligned data These bits are written by software. They specify 12-bit data for DAC channel1.
0x40007410 B  REGISTER DAC_DHR8R1: DAC channel1 8-bit right aligned data holding register
0x40007410 C   FIELD 00w08 DACC1DHR (rw): DAC channel1 8-bit right-aligned data These bits are written by software. They specify 8-bit data for DAC channel1.
0x4000742C B  REGISTER DAC_DOR1: DAC channel1 data output register
0x4000742C C   FIELD 00w12 DACC1DOR (ro): DAC channel1 data output These bits are read-only, they contain data output for DAC channel1.
0x40007434 B  REGISTER DAC_SR: DAC status register
0x40007434 C   FIELD 13w01 DMAUDR1 (rw): DAC channel1 DMA underrun flag This bit is set by hardware and cleared by software (by writing it to 1).
0x40007434 C   FIELD 14w01 CAL_FLAG1 (ro): DAC channel1 calibration offset status This bit is set and cleared by hardware
0x40007434 C   FIELD 15w01 BWST1 (ro): DAC channel1 busy writing sample time flag This bit is systematically set just after Sample and hold mode enable and is set each time the software writes the register DAC_SHSR1, It is cleared by hardware when the write operation of DAC_SHSR1 is complete. (It takes about 3 LSI periods of synchronization).
0x40007438 B  REGISTER DAC_CCR: DAC calibration control register
0x40007438 C   FIELD 00w05 OTRIM1 (rw): DAC channel1 offset trimming value
0x4000743C B  REGISTER DAC_MCR: DAC mode control register
0x4000743C C   FIELD 00w03 MODE1 (rw): DAC channel1 mode These bits can be written only when the DAC is disabled and not in the calibration mode (when bit EN11=10 and bit CEN11=10 in the DAC_CR register). If EN11=11 or CEN11=11 the write operation is ignored. They can be set and cleared by software to select the DAC channel1 mode: DAC channel1 in Normal mode DAC channel1 in sample & hold mode Note: This register can be modified only when EN11=10.
0x40007440 B  REGISTER DAC_SHSR1: DAC channel1 sample and hold sample time register
0x40007440 C   FIELD 00w10 TSAMPLE1 (rw): DAC channel1 sample time (only valid in Sample and hold mode) These bits can be written when the DAC channel1 is disabled or also during normal operation. in the latter case, the write can be done only when BWST1 of DAC_SR register is low, If BWST11=11, the write operation is ignored.
0x40007448 B  REGISTER DAC_SHHR: DAC sample and hold time register
0x40007448 C   FIELD 00w10 THOLD1 (rw): DAC channel1 hold time (only valid in Sample and hold mode) Hold time1=1(THOLD[9:0]) x LSI clock period Note: This register can be modified only when EN11=10.
0x4000744C B  REGISTER DAC_SHRR: DAC sample and hold refresh time register
0x4000744C C   FIELD 00w08 TREFRESH1 (rw): DAC channel1 refresh time (only valid in Sample and hold mode) Refresh time1=1(TREFRESH[7:0]) x LSI clock period Note: This register can be modified only when EN11=10.
0x40007800 A PERIPHERAL OPAMP
0x40007800 B  REGISTER OPAMP_CSR: OPAMP control/status register
0x40007800 C   FIELD 00w01 OPAEN (rw): Operational amplifier Enable
0x40007800 C   FIELD 01w01 OPALPM (rw): Operational amplifier Low Power Mode The operational amplifier must be disable to change this configuration.
0x40007800 C   FIELD 02w02 OPAMODE (rw): Operational amplifier PGA mode
0x40007800 C   FIELD 04w02 PGA_GAIN (rw): Operational amplifier Programmable amplifier gain value
0x40007800 C   FIELD 08w02 VM_SEL (rw): Inverting input selection These bits are used only when OPAMODE = 00, 01 or 10. 1x: Inverting input not externally connected. These configurations are valid only when OPAMODE = 10 (PGA mode)
0x40007800 C   FIELD 10w01 VP_SEL (rw): Non inverted input selection
0x40007800 C   FIELD 12w01 CALON (rw): Calibration mode enabled
0x40007800 C   FIELD 13w01 CALSEL (rw): Calibration selection
0x40007800 C   FIELD 14w01 USERTRIM (rw): allows to switch from factory AOP offset trimmed values to AOP offset user trimmed values This bit is active for both mode normal and low-power.
0x40007800 C   FIELD 15w01 CALOUT (ro): Operational amplifier calibration output During calibration mode offset is trimmed when this signal toggle.
0x40007800 C   FIELD 31w01 OPA_RANGE (rw): Operational amplifier power supply range for stability All AOP must be in power down to allow AOP-RANGE bit write. It applies to all AOP embedded in the product.
0x40007804 B  REGISTER OPAMP_OTR: OPAMP offset trimming register in normal mode
0x40007804 C   FIELD 00w05 TRIMOFFSETN (rw): Trim for NMOS differential pairs
0x40007804 C   FIELD 08w05 TRIMOFFSETP (rw): Trim for PMOS differential pairs
0x40007808 B  REGISTER OPAMP_LPOTR: OPAMP offset trimming register in low-power mode
0x40007808 C   FIELD 00w05 TRIMLPOFFSETN (rw): Low-power mode trim for NMOS differential pairs
0x40007808 C   FIELD 08w05 TRIMLPOFFSETP (rw): Low-power mode trim for PMOS differential pairs
0x40007C00 A PERIPHERAL LPTIM1
0x40007C00 B  REGISTER LPTIM1_ISR_INPUT: LPTIM1 interrupt and status register [alternate]
0x40007C00 B  REGISTER LPTIM1_ISR_OUTPUT: LPTIM1 interrupt and status register [alternate]
0x40007C00 C   FIELD 00w01 CC1IF (ro): Compare 1 interrupt flag If channel CC1 is configured as output: The CC1IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC1IF flag can be cleared by writing 1 to the CC1CF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 00w01 CC1IF (ro): capture 1 interrupt flag If channel CC1 is configured as input: CC1IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR1 register. The corresponding interrupt or DMA request is generated if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40007C00 C   FIELD 01w01 ARRM (ro): Autoreload match ARRM is set by hardware to inform application that LPTIM_CNT registers value reached the LPTIM_ARR registers value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 01w01 ARRM (ro): Autoreload match ARRM is set by hardware to inform application that LPTIM_CNT registers value reached the LPTIM_ARR registers value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 02w01 EXTTRIG (ro): External trigger edge event EXTTRIG is set by hardware to inform application that a valid edge on the selected external trigger input has occurred. If the trigger is ignored because the timer has already started, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 02w01 EXTTRIG (ro): External trigger edge event EXTTRIG is set by hardware to inform application that a valid edge on the selected external trigger input has occurred. If the trigger is ignored because the timer has already started, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 03w01 CMP1OK (ro): Compare register 1 update OK CMP1OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR1 register has been successfully completed. CMP1OK flag can be cleared by writing 1 to the CMP1OKCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 04w01 ARROK (ro): Autoreload register update OK ARROK is set by hardware to inform application that the APB bus write operation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 04w01 ARROK (ro): Autoreload register update OK ARROK is set by hardware to inform application that the APB bus write operation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 05w01 UP (ro): Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 05w01 UP (ro): Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 06w01 DOWN (ro): Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 06w01 DOWN (ro): Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 07w01 UE (ro): LPTIM update event occurred UE is set by hardware to inform application that an update event was generated. The corresponding interrupt or DMA request is generated if enabled. UE flag can be cleared by writing 1 to the UECF bit in the LPTIM_ICR register. The UE flag is automatically cleared by hardware once the LPTIM_ARR register is written by any bus master like CPU or DMA.
0x40007C00 C   FIELD 07w01 UE (ro): LPTIM update event occurred UE is set by hardware to inform application that an update event was generated. UE flag can be cleared by writing 1 to the UECF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 08w01 REPOK (ro): Repetition register update OK REPOK is set by hardware to inform application that the APB bus write operation to the LPTIM_RCR register has been successfully completed. REPOK flag can be cleared by writing 1 to the REPOKCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 08w01 REPOK (ro): Repetition register update OK REPOK is set by hardware to inform application that the APB bus write operation to the LPTIM_RCR register has been successfully completed. REPOK flag can be cleared by writing 1 to the REPOKCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 09w01 CC2IF (ro): Capture 2 interrupt flag If channel CC2 is configured as input: CC2IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR2 register. The corresponding interrupt or DMA request is generated if enabled. The CC2OF flag is set if the CC2IF flag was already high. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 09w01 CC2IF (ro): Compare 2 interrupt flag If channel CC2 is configured as output: The CC2IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC2IF flag can be cleared by writing 1 to the CC2CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 10w01 CC3IF (ro): Capture 3 interrupt flag If channel CC3 is configured as input: CC3IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR3 register. The corresponding interrupt or DMA request is generated if enabled. The CC3OF flag is set if the CC3IF flag was already high. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 10w01 CC3IF (ro): Compare 3 interrupt flag If channel CC3 is configured as output: The CC3IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC3IF flag can be cleared by writing 1 to the CC3CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 11w01 CC4IF (ro): Capture 4 interrupt flag If channel CC4 is configured as input: CC4IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR4 register. The corresponding interrupt or DMA request is generated if enabled. The CC4OF flag is set if the CC4IF flag was already high. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 11w01 CC4IF (ro): Compare 4 interrupt flag If channel CC4 is configured as output: The CC4IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC4IF flag can be cleared by writing 1 to the CC4CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 12w01 CC1OF (ro): Capture 1 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC1OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 13w01 CC2OF (ro): Capture 2 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC2OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 14w01 CC3OF (ro): Capture 3 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC3OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 15w01 CC4OF (ro): Capture 4 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC4OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 19w01 CMP2OK (ro): Compare register 2 update OK CMP2OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR2 register has been successfully completed. CMP2OK flag can be cleared by writing 1 to the CMP2OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 20w01 CMP3OK (ro): Compare register 3 update OK CMP3OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR3 register has been successfully completed. CMP3OK flag can be cleared by writing 1 to the CMP3OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 21w01 CMP4OK (ro): Compare register 4 update OK CMP4OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR4 register has been successfully completed. CMP4OK flag can be cleared by writing 1 to the CMP4OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C00 C   FIELD 24w01 DIEROK (ro): Interrupt enable register update OK DIEROK is set by hardware to inform application that the APB bus write operation to the LPTIM_DIER register has been successfully completed. DIEROK flag can be cleared by writing 1 to the DIEROKCF bit in the LPTIM_ICR register.
0x40007C00 C   FIELD 24w01 DIEROK (ro): Interrupt enable register update OK DIEROK is set by hardware to inform application that the APB bus write operation to the LPTIM_DIER register has been successfully completed. DIEROK flag can be cleared by writing 1 to the DIEROKCF bit in the LPTIM_ICR register.
0x40007C04 B  REGISTER LPTIM1_ICR_INPUT: LPTIM1 interrupt clear register [alternate]
0x40007C04 B  REGISTER LPTIM1_ICR_OUTPUT: LPTIM1 interrupt clear register [alternate]
0x40007C04 C   FIELD 00w01 CC1CF (wo): Capture/compare 1 clear flag Writing 1 to this bit clears the CC1IF flag in the LPTIM_ISR register.
0x40007C04 C   FIELD 00w01 CC1CF (wo): Capture/compare 1 clear flag Writing 1 to this bit clears the CC1IF flag in the LPTIM_ISR register.
0x40007C04 C   FIELD 01w01 ARRMCF (wo): Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register
0x40007C04 C   FIELD 01w01 ARRMCF (wo): Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register
0x40007C04 C   FIELD 02w01 EXTTRIGCF (wo): External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register
0x40007C04 C   FIELD 02w01 EXTTRIGCF (wo): External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register
0x40007C04 C   FIELD 03w01 CMP1OKCF (wo): Compare register 1 update OK clear flag Writing 1 to this bit clears the CMP1OK flag in the LPTIM_ISR register.
0x40007C04 C   FIELD 04w01 ARROKCF (wo): Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register
0x40007C04 C   FIELD 04w01 ARROKCF (wo): Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register
0x40007C04 C   FIELD 05w01 UPCF (wo): Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 05w01 UPCF (wo): Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 06w01 DOWNCF (wo): Direction change to down clear flag Writing 1 to this bit clear the DOWN flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 06w01 DOWNCF (wo): Direction change to down clear flag Writing 1 to this bit clear the DOWN flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 07w01 UECF (wo): Update event clear flag Writing 1 to this bit clear the UE flag in the LPTIM_ISR register.
0x40007C04 C   FIELD 07w01 UECF (wo): Update event clear flag Writing 1 to this bit clear the UE flag in the LPTIM_ISR register.
0x40007C04 C   FIELD 08w01 REPOKCF (wo): Repetition register update OK clear flag Writing 1 to this bit clears the REPOK flag in the LPTIM_ISR register.
0x40007C04 C   FIELD 08w01 REPOKCF (wo): Repetition register update OK clear flag Writing 1 to this bit clears the REPOK flag in the LPTIM_ISR register.
0x40007C04 C   FIELD 09w01 CC2CF (wo): Capture/compare 2 clear flag Writing 1 to this bit clears the CC2IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 09w01 CC2CF (wo): Capture/compare 2 clear flag Writing 1 to this bit clears the CC2IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 10w01 CC3CF (wo): Capture/compare 3 clear flag Writing 1 to this bit clears the CC3IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 10w01 CC3CF (wo): Capture/compare 3 clear flag Writing 1 to this bit clears the CC3IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 11w01 CC4CF (wo): Capture/compare 4 clear flag Writing 1 to this bit clears the CC4IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 11w01 CC4CF (wo): Capture/compare 4 clear flag Writing 1 to this bit clears the CC4IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 12w01 CC1OCF (wo): Capture/compare 1 over-capture clear flag Writing 1 to this bit clears the CC1OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 13w01 CC2OCF (wo): Capture/compare 2 over-capture clear flag Writing 1 to this bit clears the CC2OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 14w01 CC3OCF (wo): Capture/compare 3 over-capture clear flag Writing 1 to this bit clears the CC3OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 15w01 CC4OCF (wo): Capture/compare 4 over-capture clear flag Writing 1 to this bit clears the CC4OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 19w01 CMP2OKCF (wo): Compare register 2 update OK clear flag Writing 1 to this bit clears the CMP2OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 20w01 CMP3OKCF (wo): Compare register 3 update OK clear flag Writing 1 to this bit clears the CMP3OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 21w01 CMP4OKCF (wo): Compare register 4 update OK clear flag Writing 1 to this bit clears the CMP4OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C04 C   FIELD 24w01 DIEROKCF (wo): Interrupt enable register update OK clear flag Writing 1 to this bit clears the DIEROK flag in the LPTIM_ISR register.
0x40007C04 C   FIELD 24w01 DIEROKCF (wo): Interrupt enable register update OK clear flag Writing 1 to this bit clears the DIEROK flag in the LPTIM_ISR register.
0x40007C08 B  REGISTER LPTIM1_DIER_INPUT: LPTIM1 interrupt enable register [alternate]
0x40007C08 B  REGISTER LPTIM1_DIER_OUTPUT: LPTIM1 interrupt enable register [alternate]
0x40007C08 C   FIELD 00w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x40007C08 C   FIELD 00w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x40007C08 C   FIELD 01w01 ARRMIE (rw): Autoreload match Interrupt Enable
0x40007C08 C   FIELD 01w01 ARRMIE (rw): Autoreload match Interrupt Enable
0x40007C08 C   FIELD 02w01 EXTTRIGIE (rw): External trigger valid edge Interrupt Enable
0x40007C08 C   FIELD 02w01 EXTTRIGIE (rw): External trigger valid edge Interrupt Enable
0x40007C08 C   FIELD 03w01 CMP1OKIE (rw): Compare register 1 update OK interrupt enable
0x40007C08 C   FIELD 04w01 ARROKIE (rw): Autoreload register update OK Interrupt Enable
0x40007C08 C   FIELD 04w01 ARROKIE (rw): Autoreload register update OK Interrupt Enable
0x40007C08 C   FIELD 05w01 UPIE (rw): Direction change to UP Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 05w01 UPIE (rw): Direction change to UP Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 06w01 DOWNIE (rw): Direction change to down Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 06w01 DOWNIE (rw): Direction change to down Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 07w01 UEIE (rw): Update event interrupt enable
0x40007C08 C   FIELD 07w01 UEIE (rw): Update event interrupt enable
0x40007C08 C   FIELD 08w01 REPOKIE (rw): Repetition register update OK interrupt Enable
0x40007C08 C   FIELD 08w01 REPOKIE (rw): Repetition register update OK interrupt Enable
0x40007C08 C   FIELD 09w01 CC2IE (rw): Capture/compare 2 interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 09w01 CC2IE (rw): Capture/compare 2 interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 10w01 CC3IE (rw): Capture/compare 3 interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 10w01 CC3IE (rw): Capture/compare 3 interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 11w01 CC4IE (rw): Capture/compare 4 interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 11w01 CC4IE (rw): Capture/compare 4 interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 12w01 CC1OIE (rw): Capture/compare 1 over-capture interrupt enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 13w01 CC2OIE (rw): Capture/compare 2 over-capture interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 14w01 CC3OIE (rw): Capture/compare 3 over-capture interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 15w01 CC4OIE (rw): Capture/compare 4 over-capture interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 16w01 CC1DE (rw): Capture/compare 1 DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 19w01 CMP2OKIE (rw): Compare register 2 update OK interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 20w01 CMP3OKIE (rw): Compare register 3 update OK interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 21w01 CMP4OKIE (rw): Compare register 4 update OK interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 23w01 UEDE (rw): Update event DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 23w01 UEDE (rw): Update event DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 25w01 CC2DE (rw): Capture/compare 2 DMA request enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 26w01 CC3DE (rw): Capture/compare 3 DMA request enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40007C08 C   FIELD 27w01 CC4DE (rw): Capture/compare 4 DMA request enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40007C0C B  REGISTER LPTIM1_CFGR: LPTIM configuration register
0x40007C0C C   FIELD 00w01 CKSEL (rw): Clock selector The CKSEL bit selects which clock source the LPTIM uses:
0x40007C0C C   FIELD 01w02 CKPOL (rw): Clock Polarity When the LPTIM is clocked by an external clock source, CKPOL bits is used to configure the active edge or edges used by the counter: If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 1 is active. If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 2 is active. If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 3 is active. Refer to Section125.4.15: Encoder mode for more details about Encoder mode sub-modes.
0x40007C0C C   FIELD 03w02 CKFLT (rw): Configurable digital filter for external clock The CKFLT value sets the number of consecutive equal samples that are detected when a level change occurs on an external clock signal before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x40007C0C C   FIELD 06w02 TRGFLT (rw): Configurable digital filter for trigger The TRGFLT value sets the number of consecutive equal samples that are detected when a level change occurs on an internal trigger before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x40007C0C C   FIELD 09w03 PRESC (rw): Clock prescaler The PRESC bits configure the prescaler division factor. It can be one among the following division factors:
0x40007C0C C   FIELD 13w03 TRIGSEL (rw): Trigger selector The TRIGSEL bits select the trigger source that serves as a trigger event for the LPTIM among the below 8 available sources: See Section125.4.3: LPTIM input and trigger mapping for details.
0x40007C0C C   FIELD 17w02 TRIGEN (rw): Trigger enable and polarity The TRIGEN bits controls whether the LPTIM counter is started by an external trigger or not. If the external trigger option is selected, three configurations are possible for the trigger active edge:
0x40007C0C C   FIELD 19w01 TIMOUT (rw): Timeout enable The TIMOUT bit controls the Timeout feature
0x40007C0C C   FIELD 20w01 WAVE (rw): Waveform shape The WAVE bit controls the output shape
0x40007C0C C   FIELD 22w01 PRELOAD (rw): Registers update mode The PRELOAD bit controls the LPTIM1_ARR, LPTIM1_RCR and the LPTIM1_CCRx registers update modality
0x40007C0C C   FIELD 23w01 COUNTMODE (rw): counter mode enabled The COUNTMODE bit selects which clock source is used by the LPTIM to clock the counter:
0x40007C0C C   FIELD 24w01 ENC (rw): Encoder mode enable The ENC bit controls the Encoder mode Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40007C10 B  REGISTER LPTIM1_CR: LPTIM control register
0x40007C10 C   FIELD 00w01 ENABLE (rw): LPTIM enable The ENABLE bit is set and cleared by software.
0x40007C10 C   FIELD 01w01 SNGSTRT (rw): LPTIM start in Single mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = 00), setting this bit starts the LPTIM in single pulse mode. If the software start is disabled (TRIGEN[1:0] different than 00), setting this bit starts the LPTIM in single pulse mode as soon as an external trigger is detected. If this bit is set when the LPTIM is in continuous counting mode, then the LPTIM stops at the following match between LPTIM1_ARR and LPTIM1_CNT registers. This bit can only be set when the LPTIM is enabled. It is automatically reset by hardware.
0x40007C10 C   FIELD 02w01 CNTSTRT (rw): Timer start in Continuous mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = 00), setting this bit starts the LPTIM in Continuous mode. If the software start is disabled (TRIGEN[1:0] different than 00), setting this bit starts the timer in Continuous mode as soon as an external trigger is detected. If this bit is set when a single pulse mode counting is ongoing, then the timer does not stop at the next match between the LPTIM1_ARR and LPTIM1_CNT registers and the LPTIM counter keeps counting in Continuous mode. This bit can be set only when the LPTIM is enabled. It is automatically reset by hardware.
0x40007C10 C   FIELD 03w01 COUNTRST (rw): Counter reset This bit is set by software and cleared by hardware. When set to '1' this bit triggers a synchronous reset of the LPTIM1_CNT counter register. Due to the synchronous nature of this reset, it only takes place after a synchronization delay of 3 LPTimer core clock cycles (LPTimer core clock may be different from APB clock). This bit can be set only when the LPTIM is enabled. It is automatically reset by hardware. COUNTRST must never be set to '1' by software before it is already cleared to '0' by hardware. Software must consequently check that COUNTRST bit is already cleared to '0' before attempting to set it to '1'.
0x40007C10 C   FIELD 04w01 RSTARE (rw): Reset after read enable This bit is set and cleared by software. When RSTARE is set to '1', any read access to LPTIM1_CNT register asynchronously resets LPTIM1_CNT register content. This bit can be set only when the LPTIM is enabled.
0x40007C14 B  REGISTER LPTIM1_CCR1: LPTIM compare register 1
0x40007C14 C   FIELD 00w16 CCR1 (rw): Capture/compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the capture/compare 1 register. Depending on the PRELOAD option, the CCR1 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 1 contains the value to be compared to the counter LPTIM1_CNT and signaled on OC1 output. If channel CC1 is configured as input: CCR1 becomes read-only, it contains the counter value transferred by the last input capture 1 event. The LPTIM1_CCR1 register is read-only and cannot be programmed.
0x40007C18 B  REGISTER LPTIM1_ARR: LPTIM autoreload register
0x40007C18 C   FIELD 00w16 ARR (rw): Auto reload value ARR is the autoreload value for the LPTIM. This value must be strictly greater than the CCRx[15:0] value.
0x40007C1C B  REGISTER LPTIM1_CNT: LPTIM counter register
0x40007C1C C   FIELD 00w16 CNT (ro): Counter value When the LPTIM is running with an asynchronous clock, reading the LPTIM1_CNT register may return unreliable values. So in this case it is necessary to perform two consecutive read accesses and verify that the two returned values are identical.
0x40007C24 B  REGISTER LPTIM1_CFGR2: LPTIM configuration register 2
0x40007C24 C   FIELD 00w02 IN1SEL (rw): LPTIM input 1 selection The IN1SEL bits control the LPTIM input 1 multiplexer, which connects LPTIM input 1 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40007C24 C   FIELD 04w02 IN2SEL (rw): LPTIM input 2 selection The IN2SEL bits control the LPTIM input 2 multiplexer, which connects LPTIM input 2 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40007C24 C   FIELD 16w02 IC1SEL (rw): LPTIM input capture 1 selection The IC1SEL bits control the LPTIM Input capture 1 multiplexer, which connects LPTIM Input capture 1 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40007C24 C   FIELD 20w02 IC2SEL (rw): LPTIM input capture 2 selection The IC2SEL bits control the LPTIM Input capture 2 multiplexer, which connects LPTIM Input capture 2 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40007C28 B  REGISTER LPTIM1_RCR: LPTIM repetition register
0x40007C28 C   FIELD 00w08 REP (rw): Repetition register value REP is the repetition value for the LPTIM.
0x40007C2C B  REGISTER LPTIM1_CCMR1: LPTIM capture/compare mode register 1
0x40007C2C C   FIELD 00w01 CC1SEL (rw): Capture/compare 1 selection This bitfield defines the direction of the channel input (capture) or output mode.
0x40007C2C C   FIELD 01w01 CC1E (rw): Capture/compare 1 output enable. This bit determines if a capture of the counter value can actually be done into the input capture/compare register 1 (LPTIM1_CCR1) or not.
0x40007C2C C   FIELD 02w02 CC1P (rw): Capture/compare 1 output polarity. Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. This field is used to select the IC1 polarity for capture operations.
0x40007C2C C   FIELD 08w02 IC1PSC (rw): Input capture 1 prescaler This bitfield defines the ratio of the prescaler acting on the CC1 input (IC1).
0x40007C2C C   FIELD 12w02 IC1F (rw): Input capture 1 filter This bitfield defines the number of consecutive equal samples that are detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40007C2C C   FIELD 16w01 CC2SEL (rw): Capture/compare 2 selection This bitfield defines the direction of the channel, input (capture) or output mode.
0x40007C2C C   FIELD 17w01 CC2E (rw): Capture/compare 2 output enable. This bit determines if a capture of the counter value can actually be done into the input capture/compare register 2 (LPTIM1_CCR2) or not.
0x40007C2C C   FIELD 18w02 CC2P (rw): Capture/compare 2 output polarity. Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. This field is used to select the IC2 polarity for capture operations.
0x40007C2C C   FIELD 24w02 IC2PSC (rw): Input capture 2 prescaler This bitfield defines the ratio of the prescaler acting on the CC2 input (IC2).
0x40007C2C C   FIELD 28w02 IC2F (rw): Input capture 2 filter This bitfield defines the number of consecutive equal samples that are detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40007C30 B  REGISTER LPTIM1_CCMR2: LPTIM capture/compare mode register 2
0x40007C30 C   FIELD 00w01 CC3SEL (rw): Capture/compare 3 selection This bitfield defines the direction of the channel input (capture) or output mode.
0x40007C30 C   FIELD 01w01 CC3E (rw): Capture/compare 3 output enable. Condition: CC3 as output: Condition: CC3 as input: This bit determines if a capture of the counter value can actually be done into the input capture/compare register 3 (LPTIM1_CCR3) or not.
0x40007C30 C   FIELD 02w02 CC3P (rw): Capture/compare 3 output polarity. Condition: CC3 as output: Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. Condition: CC3 as input: This field is used to select the IC3 polarity for capture operations.
0x40007C30 C   FIELD 08w02 IC3PSC (rw): Input capture 3 prescaler This bitfield defines the ratio of the prescaler acting on the CC3 input (IC3).
0x40007C30 C   FIELD 12w02 IC3F (rw): Input capture 3 filter This bitfield defines the number of consecutive equal samples that should be detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40007C30 C   FIELD 16w01 CC4SEL (rw): Capture/compare 4 selection This bitfield defines the direction of the channel, input (capture) or output mode.
0x40007C30 C   FIELD 17w01 CC4E (rw): Capture/compare 4 output enable. Condition: CC4 as output: Condition: CC4 as input: This bit determines if a capture of the counter value can actually be done into the input capture/compare register 4 (LPTIM1_CCR4) or not.
0x40007C30 C   FIELD 18w02 CC4P (rw): Capture/compare 4 output polarity. Condition: CC4 as output: Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. Condition: CC4 as input: This field is used to select the IC4 polarity for capture operations.
0x40007C30 C   FIELD 24w02 IC4PSC (rw): Input capture 4 prescaler This bitfield defines the ratio of the prescaler acting on the CC4 input (IC4).
0x40007C30 C   FIELD 28w02 IC4F (rw): Input capture 4 filter This bitfield defines the number of consecutive equal samples that should be detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40007C34 B  REGISTER LPTIM1_CCR2: LPTIM compare register 2
0x40007C34 C   FIELD 00w16 CCR2 (rw): Capture/compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the capture/compare 2 register. Depending on the PRELOAD option, the CCR2 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 2 contains the value to be compared to the counter LPTIM1_CNT and signaled on OC2 output. If channel CC2 is configured as input: CCR2 becomes read-only, it contains the counter value transferred by the last input capture 2 event. The LPTIM1_CCR2 register is read-only and cannot be programmed.
0x40007C38 B  REGISTER LPTIM1_CCR3: LPTIM compare register 3
0x40007C38 C   FIELD 00w16 CCR3 (rw): Capture/compare 3 value If channel CC3 is configured as output: CCR3 is the value to be loaded in the capture/compare 3 register. Depending on the PRELOAD option, the CCR3 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 3 contains the value to be compared to the counter LPTIM1_CNT and signaled on OC3 output. If channel CC3 is configured as input: CCR3 becomes read-only, it contains the counter value transferred by the last input capture 3 event. The LPTIM1_CCR3 register is read-only and cannot be programmed.
0x40007C3C B  REGISTER LPTIM1_CCR4: LPTIM compare register 4
0x40007C3C C   FIELD 00w16 CCR4 (rw): Capture/compare 4 value If channel CC4 is configured as output: CCR4 is the value to be loaded in the capture/compare 4 register. Depending on the PRELOAD option, the CCR4 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 4 contains the value to be compared to the counter LPTIM1_CNT and signaled on OC4 output. If channel CC4 is configured as input: CCR4 becomes read-only, it contains the counter value transferred by the last input capture 4 event. The LPTIM1_CCR4 register is read-only and cannot be programmed.
0x40008000 A PERIPHERAL LPUART1
0x40008000 B  REGISTER LPUART_CR1: LPUART control register 1
0x40008000 B  REGISTER LPUART_CR1_ALTERNATE: LPUART control register 1
0x40008000 C   FIELD 00w01 UE (rw): LPUART enable When this bit is cleared, the LPUART prescalers and outputs are stopped immediately, and current operations are discarded. The configuration of the LPUART is kept, but all the status flags, in the LPUART_ISR are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be reset before and the software must wait for the TC bit in the LPUART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit.
0x40008000 C   FIELD 00w01 UE (rw): LPUART enable When this bit is cleared, the LPUART prescalers and outputs are stopped immediately, and current operations are discarded. The configuration of the LPUART is kept, but all the status flags, in the LPUART_ISR are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be reset before and the software must wait for the TC bit in the LPUART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit.
0x40008000 C   FIELD 01w01 UESM (rw): LPUART enable in low-power mode When this bit is cleared, the LPUART cannot wake up the MCU from low-power mode. When this bit is set, the LPUART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40008000 C   FIELD 01w01 UESM (rw): LPUART enable in low-power mode When this bit is cleared, the LPUART cannot wake up the MCU from low-power mode. When this bit is set, the LPUART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40008000 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40008000 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40008000 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the LPUART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40008000 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the LPUART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40008000 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40008000 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40008000 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the LPUART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the LPUART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1) description). This bit can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1) description). This bit can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 13w01 MME (rw): Mute mode enable This bit activates the Mute mode function of the LPUART. When set, the LPUART can switch between the active and Mute modes, as defined by the WAKE bit. It is set and cleared by software.
0x40008000 C   FIELD 13w01 MME (rw): Mute mode enable This bit activates the Mute mode function of the LPUART. When set, the LPUART can switch between the active and Mute modes, as defined by the WAKE bit. It is set and cleared by software.
0x40008000 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal.It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section132.4.14: RS232 Hardware flow control and RS485 Driver Enable. If the LPUART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal.It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section132.4.14: RS232 Hardware flow control and RS485 Driver Enable. If the LPUART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section131.5.21: RS232 Hardware flow control and RS485 Driver Enable. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section131.5.21: RS232 Hardware flow control and RS485 Driver Enable. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008000 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 Start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 Start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 Start bit, 7 Data bits, n Stop bit This bit can only be written when the LPUART is disabled (UE=0). Note: In 7-bit data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40008000 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 Start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 Start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 Start bit, 7 Data bits, n Stop bit This bit can only be written when the LPUART is disabled (UE=0). Note: In 7-bit data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40008000 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software.
0x40008000 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software.
0x40008000 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40008000 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40008004 B  REGISTER LPUART_CR2: LPUART control register 2
0x40008004 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the LPUART is disabled (UE=0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40008004 C   FIELD 12w02 STOP (rw): STOP bits These bits are used for programming the stop bits. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008004 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008004 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008004 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008004 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008004 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008004 C   FIELD 24w08 ADD (rw): Address of the LPUART node These bits give the address of the LPUART node in Mute mode or a character code to be recognized in low-power or Run mode: In Mute mode: they are used in multiprocessor communication to wake up from Mute mode with 4-bit/7-bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1. In 4-bit address mark detection, only ADD[3:0] bits are used. In low-power mode: they are used for wake up from low-power mode on character match. When WUS[1:0] is programmed to 0b00 (WUF active on address match), the wake-up from low-power mode is performed when the received character corresponds to the character programmed through ADD[6:0] or ADD[3:0] bitfield (depending on ADDM7 bit), and WUF interrupt is enabled by setting WUFIE bit. The MSB of the character sent by transmitter should be equal to 1. In Run mode with Mute mode inactive (for example, end-of-block detection in ModBus protocol): the whole received character (8 bits) is compared to ADD[7:0] value and CMF flag is set on match. An interrupt is generated if the CMIE bit is set. These bits can only be written when the reception is disabled (RE1=10) or when the USART is disabled (UE1=10).
0x40008008 B  REGISTER LPUART_CR3: LPUART control register 3
0x40008008 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error or noise flag (FE=1 or ORE=1 or NE=1 in the LPUART_ISR register).
0x40008008 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the LPUART is disabled (UE=0).
0x40008008 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40008008 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40008008 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the LPUART is disabled (UE=0).
0x40008008 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the LPUART is disabled (UE=0)
0x40008008 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable
0x40008008 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the LPUART_RDR register. This bit can only be written when the LPUART is disabled (UE=0). Note: This control bit enables checking the communication flow w/o reading the data.
0x40008008 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the LPUART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40008008 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the LPUART is disabled (UE=0).
0x40008008 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the LPUART is disabled (UE=0).
0x40008008 C   FIELD 20w01 WUS0 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wake-up from low-power mode flag). This bitfield can only be written when the LPUART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008008 C   FIELD 21w01 WUS1 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wake-up from low-power mode flag). This bitfield can only be written when the LPUART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008008 C   FIELD 22w01 WUFIE (rw): Wake-up from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008008 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40008008 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved.
0x40008008 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40008008 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved.
0x4000800C B  REGISTER LPUART_BRR: LPUART baud rate register
0x4000800C C   FIELD 00w20 BRR (rw): LPUART baud rate division (LPUARTDIV)
0x40008018 B  REGISTER LPUART_RQR: LPUART request register
0x40008018 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: If the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software must wait for the TXE flag assertion before setting the SBKRQ bit.
0x40008018 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the LPUART in Mute mode and resets the RWU flag.
0x40008018 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit clears the RXNE flag. This enables discarding the received data without reading it, and avoid an overrun condition.
0x40008018 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request This bit is used when FIFO mode is enabled. TXFRQ bit is set to flush the whole FIFO. This sets the flag TXFE (TXFIFO empty, bit 23 in the LPUART_ISR register). Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4000801C B  REGISTER LPUART_ISR: LPUART interrupt and status register
0x4000801C B  REGISTER LPUART_ISR_ALTERNATE: LPUART interrupt and status register
0x4000801C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the LPUART_ICR register. An interrupt is generated if PEIE = 1 in the LPUART_CR1 register. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x4000801C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the LPUART_ICR register. An interrupt is generated if PEIE = 1 in the LPUART_CR1 register. Note: This error is associated with the character in the LPUART_RDR.
0x4000801C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the LPUART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the LPUART_CR3 register. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x4000801C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the LPUART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the LPUART_CR3 register. Note: This error is associated with the character in the LPUART_RDR.
0x4000801C C   FIELD 02w01 NE (ro): Start bit noise detection flag This bit is set by hardware when noise is detected on the start bit of a received frame. It is cleared by software, writing 1 to the NFCF bit in the LPUART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: This error is associated with the character in the LPUART_RDR.
0x4000801C C   FIELD 02w01 NE (ro): Start bit noise detection flag This bit is set by hardware when noise is detected on the start bit of a received frame. It is cleared by software, writing 1 to the NFCF bit in the LPUART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE/RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x4000801C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the LPUART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the LPUART_ICR register. An interrupt is generated if RXFNEIE=1 in the LPUART_CR1 register, or EIE = 1 in the LPUART_CR3 register. Note: When this bit is set, the LPUART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the LPUART_CR3 register.
0x4000801C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the LPUART_RDR register while RXNE=1 (RXFF = 1 in case FIFO mode is enabled). It is cleared by a software, writing 1 to the ORECF, in the LPUART_ICR register. An interrupt is generated if RXNEIE=1 in the LPUART_CR1 register, or EIE = 1 in the LPUART_CR3 register. Note: When this bit is set, the LPUART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the LPUART_CR3 register.
0x4000801C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the LPUART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the LPUART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the LPUART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4000801C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle line is detected. An interrupt is generated if IDLEIE=1 in the LPUART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the LPUART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the LPUART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4000801C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, and so data can be read from the LPUART_RDR register. Every read of the LPUART_RDR frees a location in the RXFIFO. It is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. An interrupt is generated if RXFNEIE=1 in the LPUART_CR1 register.
0x4000801C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the LPUART_RDR shift register has been transferred to the LPUART_RDR register. It is cleared by a read to the LPUART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. An interrupt is generated if RXNEIE=1 in the LPUART_CR1 register.
0x4000801C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the LPUART_TDR has been transmitted out of the shift register. The TC flag behaves as follows: When TDN = 0, the TC flag is set when the transmission of a frame containing data is complete and when TXFE is set. When TDN is equal to the number of data in the TXFIFO, the TC flag is set when TXFIFO is empty and TDN is reached. When TDN is greater than the number of data in the TXFIFO, TC remains cleared until the TXFIFO is filled again to reach the programmed number of data to be transferred. When TDN is less than the number of data in the TXFIFO, TC is set when TDN is reached even if the TXFIFO is not empty. An interrupt is generated if TCIE=1 in the LPUART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the LPUART_ICR register or by writing to the LPUART_TDR register.
0x4000801C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag is set when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIE=1 in the LPUART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x4000801C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the LPUART_TDR register has been transferred into the shift register. It is cleared by a write to the LPUART_TDR register. An interrupt is generated if the TXEIE bit =1 in the LPUART_CR1 register. Note: This bit is used during single buffer transmission.
0x4000801C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full, and so data can be written in the LPUART_TDR. Every write in the LPUART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the LPUART_TDR. The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF must be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). An interrupt is generated if the TXFNFIE bit =1 in the LPUART_CR1 register. Note: This bit is used during single buffer transmission.
0x4000801C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the LPUART_ICR register. An interrupt is generated if CTSIE=1 in the LPUART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000801C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the LPUART_ICR register. An interrupt is generated if CTSIE=1 in the LPUART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000801C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000801C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000801C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000801C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000801C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the LPUART_ICR register. An interrupt is generated if CMIE=1in the LPUART_CR1 register.
0x4000801C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the LPUART_ICR register. An interrupt is generated if CMIE=1in the LPUART_CR1 register.
0x4000801C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the LPUART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000801C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the LPUART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000801C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the LPUART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the LPUART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the LPUART_RQR register. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x4000801C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the LPUART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the LPUART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the LPUART_RQR register. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x4000801C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the LPUART_ICR register. An interrupt is generated if WUFIE=1 in the LPUART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x4000801C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the LPUART_ICR register. An interrupt is generated if WUFIE=1 in the LPUART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x4000801C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the LPUART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the LPUART_CR1 register, in order to respect the TE=0 minimum period.
0x4000801C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the LPUART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the LPUART_CR1 register, in order to respect the TE=0 minimum period.
0x4000801C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the LPUART. It can be used to verify that the LPUART is ready for reception before entering low-power mode. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x4000801C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the LPUART. It can be used to verify that the LPUART is ready for reception before entering low-power mode. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x4000801C C   FIELD 23w01 TXFE (ro): TXFIFO Empty This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the LPUART_RQR register. An interrupt is generated if the TXFEIE bit =1 (bit 30) in the LPUART_CR1 register.
0x4000801C C   FIELD 24w01 RXFF (ro): RXFIFO Full This bit is set by hardware when the number of received data corresponds to RXFIFO1size1+11 (RXFIFO full + 1 data in the LPUART_RDR register. An interrupt is generated if the RXFFIE bit =1 in the LPUART_CR1 register.
0x4000801C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the RXFIFO reaches the threshold programmed in RXFTCFG in LPUART_CR3 register i.e. the Receive FIFO contains RXFTCFG data. An interrupt is generated if the RXFTIE bit =1 (bit 27) in the LPUART_CR3 register.
0x4000801C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG in LPUART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit =1 (bit 31) in the LPUART_CR3 register.
0x40008020 B  REGISTER LPUART_ICR: LPUART interrupt flag clear register
0x40008020 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the LPUART_ISR register.
0x40008020 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the LPUART_ISR register.
0x40008020 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the LPUART_ISR register.
0x40008020 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the LPUART_ISR register.
0x40008020 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the LPUART_ISR register.
0x40008020 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the LPUART_ISR register.
0x40008020 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the LPUART_ISR register.
0x40008020 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the LPUART_ISR register.
0x40008020 C   FIELD 20w01 WUCF (wo): Wake-up from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008024 B  REGISTER LPUART_RDR: LPUART receive data register
0x40008024 C   FIELD 00w09 RDR (ro): Receive data value Contains the received data character. The RDR register provides the parallel interface between the input shift register and the internal bus (see Figure1254). When receiving with the parity enabled, the value read in the MSB bit is the received parity bit.
0x40008028 B  REGISTER LPUART_TDR: LPUART transmit data register
0x40008028 C   FIELD 00w09 TDR (rw): Transmit data value Contains the data character to be transmitted. The TDR register provides the parallel interface between the internal bus and the output shift register (see Figure1254). When transmitting with the parity enabled (PCE bit set to 1 in the LPUART_CR1 register), the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect because it is replaced by the parity. Note: This register must be written only when TXE/TXFNF=1.
0x4000802C B  REGISTER LPUART_PRESC: LPUART prescaler register
0x4000802C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The LPUART input clock can be divided by a prescaler: Remaining combinations: Reserved. Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is equal to 1011 i.e. input clock divided by 256.
0x40008400 A PERIPHERAL LPUART2
0x40008400 B  REGISTER LPUART_CR1: LPUART control register 1
0x40008400 B  REGISTER LPUART_CR1_ALTERNATE: LPUART control register 1
0x40008400 C   FIELD 00w01 UE (rw): LPUART enable When this bit is cleared, the LPUART prescalers and outputs are stopped immediately, and current operations are discarded. The configuration of the LPUART is kept, but all the status flags, in the LPUART_ISR are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be reset before and the software must wait for the TC bit in the LPUART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit.
0x40008400 C   FIELD 00w01 UE (rw): LPUART enable When this bit is cleared, the LPUART prescalers and outputs are stopped immediately, and current operations are discarded. The configuration of the LPUART is kept, but all the status flags, in the LPUART_ISR are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be reset before and the software must wait for the TC bit in the LPUART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit.
0x40008400 C   FIELD 01w01 UESM (rw): LPUART enable in low-power mode When this bit is cleared, the LPUART cannot wake up the MCU from low-power mode. When this bit is set, the LPUART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40008400 C   FIELD 01w01 UESM (rw): LPUART enable in low-power mode When this bit is cleared, the LPUART cannot wake up the MCU from low-power mode. When this bit is set, the LPUART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40008400 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40008400 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40008400 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the LPUART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40008400 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the LPUART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40008400 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40008400 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40008400 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the LPUART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the LPUART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1) description). This bit can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1) description). This bit can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 13w01 MME (rw): Mute mode enable This bit activates the Mute mode function of the LPUART. When set, the LPUART can switch between the active and Mute modes, as defined by the WAKE bit. It is set and cleared by software.
0x40008400 C   FIELD 13w01 MME (rw): Mute mode enable This bit activates the Mute mode function of the LPUART. When set, the LPUART can switch between the active and Mute modes, as defined by the WAKE bit. It is set and cleared by software.
0x40008400 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal.It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section132.4.14: RS232 Hardware flow control and RS485 Driver Enable. If the LPUART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal.It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section132.4.14: RS232 Hardware flow control and RS485 Driver Enable. If the LPUART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section131.5.21: RS232 Hardware flow control and RS485 Driver Enable. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section131.5.21: RS232 Hardware flow control and RS485 Driver Enable. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008400 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 Start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 Start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 Start bit, 7 Data bits, n Stop bit This bit can only be written when the LPUART is disabled (UE=0). Note: In 7-bit data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40008400 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 Start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 Start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 Start bit, 7 Data bits, n Stop bit This bit can only be written when the LPUART is disabled (UE=0). Note: In 7-bit data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40008400 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software.
0x40008400 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software.
0x40008400 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40008400 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40008404 B  REGISTER LPUART_CR2: LPUART control register 2
0x40008404 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the LPUART is disabled (UE=0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40008404 C   FIELD 12w02 STOP (rw): STOP bits These bits are used for programming the stop bits. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008404 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008404 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008404 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008404 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008404 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008404 C   FIELD 24w08 ADD (rw): Address of the LPUART node These bits give the address of the LPUART node in Mute mode or a character code to be recognized in low-power or Run mode: In Mute mode: they are used in multiprocessor communication to wake up from Mute mode with 4-bit/7-bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1. In 4-bit address mark detection, only ADD[3:0] bits are used. In low-power mode: they are used for wake up from low-power mode on character match. When WUS[1:0] is programmed to 0b00 (WUF active on address match), the wake-up from low-power mode is performed when the received character corresponds to the character programmed through ADD[6:0] or ADD[3:0] bitfield (depending on ADDM7 bit), and WUF interrupt is enabled by setting WUFIE bit. The MSB of the character sent by transmitter should be equal to 1. In Run mode with Mute mode inactive (for example, end-of-block detection in ModBus protocol): the whole received character (8 bits) is compared to ADD[7:0] value and CMF flag is set on match. An interrupt is generated if the CMIE bit is set. These bits can only be written when the reception is disabled (RE1=10) or when the USART is disabled (UE1=10).
0x40008408 B  REGISTER LPUART_CR3: LPUART control register 3
0x40008408 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error or noise flag (FE=1 or ORE=1 or NE=1 in the LPUART_ISR register).
0x40008408 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the LPUART is disabled (UE=0).
0x40008408 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40008408 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40008408 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the LPUART is disabled (UE=0).
0x40008408 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the LPUART is disabled (UE=0)
0x40008408 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable
0x40008408 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the LPUART_RDR register. This bit can only be written when the LPUART is disabled (UE=0). Note: This control bit enables checking the communication flow w/o reading the data.
0x40008408 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the LPUART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40008408 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the LPUART is disabled (UE=0).
0x40008408 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the LPUART is disabled (UE=0).
0x40008408 C   FIELD 20w01 WUS0 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wake-up from low-power mode flag). This bitfield can only be written when the LPUART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008408 C   FIELD 21w01 WUS1 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wake-up from low-power mode flag). This bitfield can only be written when the LPUART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008408 C   FIELD 22w01 WUFIE (rw): Wake-up from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008408 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40008408 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved.
0x40008408 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40008408 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved.
0x4000840C B  REGISTER LPUART_BRR: LPUART baud rate register
0x4000840C C   FIELD 00w20 BRR (rw): LPUART baud rate division (LPUARTDIV)
0x40008418 B  REGISTER LPUART_RQR: LPUART request register
0x40008418 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: If the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software must wait for the TXE flag assertion before setting the SBKRQ bit.
0x40008418 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the LPUART in Mute mode and resets the RWU flag.
0x40008418 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit clears the RXNE flag. This enables discarding the received data without reading it, and avoid an overrun condition.
0x40008418 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request This bit is used when FIFO mode is enabled. TXFRQ bit is set to flush the whole FIFO. This sets the flag TXFE (TXFIFO empty, bit 23 in the LPUART_ISR register). Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4000841C B  REGISTER LPUART_ISR: LPUART interrupt and status register
0x4000841C B  REGISTER LPUART_ISR_ALTERNATE: LPUART interrupt and status register
0x4000841C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the LPUART_ICR register. An interrupt is generated if PEIE = 1 in the LPUART_CR1 register. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x4000841C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the LPUART_ICR register. An interrupt is generated if PEIE = 1 in the LPUART_CR1 register. Note: This error is associated with the character in the LPUART_RDR.
0x4000841C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the LPUART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the LPUART_CR3 register. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x4000841C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the LPUART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the LPUART_CR3 register. Note: This error is associated with the character in the LPUART_RDR.
0x4000841C C   FIELD 02w01 NE (ro): Start bit noise detection flag This bit is set by hardware when noise is detected on the start bit of a received frame. It is cleared by software, writing 1 to the NFCF bit in the LPUART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: This error is associated with the character in the LPUART_RDR.
0x4000841C C   FIELD 02w01 NE (ro): Start bit noise detection flag This bit is set by hardware when noise is detected on the start bit of a received frame. It is cleared by software, writing 1 to the NFCF bit in the LPUART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE/RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x4000841C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the LPUART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the LPUART_ICR register. An interrupt is generated if RXFNEIE=1 in the LPUART_CR1 register, or EIE = 1 in the LPUART_CR3 register. Note: When this bit is set, the LPUART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the LPUART_CR3 register.
0x4000841C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the LPUART_RDR register while RXNE=1 (RXFF = 1 in case FIFO mode is enabled). It is cleared by a software, writing 1 to the ORECF, in the LPUART_ICR register. An interrupt is generated if RXNEIE=1 in the LPUART_CR1 register, or EIE = 1 in the LPUART_CR3 register. Note: When this bit is set, the LPUART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the LPUART_CR3 register.
0x4000841C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the LPUART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the LPUART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the LPUART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4000841C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle line is detected. An interrupt is generated if IDLEIE=1 in the LPUART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the LPUART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the LPUART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4000841C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, and so data can be read from the LPUART_RDR register. Every read of the LPUART_RDR frees a location in the RXFIFO. It is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. An interrupt is generated if RXFNEIE=1 in the LPUART_CR1 register.
0x4000841C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the LPUART_RDR shift register has been transferred to the LPUART_RDR register. It is cleared by a read to the LPUART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. An interrupt is generated if RXNEIE=1 in the LPUART_CR1 register.
0x4000841C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the LPUART_TDR has been transmitted out of the shift register. The TC flag behaves as follows: When TDN = 0, the TC flag is set when the transmission of a frame containing data is complete and when TXFE is set. When TDN is equal to the number of data in the TXFIFO, the TC flag is set when TXFIFO is empty and TDN is reached. When TDN is greater than the number of data in the TXFIFO, TC remains cleared until the TXFIFO is filled again to reach the programmed number of data to be transferred. When TDN is less than the number of data in the TXFIFO, TC is set when TDN is reached even if the TXFIFO is not empty. An interrupt is generated if TCIE=1 in the LPUART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the LPUART_ICR register or by writing to the LPUART_TDR register.
0x4000841C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag is set when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIE=1 in the LPUART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x4000841C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the LPUART_TDR register has been transferred into the shift register. It is cleared by a write to the LPUART_TDR register. An interrupt is generated if the TXEIE bit =1 in the LPUART_CR1 register. Note: This bit is used during single buffer transmission.
0x4000841C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full, and so data can be written in the LPUART_TDR. Every write in the LPUART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the LPUART_TDR. The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF must be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). An interrupt is generated if the TXFNFIE bit =1 in the LPUART_CR1 register. Note: This bit is used during single buffer transmission.
0x4000841C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the LPUART_ICR register. An interrupt is generated if CTSIE=1 in the LPUART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000841C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the LPUART_ICR register. An interrupt is generated if CTSIE=1 in the LPUART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000841C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000841C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4000841C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000841C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4000841C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the LPUART_ICR register. An interrupt is generated if CMIE=1in the LPUART_CR1 register.
0x4000841C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the LPUART_ICR register. An interrupt is generated if CMIE=1in the LPUART_CR1 register.
0x4000841C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the LPUART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000841C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the LPUART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4000841C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the LPUART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the LPUART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the LPUART_RQR register. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x4000841C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the LPUART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the LPUART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the LPUART_RQR register. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x4000841C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the LPUART_ICR register. An interrupt is generated if WUFIE=1 in the LPUART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x4000841C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the LPUART_ICR register. An interrupt is generated if WUFIE=1 in the LPUART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x4000841C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the LPUART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the LPUART_CR1 register, in order to respect the TE=0 minimum period.
0x4000841C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the LPUART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the LPUART_CR1 register, in order to respect the TE=0 minimum period.
0x4000841C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the LPUART. It can be used to verify that the LPUART is ready for reception before entering low-power mode. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x4000841C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the LPUART. It can be used to verify that the LPUART is ready for reception before entering low-power mode. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x4000841C C   FIELD 23w01 TXFE (ro): TXFIFO Empty This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the LPUART_RQR register. An interrupt is generated if the TXFEIE bit =1 (bit 30) in the LPUART_CR1 register.
0x4000841C C   FIELD 24w01 RXFF (ro): RXFIFO Full This bit is set by hardware when the number of received data corresponds to RXFIFO1size1+11 (RXFIFO full + 1 data in the LPUART_RDR register. An interrupt is generated if the RXFFIE bit =1 in the LPUART_CR1 register.
0x4000841C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the RXFIFO reaches the threshold programmed in RXFTCFG in LPUART_CR3 register i.e. the Receive FIFO contains RXFTCFG data. An interrupt is generated if the RXFTIE bit =1 (bit 27) in the LPUART_CR3 register.
0x4000841C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG in LPUART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit =1 (bit 31) in the LPUART_CR3 register.
0x40008420 B  REGISTER LPUART_ICR: LPUART interrupt flag clear register
0x40008420 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the LPUART_ISR register.
0x40008420 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the LPUART_ISR register.
0x40008420 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the LPUART_ISR register.
0x40008420 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the LPUART_ISR register.
0x40008420 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the LPUART_ISR register.
0x40008420 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the LPUART_ISR register.
0x40008420 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the LPUART_ISR register.
0x40008420 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the LPUART_ISR register.
0x40008420 C   FIELD 20w01 WUCF (wo): Wake-up from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008424 B  REGISTER LPUART_RDR: LPUART receive data register
0x40008424 C   FIELD 00w09 RDR (ro): Receive data value Contains the received data character. The RDR register provides the parallel interface between the input shift register and the internal bus (see Figure1254). When receiving with the parity enabled, the value read in the MSB bit is the received parity bit.
0x40008428 B  REGISTER LPUART_TDR: LPUART transmit data register
0x40008428 C   FIELD 00w09 TDR (rw): Transmit data value Contains the data character to be transmitted. The TDR register provides the parallel interface between the internal bus and the output shift register (see Figure1254). When transmitting with the parity enabled (PCE bit set to 1 in the LPUART_CR1 register), the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect because it is replaced by the parity. Note: This register must be written only when TXE/TXFNF=1.
0x4000842C B  REGISTER LPUART_PRESC: LPUART prescaler register
0x4000842C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The LPUART input clock can be divided by a prescaler: Remaining combinations: Reserved. Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is equal to 1011 i.e. input clock divided by 256.
0x40008800 A PERIPHERAL I2C3
0x40008800 B  REGISTER I2C_CR1: I2C control register 1
0x40008800 C   FIELD 00w01 PE (rw): Peripheral enable Note: When PE = 0, the I2C SCL and SDA lines are released. Internal state machines and status bits are put back to their reset value. When cleared, PE must be kept low for at least three APB clock cycles.
0x40008800 C   FIELD 01w01 TXIE (rw): TX interrupt enable
0x40008800 C   FIELD 02w01 RXIE (rw): RX interrupt enable
0x40008800 C   FIELD 03w01 ADDRIE (rw): Address match interrupt enable (slave only)
0x40008800 C   FIELD 04w01 NACKIE (rw): Not acknowledge received interrupt enable
0x40008800 C   FIELD 05w01 STOPIE (rw): Stop detection interrupt enable
0x40008800 C   FIELD 06w01 TCIE (rw): Transfer complete interrupt enable Note: Any of these events generate an interrupt: Note: Transfer complete (TC) Note: Transfer complete reload (TCR)
0x40008800 C   FIELD 07w01 ERRIE (rw): Error interrupts enable Note: Any of these errors generate an interrupt: Note: Arbitration loss (ARLO) Note: Bus error detection (BERR) Note: Overrun/Underrun (OVR)
0x40008800 C   FIELD 08w04 DNF (rw): Digital noise filter These bits are used to configure the digital noise filter on SDA and SCL input. The digital filter, filters spikes with a length of up to DNF[3:0] * t<sub>I2CCLK</sub> <sub>...</sub> Note: If the analog filter is enabled, the digital filter is added to it. This filter can be programmed only when the I2C is disabled (PE = 0).
0x40008800 C   FIELD 12w01 ANFOFF (rw): Analog noise filter OFF Note: This bit can be programmed only when the I2C is disabled (PE = 0).
0x40008800 C   FIELD 14w01 TXDMAEN (rw): DMA transmission requests enable
0x40008800 C   FIELD 15w01 RXDMAEN (rw): DMA reception requests enable
0x40008800 C   FIELD 16w01 SBC (rw): Slave byte control This bit is used to enable hardware byte control in slave mode.
0x40008800 C   FIELD 17w01 NOSTRETCH (rw): Clock stretching disable This bit is used to disable clock stretching in slave mode. It must be kept cleared in master mode. Note: This bit can be programmed only when the I2C is disabled (PE = 0).
0x40008800 C   FIELD 18w01 WUPEN (rw): Wake-up from Stop mode enable
0x40008800 C   FIELD 19w01 GCEN (rw): General call enable
0x40008800 C   FIELD 24w01 FMP (rw): Fast-mode Plus 20 mA drive enable
0x40008800 C   FIELD 30w01 ADDRACLR (rw): Address match flag (ADDR) automatic clear
0x40008800 C   FIELD 31w01 STOPFACLR (rw): STOP detection flag (STOPF) automatic clear
0x40008804 B  REGISTER I2C_CR2: I2C control register 2
0x40008804 C   FIELD 00w10 SADD (rw): Slave address (master mode) In 7-bit addressing mode (ADD10 = 0): SADD[7:1] must be written with the 7-bit slave address to be sent. Bits SADD[9], SADD[8] and SADD[0] are don't care. In 10-bit addressing mode (ADD10 = 1): SADD[9:0] must be written with the 10-bit slave address to be sent. Note: Changing these bits when the START bit is set is not allowed.
0x40008804 C   FIELD 10w01 RD_WRN (rw): Transfer direction (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40008804 C   FIELD 11w01 ADD10 (rw): 10-bit addressing mode (master mode) Note: Changing this bit when the START bit is set is not allowed.
0x40008804 C   FIELD 12w01 HEAD10R (rw): 10-bit address header only read direction (master receiver mode) Note: Changing this bit when the START bit is set is not allowed.
0x40008804 C   FIELD 13w01 START (rw): Start generation This bit is set by software, and cleared by hardware after the Start followed by the address sequence is sent, by an arbitration loss, by an address matched in slave mode, by a timeout error detection, or when PE = 0. If the I2C is already in master mode with AUTOEND = 0, setting this bit generates a Repeated start condition when RELOAD = 0, after the end of the NBYTES transfer. Otherwise, setting this bit generates a START condition once the bus is free. Note: Writing 0 to this bit has no effect. Note: The START bit can be set even if the bus is BUSY or I2C is in slave mode. Note: This bit has no effect when RELOAD is set.
0x40008804 C   FIELD 14w01 STOP (rw): Stop generation (master mode) The bit is set by software, cleared by hardware when a STOP condition is detected, or when PE = 0. In master mode: Note: Writing 0 to this bit has no effect.
0x40008804 C   FIELD 15w01 NACK (rw): NACK generation (slave mode) The bit is set by software, cleared by hardware when the NACK is sent, or when a STOP condition or an Address matched is received, or when PE = 0. Note: Writing 0 to this bit has no effect. Note: This bit is used in slave mode only: in master receiver mode, NACK is automatically generated after last byte preceding STOP or RESTART condition, whatever the NACK bit value. Note: When an overrun occurs in slave receiver NOSTRETCH mode, a NACK is automatically generated, whatever the NACK bit value. Note: When hardware PEC checking is enabled (PECBYTE = 1), the PEC acknowledge value does not depend on the NACK value.
0x40008804 C   FIELD 16w08 NBYTES (rw): Number of bytes
0x40008804 C   FIELD 24w01 RELOAD (rw): NBYTES reload mode This bit is set and cleared by software.
0x40008804 C   FIELD 25w01 AUTOEND (rw): Automatic end mode (master mode) This bit is set and cleared by software. Note: This bit has no effect in slave mode or when the RELOAD bit is set.
0x40008808 B  REGISTER I2C_OAR1: I2C own address 1 register
0x40008808 C   FIELD 00w10 OA1 (rw): Interface own slave address 7-bit addressing mode: OA1[7:1] contains the 7-bit own slave address. Bits OA1[9], OA1[8] and OA1[0] are don't care. 10-bit addressing mode: OA1[9:0] contains the 10-bit own slave address. Note: These bits can be written only when OA1EN = 0.
0x40008808 C   FIELD 10w01 OA1MODE (rw): Own address 1 10-bit mode Note: This bit can be written only when OA1EN = 0.
0x40008808 C   FIELD 15w01 OA1EN (rw): Own address 1 enable
0x4000880C B  REGISTER I2C_OAR2: I2C own address 2 register
0x4000880C C   FIELD 01w07 OA2 (rw): Interface address 7-bit addressing mode: 7-bit address Note: These bits can be written only when OA2EN = 0.
0x4000880C C   FIELD 08w03 OA2MSK (rw): Own address 2 masks Note: These bits can be written only when OA2EN = 0. Note: As soon as OA2MSK is not equal to 0, the reserved I2C addresses (0b0000xxx and 0b1111xxx) are not acknowledged even if the comparison matches.
0x4000880C C   FIELD 15w01 OA2EN (rw): Own address 2 enable
0x40008810 B  REGISTER I2C_TIMINGR: I2C timing register
0x40008810 C   FIELD 00w08 SCLL (rw): SCL low period (master mode) This field is used to generate the SCL low period in master mode. t<sub>SCLL </sub>= (SCLL + 1) x t<sub>PRESC</sub> Note: SCLL is also used to generate t<sub>BUF </sub>and t<sub>SU:STA </sub>timings.
0x40008810 C   FIELD 08w08 SCLH (rw): SCL high period (master mode) This field is used to generate the SCL high period in master mode. t<sub>SCLH </sub>= (SCLH + 1) x t<sub>PRESC</sub> Note: SCLH is also used to generate t<sub>SU:STO </sub>and t<sub>HD:STA </sub>timing.
0x40008810 C   FIELD 16w04 SDADEL (rw): Data hold time This field is used to generate the delay t<sub>SDADEL </sub>between SCL falling edge and SDA edge. In master and in slave modes with NOSTRETCH = 0, the SCL line is stretched low during t<sub>SDADEL</sub>. t<sub>SDADEL</sub>= SDADEL x t<sub>PRESC</sub> Note: SDADEL is used to generate t<sub>HD:DAT </sub>timing.
0x40008810 C   FIELD 20w04 SCLDEL (rw): Data setup time This field is used to generate a delay t<sub>SCLDEL </sub>between SDA edge and SCL rising edge. In master and in slave modes with NOSTRETCH = 0, the SCL line is stretched low during t<sub>SCLDEL</sub>. t<sub>SCLDEL </sub>= (SCLDEL + 1) x t<sub>PRESC</sub> Note: t<sub>SCLDEL</sub> is used to generate t<sub>SU:DAT </sub>timing.
0x40008810 C   FIELD 28w04 PRESC (rw): Timing prescaler This field is used to prescale I2CCLK to generate the clock period t<sub>PRESC </sub>used for data setup and hold counters (refer to I2C timings) and for SCL high and low level counters (refer to I2C master initialization). t<sub>PRESC </sub>= (PRESC + 1) x t<sub>I2CCLK</sub>
0x40008814 B  REGISTER I2C_TIMEOUTR: I2C timeout register
0x40008814 C   FIELD 00w12 TIMEOUTA (rw): Bus timeout A This field is used to configure: The SCL low timeout condition t<sub>TIMEOUT</sub> when TIDLE = 0 t<sub>TIMEOUT</sub>= (TIMEOUTA + 1) x 2048 x t<sub>I2CCLK</sub> The bus idle condition (both SCL and SDA high) when TIDLE = 1 t<sub>IDLE</sub>= (TIMEOUTA + 1) x 4 x t<sub>I2CCLK</sub> Note: These bits can be written only when TIMOUTEN = 0.
0x40008814 C   FIELD 12w01 TIDLE (rw): Idle clock timeout detection Note: This bit can be written only when TIMOUTEN = 0.
0x40008814 C   FIELD 15w01 TIMOUTEN (rw): Clock timeout enable
0x40008814 C   FIELD 16w12 TIMEOUTB (rw): Bus timeout B This field is used to configure the cumulative clock extension timeout: In master mode, the master cumulative clock low extend time (t<sub>LOW:MEXT</sub>) is detected In slave mode, the slave cumulative clock low extend time (t<sub>LOW:SEXT</sub>) is detected t<sub>LOW:EXT </sub>= (TIMEOUTB + TIDLE = 01) x 2048 x t<sub>I2CCLK</sub> Note: These bits can be written only when TEXTEN = 0.
0x40008814 C   FIELD 31w01 TEXTEN (rw): Extended clock timeout enable
0x40008818 B  REGISTER I2C_ISR: I2C interrupt and status register
0x40008818 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters) This bit is set by hardware when the I2C_TXDR register is empty. It is cleared when the next data to be sent is written in the I2C_TXDR register. This bit can be written to 1 by software in order to flush the transmit data register I2C_TXDR. Note: This bit is set by hardware when PE = 0.
0x40008818 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters) This bit is set by hardware when the I2C_TXDR register is empty and the data to be transmitted must be written in the I2C_TXDR register. It is cleared when the next data to be sent is written in the I2C_TXDR register. This bit can be written to 1 by software only when NOSTRETCH = 1, to generate a TXIS event (interrupt if TXIE = 1 or DMA request if TXDMAEN = 1). Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers) This bit is set by hardware when the received data is copied into the I2C_RXDR register, and is ready to be read. It is cleared when I2C_RXDR is read. Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 03w01 ADDR (ro): Address matched (slave mode) This bit is set by hardware as soon as the received slave address matched with one of the enabled slave addresses. It is cleared by software by setting ADDRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 04w01 NACKF (ro): Not Acknowledge received flag This flag is set by hardware when a NACK is received after a byte transmission. It is cleared by software by setting the NACKCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 05w01 STOPF (ro): Stop detection flag This flag is set by hardware when a STOP condition is detected on the bus and the peripheral is involved in this transfer: either as a master, provided that the STOP condition is generated by the peripheral. or as a slave, provided that the peripheral has been addressed previously during this transfer. It is cleared by software by setting the STOPCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 06w01 TC (ro): Transfer Complete (master mode) This flag is set by hardware when RELOAD = 0, AUTOEND = 0 and NBYTES data have been transferred. It is cleared by software when START bit or STOP bit is set. Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 07w01 TCR (ro): Transfer Complete Reload This flag is set by hardware when RELOAD = 1 and NBYTES data have been transferred. It is cleared by software when NBYTES is written to a non-zero value. Note: This bit is cleared by hardware when PE = 0. Note: This flag is only for master mode, or for slave mode when the SBC bit is set.
0x40008818 C   FIELD 08w01 BERR (ro): Bus error This flag is set by hardware when a misplaced Start or STOP condition is detected whereas the peripheral is involved in the transfer. The flag is not set during the address phase in slave mode. It is cleared by software by setting BERRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 09w01 ARLO (ro): Arbitration lost This flag is set by hardware in case of arbitration loss. It is cleared by software by setting the ARLOCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode) This flag is set by hardware in slave mode with NOSTRETCH = 1, when an overrun/underrun error occurs. It is cleared by software by setting the OVRCF bit. Note: This bit is cleared by hardware when PE = 0.
0x40008818 C   FIELD 15w01 BUSY (ro): Bus busy This flag indicates that a communication is in progress on the bus. It is set by hardware when a START condition is detected, and cleared by hardware when a STOP condition is detected, or when PE = 0.
0x40008818 C   FIELD 16w01 DIR (ro): Transfer direction (slave mode) This flag is updated when an address match event occurs (ADDR = 1).
0x40008818 C   FIELD 17w07 ADDCODE (ro): Address match code (slave mode) These bits are updated with the received address when an address match event occurs (ADDR = 1). In the case of a 10-bit address, ADDCODE provides the 10-bit header followed by the two MSBs of the address.
0x4000881C B  REGISTER I2C_ICR: I2C interrupt clear register
0x4000881C C   FIELD 03w01 ADDRCF (wo): Address matched flag clear Writing 1 to this bit clears the ADDR flag in the I2C_ISR register. Writing 1 to this bit also clears the START bit in the I2C_CR2 register.
0x4000881C C   FIELD 04w01 NACKCF (wo): Not Acknowledge flag clear Writing 1 to this bit clears the NACKF flag in I2C_ISR register.
0x4000881C C   FIELD 05w01 STOPCF (wo): STOP detection flag clear Writing 1 to this bit clears the STOPF flag in the I2C_ISR register.
0x4000881C C   FIELD 08w01 BERRCF (wo): Bus error flag clear Writing 1 to this bit clears the BERRF flag in the I2C_ISR register.
0x4000881C C   FIELD 09w01 ARLOCF (wo): Arbitration lost flag clear Writing 1 to this bit clears the ARLO flag in the I2C_ISR register.
0x4000881C C   FIELD 10w01 OVRCF (wo): Overrun/Underrun flag clear Writing 1 to this bit clears the OVR flag in the I2C_ISR register.
0x40008820 B  REGISTER I2C_PECR: I2C PEC register
0x40008820 C   FIELD 00w08 PEC (ro): Packet error checking register This field contains the internal PEC when PECEN=1. The PEC is cleared by hardware when PE = 0.
0x40008824 B  REGISTER I2C_RXDR: I2C receive data register
0x40008824 C   FIELD 00w08 RXDATA (ro): 8-bit receive data Data byte received from the I<sup>2</sup>C bus
0x40008828 B  REGISTER I2C_TXDR: I2C transmit data register
0x40008828 C   FIELD 00w08 TXDATA (rw): 8-bit transmit data Data byte to be transmitted to the I<sup>2</sup>C bus Note: These bits can be written only when TXE = 1.
0x40008C00 A PERIPHERAL LPUART3
0x40008C00 B  REGISTER LPUART_CR1: LPUART control register 1
0x40008C00 B  REGISTER LPUART_CR1_ALTERNATE: LPUART control register 1
0x40008C00 C   FIELD 00w01 UE (rw): LPUART enable When this bit is cleared, the LPUART prescalers and outputs are stopped immediately, and current operations are discarded. The configuration of the LPUART is kept, but all the status flags, in the LPUART_ISR are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be reset before and the software must wait for the TC bit in the LPUART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit.
0x40008C00 C   FIELD 00w01 UE (rw): LPUART enable When this bit is cleared, the LPUART prescalers and outputs are stopped immediately, and current operations are discarded. The configuration of the LPUART is kept, but all the status flags, in the LPUART_ISR are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be reset before and the software must wait for the TC bit in the LPUART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit.
0x40008C00 C   FIELD 01w01 UESM (rw): LPUART enable in low-power mode When this bit is cleared, the LPUART cannot wake up the MCU from low-power mode. When this bit is set, the LPUART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40008C00 C   FIELD 01w01 UESM (rw): LPUART enable in low-power mode When this bit is cleared, the LPUART cannot wake up the MCU from low-power mode. When this bit is set, the LPUART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40008C00 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40008C00 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40008C00 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the LPUART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40008C00 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the LPUART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40008C00 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40008C00 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40008C00 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the LPUART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the LPUART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1) description). This bit can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1) description). This bit can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 13w01 MME (rw): Mute mode enable This bit activates the Mute mode function of the LPUART. When set, the LPUART can switch between the active and Mute modes, as defined by the WAKE bit. It is set and cleared by software.
0x40008C00 C   FIELD 13w01 MME (rw): Mute mode enable This bit activates the Mute mode function of the LPUART. When set, the LPUART can switch between the active and Mute modes, as defined by the WAKE bit. It is set and cleared by software.
0x40008C00 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal.It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section132.4.14: RS232 Hardware flow control and RS485 Driver Enable. If the LPUART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal.It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section132.4.14: RS232 Hardware flow control and RS485 Driver Enable. If the LPUART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section131.5.21: RS232 Hardware flow control and RS485 Driver Enable. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in lpuart_ker_ck clock cycles. For more details, refer Section131.5.21: RS232 Hardware flow control and RS485 Driver Enable. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C00 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 Start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 Start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 Start bit, 7 Data bits, n Stop bit This bit can only be written when the LPUART is disabled (UE=0). Note: In 7-bit data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40008C00 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 Start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 Start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 Start bit, 7 Data bits, n Stop bit This bit can only be written when the LPUART is disabled (UE=0). Note: In 7-bit data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40008C00 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software.
0x40008C00 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software.
0x40008C00 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40008C00 C   FIELD 31w01 RXFFIE (rw): RXFIFO Full interrupt enable This bit is set and cleared by software.
0x40008C04 B  REGISTER LPUART_CR2: LPUART control register 2
0x40008C04 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the LPUART is disabled (UE=0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40008C04 C   FIELD 12w02 STOP (rw): STOP bits These bits are used for programming the stop bits. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C04 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C04 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C04 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C04 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C04 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the LPUART is disabled (UE=0).
0x40008C04 C   FIELD 24w08 ADD (rw): Address of the LPUART node These bits give the address of the LPUART node in Mute mode or a character code to be recognized in low-power or Run mode: In Mute mode: they are used in multiprocessor communication to wake up from Mute mode with 4-bit/7-bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1. In 4-bit address mark detection, only ADD[3:0] bits are used. In low-power mode: they are used for wake up from low-power mode on character match. When WUS[1:0] is programmed to 0b00 (WUF active on address match), the wake-up from low-power mode is performed when the received character corresponds to the character programmed through ADD[6:0] or ADD[3:0] bitfield (depending on ADDM7 bit), and WUF interrupt is enabled by setting WUFIE bit. The MSB of the character sent by transmitter should be equal to 1. In Run mode with Mute mode inactive (for example, end-of-block detection in ModBus protocol): the whole received character (8 bits) is compared to ADD[7:0] value and CMF flag is set on match. An interrupt is generated if the CMIE bit is set. These bits can only be written when the reception is disabled (RE1=10) or when the USART is disabled (UE1=10).
0x40008C08 B  REGISTER LPUART_CR3: LPUART control register 3
0x40008C08 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error or noise flag (FE=1 or ORE=1 or NE=1 in the LPUART_ISR register).
0x40008C08 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the LPUART is disabled (UE=0).
0x40008C08 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40008C08 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40008C08 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the LPUART is disabled (UE=0).
0x40008C08 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the LPUART is disabled (UE=0)
0x40008C08 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable
0x40008C08 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the LPUART_RDR register. This bit can only be written when the LPUART is disabled (UE=0). Note: This control bit enables checking the communication flow w/o reading the data.
0x40008C08 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the LPUART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40008C08 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the LPUART is disabled (UE=0).
0x40008C08 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the LPUART is disabled (UE=0).
0x40008C08 C   FIELD 20w01 WUS0 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wake-up from low-power mode flag). This bitfield can only be written when the LPUART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008C08 C   FIELD 21w01 WUS1 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (Wake-up from low-power mode flag). This bitfield can only be written when the LPUART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008C08 C   FIELD 22w01 WUFIE (rw): Wake-up from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008C08 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40008C08 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved.
0x40008C08 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40008C08 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved.
0x40008C0C B  REGISTER LPUART_BRR: LPUART baud rate register
0x40008C0C C   FIELD 00w20 BRR (rw): LPUART baud rate division (LPUARTDIV)
0x40008C18 B  REGISTER LPUART_RQR: LPUART request register
0x40008C18 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: If the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software must wait for the TXE flag assertion before setting the SBKRQ bit.
0x40008C18 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the LPUART in Mute mode and resets the RWU flag.
0x40008C18 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit clears the RXNE flag. This enables discarding the received data without reading it, and avoid an overrun condition.
0x40008C18 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request This bit is used when FIFO mode is enabled. TXFRQ bit is set to flush the whole FIFO. This sets the flag TXFE (TXFIFO empty, bit 23 in the LPUART_ISR register). Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x40008C1C B  REGISTER LPUART_ISR: LPUART interrupt and status register
0x40008C1C B  REGISTER LPUART_ISR_ALTERNATE: LPUART interrupt and status register
0x40008C1C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the LPUART_ICR register. An interrupt is generated if PEIE = 1 in the LPUART_CR1 register. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x40008C1C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the LPUART_ICR register. An interrupt is generated if PEIE = 1 in the LPUART_CR1 register. Note: This error is associated with the character in the LPUART_RDR.
0x40008C1C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the LPUART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the LPUART_CR3 register. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x40008C1C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the LPUART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the LPUART_CR3 register. Note: This error is associated with the character in the LPUART_RDR.
0x40008C1C C   FIELD 02w01 NE (ro): Start bit noise detection flag This bit is set by hardware when noise is detected on the start bit of a received frame. It is cleared by software, writing 1 to the NFCF bit in the LPUART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: This error is associated with the character in the LPUART_RDR.
0x40008C1C C   FIELD 02w01 NE (ro): Start bit noise detection flag This bit is set by hardware when noise is detected on the start bit of a received frame. It is cleared by software, writing 1 to the NFCF bit in the LPUART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE/RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: In FIFO mode, this error is associated with the character in the LPUART_RDR.
0x40008C1C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the LPUART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the LPUART_ICR register. An interrupt is generated if RXFNEIE=1 in the LPUART_CR1 register, or EIE = 1 in the LPUART_CR3 register. Note: When this bit is set, the LPUART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the LPUART_CR3 register.
0x40008C1C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the LPUART_RDR register while RXNE=1 (RXFF = 1 in case FIFO mode is enabled). It is cleared by a software, writing 1 to the ORECF, in the LPUART_ICR register. An interrupt is generated if RXNEIE=1 in the LPUART_CR1 register, or EIE = 1 in the LPUART_CR3 register. Note: When this bit is set, the LPUART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the LPUART_CR3 register.
0x40008C1C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the LPUART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the LPUART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the LPUART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x40008C1C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle line is detected. An interrupt is generated if IDLEIE=1 in the LPUART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the LPUART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the LPUART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x40008C1C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, and so data can be read from the LPUART_RDR register. Every read of the LPUART_RDR frees a location in the RXFIFO. It is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. An interrupt is generated if RXFNEIE=1 in the LPUART_CR1 register.
0x40008C1C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the LPUART_RDR shift register has been transferred to the LPUART_RDR register. It is cleared by a read to the LPUART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the LPUART_RQR register. An interrupt is generated if RXNEIE=1 in the LPUART_CR1 register.
0x40008C1C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the LPUART_TDR has been transmitted out of the shift register. The TC flag behaves as follows: When TDN = 0, the TC flag is set when the transmission of a frame containing data is complete and when TXFE is set. When TDN is equal to the number of data in the TXFIFO, the TC flag is set when TXFIFO is empty and TDN is reached. When TDN is greater than the number of data in the TXFIFO, TC remains cleared until the TXFIFO is filled again to reach the programmed number of data to be transferred. When TDN is less than the number of data in the TXFIFO, TC is set when TDN is reached even if the TXFIFO is not empty. An interrupt is generated if TCIE=1 in the LPUART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the LPUART_ICR register or by writing to the LPUART_TDR register.
0x40008C1C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag is set when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIE=1 in the LPUART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x40008C1C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the LPUART_TDR register has been transferred into the shift register. It is cleared by a write to the LPUART_TDR register. An interrupt is generated if the TXEIE bit =1 in the LPUART_CR1 register. Note: This bit is used during single buffer transmission.
0x40008C1C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full, and so data can be written in the LPUART_TDR. Every write in the LPUART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the LPUART_TDR. The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF must be checked prior to writing in TXFIFO (TXFNF and TXFE are set at the same time). An interrupt is generated if the TXFNFIE bit =1 in the LPUART_CR1 register. Note: This bit is used during single buffer transmission.
0x40008C1C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the LPUART_ICR register. An interrupt is generated if CTSIE=1 in the LPUART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40008C1C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the LPUART_ICR register. An interrupt is generated if CTSIE=1 in the LPUART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40008C1C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40008C1C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x40008C1C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x40008C1C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x40008C1C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the LPUART_ICR register. An interrupt is generated if CMIE=1in the LPUART_CR1 register.
0x40008C1C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the LPUART_ICR register. An interrupt is generated if CMIE=1in the LPUART_CR1 register.
0x40008C1C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the LPUART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x40008C1C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the LPUART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x40008C1C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the LPUART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the LPUART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the LPUART_RQR register. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x40008C1C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the LPUART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the LPUART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the LPUART_RQR register. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x40008C1C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the LPUART_ICR register. An interrupt is generated if WUFIE=1 in the LPUART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008C1C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the LPUART_ICR register. An interrupt is generated if WUFIE=1 in the LPUART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008C1C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the LPUART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the LPUART_CR1 register, in order to respect the TE=0 minimum period.
0x40008C1C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the LPUART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the LPUART_CR1 register, in order to respect the TE=0 minimum period.
0x40008C1C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the LPUART. It can be used to verify that the LPUART is ready for reception before entering low-power mode. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x40008C1C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the LPUART. It can be used to verify that the LPUART is ready for reception before entering low-power mode. Note: If the LPUART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value.
0x40008C1C C   FIELD 23w01 TXFE (ro): TXFIFO Empty This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the LPUART_RQR register. An interrupt is generated if the TXFEIE bit =1 (bit 30) in the LPUART_CR1 register.
0x40008C1C C   FIELD 24w01 RXFF (ro): RXFIFO Full This bit is set by hardware when the number of received data corresponds to RXFIFO1size1+11 (RXFIFO full + 1 data in the LPUART_RDR register. An interrupt is generated if the RXFFIE bit =1 in the LPUART_CR1 register.
0x40008C1C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the RXFIFO reaches the threshold programmed in RXFTCFG in LPUART_CR3 register i.e. the Receive FIFO contains RXFTCFG data. An interrupt is generated if the RXFTIE bit =1 (bit 27) in the LPUART_CR3 register.
0x40008C1C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG in LPUART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit =1 (bit 31) in the LPUART_CR3 register.
0x40008C20 B  REGISTER LPUART_ICR: LPUART interrupt flag clear register
0x40008C20 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the LPUART_ISR register.
0x40008C20 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the LPUART_ISR register.
0x40008C20 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the LPUART_ISR register.
0x40008C20 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the LPUART_ISR register.
0x40008C20 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the LPUART_ISR register.
0x40008C20 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the LPUART_ISR register.
0x40008C20 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the LPUART_ISR register.
0x40008C20 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the LPUART_ISR register.
0x40008C20 C   FIELD 20w01 WUCF (wo): Wake-up from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section132.3: LPUART implementation on page1914.
0x40008C24 B  REGISTER LPUART_RDR: LPUART receive data register
0x40008C24 C   FIELD 00w09 RDR (ro): Receive data value Contains the received data character. The RDR register provides the parallel interface between the input shift register and the internal bus (see Figure1254). When receiving with the parity enabled, the value read in the MSB bit is the received parity bit.
0x40008C28 B  REGISTER LPUART_TDR: LPUART transmit data register
0x40008C28 C   FIELD 00w09 TDR (rw): Transmit data value Contains the data character to be transmitted. The TDR register provides the parallel interface between the internal bus and the output shift register (see Figure1254). When transmitting with the parity enabled (PCE bit set to 1 in the LPUART_CR1 register), the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect because it is replaced by the parity. Note: This register must be written only when TXE/TXFNF=1.
0x40008C2C B  REGISTER LPUART_PRESC: LPUART prescaler register
0x40008C2C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The LPUART input clock can be divided by a prescaler: Remaining combinations: Reserved. Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is equal to 1011 i.e. input clock divided by 256.
0x40009000 A PERIPHERAL LPTIM3
0x40009000 B  REGISTER LPTIM3_ISR_INPUT: LPTIM3 interrupt and status register [alternate]
0x40009000 B  REGISTER LPTIM3_ISR_OUTPUT: LPTIM3 interrupt and status register [alternate]
0x40009000 C   FIELD 00w01 CC1IF (ro): Compare 1 interrupt flag If channel CC1 is configured as output: The CC1IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC1IF flag can be cleared by writing 1 to the CC1CF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 00w01 CC1IF (ro): capture 1 interrupt flag If channel CC1 is configured as input: CC1IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR1 register. The corresponding interrupt or DMA request is generated if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40009000 C   FIELD 01w01 ARRM (ro): Autoreload match ARRM is set by hardware to inform application that LPTIM_CNT registers value reached the LPTIM_ARR registers value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 01w01 ARRM (ro): Autoreload match ARRM is set by hardware to inform application that LPTIM_CNT registers value reached the LPTIM_ARR registers value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 02w01 EXTTRIG (ro): External trigger edge event EXTTRIG is set by hardware to inform application that a valid edge on the selected external trigger input has occurred. If the trigger is ignored because the timer has already started, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 02w01 EXTTRIG (ro): External trigger edge event EXTTRIG is set by hardware to inform application that a valid edge on the selected external trigger input has occurred. If the trigger is ignored because the timer has already started, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 03w01 CMP1OK (ro): Compare register 1 update OK CMP1OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR1 register has been successfully completed. CMP1OK flag can be cleared by writing 1 to the CMP1OKCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 04w01 ARROK (ro): Autoreload register update OK ARROK is set by hardware to inform application that the APB bus write operation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 04w01 ARROK (ro): Autoreload register update OK ARROK is set by hardware to inform application that the APB bus write operation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 05w01 UP (ro): Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 05w01 UP (ro): Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 06w01 DOWN (ro): Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 06w01 DOWN (ro): Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 07w01 UE (ro): LPTIM update event occurred UE is set by hardware to inform application that an update event was generated. The corresponding interrupt or DMA request is generated if enabled. UE flag can be cleared by writing 1 to the UECF bit in the LPTIM_ICR register. The UE flag is automatically cleared by hardware once the LPTIM_ARR register is written by any bus master like CPU or DMA.
0x40009000 C   FIELD 07w01 UE (ro): LPTIM update event occurred UE is set by hardware to inform application that an update event was generated. UE flag can be cleared by writing 1 to the UECF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 08w01 REPOK (ro): Repetition register update OK REPOK is set by hardware to inform application that the APB bus write operation to the LPTIM_RCR register has been successfully completed. REPOK flag can be cleared by writing 1 to the REPOKCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 08w01 REPOK (ro): Repetition register update OK REPOK is set by hardware to inform application that the APB bus write operation to the LPTIM_RCR register has been successfully completed. REPOK flag can be cleared by writing 1 to the REPOKCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 09w01 CC2IF (ro): Capture 2 interrupt flag If channel CC2 is configured as input: CC2IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR2 register. The corresponding interrupt or DMA request is generated if enabled. The CC2OF flag is set if the CC2IF flag was already high. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 09w01 CC2IF (ro): Compare 2 interrupt flag If channel CC2 is configured as output: The CC2IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC2IF flag can be cleared by writing 1 to the CC2CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 10w01 CC3IF (ro): Capture 3 interrupt flag If channel CC3 is configured as input: CC3IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR3 register. The corresponding interrupt or DMA request is generated if enabled. The CC3OF flag is set if the CC3IF flag was already high. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 10w01 CC3IF (ro): Compare 3 interrupt flag If channel CC3 is configured as output: The CC3IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC3IF flag can be cleared by writing 1 to the CC3CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 11w01 CC4IF (ro): Capture 4 interrupt flag If channel CC4 is configured as input: CC4IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR4 register. The corresponding interrupt or DMA request is generated if enabled. The CC4OF flag is set if the CC4IF flag was already high. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 11w01 CC4IF (ro): Compare 4 interrupt flag If channel CC4 is configured as output: The CC4IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC4IF flag can be cleared by writing 1 to the CC4CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 12w01 CC1OF (ro): Capture 1 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC1OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 13w01 CC2OF (ro): Capture 2 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC2OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 14w01 CC3OF (ro): Capture 3 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC3OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 15w01 CC4OF (ro): Capture 4 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC4OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 19w01 CMP2OK (ro): Compare register 2 update OK CMP2OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR2 register has been successfully completed. CMP2OK flag can be cleared by writing 1 to the CMP2OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 20w01 CMP3OK (ro): Compare register 3 update OK CMP3OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR3 register has been successfully completed. CMP3OK flag can be cleared by writing 1 to the CMP3OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 21w01 CMP4OK (ro): Compare register 4 update OK CMP4OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR4 register has been successfully completed. CMP4OK flag can be cleared by writing 1 to the CMP4OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009000 C   FIELD 24w01 DIEROK (ro): Interrupt enable register update OK DIEROK is set by hardware to inform application that the APB bus write operation to the LPTIM_DIER register has been successfully completed. DIEROK flag can be cleared by writing 1 to the DIEROKCF bit in the LPTIM_ICR register.
0x40009000 C   FIELD 24w01 DIEROK (ro): Interrupt enable register update OK DIEROK is set by hardware to inform application that the APB bus write operation to the LPTIM_DIER register has been successfully completed. DIEROK flag can be cleared by writing 1 to the DIEROKCF bit in the LPTIM_ICR register.
0x40009004 B  REGISTER LPTIM3_ICR_INPUT: LPTIM3 interrupt clear register [alternate]
0x40009004 B  REGISTER LPTIM3_ICR_OUTPUT: LPTIM3 interrupt clear register [alternate]
0x40009004 C   FIELD 00w01 CC1CF (wo): Capture/compare 1 clear flag Writing 1 to this bit clears the CC1IF flag in the LPTIM_ISR register.
0x40009004 C   FIELD 00w01 CC1CF (wo): Capture/compare 1 clear flag Writing 1 to this bit clears the CC1IF flag in the LPTIM_ISR register.
0x40009004 C   FIELD 01w01 ARRMCF (wo): Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register
0x40009004 C   FIELD 01w01 ARRMCF (wo): Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register
0x40009004 C   FIELD 02w01 EXTTRIGCF (wo): External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register
0x40009004 C   FIELD 02w01 EXTTRIGCF (wo): External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register
0x40009004 C   FIELD 03w01 CMP1OKCF (wo): Compare register 1 update OK clear flag Writing 1 to this bit clears the CMP1OK flag in the LPTIM_ISR register.
0x40009004 C   FIELD 04w01 ARROKCF (wo): Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register
0x40009004 C   FIELD 04w01 ARROKCF (wo): Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register
0x40009004 C   FIELD 05w01 UPCF (wo): Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 05w01 UPCF (wo): Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 06w01 DOWNCF (wo): Direction change to down clear flag Writing 1 to this bit clear the DOWN flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 06w01 DOWNCF (wo): Direction change to down clear flag Writing 1 to this bit clear the DOWN flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 07w01 UECF (wo): Update event clear flag Writing 1 to this bit clear the UE flag in the LPTIM_ISR register.
0x40009004 C   FIELD 07w01 UECF (wo): Update event clear flag Writing 1 to this bit clear the UE flag in the LPTIM_ISR register.
0x40009004 C   FIELD 08w01 REPOKCF (wo): Repetition register update OK clear flag Writing 1 to this bit clears the REPOK flag in the LPTIM_ISR register.
0x40009004 C   FIELD 08w01 REPOKCF (wo): Repetition register update OK clear flag Writing 1 to this bit clears the REPOK flag in the LPTIM_ISR register.
0x40009004 C   FIELD 09w01 CC2CF (wo): Capture/compare 2 clear flag Writing 1 to this bit clears the CC2IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 09w01 CC2CF (wo): Capture/compare 2 clear flag Writing 1 to this bit clears the CC2IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 10w01 CC3CF (wo): Capture/compare 3 clear flag Writing 1 to this bit clears the CC3IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 10w01 CC3CF (wo): Capture/compare 3 clear flag Writing 1 to this bit clears the CC3IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 11w01 CC4CF (wo): Capture/compare 4 clear flag Writing 1 to this bit clears the CC4IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 11w01 CC4CF (wo): Capture/compare 4 clear flag Writing 1 to this bit clears the CC4IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 12w01 CC1OCF (wo): Capture/compare 1 over-capture clear flag Writing 1 to this bit clears the CC1OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 13w01 CC2OCF (wo): Capture/compare 2 over-capture clear flag Writing 1 to this bit clears the CC2OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 14w01 CC3OCF (wo): Capture/compare 3 over-capture clear flag Writing 1 to this bit clears the CC3OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 15w01 CC4OCF (wo): Capture/compare 4 over-capture clear flag Writing 1 to this bit clears the CC4OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 19w01 CMP2OKCF (wo): Compare register 2 update OK clear flag Writing 1 to this bit clears the CMP2OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 20w01 CMP3OKCF (wo): Compare register 3 update OK clear flag Writing 1 to this bit clears the CMP3OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 21w01 CMP4OKCF (wo): Compare register 4 update OK clear flag Writing 1 to this bit clears the CMP4OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009004 C   FIELD 24w01 DIEROKCF (wo): Interrupt enable register update OK clear flag Writing 1 to this bit clears the DIEROK flag in the LPTIM_ISR register.
0x40009004 C   FIELD 24w01 DIEROKCF (wo): Interrupt enable register update OK clear flag Writing 1 to this bit clears the DIEROK flag in the LPTIM_ISR register.
0x40009008 B  REGISTER LPTIM3_DIER_INPUT: LPTIM3 interrupt enable register [alternate]
0x40009008 B  REGISTER LPTIM3_DIER_OUTPUT: LPTIM3 interrupt enable register [alternate]
0x40009008 C   FIELD 00w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x40009008 C   FIELD 00w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x40009008 C   FIELD 01w01 ARRMIE (rw): Autoreload match Interrupt Enable
0x40009008 C   FIELD 01w01 ARRMIE (rw): Autoreload match Interrupt Enable
0x40009008 C   FIELD 02w01 EXTTRIGIE (rw): External trigger valid edge Interrupt Enable
0x40009008 C   FIELD 02w01 EXTTRIGIE (rw): External trigger valid edge Interrupt Enable
0x40009008 C   FIELD 03w01 CMP1OKIE (rw): Compare register 1 update OK interrupt enable
0x40009008 C   FIELD 04w01 ARROKIE (rw): Autoreload register update OK Interrupt Enable
0x40009008 C   FIELD 04w01 ARROKIE (rw): Autoreload register update OK Interrupt Enable
0x40009008 C   FIELD 05w01 UPIE (rw): Direction change to UP Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 05w01 UPIE (rw): Direction change to UP Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 06w01 DOWNIE (rw): Direction change to down Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 06w01 DOWNIE (rw): Direction change to down Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 07w01 UEIE (rw): Update event interrupt enable
0x40009008 C   FIELD 07w01 UEIE (rw): Update event interrupt enable
0x40009008 C   FIELD 08w01 REPOKIE (rw): Repetition register update OK interrupt Enable
0x40009008 C   FIELD 08w01 REPOKIE (rw): Repetition register update OK interrupt Enable
0x40009008 C   FIELD 09w01 CC2IE (rw): Capture/compare 2 interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 09w01 CC2IE (rw): Capture/compare 2 interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 10w01 CC3IE (rw): Capture/compare 3 interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 10w01 CC3IE (rw): Capture/compare 3 interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 11w01 CC4IE (rw): Capture/compare 4 interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 11w01 CC4IE (rw): Capture/compare 4 interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 12w01 CC1OIE (rw): Capture/compare 1 over-capture interrupt enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 13w01 CC2OIE (rw): Capture/compare 2 over-capture interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 14w01 CC3OIE (rw): Capture/compare 3 over-capture interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 15w01 CC4OIE (rw): Capture/compare 4 over-capture interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 16w01 CC1DE (rw): Capture/compare 1 DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 19w01 CMP2OKIE (rw): Compare register 2 update OK interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 20w01 CMP3OKIE (rw): Compare register 3 update OK interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 21w01 CMP4OKIE (rw): Compare register 4 update OK interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 23w01 UEDE (rw): Update event DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 23w01 UEDE (rw): Update event DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 25w01 CC2DE (rw): Capture/compare 2 DMA request enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 26w01 CC3DE (rw): Capture/compare 3 DMA request enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009008 C   FIELD 27w01 CC4DE (rw): Capture/compare 4 DMA request enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x4000900C B  REGISTER LPTIM3_CFGR: LPTIM configuration register
0x4000900C C   FIELD 00w01 CKSEL (rw): Clock selector The CKSEL bit selects which clock source the LPTIM uses:
0x4000900C C   FIELD 01w02 CKPOL (rw): Clock Polarity When the LPTIM is clocked by an external clock source, CKPOL bits is used to configure the active edge or edges used by the counter: If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 1 is active. If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 2 is active. If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 3 is active. Refer to Section125.4.15: Encoder mode for more details about Encoder mode sub-modes.
0x4000900C C   FIELD 03w02 CKFLT (rw): Configurable digital filter for external clock The CKFLT value sets the number of consecutive equal samples that are detected when a level change occurs on an external clock signal before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x4000900C C   FIELD 06w02 TRGFLT (rw): Configurable digital filter for trigger The TRGFLT value sets the number of consecutive equal samples that are detected when a level change occurs on an internal trigger before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x4000900C C   FIELD 09w03 PRESC (rw): Clock prescaler The PRESC bits configure the prescaler division factor. It can be one among the following division factors:
0x4000900C C   FIELD 13w03 TRIGSEL (rw): Trigger selector The TRIGSEL bits select the trigger source that serves as a trigger event for the LPTIM among the below 8 available sources: See Section125.4.3: LPTIM input and trigger mapping for details.
0x4000900C C   FIELD 17w02 TRIGEN (rw): Trigger enable and polarity The TRIGEN bits controls whether the LPTIM counter is started by an external trigger or not. If the external trigger option is selected, three configurations are possible for the trigger active edge:
0x4000900C C   FIELD 19w01 TIMOUT (rw): Timeout enable The TIMOUT bit controls the Timeout feature
0x4000900C C   FIELD 20w01 WAVE (rw): Waveform shape The WAVE bit controls the output shape
0x4000900C C   FIELD 22w01 PRELOAD (rw): Registers update mode The PRELOAD bit controls the LPTIM3_ARR, LPTIM3_RCR and the LPTIM3_CCRx registers update modality
0x4000900C C   FIELD 23w01 COUNTMODE (rw): counter mode enabled The COUNTMODE bit selects which clock source is used by the LPTIM to clock the counter:
0x4000900C C   FIELD 24w01 ENC (rw): Encoder mode enable The ENC bit controls the Encoder mode Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009010 B  REGISTER LPTIM3_CR: LPTIM control register
0x40009010 C   FIELD 00w01 ENABLE (rw): LPTIM enable The ENABLE bit is set and cleared by software.
0x40009010 C   FIELD 01w01 SNGSTRT (rw): LPTIM start in Single mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = 00), setting this bit starts the LPTIM in single pulse mode. If the software start is disabled (TRIGEN[1:0] different than 00), setting this bit starts the LPTIM in single pulse mode as soon as an external trigger is detected. If this bit is set when the LPTIM is in continuous counting mode, then the LPTIM stops at the following match between LPTIM3_ARR and LPTIM3_CNT registers. This bit can only be set when the LPTIM is enabled. It is automatically reset by hardware.
0x40009010 C   FIELD 02w01 CNTSTRT (rw): Timer start in Continuous mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = 00), setting this bit starts the LPTIM in Continuous mode. If the software start is disabled (TRIGEN[1:0] different than 00), setting this bit starts the timer in Continuous mode as soon as an external trigger is detected. If this bit is set when a single pulse mode counting is ongoing, then the timer does not stop at the next match between the LPTIM3_ARR and LPTIM3_CNT registers and the LPTIM counter keeps counting in Continuous mode. This bit can be set only when the LPTIM is enabled. It is automatically reset by hardware.
0x40009010 C   FIELD 03w01 COUNTRST (rw): Counter reset This bit is set by software and cleared by hardware. When set to '1' this bit triggers a synchronous reset of the LPTIM3_CNT counter register. Due to the synchronous nature of this reset, it only takes place after a synchronization delay of 3 LPTimer core clock cycles (LPTimer core clock may be different from APB clock). This bit can be set only when the LPTIM is enabled. It is automatically reset by hardware. COUNTRST must never be set to '1' by software before it is already cleared to '0' by hardware. Software must consequently check that COUNTRST bit is already cleared to '0' before attempting to set it to '1'.
0x40009010 C   FIELD 04w01 RSTARE (rw): Reset after read enable This bit is set and cleared by software. When RSTARE is set to '1', any read access to LPTIM3_CNT register asynchronously resets LPTIM3_CNT register content. This bit can be set only when the LPTIM is enabled.
0x40009014 B  REGISTER LPTIM3_CCR1: LPTIM compare register 1
0x40009014 C   FIELD 00w16 CCR1 (rw): Capture/compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the capture/compare 1 register. Depending on the PRELOAD option, the CCR1 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 1 contains the value to be compared to the counter LPTIM3_CNT and signaled on OC1 output. If channel CC1 is configured as input: CCR1 becomes read-only, it contains the counter value transferred by the last input capture 1 event. The LPTIM3_CCR1 register is read-only and cannot be programmed.
0x40009018 B  REGISTER LPTIM3_ARR: LPTIM autoreload register
0x40009018 C   FIELD 00w16 ARR (rw): Auto reload value ARR is the autoreload value for the LPTIM. This value must be strictly greater than the CCRx[15:0] value.
0x4000901C B  REGISTER LPTIM3_CNT: LPTIM counter register
0x4000901C C   FIELD 00w16 CNT (ro): Counter value When the LPTIM is running with an asynchronous clock, reading the LPTIM3_CNT register may return unreliable values. So in this case it is necessary to perform two consecutive read accesses and verify that the two returned values are identical.
0x40009024 B  REGISTER LPTIM3_CFGR2: LPTIM configuration register 2
0x40009024 C   FIELD 00w02 IN1SEL (rw): LPTIM input 1 selection The IN1SEL bits control the LPTIM input 1 multiplexer, which connects LPTIM input 1 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40009024 C   FIELD 04w02 IN2SEL (rw): LPTIM input 2 selection The IN2SEL bits control the LPTIM input 2 multiplexer, which connects LPTIM input 2 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40009024 C   FIELD 16w02 IC1SEL (rw): LPTIM input capture 1 selection The IC1SEL bits control the LPTIM Input capture 1 multiplexer, which connects LPTIM Input capture 1 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40009024 C   FIELD 20w02 IC2SEL (rw): LPTIM input capture 2 selection The IC2SEL bits control the LPTIM Input capture 2 multiplexer, which connects LPTIM Input capture 2 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40009028 B  REGISTER LPTIM3_RCR: LPTIM repetition register
0x40009028 C   FIELD 00w08 REP (rw): Repetition register value REP is the repetition value for the LPTIM.
0x4000902C B  REGISTER LPTIM3_CCMR1: LPTIM capture/compare mode register 1
0x4000902C C   FIELD 00w01 CC1SEL (rw): Capture/compare 1 selection This bitfield defines the direction of the channel input (capture) or output mode.
0x4000902C C   FIELD 01w01 CC1E (rw): Capture/compare 1 output enable. This bit determines if a capture of the counter value can actually be done into the input capture/compare register 1 (LPTIM3_CCR1) or not.
0x4000902C C   FIELD 02w02 CC1P (rw): Capture/compare 1 output polarity. Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. This field is used to select the IC1 polarity for capture operations.
0x4000902C C   FIELD 08w02 IC1PSC (rw): Input capture 1 prescaler This bitfield defines the ratio of the prescaler acting on the CC1 input (IC1).
0x4000902C C   FIELD 12w02 IC1F (rw): Input capture 1 filter This bitfield defines the number of consecutive equal samples that are detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x4000902C C   FIELD 16w01 CC2SEL (rw): Capture/compare 2 selection This bitfield defines the direction of the channel, input (capture) or output mode.
0x4000902C C   FIELD 17w01 CC2E (rw): Capture/compare 2 output enable. This bit determines if a capture of the counter value can actually be done into the input capture/compare register 2 (LPTIM3_CCR2) or not.
0x4000902C C   FIELD 18w02 CC2P (rw): Capture/compare 2 output polarity. Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. This field is used to select the IC2 polarity for capture operations.
0x4000902C C   FIELD 24w02 IC2PSC (rw): Input capture 2 prescaler This bitfield defines the ratio of the prescaler acting on the CC2 input (IC2).
0x4000902C C   FIELD 28w02 IC2F (rw): Input capture 2 filter This bitfield defines the number of consecutive equal samples that are detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40009030 B  REGISTER LPTIM3_CCMR2: LPTIM capture/compare mode register 2
0x40009030 C   FIELD 00w01 CC3SEL (rw): Capture/compare 3 selection This bitfield defines the direction of the channel input (capture) or output mode.
0x40009030 C   FIELD 01w01 CC3E (rw): Capture/compare 3 output enable. Condition: CC3 as output: Condition: CC3 as input: This bit determines if a capture of the counter value can actually be done into the input capture/compare register 3 (LPTIM3_CCR3) or not.
0x40009030 C   FIELD 02w02 CC3P (rw): Capture/compare 3 output polarity. Condition: CC3 as output: Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. Condition: CC3 as input: This field is used to select the IC3 polarity for capture operations.
0x40009030 C   FIELD 08w02 IC3PSC (rw): Input capture 3 prescaler This bitfield defines the ratio of the prescaler acting on the CC3 input (IC3).
0x40009030 C   FIELD 12w02 IC3F (rw): Input capture 3 filter This bitfield defines the number of consecutive equal samples that should be detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40009030 C   FIELD 16w01 CC4SEL (rw): Capture/compare 4 selection This bitfield defines the direction of the channel, input (capture) or output mode.
0x40009030 C   FIELD 17w01 CC4E (rw): Capture/compare 4 output enable. Condition: CC4 as output: Condition: CC4 as input: This bit determines if a capture of the counter value can actually be done into the input capture/compare register 4 (LPTIM3_CCR4) or not.
0x40009030 C   FIELD 18w02 CC4P (rw): Capture/compare 4 output polarity. Condition: CC4 as output: Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. Condition: CC4 as input: This field is used to select the IC4 polarity for capture operations.
0x40009030 C   FIELD 24w02 IC4PSC (rw): Input capture 4 prescaler This bitfield defines the ratio of the prescaler acting on the CC4 input (IC4).
0x40009030 C   FIELD 28w02 IC4F (rw): Input capture 4 filter This bitfield defines the number of consecutive equal samples that should be detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40009034 B  REGISTER LPTIM3_CCR2: LPTIM compare register 2
0x40009034 C   FIELD 00w16 CCR2 (rw): Capture/compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the capture/compare 2 register. Depending on the PRELOAD option, the CCR2 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 2 contains the value to be compared to the counter LPTIM3_CNT and signaled on OC2 output. If channel CC2 is configured as input: CCR2 becomes read-only, it contains the counter value transferred by the last input capture 2 event. The LPTIM3_CCR2 register is read-only and cannot be programmed.
0x40009038 B  REGISTER LPTIM3_CCR3: LPTIM compare register 3
0x40009038 C   FIELD 00w16 CCR3 (rw): Capture/compare 3 value If channel CC3 is configured as output: CCR3 is the value to be loaded in the capture/compare 3 register. Depending on the PRELOAD option, the CCR3 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 3 contains the value to be compared to the counter LPTIM3_CNT and signaled on OC3 output. If channel CC3 is configured as input: CCR3 becomes read-only, it contains the counter value transferred by the last input capture 3 event. The LPTIM3_CCR3 register is read-only and cannot be programmed.
0x4000903C B  REGISTER LPTIM3_CCR4: LPTIM compare register 4
0x4000903C C   FIELD 00w16 CCR4 (rw): Capture/compare 4 value If channel CC4 is configured as output: CCR4 is the value to be loaded in the capture/compare 4 register. Depending on the PRELOAD option, the CCR4 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 4 contains the value to be compared to the counter LPTIM3_CNT and signaled on OC4 output. If channel CC4 is configured as input: CCR4 becomes read-only, it contains the counter value transferred by the last input capture 4 event. The LPTIM3_CCR4 register is read-only and cannot be programmed.
0x40009400 A PERIPHERAL LPTIM2
0x40009400 B  REGISTER LPTIM2_ISR_INPUT: LPTIM2 interrupt and status register [alternate]
0x40009400 B  REGISTER LPTIM2_ISR_OUTPUT: LPTIM2 interrupt and status register [alternate]
0x40009400 C   FIELD 00w01 CC1IF (ro): Compare 1 interrupt flag If channel CC1 is configured as output: The CC1IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC1IF flag can be cleared by writing 1 to the CC1CF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 00w01 CC1IF (ro): capture 1 interrupt flag If channel CC1 is configured as input: CC1IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR1 register. The corresponding interrupt or DMA request is generated if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40009400 C   FIELD 01w01 ARRM (ro): Autoreload match ARRM is set by hardware to inform application that LPTIM_CNT registers value reached the LPTIM_ARR registers value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 01w01 ARRM (ro): Autoreload match ARRM is set by hardware to inform application that LPTIM_CNT registers value reached the LPTIM_ARR registers value. ARRM flag can be cleared by writing 1 to the ARRMCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 02w01 EXTTRIG (ro): External trigger edge event EXTTRIG is set by hardware to inform application that a valid edge on the selected external trigger input has occurred. If the trigger is ignored because the timer has already started, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 02w01 EXTTRIG (ro): External trigger edge event EXTTRIG is set by hardware to inform application that a valid edge on the selected external trigger input has occurred. If the trigger is ignored because the timer has already started, then this flag is not set. EXTTRIG flag can be cleared by writing 1 to the EXTTRIGCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 03w01 CMP1OK (ro): Compare register 1 update OK CMP1OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR1 register has been successfully completed. CMP1OK flag can be cleared by writing 1 to the CMP1OKCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 04w01 ARROK (ro): Autoreload register update OK ARROK is set by hardware to inform application that the APB bus write operation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 04w01 ARROK (ro): Autoreload register update OK ARROK is set by hardware to inform application that the APB bus write operation to the LPTIM_ARR register has been successfully completed. ARROK flag can be cleared by writing 1 to the ARROKCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 05w01 UP (ro): Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 05w01 UP (ro): Counter direction change down to up In Encoder mode, UP bit is set by hardware to inform application that the counter direction has changed from down to up. UP flag can be cleared by writing 1 to the UPCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 06w01 DOWN (ro): Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 06w01 DOWN (ro): Counter direction change up to down In Encoder mode, DOWN bit is set by hardware to inform application that the counter direction has changed from up to down. DOWN flag can be cleared by writing 1 to the DOWNCF bit in the LPTIM_ICR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 07w01 UE (ro): LPTIM update event occurred UE is set by hardware to inform application that an update event was generated. The corresponding interrupt or DMA request is generated if enabled. UE flag can be cleared by writing 1 to the UECF bit in the LPTIM_ICR register. The UE flag is automatically cleared by hardware once the LPTIM_ARR register is written by any bus master like CPU or DMA.
0x40009400 C   FIELD 07w01 UE (ro): LPTIM update event occurred UE is set by hardware to inform application that an update event was generated. UE flag can be cleared by writing 1 to the UECF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 08w01 REPOK (ro): Repetition register update OK REPOK is set by hardware to inform application that the APB bus write operation to the LPTIM_RCR register has been successfully completed. REPOK flag can be cleared by writing 1 to the REPOKCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 08w01 REPOK (ro): Repetition register update OK REPOK is set by hardware to inform application that the APB bus write operation to the LPTIM_RCR register has been successfully completed. REPOK flag can be cleared by writing 1 to the REPOKCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 09w01 CC2IF (ro): Capture 2 interrupt flag If channel CC2 is configured as input: CC2IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR2 register. The corresponding interrupt or DMA request is generated if enabled. The CC2OF flag is set if the CC2IF flag was already high. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 09w01 CC2IF (ro): Compare 2 interrupt flag If channel CC2 is configured as output: The CC2IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC2IF flag can be cleared by writing 1 to the CC2CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 10w01 CC3IF (ro): Capture 3 interrupt flag If channel CC3 is configured as input: CC3IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR3 register. The corresponding interrupt or DMA request is generated if enabled. The CC3OF flag is set if the CC3IF flag was already high. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 10w01 CC3IF (ro): Compare 3 interrupt flag If channel CC3 is configured as output: The CC3IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC3IF flag can be cleared by writing 1 to the CC3CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 11w01 CC4IF (ro): Capture 4 interrupt flag If channel CC4 is configured as input: CC4IF is set by hardware to inform application that the current value of the counter is captured in LPTIM_CCR4 register. The corresponding interrupt or DMA request is generated if enabled. The CC4OF flag is set if the CC4IF flag was already high. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 11w01 CC4IF (ro): Compare 4 interrupt flag If channel CC4 is configured as output: The CC4IF flag is set by hardware to inform application that LPTIM_CNT register value matches the compare register's value. CC4IF flag can be cleared by writing 1 to the CC4CF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 12w01 CC1OF (ro): Capture 1 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC1OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 13w01 CC2OF (ro): Capture 2 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC2OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 14w01 CC3OF (ro): Capture 3 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC3OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 15w01 CC4OF (ro): Capture 4 over-capture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing 1 to the CC4OCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 19w01 CMP2OK (ro): Compare register 2 update OK CMP2OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR2 register has been successfully completed. CMP2OK flag can be cleared by writing 1 to the CMP2OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 20w01 CMP3OK (ro): Compare register 3 update OK CMP3OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR3 register has been successfully completed. CMP3OK flag can be cleared by writing 1 to the CMP3OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 21w01 CMP4OK (ro): Compare register 4 update OK CMP4OK is set by hardware to inform application that the APB bus write operation to the LPTIM_CCR4 register has been successfully completed. CMP4OK flag can be cleared by writing 1 to the CMP4OKCF bit in the LPTIM_ICR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009400 C   FIELD 24w01 DIEROK (ro): Interrupt enable register update OK DIEROK is set by hardware to inform application that the APB bus write operation to the LPTIM_DIER register has been successfully completed. DIEROK flag can be cleared by writing 1 to the DIEROKCF bit in the LPTIM_ICR register.
0x40009400 C   FIELD 24w01 DIEROK (ro): Interrupt enable register update OK DIEROK is set by hardware to inform application that the APB bus write operation to the LPTIM_DIER register has been successfully completed. DIEROK flag can be cleared by writing 1 to the DIEROKCF bit in the LPTIM_ICR register.
0x40009404 B  REGISTER LPTIM2_ICR_INPUT: LPTIM2 interrupt clear register [alternate]
0x40009404 B  REGISTER LPTIM2_ICR_OUTPUT: LPTIM2 interrupt clear register [alternate]
0x40009404 C   FIELD 00w01 CC1CF (wo): Capture/compare 1 clear flag Writing 1 to this bit clears the CC1IF flag in the LPTIM_ISR register.
0x40009404 C   FIELD 00w01 CC1CF (wo): Capture/compare 1 clear flag Writing 1 to this bit clears the CC1IF flag in the LPTIM_ISR register.
0x40009404 C   FIELD 01w01 ARRMCF (wo): Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register
0x40009404 C   FIELD 01w01 ARRMCF (wo): Autoreload match clear flag Writing 1 to this bit clears the ARRM flag in the LPTIM_ISR register
0x40009404 C   FIELD 02w01 EXTTRIGCF (wo): External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register
0x40009404 C   FIELD 02w01 EXTTRIGCF (wo): External trigger valid edge clear flag Writing 1 to this bit clears the EXTTRIG flag in the LPTIM_ISR register
0x40009404 C   FIELD 03w01 CMP1OKCF (wo): Compare register 1 update OK clear flag Writing 1 to this bit clears the CMP1OK flag in the LPTIM_ISR register.
0x40009404 C   FIELD 04w01 ARROKCF (wo): Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register
0x40009404 C   FIELD 04w01 ARROKCF (wo): Autoreload register update OK clear flag Writing 1 to this bit clears the ARROK flag in the LPTIM_ISR register
0x40009404 C   FIELD 05w01 UPCF (wo): Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 05w01 UPCF (wo): Direction change to UP clear flag Writing 1 to this bit clear the UP flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 06w01 DOWNCF (wo): Direction change to down clear flag Writing 1 to this bit clear the DOWN flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 06w01 DOWNCF (wo): Direction change to down clear flag Writing 1 to this bit clear the DOWN flag in the LPTIM_ISR register. Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 07w01 UECF (wo): Update event clear flag Writing 1 to this bit clear the UE flag in the LPTIM_ISR register.
0x40009404 C   FIELD 07w01 UECF (wo): Update event clear flag Writing 1 to this bit clear the UE flag in the LPTIM_ISR register.
0x40009404 C   FIELD 08w01 REPOKCF (wo): Repetition register update OK clear flag Writing 1 to this bit clears the REPOK flag in the LPTIM_ISR register.
0x40009404 C   FIELD 08w01 REPOKCF (wo): Repetition register update OK clear flag Writing 1 to this bit clears the REPOK flag in the LPTIM_ISR register.
0x40009404 C   FIELD 09w01 CC2CF (wo): Capture/compare 2 clear flag Writing 1 to this bit clears the CC2IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 09w01 CC2CF (wo): Capture/compare 2 clear flag Writing 1 to this bit clears the CC2IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 10w01 CC3CF (wo): Capture/compare 3 clear flag Writing 1 to this bit clears the CC3IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 10w01 CC3CF (wo): Capture/compare 3 clear flag Writing 1 to this bit clears the CC3IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 11w01 CC4CF (wo): Capture/compare 4 clear flag Writing 1 to this bit clears the CC4IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 11w01 CC4CF (wo): Capture/compare 4 clear flag Writing 1 to this bit clears the CC4IF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 12w01 CC1OCF (wo): Capture/compare 1 over-capture clear flag Writing 1 to this bit clears the CC1OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 13w01 CC2OCF (wo): Capture/compare 2 over-capture clear flag Writing 1 to this bit clears the CC2OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 14w01 CC3OCF (wo): Capture/compare 3 over-capture clear flag Writing 1 to this bit clears the CC3OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 15w01 CC4OCF (wo): Capture/compare 4 over-capture clear flag Writing 1 to this bit clears the CC4OF flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 19w01 CMP2OKCF (wo): Compare register 2 update OK clear flag Writing 1 to this bit clears the CMP2OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 20w01 CMP3OKCF (wo): Compare register 3 update OK clear flag Writing 1 to this bit clears the CMP3OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 21w01 CMP4OKCF (wo): Compare register 4 update OK clear flag Writing 1 to this bit clears the CMP4OK flag in the LPTIM_ISR register. Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009404 C   FIELD 24w01 DIEROKCF (wo): Interrupt enable register update OK clear flag Writing 1 to this bit clears the DIEROK flag in the LPTIM_ISR register.
0x40009404 C   FIELD 24w01 DIEROKCF (wo): Interrupt enable register update OK clear flag Writing 1 to this bit clears the DIEROK flag in the LPTIM_ISR register.
0x40009408 B  REGISTER LPTIM2_DIER_INPUT: LPTIM2 interrupt enable register [alternate]
0x40009408 B  REGISTER LPTIM2_DIER_OUTPUT: LPTIM2 interrupt enable register [alternate]
0x40009408 C   FIELD 00w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x40009408 C   FIELD 00w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x40009408 C   FIELD 01w01 ARRMIE (rw): Autoreload match Interrupt Enable
0x40009408 C   FIELD 01w01 ARRMIE (rw): Autoreload match Interrupt Enable
0x40009408 C   FIELD 02w01 EXTTRIGIE (rw): External trigger valid edge Interrupt Enable
0x40009408 C   FIELD 02w01 EXTTRIGIE (rw): External trigger valid edge Interrupt Enable
0x40009408 C   FIELD 03w01 CMP1OKIE (rw): Compare register 1 update OK interrupt enable
0x40009408 C   FIELD 04w01 ARROKIE (rw): Autoreload register update OK Interrupt Enable
0x40009408 C   FIELD 04w01 ARROKIE (rw): Autoreload register update OK Interrupt Enable
0x40009408 C   FIELD 05w01 UPIE (rw): Direction change to UP Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 05w01 UPIE (rw): Direction change to UP Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 06w01 DOWNIE (rw): Direction change to down Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 06w01 DOWNIE (rw): Direction change to down Interrupt Enable Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 07w01 UEIE (rw): Update event interrupt enable
0x40009408 C   FIELD 07w01 UEIE (rw): Update event interrupt enable
0x40009408 C   FIELD 08w01 REPOKIE (rw): Repetition register update OK interrupt Enable
0x40009408 C   FIELD 08w01 REPOKIE (rw): Repetition register update OK interrupt Enable
0x40009408 C   FIELD 09w01 CC2IE (rw): Capture/compare 2 interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 09w01 CC2IE (rw): Capture/compare 2 interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 10w01 CC3IE (rw): Capture/compare 3 interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 10w01 CC3IE (rw): Capture/compare 3 interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 11w01 CC4IE (rw): Capture/compare 4 interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 11w01 CC4IE (rw): Capture/compare 4 interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 12w01 CC1OIE (rw): Capture/compare 1 over-capture interrupt enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 13w01 CC2OIE (rw): Capture/compare 2 over-capture interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 14w01 CC3OIE (rw): Capture/compare 3 over-capture interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 15w01 CC4OIE (rw): Capture/compare 4 over-capture interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 16w01 CC1DE (rw): Capture/compare 1 DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 19w01 CMP2OKIE (rw): Compare register 2 update OK interrupt enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 20w01 CMP3OKIE (rw): Compare register 3 update OK interrupt enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 21w01 CMP4OKIE (rw): Compare register 4 update OK interrupt enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 23w01 UEDE (rw): Update event DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 23w01 UEDE (rw): Update event DMA request enable Note: If LPTIM does not implement at least 1 channel this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 25w01 CC2DE (rw): Capture/compare 2 DMA request enable Note: If LPTIM does not implement at least 2 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 26w01 CC3DE (rw): Capture/compare 3 DMA request enable Note: If LPTIM does not implement at least 3 channels this bit is reserved. Refer to Section125.3.
0x40009408 C   FIELD 27w01 CC4DE (rw): Capture/compare 4 DMA request enable Note: If LPTIM does not implement at least 4 channels this bit is reserved. Refer to Section125.3.
0x4000940C B  REGISTER LPTIM2_CFGR: LPTIM configuration register
0x4000940C C   FIELD 00w01 CKSEL (rw): Clock selector The CKSEL bit selects which clock source the LPTIM uses:
0x4000940C C   FIELD 01w02 CKPOL (rw): Clock Polarity When the LPTIM is clocked by an external clock source, CKPOL bits is used to configure the active edge or edges used by the counter: If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 1 is active. If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 2 is active. If the LPTIM is configured in Encoder mode (ENC bit is set), the encoder sub-mode 3 is active. Refer to Section125.4.15: Encoder mode for more details about Encoder mode sub-modes.
0x4000940C C   FIELD 03w02 CKFLT (rw): Configurable digital filter for external clock The CKFLT value sets the number of consecutive equal samples that are detected when a level change occurs on an external clock signal before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x4000940C C   FIELD 06w02 TRGFLT (rw): Configurable digital filter for trigger The TRGFLT value sets the number of consecutive equal samples that are detected when a level change occurs on an internal trigger before it is considered as a valid level transition. An internal clock source must be present to use this feature
0x4000940C C   FIELD 09w03 PRESC (rw): Clock prescaler The PRESC bits configure the prescaler division factor. It can be one among the following division factors:
0x4000940C C   FIELD 13w03 TRIGSEL (rw): Trigger selector The TRIGSEL bits select the trigger source that serves as a trigger event for the LPTIM among the below 8 available sources: See Section125.4.3: LPTIM input and trigger mapping for details.
0x4000940C C   FIELD 17w02 TRIGEN (rw): Trigger enable and polarity The TRIGEN bits controls whether the LPTIM counter is started by an external trigger or not. If the external trigger option is selected, three configurations are possible for the trigger active edge:
0x4000940C C   FIELD 19w01 TIMOUT (rw): Timeout enable The TIMOUT bit controls the Timeout feature
0x4000940C C   FIELD 20w01 WAVE (rw): Waveform shape The WAVE bit controls the output shape
0x4000940C C   FIELD 22w01 PRELOAD (rw): Registers update mode The PRELOAD bit controls the LPTIM2_ARR, LPTIM2_RCR and the LPTIM2_CCRx registers update modality
0x4000940C C   FIELD 23w01 COUNTMODE (rw): counter mode enabled The COUNTMODE bit selects which clock source is used by the LPTIM to clock the counter:
0x4000940C C   FIELD 24w01 ENC (rw): Encoder mode enable The ENC bit controls the Encoder mode Note: If the LPTIM does not support encoder mode feature, this bit is reserved. Refer to Section125.3.
0x40009410 B  REGISTER LPTIM2_CR: LPTIM control register
0x40009410 C   FIELD 00w01 ENABLE (rw): LPTIM enable The ENABLE bit is set and cleared by software.
0x40009410 C   FIELD 01w01 SNGSTRT (rw): LPTIM start in Single mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = 00), setting this bit starts the LPTIM in single pulse mode. If the software start is disabled (TRIGEN[1:0] different than 00), setting this bit starts the LPTIM in single pulse mode as soon as an external trigger is detected. If this bit is set when the LPTIM is in continuous counting mode, then the LPTIM stops at the following match between LPTIM2_ARR and LPTIM2_CNT registers. This bit can only be set when the LPTIM is enabled. It is automatically reset by hardware.
0x40009410 C   FIELD 02w01 CNTSTRT (rw): Timer start in Continuous mode This bit is set by software and cleared by hardware. In case of software start (TRIGEN[1:0] = 00), setting this bit starts the LPTIM in Continuous mode. If the software start is disabled (TRIGEN[1:0] different than 00), setting this bit starts the timer in Continuous mode as soon as an external trigger is detected. If this bit is set when a single pulse mode counting is ongoing, then the timer does not stop at the next match between the LPTIM2_ARR and LPTIM2_CNT registers and the LPTIM counter keeps counting in Continuous mode. This bit can be set only when the LPTIM is enabled. It is automatically reset by hardware.
0x40009410 C   FIELD 03w01 COUNTRST (rw): Counter reset This bit is set by software and cleared by hardware. When set to '1' this bit triggers a synchronous reset of the LPTIM2_CNT counter register. Due to the synchronous nature of this reset, it only takes place after a synchronization delay of 3 LPTimer core clock cycles (LPTimer core clock may be different from APB clock). This bit can be set only when the LPTIM is enabled. It is automatically reset by hardware. COUNTRST must never be set to '1' by software before it is already cleared to '0' by hardware. Software must consequently check that COUNTRST bit is already cleared to '0' before attempting to set it to '1'.
0x40009410 C   FIELD 04w01 RSTARE (rw): Reset after read enable This bit is set and cleared by software. When RSTARE is set to '1', any read access to LPTIM2_CNT register asynchronously resets LPTIM2_CNT register content. This bit can be set only when the LPTIM is enabled.
0x40009414 B  REGISTER LPTIM2_CCR1: LPTIM compare register 1
0x40009414 C   FIELD 00w16 CCR1 (rw): Capture/compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the capture/compare 1 register. Depending on the PRELOAD option, the CCR1 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 1 contains the value to be compared to the counter LPTIM2_CNT and signaled on OC1 output. If channel CC1 is configured as input: CCR1 becomes read-only, it contains the counter value transferred by the last input capture 1 event. The LPTIM2_CCR1 register is read-only and cannot be programmed.
0x40009418 B  REGISTER LPTIM2_ARR: LPTIM autoreload register
0x40009418 C   FIELD 00w16 ARR (rw): Auto reload value ARR is the autoreload value for the LPTIM. This value must be strictly greater than the CCRx[15:0] value.
0x4000941C B  REGISTER LPTIM2_CNT: LPTIM counter register
0x4000941C C   FIELD 00w16 CNT (ro): Counter value When the LPTIM is running with an asynchronous clock, reading the LPTIM2_CNT register may return unreliable values. So in this case it is necessary to perform two consecutive read accesses and verify that the two returned values are identical.
0x40009424 B  REGISTER LPTIM2_CFGR2: LPTIM configuration register 2
0x40009424 C   FIELD 00w02 IN1SEL (rw): LPTIM input 1 selection The IN1SEL bits control the LPTIM input 1 multiplexer, which connects LPTIM input 1 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40009424 C   FIELD 04w02 IN2SEL (rw): LPTIM input 2 selection The IN2SEL bits control the LPTIM input 2 multiplexer, which connects LPTIM input 2 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40009424 C   FIELD 16w02 IC1SEL (rw): LPTIM input capture 1 selection The IC1SEL bits control the LPTIM Input capture 1 multiplexer, which connects LPTIM Input capture 1 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40009424 C   FIELD 20w02 IC2SEL (rw): LPTIM input capture 2 selection The IC2SEL bits control the LPTIM Input capture 2 multiplexer, which connects LPTIM Input capture 2 to one of the available inputs. For connection details refer to Section125.4.3: LPTIM input and trigger mapping.
0x40009428 B  REGISTER LPTIM2_RCR: LPTIM repetition register
0x40009428 C   FIELD 00w08 REP (rw): Repetition register value REP is the repetition value for the LPTIM.
0x4000942C B  REGISTER LPTIM2_CCMR1: LPTIM capture/compare mode register 1
0x4000942C C   FIELD 00w01 CC1SEL (rw): Capture/compare 1 selection This bitfield defines the direction of the channel input (capture) or output mode.
0x4000942C C   FIELD 01w01 CC1E (rw): Capture/compare 1 output enable. This bit determines if a capture of the counter value can actually be done into the input capture/compare register 1 (LPTIM2_CCR1) or not.
0x4000942C C   FIELD 02w02 CC1P (rw): Capture/compare 1 output polarity. Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. This field is used to select the IC1 polarity for capture operations.
0x4000942C C   FIELD 08w02 IC1PSC (rw): Input capture 1 prescaler This bitfield defines the ratio of the prescaler acting on the CC1 input (IC1).
0x4000942C C   FIELD 12w02 IC1F (rw): Input capture 1 filter This bitfield defines the number of consecutive equal samples that are detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x4000942C C   FIELD 16w01 CC2SEL (rw): Capture/compare 2 selection This bitfield defines the direction of the channel, input (capture) or output mode.
0x4000942C C   FIELD 17w01 CC2E (rw): Capture/compare 2 output enable. This bit determines if a capture of the counter value can actually be done into the input capture/compare register 2 (LPTIM2_CCR2) or not.
0x4000942C C   FIELD 18w02 CC2P (rw): Capture/compare 2 output polarity. Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. This field is used to select the IC2 polarity for capture operations.
0x4000942C C   FIELD 24w02 IC2PSC (rw): Input capture 2 prescaler This bitfield defines the ratio of the prescaler acting on the CC2 input (IC2).
0x4000942C C   FIELD 28w02 IC2F (rw): Input capture 2 filter This bitfield defines the number of consecutive equal samples that are detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40009430 B  REGISTER LPTIM2_CCMR2: LPTIM capture/compare mode register 2
0x40009430 C   FIELD 00w01 CC3SEL (rw): Capture/compare 3 selection This bitfield defines the direction of the channel input (capture) or output mode.
0x40009430 C   FIELD 01w01 CC3E (rw): Capture/compare 3 output enable. Condition: CC3 as output: Condition: CC3 as input: This bit determines if a capture of the counter value can actually be done into the input capture/compare register 3 (LPTIM2_CCR3) or not.
0x40009430 C   FIELD 02w02 CC3P (rw): Capture/compare 3 output polarity. Condition: CC3 as output: Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. Condition: CC3 as input: This field is used to select the IC3 polarity for capture operations.
0x40009430 C   FIELD 08w02 IC3PSC (rw): Input capture 3 prescaler This bitfield defines the ratio of the prescaler acting on the CC3 input (IC3).
0x40009430 C   FIELD 12w02 IC3F (rw): Input capture 3 filter This bitfield defines the number of consecutive equal samples that should be detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40009430 C   FIELD 16w01 CC4SEL (rw): Capture/compare 4 selection This bitfield defines the direction of the channel, input (capture) or output mode.
0x40009430 C   FIELD 17w01 CC4E (rw): Capture/compare 4 output enable. Condition: CC4 as output: Condition: CC4 as input: This bit determines if a capture of the counter value can actually be done into the input capture/compare register 4 (LPTIM2_CCR4) or not.
0x40009430 C   FIELD 18w02 CC4P (rw): Capture/compare 4 output polarity. Condition: CC4 as output: Only bit2 is used to set polarity when output mode is enabled, bit3 is don't care. Condition: CC4 as input: This field is used to select the IC4 polarity for capture operations.
0x40009430 C   FIELD 24w02 IC4PSC (rw): Input capture 4 prescaler This bitfield defines the ratio of the prescaler acting on the CC4 input (IC4).
0x40009430 C   FIELD 28w02 IC4F (rw): Input capture 4 filter This bitfield defines the number of consecutive equal samples that should be detected when a level change occurs on an external input capture signal before it is considered as a valid level transition. An internal clock source must be present to use this feature.
0x40009434 B  REGISTER LPTIM2_CCR2: LPTIM compare register 2
0x40009434 C   FIELD 00w16 CCR2 (rw): Capture/compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the capture/compare 2 register. Depending on the PRELOAD option, the CCR2 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 2 contains the value to be compared to the counter LPTIM2_CNT and signaled on OC2 output. If channel CC2 is configured as input: CCR2 becomes read-only, it contains the counter value transferred by the last input capture 2 event. The LPTIM2_CCR2 register is read-only and cannot be programmed.
0x40009438 B  REGISTER LPTIM2_CCR3: LPTIM compare register 3
0x40009438 C   FIELD 00w16 CCR3 (rw): Capture/compare 3 value If channel CC3 is configured as output: CCR3 is the value to be loaded in the capture/compare 3 register. Depending on the PRELOAD option, the CCR3 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 3 contains the value to be compared to the counter LPTIM2_CNT and signaled on OC3 output. If channel CC3 is configured as input: CCR3 becomes read-only, it contains the counter value transferred by the last input capture 3 event. The LPTIM2_CCR3 register is read-only and cannot be programmed.
0x4000943C B  REGISTER LPTIM2_CCR4: LPTIM compare register 4
0x4000943C C   FIELD 00w16 CCR4 (rw): Capture/compare 4 value If channel CC4 is configured as output: CCR4 is the value to be loaded in the capture/compare 4 register. Depending on the PRELOAD option, the CCR4 register is immediately updated if the PRELOAD bit is reset and updated at next LPTIM update event if PREOAD bit is reset. The capture/compare register 4 contains the value to be compared to the counter LPTIM2_CNT and signaled on OC4 output. If channel CC4 is configured as input: CCR4 becomes read-only, it contains the counter value transferred by the last input capture 4 event. The LPTIM2_CCR4 register is read-only and cannot be programmed.
0x4000B000 A PERIPHERAL TAMP
0x4000B000 B  REGISTER TAMP_CR1: TAMP control register 1
0x4000B000 C   FIELD 00w01 TAMP1E (rw): Tamper detection on TAMP_IN1 enable
0x4000B000 C   FIELD 01w01 TAMP2E (rw): Tamper detection on TAMP_IN2 enable<sup>(1)</sup>
0x4000B000 C   FIELD 02w01 TAMP3E (rw): Tamper detection on TAMP_IN3 enable<sup>(1)</sup>
0x4000B000 C   FIELD 03w01 TAMP4E (rw): Tamper detection on TAMP_IN4 enable<sup>(1)</sup>
0x4000B000 C   FIELD 04w01 TAMP5E (rw): Tamper detection on TAMP_IN5 enable<sup>(1)</sup>
0x4000B000 C   FIELD 18w01 ITAMP3E (rw): Internal tamper 3 enable
0x4000B000 C   FIELD 19w01 ITAMP4E (rw): Internal tamper 4 enable
0x4000B000 C   FIELD 20w01 ITAMP5E (rw): Internal tamper 5 enable
0x4000B000 C   FIELD 21w01 ITAMP6E (rw): Internal tamper 6 enable
0x4000B004 B  REGISTER TAMP_CR2: TAMP control register 2
0x4000B004 C   FIELD 00w01 TAMP1POM (rw): Tamper 1 potential mode
0x4000B004 C   FIELD 01w01 TAMP2POM (rw): Tamper 2 potential mode
0x4000B004 C   FIELD 02w01 TAMP3POM (rw): Tamper 3 potential mode
0x4000B004 C   FIELD 03w01 TAMP4POM (rw): Tamper 4 potential mode
0x4000B004 C   FIELD 04w01 TAMP5POM (rw): Tamper 5 potential mode
0x4000B004 C   FIELD 16w01 TAMP1MSK (rw): Tamper 1 mask The tamper 1 interrupt must not be enabled when TAMP1MSK is set.
0x4000B004 C   FIELD 17w01 TAMP2MSK (rw): Tamper 2 mask The tamper 2 interrupt must not be enabled when TAMP2MSK is set.
0x4000B004 C   FIELD 18w01 TAMP3MSK (rw): Tamper 3 mask The tamper 3 interrupt must not be enabled when TAMP3MSK is set.
0x4000B004 C   FIELD 22w01 BKBLOCK (rw): Backup registers and device secrets<sup>(1)</sup> access blocked
0x4000B004 C   FIELD 23w01 BKERASE (wo): Backup registers and device secrets<sup>(1)</sup> erase Writing 1 to this bit reset the backup registers and device secrets<sup>(1)</sup>. Writing 0 has no effect. This bit is always read as 0.
0x4000B004 C   FIELD 24w01 TAMP1TRG (rw): Active level for tamper 1 input If TAMPFLT1=100 tamper 1 input rising edge triggers a tamper detection event. If TAMPFLT1=100 tamper 1 input falling edge triggers a tamper detection event.
0x4000B004 C   FIELD 25w01 TAMP2TRG (rw): Active level for tamper 2 input If TAMPFLT = 00 tamper 2 input rising edge triggers a tamper detection event. If TAMPFLT1=100 tamper 2 input falling edge triggers a tamper detection event.
0x4000B004 C   FIELD 26w01 TAMP3TRG (rw): Active level for tamper 3 input If TAMPFLT1=100 tamper 3 input rising edge triggers a tamper detection event. If TAMPFLT1=100 tamper 3 input falling edge triggers a tamper detection event.
0x4000B004 C   FIELD 27w01 TAMP4TRG (rw): Active level for tamper 4 input (active mode disabled) If TAMPFLT1=100 tamper 4 input rising edge triggers a tamper detection event. If TAMPFLT1=100 tamper 4 input falling edge triggers a tamper detection event.
0x4000B004 C   FIELD 28w01 TAMP5TRG (rw): Active level for tamper 5 input (active mode disabled) If TAMPFLT1=100 tamper 5 input rising edge triggers a tamper detection event. If TAMPFLT1=100 tamper 5 input falling edge triggers a tamper detection event.
0x4000B008 B  REGISTER TAMP_CR3: TAMP control register 3
0x4000B008 C   FIELD 02w01 ITAMP3POM (rw): Internal tamper 3 potential mode
0x4000B008 C   FIELD 03w01 ITAMP4POM (rw): Internal tamper 4 potential mode
0x4000B008 C   FIELD 04w01 ITAMP5POM (rw): Internal tamper 5 potential mode
0x4000B008 C   FIELD 05w01 ITAMP6POM (rw): Internal tamper 6 potential mode
0x4000B00C B  REGISTER TAMP_FLTCR: TAMP filter control register
0x4000B00C C   FIELD 00w03 TAMPFREQ (rw): Tamper sampling frequency Determines the frequency at which each of the TAMP_INx inputs are sampled.
0x4000B00C C   FIELD 03w02 TAMPFLT (rw): TAMP_INx filter count These bits determines the number of consecutive samples at the specified level (TAMP*TRG) needed to activate a tamper event. TAMPFLT is valid for each of the TAMP_INx inputs.
0x4000B00C C   FIELD 05w02 TAMPPRCH (rw): TAMP_INx precharge duration These bit determines the duration of time during which the pull-up/is activated before each sample. TAMPPRCH is valid for each of the TAMP_INx inputs.
0x4000B00C C   FIELD 07w01 TAMPPUDIS (rw): TAMP_INx pull-up disable This bit determines if each of the TAMPx pins are precharged before each sample.
0x4000B02C B  REGISTER TAMP_IER: TAMP interrupt enable register
0x4000B02C C   FIELD 00w01 TAMP1IE (rw): Tamper 1 interrupt enable
0x4000B02C C   FIELD 01w01 TAMP2IE (rw): Tamper 2 interrupt enable
0x4000B02C C   FIELD 02w01 TAMP3IE (rw): Tamper 3 interrupt enable
0x4000B02C C   FIELD 03w01 TAMP4IE (rw): Tamper 4 interrupt enable
0x4000B02C C   FIELD 04w01 TAMP5IE (rw): Tamper 5 interrupt enable
0x4000B02C C   FIELD 18w01 ITAMP3IE (rw): Internal tamper 3 interrupt enable
0x4000B02C C   FIELD 19w01 ITAMP4IE (rw): Internal tamper 4 interrupt enable
0x4000B02C C   FIELD 20w01 ITAMP5IE (rw): Internal tamper 5 interrupt enable
0x4000B02C C   FIELD 21w01 ITAMP6IE (rw): Internal tamper 6 interrupt enable
0x4000B030 B  REGISTER TAMP_SR: TAMP status register
0x4000B030 C   FIELD 00w01 TAMP1F (ro): TAMP1 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP1 input.
0x4000B030 C   FIELD 01w01 TAMP2F (ro): TAMP2 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP2 input.
0x4000B030 C   FIELD 02w01 TAMP3F (ro): TAMP3 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP3 input.
0x4000B030 C   FIELD 03w01 TAMP4F (ro): TAMP4 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP4 input.
0x4000B030 C   FIELD 04w01 TAMP5F (ro): TAMP5 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP5 input.
0x4000B030 C   FIELD 18w01 ITAMP3F (ro): Internal tamper 3 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 3.
0x4000B030 C   FIELD 19w01 ITAMP4F (ro): Internal tamper 4 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 4.
0x4000B030 C   FIELD 20w01 ITAMP5F (ro): Internal tamper 5 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 5.
0x4000B030 C   FIELD 21w01 ITAMP6F (ro): Internal tamper 6 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 6.
0x4000B034 B  REGISTER TAMP_MISR: TAMP masked interrupt status register
0x4000B034 C   FIELD 00w01 TAMP1MF (ro): TAMP1 interrupt masked flag This flag is set by hardware when the tamper 1 interrupt is raised.
0x4000B034 C   FIELD 01w01 TAMP2MF (ro): TAMP2 interrupt masked flag This flag is set by hardware when the tamper 2 interrupt is raised.
0x4000B034 C   FIELD 02w01 TAMP3MF (ro): TAMP3 interrupt masked flag This flag is set by hardware when the tamper 3 interrupt is raised.
0x4000B034 C   FIELD 03w01 TAMP4MF (ro): TAMP4 interrupt masked flag This flag is set by hardware when the tamper 4 interrupt is raised.
0x4000B034 C   FIELD 04w01 TAMP5MF (ro): TAMP5 interrupt masked flag This flag is set by hardware when the tamper 5 interrupt is raised.
0x4000B034 C   FIELD 18w01 ITAMP3MF (ro): Internal tamper 3 interrupt masked flag This flag is set by hardware when the internal tamper 3 interrupt is raised.
0x4000B034 C   FIELD 19w01 ITAMP4MF (ro): Internal tamper 4 interrupt masked flag This flag is set by hardware when the internal tamper 4 interrupt is raised.
0x4000B034 C   FIELD 20w01 ITAMP5MF (ro): Internal tamper 5 interrupt masked flag This flag is set by hardware when the internal tamper 5 interrupt is raised.
0x4000B034 C   FIELD 21w01 ITAMP6MF (ro): Internal tamper 6 interrupt masked flag This flag is set by hardware when the internal tamper 6 interrupt is raised.
0x4000B03C B  REGISTER TAMP_SCR: TAMP status clear register
0x4000B03C C   FIELD 00w01 CTAMP1F (wo): Clear TAMP1 detection flag Writing 1 in this bit clears the TAMP1F bit in the TAMP_SR register.
0x4000B03C C   FIELD 01w01 CTAMP2F (wo): Clear TAMP2 detection flag Writing 1 in this bit clears the TAMP2F bit in the TAMP_SR register.
0x4000B03C C   FIELD 02w01 CTAMP3F (wo): Clear TAMP3 detection flag Writing 1 in this bit clears the TAMP3F bit in the TAMP_SR register.
0x4000B03C C   FIELD 03w01 CTAMP4F (wo): Clear TAMP4 detection flag Writing 1 in this bit clears the TAMP4F bit in the TAMP_SR register.
0x4000B03C C   FIELD 04w01 CTAMP5F (wo): Clear TAMP5 detection flag Writing 1 in this bit clears the TAMP5F bit in the TAMP_SR register.
0x4000B03C C   FIELD 18w01 CITAMP3F (wo): Clear ITAMP3 detection flag Writing 1 in this bit clears the ITAMP3F bit in the TAMP_SR register.
0x4000B03C C   FIELD 19w01 CITAMP4F (wo): Clear ITAMP4 detection flag Writing 1 in this bit clears the ITAMP4F bit in the TAMP_SR register.
0x4000B03C C   FIELD 20w01 CITAMP5F (wo): Clear ITAMP5 detection flag Writing 1 in this bit clears the ITAMP5F bit in the TAMP_SR register.
0x4000B03C C   FIELD 21w01 CITAMP6F (wo): Clear ITAMP6 detection flag Writing 1 in this bit clears the ITAMP6F bit in the TAMP_SR register.
0x4000B100 B  REGISTER TAMP_BKP0R: TAMP backup 0 register
0x4000B100 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x4000B104 B  REGISTER TAMP_BKP1R: TAMP backup 1 register
0x4000B104 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x4000B108 B  REGISTER TAMP_BKP2R: TAMP backup 2 register
0x4000B108 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x4000B10C B  REGISTER TAMP_BKP3R: TAMP backup 3 register
0x4000B10C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x4000B110 B  REGISTER TAMP_BKP4R: TAMP backup 4 register
0x4000B110 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x4000B114 B  REGISTER TAMP_BKP5R: TAMP backup 5 register
0x4000B114 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x4000B118 B  REGISTER TAMP_BKP6R: TAMP backup 6 register
0x4000B118 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x4000B11C B  REGISTER TAMP_BKP7R: TAMP backup 7 register
0x4000B11C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x4000B120 B  REGISTER TAMP_BKP8R: TAMP backup 8 register
0x4000B120 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x40010000 A PERIPHERAL SYSCFG
0x40010000 B  REGISTER SYSCFG_CFGR1: SYSCFG configuration register 1
0x40010000 C   FIELD 00w02 MEM_MODE (rw): Memory mapping selection bits These bits are set and cleared by software. They control the memory internal mapping at address 0x000010000. After reset these bits take on the value selected by the actual boot mode configuration. Refer to Section12.5: Boot configuration for more details. X0: Main flash memory mapped at 0x000010000
0x40010000 C   FIELD 03w01 PA11_RMP (rw): PA11 pin remapping This bit is set and cleared by software. When set, it remaps the PA11 pin to operate as PA9 GPIO port, instead as PA11 GPIO port.
0x40010000 C   FIELD 04w01 PA12_RMP (rw): PA12 pin remapping This bit is set and cleared by software. When set, it remaps the PA12 pin to operate as PA10 GPIO port, instead as PA12 GPIO port.
0x40010000 C   FIELD 05w01 IR_POL (rw): IR output polarity selection
0x40010000 C   FIELD 06w02 IR_MOD (rw): IR Modulation Envelope signal selection This bitfield selects the signal for IR modulation envelope:
0x40010000 C   FIELD 08w01 BOOSTEN (rw): I/O analog switch voltage booster enable This bit selects the way of supplying I/O analog switches: When using the analog inputs , setting to 0 is recommended for high V<sub>DD</sub>, setting to 1 for low V<sub>DD</sub> (less than 2.4 V).
0x40010000 C   FIELD 16w01 I2C_PB6_FMP (rw): Fast Mode Plus (FM+) enable for PB6 This bit is set and cleared by software. It enables I<sup>2</sup>C FM+ driving capability on PB6 I/O port. With this bit in disable state, the I<sup>2</sup>C FM+ driving capability on this I/O port can be enabled through one of I2Cx_FMP bits. When I<sup>2</sup>C FM+ is enabled, the speed control is ignored. Note: This control bit is kept for legacy reasons. It is recommended to use the FMP bit of the I2Cx_CR1 register instead.
0x40010000 C   FIELD 17w01 I2C_PB7_FMP (rw): Fast Mode Plus (FM+) enable for PB7 This bit is set and cleared by software. It enables I<sup>2</sup>C FM+ driving capability on PB7 I/O port. With this bit in disable state, the I<sup>2</sup>C FM+ driving capability on this I/O port can be enabled through one of I2Cx_FMP bits. When I<sup>2</sup>C FM+ is enabled, the speed control is ignored. Note: This control bit is kept for legacy reasons. It is recommended to use the FMP bit of the I2Cx_CR1 register instead.
0x40010000 C   FIELD 18w01 I2C_PB8_FMP (rw): Fast Mode Plus (FM+) enable for PB8 This bit is set and cleared by software. It enables I<sup>2</sup>C FM+ driving capability on PB8 I/O port. With this bit in disable state, the I<sup>2</sup>C FM+ driving capability on this I/O port can be enabled through one of I2Cx_FMP bits. When I<sup>2</sup>C FM+ is enabled, the speed control is ignored. Note: This control bit is kept for legacy reasons. It is recommended to use the FMP bit of the I2Cx_CR1 register instead.
0x40010000 C   FIELD 19w01 I2C_PB9_FMP (rw): Fast Mode Plus (FM+) enable for PB9 This bit is set and cleared by software. It enables I<sup>2</sup>C FM+ driving capability on PB9 I/O port. With this bit in disable state, the I<sup>2</sup>C FM+ driving capability on this I/O port can be enabled through one of I2Cx_FMP bits. When I<sup>2</sup>C FM+ is enabled, the speed control is ignored. Note: This control bit is kept for legacy reasons. It is recommended to use the FMP bit of the I2Cx_CR1 register instead.
0x40010000 C   FIELD 22w01 I2C_PA9_FMP (rw): Fast Mode Plus (FM+) enable for PA9 This bit is set and cleared by software. It enables I<sup>2</sup>C FM+ driving capability on PA9 I/O port. With this bit in disable state, the I<sup>2</sup>C FM+ driving capability on this I/O port can be enabled through one of I2Cx_FMP bits. When I<sup>2</sup>C FM+ is enabled, the speed control is ignored. Note: This control bit is kept for legacy reasons. It is recommended to use the FMP bit of the I2Cx_CR1 register instead.
0x40010000 C   FIELD 23w01 I2C_PA10_FMP (rw): Fast Mode Plus (FM+) enable for PA10 This bit is set and cleared by software. It enables I<sup>2</sup>C FM+ driving capability on PA10 I/O port. With this bit in disable state, the I<sup>2</sup>C FM+ driving capability on this I/O port can be enabled through one of I2Cx_FMP bits. When I<sup>2</sup>C FM+ is enabled, the speed control is ignored. Note: This control bit is kept for legacy reasons. It is recommended to use the FMP bit of the I2Cx_CR1 register instead.
0x40010000 C   FIELD 24w01 I2C3_FMP (rw): Fast Mode Plus (FM+) enable for I2C3 This bit is set and cleared by software. It enables I<sup>2</sup>C FM+ driving capability on I/O ports configured as I2C3 through GPIOx_AFR registers. With this bit in disable state, the I<sup>2</sup>C FM+ driving capability on I/O ports configured as I2C3 can be enabled through their corresponding I2Cx_FMP bit. When I<sup>2</sup>C FM+ is enabled, the speed control is ignored. Note: This control bit is kept for legacy reasons. It is recommended to use the FMP bit of the I2Cx_CR1 register instead.
0x40010018 B  REGISTER SYSCFG_CFGR2: SYSCFG configuration register 2
0x40010018 C   FIELD 00w01 CCL (rw): Cortex<Superscript>1<Default 1 Font>-M0+ LOCKUP bit enable bit This bit is set by software and cleared by a system reset. It can be use to enable and lock the connection of Cortex<Superscript>1<Default 1 Font>-M0+ LOCKUP (Hardfault) output to TIM1/15/16 Break input.
0x40010018 C   FIELD 01w01 SPL (rw): SRAM1 parity lock bit This bit is set by software and cleared by a system reset. It can be used to enable and lock the SRAM1 parity error signal connection to TIM1/15/16 Break input.
0x40010018 C   FIELD 02w01 PVDL (rw): PVD lock enable bit This bit is set by software and cleared by a system reset. It can be used to enable and lock the PVD connection to TIM1/15/16 Break input, as well as the PVDE and PLS[2:0] in the PWR_CR register.
0x40010018 C   FIELD 03w01 ECCL (rw): ECC error lock bit This bit is set by software and cleared by a system reset. It can be used to enable and lock the flash ECC 2-bit error detection signal connection to TIM1/15/16 Break input.
0x40010018 C   FIELD 04w01 BKPL (rw): Backup SRAM2 parity lock This bit is set by software and cleared by a system reset. It can be used to enable and lock the SRAM2 parity error signal connection to TIM1/15/16 Break input.
0x40010018 C   FIELD 07w01 BKPF (rw): Backup SRAM2 parity error flag This bit is set by hardware when an SRAM2 parity error is detected. It is cleared by software by writing 1.
0x40010018 C   FIELD 08w01 SPF (rw): SRAM1 parity error flag This bit is set by hardware when an SRAM1 parity error is detected. It is cleared by software by writing 1.
0x4001001C B  REGISTER SYSCFG_SCSR: SYSCFG SRAM2 control and status register
0x4001001C C   FIELD 00w01 SRAM2ER (rw): SRAM2 erase Setting this bit starts a hardware SRAM2 erase operation. This bit is automatically cleared at the end of the SRAM2 erase operation. Note: This bit is write-protected: setting this bit is possible only after the correct key sequence is written in the SYSCFG_SKR register.
0x4001001C C   FIELD 01w01 SRAM2BSY (ro): SRAM2 busy by erase operation
0x40010020 B  REGISTER SYSCFG_SKR: SYSCFG SRAM2 key register
0x40010020 C   FIELD 00w08 KEY (wo): SRAM2 write protection key for software erase The following steps are required to unlock the write protection of the SRAM2ER bit in the SYSCFG_CFGR2 register: Write 0xCA into KEY[7:0] Write 0x53 into KEY[7:0] Writing a wrong key reactivates the write protection.
0x40010024 B  REGISTER SYSCFG_TSCCR: SYSCFG TSC comparator register
0x40010024 C   FIELD 00w01 G2_IO1 (rw): Comparator mode for group 2 on I/O 1
0x40010024 C   FIELD 01w01 G2_IO3 (rw): Comparator mode for group 2 on I/O 3
0x40010024 C   FIELD 02w01 G4_IO3 (rw): Comparator mode for group 4 on I/O 3
0x40010024 C   FIELD 03w01 G6_IO1 (rw): Comparator mode for group 6 on I/O 1
0x40010024 C   FIELD 04w01 G7_IO1 (rw): Comparator mode for group 7 on I/O 1
0x40010024 C   FIELD 05w01 TSC_IOCTRL (rw): I/O control in comparator mode The I/O control in comparator mode can be overwritten by hardware.
0x40010030 A PERIPHERAL VREFBUF
0x40010030 B  REGISTER VREFBUF_CSR: VREFBUF control and status register
0x40010030 C   FIELD 00w01 ENVR (rw): Voltage reference buffer mode enable This bit is used to enable the voltage reference buffer mode.
0x40010030 C   FIELD 01w01 HIZ (rw): High impedance mode This bit controls the analog switch to connect or not the V<sub>REF+</sub> pin. Refer to Table172: VREF buffer modes for the mode descriptions depending on ENVR bit configuration.
0x40010030 C   FIELD 02w01 VRS (rw): Voltage reference scale This bit selects the value generated by the voltage reference buffer.
0x40010030 C   FIELD 03w01 VRR (ro): Voltage reference buffer ready
0x40010034 B  REGISTER VREFBUF_CCR: VREFBUF calibration control register
0x40010034 C   FIELD 00w06 TRIM (rw): None
0x40010080 B  REGISTER SYSCFG_ITLINE0: SYSCFG interrupt line 0 status register
0x40010080 C   FIELD 00w01 WWDG (ro): Window watchdog interrupt pending flag
0x40010084 B  REGISTER SYSCFG_ITLINE1: SYSCFG interrupt line 1 status register
0x40010084 C   FIELD 00w01 PVDOUT (ro): PVD supply monitoring interrupt request pending (EXTI line 16).
0x40010084 C   FIELD 01w01 PVMOUT1 (ro): V<sub>DDUSB</sub> supply monitoring interrupt request pending (EXTI line 19)
0x40010084 C   FIELD 02w01 PVMOUT3 (ro): ADC supply monitoring interrupt request pending (EXTI line 20)
0x40010084 C   FIELD 03w01 PVMOUT4 (ro): DAC supply monitoring interrupt request pending (EXTI line 21)
0x40010088 B  REGISTER SYSCFG_ITLINE2: SYSCFG interrupt line 2 status register
0x40010088 C   FIELD 00w01 TAMP (ro): Tamper interrupt request pending (EXTI line 21)
0x40010088 C   FIELD 01w01 RTC (ro): RTC interrupt request pending (EXTI line 19)
0x4001008C B  REGISTER SYSCFG_ITLINE3: SYSCFG interrupt line 3 status register
0x4001008C C   FIELD 00w01 FLASH_ITF (ro): Flash interface interrupt request pending
0x4001008C C   FIELD 01w01 FLASH_ECC (ro): Flash interface ECC interrupt request pending
0x40010090 B  REGISTER SYSCFG_ITLINE4: SYSCFG interrupt line 4 status register
0x40010090 C   FIELD 00w01 RCC (ro): Reset and clock control interrupt request pending
0x40010090 C   FIELD 01w01 CRS (ro): CRS interrupt request pending
0x40010094 B  REGISTER SYSCFG_ITLINE5: SYSCFG interrupt line 5 status register
0x40010094 C   FIELD 00w01 EXTI0 (ro): EXTI line 0 interrupt request pending
0x40010094 C   FIELD 01w01 EXTI1 (ro): EXTI line 1 interrupt request pending
0x40010098 B  REGISTER SYSCFG_ITLINE6: SYSCFG interrupt line 6 status register
0x40010098 C   FIELD 00w01 EXTI2 (ro): EXTI line 2 interrupt request pending
0x40010098 C   FIELD 01w01 EXTI3 (ro): EXTI line 3 interrupt request pending
0x4001009C B  REGISTER SYSCFG_ITLINE7: SYSCFG interrupt line 7 status register
0x4001009C C   FIELD 00w01 EXTI4 (ro): EXTI line 4 interrupt request pending
0x4001009C C   FIELD 01w01 EXTI5 (ro): EXTI line 5 interrupt request pending
0x4001009C C   FIELD 02w01 EXTI6 (ro): EXTI line 6 interrupt request pending
0x4001009C C   FIELD 03w01 EXTI7 (ro): EXTI line 7 interrupt request pending
0x4001009C C   FIELD 04w01 EXTI8 (ro): EXTI line 8 interrupt request pending
0x4001009C C   FIELD 05w01 EXTI9 (ro): EXTI line 9 interrupt request pending
0x4001009C C   FIELD 06w01 EXTI10 (ro): EXTI line 10 interrupt request pending
0x4001009C C   FIELD 07w01 EXTI11 (ro): EXTI line 11 interrupt request pending
0x4001009C C   FIELD 08w01 EXTI12 (ro): EXTI line 12 interrupt request pending
0x4001009C C   FIELD 09w01 EXTI13 (ro): EXTI line 13 interrupt request pending
0x4001009C C   FIELD 10w01 EXTI14 (ro): EXTI line 14 interrupt request pending
0x4001009C C   FIELD 11w01 EXTI15 (ro): EXTI line 15 interrupt request pending
0x400100A0 B  REGISTER SYSCFG_ITLINE8: SYSCFG interrupt line 8 status register
0x400100A0 C   FIELD 00w01 USB (ro): USB interrupt request pending
0x400100A4 B  REGISTER SYSCFG_ITLINE9: SYSCFG interrupt line 9 status register
0x400100A4 C   FIELD 00w01 DMA1_CH1 (ro): DMA1 channel 1 interrupt request pending
0x400100A8 B  REGISTER SYSCFG_ITLINE10: SYSCFG interrupt line 10 status register
0x400100A8 C   FIELD 00w01 DMA1_CH2 (ro): DMA1 channel 2 interrupt request pending
0x400100A8 C   FIELD 01w01 DMA1_CH3 (ro): DMA1 channel 3 interrupt request pending
0x400100AC B  REGISTER SYSCFG_ITLINE11: SYSCFG interrupt line 11 status register
0x400100AC C   FIELD 00w01 DMAMUX (ro): DMAMUX interrupt request pending
0x400100AC C   FIELD 01w01 DMA1_CH4 (ro): DMA1 channel 4 interrupt request pending
0x400100AC C   FIELD 02w01 DMA1_CH5 (ro): DMA1 channel 5 interrupt request pending
0x400100AC C   FIELD 03w01 DMA1_CH6 (ro): DMA1 channel 6 interrupt request pending
0x400100AC C   FIELD 04w01 DMA1_CH7 (ro): DMA1 channel 7 interrupt request pending
0x400100AC C   FIELD 05w01 DMA2_CH1 (ro): DMA2 channel 1 interrupt request pending
0x400100AC C   FIELD 06w01 DMA2_CH2 (ro): DMA2 channel 2 interrupt request pending
0x400100AC C   FIELD 07w01 DMA2_CH3 (ro): DMA2 channel 3 interrupt request pending
0x400100AC C   FIELD 08w01 DMA2_CH4 (ro): DMA2 channel 4 interrupt request pending
0x400100AC C   FIELD 09w01 DMA2_CH5 (ro): DMA2 channel 5 interrupt request pending
0x400100B0 B  REGISTER SYSCFG_ITLINE12: SYSCFG interrupt line 12 status register
0x400100B0 C   FIELD 00w01 ADC (ro): ADC interrupt request pending
0x400100B0 C   FIELD 01w01 COMP1 (ro): Comparator 1 interrupt request pending (EXTI line 17)
0x400100B0 C   FIELD 02w01 COMP2 (ro): Comparator 2 interrupt request pending (EXTI line 18)
0x400100B4 B  REGISTER SYSCFG_ITLINE13: SYSCFG interrupt line 13 status register
0x400100B4 C   FIELD 00w01 TIM1_CCU (ro): Timer 1 commutation interrupt request pending
0x400100B4 C   FIELD 01w01 TIM1_TRG (ro): Timer 1 trigger interrupt request pending
0x400100B4 C   FIELD 02w01 TIM1_UPD (ro): Timer 1 update interrupt request pending
0x400100B4 C   FIELD 03w01 TIM1_BRK (ro): Timer 1 break interrupt request pending
0x400100B8 B  REGISTER SYSCFG_ITLINE14: SYSCFG interrupt line 14 status register
0x400100B8 C   FIELD 00w01 TIM1_CC1 (ro): Timer 1 capture compare 1 interrupt request pending
0x400100B8 C   FIELD 01w01 TIM1_CC2 (ro): Timer 1 capture compare 2 interrupt request pending
0x400100B8 C   FIELD 02w01 TIM1_CC3 (ro): Timer 1 capture compare 3 interrupt request pending
0x400100B8 C   FIELD 03w01 TIM1_CC4 (ro): Timer 1 capture compare 4 interrupt request pending
0x400100BC B  REGISTER SYSCFG_ITLINE15: SYSCFG interrupt line 15 status register
0x400100BC C   FIELD 00w01 TIM2 (ro): Timer 2 interrupt request pending
0x400100C0 B  REGISTER SYSCFG_ITLINE16: SYSCFG interrupt line 16 status register
0x400100C0 C   FIELD 00w01 TIM3 (ro): Timer 3 interrupt request pending
0x400100C4 B  REGISTER SYSCFG_ITLINE17: SYSCFG interrupt line 17 status register
0x400100C4 C   FIELD 00w01 TIM6 (ro): Timer 6 interrupt request pending
0x400100C4 C   FIELD 01w01 DAC (ro): DAC underrun interrupt request pending
0x400100C4 C   FIELD 02w01 LPTIM1 (ro): Low-power timer 1 interrupt request pending (EXTI line 29)
0x400100C8 B  REGISTER SYSCFG_ITLINE18: SYSCFG interrupt line 18 status register
0x400100C8 C   FIELD 00w01 TIM7 (ro): Timer 7 interrupt request pending
0x400100C8 C   FIELD 01w01 LPTIM2 (ro): Low-power timer 2 interrupt request pending (EXTI line 30)
0x400100CC B  REGISTER SYSCFG_ITLINE19: SYSCFG interrupt line 19 status register
0x400100CC C   FIELD 00w01 TIM15 (ro): Timer 15 interrupt request pending
0x400100CC C   FIELD 01w01 LPTIM3 (ro): Low-power timer 3 interrupt request pending
0x400100D0 B  REGISTER SYSCFG_ITLINE20: SYSCFG interrupt line 20 status register
0x400100D0 C   FIELD 00w01 TIM16 (ro): Timer 16 interrupt request pending
0x400100D4 B  REGISTER SYSCFG_ITLINE21: SYSCFG interrupt line 21 status register
0x400100D4 C   FIELD 00w01 TSC_MCE (ro): TSC max count error interrupt request pending
0x400100D4 C   FIELD 01w01 TSC_EOA (ro): TSC end of acquisition interrupt request pending
0x400100D8 B  REGISTER SYSCFG_ITLINE22: SYSCFG interrupt line 22 status register
0x400100D8 C   FIELD 00w01 LCD (ro): LCD interrupt request pending
0x400100DC B  REGISTER SYSCFG_ITLINE23: SYSCFG interrupt line 23 status register
0x400100DC C   FIELD 00w01 I2C1 (ro): I2C1 interrupt request pending (EXTI line 33)
0x400100E0 B  REGISTER SYSCFG_ITLINE24: SYSCFG interrupt line 24 status register
0x400100E0 C   FIELD 00w01 I2C2 (ro): I2C2 interrupt request pending
0x400100E0 C   FIELD 01w01 I2C4 (ro): I2C4 interrupt request pending
0x400100E0 C   FIELD 02w01 I2C3 (ro): I2C3 interrupt request pending (EXTI line 23)
0x400100E4 B  REGISTER SYSCFG_ITLINE25: SYSCFG interrupt line 25 status register
0x400100E4 C   FIELD 00w01 SPI1 (ro): SPI1 interrupt request pending
0x400100E8 B  REGISTER SYSCFG_ITLINE26: SYSCFG interrupt line 26 status register
0x400100E8 C   FIELD 00w01 SPI2 (ro): SPI2 interrupt request pending
0x400100E8 C   FIELD 01w01 SPI3 (ro): SPI3 interrupt request pending
0x400100EC B  REGISTER SYSCFG_ITLINE27: SYSCFG interrupt line 27 status register
0x400100EC C   FIELD 00w01 USART1 (ro): USART1 interrupt request pending, combined with EXTI line 25
0x400100F0 B  REGISTER SYSCFG_ITLINE28: SYSCFG interrupt line 28 status register
0x400100F0 C   FIELD 00w01 USART2 (ro): USART2 interrupt request pending (EXTI line 35)
0x400100F0 C   FIELD 01w01 LPUART2 (ro): LPUART2 interrupt request pending (EXTI line 31)
0x400100F4 B  REGISTER SYSCFG_ITLINE29: SYSCFG interrupt line 29 status register
0x400100F4 C   FIELD 00w01 USART3 (ro): USART3 interrupt request pending
0x400100F4 C   FIELD 01w01 LPUART1 (ro): LPUART1 interrupt request pending (EXTI line 30)
0x400100F8 B  REGISTER SYSCFG_ITLINE30: SYSCFG interrupt line 30 status register
0x400100F8 C   FIELD 00w01 USART4 (ro): USART4 interrupt request pending
0x400100F8 C   FIELD 01w01 LPUART3 (ro): LPUART3 interrupt request pending (EXTI line 32)
0x400100FC B  REGISTER SYSCFG_ITLINE31: SYSCFG interrupt line 31 status register
0x400100FC C   FIELD 00w01 RNG (ro): RNG interrupt request pending
0x40010200 A PERIPHERAL COMP1
0x40010200 B  REGISTER COMP1_CSR: Comparator 1 control and status register
0x40010200 C   FIELD 00w01 EN (rw): Comparator 1 enable bit This bit is controlled by software (if not locked). It enables the comparator 1:
0x40010200 C   FIELD 04w04 INMSEL (rw): Comparator 1 signal selector for inverting input INM This bitfield is controlled by software (if not locked). It selects the signal for the inverting input COMP_INM of the comparator 1: Refer to Table176: COMP1 inverting input assignment.
0x40010200 C   FIELD 08w03 INPSEL (rw): Comparator 1 signal selector for noninverting input This bitfield is controlled by software (if not locked). It selects the signal for the noninverting input COMP_INP of the comparator 1 (also see the WINMODE bit): Refer to Table175: COMP1 noninverting input assignment.
0x40010200 C   FIELD 11w01 WINMODE (rw): Comparator 1 noninverting input selector for window mode This bit is controlled by software (if not locked). It selects the signal for COMP_INP input of the comparator 1:
0x40010200 C   FIELD 14w01 WINOUT (rw): Comparator 1 output selector This bit is controlled by software (if not locked). It selects the comparator 1 output:
0x40010200 C   FIELD 15w01 POLARITY (rw): Comparator 1 polarity selector This bit is controlled by software (if not locked). It selects the comparator 1 output polarity:
0x40010200 C   FIELD 16w02 HYST (rw): Comparator 1 hysteresis selector This bitfield is controlled by software (if not locked). It selects the hysteresis of the comparator 1:
0x40010200 C   FIELD 18w02 PWRMODE (rw): Comparator 1 power mode selector This bitfield is controlled by software (if not locked). It selects the power consumption and as a consequence the speed of the comparator 1:
0x40010200 C   FIELD 20w05 BLANKSEL (rw): Comparator 1 blanking source selector This bitfield is controlled by software (if not locked). It selects the blanking source: Others: Reserved, must not be used
0x40010200 C   FIELD 30w01 VALUE (ro): Comparator 1 output status This bit is read-only. It reflects the level of the comparator 1 output after the polarity selector and blanking, as indicated in Figure163.
0x40010200 C   FIELD 31w01 LOCK (rw): COMP_CSR register lock This bit is set by software and cleared by a system reset. It locks the comparator 3 control bits. When locked, all register bits are read-only.
0x40010204 B  REGISTER COMP2_CSR: Comparator 2 control and status register
0x40010204 C   FIELD 00w01 EN (rw): Comparator 2 enable bit This bit is controlled by software (if not locked). It enables the comparator 2:
0x40010204 C   FIELD 04w04 INMSEL (rw): Comparator 2 signal selector for inverting input INM This bitfield is controlled by software (if not locked). It selects the signal for the inverting input COMP_INM of the comparator 2: Refer to Table178: COMP2 inverting input assignment.
0x40010204 C   FIELD 08w02 INPSEL (rw): Comparator 2 signal selector for noninverting input This bitfield is controlled by software (if not locked). It selects the signal for the noninverting input COMP_INP of the comparator 2 (also see the WINMODE bit): Refer to Table177: COMP2 noninverting input assignment.
0x40010204 C   FIELD 11w01 WINMODE (rw): Comparator 2 noninverting input selector for window mode This bit is controlled by software (if not locked). It selects the signal for COMP_INP input of the comparator 2:
0x40010204 C   FIELD 14w01 WINOUT (rw): Comparator 2 output selector This bit is controlled by software (if not locked). It selects the comparator 2 output:
0x40010204 C   FIELD 15w01 POLARITY (rw): Comparator 2 polarity selector This bit is controlled by software (if not locked). It selects the comparator 2 output polarity:
0x40010204 C   FIELD 16w02 HYST (rw): Comparator 2 hysteresis selector This bitfield is controlled by software (if not locked). It selects the hysteresis of the comparator 2:
0x40010204 C   FIELD 18w02 PWRMODE (rw): Comparator 2 power mode selector This bitfield is controlled by software (if not locked). It selects the power consumption and as a consequence the speed of the comparator 2:
0x40010204 C   FIELD 20w05 BLANKSEL (rw): Comparator 2 blanking source selector This bitfield is controlled by software (if not locked). It selects the blanking source: Others: Reserved, must not be used
0x40010204 C   FIELD 30w01 VALUE (ro): Comparator 2 output status This bit is read-only. It reflects the level of the comparator 2 output after the polarity selector and blanking, as indicated in Figure163.
0x40010204 C   FIELD 31w01 LOCK (rw): COMP_CSR register lock This bit is set by software and cleared by a system reset. It locks the comparator 3 control bits. When locked, all register bits are read-only.
0x40012400 A PERIPHERAL ADC
0x40012400 B  REGISTER ADC_ISR: ADC interrupt and status register
0x40012400 C   FIELD 00w01 ADRDY (rw): ADC ready This bit is set by hardware after the ADC has been enabled (ADEN+1) and when the ADC reaches a state where it is ready to accept conversion requests. It is cleared by software writing 1 to it.
0x40012400 C   FIELD 01w01 EOSMP (rw): End of sampling flag This bit is set by hardware during the conversion, at the end of the sampling phase.It is cleared by software by programming it to 1.
0x40012400 C   FIELD 02w01 EOC (rw): End of conversion flag This bit is set by hardware at the end of each conversion of a channel when a new data result is available in the ADC_DR register. It is cleared by software writing 1 to it or by reading the ADC_DR register.
0x40012400 C   FIELD 03w01 EOS (rw): End of sequence flag This bit is set by hardware at the end of the conversion of a sequence of channels selected by the CHSEL bits. It is cleared by software writing 1 to it.
0x40012400 C   FIELD 04w01 OVR (rw): ADC overrun This bit is set by hardware when an overrun occurs, meaning that a new conversion has complete while the EOC flag was already set. It is cleared by software writing 1 to it.
0x40012400 C   FIELD 07w01 AWD1 (rw): Analog watchdog 1 flag This bit is set by hardware when the converted voltage crosses the values programmed in ADC_TR1 and ADC_HR1 registers. It is cleared by software by programming it to 1.
0x40012400 C   FIELD 08w01 AWD2 (rw): Analog watchdog 2 flag This bit is set by hardware when the converted voltage crosses the values programmed in ADC_AWD2TR and ADC_AWD2TR registers. It is cleared by software programming it it.
0x40012400 C   FIELD 09w01 AWD3 (rw): Analog watchdog 3 flag This bit is set by hardware when the converted voltage crosses the values programmed in ADC_AWD3TR and ADC_AWD3TR registers. It is cleared by software by programming it to 1.
0x40012400 C   FIELD 11w01 EOCAL (rw): End Of Calibration flag This bit is set by hardware when calibration is complete. It is cleared by software writing 1 to it.
0x40012400 C   FIELD 13w01 CCRDY (rw): Channel Configuration Ready flag This flag bit is set by hardware when the channel configuration is applied after programming to ADC_CHSELR register or changing CHSELRMOD or SCANDIR. It is cleared by software by programming it to it. Note: When the software configures the channels (by programming ADC_CHSELR or changing CHSELRMOD or SCANDIR), it must wait until the CCRDY flag rises before configuring again or starting conversions, otherwise the new configuration (or the START bit) is ignored. Once the flag is asserted, if the software needs to configure again the channels, it must clear the CCRDY flag before proceeding with a new configuration.
0x40012404 B  REGISTER ADC_IER: ADC interrupt enable register
0x40012404 C   FIELD 00w01 ADRDYIE (rw): ADC ready interrupt enable This bit is set and cleared by software to enable/disable the ADC Ready interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 01w01 EOSMPIE (rw): End of sampling flag interrupt enable This bit is set and cleared by software to enable/disable the end of the sampling phase interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 02w01 EOCIE (rw): End of conversion interrupt enable This bit is set and cleared by software to enable/disable the end of conversion interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 03w01 EOSIE (rw): End of conversion sequence interrupt enable This bit is set and cleared by software to enable/disable the end of sequence of conversions interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 04w01 OVRIE (rw): Overrun interrupt enable This bit is set and cleared by software to enable/disable the overrun interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 07w01 AWD1IE (rw): Analog watchdog 1 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog interrupt. Note: The Software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 08w01 AWD2IE (rw): Analog watchdog 2 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog interrupt. Note: The Software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 09w01 AWD3IE (rw): Analog watchdog 3 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog interrupt. Note: The Software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 11w01 EOCALIE (rw): End of calibration interrupt enable This bit is set and cleared by software to enable/disable the end of calibration interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012404 C   FIELD 13w01 CCRDYIE (rw): Channel Configuration Ready Interrupt enable This bit is set and cleared by software to enable/disable the channel configuration ready interrupt. Note: The software is allowed to write this bit only when ADSTART bit is cleared (this ensures that no conversion is ongoing).
0x40012408 B  REGISTER ADC_CR (rw): ADC control register
0x40012408 C   FIELD 00w01 ADEN (rw): ADC enable command This bit is set by software to enable the ADC. The ADC is effectively ready to operate once the ADRDY flag has been set. It is cleared by hardware when the ADC is disabled, after the execution of the ADDIS command.
0x40012408 C   FIELD 01w01 ADDIS (rw): ADC disable command
0x40012408 C   FIELD 02w01 ADSTART (rw): ADC start conversion command
0x40012408 C   FIELD 04w01 ADSTP (rw): ADC stop conversion command
0x40012408 C   FIELD 28w01 ADVREGEN (rw): ADC Voltage Regulator Enable
0x40012408 C   FIELD 31w01 ADCAL (rw): ADC calibration This bit is set by software to start the calibration of the ADC.
0x4001240C B  REGISTER ADC_CFGR1: ADC configuration register 1
0x4001240C C   FIELD 00w01 DMAEN (rw): Direct memory access enable This bit is set and cleared by software to enable the generation of DMA requests. This allows the DMA controller to be used to manage automatically the converted data. For more details, refer to Section113.6.5: Managing converted data using the DMA on page1333.
0x4001240C C   FIELD 01w01 DMACFG (rw): Direct memory access configuration This bit is set and cleared by software to select between two DMA modes of operation and is effective only when DMAEN1=11. For more details, refer to Section113.6.5: Managing converted data using the DMA on page1333.
0x4001240C C   FIELD 02w01 SCANDIR (rw): Scan sequence direction This bit is set and cleared by software to select the direction in which the channels is scanned in the sequence. It is effective only if CHSELMOD bit is cleared. Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x4001240C C   FIELD 03w02 RES (rw): Data resolution These bits are written by software to select the resolution of the conversion.
0x4001240C C   FIELD 05w01 ALIGN (rw): Data alignment This bit is set and cleared by software to select right or left alignment. Refer to Figure141: Data alignment and resolution (oversampling disabled: OVSE = 0) on page1332
0x4001240C C   FIELD 06w03 EXTSEL (rw): External trigger selection These bits select the external event used to trigger the start of conversion (refer to Table160: External triggers for details):
0x4001240C C   FIELD 10w02 EXTEN (rw): External trigger enable and polarity selection These bits are set and cleared by software to select the external trigger polarity and enable the trigger.
0x4001240C C   FIELD 12w01 OVRMOD (rw): Overrun management mode This bit is set and cleared by software and configure the way data overruns are managed.
0x4001240C C   FIELD 13w01 CONT (rw): Single / continuous conversion mode This bit is set and cleared by software. If it is set, conversion takes place continuously until it is cleared. Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN1=11 and CONT1=11.
0x4001240C C   FIELD 14w01 WAIT (rw): Wait conversion mode This bit is set and cleared by software to enable/disable wait conversion mode.<sup>.</sup>
0x4001240C C   FIELD 15w01 AUTOFF (rw): Auto-off mode This bit is set and cleared by software to enable/disable auto-off mode.<sup>.</sup>
0x4001240C C   FIELD 16w01 DISCEN (rw): Discontinuous mode This bit is set and cleared by software to enable/disable discontinuous mode. Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both bits DISCEN1=11 and CONT1=11.
0x4001240C C   FIELD 21w01 CHSELRMOD (rw): Mode selection of the ADC_CHSELR register This bit is set and cleared by software to control the ADC_CHSELR feature: Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x4001240C C   FIELD 22w01 AWD1SGL (rw): Enable the watchdog on a single channel or on all channels This bit is set and cleared by software to enable the analog watchdog on the channel identified by the AWDCH[4:0] bits or on all the channels
0x4001240C C   FIELD 23w01 AWD1EN (rw): Analog watchdog enable This bit is set and cleared by software.
0x4001240C C   FIELD 26w05 AWD1CH (rw): Analog watchdog channel selection These bits are set and cleared by software. They select the input channel to be guarded by the analog watchdog. ..... Others: Reserved Note: The channel selected by the AWDCH[4:0] bits must be also set into the CHSELR register.
0x40012410 B  REGISTER ADC_CFGR2: ADC configuration register 2
0x40012410 C   FIELD 00w01 OVSE (rw): Oversampler Enable This bit is set and cleared by software. Note: The software is allowed to write this bit only when ADEN bit is cleared.
0x40012410 C   FIELD 02w03 OVSR (rw): Oversampling ratio This bit filed defines the number of oversampling ratio. Note: The software is allowed to write this bit only when ADEN bit is cleared.
0x40012410 C   FIELD 05w04 OVSS (rw): Oversampling shift This bit is set and cleared by software. Others: Reserved Note: The software is allowed to write this bit only when ADEN bit is cleared.
0x40012410 C   FIELD 09w01 TOVS (rw): Triggered Oversampling This bit is set and cleared by software. Note: The software is allowed to write this bit only when ADEN bit is cleared.
0x40012410 C   FIELD 29w01 LFTRIG (rw): Low frequency trigger mode enable This bit is set and cleared by software. Note: The software is allowed to write this bit only when ADEN bit is cleared.
0x40012410 C   FIELD 30w02 CKMODE (rw): ADC clock mode These bits are set and cleared by software to define how the analog ADC is clocked: In all synchronous clock modes, there is no jitter in the delay from a timer trigger to the start of a conversion. Note: The software is allowed to write these bits only when the ADC is disabled (ADCAL1=10, ADSTART1=10, ADSTP1=10, ADDIS1=10 and ADEN1=10).
0x40012414 B  REGISTER ADC_SMPR: ADC sampling time register
0x40012414 C   FIELD 00w03 SMP1 (rw): Sampling time selection 1 These bits are written by software to select the sampling time that applies to all channels. Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 04w03 SMP2 (rw): Sampling time selection 2 These bits are written by software to select the sampling time that applies to all channels. Note: The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 08w01 SMPSEL0 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 09w01 SMPSEL1 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 10w01 SMPSEL2 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 11w01 SMPSEL3 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 12w01 SMPSEL4 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 13w01 SMPSEL5 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 14w01 SMPSEL6 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 15w01 SMPSEL7 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 16w01 SMPSEL8 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 17w01 SMPSEL9 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 18w01 SMPSEL10 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 19w01 SMPSEL11 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 20w01 SMPSEL12 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 21w01 SMPSEL13 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 22w01 SMPSEL14 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 23w01 SMPSEL15 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 24w01 SMPSEL16 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 25w01 SMPSEL17 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 26w01 SMPSEL18 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012414 C   FIELD 27w01 SMPSEL19 (rw): Channel-x sampling time selection (x1=119 to 0) These bits are written by software to define which sampling time is used. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012420 B  REGISTER ADC_AWD1TR: ADC watchdog threshold register
0x40012420 C   FIELD 00w12 LT1 (rw): Analog watchdog 1 lower threshold These bits are written by software to define the lower threshold for the analog watchdog. Refer to Section113.8: Analog window watchdogs on page1337.
0x40012420 C   FIELD 16w12 HT1 (rw): Analog watchdog 1 higher threshold These bits are written by software to define the higher threshold for the analog watchdog. Refer to Section113.8: Analog window watchdogs on page1337.
0x40012424 B  REGISTER ADC_AWD2TR: ADC watchdog threshold register
0x40012424 C   FIELD 00w12 LT2 (rw): Analog watchdog 2 lower threshold These bits are written by software to define the lower threshold for the analog watchdog. Refer to Section113.8: Analog window watchdogs on page1337.
0x40012424 C   FIELD 16w12 HT2 (rw): Analog watchdog 2 higher threshold These bits are written by software to define the higher threshold for the analog watchdog. Refer to Section113.8: Analog window watchdogs on page1337.
0x40012428 B  REGISTER ADC_CHSELR: ADC channel selection register
0x40012428 B  REGISTER ADC_CHSELR_ALTERNATE: ADC channel selection register
0x40012428 C   FIELD 00w01 CHSEL0 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 00w04 SQ1 (rw): 1st conversion of the sequence These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012428 C   FIELD 01w01 CHSEL1 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 02w01 CHSEL2 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 03w01 CHSEL3 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 04w01 CHSEL4 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 04w04 SQ2 (rw): 2nd conversion of the sequence These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012428 C   FIELD 05w01 CHSEL5 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 06w01 CHSEL6 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 07w01 CHSEL7 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 08w01 CHSEL8 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 08w04 SQ3 (rw): 3rd conversion of the sequence These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012428 C   FIELD 09w01 CHSEL9 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 10w01 CHSEL10 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 11w01 CHSEL11 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 12w01 CHSEL12 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 12w04 SQ4 (rw): 4th conversion of the sequence These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012428 C   FIELD 13w01 CHSEL13 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 14w01 CHSEL14 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 15w01 CHSEL15 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 16w01 CHSEL16 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 16w04 SQ5 (rw): 5th conversion of the sequence These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012428 C   FIELD 17w01 CHSEL17 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 18w01 CHSEL18 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 19w01 CHSEL19 (rw): Channel-x selection These bits are written by software and define which channels are part of the sequence of channels to be converted. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing). Note: If CCRDY is not yet asserted after channel configuration (writing ADC_CHSELR register or changing CHSELRMOD or SCANDIR), the value written to this bit is ignored.
0x40012428 C   FIELD 20w04 SQ6 (rw): 6th conversion of the sequence These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012428 C   FIELD 24w04 SQ7 (rw): 7th conversion of the sequence These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. Refer to SQ8[3:0] for a definition of channel selection. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012428 C   FIELD 28w04 SQ8 (rw): 8th conversion of the sequence These bits are programmed by software with the channel number (0...14) assigned to the 8th conversion of the sequence. 0b1111 indicates the end of the sequence. When 0b1111 (end of sequence) is programmed to the lower sequence channels, these bits are ignored. ... Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x4001242C B  REGISTER ADC_AWD3TR: ADC watchdog threshold register
0x4001242C C   FIELD 00w12 LT3 (rw): Analog watchdog 3lower threshold These bits are written by software to define the lower threshold for the analog watchdog. Refer to Section113.8: Analog window watchdogs on page1337.
0x4001242C C   FIELD 16w12 HT3 (rw): Analog watchdog 3 higher threshold These bits are written by software to define the higher threshold for the analog watchdog. Refer to Section113.8: Analog window watchdogs on page1337.
0x40012440 B  REGISTER ADC_DR: ADC data register
0x40012440 C   FIELD 00w16 DATA (ro): Converted data These bits are read-only. They contain the conversion result from the last converted channel. The data are left- or right-aligned as shown in Figure141: Data alignment and resolution (oversampling disabled: OVSE = 0) on page1332. Just after a calibration is complete, DATA[6:0] contains the calibration factor.
0x400124A0 B  REGISTER ADC_AWD2CR: ADC analog watchdog 2 configuration register
0x400124A0 C   FIELD 00w01 AWD2CH0 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 01w01 AWD2CH1 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 02w01 AWD2CH2 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 03w01 AWD2CH3 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 04w01 AWD2CH4 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 05w01 AWD2CH5 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 06w01 AWD2CH6 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 07w01 AWD2CH7 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 08w01 AWD2CH8 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 09w01 AWD2CH9 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 10w01 AWD2CH10 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 11w01 AWD2CH11 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 12w01 AWD2CH12 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 13w01 AWD2CH13 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 14w01 AWD2CH14 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 15w01 AWD2CH15 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 16w01 AWD2CH16 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 17w01 AWD2CH17 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 18w01 AWD2CH18 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A0 C   FIELD 19w01 AWD2CH19 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 2 (AWD2). Note: The channels selected through ADC_AWD2CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x400124A4 B  REGISTER ADC_AWD3CR: ADC Analog Watchdog 3 Configuration register
0x400124A4 C   FIELD 00w01 AWD3CH0 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 01w01 AWD3CH1 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 02w01 AWD3CH2 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 03w01 AWD3CH3 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 04w01 AWD3CH4 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 05w01 AWD3CH5 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 06w01 AWD3CH6 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 07w01 AWD3CH7 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 08w01 AWD3CH8 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 09w01 AWD3CH9 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 10w01 AWD3CH10 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 11w01 AWD3CH11 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 12w01 AWD3CH12 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 13w01 AWD3CH13 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 14w01 AWD3CH14 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 15w01 AWD3CH15 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 16w01 AWD3CH16 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 17w01 AWD3CH17 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 18w01 AWD3CH18 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124A4 C   FIELD 19w01 AWD3CH19 (rw): Analog watchdog channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by analog watchdog 3 (AWD3). Note: The channels selected through ADC_AWD3CR must be also configured into the ADC_CHSELR registers. The software is allowed to write this bit only when ADSTART=0 (which ensures that no conversion is ongoing).
0x400124B4 B  REGISTER ADC_CALFACT: ADC calibration factor
0x400124B4 C   FIELD 00w07 CALFACT (rw): Calibration factor These bits are written by hardware or by software. Once a calibration is complete,1they are updated by hardware with the calibration factors. Software can write these bits with a new calibration factor. If the new calibration factor is different from the current one stored into the analog ADC, it is then applied once a new conversion is launched. Just after a calibration is complete, DATA[6:0] contains the calibration factor. Note: Software can write these bits only when ADEN=1 (ADC is enabled and no calibration is ongoing and no conversion is ongoing).
0x40012708 B  REGISTER ADC_CCR: ADC common configuration register
0x40012708 C   FIELD 18w04 PRESC (rw): ADC prescaler Set and cleared by software to select the frequency of the clock to the ADC. Other: Reserved Note: Software is allowed to write these bits only when the ADC is disabled (ADCAL1=10, ADSTART1=10, ADSTP1=10, ADDIS1=10 and ADEN1=10).
0x40012708 C   FIELD 22w01 VREFEN (rw): V<sub>REFINT</sub> enable This bit is set and cleared by software to enable/disable the V<sub>REFINT</sub>. Note: Software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012708 C   FIELD 23w01 TSEN (rw): Temperature sensor enable This bit is set and cleared by software to enable/disable the temperature sensor. Note: Software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing).
0x40012708 C   FIELD 24w01 VBATEN (rw): V<sub>BAT</sub> enable This bit is set and cleared by software to enable/disable the V<sub>BAT</sub> channel. Note: The software is allowed to write this bit only when ADSTART1=10 (which ensures that no conversion is ongoing)
0x40012C00 A PERIPHERAL TIM1
0x40012C00 B  REGISTER TIM1_CR1: TIM1 control register 1
0x40012C00 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock, gated mode and encoder mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x40012C00 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40012C00 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40012C00 C   FIELD 03w01 OPM (rw): One pulse mode
0x40012C00 C   FIELD 04w01 DIR (rw): Direction Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder mode.
0x40012C00 C   FIELD 05w02 CMS (rw): Center-aligned mode selection Note: Switch from edge-aligned mode to center-aligned mode as long as the counter is enabled (CEN=1) is not allowed
0x40012C00 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40012C00 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and the dead-time and sampling clock (t<sub>DTS</sub>)used by the dead-time generators and the digital filters (ETR, TIx): Note: t<sub>DTS</sub> = 1/f<sub>DTS</sub>, t<sub>CK_INT</sub> = 1/f<sub>CK_INT</sub>.
0x40012C00 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40012C04 B  REGISTER TIM1_CR2: TIM1 control register 2
0x40012C04 C   FIELD 00w01 CCPC (rw): Capture/compare preloaded control Note: This bit acts only on channels that have a complementary output.
0x40012C04 C   FIELD 02w01 CCUS (rw): Capture/compare control update selection Note: This bit acts only on channels that have a complementary output.
0x40012C04 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40012C04 C   FIELD 04w03 MMS (rw): Master mode selection These bits allow selected information to be sent in master mode to slave timers for synchronization (TRGO). The combination is as follows: Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x40012C04 C   FIELD 07w01 TI1S (rw): TI1 selection
0x40012C04 C   FIELD 08w01 OIS1 (rw): Output Idle state 1 (OC1 output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C04 C   FIELD 09w01 OIS1N (rw): Output Idle state 1 (OC1N output) Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C04 C   FIELD 10w01 OIS2 (rw): Output Idle state 2 (OC2 output) Refer to OIS1 bit
0x40012C04 C   FIELD 11w01 OIS2N (rw): Output Idle state 2 (OC2N output) Refer to OIS1N bit
0x40012C04 C   FIELD 12w01 OIS3 (rw): Output Idle state 3 (OC3 output) Refer to OIS1 bit
0x40012C04 C   FIELD 13w01 OIS3N (rw): Output Idle state 3 (OC3N output) Refer to OIS1N bit
0x40012C04 C   FIELD 14w01 OIS4 (rw): Output Idle state 4 (OC4 output) Refer to OIS1 bit
0x40012C04 C   FIELD 16w01 OIS5 (rw): Output Idle state 5 (OC5 output) Refer to OIS1 bit
0x40012C04 C   FIELD 18w01 OIS6 (rw): Output Idle state 6 (OC6 output) Refer to OIS1 bit
0x40012C04 C   FIELD 20w04 MMS2 (rw): Master mode selection 2 These bits allow the information to be sent to ADC for synchronization (TRGO2) to be selected. The combination is as follows: Note: The clock of the slave timer or ADC must be enabled prior to receive events from the master timer, and must not be changed on-the-fly while triggers are received from the master timer.
0x40012C08 B  REGISTER TIM1_SMCR: TIM1 slave mode control register
0x40012C08 C   FIELD 00w03 SMS (rw): SMS[0]: Slave mode selection When external signals are selected the active edge of the trigger signal (TRGI) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Codes above 1000: Reserved. Note: The gated mode must not be used if TI1F_ED is selected as the trigger input (TS=00100). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the TRGO or the TRGO2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40012C08 C   FIELD 03w01 OCCS (rw): OCREF clear selection This bit is used to select the OCREF clear source.
0x40012C08 C   FIELD 04w03 TS (rw): TS[0]: Trigger selection This bit-field selects the trigger input to be used to synchronize the counter. Others: Reserved See Table1118: TIM1 internal trigger connection on page1561 for more details on ITRx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40012C08 C   FIELD 07w01 MSM (rw): Master/slave mode
0x40012C08 C   FIELD 08w04 ETF (rw): External trigger filter This bit-field then defines the frequency used to sample ETRP signal and the length of the digital filter applied to ETRP. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40012C08 C   FIELD 12w02 ETPS (rw): External trigger prescaler External trigger signal ETRP frequency must be at most 1/4 of f<sub>CK_INT</sub> frequency. A prescaler can be enabled to reduce ETRP frequency. It is useful when inputting fast external clocks.
0x40012C08 C   FIELD 14w01 ECE (rw): External clock enable This bit enables External clock mode 2. Note: Setting the ECE bit has the same effect as selecting external clock mode 1 with TRGI connected to ETRF (SMS=111 and TS=00111). It is possible to simultaneously use external clock mode 2 with the following slave modes: reset mode, gated mode and trigger mode. Nevertheless, TRGI must not be connected to ETRF in this case (TS bits must not be 00111). Note: If external clock mode 1 and external clock mode 2 are enabled at the same time, the external clock input is ETRF.
0x40012C08 C   FIELD 15w01 ETP (rw): External trigger polarity This bit selects whether ETR or ETR is used for trigger operations
0x40012C08 C   FIELD 16w01 SMS_1 (rw): SMS[3]
0x40012C08 C   FIELD 20w02 TS_1 (rw): TS[4:3]
0x40012C0C B  REGISTER TIM1_DIER: TIM1 DMA/interrupt enable register
0x40012C0C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x40012C0C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x40012C0C C   FIELD 02w01 CC2IE (rw): Capture/Compare 2 interrupt enable
0x40012C0C C   FIELD 03w01 CC3IE (rw): Capture/Compare 3 interrupt enable
0x40012C0C C   FIELD 04w01 CC4IE (rw): Capture/Compare 4 interrupt enable
0x40012C0C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x40012C0C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x40012C0C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x40012C0C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x40012C0C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x40012C0C C   FIELD 10w01 CC2DE (rw): Capture/Compare 2 DMA request enable
0x40012C0C C   FIELD 11w01 CC3DE (rw): Capture/Compare 3 DMA request enable
0x40012C0C C   FIELD 12w01 CC4DE (rw): Capture/Compare 4 DMA request enable
0x40012C0C C   FIELD 13w01 COMDE (rw): COM DMA request enable
0x40012C0C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40012C10 B  REGISTER TIM1_SR: TIM1 status register
0x40012C10 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to Section122.4.3: TIM1 slave mode control register (TIM1_SMCR)), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40012C10 C   FIELD 01w01 CC1IF (rw): Capture/Compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in down-counting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40012C10 C   FIELD 02w01 CC2IF (rw): Capture/Compare 2 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 03w01 CC3IF (rw): Capture/Compare 3 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 04w01 CC4IF (rw): Capture/Compare 4 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on COM event (when Capture/compare Control bits - CCxE, CCxNE, OCxM - have been updated). It is cleared by software.
0x40012C10 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on TRGI input when the slave mode controller is enabled in all modes but gated mode. It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x40012C10 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x40012C10 C   FIELD 08w01 B2IF (rw): Break 2 interrupt flag This flag is set by hardware as soon as the break 2 input goes active. It can be cleared by software if the break 2 input is not active.
0x40012C10 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to 0.
0x40012C10 C   FIELD 10w01 CC2OF (rw): Capture/Compare 2 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 11w01 CC3OF (rw): Capture/Compare 3 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 12w01 CC4OF (rw): Capture/Compare 4 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 13w01 SBIF (rw): System Break interrupt flag This flag is set by hardware as soon as the system break input goes active. It can be cleared by software if the system break input is not active. This flag must be reset to re-start PWM operation.
0x40012C10 C   FIELD 16w01 CC5IF (rw): Compare 5 interrupt flag Refer to CC1IF description (Note: Channel 5 can only be configured as output)
0x40012C10 C   FIELD 17w01 CC6IF (rw): Compare 6 interrupt flag Refer to CC1IF description (Note: Channel 6 can only be configured as output)
0x40012C14 B  REGISTER TIM1_EGR: TIM1 event generation register
0x40012C14 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40012C14 C   FIELD 01w01 CC1G (wo): Capture/Compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40012C14 C   FIELD 02w01 CC2G (wo): Capture/Compare 2 generation Refer to CC1G description
0x40012C14 C   FIELD 03w01 CC3G (wo): Capture/Compare 3 generation Refer to CC1G description
0x40012C14 C   FIELD 04w01 CC4G (wo): Capture/Compare 4 generation Refer to CC1G description
0x40012C14 C   FIELD 05w01 COMG (wo): Capture/Compare control update generation This bit can be set by software, it is automatically cleared by hardware Note: This bit acts only on channels having a complementary output.
0x40012C14 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C14 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C14 C   FIELD 08w01 B2G (wo): Break 2 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C18 B  REGISTER TIM1_CCMR1_INPUT: TIM1 capture/compare mode register 1
0x40012C18 B  REGISTER TIM1_CCMR1_OUTPUT: TIM1 capture/compare mode register 1
0x40012C18 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = 0 in TIMx_CCER).
0x40012C18 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = 0 in TIMx_CCER).
0x40012C18 C   FIELD 02w01 OC1FE (rw): Output Compare 1 fast enable This bit decreases the latency between a trigger event and a transition on the timer output. It must be used in one-pulse mode (OPM bit set in TIMx_CR1 register), to have the output pulse starting as soon as possible after the starting trigger.
0x40012C18 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (IC1). The prescaler is reset as soon as CC1E=0 (TIMx_CCER register).
0x40012C18 C   FIELD 03w01 OC1PE (rw): Output Compare 1 preload enable Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=00 (the channel is configured in output).
0x40012C18 C   FIELD 04w03 OC1M (rw): OC1M[2:0]: Output Compare 1 mode These bits define the behavior of the output reference signal OC1REF from which OC1 and OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends on CC1P and CC1NP bits. Note: These bits can not be modified as long as LOCK level 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=00 (the channel is configured in output). Note: In PWM mode, the OCREF level changes only when the result of the comparison changes or when the output compare mode switches from frozen mode to PWM mode. Note: On channels having a complementary output, this bit field is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the OC1M active bits take the new value from the preloaded bits only when a COM event is generated. Note: The OC1M[3] bit is not contiguous, located in bit 16.
0x40012C18 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample TI1 input and the length of the digital filter applied to TI1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40012C18 C   FIELD 07w01 OC1CE (rw): Output Compare 1 clear enable
0x40012C18 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = 0 in TIMx_CCER).
0x40012C18 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = 0 in TIMx_CCER).
0x40012C18 C   FIELD 10w01 OC2FE (rw): Output Compare 2 fast enable Refer to OC1FE description.
0x40012C18 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler Refer to IC1PSC[1:0] description.
0x40012C18 C   FIELD 11w01 OC2PE (rw): Output Compare 2 preload enable Refer to OC1PE description.
0x40012C18 C   FIELD 12w03 OC2M (rw): OC2M[2:0]: Output Compare 2 mode Refer to OC1M[3:0] description.
0x40012C18 C   FIELD 12w04 IC2F (rw): Input capture 2 filter Refer to IC1F[3:0] description.
0x40012C18 C   FIELD 15w01 OC2CE (rw): Output Compare 2 clear enable Refer to OC1CE description.
0x40012C18 C   FIELD 16w01 OC1M_1 (rw): OC1M[3]
0x40012C18 C   FIELD 24w01 OC2M_1 (rw): OC2M[3]
0x40012C1C B  REGISTER TIM1_CCMR2_INPUT: TIM1 capture/compare mode register 2
0x40012C1C B  REGISTER TIM1_CCMR2_OUTPUT: TIM1 capture/compare mode register 1
0x40012C1C C   FIELD 00w02 CC3S (rw): Capture/Compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = 0 in TIMx_CCER).
0x40012C1C C   FIELD 00w02 CC3S (rw): Capture/compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = 0 in TIMx_CCER).
0x40012C1C C   FIELD 02w01 OC3FE (rw): Output compare 3 fast enable Refer to OC1FE description.
0x40012C1C C   FIELD 02w02 IC3PSC (rw): Input capture 3 prescaler Refer to IC1PSC[1:0] description.
0x40012C1C C   FIELD 03w01 OC3PE (rw): Output compare 3 preload enable Refer to OC1PE description.
0x40012C1C C   FIELD 04w03 OC3M (rw): OC3M[2:0]: Output compare 3 mode Refer to OC1M[3:0] description.
0x40012C1C C   FIELD 04w04 IC3F (rw): Input capture 3 filter Refer to IC1F[3:0] description.
0x40012C1C C   FIELD 07w01 OC3CE (rw): Output compare 3 clear enable Refer to OC1CE description.
0x40012C1C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = 0 in TIMx_CCER).
0x40012C1C C   FIELD 08w02 CC4S (rw): Capture/Compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = 0 in TIMx_CCER).
0x40012C1C C   FIELD 10w01 OC4FE (rw): Output compare 4 fast enable Refer to OC1FE description.
0x40012C1C C   FIELD 10w02 IC4PSC (rw): Input capture 4 prescaler Refer to IC1PSC[1:0] description.
0x40012C1C C   FIELD 11w01 OC4PE (rw): Output compare 4 preload enable Refer to OC1PE description.
0x40012C1C C   FIELD 12w03 OC4M (rw): OC4M[2:0]: Output compare 4 mode Refer to OC3M[3:0] description.
0x40012C1C C   FIELD 12w04 IC4F (rw): Input capture 4 filter Refer to IC1F[3:0] description.
0x40012C1C C   FIELD 15w01 OC4CE (rw): Output compare 4 clear enable Refer to OC1CE description.
0x40012C1C C   FIELD 16w01 OC3M_1 (rw): OC3M[3]
0x40012C1C C   FIELD 24w01 OC4M_1 (rw): OC4M[3]
0x40012C20 B  REGISTER TIM1_CCER: TIM1 capture/compare enable register
0x40012C20 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to Table1119 for details. Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1E active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: The configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 02w01 CC1NE (rw): Capture/Compare 1 complementary output enable On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NE active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of TI1FP1 and TI2FP1. Refer to CC1P description. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=00 (channel configured as output). On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 04w01 CC2E (rw): Capture/Compare 2 output enable Refer to CC1E description
0x40012C20 C   FIELD 05w01 CC2P (rw): Capture/Compare 2 output polarity Refer to CC1P description
0x40012C20 C   FIELD 06w01 CC2NE (rw): Capture/Compare 2 complementary output enable Refer to CC1NE description
0x40012C20 C   FIELD 07w01 CC2NP (rw): Capture/Compare 2 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 08w01 CC3E (rw): Capture/Compare 3 output enable Refer to CC1E description
0x40012C20 C   FIELD 09w01 CC3P (rw): Capture/Compare 3 output polarity Refer to CC1P description
0x40012C20 C   FIELD 10w01 CC3NE (rw): Capture/Compare 3 complementary output enable Refer to CC1NE description
0x40012C20 C   FIELD 11w01 CC3NP (rw): Capture/Compare 3 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 12w01 CC4E (rw): Capture/Compare 4 output enable Refer to CC1E description
0x40012C20 C   FIELD 13w01 CC4P (rw): Capture/Compare 4 output polarity Refer to CC1P description
0x40012C20 C   FIELD 15w01 CC4NP (rw): Capture/Compare 4 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 16w01 CC5E (rw): Capture/Compare 5 output enable Refer to CC1E description
0x40012C20 C   FIELD 17w01 CC5P (rw): Capture/Compare 5 output polarity Refer to CC1P description
0x40012C20 C   FIELD 20w01 CC6E (rw): Capture/Compare 6 output enable Refer to CC1E description
0x40012C20 C   FIELD 21w01 CC6P (rw): Capture/Compare 6 output polarity Refer to CC1P description
0x40012C24 B  REGISTER TIM1_CNT: TIM1 counter
0x40012C24 C   FIELD 00w16 CNT (rw): Counter value
0x40012C24 C   FIELD 31w01 UIFCPY (ro): UIF copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in the TIMxCR1 is reset, bit 31 is reserved and read at 0.
0x40012C28 B  REGISTER TIM1_PSC: TIM1 prescaler
0x40012C28 C   FIELD 00w16 PSC (rw): Prescaler value The counter clock frequency (CK_CNT) is equal to f<sub>CK_PSC</sub> / (PSC[15:0] + 1). PSC contains the value to be loaded in the active prescaler register at each update event (including when the counter is cleared through UG bit of TIMx_EGR register or through trigger controller when configured in reset mode).
0x40012C2C B  REGISTER TIM1_ARR: TIM1 auto-reload register
0x40012C2C C   FIELD 00w16 ARR (rw): Auto-reload value ARR is the value to be loaded in the actual auto-reload register. Refer to the Section122.3.1: Time-base unit on page1497 for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null.
0x40012C30 B  REGISTER TIM1_RCR: TIM1 repetition counter register
0x40012C30 C   FIELD 00w16 REP (rw): Repetition counter value These bits allow the user to set-up the update rate of the compare registers (i.e. periodic transfers from preload to active registers) when preload registers are enable, as well as the update interrupt generation rate, if this interrupt is enable. Each time the REP_CNT related downcounter reaches zero, an update event is generated and it restarts counting from REP value. As REP_CNT is reloaded with REP value only at the repetition update event U_RC, any write to the TIMx_RCR register is not taken in account until the next repetition update event. It means in PWM mode (REP+1) corresponds to: the number of PWM periods in edge-aligned mode the number of half PWM period in center-aligned mode.
0x40012C34 B  REGISTER TIM1_CCR1: TIM1 capture/compare register 1
0x40012C34 C   FIELD 00w16 CCR1 (rw): Capture/Compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC1PE). Else the preload value is copied in the active capture/compare 1 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on OC1 output. If channel CC1 is configured as input: CR1 is the counter value transferred by the last input capture 1 event (IC1). The TIMx_CCR1 register is read-only and cannot be programmed.
0x40012C38 B  REGISTER TIM1_CCR2: TIM1 capture/compare register 2
0x40012C38 C   FIELD 00w16 CCR2 (rw): Capture/Compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC2PE). Else the preload value is copied in the active capture/compare 2 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on OC2 output. If channel CC2 is configured as input: CCR2 is the counter value transferred by the last input capture 2 event (IC2). The TIMx_CCR2 register is read-only and cannot be programmed.
0x40012C3C B  REGISTER TIM1_CCR3: TIM1 capture/compare register 3
0x40012C3C C   FIELD 00w16 CCR3 (rw): Capture/Compare value If channel CC3 is configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC3PE). Else the preload value is copied in the active capture/compare 3 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on OC3 output. If channel CC3 is configured as input: CCR3 is the counter value transferred by the last input capture 3 event (IC3). The TIMx_CCR3 register is read-only and cannot be programmed.
0x40012C40 B  REGISTER TIM1_CCR4: TIM1 capture/compare register 4
0x40012C40 C   FIELD 00w16 CCR4 (rw): Capture/Compare value If channel CC4 is configured as output: CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC4PE). Else the preload value is copied in the active capture/compare 4 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on OC4 output. If channel CC4 is configured as input: CCR4 is the counter value transferred by the last input capture 4 event (IC4). The TIMx_CCR4 register is read-only and cannot be programmed.
0x40012C44 B  REGISTER TIM1_BDTR: TIM1 break and dead-time register
0x40012C44 C   FIELD 00w08 DTG (rw): Dead-time generator setup
0x40012C44 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x40012C44 C   FIELD 10w01 OSSI (rw): Off-state selection for Idle mode This bit is used when MOE=0 due to a break event or by a software write, on channels configured as outputs. See OC/OCN enable description for more details (Section122.4.11: TIM1 capture/compare enable register (TIM1_CCER)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels having a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (Section122.4.11: TIM1 capture/compare enable register (TIM1_CCER)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 12w01 BKE (rw): Break enable This bit enables the complete break protection (including all sources connected to bk_acth and BRK sources, as per Figure1152: Break and Break2 circuitry overview). Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as one of the break inputs is active (BRK or BRK2). It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. In response to a break event or if MOE is written to 0: OC and OCN outputs are disabled or forced to idle state depending on the OSSI bit. See OC/OCN enable description for more details (Section122.4.11: TIM1 capture/compare enable register (TIM1_CCER)).
0x40012C44 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample BRK input and the length of the digital filter applied to BRK. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 20w04 BK2F (rw): Break 2 filter This bit-field defines the frequency used to sample BRK2 input and the length of the digital filter applied to BRK2. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 24w01 BK2E (rw): Break 2 enable Note: The BRK2 must only be used with OSSR = OSSI = 1. Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 25w01 BK2P (rw): Break 2 polarity Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 26w01 BKDSRM (rw): Break Disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 27w01 BK2DSRM (rw): Break2 Disarm Refer to BKDSRM description
0x40012C44 C   FIELD 28w01 BKBID (rw): Break Bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 29w01 BK2BID (rw): Break2 bidirectional Refer to BKBID description
0x40012C48 B  REGISTER TIM1_DCR: TIM1 DMA control register
0x40012C48 C   FIELD 00w05 DBA (rw): DMA base address This 5-bits vector defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ...
0x40012C48 C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit vector defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers. Transfers can be in half-words or in bytes (see example below). ... Example: Let us consider the following transfer: DBL = 7 bytes & DBA = TIMx_CR1. If DBL = 7 bytes and DBA = TIMx_CR1 represents the address of the byte to be transferred, the address of the transfer should be given by the following equation: (TIMx_CR1 address) + DBA + (DMA index), where DMA index = DBL In this example, 7 bytes are added to (TIMx_CR1 address) + DBA, which gives us the address from/to which the data is copied. In this case, the transfer is done to 7 registers starting from the following address: (TIMx_CR1 address) + DBA According to the configuration of the DMA Data Size, several cases may occur: If the DMA Data Size is configured in half-words, 16-bit data is transferred to each of the 7 registers. If the DMA Data Size is configured in bytes, the data is also transferred to 7 registers: the first register contains the first MSB byte, the second register, the first LSB byte and so on. So with the transfer Timer, one also has to specify the size of data transferred by DMA.
0x40012C4C B  REGISTER TIM1_DMAR: TIM1 DMA address for full transfer
0x40012C4C C   FIELD 00w32 DMAB (rw): DMA register for burst accesses A read or write operation to the DMAR register accesses the register located at the address (TIMx_CR1 address) + (DBA + DMA index) x 4 where TIMx_CR1 address is the address of the control register 1, DBA is the DMA base address configured in TIMx_DCR register, DMA index is automatically controlled by the DMA transfer, and ranges from 0 to DBL (DBL configured in TIMx_DCR).
0x40012C50 B  REGISTER TIM1_OR1: TIM1 option register 1
0x40012C50 C   FIELD 00w02 OCREF_CLR (rw): Ocref_clr source selection This bit selects the ocref_clr input source. Others: Reserved Note: COMP3 is available on STM32G0B1xx and STM32G0C1xx salestypes only.
0x40012C54 B  REGISTER TIM1_CCMR3: TIM1 capture/compare mode register 3
0x40012C54 C   FIELD 02w01 OC5FE (rw): Output compare 5 fast enable Refer to OC1FE description.
0x40012C54 C   FIELD 03w01 OC5PE (rw): Output compare 5 preload enable Refer to OC1PE description.
0x40012C54 C   FIELD 04w03 OC5M (rw): OC5M[0]: Output compare 5 mode Refer to OC1M description.
0x40012C54 C   FIELD 07w01 OC5CE (rw): Output compare 5 clear enable Refer to OC1CE description.
0x40012C54 C   FIELD 10w01 OC6FE (rw): Output compare 6 fast enable Refer to OC1FE description.
0x40012C54 C   FIELD 11w01 OC6PE (rw): Output compare 6 preload enable Refer to OC1PE description.
0x40012C54 C   FIELD 12w03 OC6M (rw): OC6M[0]: Output compare 6 mode Refer to OC1M description.
0x40012C54 C   FIELD 15w01 OC6CE (rw): Output compare 6 clear enable Refer to OC1CE description.
0x40012C54 C   FIELD 16w01 OC5M_1 (rw): OC5M[3]
0x40012C54 C   FIELD 24w01 OC6M_1 (rw): OC6M[3]
0x40012C58 B  REGISTER TIM1_CCR5: TIM1 capture/compare register 5
0x40012C58 C   FIELD 00w16 CCR5 (rw): Capture/Compare 5 value CCR5 is the value to be loaded in the actual capture/compare 5 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC5PE). Else the preload value is copied in the active capture/compare 5 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on OC5 output.
0x40012C58 C   FIELD 29w01 GC5C1 (rw): Group Channel 5 and Channel 1 Distortion on Channel 1 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C58 C   FIELD 30w01 GC5C2 (rw): Group Channel 5 and Channel 2 Distortion on Channel 2 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C58 C   FIELD 31w01 GC5C3 (rw): Group Channel 5 and Channel 3 Distortion on Channel 3 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR2). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C5C B  REGISTER TIM1_CCR6: TIM1 capture/compare register 6
0x40012C5C C   FIELD 00w16 CCR6 (rw): Capture/Compare 6 value CCR6 is the value to be loaded in the actual capture/compare 6 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC6PE). Else the preload value is copied in the active capture/compare 6 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on OC6 output.
0x40012C60 B  REGISTER TIM1_AF1: TIM1 alternate function option register 1
0x40012C60 C   FIELD 00w01 BKINE (rw): BRK BKIN input enable This bit enables the BKIN alternate function input for the timers BRK input. BKIN input is ORed with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 01w01 BKCMP1E (rw): BRK COMP1 enable This bit enables the COMP1 for the timers BRK input. COMP1 output is ORed with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 02w01 BKCMP2E (rw): BRK COMP2 enable This bit enables the COMP2 for the timers BRK input. COMP2 output is ORed with the other BRK sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 09w01 BKINP (rw): BRK BKIN input polarity This bit selects the BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 10w01 BKCMP1P (rw): BRK COMP1 input polarity This bit selects the COMP1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 11w01 BKCMP2P (rw): BRK COMP2 input polarity This bit selects the COMP2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 14w04 ETRSEL (rw): ETR source selection These bits select the ETR input source. Others: Reserved Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 B  REGISTER TIM1_AF2: TIM1 Alternate function register 2
0x40012C64 C   FIELD 00w01 BK2INE (rw): BRK2 BKIN input enable This bit enables the BKIN2 alternate function input for the timers BRK2 input. BKIN2 input is ORed with the other BRK2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 01w01 BK2CMP1E (rw): BRK2 COMP1 enable This bit enables the COMP1 for the timers BRK2 input. COMP1 output is ORed with the other BRK2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 02w01 BK2CMP2E (rw): BRK2 COMP2 enable This bit enables the COMP2 for the timers BRK2 input. COMP2 output is ORed with the other BRK2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 09w01 BK2INP (rw): BRK2 BKIN2 input polarity This bit selects the BKIN2 alternate function input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 10w01 BK2CMP1P (rw): BRK2 COMP1 input polarity This bit selects the COMP1 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 11w01 BK2CMP2P (rw): BRK2 COMP2 input polarity This bit selects the COMP2 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C68 B  REGISTER TIM1_TISEL: TIM1 timer input selection register
0x40012C68 C   FIELD 00w04 TI1SEL (rw): selects TI1[0] to TI1[15] input Others: Reserved
0x40012C68 C   FIELD 08w04 TI2SEL (rw): selects TI2[0] to TI2[15] input Others: Reserved
0x40012C68 C   FIELD 16w04 TI3SEL (rw): selects TI3[0] to TI3[15] input Others: Reserved
0x40012C68 C   FIELD 24w04 TI4SEL (rw): selects TI4[0] to TI4[15] input Others: Reserved
0x40013000 A PERIPHERAL SPI1
0x40013000 B  REGISTER SPI_CR1: SPI control register 1
0x40013000 C   FIELD 00w01 CPHA (rw): Clock phase Note: This bit should not be changed when communication is ongoing. Note: This bit is not used in SPI TI mode except the case when CRC is applied at TI mode.
0x40013000 C   FIELD 01w01 CPOL (rw): Clock polarity Note: This bit should not be changed when communication is ongoing. Note: This bit is not used in SPI TI mode except the case when CRC is applied at TI mode.
0x40013000 C   FIELD 02w01 MSTR (rw): Master selection Note: This bit should not be changed when communication is ongoing.
0x40013000 C   FIELD 03w03 BR (rw): Baud rate control Note: These bits should not be changed when communication is ongoing.
0x40013000 C   FIELD 06w01 SPE (rw): SPI enable Note: When disabling the SPI, follow the procedure described in Procedure for disabling the SPI on page1954.
0x40013000 C   FIELD 07w01 LSBFIRST (rw): Frame format Note: 1. This bit should not be changed when communication is ongoing. Note: 2. This bit is not used in SPI TI mode.
0x40013000 C   FIELD 08w01 SSI (rw): Internal slave select This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the NSS pin and the I/O value of the NSS pin is ignored. Note: This bit is not used in SPI TI mode.
0x40013000 C   FIELD 09w01 SSM (rw): Software slave management When the SSM bit is set, the NSS pin input is replaced with the value from the SSI bit. Note: This bit is not used in SPI TI mode.
0x40013000 C   FIELD 10w01 RXONLY (rw): Receive only mode enabled. This bit enables simplex communication using a single unidirectional line to receive data exclusively. Keep BIDIMODE bit clear when receive only mode is active.This bit is also useful in a multislave system in which this particular slave is not accessed, the output from the accessed slave is not corrupted.
0x40013000 C   FIELD 11w01 CRCL (rw): CRC length This bit is set and cleared by software to select the CRC length. Note: This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
0x40013000 C   FIELD 12w01 CRCNEXT (rw): Transmit CRC next Note: This bit has to be written as soon as the last data is written in the SPI_DR register.
0x40013000 C   FIELD 13w01 CRCEN (rw): Hardware CRC calculation enable Note: This bit should be written only when SPI is disabled (SPE = 0) for correct operation.
0x40013000 C   FIELD 14w01 BIDIOE (rw): Output enable in bidirectional mode This bit combined with the BIDIMODE bit selects the direction of transfer in bidirectional mode. Note: In master mode, the MOSI pin is used and in slave mode, the MISO pin is used.
0x40013000 C   FIELD 15w01 BIDIMODE (rw): Bidirectional data mode enable. This bit enables half-duplex communication using common single bidirectional data line. Keep RXONLY bit clear when bidirectional mode is active.
0x40013004 B  REGISTER SPI_CR2: SPI control register 2
0x40013004 C   FIELD 00w01 RXDMAEN (rw): Rx buffer DMA enable When this bit is set, a DMA request is generated whenever the RXNE flag is set.
0x40013004 C   FIELD 01w01 TXDMAEN (rw): Tx buffer DMA enable When this bit is set, a DMA request is generated whenever the TXE flag is set.
0x40013004 C   FIELD 02w01 SSOE (rw): SS output enable Note: This bit is not used in SPI TI mode.
0x40013004 C   FIELD 03w01 NSSP (rw): NSS pulse management This bit is used in master mode only. it allows the SPI to generate an NSS pulse between two consecutive data when doing continuous transfers. In the case of a single data transfer, it forces the NSS pin high level after the transfer. It has no meaning if CPHA = 1, or FRF = 1. Note: 1. This bit must be written only when the SPI is disabled (SPE=0). Note: 2. This bit is not used in SPI TI mode.
0x40013004 C   FIELD 04w01 FRF (rw): Frame format 1 SPI TI mode Note: This bit must be written only when the SPI is disabled (SPE=0).
0x40013004 C   FIELD 05w01 ERRIE (rw): Error interrupt enable This bit controls the generation of an interrupt when an error condition occurs (CRCERR, OVR, MODF in SPI mode, FRE at TI mode).
0x40013004 C   FIELD 06w01 RXNEIE (rw): RX buffer not empty interrupt enable
0x40013004 C   FIELD 07w01 TXEIE (rw): Tx buffer empty interrupt enable
0x40013004 C   FIELD 08w04 DS (rw): Data size These bits configure the data length for SPI transfers. If software attempts to write one of the Not used values, they are forced to the value 0111 (8-bit)
0x40013004 C   FIELD 12w01 FRXTH (rw): FIFO reception threshold This bit is used to set the threshold of the RXFIFO that triggers an RXNE event
0x40013004 C   FIELD 13w01 LDMA_RX (rw): Last DMA transfer for reception This bit is used in data packing mode, to define if the total number of data to receive by DMA is odd or even. It has significance only if the RXDMAEN bit in the SPI_CR2 register is set and if packing mode is used (data length =< 8-bit and write access to SPI_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPI_CR1 register). Note: Refer to Procedure for disabling the SPI on page1954 if the CRCEN bit is set.
0x40013004 C   FIELD 14w01 LDMA_TX (rw): Last DMA transfer for transmission This bit is used in data packing mode, to define if the total number of data to transmit by DMA is odd or even. It has significance only if the TXDMAEN bit in the SPI_CR2 register is set and if packing mode is used (data length =< 8-bit and write access to SPI_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPI_CR1 register). Note: Refer to Procedure for disabling the SPI on page1954 if the CRCEN bit is set.
0x40013008 B  REGISTER SPI_SR: SPI status register
0x40013008 C   FIELD 00w01 RXNE (ro): Receive buffer not empty
0x40013008 C   FIELD 01w01 TXE (ro): Transmit buffer empty
0x40013008 C   FIELD 04w01 CRCERR (rw): CRC error flag Note: This flag is set by hardware and cleared by software writing 0.
0x40013008 C   FIELD 05w01 MODF (ro): Mode fault This flag is set by hardware and reset by a software sequence. Refer to Section1: Mode fault (MODF) on page1964 for the software sequence.
0x40013008 C   FIELD 06w01 OVR (ro): Overrun flag This flag is set by hardware and reset by a software sequence.
0x40013008 C   FIELD 07w01 BSY (ro): Busy flag This flag is set and cleared by hardware. Note: The BSY flag must be used with caution: refer to Section133.4.10: SPI status flags and Procedure for disabling the SPI on page1954.
0x40013008 C   FIELD 08w01 FRE (ro): Frame format error This flag is used for SPI in TI slave mode. Refer to Section133.4.11: SPI error flags. This flag is set by hardware and reset when SPI_SR is read by software.
0x40013008 C   FIELD 09w02 FRLVL (ro): FIFO reception level These bits are set and cleared by hardware. Note: These bits are not used in SPI receive-only mode while CRC calculation is enabled.
0x40013008 C   FIELD 11w02 FTLVL (ro): FIFO transmission level These bits are set and cleared by hardware.
0x4001300C B  REGISTER SPI_DR: SPI data register
0x4001300C C   FIELD 00w16 DR (rw): Data register Data received or to be transmitted The data register serves as an interface between the Rx and Tx FIFOs. When the data register is read, RxFIFO is accessed while the write to data register accesses TxFIFO (See Section133.4.9: Data transmission and reception procedures). Note: Data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. The Rx threshold setting must always correspond with the read access currently used.
0x40013010 B  REGISTER SPI_CRCPR: SPI CRC polynomial register
0x40013010 C   FIELD 00w16 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The CRC polynomial (0x0007) is the reset value of this register. Another polynomial can be configured as required.
0x40013014 B  REGISTER SPI_RXCRCR: SPI Rx CRC register
0x40013014 C   FIELD 00w16 RXCRC (ro): Rx CRC register When CRC calculation is enabled, the RXCRC[15:0] bits contain the computed CRC value of the subsequently received bytes. This register is reset when the CRCEN bit in SPI_CR1 register is written to 1. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPR register. Only the 8 LSB bits are considered when the CRC frame format is set to be 8-bit length (CRCL bit in the SPI_CR1 is cleared). CRC calculation is done based on any CRC8 standard. The entire 16-bits of this register are considered when a 16-bit CRC frame format is selected (CRCL bit in the SPI_CR1 register is set). CRC calculation is done based on any CRC16 standard. Note: A read to this register when the BSY Flag is set could return an incorrect value.
0x40013018 B  REGISTER SPI_TXCRCR: SPI Tx CRC register
0x40013018 C   FIELD 00w16 TXCRC (ro): Tx CRC register When CRC calculation is enabled, the TXCRC[7:0] bits contain the computed CRC value of the subsequently transmitted bytes. This register is reset when the CRCEN bit of SPI_CR1 is written to 1. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPR register. Only the 8 LSB bits are considered when the CRC frame format is set to be 8-bit length (CRCL bit in the SPI_CR1 is cleared). CRC calculation is done based on any CRC8 standard. The entire 16-bits of this register are considered when a 16-bit CRC frame format is selected (CRCL bit in the SPI_CR1 register is set). CRC calculation is done based on any CRC16 standard. Note: A read to this register when the BSY flag is set could return an incorrect value.
0x40013800 A PERIPHERAL USART1
0x40013800 B  REGISTER USART_CR1: USART control register 1
0x40013800 B  REGISTER USART_CR1_ALTERNATE: USART control register 1
0x40013800 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. Note: In Smartcard mode, (SCEN = 1), the CK is always available when CLKEN = 1, regardless of the UE bit value.
0x40013800 C   FIELD 00w01 UE (rw): USART enable When this bit is cleared, the USART prescalers and outputs are stopped immediately, and all current operations are discarded. The USART configuration is kept, but all the USART_ISR status flags are reset. This bit is set and cleared by software. Note: To enter low-power mode without generating errors on the line, the TE bit must be previously reset and the software must wait for the TC bit in the USART_ISR to be set before resetting the UE bit. Note: The DMA requests are also reset when UE = 0 so the DMA channel must be disabled before resetting the UE bit. Note: In Smartcard mode, (SCEN = 1), the CK is always available when CLKEN = 1, regardless of the UE bit value.
0x40013800 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40013800 C   FIELD 01w01 UESM (rw): USART enable in low-power mode When this bit is cleared, the USART cannot wake up the MCU from low-power mode. When this bit is set, the USART can wake up the MCU from low-power mode. This bit is set and cleared by software. Note: It is recommended to set the UESM bit just before entering low-power mode, and clear it when exiting low-power mode.
0x40013800 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40013800 C   FIELD 02w01 RE (rw): Receiver enable This bit enables the receiver. It is set and cleared by software.
0x40013800 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40013800 C   FIELD 03w01 TE (rw): Transmitter enable This bit enables the transmitter. It is set and cleared by software. Note: During transmission, a low pulse on the TE bit (0 followed by 1) sends a preamble (idle line) after the current word, except in Smartcard mode. In order to generate an idle character, the TE must not be immediately written to 1. To ensure the required duration, the software can poll the TEACK bit in the USART_ISR register. Note: In Smartcard mode, when TE is set, there is a 1 bit-time delay before the transmission starts.
0x40013800 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 04w01 IDLEIE (rw): IDLE interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 05w01 RXFNEIE (rw): RXFIFO not empty interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 05w01 RXNEIE (rw): Receive data register not empty This bit is set and cleared by software.
0x40013800 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 06w01 TCIE (rw): Transmission complete interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 07w01 TXEIE (rw): Transmit data register empty This bit is set and cleared by software.
0x40013800 C   FIELD 07w01 TXFNFIE (rw): TXFIFO not full interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 08w01 PEIE (rw): PE interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UE=0).
0x40013800 C   FIELD 09w01 PS (rw): Parity selection This bit selects the odd or even parity when the parity generation/detection is enabled (PCE bit set). It is set and cleared by software. The parity is selected after the current byte. This bitfield can only be written when the USART is disabled (UE=0).
0x40013800 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UE=0).
0x40013800 C   FIELD 10w01 PCE (rw): Parity control enable This bit selects the hardware parity control (generation and detection). When the parity control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit if M=0) and the parity is checked on the received data. This bit is set and cleared by software. Once it is set, PCE is active after the current byte (in reception and in transmission). This bitfield can only be written when the USART is disabled (UE=0).
0x40013800 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the USART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40013800 C   FIELD 11w01 WAKE (rw): Receiver wake-up method This bit determines the USART wake-up method from Mute mode. It is set or cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40013800 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UE=0).
0x40013800 C   FIELD 12w01 M0 (rw): Word length This bit is used in conjunction with bit 28 (M1) to determine the word length. It is set or cleared by software (refer to bit 28 (M1)description). This bit can only be written when the USART is disabled (UE=0).
0x40013800 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40013800 C   FIELD 13w01 MME (rw): Mute mode enable This bit enables the USART Mute mode function. When set, the USART can switch between active and Mute mode, as defined by the WAKE bit. It is set and cleared by software.
0x40013800 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 14w01 CMIE (rw): Character match interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UE=0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40013800 C   FIELD 15w01 OVER8 (rw): Oversampling mode This bit can only be written when the USART is disabled (UE=0). Note: In LIN, IrDA and Smartcard modes, this bit must be kept cleared.
0x40013800 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013800 C   FIELD 16w05 DEDT (rw): Driver Enable deassertion time This 5-bit value defines the time between the end of the last stop bit, in a transmitted message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). If the USART_TDR register is written during the DEDT time, the new data is transmitted only when the DEDT and DEAT times have both elapsed. This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013800 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013800 C   FIELD 21w05 DEAT (rw): Driver Enable assertion time This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time, depending on the oversampling rate). This bitfield can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013800 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40013800 C   FIELD 26w01 RTOIE (rw): Receiver timeout interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40013800 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013800 C   FIELD 27w01 EOBIE (rw): End of Block interrupt enable This bit is set and cleared by software. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013800 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UE=0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40013800 C   FIELD 28w01 M1 (rw): Word length This bit must be used in conjunction with bit 12 (M0) to determine the word length. It is set or cleared by software. M[1:0] = 00: 1 start bit, 8 Data bits, n Stop bit M[1:0] = 01: 1 start bit, 9 Data bits, n Stop bit M[1:0] = 10: 1 start bit, 7 Data bits, n Stop bit This bit can only be written when the USART is disabled (UE=0). Note: In 7-bits data length mode, the Smartcard mode, LIN master mode and auto baud rate (0x7F and 0x55 frames detection) are not supported.
0x40013800 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0). Note: FIFO mode can be used on standard UART communication, in SPI Master/Slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40013800 C   FIELD 29w01 FIFOEN (rw): FIFO mode enable This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0). Note: FIFO mode can be used on standard UART communication, in SPI Master/Slave mode and in Smartcard modes only. It must not be enabled in IrDA and LIN modes.
0x40013800 C   FIELD 30w01 TXFEIE (rw): TXFIFO empty interrupt enable This bit is set and cleared by software.
0x40013800 C   FIELD 31w01 RXFFIE (rw): None
0x40013804 B  REGISTER USART_CR2: USART control register 2
0x40013804 C   FIELD 00w01 SLVEN (rw): Synchronous Slave mode enable When the SLVEN bit is set, the Synchronous slave mode is enabled. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 03w01 DIS_NSS (rw): When the DIS_NSS bit is set, the NSS pin input is ignored. Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 04w01 ADDM7 (rw): 7-bit Address Detection/4-bit Address Detection This bit is for selection between 4-bit address detection or 7-bit address detection. This bit can only be written when the USART is disabled (UE=0) Note: In 7-bit and 9-bit data modes, the address detection is done on 6-bit and 8-bit address (ADD[5:0] and ADD[7:0]) respectively.
0x40013804 C   FIELD 05w01 LBDL (rw): LIN break detection length This bit is for selection between 11 bit or 10 bit break detection. This bit can only be written when the USART is disabled (UE=0). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 06w01 LBDIE (rw): LIN break detection interrupt enable Break interrupt mask (break detection using break delimiter). Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 08w01 LBCL (rw): Last bit clock pulse This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB) has to be output on the CK pin in Synchronous mode. The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit format selected by the M bit in the USART_CR1 register. This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 09w01 CPHA (rw): Clock phase This bit is used to select the phase of the clock output on the CK pin in Synchronous mode. It works in conjunction with the CPOL bit to produce the desired clock/data relationship (see Figure1233 and Figure1234) This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 10w01 CPOL (rw): Clock polarity This bit enables the user to select the polarity of the clock output on the CK pin in Synchronous mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship This bit can only be written when the USART is disabled (UE=0). Note: If Synchronous mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 11w01 CLKEN (rw): Clock enable This bit enables the user to enable the CK pin. This bit can only be written when the USART is disabled (UE=0). Note: If neither Synchronous mode nor Smartcard mode is supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826. In Smartcard mode, in order to provide correctly the CK clock to the smartcard, the steps below must be respected: UE = 0 SCEN = 1 GTPR configuration CLKEN= 1 Note: UE = 1
0x40013804 C   FIELD 12w02 STOP (rw): stop bits These bits are used for programming the stop bits. This bitfield can only be written when the USART is disabled (UE=0).
0x40013804 C   FIELD 14w01 LINEN (rw): LIN mode enable This bit is set and cleared by software. The LIN mode enables the capability to send LIN synchronous breaks (13 low bits) using the SBKRQ bit in the USART_CR1 register, and to detect LIN Sync breaks. This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support LIN mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 15w01 SWAP (rw): Swap TX/RX pins This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40013804 C   FIELD 16w01 RXINV (rw): RX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the RX line. This bitfield can only be written when the USART is disabled (UE=0).
0x40013804 C   FIELD 17w01 TXINV (rw): TX pin active level inversion This bit is set and cleared by software. This enables the use of an external inverter on the TX line. This bitfield can only be written when the USART is disabled (UE=0).
0x40013804 C   FIELD 18w01 DATAINV (rw): Binary data inversion This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40013804 C   FIELD 19w01 MSBFIRST (rw): Most significant bit first This bit is set and cleared by software. This bitfield can only be written when the USART is disabled (UE=0).
0x40013804 C   FIELD 20w01 ABREN (rw): Auto baud rate enable This bit is set and cleared by software. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 21w02 ABRMOD (rw): Auto baud rate mode These bits are set and cleared by software. This bitfield can only be written when ABREN = 0 or the USART is disabled (UE=0). Note: If DATAINV=1 and/or MSBFIRST=1 the patterns must be the same on the line, for example 0xAA for MSBFIRST) Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 23w01 RTOEN (rw): Receiver timeout enable This bit is set and cleared by software. When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle (no reception) for the duration programmed in the RTOR (receiver timeout register). Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013804 C   FIELD 24w08 ADD (rw): Address of the USART node These bits give the address of the USART node in Mute mode or a character code to be recognized in low-power or Run mode: In Mute mode: they are used in multiprocessor communication to wake up from Mute mode with 4-bit/7-bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1. In 4-bit address mark detection, only ADD[3:0] bits are used. In low-power mode: they are used for wake up from low-power mode on character match. When WUS[1:0] is programmed to 0b00 (WUF active on address match), the wake-up from low-power mode is performed when the received character corresponds to the character programmed through ADD[6:0] or ADD[3:0] bitfield (depending on ADDM7 bit), and WUF interrupt is enabled by setting WUFIE bit. The MSB of the character sent by transmitter should be equal to 1. In Run mode with Mute mode inactive (for example, end-of-block detection in ModBus protocol): the whole received character (8 bits) is compared to ADD[7:0] value and CMF flag is set on match. An interrupt is generated if the CMIE bit is set. These bits can only be written when the reception is disabled (RE1=10) or when the USART is disabled (UE1=10).
0x40013808 B  REGISTER USART_CR3: USART control register 3
0x40013808 C   FIELD 00w01 EIE (rw): Error interrupt enable Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing error, overrun error noise flag or SPI slave underrun error (FE=1 or ORE=1 or NE=1or UDR = 1 in the USART_ISR register).
0x40013808 C   FIELD 01w01 IREN (rw): IrDA mode enable This bit is set and cleared by software. This bit can only be written when the USART is disabled (UE=0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 02w01 IRLP (rw): IrDA low-power This bit is used for selecting between normal and low-power IrDA modes This bit can only be written when the USART is disabled (UE=0). Note: If IrDA mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 03w01 HDSEL (rw): Half-duplex selection Selection of Single-wire Half-duplex mode This bit can only be written when the USART is disabled (UE=0).
0x40013808 C   FIELD 04w01 NACK (rw): Smartcard NACK enable This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 05w01 SCEN (rw): Smartcard mode enable This bit is used for enabling Smartcard mode. This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 06w01 DMAR (rw): DMA enable receiver This bit is set/reset by software
0x40013808 C   FIELD 07w01 DMAT (rw): DMA enable transmitter This bit is set/reset by software
0x40013808 C   FIELD 08w01 RTSE (rw): RTS enable This bit can only be written when the USART is disabled (UE=0). Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 09w01 CTSE (rw): CTS enable This bit can only be written when the USART is disabled (UE=0) Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 10w01 CTSIE (rw): CTS interrupt enable Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 11w01 ONEBIT (rw): One sample bit method enable This bit enables the user to select the sample method. When the one sample bit method is selected the noise detection flag (NE) is disabled. This bit can only be written when the USART is disabled (UE=0).
0x40013808 C   FIELD 12w01 OVRDIS (rw): Overrun Disable This bit is used to disable the receive overrun detection. the ORE flag is not set and the new received data overwrites the previous content of the USART_RDR register. When FIFO mode is enabled, the RXFIFO is bypassed and data are written directly in USART_RDR register. Even when FIFO management is enabled, the RXNE flag is to be used. This bit can only be written when the USART is disabled (UE=0). Note: This control bit enables checking the communication flow w/o reading the data
0x40013808 C   FIELD 13w01 DDRE (rw): DMA Disable on Reception Error This bit can only be written when the USART is disabled (UE=0). Note: The reception errors are: parity error, framing error or noise error.
0x40013808 C   FIELD 14w01 DEM (rw): Driver enable mode This bit enables the user to activate the external transceiver control, through the DE signal. This bit can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 15w01 DEP (rw): Driver enable polarity selection This bit can only be written when the USART is disabled (UE=0). Note: If the Driver Enable feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 17w03 SCARCNT (rw): Smartcard auto-retry count This bitfield specifies the number of retries for transmission and reception in Smartcard mode. In Transmission mode, it specifies the number of automatic retransmission retries, before generating a transmission error (FE bit set). In Reception mode, it specifies the number or erroneous reception trials, before generating a reception error (RXNE/RXFNE and PE bits set). This bitfield must be programmed only when the USART is disabled (UE=0). When the USART is enabled (UE=1), this bitfield may only be written to 0x0, in order to stop retransmission. 0x1 to 0x7: number of automatic retransmission attempts (before signaling error) Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 20w01 WUS0 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (wake-up from low-power mode flag). This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 21w01 WUS1 (rw): Wake-up from low-power mode interrupt flag selection This bitfield specifies the event which activates the WUF (wake-up from low-power mode flag). This bitfield can only be written when the USART is disabled (UE=0). Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 22w01 WUFIE (rw): Wake-up from low-power mode interrupt enable This bit is set and cleared by software. Note: WUFIE must be set before entering in low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 23w01 TXFTIE (rw): TXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40013808 C   FIELD 24w01 TCBGTIE (rw): Transmission Complete before guard time, interrupt enable This bit is set and cleared by software. Note: If the USART does not support the Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013808 C   FIELD 25w03 RXFTCFG (rw): Receive FIFO threshold configuration Remaining combinations: Reserved
0x40013808 C   FIELD 28w01 RXFTIE (rw): RXFIFO threshold interrupt enable This bit is set and cleared by software.
0x40013808 C   FIELD 29w03 TXFTCFG (rw): TXFIFO threshold configuration Remaining combinations: Reserved
0x4001380C B  REGISTER USART_BRR: USART baud rate register
0x4001380C C   FIELD 00w16 BRR (rw): USART baud rate BRR[15:4] BRR[15:4] correspond to USARTDIV[15:4] BRR[3:0] When OVER8 = 0, BRR[3:0] = USARTDIV[3:0]. When OVER8 = 1: BRR[2:0] = USARTDIV[3:0] shifted 1 bit to the right. BRR[3] must be kept cleared.
0x40013810 B  REGISTER USART_GTPR: USART guard time and prescaler register
0x40013810 C   FIELD 00w08 PSC (rw): Prescaler value PSC[7:0] = IrDA Normal and Low-power baud rate This bitfield is used for programming the prescaler for dividing the USART source clock to achieve the low-power frequency: The source clock is divided by the value given in the register (8 significant bits): ... PSC[4:0]: Prescaler value This bitfield is used for programming the prescaler for dividing the USART source clock to provide the Smartcard clock. The value given in the register (5 significant bits) is multiplied by 2 to give the division factor of the source clock frequency: ... This bitfield can only be written when the USART is disabled (UE=0). Note: Bits [7:5] must be kept cleared if Smartcard mode is used. Note: This bitfield is reserved and forced by hardware to 0 when the Smartcard and IrDA modes are not supported. Refer to Section131.4: USART implementation on page1826.
0x40013810 C   FIELD 08w08 GT (rw): Guard time value This bitfield is used to program the Guard time value in terms of number of baud clock periods. This is used in Smartcard mode. The Transmission Complete flag is set after this guard time value. This bitfield can only be written when the USART is disabled (UE=0). Note: If Smartcard mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013814 B  REGISTER USART_RTOR: USART receiver timeout register
0x40013814 C   FIELD 00w24 RTO (rw): Receiver timeout value This bitfield gives the Receiver timeout value in terms of number of bit duration. In Standard mode, the RTOF flag is set if, after the last received character, no new start bit is detected for more than the RTO value. In Smartcard mode, this value is used to implement the CWT and BWT. See Smartcard chapter for more details. In the standard, the CWT/BWT measurement is done starting from the start bit of the last received character. Note: This value must only be programmed once per received character.
0x40013814 C   FIELD 24w08 BLEN (rw): Block Length This bitfield gives the Block length in Smartcard T=1 Reception. Its value equals the number of information characters + the length of the Epilogue Field (1-LEC/2-CRC) - 1. Examples: BLEN = 0 -> 0 information characters + LEC BLEN = 1 -> 0 information characters + CRC BLEN = 255 -> 254 information characters + CRC (total 256 characters)) In Smartcard mode, the Block length counter is reset when TXE=0 (TXFE = 0 in case FIFO mode is enabled). This bitfield can be used also in other modes. In this case, the Block length counter is reset when RE=0 (receiver disabled) and/or when the EOBCF bit is written to 1. Note: This value can be programmed after the start of the block reception (using the data from the LEN character in the Prologue Field). It must be programmed only once per received block.
0x40013818 B  REGISTER USART_RQR: USART request register
0x40013818 C   FIELD 00w01 ABRRQ (wo): Auto baud rate request Writing 1 to this bit resets the ABRF and ABRE flags in the USART_ISR and requests an automatic baud rate measurement on the next received data frame. Note: If the USART does not support the auto baud rate feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013818 C   FIELD 01w01 SBKRQ (wo): Send break request Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as the transmit machine is available. Note: When the application needs to send the break character following all previously inserted data, including the ones not yet transmitted, the software must wait for the TXE flag assertion before setting the SBKRQ bit.
0x40013818 C   FIELD 02w01 MMRQ (wo): Mute mode request Writing 1 to this bit puts the USART in Mute mode and resets the RWU flag.
0x40013818 C   FIELD 03w01 RXFRQ (wo): Receive data flush request Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE. This enables to discard the received data without reading them, and avoid an overrun condition.
0x40013818 C   FIELD 04w01 TXFRQ (wo): Transmit data flush request When FIFO mode is disabled, writing 1 to this bit sets the TXE flag. This enables to discard the transmit data. This bit must be used only in Smartcard mode, when data have not been sent due to errors (NACK) and the FE flag is active in the USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO. This sets the TXFE flag (Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is supported in both UART and Smartcard modes. Note: In FIFO mode, the TXFNF flag is reset during the flush request until TxFIFO is empty in order to ensure that no data are written in the data register.
0x4001381C B  REGISTER USART_ISR: USART interrupt and status register
0x4001381C B  REGISTER USART_ISR_ALTERNATE: USART interrupt and status register
0x4001381C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 00w01 PE (ro): Parity error This bit is set by hardware when a parity error occurs in Reception mode. It is cleared by software, writing 1 to the PECF in the USART_ICR register. An interrupt is generated if PEIE = 1 in the USART_CR1 register. Note: This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the USART_CR3 register. Note: This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 01w01 FE (ro): Framing error This bit is set by hardware when a de-synchronization, excessive noise or a break character is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register. When transmitting data in Smartcard mode, this bit is set when the maximum number of transmit attempts is reached without success (the card NACKs the data frame). An interrupt is generated if EIE1=11 in the USART_CR3 register. Note: This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NFCF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXFNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Section131.5.9: Tolerance of the USART receiver to clock deviation on page1845). Note: This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 02w01 NE (ro): Noise detection flag This bit is set by hardware when noise is detected on a received frame. It is cleared by software, writing 1 to the NFCF bit in the USART_ICR register. Note: This bit does not generate an interrupt as it appears at the same time as the RXNE bit which itself generates an interrupt. An interrupt is generated when the NE flag is set during multi buffer communication if the EIE bit is set. Note: When the line is noise-free, the NE flag can be disabled by programming the ONEBIT bit to 1 to increase the USART tolerance to deviations (Refer to Section131.5.9: Tolerance of the USART receiver to clock deviation on page1845). Note: This error is associated with the character in the USART_RDR.
0x4001381C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXFF = 1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXFNEIE=1 in the USART_CR1 register, or EIE = 1 in the USART_CR3 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4001381C C   FIELD 03w01 ORE (ro): Overrun error This bit is set by hardware when the data currently being received in the shift register is ready to be transferred into the USART_RDR register while RXNE=1. It is cleared by a software, writing 1 to the ORECF, in the USART_ICR register. An interrupt is generated if RXNEIE=1 in the USART_CR1 register, or EIE = 1 in the USART_CR3 register. Note: When this bit is set, the USART_RDR register content is not lost but the shift register is overwritten. An interrupt is generated if the ORE flag is set during multi buffer communication if the EIE bit is set. Note: This bit is permanently forced to 0 (no overrun detection) when the bit OVRDIS is set in the USART_CR3 register.
0x4001381C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXFNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the USART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4001381C C   FIELD 04w01 IDLE (ro): Idle line detected This bit is set by hardware when an Idle Line is detected. An interrupt is generated if IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in the USART_ICR register. Note: The IDLE bit is not set again until the RXNE bit has been set (i.e. a new idle line occurs). Note: If Mute mode is enabled (MME=1), IDLE is set if the USART is not mute (RWU=0), whatever the Mute mode selected by the WAKE bit. If RWU=1, IDLE is not set.
0x4001381C C   FIELD 05w01 RXFNE (ro): RXFIFO not empty RXFNE bit is set by hardware when the RXFIFO is not empty, meaning that data can be read from the USART_RDR register. Every read operation from the USART_RDR frees a location in the RXFIFO. RXFNE is cleared when the RXFIFO is empty. The RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXFNEIE=1 in the USART_CR1 register.
0x4001381C C   FIELD 05w01 RXNE (ro): Read data register not empty RXNE bit is set by hardware when the content of the USART_RDR shift register has been transferred to the USART_RDR register. It is cleared by reading from the USART_RDR register. The RXNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR register. An interrupt is generated if RXNEIE=1 in the USART_CR1 register.
0x4001381C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag behaves as follows: When TDN = 0, the TC flag is set when the transmission of a frame containing data is complete and when TXE/TXFE is set. When TDN is equal to the number of data in the TXFIFO, the TC flag is set when TXFIFO is empty and TDN is reached. When TDN is greater than the number of data in the TXFIFO, TC remains cleared until the TXFIFO is filled again to reach the programmed number of data to be transferred. When TDN is less than the number of data in the TXFIFO, TC is set when TDN is reached even if the TXFIFO is not empty. An interrupt is generated if TCIE=1 in the USART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x4001381C C   FIELD 06w01 TC (ro): Transmission complete This bit indicates that the last data written in the USART_TDR has been transmitted out of the shift register. The TC flag is set when the transmission of a frame containing data is complete and when TXE is set. An interrupt is generated if TCIE=1 in the USART_CR1 register. TC bit is cleared by software by writing 1 to the TCCF in the USART_ICR register or by writing to the USART_TDR register.
0x4001381C C   FIELD 07w01 TXE (ro): Transmit data register empty TXE is set by hardware when the content of the USART_TDR register has been transferred into the shift register. It is cleared by writing to the USART_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the USART_RQR register, in order to discard the data (only in Smartcard T=0 mode, in case of transmission failure). An interrupt is generated if the TXEIE bit =1 in the USART_CR1 register.
0x4001381C C   FIELD 07w01 TXFNF (ro): TXFIFO not full TXFNF is set by hardware when TXFIFO is not full meaning that data can be written in the USART_TDR. Every write operation to the USART_TDR places the data in the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag is cleared indicating that data can not be written into the USART_TDR. An interrupt is generated if the TXFNFIE bit =1 in the USART_CR1 register. Note: The TXFNF is kept reset during the flush request until TXFIFO is empty. After sending the flush request (by setting TXFRQ bit), the flag TXFNF must be checked prior to writing in TXFIFO (TXFNF and TXFE is set at the same time). Note: This bit is used during single buffer transmission.
0x4001381C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 08w01 LBDF (ro): LIN break detection flag This bit is set by hardware when the LIN break is detected. It is cleared by software, by writing 1 to the LBDCF in the USART_ICR. An interrupt is generated if LBDIE = 1 in the USART_CR2 register. Note: If the USART does not support LIN mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIE=1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 09w01 CTSIF (ro): CTS interrupt flag This bit is set by hardware when the CTS input toggles, if the CTSE bit is set. It is cleared by software, by writing 1 to the CTSCF bit in the USART_ICR register. An interrupt is generated if CTSIE=1 in the USART_CR3 register. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 10w01 CTS (ro): CTS flag This bit is set/reset by hardware. It is an inverted copy of the status of the CTS input pin. Note: If the hardware flow control feature is not supported, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIE=1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. Note: The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 11w01 RTOF (ro): Receiver timeout This bit is set by hardware when the timeout value, programmed in the RTOR register has lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in the USART_ICR register. An interrupt is generated if RTOIE=1 in the USART_CR2 register. In Smartcard mode, the timeout corresponds to the CWT or BWT timings. Note: If a time equal to the value programmed in RTOR register separates 2 characters, RTOF is not set. If this time exceeds this value + 2 sample times (2/16 or 2/8, depending on the oversampling method), RTOF flag is set. Note: The counter counts even if RE = 0 but RTOF is set only when RE = 1. If the timeout has already elapsed when RE is set, then RTOF is set. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example T=1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if EOBIE1=11 in the USART_CR1 register. It is cleared by software, writing 1 to EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 12w01 EOBF (ro): End of block flag This bit is set by hardware when a complete block has been received (for example T=1 Smartcard mode). The detection is done when the number of received bytes (from the start of the block, including the prologue) is equal or greater than BLEN + 4. An interrupt is generated if EOBIE1=11 in the USART_CR1 register. It is cleared by software, writing 1 to EOBCF in the USART_ICR register. Note: If Smartcard mode is not supported, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In Slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 13w01 UDR (ro): SPI slave underrun error flag In Slave transmission mode, this flag is set when the first clock pulse for data transmission appears while the software has not yet loaded any value into USART_TDR. This flag is reset by setting UDRCF bit in the USART_ICR register. Note: If the USART does not support the SPI slave mode, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 14w01 ABRE (ro): Auto baud rate error This bit is set by hardware if the baud rate measurement failed (baud rate out of range or character comparison failed) It is cleared by software, by writing 1 to the ABRRQ bit in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXFNE is also set, generating an interrupt if RXFNEIE = 1) or when the auto baud rate operation was completed without success (ABRE=1) (ABRE, RXFNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 15w01 ABRF (ro): Auto baud rate flag This bit is set by hardware when the automatic baud rate has been set (RXNE is also set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was completed without success (ABRE=1) (ABRE, RXNE and FE are also set in this case) It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to the ABRRQ in the USART_RQR register. Note: If the USART does not support the auto baud rate feature, this bit is reserved and kept at reset value.
0x4001381C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4001381C C   FIELD 16w01 BUSY (ro): Busy flag This bit is set and reset by hardware. It is active when a communication is ongoing on the RX line (successful start bit detected). It is reset at the end of the reception (successful or not).
0x4001381C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIE=1in the USART_CR1 register.
0x4001381C C   FIELD 17w01 CMF (ro): Character match flag This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is cleared by software, writing 1 to the CMCF in the USART_ICR register. An interrupt is generated if CMIE=1in the USART_CR1 register.
0x4001381C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4001381C C   FIELD 18w01 SBKF (ro): Send break flag This bit indicates that a send break character was requested. It is set by software, by writing 1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during the stop bit of break transmission.
0x4001381C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 19w01 RWU (ro): Receiver wake-up from Mute mode This bit indicates if the USART is in Mute mode. It is cleared/set by hardware when a wake-up/mute sequence is recognized. The Mute mode control sequence (address or IDLE) is selected by the WAKE bit in the USART_CR1 register. When wake-up on IDLE mode is selected, this bit can only be set by software, writing 1 to the MMRQ bit in the USART_RQR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIE=1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 20w01 WUF (ro): Wake-up from low-power mode flag This bit is set by hardware, when a wake-up event is detected. The event is defined by the WUS bitfield. It is cleared by software, writing a 1 to the WUCF in the USART_ICR register. An interrupt is generated if WUFIE=1 in the USART_CR3 register. Note: When UESM is cleared, WUF flag is also cleared. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the USART_CR1 register, in order to respect the TE=0 minimum period.
0x4001381C C   FIELD 21w01 TEACK (ro): Transmit enable acknowledge flag This bit is set/reset by hardware, when the Transmit Enable value is taken into account by the USART. It can be used when an idle frame request is generated by writing TE=0, followed by TE=1 in the USART_CR1 register, in order to respect the TE=0 minimum period.
0x4001381C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 22w01 REACK (ro): Receive enable acknowledge flag This bit is set/reset by hardware, when the Receive Enable value is taken into account by the USART. It can be used to verify that the USART is ready for reception before entering low-power mode. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 23w01 TXFE (ro): TXFIFO Empty This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in the USART_RQR register. An interrupt is generated if the TXFEIE bit =1 (bit 30) in the USART_CR1 register.
0x4001381C C   FIELD 24w01 RXFF (ro): RXFIFO Full This bit is set by hardware when the number of received data corresponds to RXFIFO1size1+11 (RXFIFO full + 1 data in the USART_RDR register. An interrupt is generated if the RXFFIE bit =1 in the USART_CR1 register.
0x4001381C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIE=1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is 1. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 25w01 TCBGT (ro): Transmission complete before guard time flag This bit is set when the last data written in the USART_TDR has been transmitted correctly out of the shift register. It is set by hardware in Smartcard mode, if the transmission of a frame containing data is complete and if the smartcard did not send back any NACK. An interrupt is generated if TCBGTIE=1 in the USART_CR3 register. This bit is cleared by software, by writing 1 to the TCBGTCF in the USART_ICR register or by a write to the USART_TDR register. Note: If the USART does not support the Smartcard mode, this bit is reserved and kept at reset value. If the USART supports the Smartcard mode and the Smartcard mode is enabled, the TCBGT reset value is 1. Refer to Section131.4: USART implementation on page1826.
0x4001381C C   FIELD 26w01 RXFT (ro): RXFIFO threshold flag This bit is set by hardware when the threshold programmed in RXFTCFG in USART_CR3 register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit =1 (bit 27) in the USART_CR3 register. Note: When the RXFTCFG threshold is configured to 101, RXFT flag is set if 16 data are available i.e. 15 data in the RXFIFO and 1 data in the USART_RDR. Consequently, the 17th received data does not cause an overrun error. The overrun error occurs after receiving the 18th data.
0x4001381C C   FIELD 27w01 TXFT (ro): TXFIFO threshold flag This bit is set by hardware when the TXFIFO reaches the threshold programmed in TXFTCFG of USART_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is generated if the TXFTIE bit =1 (bit 31) in the USART_CR3 register.
0x40013820 B  REGISTER USART_ICR: USART interrupt flag clear register
0x40013820 C   FIELD 00w01 PECF (wo): Parity error clear flag Writing 1 to this bit clears the PE flag in the USART_ISR register.
0x40013820 C   FIELD 01w01 FECF (wo): Framing error clear flag Writing 1 to this bit clears the FE flag in the USART_ISR register.
0x40013820 C   FIELD 02w01 NECF (wo): Noise detected clear flag Writing 1 to this bit clears the NE flag in the USART_ISR register.
0x40013820 C   FIELD 03w01 ORECF (wo): Overrun error clear flag Writing 1 to this bit clears the ORE flag in the USART_ISR register.
0x40013820 C   FIELD 04w01 IDLECF (wo): Idle line detected clear flag Writing 1 to this bit clears the IDLE flag in the USART_ISR register.
0x40013820 C   FIELD 05w01 TXFECF (wo): TXFIFO empty clear flag Writing 1 to this bit clears the TXFE flag in the USART_ISR register.
0x40013820 C   FIELD 06w01 TCCF (wo): Transmission complete clear flag Writing 1 to this bit clears the TC flag in the USART_ISR register.
0x40013820 C   FIELD 07w01 TCBGTCF (wo): Transmission complete before Guard time clear flag Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.
0x40013820 C   FIELD 08w01 LBDCF (wo): LIN break detection clear flag Writing 1 to this bit clears the LBDF flag in the USART_ISR register. Note: If LIN mode is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013820 C   FIELD 09w01 CTSCF (wo): CTS clear flag Writing 1 to this bit clears the CTSIF flag in the USART_ISR register. Note: If the hardware flow control feature is not supported, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013820 C   FIELD 11w01 RTOCF (wo): Receiver timeout clear flag Writing 1 to this bit clears the RTOF flag in the USART_ISR register. Note: If the USART does not support the Receiver timeout feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013820 C   FIELD 12w01 EOBCF (wo): End of block clear flag Writing 1 to this bit clears the EOBF flag in the USART_ISR register. Note: If the USART does not support Smartcard mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013820 C   FIELD 13w01 UDRCF (wo): SPI slave underrun clear flag Writing 1 to this bit clears the UDRF flag in the USART_ISR register. Note: If the USART does not support SPI slave mode, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826
0x40013820 C   FIELD 17w01 CMCF (wo): Character match clear flag Writing 1 to this bit clears the CMF flag in the USART_ISR register.
0x40013820 C   FIELD 20w01 WUCF (wo): Wake-up from low-power mode clear flag Writing 1 to this bit clears the WUF flag in the USART_ISR register. Note: If the USART does not support the wake-up from Stop feature, this bit is reserved and must be kept at reset value. Refer to Section131.4: USART implementation on page1826.
0x40013824 B  REGISTER USART_RDR: USART receive data register
0x40013824 C   FIELD 00w09 RDR (ro): Receive data value Contains the received data character. The RDR register provides the parallel interface between the input shift register and the internal bus (see Figure1227). When receiving with the parity enabled, the value read in the MSB bit is the received parity bit.
0x40013828 B  REGISTER USART_TDR: USART transmit data register
0x40013828 C   FIELD 00w09 TDR (rw): Transmit data value Contains the data character to be transmitted. The USART_TDR register provides the parallel interface between the internal bus and the output shift register (see Figure1227). When transmitting with the parity enabled (PCE bit set to 1 in the USART_CR1 register), the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect because it is replaced by the parity. Note: This register must be written only when TXE/TXFNF=1.
0x4001382C B  REGISTER USART_PRESC: USART prescaler register
0x4001382C C   FIELD 00w04 PRESCALER (rw): Clock prescaler The USART input clock can be divided by a prescaler factor: Remaining combinations: Reserved Note: When PRESCALER is programmed with a value different of the allowed ones, programmed prescaler value is equal to 1011 i.e. input clock divided by 256.
0x40014000 A PERIPHERAL TIM15
0x40014000 B  REGISTER TIM15_CR1 (rw): TIM15 control register 1
0x40014000 C   FIELD 00w01 CEN (rw): Counter enable
0x40014000 C   FIELD 01w01 UDIS (rw): Update disable
0x40014000 C   FIELD 02w01 URS (rw): Update request source
0x40014000 C   FIELD 03w01 OPM (rw): One-pulse mode
0x40014000 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40014000 C   FIELD 08w02 CKD (rw): Clock division
0x40014000 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40014004 B  REGISTER TIM15_CR2 (rw): TIM15 control register 2
0x40014004 C   FIELD 00w01 CCPC (rw): Capture/compare preloaded control
0x40014004 C   FIELD 02w01 CCUS (rw): Capture/compare control update selection
0x40014004 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40014004 C   FIELD 04w03 MMS (rw): Master mode selection
0x40014004 C   FIELD 07w01 TI1S (rw): TI1 selection
0x40014004 C   FIELD 08w01 OIS1 (rw): Output Idle state 1 (OC1 output)
0x40014004 C   FIELD 09w01 OIS1N (rw): Output Idle state 1 (OC1N output)
0x40014004 C   FIELD 10w01 OIS2 (rw): Output idle state 2 (OC2 output)
0x40014008 B  REGISTER TIM15_SMCR (rw): TIM15 slave mode control register
0x40014008 C   FIELD 00w03 SMS (rw): SMS[2:0]: Slave mode selection
0x40014008 C   FIELD 04w03 TS (rw): TS[2:0]: Trigger selection
0x40014008 C   FIELD 07w01 MSM (rw): Master/slave mode
0x40014008 C   FIELD 16w01 SMS_1 (rw): SMS[3]
0x40014008 C   FIELD 20w02 TS_1 (rw): TS[4:3]
0x4001400C B  REGISTER TIM15_DIER (rw): TIM15 DMA/interrupt enable register
0x4001400C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4001400C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4001400C C   FIELD 02w01 CC2IE (rw): Capture/Compare 2 interrupt enable
0x4001400C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x4001400C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x4001400C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x4001400C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4001400C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x4001400C C   FIELD 13w01 COMDE (rw): COM DMA request enable
0x4001400C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40014010 B  REGISTER TIM15_SR (rw): TIM15 status register
0x40014010 C   FIELD 00w01 UIF (rw): Update interrupt flag
0x40014010 C   FIELD 01w01 CC1IF (rw): Capture/Compare 1 interrupt flag
0x40014010 C   FIELD 02w01 CC2IF (rw): Capture/Compare 2 interrupt flag
0x40014010 C   FIELD 05w01 COMIF (rw): COM interrupt flag
0x40014010 C   FIELD 06w01 TIF (rw): Trigger interrupt flag
0x40014010 C   FIELD 07w01 BIF (rw): Break interrupt flag
0x40014010 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag
0x40014010 C   FIELD 10w01 CC2OF (rw): Capture/Compare 2 overcapture flag
0x40014014 B  REGISTER TIM15_EGR (rw): TIM15 event generation register
0x40014014 C   FIELD 00w01 UG (wo): Update generation
0x40014014 C   FIELD 01w01 CC1G (wo): Capture/Compare 1 generation
0x40014014 C   FIELD 02w01 CC2G (wo): Capture/Compare 2 generation
0x40014014 C   FIELD 05w01 COMG (rw): Capture/Compare control update generation
0x40014014 C   FIELD 06w01 TG (wo): Trigger generation
0x40014014 C   FIELD 07w01 BG (wo): Break generation
0x40014018 B  REGISTER TIM15_CCMR1 (rw): TIM15 capture/compare mode register 1
0x40014018 B  REGISTER TIM15_CCMR1_ALTERNATE1 (rw): TIM15 capture/compare mode register 1
0x40014018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 Selection
0x40014018 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection
0x40014018 C   FIELD 02w01 OC1FE (rw): Output Compare 1 fast enable
0x40014018 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler
0x40014018 C   FIELD 03w01 OC1PE (rw): Output Compare 1 preload enable
0x40014018 C   FIELD 04w03 OC1M (rw): OC1M[2:0]: Output Compare 1 mode
0x40014018 C   FIELD 04w04 IC1F (rw): Input capture 1 filter
0x40014018 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection
0x40014018 C   FIELD 08w02 CC2S (rw): Capture/Compare 2 selection
0x40014018 C   FIELD 10w01 OC2FE (rw): Output Compare 2 fast enable
0x40014018 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler
0x40014018 C   FIELD 11w01 OC2PE (rw): Output Compare 2 preload enable
0x40014018 C   FIELD 12w03 OC2M (rw): OC2M[2:0]: Output Compare 2 mode
0x40014018 C   FIELD 12w04 IC2F (rw): Input capture 2 filter
0x40014018 C   FIELD 16w01 OC1M_1 (rw): OC1M[3]
0x40014018 C   FIELD 24w01 OC2M_1 (rw): OC2M[3]
0x40014020 B  REGISTER TIM15_CCER (rw): TIM15 capture/compare enable register
0x40014020 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable
0x40014020 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output polarity
0x40014020 C   FIELD 02w01 CC1NE (rw): Capture/Compare 1 complementary output enable
0x40014020 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 complementary output polarity
0x40014020 C   FIELD 04w01 CC2E (rw): Capture/Compare 2 output enable
0x40014020 C   FIELD 05w01 CC2P (rw): Capture/Compare 2 output polarity
0x40014020 C   FIELD 07w01 CC2NP (rw): Capture/Compare 2 complementary output polarity
0x40014024 B  REGISTER TIM15_CNT (rw): TIM15 counter
0x40014024 C   FIELD 00w16 CNT (rw): Counter value
0x40014024 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x40014028 B  REGISTER TIM15_PSC (rw): TIM15 prescaler
0x40014028 C   FIELD 00w16 PSC (rw): Prescaler value
0x4001402C B  REGISTER TIM15_ARR (rw): TIM15 auto-reload register
0x4001402C C   FIELD 00w16 ARR (rw): Auto-reload value
0x40014030 B  REGISTER TIM15_RCR (rw): TIM15 repetition counter register
0x40014030 C   FIELD 00w08 REP (rw): Repetition counter value
0x40014034 B  REGISTER TIM15_CCR1 (rw): TIM15 capture/compare register 1
0x40014034 C   FIELD 00w16 CCR1 (rw): Capture/Compare 1 value
0x40014038 B  REGISTER TIM15_CCR2 (rw): TIM15 capture/compare register 2
0x40014038 C   FIELD 00w16 CCR2 (rw): Capture/Compare 2 value
0x40014044 B  REGISTER TIM15_BDTR (rw): TIM15 break and dead-time register
0x40014044 C   FIELD 00w08 DTG (rw): Dead-time generator setup
0x40014044 C   FIELD 08w02 LOCK (rw): Lock configuration
0x40014044 C   FIELD 10w01 OSSI (rw): Off-state selection for Idle mode
0x40014044 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode
0x40014044 C   FIELD 12w01 BKE (rw): Break enable
0x40014044 C   FIELD 13w01 BKP (rw): Break polarity
0x40014044 C   FIELD 14w01 AOE (rw): Automatic output enable
0x40014044 C   FIELD 15w01 MOE (rw): Main output enable
0x40014044 C   FIELD 16w04 BKF (rw): Break filter
0x40014044 C   FIELD 26w01 BKDSRM (rw): Break Disarm
0x40014044 C   FIELD 28w01 BKBID (rw): Break Bidirectional
0x40014048 B  REGISTER TIM15_DCR (rw): TIM15 DMA control register
0x40014048 C   FIELD 00w05 DBA (rw): DMA base address
0x40014048 C   FIELD 08w05 DBL (rw): DMA burst length
0x4001404C B  REGISTER TIM15_DMAR (rw): TIM15 DMA address for full transfer
0x4001404C C   FIELD 00w16 DMAB (rw): DMA register for burst accesses
0x40014060 B  REGISTER TIM15_AF1 (rw): TIM15 alternate register 1
0x40014060 C   FIELD 00w01 BKINE (rw): BRK BKIN input enable
0x40014060 C   FIELD 01w01 BKCMP1E (rw): BRK COMP1 enable
0x40014060 C   FIELD 02w01 BKCMP2E (rw): BRK COMP2 enable
0x40014060 C   FIELD 09w01 BKINP (rw): BRK BKIN input polarity
0x40014060 C   FIELD 10w01 BKCMP1P (rw): BRK COMP1 input polarity
0x40014060 C   FIELD 11w01 BKCMP2P (rw): BRK COMP2 input polarity
0x40014068 B  REGISTER TIM15_TISEL (rw): TIM15 input selection register
0x40014068 C   FIELD 00w04 TI1SEL (rw): selects TI1[0] to TI1[15] input
0x40014068 C   FIELD 08w04 TI2SEL (rw): selects TI2[0] to TI2[15] input
0x40014400 A PERIPHERAL TIM16
0x40014400 B  REGISTER TIM16_CR1 (rw): TIM16 control register 1
0x40014400 C   FIELD 00w01 CEN (rw): Counter enable
0x40014400 C   FIELD 01w01 UDIS (rw): Update disable
0x40014400 C   FIELD 02w01 URS (rw): Update request source
0x40014400 C   FIELD 03w01 OPM (rw): One pulse mode
0x40014400 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40014400 C   FIELD 08w02 CKD (rw): Clock division
0x40014400 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40014404 B  REGISTER TIM16_CR2 (rw): TIM16 control register 2
0x40014404 C   FIELD 00w01 CCPC (rw): Capture/compare preloaded control
0x40014404 C   FIELD 02w01 CCUS (rw): Capture/compare control update selection
0x40014404 C   FIELD 03w01 CCDS (rw): Capture/compare DMA selection
0x40014404 C   FIELD 08w01 OIS1 (rw): Output Idle state 1 (OC1 output)
0x40014404 C   FIELD 09w01 OIS1N (rw): Output Idle state 1 (OC1N output)
0x4001440C B  REGISTER TIM16_DIER (rw): TIM16 DMA/interrupt enable register
0x4001440C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4001440C C   FIELD 01w01 CC1IE (rw): Capture/Compare 1 interrupt enable
0x4001440C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x4001440C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x4001440C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4001440C C   FIELD 09w01 CC1DE (rw): Capture/Compare 1 DMA request enable
0x40014410 B  REGISTER TIM16_SR (rw): TIM16 status register
0x40014410 C   FIELD 00w01 UIF (rw): Update interrupt flag
0x40014410 C   FIELD 01w01 CC1IF (rw): Capture/Compare 1 interrupt flag
0x40014410 C   FIELD 05w01 COMIF (rw): COM interrupt flag
0x40014410 C   FIELD 07w01 BIF (rw): Break interrupt flag
0x40014410 C   FIELD 09w01 CC1OF (rw): Capture/Compare 1 overcapture flag
0x40014414 B  REGISTER TIM16_EGR (wo): TIM16 event generation register
0x40014414 C   FIELD 00w01 UG (wo): Update generation
0x40014414 C   FIELD 01w01 CC1G (wo): Capture/Compare 1 generation
0x40014414 C   FIELD 05w01 COMG (wo): Capture/Compare control update generation
0x40014414 C   FIELD 07w01 BG (wo): Break generation
0x40014418 B  REGISTER TIM16_CCMR1 (rw): TIM16 capture/compare mode register 1
0x40014418 B  REGISTER TIM16_CCMR1_ALTERNATE1 (rw): TIM16 capture/compare mode register 1
0x40014418 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 Selection
0x40014418 C   FIELD 00w02 CC1S (rw): Capture/Compare 1 selection
0x40014418 C   FIELD 02w01 OC1FE (rw): Output Compare 1 fast enable
0x40014418 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler
0x40014418 C   FIELD 03w01 OC1PE (rw): Output Compare 1 preload enable
0x40014418 C   FIELD 04w03 OC1M (rw): OC1M[2:0]: Output Compare 1 mode
0x40014418 C   FIELD 04w04 IC1F (rw): Input capture 1 filter
0x40014418 C   FIELD 16w01 OC1M_1 (rw): OC1M[3]
0x40014420 B  REGISTER TIM16_CCER (rw): TIM16 capture/compare enable register
0x40014420 C   FIELD 00w01 CC1E (rw): Capture/Compare 1 output enable
0x40014420 C   FIELD 01w01 CC1P (rw): Capture/Compare 1 output polarity
0x40014420 C   FIELD 02w01 CC1NE (rw): Capture/Compare 1 complementary output enable
0x40014420 C   FIELD 03w01 CC1NP (rw): Capture/Compare 1 complementary output polarity
0x40014424 B  REGISTER TIM16_CNT (rw): TIM16 counter
0x40014424 C   FIELD 00w16 CNT (rw): Counter value
0x40014424 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x40014428 B  REGISTER TIM16_PSC (rw): TIM16 prescaler
0x40014428 C   FIELD 00w16 PSC (rw): Prescaler value
0x4001442C B  REGISTER TIM16_ARR (rw): TIM16 auto-reload register
0x4001442C C   FIELD 00w16 ARR (rw): Auto-reload value
0x40014430 B  REGISTER TIM16_RCR (rw): TIM16 repetition counter register
0x40014430 C   FIELD 00w08 REP (rw): Repetition counter value
0x40014434 B  REGISTER TIM16_CCR1 (rw): TIM16 capture/compare register 1
0x40014434 C   FIELD 00w16 CCR1 (rw): Capture/Compare 1 value
0x40014444 B  REGISTER TIM16_BDTR (rw): TIM16 break and dead-time register
0x40014444 C   FIELD 00w08 DTG (rw): Dead-time generator setup
0x40014444 C   FIELD 08w02 LOCK (rw): Lock configuration
0x40014444 C   FIELD 10w01 OSSI (rw): Off-state selection for Idle mode
0x40014444 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode
0x40014444 C   FIELD 12w01 BKE (rw): Break enable
0x40014444 C   FIELD 13w01 BKP (rw): Break polarity
0x40014444 C   FIELD 14w01 AOE (rw): Automatic output enable
0x40014444 C   FIELD 15w01 MOE (rw): Main output enable
0x40014444 C   FIELD 16w04 BKF (rw): Break filter
0x40014444 C   FIELD 26w01 BKDSRM (rw): Break Disarm
0x40014444 C   FIELD 28w01 BKBID (rw): Break Bidirectional
0x40014448 B  REGISTER TIM16_DCR (rw): TIM16 DMA control register
0x40014448 C   FIELD 00w05 DBA (rw): DMA base address
0x40014448 C   FIELD 08w05 DBL (rw): DMA burst length
0x4001444C B  REGISTER TIM16_DMAR (rw): TIM16 DMA address for full transfer
0x4001444C C   FIELD 00w16 DMAB (rw): DMA register for burst accesses
0x40014460 B  REGISTER TIM16_AF1 (rw): TIM16 alternate function register 1
0x40014460 C   FIELD 00w01 BKINE (rw): BRK BKIN input enable
0x40014460 C   FIELD 01w01 BKCMP1E (rw): BRK COMP1 enable
0x40014460 C   FIELD 02w01 BKCMP2E (rw): BRK COMP2 enable
0x40014460 C   FIELD 09w01 BKINP (rw): BRK BKIN input polarity
0x40014460 C   FIELD 10w01 BKCMP1P (rw): BRK COMP1 input polarity
0x40014460 C   FIELD 11w01 BKCMP2P (rw): BRK COMP2 input polarity
0x40014468 B  REGISTER TIM16_TISEL (rw): TIM16 input selection register
0x40014468 C   FIELD 00w04 TI1SEL (rw): selects TI1[0] to TI1[15] input
0x40015800 A PERIPHERAL DBGMCU
0x40015800 B  REGISTER DBGMCU_IDCODE: DBGMCU device ID code register
0x40015800 C   FIELD 00w12 DEV_ID (ro): Device identifier This field indicates the device ID.
0x40015800 C   FIELD 16w16 REV_ID (ro): Revision identifier This field indicates the revision of the device.
0x40015804 B  REGISTER DBGMCU_CR: DBGMCU configuration register
0x40015804 C   FIELD 01w01 DBG_STOP (rw): Debug Stop mode Debug options in Stop mode.
0x40015804 C   FIELD 02w01 DBG_STANDBY (rw): Debug Standby and Shutdown modes Debug options in Standby or Shutdown mode.
0x40015808 B  REGISTER DBGMCU_APB1FZR: DBGMCU APB1 freeze register
0x40015808 C   FIELD 00w01 DBG_TIM2_STOP (rw): TIM2 stop in debug
0x40015808 C   FIELD 01w01 DBG_TIM3_STOP (rw): TIM3 stop in debug
0x40015808 C   FIELD 02w01 DBG_TIM4_STOP (rw): TIM4 stop in debug
0x40015808 C   FIELD 04w01 DBG_TIM6_STOP (rw): TIM6 stop in debug
0x40015808 C   FIELD 05w01 DBG_TIM7_STOP (rw): TIM7 stop in debug
0x40015808 C   FIELD 10w01 DBG_RTC_STOP (rw): RTC stop in debug
0x40015808 C   FIELD 11w01 DBG_WWDG_STOP (rw): WWDG stop in debug
0x40015808 C   FIELD 12w01 DBG_IWDG_STOP (rw): IWDG stop in debug
0x40015808 C   FIELD 21w01 DBG_I2C3_STOP (rw): I2C3 SMBUS timeout stop in debug
0x40015808 C   FIELD 22w01 DBG_I2C1_STOP (rw): I2C1 SMBUS timeout stop in debug
0x40015808 C   FIELD 30w01 DBG_LPTIM2_STOP (rw): LPTIM2 stop in debug
0x40015808 C   FIELD 31w01 DBG_LPTIM1_STOP (rw): LPTIM1 stop in debug
0x4001580C B  REGISTER DBGMCU_APB2FZR: DBG APB2 freeze register
0x4001580C C   FIELD 11w01 DBG_TIM1_STOP (rw): TIM1 stop in debug
0x4001580C C   FIELD 15w01 DBG_TIM14_STOP (rw): TIM14 stop in debug
0x4001580C C   FIELD 16w01 DBG_TIM15_STOP (rw): TIM15 stop in debug
0x4001580C C   FIELD 17w01 DBG_TIM16_STOP (rw): TIM16 stop in debug
0x4001580C C   FIELD 18w01 DBG_LPTIM3_STOP (rw): LPTIM3 stop in debug
0x400158FC B  REGISTER DBGMCU_SR: DBGMCU status register
0x400158FC C   FIELD 00w01 AP1_PRESENT (ro): Identifies whether access port AP1 is present in device
0x400158FC C   FIELD 01w01 AP0_PRESENT (ro): Identifies whether access port AP0 is present in device
0x400158FC C   FIELD 16w01 AP1_ENABLED (ro): Identifies whether access port AP0 is open (can be accessed via the debug port) or locked (debug access to the AP is blocked)
0x400158FC C   FIELD 17w01 AP0_ENABLED (ro): Identifies whether access port AP0 is open (can be accessed via the debug port) or locked (debug access to the AP is blocked)
0x40015900 B  REGISTER DBGMCU_DBG_AUTH_HOST: DBGMCU debug authentication mailbox host register
0x40015900 C   FIELD 00w32 MESSAGE (rw): Debug host to device mailbox message. During debug authentication the debug host communicates with the device via this register.
0x40015904 B  REGISTER DBGMCU_DBG_AUTH_DEVICE: DBGMCU debug authentication mailbox device register
0x40015904 C   FIELD 00w32 MESSAGE (ro): Device to debug host mailbox message. During debug authentication the device communicates with the debug host via this register.
0x400167D0 B  REGISTER DBGMCU_PIDR4: DBGMCU CoreSight peripheral identity register 4
0x400167D0 C   FIELD 00w04 JEP106CON (ro): JEP106 continuation code
0x400167D0 C   FIELD 04w04 SIZE (ro): register file size
0x400167E0 B  REGISTER DBGMCU_PIDR0: DBGMCU CoreSight peripheral identity register 0
0x400167E0 C   FIELD 00w08 PARTNUM (ro): part number bits [7:0]
0x400167E4 B  REGISTER DBGMCU_PIDR1: DBGMCU CoreSight peripheral identity register 1
0x400167E4 C   FIELD 00w04 PARTNUM (ro): part number bits [11:8]
0x400167E4 C   FIELD 04w04 JEP106ID (ro): JEP106 identity code bits [3:0]
0x400167E8 B  REGISTER DBGMCU_PIDR2: DBGMCU CoreSight peripheral identity register 2
0x400167E8 C   FIELD 00w03 JEP106ID (ro): JEP106 identity code bits [6:4]
0x400167E8 C   FIELD 03w01 JEDEC (ro): JEDEC assigned value
0x400167E8 C   FIELD 04w04 REVISION (ro): component revision number
0x400167EC B  REGISTER DBGMCU_PIDR3: DBGMCU CoreSight peripheral identity register 3
0x400167EC C   FIELD 00w04 CMOD (ro): customer modified
0x400167EC C   FIELD 04w04 REVAND (ro): metal fix version
0x400167F0 B  REGISTER DBGMCU_CIDR0: DBGMCU CoreSight component identity register 0
0x400167F0 C   FIELD 00w08 PREAMBLE (ro): component identification bits [7:0]
0x400167F4 B  REGISTER DBGMCU_CIDR1: DBGMCU CoreSight component identity register 1
0x400167F4 C   FIELD 00w04 PREAMBLE (ro): component identification bits [11:8]
0x400167F4 C   FIELD 04w04 CLASS (ro): component identification bits [15:12] - component class
0x400167F8 B  REGISTER DBGMCU_CIDR2: DBGMCU CoreSight component identity register 2
0x400167F8 C   FIELD 00w08 PREAMBLE (ro): component identification bits [23:16]
0x400167FC B  REGISTER DBGMCU_CIDR3: DBGMCU CoreSight component identity register 3
0x400167FC C   FIELD 00w08 PREAMBLE (ro): component identification bits [31:24]
0x40020000 A PERIPHERAL DMA1
0x40020000 B  REGISTER DMA_ISR: DMA interrupt status register
0x40020000 C   FIELD 00w01 GIF1 (ro): Global interrupt flag for channel 1
0x40020000 C   FIELD 01w01 TCIF1 (ro): Transfer complete (TC) flag for channel 1
0x40020000 C   FIELD 02w01 HTIF1 (ro): Half transfer (HT) flag for channel 1
0x40020000 C   FIELD 03w01 TEIF1 (ro): Transfer error (TE) flag for channel 1
0x40020000 C   FIELD 04w01 GIF2 (ro): Global interrupt flag for channel 2
0x40020000 C   FIELD 05w01 TCIF2 (ro): Transfer complete (TC) flag for channel 2
0x40020000 C   FIELD 06w01 HTIF2 (ro): Half transfer (HT) flag for channel 2
0x40020000 C   FIELD 07w01 TEIF2 (ro): Transfer error (TE) flag for channel 2
0x40020000 C   FIELD 08w01 GIF3 (ro): Global interrupt flag for channel 3
0x40020000 C   FIELD 09w01 TCIF3 (ro): Transfer complete (TC) flag for channel 3
0x40020000 C   FIELD 10w01 HTIF3 (ro): Half transfer (HT) flag for channel 3
0x40020000 C   FIELD 11w01 TEIF3 (ro): Transfer error (TE) flag for channel 3
0x40020000 C   FIELD 12w01 GIF4 (ro): global interrupt flag for channel 4
0x40020000 C   FIELD 13w01 TCIF4 (ro): Transfer complete (TC) flag for channel 4
0x40020000 C   FIELD 14w01 HTIF4 (ro): Half transfer (HT) flag for channel 4
0x40020000 C   FIELD 15w01 TEIF4 (ro): Transfer error (TE) flag for channel 4
0x40020000 C   FIELD 16w01 GIF5 (ro): global interrupt flag for channel 5
0x40020000 C   FIELD 17w01 TCIF5 (ro): Transfer complete (TC) flag for channel 5
0x40020000 C   FIELD 18w01 HTIF5 (ro): Half transfer (HT) flag for channel 5
0x40020000 C   FIELD 19w01 TEIF5 (ro): Transfer error (TE) flag for channel 5
0x40020000 C   FIELD 20w01 GIF6 (ro): Global interrupt flag for channel 6
0x40020000 C   FIELD 21w01 TCIF6 (ro): Transfer complete (TC) flag for channel 6
0x40020000 C   FIELD 22w01 HTIF6 (ro): Half transfer (HT) flag for channel 6
0x40020000 C   FIELD 23w01 TEIF6 (ro): Transfer error (TE) flag for channel 6
0x40020000 C   FIELD 24w01 GIF7 (ro): Global interrupt flag for channel 7
0x40020000 C   FIELD 25w01 TCIF7 (ro): Transfer complete (TC) flag for channel 7
0x40020000 C   FIELD 26w01 HTIF7 (ro): Half transfer (HT) flag for channel 7
0x40020000 C   FIELD 27w01 TEIF7 (ro): Transfer error (TE) flag for channel 7
0x40020004 B  REGISTER DMA_IFCR: DMA interrupt flag clear register
0x40020004 C   FIELD 00w01 CGIF1 (wo): Global interrupt flag clear for channel 1
0x40020004 C   FIELD 01w01 CTCIF1 (wo): Transfer complete flag clear for channel 1
0x40020004 C   FIELD 02w01 CHTIF1 (wo): Half transfer flag clear for channel 1
0x40020004 C   FIELD 03w01 CTEIF1 (wo): Transfer error flag clear for channel 1
0x40020004 C   FIELD 04w01 CGIF2 (wo): Global interrupt flag clear for channel 2
0x40020004 C   FIELD 05w01 CTCIF2 (wo): Transfer complete flag clear for channel 2
0x40020004 C   FIELD 06w01 CHTIF2 (wo): Half transfer flag clear for channel 2
0x40020004 C   FIELD 07w01 CTEIF2 (wo): Transfer error flag clear for channel 2
0x40020004 C   FIELD 08w01 CGIF3 (wo): Global interrupt flag clear for channel 3
0x40020004 C   FIELD 09w01 CTCIF3 (wo): Transfer complete flag clear for channel 3
0x40020004 C   FIELD 10w01 CHTIF3 (wo): Half transfer flag clear for channel 3
0x40020004 C   FIELD 11w01 CTEIF3 (wo): Transfer error flag clear for channel 3
0x40020004 C   FIELD 12w01 CGIF4 (wo): Global interrupt flag clear for channel 4
0x40020004 C   FIELD 13w01 CTCIF4 (wo): Transfer complete flag clear for channel 4
0x40020004 C   FIELD 14w01 CHTIF4 (wo): Half transfer flag clear for channel 4
0x40020004 C   FIELD 15w01 CTEIF4 (wo): Transfer error flag clear for channel 4
0x40020004 C   FIELD 16w01 CGIF5 (wo): Global interrupt flag clear for channel 5
0x40020004 C   FIELD 17w01 CTCIF5 (wo): Transfer complete flag clear for channel 5
0x40020004 C   FIELD 18w01 CHTIF5 (wo): Half transfer flag clear for channel 5
0x40020004 C   FIELD 19w01 CTEIF5 (wo): Transfer error flag clear for channel 5
0x40020004 C   FIELD 20w01 CGIF6 (wo): Global interrupt flag clear for channel 6
0x40020004 C   FIELD 21w01 CTCIF6 (wo): Transfer complete flag clear for channel 6
0x40020004 C   FIELD 22w01 CHTIF6 (wo): Half transfer flag clear for channel 6
0x40020004 C   FIELD 23w01 CTEIF6 (wo): Transfer error flag clear for channel 6
0x40020004 C   FIELD 24w01 CGIF7 (wo): Global interrupt flag clear for channel 7
0x40020004 C   FIELD 25w01 CTCIF7 (wo): Transfer complete flag clear for channel 7
0x40020004 C   FIELD 26w01 CHTIF7 (wo): Half transfer flag clear for channel 7
0x40020004 C   FIELD 27w01 CTEIF7 (wo): Transfer error flag clear for channel 7
0x40020008 B  REGISTER DMA_CCR1: DMA channel 1 configuration register
0x40020008 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020008 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020008 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002000C B  REGISTER DMA_CNDTR1: DMA channel 1 number of data to transfer register
0x4002000C C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020010 B  REGISTER DMA_CPAR1: DMA channel 1 peripheral address register
0x40020010 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020014 B  REGISTER DMA_CMAR1: DMA channel 1 memory address register
0x40020014 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002001C B  REGISTER DMA_CCR2: DMA channel 2 configuration register
0x4002001C C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x4002001C C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002001C C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020020 B  REGISTER DMA_CNDTR2: DMA channel 2 number of data to transfer register
0x40020020 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020024 B  REGISTER DMA_CPAR2: DMA channel 2 peripheral address register
0x40020024 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020028 B  REGISTER DMA_CMAR2: DMA channel 2 memory address register
0x40020028 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020030 B  REGISTER DMA_CCR3: DMA channel 3 configuration register
0x40020030 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020030 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020030 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020034 B  REGISTER DMA_CNDTR3: DMA channel 3 number of data to transfer register
0x40020034 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020038 B  REGISTER DMA_CPAR3: DMA channel 3 peripheral address register
0x40020038 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002003C B  REGISTER DMA_CMAR3: DMA channel 3 memory address register
0x4002003C C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020044 B  REGISTER DMA_CCR4: DMA channel 4 configuration register
0x40020044 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020044 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020044 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020048 B  REGISTER DMA_CNDTR4: DMA channel 4 number of data to transfer register
0x40020048 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x4002004C B  REGISTER DMA_CPAR4: DMA channel 4 peripheral address register
0x4002004C C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020050 B  REGISTER DMA_CMAR4: DMA channel 4 memory address register
0x40020050 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020058 B  REGISTER DMA_CCR5: DMA channel 5 configuration register
0x40020058 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020058 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020058 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002005C B  REGISTER DMA_CNDTR5: DMA channel 5 number of data to transfer register
0x4002005C C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020060 B  REGISTER DMA_CPAR5: DMA channel 5 peripheral address register
0x40020060 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020064 B  REGISTER DMA_CMAR5: DMA channel 5 memory address register
0x40020064 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002006C B  REGISTER DMA_CCR6: DMA channel 6 configuration register
0x4002006C C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x4002006C C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002006C C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020070 B  REGISTER DMA_CNDTR6: DMA channel 6 number of data to transfer register
0x40020070 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020074 B  REGISTER DMA_CPAR6: DMA channel 6 peripheral address register
0x40020074 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020078 B  REGISTER DMA_CMAR6: DMA channel 6 memory address register
0x40020078 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020080 B  REGISTER DMA_CCR7: DMA channel 7 configuration register
0x40020080 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020080 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020080 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020084 B  REGISTER DMA_CNDTR7: DMA channel 7 number of data to transfer register
0x40020084 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020088 B  REGISTER DMA_CPAR7: DMA channel 7 peripheral address register
0x40020088 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002008C B  REGISTER DMA_CMAR7: DMA channel 7 memory address register
0x4002008C C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020400 A PERIPHERAL DMA2
0x40020400 B  REGISTER DMA_ISR: DMA interrupt status register
0x40020400 C   FIELD 00w01 GIF1 (ro): Global interrupt flag for channel 1
0x40020400 C   FIELD 01w01 TCIF1 (ro): Transfer complete (TC) flag for channel 1
0x40020400 C   FIELD 02w01 HTIF1 (ro): Half transfer (HT) flag for channel 1
0x40020400 C   FIELD 03w01 TEIF1 (ro): Transfer error (TE) flag for channel 1
0x40020400 C   FIELD 04w01 GIF2 (ro): Global interrupt flag for channel 2
0x40020400 C   FIELD 05w01 TCIF2 (ro): Transfer complete (TC) flag for channel 2
0x40020400 C   FIELD 06w01 HTIF2 (ro): Half transfer (HT) flag for channel 2
0x40020400 C   FIELD 07w01 TEIF2 (ro): Transfer error (TE) flag for channel 2
0x40020400 C   FIELD 08w01 GIF3 (ro): Global interrupt flag for channel 3
0x40020400 C   FIELD 09w01 TCIF3 (ro): Transfer complete (TC) flag for channel 3
0x40020400 C   FIELD 10w01 HTIF3 (ro): Half transfer (HT) flag for channel 3
0x40020400 C   FIELD 11w01 TEIF3 (ro): Transfer error (TE) flag for channel 3
0x40020400 C   FIELD 12w01 GIF4 (ro): global interrupt flag for channel 4
0x40020400 C   FIELD 13w01 TCIF4 (ro): Transfer complete (TC) flag for channel 4
0x40020400 C   FIELD 14w01 HTIF4 (ro): Half transfer (HT) flag for channel 4
0x40020400 C   FIELD 15w01 TEIF4 (ro): Transfer error (TE) flag for channel 4
0x40020400 C   FIELD 16w01 GIF5 (ro): global interrupt flag for channel 5
0x40020400 C   FIELD 17w01 TCIF5 (ro): Transfer complete (TC) flag for channel 5
0x40020400 C   FIELD 18w01 HTIF5 (ro): Half transfer (HT) flag for channel 5
0x40020400 C   FIELD 19w01 TEIF5 (ro): Transfer error (TE) flag for channel 5
0x40020400 C   FIELD 20w01 GIF6 (ro): Global interrupt flag for channel 6
0x40020400 C   FIELD 21w01 TCIF6 (ro): Transfer complete (TC) flag for channel 6
0x40020400 C   FIELD 22w01 HTIF6 (ro): Half transfer (HT) flag for channel 6
0x40020400 C   FIELD 23w01 TEIF6 (ro): Transfer error (TE) flag for channel 6
0x40020400 C   FIELD 24w01 GIF7 (ro): Global interrupt flag for channel 7
0x40020400 C   FIELD 25w01 TCIF7 (ro): Transfer complete (TC) flag for channel 7
0x40020400 C   FIELD 26w01 HTIF7 (ro): Half transfer (HT) flag for channel 7
0x40020400 C   FIELD 27w01 TEIF7 (ro): Transfer error (TE) flag for channel 7
0x40020404 B  REGISTER DMA_IFCR: DMA interrupt flag clear register
0x40020404 C   FIELD 00w01 CGIF1 (wo): Global interrupt flag clear for channel 1
0x40020404 C   FIELD 01w01 CTCIF1 (wo): Transfer complete flag clear for channel 1
0x40020404 C   FIELD 02w01 CHTIF1 (wo): Half transfer flag clear for channel 1
0x40020404 C   FIELD 03w01 CTEIF1 (wo): Transfer error flag clear for channel 1
0x40020404 C   FIELD 04w01 CGIF2 (wo): Global interrupt flag clear for channel 2
0x40020404 C   FIELD 05w01 CTCIF2 (wo): Transfer complete flag clear for channel 2
0x40020404 C   FIELD 06w01 CHTIF2 (wo): Half transfer flag clear for channel 2
0x40020404 C   FIELD 07w01 CTEIF2 (wo): Transfer error flag clear for channel 2
0x40020404 C   FIELD 08w01 CGIF3 (wo): Global interrupt flag clear for channel 3
0x40020404 C   FIELD 09w01 CTCIF3 (wo): Transfer complete flag clear for channel 3
0x40020404 C   FIELD 10w01 CHTIF3 (wo): Half transfer flag clear for channel 3
0x40020404 C   FIELD 11w01 CTEIF3 (wo): Transfer error flag clear for channel 3
0x40020404 C   FIELD 12w01 CGIF4 (wo): Global interrupt flag clear for channel 4
0x40020404 C   FIELD 13w01 CTCIF4 (wo): Transfer complete flag clear for channel 4
0x40020404 C   FIELD 14w01 CHTIF4 (wo): Half transfer flag clear for channel 4
0x40020404 C   FIELD 15w01 CTEIF4 (wo): Transfer error flag clear for channel 4
0x40020404 C   FIELD 16w01 CGIF5 (wo): Global interrupt flag clear for channel 5
0x40020404 C   FIELD 17w01 CTCIF5 (wo): Transfer complete flag clear for channel 5
0x40020404 C   FIELD 18w01 CHTIF5 (wo): Half transfer flag clear for channel 5
0x40020404 C   FIELD 19w01 CTEIF5 (wo): Transfer error flag clear for channel 5
0x40020404 C   FIELD 20w01 CGIF6 (wo): Global interrupt flag clear for channel 6
0x40020404 C   FIELD 21w01 CTCIF6 (wo): Transfer complete flag clear for channel 6
0x40020404 C   FIELD 22w01 CHTIF6 (wo): Half transfer flag clear for channel 6
0x40020404 C   FIELD 23w01 CTEIF6 (wo): Transfer error flag clear for channel 6
0x40020404 C   FIELD 24w01 CGIF7 (wo): Global interrupt flag clear for channel 7
0x40020404 C   FIELD 25w01 CTCIF7 (wo): Transfer complete flag clear for channel 7
0x40020404 C   FIELD 26w01 CHTIF7 (wo): Half transfer flag clear for channel 7
0x40020404 C   FIELD 27w01 CTEIF7 (wo): Transfer error flag clear for channel 7
0x40020408 B  REGISTER DMA_CCR1: DMA channel 1 configuration register
0x40020408 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020408 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020408 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002040C B  REGISTER DMA_CNDTR1: DMA channel 1 number of data to transfer register
0x4002040C C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020410 B  REGISTER DMA_CPAR1: DMA channel 1 peripheral address register
0x40020410 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020414 B  REGISTER DMA_CMAR1: DMA channel 1 memory address register
0x40020414 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002041C B  REGISTER DMA_CCR2: DMA channel 2 configuration register
0x4002041C C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x4002041C C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002041C C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020420 B  REGISTER DMA_CNDTR2: DMA channel 2 number of data to transfer register
0x40020420 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020424 B  REGISTER DMA_CPAR2: DMA channel 2 peripheral address register
0x40020424 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020428 B  REGISTER DMA_CMAR2: DMA channel 2 memory address register
0x40020428 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020430 B  REGISTER DMA_CCR3: DMA channel 3 configuration register
0x40020430 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020430 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020430 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020434 B  REGISTER DMA_CNDTR3: DMA channel 3 number of data to transfer register
0x40020434 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020438 B  REGISTER DMA_CPAR3: DMA channel 3 peripheral address register
0x40020438 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002043C B  REGISTER DMA_CMAR3: DMA channel 3 memory address register
0x4002043C C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020444 B  REGISTER DMA_CCR4: DMA channel 4 configuration register
0x40020444 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020444 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020444 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020448 B  REGISTER DMA_CNDTR4: DMA channel 4 number of data to transfer register
0x40020448 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x4002044C B  REGISTER DMA_CPAR4: DMA channel 4 peripheral address register
0x4002044C C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020450 B  REGISTER DMA_CMAR4: DMA channel 4 memory address register
0x40020450 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020458 B  REGISTER DMA_CCR5: DMA channel 5 configuration register
0x40020458 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020458 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020458 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002045C B  REGISTER DMA_CNDTR5: DMA channel 5 number of data to transfer register
0x4002045C C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020460 B  REGISTER DMA_CPAR5: DMA channel 5 peripheral address register
0x40020460 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020464 B  REGISTER DMA_CMAR5: DMA channel 5 memory address register
0x40020464 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002046C B  REGISTER DMA_CCR6: DMA channel 6 configuration register
0x4002046C C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x4002046C C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x4002046C C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020470 B  REGISTER DMA_CNDTR6: DMA channel 6 number of data to transfer register
0x40020470 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020474 B  REGISTER DMA_CPAR6: DMA channel 6 peripheral address register
0x40020474 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020478 B  REGISTER DMA_CMAR6: DMA channel 6 memory address register
0x40020478 C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020480 B  REGISTER DMA_CCR7: DMA channel 7 configuration register
0x40020480 C   FIELD 00w01 EN (rw): Channel enable When a channel transfer error occurs, this bit is cleared by hardware. It can not be set again by software (channel x re-activated) until the TEIFx bit of the DMA_ISR register is cleared (by1setting the CTEIFx bit of the DMA_IFCR register). Note: This bit is set and cleared by software.
0x40020480 C   FIELD 01w01 TCIE (rw): Transfer complete interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 02w01 HTIE (rw): Half transfer interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 03w01 TEIE (rw): Transfer error interrupt enable Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 04w01 DIR (rw): Data transfer direction This bit must be set only in memory-to-peripheral and peripheral-to-memory modes. Source attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Destination attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Destination attributes are defined by PSIZE and PINC, plus the DMA_CPARx register. This is still valid in a memory-to-memory mode. Source attributes are defined by MSIZE and MINC, plus the DMA_CMARx register. This is still valid in a peripheral-to-peripheral mode. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 05w01 CIRC (rw): Circular mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 06w01 PINC (rw): Peripheral increment mode Defines the increment mode for each DMA transfer to the identified peripheral. n memory-to-memory mode, this bit identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 07w01 MINC (rw): Memory increment mode Defines the increment mode for each DMA transfer to the identified memory. In memory-to-memory mode, this bit identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bit identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 08w02 PSIZE (rw): Peripheral size Defines the data size of each DMA transfer to the identified peripheral. In memory-to-memory mode, this bitfield identifies the memory destination if DIR = 1 and the memory source if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination if DIR = 1 and the peripheral source if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 10w02 MSIZE (rw): Memory size Defines the data size of each DMA transfer to the identified memory. In memory-to-memory mode, this bitfield identifies the memory source if DIR = 1 and the memory destination if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source if DIR = 1 and the peripheral destination if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 12w02 PL (rw): Priority level Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020480 C   FIELD 14w01 MEM2MEM (rw): Memory-to-memory mode Note: This bit is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is read-only when the channel is enabled (EN = 1).
0x40020484 B  REGISTER DMA_CNDTR7: DMA channel 7 number of data to transfer register
0x40020484 C   FIELD 00w16 NDT (rw): Number of data to transfer
0x40020488 B  REGISTER DMA_CPAR7: DMA channel 7 peripheral address register
0x40020488 C   FIELD 00w32 PA (rw): Peripheral address It contains the base address of the peripheral data register from/to which the data is read/written. When PSIZE[1:0] = 01 (16 bits), bit 0 of PA[31:0] is ignored. Access is automatically aligned to a half-word address. When PSIZE[1:0] = 10 (32 bits), bits 1 and 0 of PA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory destination address if DIR = 1 and the memory source address if DIR = 0. In peripheral-to-peripheral mode, this bitfield identifies the peripheral destination address if DIR1= 1 and the peripheral source address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x4002048C B  REGISTER DMA_CMAR7: DMA channel 7 memory address register
0x4002048C C   FIELD 00w32 MA (rw): Peripheral address It contains the base address of the memory from/to which the data is read/written. When MSIZE[1:0] = 01 (16 bits), bit 0 of MA[31:0] is ignored. Access is automatically aligned to a half-word address. When MSIZE[1:0] = 10 (32 bits), bits 1 and 0 of MA[31:0] are ignored. Access is automatically aligned to a word address. In memory-to-memory mode, this bitfield identifies the memory source address if DIR = 1 and the memory destination address if DIR1=10. In peripheral-to-peripheral mode, this bitfield identifies the peripheral source address if DIR1=11 and the peripheral destination address if DIR = 0. Note: This bitfield is set and cleared by software. It must not be written when the channel is enabled (EN = 1). It is not read-only when the channel is enabled (EN = 1).
0x40020800 A PERIPHERAL DMAMUX
0x40020800 B  REGISTER DMAMUX_C0CR: DMAMUX request line multiplexer channel 0 configuration register
0x40020800 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020800 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020800 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020800 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020800 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020800 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020800 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020804 B  REGISTER DMAMUX_C1CR: DMAMUX request line multiplexer channel 1 configuration register
0x40020804 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020804 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020804 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020804 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020804 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020804 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020804 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020808 B  REGISTER DMAMUX_C2CR: DMAMUX request line multiplexer channel 2 configuration register
0x40020808 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020808 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020808 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020808 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020808 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020808 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020808 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x4002080C B  REGISTER DMAMUX_C3CR: DMAMUX request line multiplexer channel 3 configuration register
0x4002080C C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x4002080C C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x4002080C C   FIELD 09w01 EGE (rw): Event generation enable
0x4002080C C   FIELD 16w01 SE (rw): Synchronization enable
0x4002080C C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x4002080C C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x4002080C C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020810 B  REGISTER DMAMUX_C4CR: DMAMUX request line multiplexer channel 4 configuration register
0x40020810 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020810 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020810 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020810 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020810 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020810 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020810 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020814 B  REGISTER DMAMUX_C5CR: DMAMUX request line multiplexer channel 5 configuration register
0x40020814 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020814 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020814 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020814 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020814 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020814 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020814 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020818 B  REGISTER DMAMUX_C6CR: DMAMUX request line multiplexer channel 6 configuration register
0x40020818 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020818 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020818 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020818 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020818 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020818 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020818 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x4002081C B  REGISTER DMAMUX_C7CR: DMAMUX request line multiplexer channel 7 configuration register
0x4002081C C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x4002081C C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x4002081C C   FIELD 09w01 EGE (rw): Event generation enable
0x4002081C C   FIELD 16w01 SE (rw): Synchronization enable
0x4002081C C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x4002081C C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x4002081C C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020820 B  REGISTER DMAMUX_C8CR: DMAMUX request line multiplexer channel 8 configuration register
0x40020820 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020820 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020820 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020820 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020820 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020820 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020820 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020824 B  REGISTER DMAMUX_C9CR: DMAMUX request line multiplexer channel 9 configuration register
0x40020824 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020824 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020824 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020824 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020824 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020824 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020824 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020828 B  REGISTER DMAMUX_C10CR: DMAMUX request line multiplexer channel 10 configuration register
0x40020828 C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x40020828 C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x40020828 C   FIELD 09w01 EGE (rw): Event generation enable
0x40020828 C   FIELD 16w01 SE (rw): Synchronization enable
0x40020828 C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x40020828 C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x40020828 C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x4002082C B  REGISTER DMAMUX_C11CR: DMAMUX request line multiplexer channel 11 configuration register
0x4002082C C   FIELD 00w07 DMAREQ_ID (rw): DMA request identification Selects the input DMA request. See the DMAMUX table about assignments of multiplexer inputs to resources.
0x4002082C C   FIELD 08w01 SOIE (rw): Synchronization overrun interrupt enable
0x4002082C C   FIELD 09w01 EGE (rw): Event generation enable
0x4002082C C   FIELD 16w01 SE (rw): Synchronization enable
0x4002082C C   FIELD 17w02 SPOL (rw): Synchronization polarity Defines the edge polarity of the selected synchronization input:
0x4002082C C   FIELD 19w05 NBREQ (rw): Number of DMA requests minus 1 to forward Defines the number of DMA requests to forward to the DMA controller after a synchronization event, and/or the number of DMA requests before an output event is generated. This field must only be written when both SE and EGE bits are low.
0x4002082C C   FIELD 24w05 SYNC_ID (rw): Synchronization identification Selects the synchronization input (see Table137: DMAMUX: assignment of synchronization inputs to resources).
0x40020880 B  REGISTER DMAMUX_CSR: DMAMUX request line multiplexer interrupt channel status register
0x40020880 C   FIELD 00w01 SOF0 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 01w01 SOF1 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 02w01 SOF2 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 03w01 SOF3 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 04w01 SOF4 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 05w01 SOF5 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 06w01 SOF6 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 07w01 SOF7 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 08w01 SOF8 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 09w01 SOF9 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 10w01 SOF10 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020880 C   FIELD 11w01 SOF11 (ro): Synchronization overrun event flag The flag is set when a synchronization event occurs on a DMA request line multiplexer channel x, while the DMA request counter value is lower than NBREQ. The flag is cleared by writing 1 to the corresponding CSOFx bit in DMAMUX_CFR register.
0x40020884 B  REGISTER DMAMUX_CFR: DMAMUX request line multiplexer interrupt clear flag register
0x40020884 C   FIELD 00w01 CSOF0 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 01w01 CSOF1 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 02w01 CSOF2 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 03w01 CSOF3 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 04w01 CSOF4 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 05w01 CSOF5 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 06w01 CSOF6 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 07w01 CSOF7 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 08w01 CSOF8 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 09w01 CSOF9 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 10w01 CSOF10 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020884 C   FIELD 11w01 CSOF11 (wo): Clear synchronization overrun event flag Writing 1 in each bit clears the corresponding overrun flag SOFx in the DMAMUX_CSR register.
0x40020900 B  REGISTER DMAMUX_RG0CR: DMAMUX request generator channel 0 configuration register
0x40020900 C   FIELD 00w05 SIG_ID (rw): Signal identification Selects the DMA request trigger input used for the channel x of the DMA request generator
0x40020900 C   FIELD 08w01 OIE (rw): Trigger overrun interrupt enable
0x40020900 C   FIELD 16w01 GE (rw): DMA request generator channel x enable
0x40020900 C   FIELD 17w02 GPOL (rw): DMA request generator trigger polarity Defines the edge polarity of the selected trigger input
0x40020900 C   FIELD 19w05 GNBREQ (rw): Number of DMA requests to be generated (minus 1) Defines the number of DMA requests to be generated after a trigger event. The actual number of generated DMA requests is GNBREQ +1. Note: This field must be written only when GE bit is disabled.
0x40020904 B  REGISTER DMAMUX_RG1CR: DMAMUX request generator channel 1 configuration register
0x40020904 C   FIELD 00w05 SIG_ID (rw): Signal identification Selects the DMA request trigger input used for the channel x of the DMA request generator
0x40020904 C   FIELD 08w01 OIE (rw): Trigger overrun interrupt enable
0x40020904 C   FIELD 16w01 GE (rw): DMA request generator channel x enable
0x40020904 C   FIELD 17w02 GPOL (rw): DMA request generator trigger polarity Defines the edge polarity of the selected trigger input
0x40020904 C   FIELD 19w05 GNBREQ (rw): Number of DMA requests to be generated (minus 1) Defines the number of DMA requests to be generated after a trigger event. The actual number of generated DMA requests is GNBREQ +1. Note: This field must be written only when GE bit is disabled.
0x40020908 B  REGISTER DMAMUX_RG2CR: DMAMUX request generator channel 2 configuration register
0x40020908 C   FIELD 00w05 SIG_ID (rw): Signal identification Selects the DMA request trigger input used for the channel x of the DMA request generator
0x40020908 C   FIELD 08w01 OIE (rw): Trigger overrun interrupt enable
0x40020908 C   FIELD 16w01 GE (rw): DMA request generator channel x enable
0x40020908 C   FIELD 17w02 GPOL (rw): DMA request generator trigger polarity Defines the edge polarity of the selected trigger input
0x40020908 C   FIELD 19w05 GNBREQ (rw): Number of DMA requests to be generated (minus 1) Defines the number of DMA requests to be generated after a trigger event. The actual number of generated DMA requests is GNBREQ +1. Note: This field must be written only when GE bit is disabled.
0x4002090C B  REGISTER DMAMUX_RG3CR: DMAMUX request generator channel 3 configuration register
0x4002090C C   FIELD 00w05 SIG_ID (rw): Signal identification Selects the DMA request trigger input used for the channel x of the DMA request generator
0x4002090C C   FIELD 08w01 OIE (rw): Trigger overrun interrupt enable
0x4002090C C   FIELD 16w01 GE (rw): DMA request generator channel x enable
0x4002090C C   FIELD 17w02 GPOL (rw): DMA request generator trigger polarity Defines the edge polarity of the selected trigger input
0x4002090C C   FIELD 19w05 GNBREQ (rw): Number of DMA requests to be generated (minus 1) Defines the number of DMA requests to be generated after a trigger event. The actual number of generated DMA requests is GNBREQ +1. Note: This field must be written only when GE bit is disabled.
0x40020940 B  REGISTER DMAMUX_RGSR: DMAMUX request generator interrupt status register
0x40020940 C   FIELD 00w01 OF0 (ro): Trigger overrun event flag The flag is set when a new trigger event occurs on DMA request generator channel x, before the request counter underrun (the internal request counter programmed via the GNBREQ field of the DMAMUX_RGxCR register). The flag is cleared by writing 1 to the corresponding COFx bit in the DMAMUX_RGCFR register.
0x40020940 C   FIELD 01w01 OF1 (ro): Trigger overrun event flag The flag is set when a new trigger event occurs on DMA request generator channel x, before the request counter underrun (the internal request counter programmed via the GNBREQ field of the DMAMUX_RGxCR register). The flag is cleared by writing 1 to the corresponding COFx bit in the DMAMUX_RGCFR register.
0x40020940 C   FIELD 02w01 OF2 (ro): Trigger overrun event flag The flag is set when a new trigger event occurs on DMA request generator channel x, before the request counter underrun (the internal request counter programmed via the GNBREQ field of the DMAMUX_RGxCR register). The flag is cleared by writing 1 to the corresponding COFx bit in the DMAMUX_RGCFR register.
0x40020940 C   FIELD 03w01 OF3 (ro): Trigger overrun event flag The flag is set when a new trigger event occurs on DMA request generator channel x, before the request counter underrun (the internal request counter programmed via the GNBREQ field of the DMAMUX_RGxCR register). The flag is cleared by writing 1 to the corresponding COFx bit in the DMAMUX_RGCFR register.
0x40020944 B  REGISTER DMAMUX_RGCFR: DMAMUX request generator interrupt clear flag register
0x40020944 C   FIELD 00w01 COF0 (wo): Clear trigger overrun event flag Writing 1 in each bit clears the corresponding overrun flag OFx in the DMAMUX_RGSR register.
0x40020944 C   FIELD 01w01 COF1 (wo): Clear trigger overrun event flag Writing 1 in each bit clears the corresponding overrun flag OFx in the DMAMUX_RGSR register.
0x40020944 C   FIELD 02w01 COF2 (wo): Clear trigger overrun event flag Writing 1 in each bit clears the corresponding overrun flag OFx in the DMAMUX_RGSR register.
0x40020944 C   FIELD 03w01 COF3 (wo): Clear trigger overrun event flag Writing 1 in each bit clears the corresponding overrun flag OFx in the DMAMUX_RGSR register.
0x40021000 A PERIPHERAL RCC
0x40021000 B  REGISTER RCC_CR: Clock control register
0x40021000 C   FIELD 00w01 MSION (rw): MSI clock enable This bit is set and cleared by software. Cleared by hardware to stop the MSI oscillator when entering Stop, Standby or Shutdown mode. Set by hardware to force the MSI oscillator ON when exiting Standby or Shutdown mode. Set by hardware to force the MSI oscillator ON when STOPWUCK=0 when exiting from Stop modes, or in case of a failure of the HSE oscillator Set by hardware when used directly or indirectly as system clock.
0x40021000 C   FIELD 01w01 MSIRDY (ro): MSI clock ready flag This bit is set by hardware to indicate that the MSI oscillator is stable. Note: Once the MSION bit is cleared, MSIRDY goes low after 6 MSI clock cycles.
0x40021000 C   FIELD 02w01 MSIPLLEN (rw): MSI clock PLL enable Set and cleared by software to enable/ disable the PLL part of the MSI clock source. MSIPLLEN must be enabled after LSE is enabled (LSEON enabled) and ready (LSERDY set by hardware).There is a hardware protection to avoid enabling MSIPLLEN if LSE is not ready. This bit is cleared by hardware when LSE is disabled (LSEON = 0) or when the Clock Security System on LSE detects a LSE failure (refer to RCC_CSR register).
0x40021000 C   FIELD 03w01 MSIRGSEL (rw): MSI clock range selection Set by software to select the MSI clock range with MSIRANGE[3:0]. Write 0 has no effect. After a standby or a reset MSIRGSEL is at 0 and the MSI range value is provided by MSISRANGE in CSR register.
0x40021000 C   FIELD 04w04 MSIRANGE (rw): MSI clock ranges These bits are configured by software to choose the frequency range of MSI when MSIRGSEL is set.12 frequency ranges are available: others: not allowed (hardware write protection) Note: Warning: MSIRANGE can be modified when MSI is OFF (MSION=0) or when MSI is ready (MSIRDY=1). MSIRANGE must NOT be modified when MSI is ON and NOT ready (MSION=1 and MSIRDY=0)
0x40021000 C   FIELD 08w01 HSION (rw): HSI16 clock enable Set and cleared by software. Cleared by hardware to stop the HSI16 oscillator when entering Stop, Standby, or Shutdown mode. Forced by hardware to keep the HSI16 oscillator ON when it is used directly or indirectly as system clock (also when leaving Stop, Standby, or Shutdown modes, or in case of failure of the HSE oscillator used for system clock).
0x40021000 C   FIELD 09w01 HSIKERON (rw): HSI16 always enable for peripheral kernels. Set and cleared by software to force HSI16 ON even in Stop modes. The HSI16 can only feed USART1, USART2, CEC and I2C1 peripherals configured with HSI16 as kernel clock. Keeping the HSI16 ON in Stop mode allows avoiding to slow down the communication speed because of the HSI16 startup time. This bit has no effect on HSION value.
0x40021000 C   FIELD 10w01 HSIRDY (ro): HSI16 clock ready flag Set by hardware to indicate that HSI16 oscillator is stable. This bit is set only when HSI16 is enabled by software by setting HSION. Note: Once the HSION bit is cleared, HSIRDY goes low after 6 HSI16 clock cycles.
0x40021000 C   FIELD 11w01 HSIASFS (ro): HSI16 automatic start from Stop Set and cleared by software. When the system wake-up clock is MSI, this bit is used to wake up the HSI16 is parallel of the system wake-up.
0x40021000 C   FIELD 16w01 HSEON (rw): HSE clock enable Set and cleared by software. Cleared by hardware to stop the HSE oscillator when entering Stop, Standby, or Shutdown mode. This bit cannot be reset if the HSE oscillator is used directly or indirectly as the system clock.
0x40021000 C   FIELD 17w01 HSERDY (ro): HSE clock ready flag Set by hardware to indicate that the HSE oscillator is stable. Note: Once the HSEON bit is cleared, HSERDY goes low after 6 HSE clock cycles.
0x40021000 C   FIELD 18w01 HSEBYP (rw): HSE crystal oscillator bypass Set and cleared by software to bypass the oscillator with an external clock. The external clock must be enabled with the HSEON bit set, to be used by the device. The HSEBYP bit can be written only if the HSE oscillator is disabled.
0x40021000 C   FIELD 19w01 CSSON (rw): Clock security system enable Set by software to enable the clock security system. When CSSON is set, the clock detector is enabled by hardware when the HSE oscillator is ready, and disabled by hardware if a HSE clock failure is detected. This bit is set only and is cleared by reset.
0x40021000 C   FIELD 24w01 PLLON (rw): PLL enable Set and cleared by software to enable the PLL. Cleared by hardware when entering Stop, Standby or Shutdown mode. This bit cannot be reset if the PLL clock is used as the system clock.
0x40021000 C   FIELD 25w01 PLLRDY (ro): PLL clock ready flag Set by hardware to indicate that the PLL is locked.
0x40021004 B  REGISTER RCC_ICSCR: Internal clock sources calibration register
0x40021004 C   FIELD 00w08 MSICAL (ro): MSI clock calibration These bits are initialized at startup with the factory-programmed MSI calibration trim value. When MSITRIM is written, MSICAL is updated with the sum of MSITRIM and the factory trim value.
0x40021004 C   FIELD 08w08 MSITRIM (rw): MSI clock trimming These bits provide an additional user-programmable trimming value that is added to the MSICAL[7:0] bits. It can be programmed to adjust to variations in voltage and temperature that influence the frequency of the MSI.
0x40021004 C   FIELD 16w08 HSICAL (ro): HSI16 clock calibration These bits are initialized at startup with the factory-programmed HSI16 calibration trim value. When HSITRIM is written, HSICAL is updated with the sum of HSITRIM and the factory trim value.
0x40021004 C   FIELD 24w07 HSITRIM (rw): HSI16 clock trimming These bits provide an additional user-programmable trimming value that is added to the HSICAL[7:0] bits. It can be programmed to adjust to variations in voltage and temperature that influence the frequency of the HSI16. The default value is 64 when added to the HSICAL value, trim the HSI16 to 161MHz 1 11%.
0x40021008 B  REGISTER RCC_CFGR: Clock configuration register
0x40021008 C   FIELD 00w03 SW (rw): System clock switch This bitfield is controlled by software and hardware. The bitfield selects the clock for SYSCLK as follows: Others: Reserved The setting is forced by hardware to 000 (HSISYS selected) when the MCU exits Stop, Standby, or Shutdown mode, or when the setting is 001 (HSE selected) and HSE oscillator failure is detected.
0x40021008 C   FIELD 03w03 SWS (ro): System clock switch status This bitfield is controlled by hardware to indicate the clock source used as system clock: Others: Reserved
0x40021008 C   FIELD 08w04 HPRE (rw): AHB prescaler This bitfield is controlled by software. To produce HCLK clock, it sets the division factor of SYSCLK clock as follows: 0xxx: 1 Caution: Depending on the device voltage range, the software has to set correctly these bits to ensure that the system frequency does not exceed the maximum allowed frequency (for more details, refer to Section14.1.4: Dynamic voltage scaling management). After a write operation to these bits and before decreasing the voltage range, this register must be read to be sure that the new value has been taken into account.
0x40021008 C   FIELD 12w03 PPRE (rw): APB prescaler This bitfield is controlled by software. To produce PCLK clock, it sets the division factor of HCLK clock as follows: 0xx: 1
0x40021008 C   FIELD 15w01 STOPWUCK (rw): Wake-up from Stop and CSS backup clock selection Set and cleared by software to select the system clock used when exiting Stop mode. The selected clock is also used as emergency clock for the Clock Security System on HSE. Warning: STOPWUCK must not be modified when the Clock Security System is enabled by HSECSSON in RCC_CR register and the system clock is HSE (SWS=10) or a switch on HSE is requested (SW=10).
0x40021008 C   FIELD 16w04 MCO2SEL (rw): Microcontroller clock output 2 clock selector This bitfield is controlled by software. It sets the clock selector for MCO2 output as follows: Others: Reserved Note: This clock output may have some truncated cycles at startup or during MCO2 clock source switching.
0x40021008 C   FIELD 20w04 MCO2PRE (rw): Microcontroller clock output 2 prescaler This bitfield is controlled by software. It sets the division factor of the clock sent to the MCO2 output as follows: ... Others: reserved It is highly recommended to set this field before the MCO2 output is enabled.
0x40021008 C   FIELD 24w04 MCOSEL (rw): Microcontroller clock output clock selector This bitfield is controlled by software. It sets the clock selector for MCO output as follows: Others: Reserved Note: This clock output may have some truncated cycles at startup or during MCO clock source switching.
0x40021008 C   FIELD 28w04 MCOPRE (rw): Microcontroller clock output prescaler This bitfield is controlled by software. It sets the division factor of the clock sent to the MCO output as follows: ... Others: reserved It is highly recommended to set this field before the MCO output is enabled.
0x4002100C B  REGISTER RCC_PLLCFGR: PLL configuration register
0x4002100C C   FIELD 00w02 PLLSRC (rw): PLL input clock source This bit is controlled by software to select PLL clock source, as follows: The bitfield can be written only when the PLL is disabled. When the PLL is not used, selecting 00 allows saving power.
0x4002100C C   FIELD 04w03 PLLM (rw): Division factor M of the PLL input clock divider This bit is controlled by software to divide the PLL input clock before the actual phase-locked loop, as follows: The bitfield can be written only when the PLL is disabled. Caution: The software must set these bits so that the PLL input frequency after the /M divider is between 2.66 and 161MHz.
0x4002100C C   FIELD 08w07 PLLN (rw): PLL frequency multiplication factor N This bit is controlled by software to set the division factor of the f<sub>VCO</sub> feedback divider (that determines the PLL multiplication ratio) as follows: ... ... The bitfield can be written only when the PLL is disabled. Caution: The software must set these bits so that the VCO output frequency is between 96 and 3441MHz.
0x4002100C C   FIELD 16w01 PLLPEN (rw): PLLPCLK clock output enable This bit is controlled by software to enable/disable the PLLPCLK clock output of the PLL: Disabling the PLLPCLK clock output, when not used, allows saving power.
0x4002100C C   FIELD 17w05 PLLP (rw): PLL VCO division factor P for PLLPCLK clock output This bitfield is controlled by software. It sets the PLL VCO division factor P as follows: ... The bitfield can be written only when the PLL is disabled. Caution: The software must set this bitfield so as not to exceed 541MHz on this clock.
0x4002100C C   FIELD 24w01 PLLQEN (rw): PLLQCLK clock output enable This bit is controlled by software to enable/disable the PLLQCLK clock output of the PLL: Disabling the PLLQCLK clock output, when not used, allows saving power.
0x4002100C C   FIELD 25w03 PLLQ (rw): PLL VCO division factor Q for PLLQCLK clock output This bitfield is controlled by software. It sets the PLL VCO division factor Q as follows: The bitfield can be written only when the PLL is disabled. Caution: The software must set this bitfield so as not to exceed 541MHz on this clock.
0x4002100C C   FIELD 28w01 PLLREN (rw): PLLRCLK clock output enable This bit is controlled by software to enable/disable the PLLRCLK clock output of the PLL: This bit cannot be written when PLLRCLK output of the PLL is selected for system clock. Disabling the PLLRCLK clock output, when not used, allows saving power.
0x4002100C C   FIELD 29w03 PLLR (rw): PLL VCO division factor R for PLLRCLK clock output This bitfield is controlled by software. It sets the PLL VCO division factor R as follows: The bitfield can be written only when the PLL is disabled. The PLLRCLK clock can be selected as system clock. Caution: The software must set this bitfield so as not to exceed 122MHz on this clock.
0x40021018 B  REGISTER RCC_CIER: Clock interrupt enable register
0x40021018 C   FIELD 00w01 LSIRDYIE (rw): LSI ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the LSI oscillator stabilization:
0x40021018 C   FIELD 01w01 LSERDYIE (rw): LSE ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the LSE oscillator stabilization:
0x40021018 C   FIELD 02w01 MSIRDYIE (rw): MSI ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the MSI oscillator stabilization.
0x40021018 C   FIELD 03w01 HSIRDYIE (rw): HSI16 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the HSI16 oscillator stabilization:
0x40021018 C   FIELD 04w01 HSERDYIE (rw): HSE ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the HSE oscillator stabilization:
0x40021018 C   FIELD 05w01 PLLRDYIE (rw): PLL ready interrupt enable Set and cleared by software to enable/disable interrupt caused by PLL lock:
0x40021018 C   FIELD 09w01 LSECSSIE (rw): LSE clock security system interrupt enable Set and cleared by software to enable/disable interrupt caused by the clock security system on LSE.
0x40021018 C   FIELD 10w01 HSI48RDYIE (rw): HSI48 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the internal HSI48 oscillator.
0x4002101C B  REGISTER RCC_CIFR: Clock interrupt flag register
0x4002101C C   FIELD 00w01 LSIRDYF (ro): LSI ready interrupt flag Set by hardware when the LSI clock becomes stable and LSIRDYDIE is set. Cleared by software setting the LSIRDYC bit.
0x4002101C C   FIELD 01w01 LSERDYF (ro): LSE ready interrupt flag Set by hardware when the LSE clock becomes stable and LSERDYDIE is set. Cleared by software setting the LSERDYC bit.
0x4002101C C   FIELD 02w01 MSIRDYF (ro): MSI ready interrupt flag Set by hardware when the MSI clock becomes stable and MSIRDYDIE is set. Cleared by software setting the MSIRDYC bit.
0x4002101C C   FIELD 03w01 HSIRDYF (ro): HSI16 ready interrupt flag Set by hardware when the HSI16 clock becomes stable and HSIRDYIE is set in a response to setting the HSION (refer to Clock control register (RCC_CR)). When HSION is not set but the HSI16 oscillator is enabled by the peripheral through a clock request, this bit is not set and no interrupt is generated. Cleared by software setting the HSIRDYC bit.
0x4002101C C   FIELD 04w01 HSERDYF (ro): HSE ready interrupt flag Set by hardware when the HSE clock becomes stable and HSERDYIE is set. Cleared by software setting the HSERDYC bit.
0x4002101C C   FIELD 05w01 PLLRDYF (ro): PLL ready interrupt flag Set by hardware when the PLL locks and PLLRDYIE is set. Cleared by software setting the PLLRDYC bit.
0x4002101C C   FIELD 08w01 CSSF (ro): HSE clock security system interrupt flag Set by hardware when a failure is detected in the HSE oscillator. Cleared by software setting the CSSC bit.
0x4002101C C   FIELD 09w01 LSECSSF (ro): LSE clock security system interrupt flag Set by hardware when a failure is detected in the LSE oscillator. Cleared by software by setting the LSECSSC bit.
0x4002101C C   FIELD 10w01 HSI48RDYF (ro): HSI48 ready interrupt flag Set by hardware when the HSI48 clock becomes stable and HSI48RDYIE is set in a response to setting the HSI48ON (refer to RCC clock recovery RC register (RCC_CRRCR)). Cleared by software setting the HSI48RDYC bit.
0x40021020 B  REGISTER RCC_CICR: Clock interrupt clear register
0x40021020 C   FIELD 00w01 LSIRDYC (wo): LSI ready interrupt clear This bit is set by software to clear the LSIRDYF flag.
0x40021020 C   FIELD 01w01 LSERDYC (wo): LSE ready interrupt clear This bit is set by software to clear the LSERDYF flag.
0x40021020 C   FIELD 02w01 MSIRDYC (wo): MSI ready interrupt clear This bit is set by software to clear the MSIRDYF flag.
0x40021020 C   FIELD 03w01 HSIRDYC (wo): HSI16 ready interrupt clear This bit is set software to clear the HSIRDYF flag.
0x40021020 C   FIELD 04w01 HSERDYC (wo): HSE ready interrupt clear This bit is set by software to clear the HSERDYF flag.
0x40021020 C   FIELD 05w01 PLLRDYC (wo): PLL ready interrupt clear This bit is set by software to clear the PLLRDYF flag.
0x40021020 C   FIELD 08w01 CSSC (wo): Clock security system interrupt clear This bit is set by software to clear the HSECSSF flag.
0x40021020 C   FIELD 09w01 LSECSSC (wo): LSE Clock security system interrupt clear This bit is set by software to clear the LSECSSF flag.
0x40021020 C   FIELD 10w01 HSI48RDYC (wo): HSI48 oscillator ready interrupt clear This bit is set by software to clear the HSI48RDYF flag.
0x40021028 B  REGISTER RCC_AHBRSTR: AHB peripheral reset register
0x40021028 C   FIELD 00w01 DMA1RST (rw): DMA1 and DMAMUX reset Set and cleared by software.
0x40021028 C   FIELD 01w01 DMA2RST (rw): DMA2 and DMAMUX reset Set and cleared by software.
0x40021028 C   FIELD 08w01 FLASHRST (rw): Flash memory interface reset Set and cleared by software. This bit can only be set when the flash memory is in power down mode.
0x40021028 C   FIELD 12w01 CRCRST (rw): CRC reset Set and cleared by software.
0x40021028 C   FIELD 18w01 RNGRST (rw): Random number generator reset Set and cleared by software.
0x40021028 C   FIELD 24w01 TSCRST (rw): Touch sensing controller reset Set and cleared by software.
0x4002102C B  REGISTER RCC_IOPRSTR: I/O port reset register
0x4002102C C   FIELD 00w01 GPIOARST (rw): I/O port A reset This bit is set and cleared by software.
0x4002102C C   FIELD 01w01 GPIOBRST (rw): I/O port B reset This bit is set and cleared by software.
0x4002102C C   FIELD 02w01 GPIOCRST (rw): I/O port C reset This bit is set and cleared by software.
0x4002102C C   FIELD 03w01 GPIODRST (rw): I/O port D reset This bit is set and cleared by software.
0x4002102C C   FIELD 04w01 GPIOERST (rw): I/O port E reset This bit is set and cleared by software.
0x4002102C C   FIELD 05w01 GPIOFRST (rw): I/O port F reset This bit is set and cleared by software.
0x40021038 B  REGISTER RCC_APBRSTR1: APB peripheral reset register 1
0x40021038 C   FIELD 00w01 TIM2RST (rw): TIM2 timer reset Set and cleared by software.
0x40021038 C   FIELD 01w01 TIM3RST (rw): TIM3 timer reset Set and cleared by software.
0x40021038 C   FIELD 04w01 TIM6RST (rw): TIM6 timer reset Set and cleared by software.
0x40021038 C   FIELD 05w01 TIM7RST (rw): TIM7 timer reset Set and cleared by software.
0x40021038 C   FIELD 07w01 LPUART2RST (rw): LPUART2 reset Set and cleared by software.
0x40021038 C   FIELD 09w01 LCDRST (rw): LCD reset<sup>(1)</sup> Set and cleared by software.
0x40021038 C   FIELD 12w01 LPUART3RST (rw): LPUART3 reset<sup>(1)</sup> Set and cleared by software.
0x40021038 C   FIELD 13w01 USBRST (rw): USB reset<sup>(1)</sup> Set and cleared by software.
0x40021038 C   FIELD 14w01 SPI2RST (rw): SPI2 reset Set and cleared by software.
0x40021038 C   FIELD 15w01 SPI3RST (rw): SPI3 reset<sup>(1)</sup> Set and cleared by software.
0x40021038 C   FIELD 16w01 CRSRST (rw): CRS reset<sup>(1)</sup> Set and cleared by software.
0x40021038 C   FIELD 17w01 USART2RST (rw): USART2 reset Set and cleared by software.
0x40021038 C   FIELD 18w01 USART3RST (rw): USART3 reset Set and cleared by software.
0x40021038 C   FIELD 19w01 USART4RST (rw): USART4 reset Set and cleared by software.
0x40021038 C   FIELD 20w01 LPUART1RST (rw): LPUART1 reset Set and cleared by software.
0x40021038 C   FIELD 21w01 I2C1RST (rw): I2C1 reset Set and cleared by software.
0x40021038 C   FIELD 22w01 I2C2RST (rw): I2C2 reset Set and cleared by software.
0x40021038 C   FIELD 23w01 I2C3RST (rw): I2C3 reset Set and cleared by software.
0x40021038 C   FIELD 24w01 OPAMPRST (rw): OPAMP reset Set and cleared by software.
0x40021038 C   FIELD 25w01 I2C4RST (rw): I2C4 reset<sup>(1)</sup> Set and cleared by software.
0x40021038 C   FIELD 26w01 LPTIM3RST (rw): LPTIM3 reset Set and cleared by software.
0x40021038 C   FIELD 28w01 PWRRST (rw): Power interface reset Set and cleared by software.
0x40021038 C   FIELD 29w01 DAC1RST (rw): DAC1 interface reset Set and cleared by software.
0x40021038 C   FIELD 30w01 LPTIM2RST (rw): Low Power Timer 2 reset Set and cleared by software.
0x40021038 C   FIELD 31w01 LPTIM1RST (rw): Low Power Timer 1 reset Set and cleared by software.
0x40021040 B  REGISTER RCC_APBRSTR2: APB peripheral reset register 2
0x40021040 C   FIELD 00w01 SYSCFGRST (rw): SYSCFG, COMP and VREFBUF reset Set and cleared by software.
0x40021040 C   FIELD 11w01 TIM1RST (rw): TIM1 timer reset Set and cleared by software.
0x40021040 C   FIELD 12w01 SPI1RST (rw): SPI1 reset Set and cleared by software.
0x40021040 C   FIELD 14w01 USART1RST (rw): USART1 reset Set and cleared by software.
0x40021040 C   FIELD 16w01 TIM15RST (rw): TIM15 timer reset Set and cleared by software.
0x40021040 C   FIELD 17w01 TIM16RST (rw): TIM16 timer reset Set and cleared by software.
0x40021040 C   FIELD 20w01 ADCRST (rw): ADC reset Set and cleared by software.
0x40021048 B  REGISTER RCC_AHBENR: AHB peripheral clock enable register
0x40021048 C   FIELD 00w01 DMA1EN (rw): DMA1 and DMAMUX clock enable Set and cleared by software. DMAMUX is enabled as long as at least one DMA peripheral is enabled.
0x40021048 C   FIELD 01w01 DMA2EN (rw): DMA2 and DMAMUX clock enable Set and cleared by software. DMAMUX is enabled as long as at least one DMA peripheral is enabled.
0x40021048 C   FIELD 08w01 FLASHEN (rw): Flash memory interface clock enable Set and cleared by software. This bit can only be cleared when the flash memory is in power down mode.
0x40021048 C   FIELD 12w01 CRCEN (rw): CRC clock enable Set and cleared by software.
0x40021048 C   FIELD 18w01 RNGEN (rw): Random number generator clock enable Set and cleared by software.
0x40021048 C   FIELD 24w01 TSCEN (rw): Touch sensing controller clock enable Set and cleared by software.
0x4002104C B  REGISTER RCC_IOPENR: I/O port clock enable register
0x4002104C C   FIELD 00w01 GPIOAEN (rw): I/O port A clock enable This bit is set and cleared by software.
0x4002104C C   FIELD 01w01 GPIOBEN (rw): I/O port B clock enable This bit is set and cleared by software.
0x4002104C C   FIELD 02w01 GPIOCEN (rw): I/O port C clock enable This bit is set and cleared by software.
0x4002104C C   FIELD 03w01 GPIODEN (rw): I/O port D clock enable This bit is set and cleared by software.
0x4002104C C   FIELD 04w01 GPIOEEN (rw): I/O port E clock enable<sup>(1)</sup> This bit is set and cleared by software.
0x4002104C C   FIELD 05w01 GPIOFEN (rw): I/O port F clock enable This bit is set and cleared by software.
0x40021050 B  REGISTER RCC_DBGCFGR: Debug configuration register
0x40021050 C   FIELD 00w01 DBGEN (rw): Debug support clock enable Set and cleared by software.
0x40021050 C   FIELD 01w01 DBGRST (rw): Debug support reset Set and cleared by software.
0x40021058 B  REGISTER RCC_APBENR1: APB peripheral clock enable register 1
0x40021058 C   FIELD 00w01 TIM2EN (rw): TIM2 timer clock enable Set and cleared by software.
0x40021058 C   FIELD 01w01 TIM3EN (rw): TIM3 timer clock enable Set and cleared by software.
0x40021058 C   FIELD 04w01 TIM6EN (rw): TIM6 timer clock enable Set and cleared by software.
0x40021058 C   FIELD 05w01 TIM7EN (rw): TIM7 timer clock enable Set and cleared by software.
0x40021058 C   FIELD 07w01 LPUART2EN (rw): LPUART2 clock enable Set and cleared by software.
0x40021058 C   FIELD 09w01 LCDEN (rw): LCD clock enable<sup>(1)</sup> Set and cleared by software.
0x40021058 C   FIELD 10w01 RTCAPBEN (rw): RTC APB clock enable Set and cleared by software.
0x40021058 C   FIELD 11w01 WWDGEN (rw): WWDG clock enable Set by software to enable the window watchdog clock. Cleared by hardware system reset This bit can also be set by hardware if the WWDG_SW option bit is 0.
0x40021058 C   FIELD 12w01 LPUART3EN (rw): LPUART3 clock enable Set and cleared by software.
0x40021058 C   FIELD 13w01 USBEN (rw): USB clock enable<sup>(1)</sup> Set and cleared by software.
0x40021058 C   FIELD 14w01 SPI2EN (rw): SPI2 clock enable Set and cleared by software.
0x40021058 C   FIELD 15w01 SPI3EN (rw): SPI3 clock enable<sup>(1)</sup> Set and cleared by software.
0x40021058 C   FIELD 16w01 CRSEN (rw): CRS clock enable<sup>(1)</sup> Set and cleared by software.
0x40021058 C   FIELD 17w01 USART2EN (rw): USART2 clock enable Set and cleared by software.
0x40021058 C   FIELD 18w01 USART3EN (rw): USART3 clock enable Set and cleared by software.
0x40021058 C   FIELD 19w01 USART4EN (rw): USART4 clock enable Set and cleared by software.
0x40021058 C   FIELD 20w01 LPUART1EN (rw): LPUART1 clock enable Set and cleared by software.
0x40021058 C   FIELD 21w01 I2C1EN (rw): I2C1 clock enable Set and cleared by software.
0x40021058 C   FIELD 22w01 I2C2EN (rw): I2C2 clock enable Set and cleared by software.
0x40021058 C   FIELD 23w01 I2C3EN (rw): I2C3 clock enable Set and cleared by software.
0x40021058 C   FIELD 24w01 OPAMPEN (rw): OPAMP clock enable Set and cleared by software.
0x40021058 C   FIELD 25w01 I2C4EN (rw): I2C4EN clock enable<sup>(1)</sup> Set and cleared by software.
0x40021058 C   FIELD 26w01 LPTIM3EN (rw): LPTIM3 clock enable Set and cleared by software.
0x40021058 C   FIELD 28w01 PWREN (rw): Power interface clock enable Set and cleared by software.
0x40021058 C   FIELD 29w01 DAC1EN (rw): DAC1 interface clock enable Set and cleared by software.
0x40021058 C   FIELD 30w01 LPTIM2EN (rw): LPTIM2 clock enable Set and cleared by software.
0x40021058 C   FIELD 31w01 LPTIM1EN (rw): LPTIM1 clock enable Set and cleared by software.
0x40021060 B  REGISTER RCC_APBENR2: APB peripheral clock enable register 2
0x40021060 C   FIELD 00w01 SYSCFGEN (rw): SYSCFG, COMP and VREFBUF clock enable Set and cleared by software.
0x40021060 C   FIELD 11w01 TIM1EN (rw): TIM1 timer clock enable Set and cleared by software.
0x40021060 C   FIELD 12w01 SPI1EN (rw): SPI1 clock enable Set and cleared by software.
0x40021060 C   FIELD 14w01 USART1EN (rw): USART1 clock enable Set and cleared by software.
0x40021060 C   FIELD 16w01 TIM15EN (rw): TIM15 timer clock enable Set and cleared by software.
0x40021060 C   FIELD 17w01 TIM16EN (rw): TIM16 timer clock enable Set and cleared by software.
0x40021060 C   FIELD 20w01 ADCEN (rw): ADC clock enable Set and cleared by software.
0x40021068 B  REGISTER RCC_AHBSMENR: AHB peripheral clock enable in Sleep/Stop mode register
0x40021068 C   FIELD 00w01 DMA1SMEN (rw): DMA1 and DMAMUX clock enable during Sleep mode Set and cleared by software. Clock to DMAMUX during Sleep mode is enabled as long as the clock in Sleep mode is enabled to at least one DMA peripheral.
0x40021068 C   FIELD 01w01 DMA2SMEN (rw): DMA2 and DMAMUX clock enable during Sleep mode Set and cleared by software. Clock to DMAMUX during Sleep mode is enabled as long as the clock in Sleep mode is enabled to at least one DMA peripheral.
0x40021068 C   FIELD 08w01 FLASHSMEN (rw): Flash memory interface clock enable during Sleep mode Set and cleared by software. This bit can be activated only when the flash memory is in power down mode.
0x40021068 C   FIELD 09w01 SRAMSMEN (rw): SRAM clock enable during Sleep mode Set and cleared by software.
0x40021068 C   FIELD 12w01 CRCSMEN (rw): CRC clock enable during Sleep mode Set and cleared by software.
0x40021068 C   FIELD 18w01 RNGSMEN (rw): RNG clock enable during Sleep and Stop mode Set and cleared by software.
0x40021068 C   FIELD 24w01 TSCSMEN (rw): TSC clock enable during Sleep and Stop mode Set and cleared by software.
0x4002106C B  REGISTER RCC_IOPSMENR: I/O port in Sleep mode clock enable register
0x4002106C C   FIELD 00w01 GPIOASMEN (rw): I/O port A clock enable during Sleep mode Set and cleared by software.
0x4002106C C   FIELD 01w01 GPIOBSMEN (rw): I/O port B clock enable during Sleep mode Set and cleared by software.
0x4002106C C   FIELD 02w01 GPIOCSMEN (rw): I/O port C clock enable during Sleep mode Set and cleared by software.
0x4002106C C   FIELD 03w01 GPIODSMEN (rw): I/O port D clock enable during Sleep mode<sup>(1)</sup> Set and cleared by software.
0x4002106C C   FIELD 04w01 GPIOESMEN (rw): I/O port E clock enable during Sleep mode Set and cleared by software.
0x4002106C C   FIELD 05w01 GPIOFSMEN (rw): I/O port F clock enable during Sleep mode Set and cleared by software.
0x40021078 B  REGISTER RCC_APBSMENR1: APB peripheral clock enable in Sleep/Stop mode register 1
0x40021078 C   FIELD 00w01 TIM2SMEN (rw): TIM2 timer clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 01w01 TIM3SMEN (rw): TIM3 timer clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 04w01 TIM6SMEN (rw): TIM6 timer clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 05w01 TIM7SMEN (rw): TIM7 timer clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 07w01 LPUART2SMEN (rw): LPUART2 clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 09w01 LCDSMEN (rw): LCD clock enable during Sleep mode<sup>(1)</sup> Set and cleared by software.
0x40021078 C   FIELD 10w01 RTCAPBSMEN (rw): RTC APB clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 11w01 WWDGSMEN (rw): WWDG clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 12w01 LPUART3SMEN (rw): LPUART3 clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 13w01 USBSMEN (rw): USB clock enable during Sleep mode<sup>(1)</sup> Set and cleared by software.
0x40021078 C   FIELD 14w01 SPI2SMEN (rw): SPI2 clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 15w01 SPI3SMEN (rw): SPI3 clock enable during Sleep mode<sup>(1)</sup> Set and cleared by software.
0x40021078 C   FIELD 16w01 CRSSMEN (rw): CRS clock enable during Sleep and Stop modes<sup>(1)</sup> Set and cleared by software.
0x40021078 C   FIELD 17w01 USART2SMEN (rw): USART2 clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 18w01 USART3SMEN (rw): USART3 clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 19w01 USART4SMEN (rw): USART4 clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 20w01 LPUART1SMEN (rw): LPUART1 clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 21w01 I2C1SMEN (rw): I2C1 clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 22w01 I2C2SMEN (rw): I2C2 clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 23w01 I2C3SMEN (rw): I2C3 clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 24w01 OPAMPSMEN (rw): OPAMP clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 25w01 I2C4SMEN (rw): I2C4 clock enable during Sleep mode<sup>(1)</sup> Set and cleared by software.
0x40021078 C   FIELD 26w01 LPTIM3SMEN (rw): Low power timer 3 clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 28w01 PWRSMEN (rw): Power interface clock enable during Sleep mode Set and cleared by software.
0x40021078 C   FIELD 29w01 DAC1SMEN (rw): DAC1 interface clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 30w01 LPTIM2SMEN (rw): Low Power Timer 2 clock enable during Sleep and Stop modes Set and cleared by software.
0x40021078 C   FIELD 31w01 LPTIM1SMEN (rw): Low Power Timer 1 clock enable during Sleep and Stop modes Set and cleared by software.
0x40021080 B  REGISTER RCC_APBSMENR2: APB peripheral clock enable in Sleep/Stop mode register 2
0x40021080 C   FIELD 00w01 SYSCFGSMEN (rw): SYSCFG, COMP and VREFBUF clock enable during Sleep and Stop modes Set and cleared by software.
0x40021080 C   FIELD 11w01 TIM1SMEN (rw): TIM1 timer clock enable during Sleep mode Set and cleared by software.
0x40021080 C   FIELD 12w01 SPI1SMEN (rw): SPI1 clock enable during Sleep mode Set and cleared by software.
0x40021080 C   FIELD 14w01 USART1SMEN (rw): USART1 clock enable during Sleep and Stop modes Set and cleared by software.
0x40021080 C   FIELD 16w01 TIM15SMEN (rw): TIM15 timer clock enable during Sleep mode Set and cleared by software.
0x40021080 C   FIELD 17w01 TIM16SMEN (rw): TIM16 timer clock enable during Sleep mode Set and cleared by software.
0x40021080 C   FIELD 20w01 ADCSMEN (rw): ADC clock enable during Sleep mode Set and cleared by software.
0x40021088 B  REGISTER RCC_CCIPR: Peripherals independent clock configuration register
0x40021088 C   FIELD 00w02 USART1SEL (rw): USART1 clock source selection This bitfield is controlled by software to select USART1 clock source as follows:
0x40021088 C   FIELD 02w02 USART2SEL (rw): USART2 clock source selection This bitfield is controlled by software to select USART2 clock source as follows:
0x40021088 C   FIELD 06w02 LPUART3SEL (rw): LPUART3 clock source selection<sup>(1)</sup> This bitfield is controlled by software to select LPUART3 clock source as follows:
0x40021088 C   FIELD 08w02 LPUART2SEL (rw): LPUART2 clock source selection This bitfield is controlled by software to select LPUART2 clock source as follows:
0x40021088 C   FIELD 10w02 LPUART1SEL (rw): LPUART1 clock source selection This bitfield is controlled by software to select LPUART1 clock source as follows:
0x40021088 C   FIELD 12w02 I2C1SEL (rw): I2C1 clock source selection This bitfield is controlled by software to select I2C1 clock source as follows:
0x40021088 C   FIELD 16w02 I2C3SEL (rw): I2C3 clock source selection This bitfield is controlled by software to select I2C3 clock source as follows:
0x40021088 C   FIELD 18w02 LPTIM1SEL (rw): LPTIM1 clock source selection This bitfield is controlled by software to select LPTIM1 clock source as follows:
0x40021088 C   FIELD 20w02 LPTIM2SEL (rw): LPTIM2 clock source selection This bitfield is controlled by software to select LPTIM2 clock source as follows:
0x40021088 C   FIELD 22w02 LPTIM3SEL (rw): LPTIM3 clock source selection This bitfield is controlled by software to select LPTIM3 clock source as follows:
0x40021088 C   FIELD 24w01 TIM1SEL (rw): TIM1 clock source selection This bit is set and cleared by software. It selects TIM1 clock source as follows:
0x40021088 C   FIELD 25w01 TIM15SEL (rw): TIM15 clock source selection This bit is set and cleared by software. It selects TIM15 clock source as follows:
0x40021088 C   FIELD 26w02 CLK48SEL (rw): 481MHz clock source selection This bitfield is controlled by software to select the 481MHz clock source used by the USB FS and the RNG:
0x40021088 C   FIELD 28w02 ADCSEL (rw): ADCs clock source selection This bitfield is controlled by software to select the clock source for ADC:
0x40021090 B  REGISTER RCC_BDCR: RTC domain control register
0x40021090 C   FIELD 00w01 LSEON (rw): LSE oscillator enable Set and cleared by software to enable LSE oscillator:
0x40021090 C   FIELD 01w01 LSERDY (ro): LSE oscillator ready Set and cleared by hardware to indicate when the external 321kHz oscillator is ready (stable): After the LSEON bit is cleared, LSERDY goes low after 6 external low-speed oscillator clock cycles.
0x40021090 C   FIELD 02w01 LSEBYP (rw): LSE oscillator bypass Set and cleared by software to bypass the LSE oscillator (in debug mode). This bit can be written only when the external 321kHz oscillator is disabled (LSEON=0 and LSERDY=0).
0x40021090 C   FIELD 03w02 LSEDRV (rw): LSE oscillator drive capability Set by software to select the LSE oscillator drive capability as follows: Applicable when the LSE oscillator is in Xtal mode, as opposed to bypass mode.
0x40021090 C   FIELD 05w01 LSECSSON (rw): CSS on LSE enable Set by software to enable the clock security system on LSE (321kHz) oscillator as follows: LSECSSON must be enabled after the LSE oscillator is enabled (LSEON bit enabled) and ready (LSERDY flag set by hardware), and after the RTCSEL bit is selected. Once enabled, this bit cannot be disabled, except after a LSE failure detection (LSECSSD =1). In that case the software must disable the LSECSSON bit.
0x40021090 C   FIELD 06w01 LSECSSD (ro): CSS on LSE failure Detection Set by hardware to indicate when a failure is detected by the clock security system on the external 321kHz oscillator (LSE):
0x40021090 C   FIELD 07w01 LSESYSEN (rw): LSE clock enable for system usage This bit must be set by software to enable the LSE clock for a system usage.
0x40021090 C   FIELD 08w02 RTCSEL (rw): RTC clock source selection Set by software to select the clock source for the RTC as follows: Once the RTC clock source is selected, it cannot be changed anymore unless the RTC domain is reset, or unless a failure is detected on LSE (LSECSSD is set). The BDRST bit can be used to reset this bitfield to 00.
0x40021090 C   FIELD 11w01 LSESYSRDY (ro): LSE clock ready for system usage This flag is set by hardware to indicate that the LSE clock is ready for being used by the system (see LSESYSEN bit). This flag is set when LSE clock is ready (LSEON1=11 and LSERDY1=11) and two LSE clock cycles after that LSESYSEN is set. Cleared by hardware to indicate that the LSE clock is not ready to be used by the system.
0x40021090 C   FIELD 15w01 RTCEN (rw): RTC clock enable Set and cleared by software. The bit enables clock to RTC and TAMP.
0x40021090 C   FIELD 16w01 BDRST (rw): RTC domain software reset Set and cleared by software to reset the RTC domain:
0x40021090 C   FIELD 24w01 LSCOEN (rw): Low-speed clock output (LSCO) enable Set and cleared by software.
0x40021090 C   FIELD 25w01 LSCOSEL (rw): Low-speed clock output selection Set and cleared by software to select the low-speed output clock:
0x40021094 B  REGISTER RCC_CSR: Control/status register
0x40021094 C   FIELD 00w01 LSION (rw): LSI oscillator enable Set and cleared by software to enable/disable the LSI oscillator:
0x40021094 C   FIELD 01w01 LSIRDY (ro): LSI oscillator ready Set and cleared by hardware to indicate when the LSI oscillator is ready (stable): After the LSION bit is cleared, LSIRDY goes low after 3 LSI oscillator clock cycles. This bit can be set even if LSION = 0 if the LSI is requested by the Clock Security System on LSE, by the Independent Watchdog or by the RTC.
0x40021094 C   FIELD 02w01 LSIPREDIV (rw): Internal low-speed oscillator pre-divided by 128 Set and reset by hardware to indicate when the low-speed internal RC oscillator has to be divided by 128. The software has to switch off the LSI before changing this bit.
0x40021094 C   FIELD 08w04 MSISRANGE (rw): MSI range after Standby mode Set by software to chose the MSI frequency at startup. This range is used after exiting Standby mode until MSIRGSEL is set. After a pad or a power-on reset, the range is always 41MHz. MSISRANGE[3:0] can be written only when MSIRGSEL1=11. Others: Reserved Note: Changing the MSISRANGE[3:0] does not change the current MSI frequency.
0x40021094 C   FIELD 23w01 RMVF (rw): Remove reset flags Set by software to clear the reset flags.
0x40021094 C   FIELD 25w01 OBLRSTF (ro): Option byte loader reset flag Set by hardware when a reset from the Option byte loading occurs. Cleared by setting the RMVF bit.
0x40021094 C   FIELD 26w01 PINRSTF (ro): Pin reset flag Set by hardware when a reset from the NRST pin occurs. Cleared by setting the RMVF bit.
0x40021094 C   FIELD 27w01 PWRRSTF (ro): BOR or POR/PDR flag Set by hardware when a BOR or POR/PDR occurs. Cleared by setting the RMVF bit.
0x40021094 C   FIELD 28w01 SFTRSTF (ro): Software reset flag Set by hardware when a software reset occurs. Cleared by setting the RMVF bit.
0x40021094 C   FIELD 29w01 IWDGRSTF (ro): Independent window watchdog reset flag Set by hardware when an independent watchdog reset domain occurs. Cleared by setting the RMVF bit.
0x40021094 C   FIELD 30w01 WWDGRSTF (ro): Window watchdog reset flag Set by hardware when a window watchdog reset occurs. Cleared by setting the RMVF bit.
0x40021094 C   FIELD 31w01 LPWRRSTF (ro): Low-power reset flag Set by hardware when a reset occurs due to illegal Stop, Standby, or Shutdown mode entry. Cleared by setting the RMVF bit. This operates only if nRST_STOP, nRST_STDBY or nRST_SHDW option bits are cleared.
0x40021098 B  REGISTER RCC_CRRCR: RCC clock recovery RC register
0x40021098 C   FIELD 00w01 HSI48ON (rw): HSI48 RC oscillator enable<sup>(1)</sup>
0x40021098 C   FIELD 01w01 HSI48RDY (ro): HSI48 clock ready flag<sup>(1)</sup> The flag is set when the HSI48 clock is ready for use.
0x40021098 C   FIELD 07w09 HSI48CAL (ro): HSI48 clock calibration These bits are initialized at startup with the factory-programmed HSI48 calibration trim value.
0x40021800 A PERIPHERAL EXTI
0x40021800 B  REGISTER EXTI_RTSR1: EXTI rising trigger selection register
0x40021800 C   FIELD 00w01 RT0 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 01w01 RT1 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 02w01 RT2 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 03w01 RT3 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 04w01 RT4 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 05w01 RT5 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 06w01 RT6 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 07w01 RT7 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 08w01 RT8 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 09w01 RT9 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 10w01 RT10 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 11w01 RT11 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 12w01 RT12 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 13w01 RT13 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 14w01 RT14 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 15w01 RT15 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 16w01 RT16 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 17w01 RT17 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 18w01 RT18 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 19w01 RT19 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 20w01 RT20 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021800 C   FIELD 21w01 RT21 (rw): Rising trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the rising edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 B  REGISTER EXTI_FTSR1: EXTI falling trigger selection register 1
0x40021804 C   FIELD 00w01 FT0 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 01w01 FT1 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 02w01 FT2 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 03w01 FT3 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 04w01 FT4 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 05w01 FT5 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 06w01 FT6 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 07w01 FT7 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 08w01 FT8 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 09w01 FT9 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 10w01 FT10 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 11w01 FT11 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 12w01 FT12 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 13w01 FT13 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 14w01 FT14 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 15w01 FT15 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 16w01 FT16 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 17w01 FT17 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 18w01 FT18 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 19w01 FT19 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 20w01 FT20 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021804 C   FIELD 21w01 FT21 (rw): Falling trigger event configuration bit of configurable line x (x1=1211to10) Each bit enables/disables the falling edge trigger for the event and interrupt on the corresponding line. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 B  REGISTER EXTI_SWIER1: EXTI software interrupt event register 1
0x40021808 C   FIELD 00w01 SWI0 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 01w01 SWI1 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 02w01 SWI2 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 03w01 SWI3 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 04w01 SWI4 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 05w01 SWI5 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 06w01 SWI6 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 07w01 SWI7 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 08w01 SWI8 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 09w01 SWI9 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 10w01 SWI10 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 11w01 SWI11 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 12w01 SWI12 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 13w01 SWI13 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 14w01 SWI14 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 15w01 SWI15 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 16w01 SWI16 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 17w01 SWI17 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 18w01 SWI18 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 19w01 SWI19 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 20w01 SWI20 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021808 C   FIELD 21w01 SWI21 (rw): Software rising edge event trigger on line x (x1=1211to10) Setting of any bit by software triggers a rising edge event on the corresponding line x, resulting in an interrupt, independently of EXTI_RTSR1 and EXTI_FTSR1 settings. The bits are automatically cleared by HW. Reading of any bit always returns 0. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C B  REGISTER EXTI_RPR1: EXTI rising edge pending register 1
0x4002180C C   FIELD 00w01 RPIF0 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 01w01 RPIF1 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 02w01 RPIF2 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 03w01 RPIF3 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 04w01 RPIF4 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 05w01 RPIF5 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 06w01 RPIF6 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 07w01 RPIF7 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 08w01 RPIF8 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 09w01 RPIF9 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 10w01 RPIF10 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 11w01 RPIF11 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 12w01 RPIF12 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 13w01 RPIF13 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 14w01 RPIF14 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 15w01 RPIF15 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 16w01 RPIF16 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 17w01 RPIF17 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 18w01 RPIF18 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 19w01 RPIF19 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 20w01 RPIF20 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x4002180C C   FIELD 21w01 RPIF21 (rw): Rising edge event pending for configurable line x (x1=1211to10) Each bit is set upon a rising edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 B  REGISTER EXTI_FPR1: EXTI falling edge pending register 1
0x40021810 C   FIELD 00w01 FPIF0 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 01w01 FPIF1 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 02w01 FPIF2 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 03w01 FPIF3 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 04w01 FPIF4 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 05w01 FPIF5 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 06w01 FPIF6 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 07w01 FPIF7 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 08w01 FPIF8 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 09w01 FPIF9 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 10w01 FPIF10 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 11w01 FPIF11 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 12w01 FPIF12 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 13w01 FPIF13 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 14w01 FPIF14 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 15w01 FPIF15 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 16w01 FPIF16 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 17w01 FPIF17 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 18w01 FPIF18 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 19w01 FPIF19 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 20w01 FPIF20 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021810 C   FIELD 21w01 FPIF21 (rw): Falling edge event pending for configurable line x (x1=1211to10) Each bit is set upon a falling edge event generated by hardware or by software (through the EXTI_SWIER1 register) on the corresponding line. Each bit is cleared by writing 1 into it. Bits 18 and 19 are available only on STM32U0x3xx devices. They are reserved on STM32U031xx devices.
0x40021860 B  REGISTER EXTI_EXTICR1: EXTI external interrupt selection register 1
0x40021860 C   FIELD 00w08 EXTI0 (rw): EXTI0 GPIO port selection These bits are written by software to select the source input for EXTI0 external interrupt. Others reserved
0x40021860 C   FIELD 08w08 EXTI1 (rw): EXTI1 GPIO port selection These bits are written by software to select the source input for EXTI1 external interrupt. Others reserved
0x40021860 C   FIELD 16w08 EXTI2 (rw): EXTI2 GPIO port selection These bits are written by software to select the source input for EXTI2 external interrupt. Others reserved
0x40021860 C   FIELD 24w08 EXTI3 (rw): EXTI3 GPIO port selection These bits are written by software to select the source input for EXTI3 external interrupt. Others reserved
0x40021864 B  REGISTER EXTI_EXTICR2: EXTI external interrupt selection register 2
0x40021864 C   FIELD 00w08 EXTI4 (rw): EXTI4 GPIO port selection These bits are written by software to select the source input for EXTI4 external interrupt. Others reserved
0x40021864 C   FIELD 08w08 EXTI5 (rw): EXTI5 GPIO port selection These bits are written by software to select the source input for EXTI5 external interrupt. Others reserved
0x40021864 C   FIELD 16w08 EXTI6 (rw): EXTI6 GPIO port selection These bits are written by software to select the source input for EXTI6 external interrupt. Others reserved
0x40021864 C   FIELD 24w08 EXTI7 (rw): EXTI7 GPIO port selection These bits are written by software to select the source input for EXTI7 external interrupt. Others reserved
0x40021868 B  REGISTER EXTI_EXTICR3: EXTI external interrupt selection register 3
0x40021868 C   FIELD 00w08 EXTI8 (rw): EXTI8 GPIO port selection These bits are written by software to select the source input for EXTI8 external interrupt. Others reserved
0x40021868 C   FIELD 08w08 EXTI9 (rw): EXTI9 GPIO port selection These bits are written by software to select the source input for EXTI9 external interrupt. Others reserved
0x40021868 C   FIELD 16w08 EXTI10 (rw): EXTI10 GPIO port selection These bits are written by software to select the source input for EXTI10 external interrupt. Others reserved
0x40021868 C   FIELD 24w08 EXTI11 (rw): EXTI11 GPIO port selection These bits are written by software to select the source input for EXTI11 external interrupt. Others reserved
0x4002186C B  REGISTER EXTI_EXTICR4: EXTI external interrupt selection register 4
0x4002186C C   FIELD 00w08 EXTI12 (rw): EXTI12 GPIO port selection These bits are written by software to select the source input for EXTI12 external interrupt. Others reserved
0x4002186C C   FIELD 08w08 EXTI13 (rw): EXTI13 GPIO port selection These bits are written by software to select the source input for EXTI13 external interrupt. Others reserved
0x4002186C C   FIELD 16w08 EXTI14 (rw): EXTI14 GPIO port selection These bits are written by software to select the source input for EXTI14 external interrupt. Others reserved
0x4002186C C   FIELD 24w08 EXTI15 (rw): EXTI15 GPIO port selection These bits are written by software to select the source input for EXTI15 external interrupt. Others reserved
0x40021880 B  REGISTER EXTI_IMR1: EXTI CPU wake-up with interrupt mask register
0x40021880 C   FIELD 00w01 IM0 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 01w01 IM1 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 02w01 IM2 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 03w01 IM3 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 04w01 IM4 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 05w01 IM5 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 06w01 IM6 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 07w01 IM7 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 08w01 IM8 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 09w01 IM9 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 10w01 IM10 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 11w01 IM11 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 12w01 IM12 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 13w01 IM13 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 14w01 IM14 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 15w01 IM15 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 16w01 IM16 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 17w01 IM17 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 18w01 IM18 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 19w01 IM19 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 20w01 IM20 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 21w01 IM21 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 22w01 IM22 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 23w01 IM23 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 24w01 IM24 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 25w01 IM25 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 26w01 IM26 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 27w01 IM27 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 28w01 IM28 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 29w01 IM29 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 30w01 IM30 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021880 C   FIELD 31w01 IM31 (rw): CPU wake-up with interrupt mask on line x (x1=131 to 0) Setting/clearing each bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 B  REGISTER EXTI_EMR1: EXTI CPU wake-up with event mask register
0x40021884 C   FIELD 00w01 EM0 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 01w01 EM1 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 02w01 EM2 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 03w01 EM3 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 04w01 EM4 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 05w01 EM5 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 06w01 EM6 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 07w01 EM7 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 08w01 EM8 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 09w01 EM9 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 10w01 EM10 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 11w01 EM11 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 12w01 EM12 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 13w01 EM13 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 14w01 EM14 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 15w01 EM15 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 16w01 EM16 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 17w01 EM17 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 18w01 EM18 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 19w01 EM19 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 20w01 EM20 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 21w01 EM21 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 22w01 EM22 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 23w01 EM23 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 24w01 EM24 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 25w01 EM25 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 26w01 EM26 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 27w01 EM27 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 28w01 EM28 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 29w01 EM29 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 30w01 EM30 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021884 C   FIELD 31w01 EM31 (rw): CPU wake-up with event generation mask on line x (x1=1311to10) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bits 18, 19, 22 and 26 are available only on STM32U0x3xx devices, they are reserved on STM32U031xx devices.
0x40021890 B  REGISTER EXTI_IMR2: EXTI CPU wake-up with interrupt mask register
0x40021890 C   FIELD 00w01 IM32 (rw): CPU wake-up with interrupt mask on line x (x1=1371to132) Setting/clearing this bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021890 C   FIELD 01w01 IM33 (rw): CPU wake-up with interrupt mask on line x (x1=1371to132) Setting/clearing this bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021890 C   FIELD 02w01 IM34 (rw): CPU wake-up with interrupt mask on line x (x1=1371to132) Setting/clearing this bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021890 C   FIELD 03w01 IM35 (rw): CPU wake-up with interrupt mask on line x (x1=1371to132) Setting/clearing this bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021890 C   FIELD 04w01 IM36 (rw): CPU wake-up with interrupt mask on line x (x1=1371to132) Setting/clearing this bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021890 C   FIELD 05w01 IM37 (rw): CPU wake-up with interrupt mask on line x (x1=1371to132) Setting/clearing this bit unmasks/masks the CPU wake-up with interrupt, by an event on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021894 B  REGISTER EXTI_EMR2: EXTI CPU wake-up with event mask register
0x40021894 C   FIELD 00w01 EM32 (rw): CPU wake-up with event generation mask on line x, (x1=1371to132) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021894 C   FIELD 01w01 EM33 (rw): CPU wake-up with event generation mask on line x, (x1=1371to132) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021894 C   FIELD 02w01 EM34 (rw): CPU wake-up with event generation mask on line x, (x1=1371to132) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021894 C   FIELD 03w01 EM35 (rw): CPU wake-up with event generation mask on line x, (x1=1371to132) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021894 C   FIELD 04w01 EM36 (rw): CPU wake-up with event generation mask on line x, (x1=1371to132) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40021894 C   FIELD 05w01 EM37 (rw): CPU wake-up with event generation mask on line x, (x1=1371to132) Setting/clearing each bit unmasks/masks the CPU wake-up with event generation on the corresponding line. Bit IM36 is available only on STM32U0x3xx devices, it is reserved on STM32U031xx devices.
0x40022000 A PERIPHERAL FLASH
0x40022000 B  REGISTER FLASH_ACR: FLASH access control register
0x40022000 C   FIELD 00w03 LATENCY (rw): Flash memory access latency The value in this bitfield represents the number of CPU wait states when accessing the flash memory. Other: Reserved A new write into the bitfield becomes effective when it returns the same value upon read.
0x40022000 C   FIELD 08w01 PRFTEN (rw): CPU Prefetch enable
0x40022000 C   FIELD 09w01 ICEN (rw): CPU Instruction cache enable
0x40022000 C   FIELD 11w01 ICRST (rw): CPU Instruction cache reset This bit can be written only when the instruction cache is disabled.
0x40022000 C   FIELD 16w01 EMPTY (rw): Main flash memory area empty This bit indicates whether the first location of the main flash memory area is erased or has a programmed value. The bit can be set and reset by software.
0x40022000 C   FIELD 18w01 DBG_SWEN (rw): Debug access software enable Software may use this bit to enable/disable the debugger read access.
0x40022008 B  REGISTER FLASH_KEYR: FLASH key register
0x40022008 C   FIELD 00w32 KEY (wo): FLASH key The following values must be written consecutively to unlock the FLASH control register (FLASH_CR), thus enabling programming/erasing operations: KEY1: 0x4567 0123 KEY2: 0xCDEF 89AB
0x4002200C B  REGISTER FLASH_OPTKEYR: FLASH option key register
0x4002200C C   FIELD 00w32 OPTKEY (wo): Option byte key The following values must be written consecutively to unlock the flash memory option registers, enabling option byte programming/erasing operations: KEY1: 0x0819 2A3B KEY2: 0x4C5D 6E7F
0x40022010 B  REGISTER FLASH_SR: FLASH status register
0x40022010 C   FIELD 00w01 EOP (rw): End of operation Set by hardware when one or more flash memory operation (programming / erase) has been completed successfully. This bit is set only if the end of operation interrupts are enabled (EOPIE=1). Cleared by writing 1.
0x40022010 C   FIELD 01w01 OPERR (rw): Operation error Set by hardware when a flash memory operation (program / erase) completes unsuccessfully. This bit is set only if error interrupts are enabled (ERRIE=1). Cleared by writing 1.
0x40022010 C   FIELD 03w01 PROGERR (rw): Programming error Set by hardware when a double-word address to be programmed contains a value different from '0xFFFF FFFF' before programming, except if the data to write is '0x0000 0000'. Cleared by writing 1.
0x40022010 C   FIELD 04w01 WRPERR (rw): Write protection error Set by hardware when an address to be erased/programmed belongs to a write-protected part (by WRP, PCROP or RDP Level 1) of the flash memory. Cleared by writing 1.
0x40022010 C   FIELD 05w01 PGAERR (rw): Programming alignment error Set by hardware when the data to program cannot be contained in the same double word (64-bit) flash memory in case of standard programming, or if there is a change of page during fast programming. Cleared by writing 1.
0x40022010 C   FIELD 06w01 SIZERR (rw): Size error Set by hardware when the size of the access is a byte or half-word during a program or a fast program sequence. Only double word programming is allowed (consequently: word access). Cleared by writing 1.
0x40022010 C   FIELD 07w01 PGSERR (rw): Programming sequence error Set by hardware when a write access to the flash memory is performed by the code while PG or FSTPG have not been set previously. Set also by hardware when PROGERR, SIZERR, PGAERR, WRPERR, MISSERR or FASTERR is set due to a previous programming error. Cleared by writing 1.
0x40022010 C   FIELD 08w01 MISSERR (rw): Fast programming data miss error In Fast programming mode, 16 double words (128 bytes) must be sent to flash memory successively, and the new data must be sent to the logic control before the current data is fully programmed. MISSERR is set by hardware when the new data is not present in time. Cleared by writing 1.
0x40022010 C   FIELD 09w01 FASTERR (rw): Fast programming error Set by hardware when a fast programming sequence (activated by FSTPG) is interrupted due to an error (alignment, size, write protection or data miss). The corresponding status bit (PGAERR, SIZERR, WRPERR or MISSERR) is set at the same time. Cleared by writing 1.
0x40022010 C   FIELD 14w01 RDERR (rw): PCROP read error Set by hardware when an address to be read belongs to a read protected area of the flash memory (PCROP protection). An interrupt is generated if RDERRIE is set in FLASH_CR. Cleared by writing 1.
0x40022010 C   FIELD 15w01 OPTVERR (rw): Option and Engineering bits loading validity error
0x40022010 C   FIELD 16w01 BSY1 (ro): Busy This flag indicates that a flash memory operation requested by FLASH control register (FLASH_CR) is in progress. This bit is set at the beginning of the flash memory operation, and cleared when the operation finishes or when an error occurs.
0x40022010 C   FIELD 18w01 CFGBSY (ro): Programming or erase configuration busy. This flag is set and cleared by hardware. It is set when the first word is sent for program or when setting the STRT bit of FLASH control register (FLASH_CR) for erase. It is cleared when the flash memory program or erase operation completes or ends with an error. When set, launching any other operation through the FLASH control register (FLASH_CR) is impossible, and must be postponed (a programming or erase operation is ongoing). When cleared, the program and erase settings in the FLASH control register (FLASH_CR) can be modified.
0x40022014 B  REGISTER FLASH_CR: FLASH control register
0x40022014 C   FIELD 00w01 PG (rw): Flash memory programming enable
0x40022014 C   FIELD 01w01 PER (rw): Page erase enable
0x40022014 C   FIELD 02w01 MER1 (rw): Mass erase When set, this bit triggers the mass erase, that is, all user pages.
0x40022014 C   FIELD 03w07 PNB (rw): Page number selection These bits select the page to erase: ... Note: Values corresponding to addresses outside the main memory are not allowed.
0x40022014 C   FIELD 16w01 STRT (rw): Start erase operation This bit triggers an erase operation when set. This bit is possible to set only by software and to clear only by hardware. The hardware clears it when one of BSY1 and BSY2 flags in the FLASH_SR register transits to zero.
0x40022014 C   FIELD 17w01 OPTSTRT (rw): Start of modification of option bytes This bit triggers an options operation when set. This bit is set only by software, and is cleared when the BSY1 bit is cleared in FLASH_SR.
0x40022014 C   FIELD 18w01 FSTPG (rw): Fast programming enable
0x40022014 C   FIELD 24w01 EOPIE (rw): End-of-operation interrupt enable This bit enables the interrupt generation upon setting the EOP flag in the FLASH_SR register.
0x40022014 C   FIELD 25w01 ERRIE (rw): Error interrupt enable This bit enables the interrupt generation upon setting the OPERR flag in the FLASH_SR register.
0x40022014 C   FIELD 26w01 RDERRIE (rw): PCROP read error interrupt enable This bit enables the interrupt generation upon setting the RDERR flag in the FLASH_SR register.
0x40022014 C   FIELD 27w01 OBL_LAUNCH (rw): Option byte load launch When set, this bit triggers the load of option bytes into option registers. It is automatically cleared upon the completion of the load. The high state of the bit indicates pending option byte load. The bit cannot be cleared by software. It cannot be written as long as OPTLOCK is set.
0x40022014 C   FIELD 28w01 SEC_PROT (rw): Securable memory area protection enable This bit enables the protection on securable area, provided that a non-null securable memory area size (SEC_SIZE[4:0]) is defined in option bytes. This bit is possible to set only by software and to clear only through a system reset.
0x40022014 C   FIELD 30w01 OPTLOCK (rw): Options Lock This bit is set only. When set, all bits concerning user option in FLASH_CR register and so option page are locked. This bit is cleared by hardware after detecting the unlock sequence. The LOCK bit must be cleared before doing the unlock sequence for OPTLOCK bit. In case of an unsuccessful unlock operation, this bit remains set until the next reset.
0x40022014 C   FIELD 31w01 LOCK (rw): FLASH_CR Lock This bit is set only. When set, the FLASH_CR register is locked. It is cleared by hardware after detecting the unlock sequence. In case of an unsuccessful unlock operation, this bit remains set until the next system reset.
0x40022018 B  REGISTER FLASH_ECCR: FLASH ECC register
0x40022018 C   FIELD 00w14 ADDR_ECC (ro): ECC fail double-word address offset In case of ECC error or ECC correction detected, this bitfield contains double-word offset (multiple of 64 bits) to main Flash memory.
0x40022018 C   FIELD 20w01 SYSF_ECC (ro): System Flash memory ECC fail This bit indicates that the ECC error correction or double ECC error detection is located in the system Flash memory.
0x40022018 C   FIELD 24w01 ECCCIE (rw): ECC correction interrupt enable
0x40022018 C   FIELD 30w01 ECCC (rw): ECC correction Set by hardware when one ECC error has been detected and corrected. An interrupt is generated if ECCIE is set. Cleared by writing 1.
0x40022018 C   FIELD 31w01 ECCD (rw): ECC detection Set by hardware when two ECC errors have been detected. When this bit is set, a NMI is generated. Cleared by writing 1.
0x40022020 B  REGISTER FLASH_OPTR: FLASH option register
0x40022020 C   FIELD 00w08 RDP (rw): Read protection level Other: Level 1, memories read protection active
0x40022020 C   FIELD 08w03 BORR_LEV (rw): BOR reset level
0x40022020 C   FIELD 13w01 NRST_STOP (rw): Reset generated when entering Stop mode
0x40022020 C   FIELD 14w01 NRST_STDBY (rw): Reset generated when entering Standby mode
0x40022020 C   FIELD 15w01 NRST_SHDW (rw): Reset generated when entering Shutdown mode
0x40022020 C   FIELD 16w01 IWDG_SW (rw): Independent watchdog selection
0x40022020 C   FIELD 17w01 IWDG_STOP (rw): Independent watchdog counter freeze in Stop mode
0x40022020 C   FIELD 18w01 IWDG_STDBY (rw): Independent watchdog counter freeze in Standby mode
0x40022020 C   FIELD 19w01 WWDG_SW (rw): Window watchdog selection
0x40022020 C   FIELD 21w01 BDRST (rw): Backup domain reset
0x40022020 C   FIELD 22w01 RAM_PARITY_CHECK (rw): SRAM parity check control enable/disable
0x40022020 C   FIELD 23w01 BKPSRAM_HW_ERASE_DISABLE (rw): Backup SRAM erase prevention
0x40022020 C   FIELD 24w01 NBOOT_SEL (rw): BOOT0 signal source selection This option bit defines the source of the BOOT0 signal.
0x40022020 C   FIELD 25w01 NBOOT1 (rw): Boot configuration Together with the BOOT0 pin or option bit NBOOT0 (depending on NBOOT_SEL option bit configuration), this bit selects boot mode from the main flash memory, SRAM or the system memory. Refer to Section12.5: Boot configuration.
0x40022020 C   FIELD 26w01 NBOOT0 (rw): NBOOT0 option bit
0x40022020 C   FIELD 27w02 NRST_MODE (rw): NRST pin configuration
0x40022020 C   FIELD 29w01 IRHEN (rw): Internal reset holder enable bit
0x4002202C B  REGISTER FLASH_WRP1AR: FLASH WRP area A address register
0x4002202C C   FIELD 00w07 WRP1A_STRT (rw): WRP area A start offset This bitfield contains the offset of the first page of the WRP area A. Note: The number of effective bits depends on the size of the flash memory in the device.
0x4002202C C   FIELD 16w07 WRP1A_END (rw): WRP area A end offset This bitfield contains the offset of the last page of the WRP area A. Note: The number of effective bits depends on the size of the flash memory in the device.
0x40022030 B  REGISTER FLASH_WRP1BR: FLASH WRP area B address register
0x40022030 C   FIELD 00w07 WRP1B_STRT (rw): WRP area B start offset This bitfield contains the offset of the first page of the WRP area B. Note: The number of effective bits depends on the size of the flash memory in the device.
0x40022030 C   FIELD 16w07 WRP1B_END (rw): WRP area B end offset This bitfield contains the offset of the last page of the WRP area B. Note: The number of effective bits depends on the size of the flash memory in the device.
0x40022080 B  REGISTER FLASH_SECR: FLASH security register
0x40022080 C   FIELD 00w07 HDP1_PEND (rw): Last page of the first hide protection area
0x40022080 C   FIELD 16w01 BOOT_LOCK (rw): used to force boot from user area If the bit is set in association with RDP level 1, the debug capabilities are disabled, except in the case of a bad OBL (mismatch).
0x40022080 C   FIELD 24w08 HDP1EN (rw): Hide protection area enable
0x40023000 A PERIPHERAL CRC
0x40023000 B  REGISTER CRC_DR: CRC data register
0x40023000 C   FIELD 00w32 DR (rw): Data register bits This register is used to write new data to the CRC calculator. It holds the previous CRC calculation result when it is read. If the data size is less than 32 bits, the least significant bits are used to write/read the correct value.
0x40023004 B  REGISTER CRC_IDR: CRC independent data register
0x40023004 C   FIELD 00w32 IDR (rw): General-purpose 32-bit data register bits These bits can be used as a temporary storage location for four bytes. This register is not affected by CRC resets generated by the RESET bit in the CRC_CR register
0x40023008 B  REGISTER CRC_CR: CRC control register
0x40023008 C   FIELD 00w01 RESET (rw): RESET bit This bit is set by software to reset the CRC calculation unit and set the data register to the value stored in the CRC_INIT register. This bit can only be set, it is automatically cleared by hardware
0x40023008 C   FIELD 03w02 POLYSIZE (rw): Polynomial size These bits control the size of the polynomial.
0x40023008 C   FIELD 05w02 REV_IN (rw): Reverse input data This bitfield controls the reversal of the bit order of the input data
0x40023008 C   FIELD 07w02 REV_OUT (rw): Reverse output data This bitfield controls the reversal of the bit order of the output data.
0x40023008 C   FIELD 09w01 RTYPE_IN (rw): Reverse type input This bit controls the reversal granularity of the input data.
0x40023008 C   FIELD 10w01 RTYPE_OUT (rw): Reverse type output This bit controls the reversal granularity of the output data.
0x40023010 B  REGISTER CRC_INIT: CRC initial value
0x40023010 C   FIELD 00w32 CRC_INIT (rw): Programmable initial CRC value This register is used to write the CRC initial value.
0x40023014 B  REGISTER CRC_POL: CRC polynomial
0x40023014 C   FIELD 00w32 POL (rw): Programmable polynomial This register is used to write the coefficients of the polynomial to be used for CRC calculation. If the polynomial size is less than 32 bits, the least significant bits have to be used to program the correct value.
0x40024000 A PERIPHERAL TSC
0x40024000 B  REGISTER TSC_CR: TSC control register
0x40024000 C   FIELD 00w01 TSCE (rw): Touch sensing controller enable This bit is set and cleared by software to enable/disable the touch sensing controller. Note: When the touch sensing controller is disabled, TSC registers settings have no effect.
0x40024000 C   FIELD 01w01 START (rw): Start a new acquisition This bit is set by software to start a new acquisition. It is cleared by hardware as soon as the acquisition is complete or by software to cancel the ongoing acquisition.
0x40024000 C   FIELD 02w01 AM (rw): Acquisition mode This bit is set and cleared by software to select the acquisition mode. Note: This bit must not be modified when an acquisition is ongoing.
0x40024000 C   FIELD 03w01 SYNCPOL (rw): Synchronization pin polarity This bit is set and cleared by software to select the polarity of the synchronization input pin.
0x40024000 C   FIELD 04w01 IODEF (rw): I/O Default mode This bit is set and cleared by software. It defines the configuration of all the TSC I/Os when there is no ongoing acquisition. When there is an ongoing acquisition, it defines the configuration of all unused I/Os (not defined as sampling capacitor I/O or as channel I/O). Note: This bit must not be modified when an acquisition is ongoing.
0x40024000 C   FIELD 05w03 MCV (rw): Max count value These bits are set and cleared by software. They define the maximum number of charge transfer pulses that can be generated before a max count error is generated. Note: These bits must not be modified when an acquisition is ongoing.
0x40024000 C   FIELD 12w03 PGPSC (rw): Pulse generator prescaler These bits are set and cleared by software.They select the AHB clock divider used to generate the pulse generator clock (PGCLK). Note: These bits must not be modified when an acquisition is ongoing. Note: Some configurations are forbidden. Refer to the Section119.4.4: Charge transfer acquisition sequence for details.
0x40024000 C   FIELD 15w01 SSPSC (rw): Spread spectrum prescaler This bit is set and cleared by software. It selects the AHB clock divider used to generate the spread spectrum clock (SSCLK). Note: This bit must not be modified when an acquisition is ongoing.
0x40024000 C   FIELD 16w01 SSE (rw): Spread spectrum enable This bit is set and cleared by software to enable/disable the spread spectrum feature. Note: This bit must not be modified when an acquisition is ongoing.
0x40024000 C   FIELD 17w07 SSD (rw): Spread spectrum deviation These bits are set and cleared by software. They define the spread spectrum deviation which consists in adding a variable number of periods of the SSCLK clock to the charge transfer pulse high state. ... Note: These bits must not be modified when an acquisition is ongoing.
0x40024000 C   FIELD 24w04 CTPL (rw): Charge transfer pulse low These bits are set and cleared by software. They define the duration of the low state of the charge transfer pulse (transfer of charge from C<sub>X</sub> to C<sub>S</sub>). ... Note: These bits must not be modified when an acquisition is ongoing. Note: Some configurations are forbidden. Refer to the Section119.4.4: Charge transfer acquisition sequence for details.
0x40024000 C   FIELD 28w04 CTPH (rw): Charge transfer pulse high These bits are set and cleared by software. They define the duration of the high state of the charge transfer pulse (charge of C<sub>X</sub>). ... Note: These bits must not be modified when an acquisition is ongoing.
0x40024004 B  REGISTER TSC_IER: TSC interrupt enable register
0x40024004 C   FIELD 00w01 EOAIE (rw): End of acquisition interrupt enable This bit is set and cleared by software to enable/disable the end of acquisition interrupt.
0x40024004 C   FIELD 01w01 MCEIE (rw): Max count error interrupt enable This bit is set and cleared by software to enable/disable the max count error interrupt.
0x40024008 B  REGISTER TSC_ICR: TSC interrupt clear register
0x40024008 C   FIELD 00w01 EOAIC (rw): End of acquisition interrupt clear This bit is set by software to clear the end of acquisition flag and it is cleared by hardware when the flag is reset. Writing a 0 has no effect.
0x40024008 C   FIELD 01w01 MCEIC (rw): Max count error interrupt clear This bit is set by software to clear the max count error flag and it is cleared by hardware when the flag is reset. Writing a 0 has no effect.
0x4002400C B  REGISTER TSC_ISR: TSC interrupt status register
0x4002400C C   FIELD 00w01 EOAF (ro): End of acquisition flag This bit is set by hardware when the acquisition of all enabled group is complete (all GxS bits of all enabled analog I/O groups are set or when a max count error is detected). It is cleared by software writing 1 to the bit EOAIC of the TSC_ICR register.
0x4002400C C   FIELD 01w01 MCEF (ro): Max count error flag This bit is set by hardware as soon as an analog I/O group counter reaches the max count value specified. It is cleared by software writing 1 to the bit MCEIC of the TSC_ICR register.
0x40024010 B  REGISTER TSC_IOHCR: TSC I/O hysteresis control register
0x40024010 C   FIELD 00w01 G1_IO1 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 01w01 G1_IO2 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 02w01 G1_IO3 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 03w01 G1_IO4 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 04w01 G2_IO1 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 05w01 G2_IO2 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 06w01 G2_IO3 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 07w01 G2_IO4 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 08w01 G3_IO1 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 09w01 G3_IO2 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 10w01 G3_IO3 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 11w01 G3_IO4 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 12w01 G4_IO1 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 13w01 G4_IO2 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 14w01 G4_IO3 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 15w01 G4_IO4 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 16w01 G5_IO1 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 17w01 G5_IO2 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 18w01 G5_IO3 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 19w01 G5_IO4 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 20w01 G6_IO1 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 21w01 G6_IO2 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 22w01 G6_IO3 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 23w01 G6_IO4 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 24w01 G7_IO1 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 25w01 G7_IO2 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 26w01 G7_IO3 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024010 C   FIELD 27w01 G7_IO4 (rw): Gx_IOy Schmitt trigger hysteresis mode These bits are set and cleared by software to enable/disable the Gx_IOy Schmitt trigger hysteresis. Note: These bits control the I/O Schmitt trigger hysteresis whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 B  REGISTER TSC_IOASCR: TSC I/O analog switch control register
0x40024018 C   FIELD 00w01 G1_IO1 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 01w01 G1_IO2 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 02w01 G1_IO3 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 03w01 G1_IO4 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 04w01 G2_IO1 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 05w01 G2_IO2 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 06w01 G2_IO3 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 07w01 G2_IO4 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 08w01 G3_IO1 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 09w01 G3_IO2 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 10w01 G3_IO3 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 11w01 G3_IO4 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 12w01 G4_IO1 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 13w01 G4_IO2 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 14w01 G4_IO3 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 15w01 G4_IO4 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 16w01 G5_IO1 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 17w01 G5_IO2 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 18w01 G5_IO3 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 19w01 G5_IO4 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 20w01 G6_IO1 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 21w01 G6_IO2 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 22w01 G6_IO3 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 23w01 G6_IO4 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 24w01 G7_IO1 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 25w01 G7_IO2 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 26w01 G7_IO3 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024018 C   FIELD 27w01 G7_IO4 (rw): Gx_IOy analog switch enable These bits are set and cleared by software to enable/disable the Gx_IOy analog switch. Note: These bits control the I/O analog switch whatever the I/O control mode is (even if controlled by standard GPIO registers).
0x40024020 B  REGISTER TSC_IOSCR: TSC I/O sampling control register
0x40024020 C   FIELD 00w01 G1_IO1 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 01w01 G1_IO2 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 02w01 G1_IO3 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 03w01 G1_IO4 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 04w01 G2_IO1 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 05w01 G2_IO2 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 06w01 G2_IO3 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 07w01 G2_IO4 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 08w01 G3_IO1 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 09w01 G3_IO2 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 10w01 G3_IO3 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 11w01 G3_IO4 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 12w01 G4_IO1 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 13w01 G4_IO2 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 14w01 G4_IO3 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 15w01 G4_IO4 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 16w01 G5_IO1 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 17w01 G5_IO2 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 18w01 G5_IO3 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 19w01 G5_IO4 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 20w01 G6_IO1 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 21w01 G6_IO2 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 22w01 G6_IO3 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 23w01 G6_IO4 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 24w01 G7_IO1 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 25w01 G7_IO2 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 26w01 G7_IO3 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024020 C   FIELD 27w01 G7_IO4 (rw): Gx_IOy sampling mode These bits are set and cleared by software to configure the Gx_IOy as a sampling capacitor I/O. Only one I/O per analog I/O group must be defined as sampling capacitor. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOSCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 B  REGISTER TSC_IOCCR: TSC I/O channel control register
0x40024028 C   FIELD 00w01 G1_IO1 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 01w01 G1_IO2 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 02w01 G1_IO3 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 03w01 G1_IO4 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 04w01 G2_IO1 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 05w01 G2_IO2 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 06w01 G2_IO3 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 07w01 G2_IO4 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 08w01 G3_IO1 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 09w01 G3_IO2 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 10w01 G3_IO3 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 11w01 G3_IO4 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 12w01 G4_IO1 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 13w01 G4_IO2 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 14w01 G4_IO3 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 15w01 G4_IO4 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 16w01 G5_IO1 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 17w01 G5_IO2 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 18w01 G5_IO3 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 19w01 G5_IO4 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 20w01 G6_IO1 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 21w01 G6_IO2 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 22w01 G6_IO3 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 23w01 G6_IO4 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 24w01 G7_IO1 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 25w01 G7_IO2 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 26w01 G7_IO3 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024028 C   FIELD 27w01 G7_IO4 (rw): Gx_IOy channel mode These bits are set and cleared by software to configure the Gx_IOy as a channel I/O. Note: These bits must not be modified when an acquisition is ongoing. Note: During the acquisition phase and even if the TSC peripheral alternate function is not enabled, as soon as the TSC_IOCCR bit is set, the corresponding GPIO analog switch is automatically controlled by the touch sensing controller.
0x40024030 B  REGISTER TSC_IOGCSR: TSC I/O group control status register
0x40024030 C   FIELD 00w01 G1E (rw): Analog I/O group x enable These bits are set and cleared by software to enable/disable the acquisition (counter is counting) on the corresponding analog I/O group x.
0x40024030 C   FIELD 01w01 G2E (rw): Analog I/O group x enable These bits are set and cleared by software to enable/disable the acquisition (counter is counting) on the corresponding analog I/O group x.
0x40024030 C   FIELD 02w01 G3E (rw): Analog I/O group x enable These bits are set and cleared by software to enable/disable the acquisition (counter is counting) on the corresponding analog I/O group x.
0x40024030 C   FIELD 03w01 G4E (rw): Analog I/O group x enable These bits are set and cleared by software to enable/disable the acquisition (counter is counting) on the corresponding analog I/O group x.
0x40024030 C   FIELD 04w01 G5E (rw): Analog I/O group x enable These bits are set and cleared by software to enable/disable the acquisition (counter is counting) on the corresponding analog I/O group x.
0x40024030 C   FIELD 05w01 G6E (rw): Analog I/O group x enable These bits are set and cleared by software to enable/disable the acquisition (counter is counting) on the corresponding analog I/O group x.
0x40024030 C   FIELD 06w01 G7E (rw): Analog I/O group x enable These bits are set and cleared by software to enable/disable the acquisition (counter is counting) on the corresponding analog I/O group x.
0x40024030 C   FIELD 16w01 G1S (ro): Analog I/O group x status These bits are set by hardware when the acquisition on the corresponding enabled analog I/O group x is complete. They are cleared by hardware when a new acquisition is started. Note: When a max count error is detected the remaining GxS bits of the enabled analog I/O groups are not set.
0x40024030 C   FIELD 17w01 G2S (ro): Analog I/O group x status These bits are set by hardware when the acquisition on the corresponding enabled analog I/O group x is complete. They are cleared by hardware when a new acquisition is started. Note: When a max count error is detected the remaining GxS bits of the enabled analog I/O groups are not set.
0x40024030 C   FIELD 18w01 G3S (ro): Analog I/O group x status These bits are set by hardware when the acquisition on the corresponding enabled analog I/O group x is complete. They are cleared by hardware when a new acquisition is started. Note: When a max count error is detected the remaining GxS bits of the enabled analog I/O groups are not set.
0x40024030 C   FIELD 19w01 G4S (ro): Analog I/O group x status These bits are set by hardware when the acquisition on the corresponding enabled analog I/O group x is complete. They are cleared by hardware when a new acquisition is started. Note: When a max count error is detected the remaining GxS bits of the enabled analog I/O groups are not set.
0x40024030 C   FIELD 20w01 G5S (ro): Analog I/O group x status These bits are set by hardware when the acquisition on the corresponding enabled analog I/O group x is complete. They are cleared by hardware when a new acquisition is started. Note: When a max count error is detected the remaining GxS bits of the enabled analog I/O groups are not set.
0x40024030 C   FIELD 21w01 G6S (ro): Analog I/O group x status These bits are set by hardware when the acquisition on the corresponding enabled analog I/O group x is complete. They are cleared by hardware when a new acquisition is started. Note: When a max count error is detected the remaining GxS bits of the enabled analog I/O groups are not set.
0x40024030 C   FIELD 22w01 G7S (ro): Analog I/O group x status These bits are set by hardware when the acquisition on the corresponding enabled analog I/O group x is complete. They are cleared by hardware when a new acquisition is started. Note: When a max count error is detected the remaining GxS bits of the enabled analog I/O groups are not set.
0x40024034 B  REGISTER TSC_IOG1CR: TSC I/O group 1 counter register
0x40024034 C   FIELD 00w14 CNT (ro): Counter value These bits represent the number of charge transfer cycles generated on the analog I/O group x to complete its acquisition (voltage across C<sub>S</sub> has reached the threshold).
0x40024038 B  REGISTER TSC_IOG2CR: TSC I/O group 2 counter register
0x40024038 C   FIELD 00w14 CNT (ro): Counter value These bits represent the number of charge transfer cycles generated on the analog I/O group x to complete its acquisition (voltage across C<sub>S</sub> has reached the threshold).
0x4002403C B  REGISTER TSC_IOG3CR: TSC I/O group 3 counter register
0x4002403C C   FIELD 00w14 CNT (ro): Counter value These bits represent the number of charge transfer cycles generated on the analog I/O group x to complete its acquisition (voltage across C<sub>S</sub> has reached the threshold).
0x40024040 B  REGISTER TSC_IOG4CR: TSC I/O group 4 counter register
0x40024040 C   FIELD 00w14 CNT (ro): Counter value These bits represent the number of charge transfer cycles generated on the analog I/O group x to complete its acquisition (voltage across C<sub>S</sub> has reached the threshold).
0x40024044 B  REGISTER TSC_IOG5CR: TSC I/O group 5 counter register
0x40024044 C   FIELD 00w14 CNT (ro): Counter value These bits represent the number of charge transfer cycles generated on the analog I/O group x to complete its acquisition (voltage across C<sub>S</sub> has reached the threshold).
0x40024048 B  REGISTER TSC_IOG6CR: TSC I/O group 6 counter register
0x40024048 C   FIELD 00w14 CNT (ro): Counter value These bits represent the number of charge transfer cycles generated on the analog I/O group x to complete its acquisition (voltage across C<sub>S</sub> has reached the threshold).
0x4002404C B  REGISTER TSC_IOG7CR: TSC I/O group 7 counter register
0x4002404C C   FIELD 00w14 CNT (ro): Counter value These bits represent the number of charge transfer cycles generated on the analog I/O group x to complete its acquisition (voltage across C<sub>S</sub> has reached the threshold).
0x40025000 A PERIPHERAL RNG
0x40025000 B  REGISTER RNG_CR: RNG control register
0x40025000 C   FIELD 02w01 RNGEN (rw): True random number generator enable
0x40025000 C   FIELD 03w01 IE (rw): Interrupt enable
0x40025000 C   FIELD 05w01 CED (rw): Clock error detection The clock error detection cannot be enabled nor disabled on-the-fly when the RNG is enabled, that is to enable or disable CED, the RNG must be disabled. Writing this bit is taken into account only if the CONDRST bit is set to 1 in the same access, while CONFIGLOCK remains at 0. Writing to this bit is ignored if CONFIGLOCK1=11.
0x40025000 C   FIELD 07w01 ARDIS (rw): Auto reset disable When auto-reset is enabled the application still need to clear the SEIS bit after a noise source error. Writing this bit is taken into account only if CONDRST bit is set to 1 in the same access, while CONFIGLOCK remains at 0. Writing to this bit is ignored if CONFIGLOCK1=11.
0x40025000 C   FIELD 08w04 RNG_CONFIG3 (rw): RNG configuration 3 Reserved to the RNG configuration (bitfield 3). Refer to RNG_CONFIG1 bitfield for details. If the NISTC bit is cleared in this register RNG_CONFIG3 bitfield values are ignored by RNG.
0x40025000 C   FIELD 12w01 NISTC (rw): NIST custom two conditioning loops are performed and 256 bits of noise source are used. Writing this bit is taken into account only if CONDRST bit is set to 1 in the same access, while CONFIGLOCK remains at 0. Writing to this bit is ignored if CONFIGLOCK1=11.
0x40025000 C   FIELD 13w03 RNG_CONFIG2 (rw): RNG configuration 2 Reserved to the RNG configuration (bitfield 2). Bit 13 can be set when RNG power consumption is critical. See Section120.3.8: RNG low-power use. Refer to the RNG_CONFIG1 bitfield for details.
0x40025000 C   FIELD 16w04 CLKDIV (rw): Clock divider factor This value used to configure an internal programmable divider (from 1 to 16) acting on the incoming RNG clock. These bits can be written only when the core is disabled (RNGEN1=10). ... Writing these bits is taken into account only if the CONDRST bit is set to 1 in the same access, while CONFIGLOCK remains at 0. Writing to this bit is ignored if CONFIGLOCK1=11.
0x40025000 C   FIELD 20w06 RNG_CONFIG1 (rw): RNG configuration 1 Reserved to the RNG configuration (bitfield 1). Must be initialized using the recommended value documented in Section120.6: RNG entropy source validation. Writing any bit of RNG_CONFIG1 is taken into account only if the CONDRST bit is set to 1 in the same access, while CONFIGLOCK remains at 0. Writing to this bit is ignored if CONFIGLOCK1=11.
0x40025000 C   FIELD 30w01 CONDRST (rw): Conditioning soft reset Write 1 and then write 0 to reset the conditioning logic, clear all the FIFOs and start a new RNG initialization process, with RNG_SR cleared. Registers RNG_CR and RNG_HTCR are not changed by CONDRST. This bit must be set to 1 in the same access that set any configuration bits [29:4]. In other words, when CONDRST bit is set to 1 correct configuration in bits [29:4] must also be written. When CONDRST is set to 0 by the software, its value goes to 0 when the reset process is done. It takes about 2 AHB clock cycles + 2 RNG clock cycles.
0x40025000 C   FIELD 31w01 CONFIGLOCK (rw): RNG Config lock This bitfield is set once: if this bit is set it can only be reset to 0 if RNG is reset.
0x40025004 B  REGISTER RNG_SR: RNG status register
0x40025004 C   FIELD 00w01 DRDY (ro): Data ready Once the output buffer becomes empty (after reading the RNG_DR register), this bit returns to 0 until a new random value is generated. Note: The DRDY bit can rise when the peripheral is disabled (RNGEN1=10 in the RNG_CR register). If IE=1 in the RNG_CR register, an interrupt is generated when DRDY1=11.
0x40025004 C   FIELD 01w01 CECS (ro): Clock error current status Note: CECS bit is valid only if the CED bit in the RNG_CR register is set to 0.
0x40025004 C   FIELD 02w01 SECS (ro): Seed error current status Runtime repetition count test failed (noise source has provided more than 24 consecutive bits at a constant value 0 or 1, or more than 32 consecutive occurrence of two bits patterns 01 or 10) Startup or continuous adaptive proportion test on noise source failed. Startup post-processing/conditioning sanity check failed.
0x40025004 C   FIELD 05w01 CEIS (rw): Clock error interrupt status This bit is set at the same time as CECS. It is cleared by writing 0. Writing 1 has no effect. An interrupt is pending if IE = 1 in the RNG_CR register.
0x40025004 C   FIELD 06w01 SEIS (rw): Seed error interrupt status This bit is set at the same time as SECS. It is cleared by writing 0 (unless CONDRST is used). Writing 1 has no effect. An interrupt is pending if IE = 1 in the RNG_CR register.
0x40025008 B  REGISTER RNG_DR: RNG data register
0x40025008 C   FIELD 00w32 RNDATA (ro): Random data 32-bit random data, which are valid when DRDY1=11. When DRDY1=10, the RNDATA value is1zero. When DRDY is set, it is recommended to always verify that RNG_DR is different from zero. Because when it is the case a seed error occurred between RNG_SR polling and RND_DR output reading (rare event).
0x40025010 B  REGISTER RNG_HTCR: RNG health test control register
0x40025010 C   FIELD 00w32 HTCFG (rw): health test configuration This configuration is used by RNG to configure the health tests. See Section120.6: RNG entropy source validation for the recommended value. Note: The RNG behavior, including the read to this register, is not guaranteed if a different value from the recommended value is written.
0x50000000 A PERIPHERAL GPIOA
0x50000000 B  REGISTER MODER: GPIO port mode register
0x50000000 C   FIELD 00w02 MODE0 (rw): Port x configuration pin 0
0x50000000 C   FIELD 02w02 MODE1 (rw): Port x configuration pin 1
0x50000000 C   FIELD 04w02 MODE2 (rw): Port x configuration pin 2
0x50000000 C   FIELD 06w02 MODE3 (rw): Port x configuration pin 3
0x50000000 C   FIELD 08w02 MODE4 (rw): Port x configuration pin 4
0x50000000 C   FIELD 10w02 MODE5 (rw): Port x configuration pin 5
0x50000000 C   FIELD 12w02 MODE6 (rw): Port x configuration pin 6
0x50000000 C   FIELD 14w02 MODE7 (rw): Port x configuration pin 7
0x50000000 C   FIELD 16w02 MODE8 (rw): Port x configuration pin 8
0x50000000 C   FIELD 18w02 MODE9 (rw): Port x configuration pin 9
0x50000000 C   FIELD 20w02 MODE10 (rw): Port x configuration pin 10
0x50000000 C   FIELD 22w02 MODE11 (rw): Port x configuration pin 11
0x50000000 C   FIELD 24w02 MODE12 (rw): Port x configuration pin 12
0x50000000 C   FIELD 26w02 MODE13 (rw): Port x configuration pin 13
0x50000000 C   FIELD 28w02 MODE14 (rw): Port x configuration pin 14
0x50000000 C   FIELD 30w02 MODE15 (rw): Port x configuration pin 15
0x50000004 B  REGISTER OTYPER: GPIO port output type register
0x50000004 C   FIELD 00w01 OT0 (rw): Port x configuration pin 0
0x50000004 C   FIELD 01w01 OT1 (rw): Port x configuration pin 1
0x50000004 C   FIELD 02w01 OT2 (rw): Port x configuration pin 2
0x50000004 C   FIELD 03w01 OT3 (rw): Port x configuration pin 3
0x50000004 C   FIELD 04w01 OT4 (rw): Port x configuration pin 4
0x50000004 C   FIELD 05w01 OT5 (rw): Port x configuration pin 5
0x50000004 C   FIELD 06w01 OT6 (rw): Port x configuration pin 6
0x50000004 C   FIELD 07w01 OT7 (rw): Port x configuration pin 7
0x50000004 C   FIELD 08w01 OT8 (rw): Port x configuration pin 8
0x50000004 C   FIELD 09w01 OT9 (rw): Port x configuration pin 9
0x50000004 C   FIELD 10w01 OT10 (rw): Port x configuration pin 10
0x50000004 C   FIELD 11w01 OT11 (rw): Port x configuration pin 11
0x50000004 C   FIELD 12w01 OT12 (rw): Port x configuration pin 12
0x50000004 C   FIELD 13w01 OT13 (rw): Port x configuration pin 13
0x50000004 C   FIELD 14w01 OT14 (rw): Port x configuration pin 14
0x50000004 C   FIELD 15w01 OT15 (rw): Port x configuration pin 15
0x50000008 B  REGISTER OSPEEDR: GPIO port output speed register
0x50000008 C   FIELD 00w02 OSPEED0 (rw): Port x configuration pin 0
0x50000008 C   FIELD 02w02 OSPEED1 (rw): Port x configuration pin 1
0x50000008 C   FIELD 04w02 OSPEED2 (rw): Port x configuration pin 2
0x50000008 C   FIELD 06w02 OSPEED3 (rw): Port x configuration pin 3
0x50000008 C   FIELD 08w02 OSPEED4 (rw): Port x configuration pin 4
0x50000008 C   FIELD 10w02 OSPEED5 (rw): Port x configuration pin 5
0x50000008 C   FIELD 12w02 OSPEED6 (rw): Port x configuration pin 6
0x50000008 C   FIELD 14w02 OSPEED7 (rw): Port x configuration pin 7
0x50000008 C   FIELD 16w02 OSPEED8 (rw): Port x configuration pin 8
0x50000008 C   FIELD 18w02 OSPEED9 (rw): Port x configuration pin 9
0x50000008 C   FIELD 20w02 OSPEED10 (rw): Port x configuration pin 10
0x50000008 C   FIELD 22w02 OSPEED11 (rw): Port x configuration pin 11
0x50000008 C   FIELD 24w02 OSPEED12 (rw): Port x configuration pin 12
0x50000008 C   FIELD 26w02 OSPEED13 (rw): Port x configuration pin 13
0x50000008 C   FIELD 28w02 OSPEED14 (rw): Port x configuration pin 14
0x50000008 C   FIELD 30w02 OSPEED15 (rw): Port x configuration pin 15
0x5000000C B  REGISTER PUPDR: GPIO port pull-up/pull-down register
0x5000000C C   FIELD 00w02 PUPD0 (rw): Port x configuration pin 0
0x5000000C C   FIELD 02w02 PUPD1 (rw): Port x configuration pin 1
0x5000000C C   FIELD 04w02 PUPD2 (rw): Port x configuration pin 2
0x5000000C C   FIELD 06w02 PUPD3 (rw): Port x configuration pin 3
0x5000000C C   FIELD 08w02 PUPD4 (rw): Port x configuration pin 4
0x5000000C C   FIELD 10w02 PUPD5 (rw): Port x configuration pin 5
0x5000000C C   FIELD 12w02 PUPD6 (rw): Port x configuration pin 6
0x5000000C C   FIELD 14w02 PUPD7 (rw): Port x configuration pin 7
0x5000000C C   FIELD 16w02 PUPD8 (rw): Port x configuration pin 8
0x5000000C C   FIELD 18w02 PUPD9 (rw): Port x configuration pin 9
0x5000000C C   FIELD 20w02 PUPD10 (rw): Port x configuration pin 10
0x5000000C C   FIELD 22w02 PUPD11 (rw): Port x configuration pin 11
0x5000000C C   FIELD 24w02 PUPD12 (rw): Port x configuration pin 12
0x5000000C C   FIELD 26w02 PUPD13 (rw): Port x configuration pin 13
0x5000000C C   FIELD 28w02 PUPD14 (rw): Port x configuration pin 14
0x5000000C C   FIELD 30w02 PUPD15 (rw): Port x configuration pin 15
0x50000010 B  REGISTER IDR: GPIO port input data register
0x50000010 C   FIELD 00w01 ID0 (ro): Port input data pin 0
0x50000010 C   FIELD 01w01 ID1 (ro): Port input data pin 1
0x50000010 C   FIELD 02w01 ID2 (ro): Port input data pin 2
0x50000010 C   FIELD 03w01 ID3 (ro): Port input data pin 3
0x50000010 C   FIELD 04w01 ID4 (ro): Port input data pin 4
0x50000010 C   FIELD 05w01 ID5 (ro): Port input data pin 5
0x50000010 C   FIELD 06w01 ID6 (ro): Port input data pin 6
0x50000010 C   FIELD 07w01 ID7 (ro): Port input data pin 7
0x50000010 C   FIELD 08w01 ID8 (ro): Port input data pin 8
0x50000010 C   FIELD 09w01 ID9 (ro): Port input data pin 9
0x50000010 C   FIELD 10w01 ID10 (ro): Port input data pin 10
0x50000010 C   FIELD 11w01 ID11 (ro): Port input data pin 11
0x50000010 C   FIELD 12w01 ID12 (ro): Port input data pin 12
0x50000010 C   FIELD 13w01 ID13 (ro): Port input data pin 13
0x50000010 C   FIELD 14w01 ID14 (ro): Port input data pin 14
0x50000010 C   FIELD 15w01 ID15 (ro): Port input data pin 15
0x50000014 B  REGISTER ODR: GPIO port output data register
0x50000014 C   FIELD 00w01 OD0 (rw): Port output data pin 0
0x50000014 C   FIELD 01w01 OD1 (rw): Port output data pin 1
0x50000014 C   FIELD 02w01 OD2 (rw): Port output data pin 2
0x50000014 C   FIELD 03w01 OD3 (rw): Port output data pin 3
0x50000014 C   FIELD 04w01 OD4 (rw): Port output data pin 4
0x50000014 C   FIELD 05w01 OD5 (rw): Port output data pin 5
0x50000014 C   FIELD 06w01 OD6 (rw): Port output data pin 6
0x50000014 C   FIELD 07w01 OD7 (rw): Port output data pin 7
0x50000014 C   FIELD 08w01 OD8 (rw): Port output data pin 8
0x50000014 C   FIELD 09w01 OD9 (rw): Port output data pin 9
0x50000014 C   FIELD 10w01 OD10 (rw): Port output data pin 10
0x50000014 C   FIELD 11w01 OD11 (rw): Port output data pin 11
0x50000014 C   FIELD 12w01 OD12 (rw): Port output data pin 12
0x50000014 C   FIELD 13w01 OD13 (rw): Port output data pin 13
0x50000014 C   FIELD 14w01 OD14 (rw): Port output data pin 14
0x50000014 C   FIELD 15w01 OD15 (rw): Port output data pin 15
0x50000018 B  REGISTER BSRR: GPIO port bit set/reset register
0x50000018 C   FIELD 00w01 BS0 (wo): Port x set pin 0
0x50000018 C   FIELD 01w01 BS1 (wo): Port x set pin 1
0x50000018 C   FIELD 02w01 BS2 (wo): Port x set pin 2
0x50000018 C   FIELD 03w01 BS3 (wo): Port x set pin 3
0x50000018 C   FIELD 04w01 BS4 (wo): Port x set pin 4
0x50000018 C   FIELD 05w01 BS5 (wo): Port x set pin 5
0x50000018 C   FIELD 06w01 BS6 (wo): Port x set pin 6
0x50000018 C   FIELD 07w01 BS7 (wo): Port x set pin 7
0x50000018 C   FIELD 08w01 BS8 (wo): Port x set pin 8
0x50000018 C   FIELD 09w01 BS9 (wo): Port x set pin 9
0x50000018 C   FIELD 10w01 BS10 (wo): Port x set pin 10
0x50000018 C   FIELD 11w01 BS11 (wo): Port x set pin 11
0x50000018 C   FIELD 12w01 BS12 (wo): Port x set pin 12
0x50000018 C   FIELD 13w01 BS13 (wo): Port x set pin 13
0x50000018 C   FIELD 14w01 BS14 (wo): Port x set pin 14
0x50000018 C   FIELD 15w01 BS15 (wo): Port x set pin 15
0x50000018 C   FIELD 16w01 BR0 (wo): Port x reset pin 0
0x50000018 C   FIELD 17w01 BR1 (wo): Port x reset pin 1
0x50000018 C   FIELD 18w01 BR2 (wo): Port x reset pin 2
0x50000018 C   FIELD 19w01 BR3 (wo): Port x reset pin 3
0x50000018 C   FIELD 20w01 BR4 (wo): Port x reset pin 4
0x50000018 C   FIELD 21w01 BR5 (wo): Port x reset pin 5
0x50000018 C   FIELD 22w01 BR6 (wo): Port x reset pin 6
0x50000018 C   FIELD 23w01 BR7 (wo): Port x reset pin 7
0x50000018 C   FIELD 24w01 BR8 (wo): Port x reset pin 8
0x50000018 C   FIELD 25w01 BR9 (wo): Port x reset pin 9
0x50000018 C   FIELD 26w01 BR10 (wo): Port x reset pin 10
0x50000018 C   FIELD 27w01 BR11 (wo): Port x reset pin 11
0x50000018 C   FIELD 28w01 BR12 (wo): Port x reset pin 12
0x50000018 C   FIELD 29w01 BR13 (wo): Port x reset pin 13
0x50000018 C   FIELD 30w01 BR14 (wo): Port x reset pin 14
0x50000018 C   FIELD 31w01 BR15 (wo): Port x reset pin 15
0x5000001C B  REGISTER LCKR: GPIO port configuration lock register
0x5000001C C   FIELD 00w01 LCK0 (rw): Port x lock pin 0
0x5000001C C   FIELD 01w01 LCK1 (rw): Port x lock pin 1
0x5000001C C   FIELD 02w01 LCK2 (rw): Port x lock pin 2
0x5000001C C   FIELD 03w01 LCK3 (rw): Port x lock pin 3
0x5000001C C   FIELD 04w01 LCK4 (rw): Port x lock pin 4
0x5000001C C   FIELD 05w01 LCK5 (rw): Port x lock pin 5
0x5000001C C   FIELD 06w01 LCK6 (rw): Port x lock pin 6
0x5000001C C   FIELD 07w01 LCK7 (rw): Port x lock pin 7
0x5000001C C   FIELD 08w01 LCK8 (rw): Port x lock pin 8
0x5000001C C   FIELD 09w01 LCK9 (rw): Port x lock pin 9
0x5000001C C   FIELD 10w01 LCK10 (rw): Port x lock pin 10
0x5000001C C   FIELD 11w01 LCK11 (rw): Port x lock pin 11
0x5000001C C   FIELD 12w01 LCK12 (rw): Port x lock pin 12
0x5000001C C   FIELD 13w01 LCK13 (rw): Port x lock pin 13
0x5000001C C   FIELD 14w01 LCK14 (rw): Port x lock pin 14
0x5000001C C   FIELD 15w01 LCK15 (rw): Port x lock pin 15
0x5000001C C   FIELD 16w01 LCKK (rw): Lock key This bit can be read any time. It can only be modified using the lock key write sequence. LOCK key write sequence: WR LCKR[16] = 1 + LCKR[15:0] WR LCKR[16] = 0 + LCKR[15:0] WR LCKR[16] = 1 + LCKR[15:0] RD LCKR RD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active) Note: During the LOCK key write sequence, the value of LCK[15:0] must not change. Note: Any error in the lock sequence aborts the lock. Note: After the first lock sequence on any bit of the port, any read access on the LCKK bit returns 1 until the next MCU reset or peripheral reset.
0x50000020 B  REGISTER AFRL: GPIO alternate function low register
0x50000020 C   FIELD 00w04 AFREL0 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000020 C   FIELD 04w04 AFREL1 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000020 C   FIELD 08w04 AFREL2 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000020 C   FIELD 12w04 AFREL3 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000020 C   FIELD 16w04 AFREL4 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000020 C   FIELD 20w04 AFREL5 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000020 C   FIELD 24w04 AFREL6 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000020 C   FIELD 28w04 AFREL7 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000024 B  REGISTER AFRH: GPIO alternate function high register
0x50000024 C   FIELD 00w04 AFREL8 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000024 C   FIELD 04w04 AFREL9 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000024 C   FIELD 08w04 AFREL10 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000024 C   FIELD 12w04 AFREL11 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000024 C   FIELD 16w04 AFREL12 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000024 C   FIELD 20w04 AFREL13 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000024 C   FIELD 24w04 AFREL14 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000024 C   FIELD 28w04 AFREL15 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000028 B  REGISTER BRR: GPIO port bit reset register
0x50000028 C   FIELD 00w01 BR0 (wo): Port x reset pin 0
0x50000028 C   FIELD 01w01 BR1 (wo): Port x reset pin 1
0x50000028 C   FIELD 02w01 BR2 (wo): Port x reset pin 2
0x50000028 C   FIELD 03w01 BR3 (wo): Port x reset pin 3
0x50000028 C   FIELD 04w01 BR4 (wo): Port x reset pin 4
0x50000028 C   FIELD 05w01 BR5 (wo): Port x reset pin 5
0x50000028 C   FIELD 06w01 BR6 (wo): Port x reset pin 6
0x50000028 C   FIELD 07w01 BR7 (wo): Port x reset pin 7
0x50000028 C   FIELD 08w01 BR8 (wo): Port x reset pin 8
0x50000028 C   FIELD 09w01 BR9 (wo): Port x reset pin 9
0x50000028 C   FIELD 10w01 BR10 (wo): Port x reset pin 10
0x50000028 C   FIELD 11w01 BR11 (wo): Port x reset pin 11
0x50000028 C   FIELD 12w01 BR12 (wo): Port x reset pin 12
0x50000028 C   FIELD 13w01 BR13 (wo): Port x reset pin 13
0x50000028 C   FIELD 14w01 BR14 (wo): Port x reset pin 14
0x50000028 C   FIELD 15w01 BR15 (wo): Port x reset pin 15
0x50000400 A PERIPHERAL GPIOB
0x50000400 B  REGISTER MODER: GPIO port mode register
0x50000400 C   FIELD 00w02 MODE0 (rw): Port x configuration pin 0
0x50000400 C   FIELD 02w02 MODE1 (rw): Port x configuration pin 1
0x50000400 C   FIELD 04w02 MODE2 (rw): Port x configuration pin 2
0x50000400 C   FIELD 06w02 MODE3 (rw): Port x configuration pin 3
0x50000400 C   FIELD 08w02 MODE4 (rw): Port x configuration pin 4
0x50000400 C   FIELD 10w02 MODE5 (rw): Port x configuration pin 5
0x50000400 C   FIELD 12w02 MODE6 (rw): Port x configuration pin 6
0x50000400 C   FIELD 14w02 MODE7 (rw): Port x configuration pin 7
0x50000400 C   FIELD 16w02 MODE8 (rw): Port x configuration pin 8
0x50000400 C   FIELD 18w02 MODE9 (rw): Port x configuration pin 9
0x50000400 C   FIELD 20w02 MODE10 (rw): Port x configuration pin 10
0x50000400 C   FIELD 22w02 MODE11 (rw): Port x configuration pin 11
0x50000400 C   FIELD 24w02 MODE12 (rw): Port x configuration pin 12
0x50000400 C   FIELD 26w02 MODE13 (rw): Port x configuration pin 13
0x50000400 C   FIELD 28w02 MODE14 (rw): Port x configuration pin 14
0x50000400 C   FIELD 30w02 MODE15 (rw): Port x configuration pin 15
0x50000404 B  REGISTER OTYPER: GPIO port output type register
0x50000404 C   FIELD 00w01 OT0 (rw): Port x configuration pin 0
0x50000404 C   FIELD 01w01 OT1 (rw): Port x configuration pin 1
0x50000404 C   FIELD 02w01 OT2 (rw): Port x configuration pin 2
0x50000404 C   FIELD 03w01 OT3 (rw): Port x configuration pin 3
0x50000404 C   FIELD 04w01 OT4 (rw): Port x configuration pin 4
0x50000404 C   FIELD 05w01 OT5 (rw): Port x configuration pin 5
0x50000404 C   FIELD 06w01 OT6 (rw): Port x configuration pin 6
0x50000404 C   FIELD 07w01 OT7 (rw): Port x configuration pin 7
0x50000404 C   FIELD 08w01 OT8 (rw): Port x configuration pin 8
0x50000404 C   FIELD 09w01 OT9 (rw): Port x configuration pin 9
0x50000404 C   FIELD 10w01 OT10 (rw): Port x configuration pin 10
0x50000404 C   FIELD 11w01 OT11 (rw): Port x configuration pin 11
0x50000404 C   FIELD 12w01 OT12 (rw): Port x configuration pin 12
0x50000404 C   FIELD 13w01 OT13 (rw): Port x configuration pin 13
0x50000404 C   FIELD 14w01 OT14 (rw): Port x configuration pin 14
0x50000404 C   FIELD 15w01 OT15 (rw): Port x configuration pin 15
0x50000408 B  REGISTER OSPEEDR: GPIO port output speed register
0x50000408 C   FIELD 00w02 OSPEED0 (rw): Port x configuration pin 0
0x50000408 C   FIELD 02w02 OSPEED1 (rw): Port x configuration pin 1
0x50000408 C   FIELD 04w02 OSPEED2 (rw): Port x configuration pin 2
0x50000408 C   FIELD 06w02 OSPEED3 (rw): Port x configuration pin 3
0x50000408 C   FIELD 08w02 OSPEED4 (rw): Port x configuration pin 4
0x50000408 C   FIELD 10w02 OSPEED5 (rw): Port x configuration pin 5
0x50000408 C   FIELD 12w02 OSPEED6 (rw): Port x configuration pin 6
0x50000408 C   FIELD 14w02 OSPEED7 (rw): Port x configuration pin 7
0x50000408 C   FIELD 16w02 OSPEED8 (rw): Port x configuration pin 8
0x50000408 C   FIELD 18w02 OSPEED9 (rw): Port x configuration pin 9
0x50000408 C   FIELD 20w02 OSPEED10 (rw): Port x configuration pin 10
0x50000408 C   FIELD 22w02 OSPEED11 (rw): Port x configuration pin 11
0x50000408 C   FIELD 24w02 OSPEED12 (rw): Port x configuration pin 12
0x50000408 C   FIELD 26w02 OSPEED13 (rw): Port x configuration pin 13
0x50000408 C   FIELD 28w02 OSPEED14 (rw): Port x configuration pin 14
0x50000408 C   FIELD 30w02 OSPEED15 (rw): Port x configuration pin 15
0x5000040C B  REGISTER PUPDR: GPIO port pull-up/pull-down register
0x5000040C C   FIELD 00w02 PUPD0 (rw): Port x configuration pin 0
0x5000040C C   FIELD 02w02 PUPD1 (rw): Port x configuration pin 1
0x5000040C C   FIELD 04w02 PUPD2 (rw): Port x configuration pin 2
0x5000040C C   FIELD 06w02 PUPD3 (rw): Port x configuration pin 3
0x5000040C C   FIELD 08w02 PUPD4 (rw): Port x configuration pin 4
0x5000040C C   FIELD 10w02 PUPD5 (rw): Port x configuration pin 5
0x5000040C C   FIELD 12w02 PUPD6 (rw): Port x configuration pin 6
0x5000040C C   FIELD 14w02 PUPD7 (rw): Port x configuration pin 7
0x5000040C C   FIELD 16w02 PUPD8 (rw): Port x configuration pin 8
0x5000040C C   FIELD 18w02 PUPD9 (rw): Port x configuration pin 9
0x5000040C C   FIELD 20w02 PUPD10 (rw): Port x configuration pin 10
0x5000040C C   FIELD 22w02 PUPD11 (rw): Port x configuration pin 11
0x5000040C C   FIELD 24w02 PUPD12 (rw): Port x configuration pin 12
0x5000040C C   FIELD 26w02 PUPD13 (rw): Port x configuration pin 13
0x5000040C C   FIELD 28w02 PUPD14 (rw): Port x configuration pin 14
0x5000040C C   FIELD 30w02 PUPD15 (rw): Port x configuration pin 15
0x50000410 B  REGISTER IDR: GPIO port input data register
0x50000410 C   FIELD 00w01 ID0 (ro): Port input data pin 0
0x50000410 C   FIELD 01w01 ID1 (ro): Port input data pin 1
0x50000410 C   FIELD 02w01 ID2 (ro): Port input data pin 2
0x50000410 C   FIELD 03w01 ID3 (ro): Port input data pin 3
0x50000410 C   FIELD 04w01 ID4 (ro): Port input data pin 4
0x50000410 C   FIELD 05w01 ID5 (ro): Port input data pin 5
0x50000410 C   FIELD 06w01 ID6 (ro): Port input data pin 6
0x50000410 C   FIELD 07w01 ID7 (ro): Port input data pin 7
0x50000410 C   FIELD 08w01 ID8 (ro): Port input data pin 8
0x50000410 C   FIELD 09w01 ID9 (ro): Port input data pin 9
0x50000410 C   FIELD 10w01 ID10 (ro): Port input data pin 10
0x50000410 C   FIELD 11w01 ID11 (ro): Port input data pin 11
0x50000410 C   FIELD 12w01 ID12 (ro): Port input data pin 12
0x50000410 C   FIELD 13w01 ID13 (ro): Port input data pin 13
0x50000410 C   FIELD 14w01 ID14 (ro): Port input data pin 14
0x50000410 C   FIELD 15w01 ID15 (ro): Port input data pin 15
0x50000414 B  REGISTER ODR: GPIO port output data register
0x50000414 C   FIELD 00w01 OD0 (rw): Port output data pin 0
0x50000414 C   FIELD 01w01 OD1 (rw): Port output data pin 1
0x50000414 C   FIELD 02w01 OD2 (rw): Port output data pin 2
0x50000414 C   FIELD 03w01 OD3 (rw): Port output data pin 3
0x50000414 C   FIELD 04w01 OD4 (rw): Port output data pin 4
0x50000414 C   FIELD 05w01 OD5 (rw): Port output data pin 5
0x50000414 C   FIELD 06w01 OD6 (rw): Port output data pin 6
0x50000414 C   FIELD 07w01 OD7 (rw): Port output data pin 7
0x50000414 C   FIELD 08w01 OD8 (rw): Port output data pin 8
0x50000414 C   FIELD 09w01 OD9 (rw): Port output data pin 9
0x50000414 C   FIELD 10w01 OD10 (rw): Port output data pin 10
0x50000414 C   FIELD 11w01 OD11 (rw): Port output data pin 11
0x50000414 C   FIELD 12w01 OD12 (rw): Port output data pin 12
0x50000414 C   FIELD 13w01 OD13 (rw): Port output data pin 13
0x50000414 C   FIELD 14w01 OD14 (rw): Port output data pin 14
0x50000414 C   FIELD 15w01 OD15 (rw): Port output data pin 15
0x50000418 B  REGISTER BSRR: GPIO port bit set/reset register
0x50000418 C   FIELD 00w01 BS0 (wo): Port x set pin 0
0x50000418 C   FIELD 01w01 BS1 (wo): Port x set pin 1
0x50000418 C   FIELD 02w01 BS2 (wo): Port x set pin 2
0x50000418 C   FIELD 03w01 BS3 (wo): Port x set pin 3
0x50000418 C   FIELD 04w01 BS4 (wo): Port x set pin 4
0x50000418 C   FIELD 05w01 BS5 (wo): Port x set pin 5
0x50000418 C   FIELD 06w01 BS6 (wo): Port x set pin 6
0x50000418 C   FIELD 07w01 BS7 (wo): Port x set pin 7
0x50000418 C   FIELD 08w01 BS8 (wo): Port x set pin 8
0x50000418 C   FIELD 09w01 BS9 (wo): Port x set pin 9
0x50000418 C   FIELD 10w01 BS10 (wo): Port x set pin 10
0x50000418 C   FIELD 11w01 BS11 (wo): Port x set pin 11
0x50000418 C   FIELD 12w01 BS12 (wo): Port x set pin 12
0x50000418 C   FIELD 13w01 BS13 (wo): Port x set pin 13
0x50000418 C   FIELD 14w01 BS14 (wo): Port x set pin 14
0x50000418 C   FIELD 15w01 BS15 (wo): Port x set pin 15
0x50000418 C   FIELD 16w01 BR0 (wo): Port x reset pin 0
0x50000418 C   FIELD 17w01 BR1 (wo): Port x reset pin 1
0x50000418 C   FIELD 18w01 BR2 (wo): Port x reset pin 2
0x50000418 C   FIELD 19w01 BR3 (wo): Port x reset pin 3
0x50000418 C   FIELD 20w01 BR4 (wo): Port x reset pin 4
0x50000418 C   FIELD 21w01 BR5 (wo): Port x reset pin 5
0x50000418 C   FIELD 22w01 BR6 (wo): Port x reset pin 6
0x50000418 C   FIELD 23w01 BR7 (wo): Port x reset pin 7
0x50000418 C   FIELD 24w01 BR8 (wo): Port x reset pin 8
0x50000418 C   FIELD 25w01 BR9 (wo): Port x reset pin 9
0x50000418 C   FIELD 26w01 BR10 (wo): Port x reset pin 10
0x50000418 C   FIELD 27w01 BR11 (wo): Port x reset pin 11
0x50000418 C   FIELD 28w01 BR12 (wo): Port x reset pin 12
0x50000418 C   FIELD 29w01 BR13 (wo): Port x reset pin 13
0x50000418 C   FIELD 30w01 BR14 (wo): Port x reset pin 14
0x50000418 C   FIELD 31w01 BR15 (wo): Port x reset pin 15
0x5000041C B  REGISTER LCKR: GPIO port configuration lock register
0x5000041C C   FIELD 00w01 LCK0 (rw): Port x lock pin 0
0x5000041C C   FIELD 01w01 LCK1 (rw): Port x lock pin 1
0x5000041C C   FIELD 02w01 LCK2 (rw): Port x lock pin 2
0x5000041C C   FIELD 03w01 LCK3 (rw): Port x lock pin 3
0x5000041C C   FIELD 04w01 LCK4 (rw): Port x lock pin 4
0x5000041C C   FIELD 05w01 LCK5 (rw): Port x lock pin 5
0x5000041C C   FIELD 06w01 LCK6 (rw): Port x lock pin 6
0x5000041C C   FIELD 07w01 LCK7 (rw): Port x lock pin 7
0x5000041C C   FIELD 08w01 LCK8 (rw): Port x lock pin 8
0x5000041C C   FIELD 09w01 LCK9 (rw): Port x lock pin 9
0x5000041C C   FIELD 10w01 LCK10 (rw): Port x lock pin 10
0x5000041C C   FIELD 11w01 LCK11 (rw): Port x lock pin 11
0x5000041C C   FIELD 12w01 LCK12 (rw): Port x lock pin 12
0x5000041C C   FIELD 13w01 LCK13 (rw): Port x lock pin 13
0x5000041C C   FIELD 14w01 LCK14 (rw): Port x lock pin 14
0x5000041C C   FIELD 15w01 LCK15 (rw): Port x lock pin 15
0x5000041C C   FIELD 16w01 LCKK (rw): Lock key This bit can be read any time. It can only be modified using the lock key write sequence. LOCK key write sequence: WR LCKR[16] = 1 + LCKR[15:0] WR LCKR[16] = 0 + LCKR[15:0] WR LCKR[16] = 1 + LCKR[15:0] RD LCKR RD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active) Note: During the LOCK key write sequence, the value of LCK[15:0] must not change. Note: Any error in the lock sequence aborts the lock. Note: After the first lock sequence on any bit of the port, any read access on the LCKK bit returns 1 until the next MCU reset or peripheral reset.
0x50000420 B  REGISTER AFRL: GPIO alternate function low register
0x50000420 C   FIELD 00w04 AFREL0 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000420 C   FIELD 04w04 AFREL1 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000420 C   FIELD 08w04 AFREL2 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000420 C   FIELD 12w04 AFREL3 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000420 C   FIELD 16w04 AFREL4 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000420 C   FIELD 20w04 AFREL5 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000420 C   FIELD 24w04 AFREL6 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000420 C   FIELD 28w04 AFREL7 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000424 B  REGISTER AFRH: GPIO alternate function high register
0x50000424 C   FIELD 00w04 AFREL8 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000424 C   FIELD 04w04 AFREL9 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000424 C   FIELD 08w04 AFREL10 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000424 C   FIELD 12w04 AFREL11 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000424 C   FIELD 16w04 AFREL12 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000424 C   FIELD 20w04 AFREL13 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000424 C   FIELD 24w04 AFREL14 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000424 C   FIELD 28w04 AFREL15 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000428 B  REGISTER BRR: GPIO port bit reset register
0x50000428 C   FIELD 00w01 BR0 (wo): Port x reset pin 0
0x50000428 C   FIELD 01w01 BR1 (wo): Port x reset pin 1
0x50000428 C   FIELD 02w01 BR2 (wo): Port x reset pin 2
0x50000428 C   FIELD 03w01 BR3 (wo): Port x reset pin 3
0x50000428 C   FIELD 04w01 BR4 (wo): Port x reset pin 4
0x50000428 C   FIELD 05w01 BR5 (wo): Port x reset pin 5
0x50000428 C   FIELD 06w01 BR6 (wo): Port x reset pin 6
0x50000428 C   FIELD 07w01 BR7 (wo): Port x reset pin 7
0x50000428 C   FIELD 08w01 BR8 (wo): Port x reset pin 8
0x50000428 C   FIELD 09w01 BR9 (wo): Port x reset pin 9
0x50000428 C   FIELD 10w01 BR10 (wo): Port x reset pin 10
0x50000428 C   FIELD 11w01 BR11 (wo): Port x reset pin 11
0x50000428 C   FIELD 12w01 BR12 (wo): Port x reset pin 12
0x50000428 C   FIELD 13w01 BR13 (wo): Port x reset pin 13
0x50000428 C   FIELD 14w01 BR14 (wo): Port x reset pin 14
0x50000428 C   FIELD 15w01 BR15 (wo): Port x reset pin 15
0x50000800 A PERIPHERAL GPIOC
0x50000800 B  REGISTER MODER: GPIO port mode register
0x50000800 C   FIELD 00w02 MODE0 (rw): Port x configuration pin 0
0x50000800 C   FIELD 02w02 MODE1 (rw): Port x configuration pin 1
0x50000800 C   FIELD 04w02 MODE2 (rw): Port x configuration pin 2
0x50000800 C   FIELD 06w02 MODE3 (rw): Port x configuration pin 3
0x50000800 C   FIELD 08w02 MODE4 (rw): Port x configuration pin 4
0x50000800 C   FIELD 10w02 MODE5 (rw): Port x configuration pin 5
0x50000800 C   FIELD 12w02 MODE6 (rw): Port x configuration pin 6
0x50000800 C   FIELD 14w02 MODE7 (rw): Port x configuration pin 7
0x50000800 C   FIELD 16w02 MODE8 (rw): Port x configuration pin 8
0x50000800 C   FIELD 18w02 MODE9 (rw): Port x configuration pin 9
0x50000800 C   FIELD 20w02 MODE10 (rw): Port x configuration pin 10
0x50000800 C   FIELD 22w02 MODE11 (rw): Port x configuration pin 11
0x50000800 C   FIELD 24w02 MODE12 (rw): Port x configuration pin 12
0x50000800 C   FIELD 26w02 MODE13 (rw): Port x configuration pin 13
0x50000800 C   FIELD 28w02 MODE14 (rw): Port x configuration pin 14
0x50000800 C   FIELD 30w02 MODE15 (rw): Port x configuration pin 15
0x50000804 B  REGISTER OTYPER: GPIO port output type register
0x50000804 C   FIELD 00w01 OT0 (rw): Port x configuration pin 0
0x50000804 C   FIELD 01w01 OT1 (rw): Port x configuration pin 1
0x50000804 C   FIELD 02w01 OT2 (rw): Port x configuration pin 2
0x50000804 C   FIELD 03w01 OT3 (rw): Port x configuration pin 3
0x50000804 C   FIELD 04w01 OT4 (rw): Port x configuration pin 4
0x50000804 C   FIELD 05w01 OT5 (rw): Port x configuration pin 5
0x50000804 C   FIELD 06w01 OT6 (rw): Port x configuration pin 6
0x50000804 C   FIELD 07w01 OT7 (rw): Port x configuration pin 7
0x50000804 C   FIELD 08w01 OT8 (rw): Port x configuration pin 8
0x50000804 C   FIELD 09w01 OT9 (rw): Port x configuration pin 9
0x50000804 C   FIELD 10w01 OT10 (rw): Port x configuration pin 10
0x50000804 C   FIELD 11w01 OT11 (rw): Port x configuration pin 11
0x50000804 C   FIELD 12w01 OT12 (rw): Port x configuration pin 12
0x50000804 C   FIELD 13w01 OT13 (rw): Port x configuration pin 13
0x50000804 C   FIELD 14w01 OT14 (rw): Port x configuration pin 14
0x50000804 C   FIELD 15w01 OT15 (rw): Port x configuration pin 15
0x50000808 B  REGISTER OSPEEDR: GPIO port output speed register
0x50000808 C   FIELD 00w02 OSPEED0 (rw): Port x configuration pin 0
0x50000808 C   FIELD 02w02 OSPEED1 (rw): Port x configuration pin 1
0x50000808 C   FIELD 04w02 OSPEED2 (rw): Port x configuration pin 2
0x50000808 C   FIELD 06w02 OSPEED3 (rw): Port x configuration pin 3
0x50000808 C   FIELD 08w02 OSPEED4 (rw): Port x configuration pin 4
0x50000808 C   FIELD 10w02 OSPEED5 (rw): Port x configuration pin 5
0x50000808 C   FIELD 12w02 OSPEED6 (rw): Port x configuration pin 6
0x50000808 C   FIELD 14w02 OSPEED7 (rw): Port x configuration pin 7
0x50000808 C   FIELD 16w02 OSPEED8 (rw): Port x configuration pin 8
0x50000808 C   FIELD 18w02 OSPEED9 (rw): Port x configuration pin 9
0x50000808 C   FIELD 20w02 OSPEED10 (rw): Port x configuration pin 10
0x50000808 C   FIELD 22w02 OSPEED11 (rw): Port x configuration pin 11
0x50000808 C   FIELD 24w02 OSPEED12 (rw): Port x configuration pin 12
0x50000808 C   FIELD 26w02 OSPEED13 (rw): Port x configuration pin 13
0x50000808 C   FIELD 28w02 OSPEED14 (rw): Port x configuration pin 14
0x50000808 C   FIELD 30w02 OSPEED15 (rw): Port x configuration pin 15
0x5000080C B  REGISTER PUPDR: GPIO port pull-up/pull-down register
0x5000080C C   FIELD 00w02 PUPD0 (rw): Port x configuration pin 0
0x5000080C C   FIELD 02w02 PUPD1 (rw): Port x configuration pin 1
0x5000080C C   FIELD 04w02 PUPD2 (rw): Port x configuration pin 2
0x5000080C C   FIELD 06w02 PUPD3 (rw): Port x configuration pin 3
0x5000080C C   FIELD 08w02 PUPD4 (rw): Port x configuration pin 4
0x5000080C C   FIELD 10w02 PUPD5 (rw): Port x configuration pin 5
0x5000080C C   FIELD 12w02 PUPD6 (rw): Port x configuration pin 6
0x5000080C C   FIELD 14w02 PUPD7 (rw): Port x configuration pin 7
0x5000080C C   FIELD 16w02 PUPD8 (rw): Port x configuration pin 8
0x5000080C C   FIELD 18w02 PUPD9 (rw): Port x configuration pin 9
0x5000080C C   FIELD 20w02 PUPD10 (rw): Port x configuration pin 10
0x5000080C C   FIELD 22w02 PUPD11 (rw): Port x configuration pin 11
0x5000080C C   FIELD 24w02 PUPD12 (rw): Port x configuration pin 12
0x5000080C C   FIELD 26w02 PUPD13 (rw): Port x configuration pin 13
0x5000080C C   FIELD 28w02 PUPD14 (rw): Port x configuration pin 14
0x5000080C C   FIELD 30w02 PUPD15 (rw): Port x configuration pin 15
0x50000810 B  REGISTER IDR: GPIO port input data register
0x50000810 C   FIELD 00w01 ID0 (ro): Port input data pin 0
0x50000810 C   FIELD 01w01 ID1 (ro): Port input data pin 1
0x50000810 C   FIELD 02w01 ID2 (ro): Port input data pin 2
0x50000810 C   FIELD 03w01 ID3 (ro): Port input data pin 3
0x50000810 C   FIELD 04w01 ID4 (ro): Port input data pin 4
0x50000810 C   FIELD 05w01 ID5 (ro): Port input data pin 5
0x50000810 C   FIELD 06w01 ID6 (ro): Port input data pin 6
0x50000810 C   FIELD 07w01 ID7 (ro): Port input data pin 7
0x50000810 C   FIELD 08w01 ID8 (ro): Port input data pin 8
0x50000810 C   FIELD 09w01 ID9 (ro): Port input data pin 9
0x50000810 C   FIELD 10w01 ID10 (ro): Port input data pin 10
0x50000810 C   FIELD 11w01 ID11 (ro): Port input data pin 11
0x50000810 C   FIELD 12w01 ID12 (ro): Port input data pin 12
0x50000810 C   FIELD 13w01 ID13 (ro): Port input data pin 13
0x50000810 C   FIELD 14w01 ID14 (ro): Port input data pin 14
0x50000810 C   FIELD 15w01 ID15 (ro): Port input data pin 15
0x50000814 B  REGISTER ODR: GPIO port output data register
0x50000814 C   FIELD 00w01 OD0 (rw): Port output data pin 0
0x50000814 C   FIELD 01w01 OD1 (rw): Port output data pin 1
0x50000814 C   FIELD 02w01 OD2 (rw): Port output data pin 2
0x50000814 C   FIELD 03w01 OD3 (rw): Port output data pin 3
0x50000814 C   FIELD 04w01 OD4 (rw): Port output data pin 4
0x50000814 C   FIELD 05w01 OD5 (rw): Port output data pin 5
0x50000814 C   FIELD 06w01 OD6 (rw): Port output data pin 6
0x50000814 C   FIELD 07w01 OD7 (rw): Port output data pin 7
0x50000814 C   FIELD 08w01 OD8 (rw): Port output data pin 8
0x50000814 C   FIELD 09w01 OD9 (rw): Port output data pin 9
0x50000814 C   FIELD 10w01 OD10 (rw): Port output data pin 10
0x50000814 C   FIELD 11w01 OD11 (rw): Port output data pin 11
0x50000814 C   FIELD 12w01 OD12 (rw): Port output data pin 12
0x50000814 C   FIELD 13w01 OD13 (rw): Port output data pin 13
0x50000814 C   FIELD 14w01 OD14 (rw): Port output data pin 14
0x50000814 C   FIELD 15w01 OD15 (rw): Port output data pin 15
0x50000818 B  REGISTER BSRR: GPIO port bit set/reset register
0x50000818 C   FIELD 00w01 BS0 (wo): Port x set pin 0
0x50000818 C   FIELD 01w01 BS1 (wo): Port x set pin 1
0x50000818 C   FIELD 02w01 BS2 (wo): Port x set pin 2
0x50000818 C   FIELD 03w01 BS3 (wo): Port x set pin 3
0x50000818 C   FIELD 04w01 BS4 (wo): Port x set pin 4
0x50000818 C   FIELD 05w01 BS5 (wo): Port x set pin 5
0x50000818 C   FIELD 06w01 BS6 (wo): Port x set pin 6
0x50000818 C   FIELD 07w01 BS7 (wo): Port x set pin 7
0x50000818 C   FIELD 08w01 BS8 (wo): Port x set pin 8
0x50000818 C   FIELD 09w01 BS9 (wo): Port x set pin 9
0x50000818 C   FIELD 10w01 BS10 (wo): Port x set pin 10
0x50000818 C   FIELD 11w01 BS11 (wo): Port x set pin 11
0x50000818 C   FIELD 12w01 BS12 (wo): Port x set pin 12
0x50000818 C   FIELD 13w01 BS13 (wo): Port x set pin 13
0x50000818 C   FIELD 14w01 BS14 (wo): Port x set pin 14
0x50000818 C   FIELD 15w01 BS15 (wo): Port x set pin 15
0x50000818 C   FIELD 16w01 BR0 (wo): Port x reset pin 0
0x50000818 C   FIELD 17w01 BR1 (wo): Port x reset pin 1
0x50000818 C   FIELD 18w01 BR2 (wo): Port x reset pin 2
0x50000818 C   FIELD 19w01 BR3 (wo): Port x reset pin 3
0x50000818 C   FIELD 20w01 BR4 (wo): Port x reset pin 4
0x50000818 C   FIELD 21w01 BR5 (wo): Port x reset pin 5
0x50000818 C   FIELD 22w01 BR6 (wo): Port x reset pin 6
0x50000818 C   FIELD 23w01 BR7 (wo): Port x reset pin 7
0x50000818 C   FIELD 24w01 BR8 (wo): Port x reset pin 8
0x50000818 C   FIELD 25w01 BR9 (wo): Port x reset pin 9
0x50000818 C   FIELD 26w01 BR10 (wo): Port x reset pin 10
0x50000818 C   FIELD 27w01 BR11 (wo): Port x reset pin 11
0x50000818 C   FIELD 28w01 BR12 (wo): Port x reset pin 12
0x50000818 C   FIELD 29w01 BR13 (wo): Port x reset pin 13
0x50000818 C   FIELD 30w01 BR14 (wo): Port x reset pin 14
0x50000818 C   FIELD 31w01 BR15 (wo): Port x reset pin 15
0x5000081C B  REGISTER LCKR: GPIO port configuration lock register
0x5000081C C   FIELD 00w01 LCK0 (rw): Port x lock pin 0
0x5000081C C   FIELD 01w01 LCK1 (rw): Port x lock pin 1
0x5000081C C   FIELD 02w01 LCK2 (rw): Port x lock pin 2
0x5000081C C   FIELD 03w01 LCK3 (rw): Port x lock pin 3
0x5000081C C   FIELD 04w01 LCK4 (rw): Port x lock pin 4
0x5000081C C   FIELD 05w01 LCK5 (rw): Port x lock pin 5
0x5000081C C   FIELD 06w01 LCK6 (rw): Port x lock pin 6
0x5000081C C   FIELD 07w01 LCK7 (rw): Port x lock pin 7
0x5000081C C   FIELD 08w01 LCK8 (rw): Port x lock pin 8
0x5000081C C   FIELD 09w01 LCK9 (rw): Port x lock pin 9
0x5000081C C   FIELD 10w01 LCK10 (rw): Port x lock pin 10
0x5000081C C   FIELD 11w01 LCK11 (rw): Port x lock pin 11
0x5000081C C   FIELD 12w01 LCK12 (rw): Port x lock pin 12
0x5000081C C   FIELD 13w01 LCK13 (rw): Port x lock pin 13
0x5000081C C   FIELD 14w01 LCK14 (rw): Port x lock pin 14
0x5000081C C   FIELD 15w01 LCK15 (rw): Port x lock pin 15
0x5000081C C   FIELD 16w01 LCKK (rw): Lock key This bit can be read any time. It can only be modified using the lock key write sequence. LOCK key write sequence: WR LCKR[16] = 1 + LCKR[15:0] WR LCKR[16] = 0 + LCKR[15:0] WR LCKR[16] = 1 + LCKR[15:0] RD LCKR RD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active) Note: During the LOCK key write sequence, the value of LCK[15:0] must not change. Note: Any error in the lock sequence aborts the lock. Note: After the first lock sequence on any bit of the port, any read access on the LCKK bit returns 1 until the next MCU reset or peripheral reset.
0x50000820 B  REGISTER AFRL: GPIO alternate function low register
0x50000820 C   FIELD 00w04 AFREL0 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000820 C   FIELD 04w04 AFREL1 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000820 C   FIELD 08w04 AFREL2 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000820 C   FIELD 12w04 AFREL3 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000820 C   FIELD 16w04 AFREL4 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000820 C   FIELD 20w04 AFREL5 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000820 C   FIELD 24w04 AFREL6 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000820 C   FIELD 28w04 AFREL7 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000824 B  REGISTER AFRH: GPIO alternate function high register
0x50000824 C   FIELD 00w04 AFREL8 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000824 C   FIELD 04w04 AFREL9 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000824 C   FIELD 08w04 AFREL10 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000824 C   FIELD 12w04 AFREL11 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000824 C   FIELD 16w04 AFREL12 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000824 C   FIELD 20w04 AFREL13 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000824 C   FIELD 24w04 AFREL14 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000824 C   FIELD 28w04 AFREL15 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000828 B  REGISTER BRR: GPIO port bit reset register
0x50000828 C   FIELD 00w01 BR0 (wo): Port x reset pin 0
0x50000828 C   FIELD 01w01 BR1 (wo): Port x reset pin 1
0x50000828 C   FIELD 02w01 BR2 (wo): Port x reset pin 2
0x50000828 C   FIELD 03w01 BR3 (wo): Port x reset pin 3
0x50000828 C   FIELD 04w01 BR4 (wo): Port x reset pin 4
0x50000828 C   FIELD 05w01 BR5 (wo): Port x reset pin 5
0x50000828 C   FIELD 06w01 BR6 (wo): Port x reset pin 6
0x50000828 C   FIELD 07w01 BR7 (wo): Port x reset pin 7
0x50000828 C   FIELD 08w01 BR8 (wo): Port x reset pin 8
0x50000828 C   FIELD 09w01 BR9 (wo): Port x reset pin 9
0x50000828 C   FIELD 10w01 BR10 (wo): Port x reset pin 10
0x50000828 C   FIELD 11w01 BR11 (wo): Port x reset pin 11
0x50000828 C   FIELD 12w01 BR12 (wo): Port x reset pin 12
0x50000828 C   FIELD 13w01 BR13 (wo): Port x reset pin 13
0x50000828 C   FIELD 14w01 BR14 (wo): Port x reset pin 14
0x50000828 C   FIELD 15w01 BR15 (wo): Port x reset pin 15
0x50000C00 A PERIPHERAL GPIOD
0x50000C00 B  REGISTER MODER: GPIO port mode register
0x50000C00 C   FIELD 00w02 MODE0 (rw): Port x configuration pin 0
0x50000C00 C   FIELD 02w02 MODE1 (rw): Port x configuration pin 1
0x50000C00 C   FIELD 04w02 MODE2 (rw): Port x configuration pin 2
0x50000C00 C   FIELD 06w02 MODE3 (rw): Port x configuration pin 3
0x50000C00 C   FIELD 08w02 MODE4 (rw): Port x configuration pin 4
0x50000C00 C   FIELD 10w02 MODE5 (rw): Port x configuration pin 5
0x50000C00 C   FIELD 12w02 MODE6 (rw): Port x configuration pin 6
0x50000C00 C   FIELD 14w02 MODE7 (rw): Port x configuration pin 7
0x50000C00 C   FIELD 16w02 MODE8 (rw): Port x configuration pin 8
0x50000C00 C   FIELD 18w02 MODE9 (rw): Port x configuration pin 9
0x50000C00 C   FIELD 20w02 MODE10 (rw): Port x configuration pin 10
0x50000C00 C   FIELD 22w02 MODE11 (rw): Port x configuration pin 11
0x50000C00 C   FIELD 24w02 MODE12 (rw): Port x configuration pin 12
0x50000C00 C   FIELD 26w02 MODE13 (rw): Port x configuration pin 13
0x50000C00 C   FIELD 28w02 MODE14 (rw): Port x configuration pin 14
0x50000C00 C   FIELD 30w02 MODE15 (rw): Port x configuration pin 15
0x50000C04 B  REGISTER OTYPER: GPIO port output type register
0x50000C04 C   FIELD 00w01 OT0 (rw): Port x configuration pin 0
0x50000C04 C   FIELD 01w01 OT1 (rw): Port x configuration pin 1
0x50000C04 C   FIELD 02w01 OT2 (rw): Port x configuration pin 2
0x50000C04 C   FIELD 03w01 OT3 (rw): Port x configuration pin 3
0x50000C04 C   FIELD 04w01 OT4 (rw): Port x configuration pin 4
0x50000C04 C   FIELD 05w01 OT5 (rw): Port x configuration pin 5
0x50000C04 C   FIELD 06w01 OT6 (rw): Port x configuration pin 6
0x50000C04 C   FIELD 07w01 OT7 (rw): Port x configuration pin 7
0x50000C04 C   FIELD 08w01 OT8 (rw): Port x configuration pin 8
0x50000C04 C   FIELD 09w01 OT9 (rw): Port x configuration pin 9
0x50000C04 C   FIELD 10w01 OT10 (rw): Port x configuration pin 10
0x50000C04 C   FIELD 11w01 OT11 (rw): Port x configuration pin 11
0x50000C04 C   FIELD 12w01 OT12 (rw): Port x configuration pin 12
0x50000C04 C   FIELD 13w01 OT13 (rw): Port x configuration pin 13
0x50000C04 C   FIELD 14w01 OT14 (rw): Port x configuration pin 14
0x50000C04 C   FIELD 15w01 OT15 (rw): Port x configuration pin 15
0x50000C08 B  REGISTER OSPEEDR: GPIO port output speed register
0x50000C08 C   FIELD 00w02 OSPEED0 (rw): Port x configuration pin 0
0x50000C08 C   FIELD 02w02 OSPEED1 (rw): Port x configuration pin 1
0x50000C08 C   FIELD 04w02 OSPEED2 (rw): Port x configuration pin 2
0x50000C08 C   FIELD 06w02 OSPEED3 (rw): Port x configuration pin 3
0x50000C08 C   FIELD 08w02 OSPEED4 (rw): Port x configuration pin 4
0x50000C08 C   FIELD 10w02 OSPEED5 (rw): Port x configuration pin 5
0x50000C08 C   FIELD 12w02 OSPEED6 (rw): Port x configuration pin 6
0x50000C08 C   FIELD 14w02 OSPEED7 (rw): Port x configuration pin 7
0x50000C08 C   FIELD 16w02 OSPEED8 (rw): Port x configuration pin 8
0x50000C08 C   FIELD 18w02 OSPEED9 (rw): Port x configuration pin 9
0x50000C08 C   FIELD 20w02 OSPEED10 (rw): Port x configuration pin 10
0x50000C08 C   FIELD 22w02 OSPEED11 (rw): Port x configuration pin 11
0x50000C08 C   FIELD 24w02 OSPEED12 (rw): Port x configuration pin 12
0x50000C08 C   FIELD 26w02 OSPEED13 (rw): Port x configuration pin 13
0x50000C08 C   FIELD 28w02 OSPEED14 (rw): Port x configuration pin 14
0x50000C08 C   FIELD 30w02 OSPEED15 (rw): Port x configuration pin 15
0x50000C0C B  REGISTER PUPDR: GPIO port pull-up/pull-down register
0x50000C0C C   FIELD 00w02 PUPD0 (rw): Port x configuration pin 0
0x50000C0C C   FIELD 02w02 PUPD1 (rw): Port x configuration pin 1
0x50000C0C C   FIELD 04w02 PUPD2 (rw): Port x configuration pin 2
0x50000C0C C   FIELD 06w02 PUPD3 (rw): Port x configuration pin 3
0x50000C0C C   FIELD 08w02 PUPD4 (rw): Port x configuration pin 4
0x50000C0C C   FIELD 10w02 PUPD5 (rw): Port x configuration pin 5
0x50000C0C C   FIELD 12w02 PUPD6 (rw): Port x configuration pin 6
0x50000C0C C   FIELD 14w02 PUPD7 (rw): Port x configuration pin 7
0x50000C0C C   FIELD 16w02 PUPD8 (rw): Port x configuration pin 8
0x50000C0C C   FIELD 18w02 PUPD9 (rw): Port x configuration pin 9
0x50000C0C C   FIELD 20w02 PUPD10 (rw): Port x configuration pin 10
0x50000C0C C   FIELD 22w02 PUPD11 (rw): Port x configuration pin 11
0x50000C0C C   FIELD 24w02 PUPD12 (rw): Port x configuration pin 12
0x50000C0C C   FIELD 26w02 PUPD13 (rw): Port x configuration pin 13
0x50000C0C C   FIELD 28w02 PUPD14 (rw): Port x configuration pin 14
0x50000C0C C   FIELD 30w02 PUPD15 (rw): Port x configuration pin 15
0x50000C10 B  REGISTER IDR: GPIO port input data register
0x50000C10 C   FIELD 00w01 ID0 (ro): Port input data pin 0
0x50000C10 C   FIELD 01w01 ID1 (ro): Port input data pin 1
0x50000C10 C   FIELD 02w01 ID2 (ro): Port input data pin 2
0x50000C10 C   FIELD 03w01 ID3 (ro): Port input data pin 3
0x50000C10 C   FIELD 04w01 ID4 (ro): Port input data pin 4
0x50000C10 C   FIELD 05w01 ID5 (ro): Port input data pin 5
0x50000C10 C   FIELD 06w01 ID6 (ro): Port input data pin 6
0x50000C10 C   FIELD 07w01 ID7 (ro): Port input data pin 7
0x50000C10 C   FIELD 08w01 ID8 (ro): Port input data pin 8
0x50000C10 C   FIELD 09w01 ID9 (ro): Port input data pin 9
0x50000C10 C   FIELD 10w01 ID10 (ro): Port input data pin 10
0x50000C10 C   FIELD 11w01 ID11 (ro): Port input data pin 11
0x50000C10 C   FIELD 12w01 ID12 (ro): Port input data pin 12
0x50000C10 C   FIELD 13w01 ID13 (ro): Port input data pin 13
0x50000C10 C   FIELD 14w01 ID14 (ro): Port input data pin 14
0x50000C10 C   FIELD 15w01 ID15 (ro): Port input data pin 15
0x50000C14 B  REGISTER ODR: GPIO port output data register
0x50000C14 C   FIELD 00w01 OD0 (rw): Port output data pin 0
0x50000C14 C   FIELD 01w01 OD1 (rw): Port output data pin 1
0x50000C14 C   FIELD 02w01 OD2 (rw): Port output data pin 2
0x50000C14 C   FIELD 03w01 OD3 (rw): Port output data pin 3
0x50000C14 C   FIELD 04w01 OD4 (rw): Port output data pin 4
0x50000C14 C   FIELD 05w01 OD5 (rw): Port output data pin 5
0x50000C14 C   FIELD 06w01 OD6 (rw): Port output data pin 6
0x50000C14 C   FIELD 07w01 OD7 (rw): Port output data pin 7
0x50000C14 C   FIELD 08w01 OD8 (rw): Port output data pin 8
0x50000C14 C   FIELD 09w01 OD9 (rw): Port output data pin 9
0x50000C14 C   FIELD 10w01 OD10 (rw): Port output data pin 10
0x50000C14 C   FIELD 11w01 OD11 (rw): Port output data pin 11
0x50000C14 C   FIELD 12w01 OD12 (rw): Port output data pin 12
0x50000C14 C   FIELD 13w01 OD13 (rw): Port output data pin 13
0x50000C14 C   FIELD 14w01 OD14 (rw): Port output data pin 14
0x50000C14 C   FIELD 15w01 OD15 (rw): Port output data pin 15
0x50000C18 B  REGISTER BSRR: GPIO port bit set/reset register
0x50000C18 C   FIELD 00w01 BS0 (wo): Port x set pin 0
0x50000C18 C   FIELD 01w01 BS1 (wo): Port x set pin 1
0x50000C18 C   FIELD 02w01 BS2 (wo): Port x set pin 2
0x50000C18 C   FIELD 03w01 BS3 (wo): Port x set pin 3
0x50000C18 C   FIELD 04w01 BS4 (wo): Port x set pin 4
0x50000C18 C   FIELD 05w01 BS5 (wo): Port x set pin 5
0x50000C18 C   FIELD 06w01 BS6 (wo): Port x set pin 6
0x50000C18 C   FIELD 07w01 BS7 (wo): Port x set pin 7
0x50000C18 C   FIELD 08w01 BS8 (wo): Port x set pin 8
0x50000C18 C   FIELD 09w01 BS9 (wo): Port x set pin 9
0x50000C18 C   FIELD 10w01 BS10 (wo): Port x set pin 10
0x50000C18 C   FIELD 11w01 BS11 (wo): Port x set pin 11
0x50000C18 C   FIELD 12w01 BS12 (wo): Port x set pin 12
0x50000C18 C   FIELD 13w01 BS13 (wo): Port x set pin 13
0x50000C18 C   FIELD 14w01 BS14 (wo): Port x set pin 14
0x50000C18 C   FIELD 15w01 BS15 (wo): Port x set pin 15
0x50000C18 C   FIELD 16w01 BR0 (wo): Port x reset pin 0
0x50000C18 C   FIELD 17w01 BR1 (wo): Port x reset pin 1
0x50000C18 C   FIELD 18w01 BR2 (wo): Port x reset pin 2
0x50000C18 C   FIELD 19w01 BR3 (wo): Port x reset pin 3
0x50000C18 C   FIELD 20w01 BR4 (wo): Port x reset pin 4
0x50000C18 C   FIELD 21w01 BR5 (wo): Port x reset pin 5
0x50000C18 C   FIELD 22w01 BR6 (wo): Port x reset pin 6
0x50000C18 C   FIELD 23w01 BR7 (wo): Port x reset pin 7
0x50000C18 C   FIELD 24w01 BR8 (wo): Port x reset pin 8
0x50000C18 C   FIELD 25w01 BR9 (wo): Port x reset pin 9
0x50000C18 C   FIELD 26w01 BR10 (wo): Port x reset pin 10
0x50000C18 C   FIELD 27w01 BR11 (wo): Port x reset pin 11
0x50000C18 C   FIELD 28w01 BR12 (wo): Port x reset pin 12
0x50000C18 C   FIELD 29w01 BR13 (wo): Port x reset pin 13
0x50000C18 C   FIELD 30w01 BR14 (wo): Port x reset pin 14
0x50000C18 C   FIELD 31w01 BR15 (wo): Port x reset pin 15
0x50000C1C B  REGISTER LCKR: GPIO port configuration lock register
0x50000C1C C   FIELD 00w01 LCK0 (rw): Port x lock pin 0
0x50000C1C C   FIELD 01w01 LCK1 (rw): Port x lock pin 1
0x50000C1C C   FIELD 02w01 LCK2 (rw): Port x lock pin 2
0x50000C1C C   FIELD 03w01 LCK3 (rw): Port x lock pin 3
0x50000C1C C   FIELD 04w01 LCK4 (rw): Port x lock pin 4
0x50000C1C C   FIELD 05w01 LCK5 (rw): Port x lock pin 5
0x50000C1C C   FIELD 06w01 LCK6 (rw): Port x lock pin 6
0x50000C1C C   FIELD 07w01 LCK7 (rw): Port x lock pin 7
0x50000C1C C   FIELD 08w01 LCK8 (rw): Port x lock pin 8
0x50000C1C C   FIELD 09w01 LCK9 (rw): Port x lock pin 9
0x50000C1C C   FIELD 10w01 LCK10 (rw): Port x lock pin 10
0x50000C1C C   FIELD 11w01 LCK11 (rw): Port x lock pin 11
0x50000C1C C   FIELD 12w01 LCK12 (rw): Port x lock pin 12
0x50000C1C C   FIELD 13w01 LCK13 (rw): Port x lock pin 13
0x50000C1C C   FIELD 14w01 LCK14 (rw): Port x lock pin 14
0x50000C1C C   FIELD 15w01 LCK15 (rw): Port x lock pin 15
0x50000C1C C   FIELD 16w01 LCKK (rw): Lock key This bit can be read any time. It can only be modified using the lock key write sequence. LOCK key write sequence: WR LCKR[16] = 1 + LCKR[15:0] WR LCKR[16] = 0 + LCKR[15:0] WR LCKR[16] = 1 + LCKR[15:0] RD LCKR RD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active) Note: During the LOCK key write sequence, the value of LCK[15:0] must not change. Note: Any error in the lock sequence aborts the lock. Note: After the first lock sequence on any bit of the port, any read access on the LCKK bit returns 1 until the next MCU reset or peripheral reset.
0x50000C20 B  REGISTER AFRL: GPIO alternate function low register
0x50000C20 C   FIELD 00w04 AFREL0 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C20 C   FIELD 04w04 AFREL1 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C20 C   FIELD 08w04 AFREL2 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C20 C   FIELD 12w04 AFREL3 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C20 C   FIELD 16w04 AFREL4 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C20 C   FIELD 20w04 AFREL5 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C20 C   FIELD 24w04 AFREL6 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C20 C   FIELD 28w04 AFREL7 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C24 B  REGISTER AFRH: GPIO alternate function high register
0x50000C24 C   FIELD 00w04 AFREL8 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C24 C   FIELD 04w04 AFREL9 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C24 C   FIELD 08w04 AFREL10 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C24 C   FIELD 12w04 AFREL11 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C24 C   FIELD 16w04 AFREL12 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C24 C   FIELD 20w04 AFREL13 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C24 C   FIELD 24w04 AFREL14 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C24 C   FIELD 28w04 AFREL15 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50000C28 B  REGISTER BRR: GPIO port bit reset register
0x50000C28 C   FIELD 00w01 BR0 (wo): Port x reset pin 0
0x50000C28 C   FIELD 01w01 BR1 (wo): Port x reset pin 1
0x50000C28 C   FIELD 02w01 BR2 (wo): Port x reset pin 2
0x50000C28 C   FIELD 03w01 BR3 (wo): Port x reset pin 3
0x50000C28 C   FIELD 04w01 BR4 (wo): Port x reset pin 4
0x50000C28 C   FIELD 05w01 BR5 (wo): Port x reset pin 5
0x50000C28 C   FIELD 06w01 BR6 (wo): Port x reset pin 6
0x50000C28 C   FIELD 07w01 BR7 (wo): Port x reset pin 7
0x50000C28 C   FIELD 08w01 BR8 (wo): Port x reset pin 8
0x50000C28 C   FIELD 09w01 BR9 (wo): Port x reset pin 9
0x50000C28 C   FIELD 10w01 BR10 (wo): Port x reset pin 10
0x50000C28 C   FIELD 11w01 BR11 (wo): Port x reset pin 11
0x50000C28 C   FIELD 12w01 BR12 (wo): Port x reset pin 12
0x50000C28 C   FIELD 13w01 BR13 (wo): Port x reset pin 13
0x50000C28 C   FIELD 14w01 BR14 (wo): Port x reset pin 14
0x50000C28 C   FIELD 15w01 BR15 (wo): Port x reset pin 15
0x50001000 A PERIPHERAL GPIOE
0x50001000 B  REGISTER MODER: GPIO port mode register
0x50001000 C   FIELD 00w02 MODE0 (rw): Port x configuration pin 0
0x50001000 C   FIELD 02w02 MODE1 (rw): Port x configuration pin 1
0x50001000 C   FIELD 04w02 MODE2 (rw): Port x configuration pin 2
0x50001000 C   FIELD 06w02 MODE3 (rw): Port x configuration pin 3
0x50001000 C   FIELD 08w02 MODE4 (rw): Port x configuration pin 4
0x50001000 C   FIELD 10w02 MODE5 (rw): Port x configuration pin 5
0x50001000 C   FIELD 12w02 MODE6 (rw): Port x configuration pin 6
0x50001000 C   FIELD 14w02 MODE7 (rw): Port x configuration pin 7
0x50001000 C   FIELD 16w02 MODE8 (rw): Port x configuration pin 8
0x50001000 C   FIELD 18w02 MODE9 (rw): Port x configuration pin 9
0x50001000 C   FIELD 20w02 MODE10 (rw): Port x configuration pin 10
0x50001000 C   FIELD 22w02 MODE11 (rw): Port x configuration pin 11
0x50001000 C   FIELD 24w02 MODE12 (rw): Port x configuration pin 12
0x50001000 C   FIELD 26w02 MODE13 (rw): Port x configuration pin 13
0x50001000 C   FIELD 28w02 MODE14 (rw): Port x configuration pin 14
0x50001000 C   FIELD 30w02 MODE15 (rw): Port x configuration pin 15
0x50001004 B  REGISTER OTYPER: GPIO port output type register
0x50001004 C   FIELD 00w01 OT0 (rw): Port x configuration pin 0
0x50001004 C   FIELD 01w01 OT1 (rw): Port x configuration pin 1
0x50001004 C   FIELD 02w01 OT2 (rw): Port x configuration pin 2
0x50001004 C   FIELD 03w01 OT3 (rw): Port x configuration pin 3
0x50001004 C   FIELD 04w01 OT4 (rw): Port x configuration pin 4
0x50001004 C   FIELD 05w01 OT5 (rw): Port x configuration pin 5
0x50001004 C   FIELD 06w01 OT6 (rw): Port x configuration pin 6
0x50001004 C   FIELD 07w01 OT7 (rw): Port x configuration pin 7
0x50001004 C   FIELD 08w01 OT8 (rw): Port x configuration pin 8
0x50001004 C   FIELD 09w01 OT9 (rw): Port x configuration pin 9
0x50001004 C   FIELD 10w01 OT10 (rw): Port x configuration pin 10
0x50001004 C   FIELD 11w01 OT11 (rw): Port x configuration pin 11
0x50001004 C   FIELD 12w01 OT12 (rw): Port x configuration pin 12
0x50001004 C   FIELD 13w01 OT13 (rw): Port x configuration pin 13
0x50001004 C   FIELD 14w01 OT14 (rw): Port x configuration pin 14
0x50001004 C   FIELD 15w01 OT15 (rw): Port x configuration pin 15
0x50001008 B  REGISTER OSPEEDR: GPIO port output speed register
0x50001008 C   FIELD 00w02 OSPEED0 (rw): Port x configuration pin 0
0x50001008 C   FIELD 02w02 OSPEED1 (rw): Port x configuration pin 1
0x50001008 C   FIELD 04w02 OSPEED2 (rw): Port x configuration pin 2
0x50001008 C   FIELD 06w02 OSPEED3 (rw): Port x configuration pin 3
0x50001008 C   FIELD 08w02 OSPEED4 (rw): Port x configuration pin 4
0x50001008 C   FIELD 10w02 OSPEED5 (rw): Port x configuration pin 5
0x50001008 C   FIELD 12w02 OSPEED6 (rw): Port x configuration pin 6
0x50001008 C   FIELD 14w02 OSPEED7 (rw): Port x configuration pin 7
0x50001008 C   FIELD 16w02 OSPEED8 (rw): Port x configuration pin 8
0x50001008 C   FIELD 18w02 OSPEED9 (rw): Port x configuration pin 9
0x50001008 C   FIELD 20w02 OSPEED10 (rw): Port x configuration pin 10
0x50001008 C   FIELD 22w02 OSPEED11 (rw): Port x configuration pin 11
0x50001008 C   FIELD 24w02 OSPEED12 (rw): Port x configuration pin 12
0x50001008 C   FIELD 26w02 OSPEED13 (rw): Port x configuration pin 13
0x50001008 C   FIELD 28w02 OSPEED14 (rw): Port x configuration pin 14
0x50001008 C   FIELD 30w02 OSPEED15 (rw): Port x configuration pin 15
0x5000100C B  REGISTER PUPDR: GPIO port pull-up/pull-down register
0x5000100C C   FIELD 00w02 PUPD0 (rw): Port x configuration pin 0
0x5000100C C   FIELD 02w02 PUPD1 (rw): Port x configuration pin 1
0x5000100C C   FIELD 04w02 PUPD2 (rw): Port x configuration pin 2
0x5000100C C   FIELD 06w02 PUPD3 (rw): Port x configuration pin 3
0x5000100C C   FIELD 08w02 PUPD4 (rw): Port x configuration pin 4
0x5000100C C   FIELD 10w02 PUPD5 (rw): Port x configuration pin 5
0x5000100C C   FIELD 12w02 PUPD6 (rw): Port x configuration pin 6
0x5000100C C   FIELD 14w02 PUPD7 (rw): Port x configuration pin 7
0x5000100C C   FIELD 16w02 PUPD8 (rw): Port x configuration pin 8
0x5000100C C   FIELD 18w02 PUPD9 (rw): Port x configuration pin 9
0x5000100C C   FIELD 20w02 PUPD10 (rw): Port x configuration pin 10
0x5000100C C   FIELD 22w02 PUPD11 (rw): Port x configuration pin 11
0x5000100C C   FIELD 24w02 PUPD12 (rw): Port x configuration pin 12
0x5000100C C   FIELD 26w02 PUPD13 (rw): Port x configuration pin 13
0x5000100C C   FIELD 28w02 PUPD14 (rw): Port x configuration pin 14
0x5000100C C   FIELD 30w02 PUPD15 (rw): Port x configuration pin 15
0x50001010 B  REGISTER IDR: GPIO port input data register
0x50001010 C   FIELD 00w01 ID0 (ro): Port input data pin 0
0x50001010 C   FIELD 01w01 ID1 (ro): Port input data pin 1
0x50001010 C   FIELD 02w01 ID2 (ro): Port input data pin 2
0x50001010 C   FIELD 03w01 ID3 (ro): Port input data pin 3
0x50001010 C   FIELD 04w01 ID4 (ro): Port input data pin 4
0x50001010 C   FIELD 05w01 ID5 (ro): Port input data pin 5
0x50001010 C   FIELD 06w01 ID6 (ro): Port input data pin 6
0x50001010 C   FIELD 07w01 ID7 (ro): Port input data pin 7
0x50001010 C   FIELD 08w01 ID8 (ro): Port input data pin 8
0x50001010 C   FIELD 09w01 ID9 (ro): Port input data pin 9
0x50001010 C   FIELD 10w01 ID10 (ro): Port input data pin 10
0x50001010 C   FIELD 11w01 ID11 (ro): Port input data pin 11
0x50001010 C   FIELD 12w01 ID12 (ro): Port input data pin 12
0x50001010 C   FIELD 13w01 ID13 (ro): Port input data pin 13
0x50001010 C   FIELD 14w01 ID14 (ro): Port input data pin 14
0x50001010 C   FIELD 15w01 ID15 (ro): Port input data pin 15
0x50001014 B  REGISTER ODR: GPIO port output data register
0x50001014 C   FIELD 00w01 OD0 (rw): Port output data pin 0
0x50001014 C   FIELD 01w01 OD1 (rw): Port output data pin 1
0x50001014 C   FIELD 02w01 OD2 (rw): Port output data pin 2
0x50001014 C   FIELD 03w01 OD3 (rw): Port output data pin 3
0x50001014 C   FIELD 04w01 OD4 (rw): Port output data pin 4
0x50001014 C   FIELD 05w01 OD5 (rw): Port output data pin 5
0x50001014 C   FIELD 06w01 OD6 (rw): Port output data pin 6
0x50001014 C   FIELD 07w01 OD7 (rw): Port output data pin 7
0x50001014 C   FIELD 08w01 OD8 (rw): Port output data pin 8
0x50001014 C   FIELD 09w01 OD9 (rw): Port output data pin 9
0x50001014 C   FIELD 10w01 OD10 (rw): Port output data pin 10
0x50001014 C   FIELD 11w01 OD11 (rw): Port output data pin 11
0x50001014 C   FIELD 12w01 OD12 (rw): Port output data pin 12
0x50001014 C   FIELD 13w01 OD13 (rw): Port output data pin 13
0x50001014 C   FIELD 14w01 OD14 (rw): Port output data pin 14
0x50001014 C   FIELD 15w01 OD15 (rw): Port output data pin 15
0x50001018 B  REGISTER BSRR: GPIO port bit set/reset register
0x50001018 C   FIELD 00w01 BS0 (wo): Port x set pin 0
0x50001018 C   FIELD 01w01 BS1 (wo): Port x set pin 1
0x50001018 C   FIELD 02w01 BS2 (wo): Port x set pin 2
0x50001018 C   FIELD 03w01 BS3 (wo): Port x set pin 3
0x50001018 C   FIELD 04w01 BS4 (wo): Port x set pin 4
0x50001018 C   FIELD 05w01 BS5 (wo): Port x set pin 5
0x50001018 C   FIELD 06w01 BS6 (wo): Port x set pin 6
0x50001018 C   FIELD 07w01 BS7 (wo): Port x set pin 7
0x50001018 C   FIELD 08w01 BS8 (wo): Port x set pin 8
0x50001018 C   FIELD 09w01 BS9 (wo): Port x set pin 9
0x50001018 C   FIELD 10w01 BS10 (wo): Port x set pin 10
0x50001018 C   FIELD 11w01 BS11 (wo): Port x set pin 11
0x50001018 C   FIELD 12w01 BS12 (wo): Port x set pin 12
0x50001018 C   FIELD 13w01 BS13 (wo): Port x set pin 13
0x50001018 C   FIELD 14w01 BS14 (wo): Port x set pin 14
0x50001018 C   FIELD 15w01 BS15 (wo): Port x set pin 15
0x50001018 C   FIELD 16w01 BR0 (wo): Port x reset pin 0
0x50001018 C   FIELD 17w01 BR1 (wo): Port x reset pin 1
0x50001018 C   FIELD 18w01 BR2 (wo): Port x reset pin 2
0x50001018 C   FIELD 19w01 BR3 (wo): Port x reset pin 3
0x50001018 C   FIELD 20w01 BR4 (wo): Port x reset pin 4
0x50001018 C   FIELD 21w01 BR5 (wo): Port x reset pin 5
0x50001018 C   FIELD 22w01 BR6 (wo): Port x reset pin 6
0x50001018 C   FIELD 23w01 BR7 (wo): Port x reset pin 7
0x50001018 C   FIELD 24w01 BR8 (wo): Port x reset pin 8
0x50001018 C   FIELD 25w01 BR9 (wo): Port x reset pin 9
0x50001018 C   FIELD 26w01 BR10 (wo): Port x reset pin 10
0x50001018 C   FIELD 27w01 BR11 (wo): Port x reset pin 11
0x50001018 C   FIELD 28w01 BR12 (wo): Port x reset pin 12
0x50001018 C   FIELD 29w01 BR13 (wo): Port x reset pin 13
0x50001018 C   FIELD 30w01 BR14 (wo): Port x reset pin 14
0x50001018 C   FIELD 31w01 BR15 (wo): Port x reset pin 15
0x5000101C B  REGISTER LCKR: GPIO port configuration lock register
0x5000101C C   FIELD 00w01 LCK0 (rw): Port x lock pin 0
0x5000101C C   FIELD 01w01 LCK1 (rw): Port x lock pin 1
0x5000101C C   FIELD 02w01 LCK2 (rw): Port x lock pin 2
0x5000101C C   FIELD 03w01 LCK3 (rw): Port x lock pin 3
0x5000101C C   FIELD 04w01 LCK4 (rw): Port x lock pin 4
0x5000101C C   FIELD 05w01 LCK5 (rw): Port x lock pin 5
0x5000101C C   FIELD 06w01 LCK6 (rw): Port x lock pin 6
0x5000101C C   FIELD 07w01 LCK7 (rw): Port x lock pin 7
0x5000101C C   FIELD 08w01 LCK8 (rw): Port x lock pin 8
0x5000101C C   FIELD 09w01 LCK9 (rw): Port x lock pin 9
0x5000101C C   FIELD 10w01 LCK10 (rw): Port x lock pin 10
0x5000101C C   FIELD 11w01 LCK11 (rw): Port x lock pin 11
0x5000101C C   FIELD 12w01 LCK12 (rw): Port x lock pin 12
0x5000101C C   FIELD 13w01 LCK13 (rw): Port x lock pin 13
0x5000101C C   FIELD 14w01 LCK14 (rw): Port x lock pin 14
0x5000101C C   FIELD 15w01 LCK15 (rw): Port x lock pin 15
0x5000101C C   FIELD 16w01 LCKK (rw): Lock key This bit can be read any time. It can only be modified using the lock key write sequence. LOCK key write sequence: WR LCKR[16] = 1 + LCKR[15:0] WR LCKR[16] = 0 + LCKR[15:0] WR LCKR[16] = 1 + LCKR[15:0] RD LCKR RD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active) Note: During the LOCK key write sequence, the value of LCK[15:0] must not change. Note: Any error in the lock sequence aborts the lock. Note: After the first lock sequence on any bit of the port, any read access on the LCKK bit returns 1 until the next MCU reset or peripheral reset.
0x50001020 B  REGISTER AFRL: GPIO alternate function low register
0x50001020 C   FIELD 00w04 AFREL0 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001020 C   FIELD 04w04 AFREL1 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001020 C   FIELD 08w04 AFREL2 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001020 C   FIELD 12w04 AFREL3 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001020 C   FIELD 16w04 AFREL4 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001020 C   FIELD 20w04 AFREL5 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001020 C   FIELD 24w04 AFREL6 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001020 C   FIELD 28w04 AFREL7 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001024 B  REGISTER AFRH: GPIO alternate function high register
0x50001024 C   FIELD 00w04 AFREL8 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001024 C   FIELD 04w04 AFREL9 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001024 C   FIELD 08w04 AFREL10 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001024 C   FIELD 12w04 AFREL11 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001024 C   FIELD 16w04 AFREL12 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001024 C   FIELD 20w04 AFREL13 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001024 C   FIELD 24w04 AFREL14 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001024 C   FIELD 28w04 AFREL15 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001028 B  REGISTER BRR: GPIO port bit reset register
0x50001028 C   FIELD 00w01 BR0 (wo): Port x reset pin 0
0x50001028 C   FIELD 01w01 BR1 (wo): Port x reset pin 1
0x50001028 C   FIELD 02w01 BR2 (wo): Port x reset pin 2
0x50001028 C   FIELD 03w01 BR3 (wo): Port x reset pin 3
0x50001028 C   FIELD 04w01 BR4 (wo): Port x reset pin 4
0x50001028 C   FIELD 05w01 BR5 (wo): Port x reset pin 5
0x50001028 C   FIELD 06w01 BR6 (wo): Port x reset pin 6
0x50001028 C   FIELD 07w01 BR7 (wo): Port x reset pin 7
0x50001028 C   FIELD 08w01 BR8 (wo): Port x reset pin 8
0x50001028 C   FIELD 09w01 BR9 (wo): Port x reset pin 9
0x50001028 C   FIELD 10w01 BR10 (wo): Port x reset pin 10
0x50001028 C   FIELD 11w01 BR11 (wo): Port x reset pin 11
0x50001028 C   FIELD 12w01 BR12 (wo): Port x reset pin 12
0x50001028 C   FIELD 13w01 BR13 (wo): Port x reset pin 13
0x50001028 C   FIELD 14w01 BR14 (wo): Port x reset pin 14
0x50001028 C   FIELD 15w01 BR15 (wo): Port x reset pin 15
0x50001400 A PERIPHERAL GPIOF
0x50001400 B  REGISTER MODER: GPIO port mode register
0x50001400 C   FIELD 00w02 MODE0 (rw): Port x configuration pin 0
0x50001400 C   FIELD 02w02 MODE1 (rw): Port x configuration pin 1
0x50001400 C   FIELD 04w02 MODE2 (rw): Port x configuration pin 2
0x50001400 C   FIELD 06w02 MODE3 (rw): Port x configuration pin 3
0x50001400 C   FIELD 08w02 MODE4 (rw): Port x configuration pin 4
0x50001400 C   FIELD 10w02 MODE5 (rw): Port x configuration pin 5
0x50001400 C   FIELD 12w02 MODE6 (rw): Port x configuration pin 6
0x50001400 C   FIELD 14w02 MODE7 (rw): Port x configuration pin 7
0x50001400 C   FIELD 16w02 MODE8 (rw): Port x configuration pin 8
0x50001400 C   FIELD 18w02 MODE9 (rw): Port x configuration pin 9
0x50001400 C   FIELD 20w02 MODE10 (rw): Port x configuration pin 10
0x50001400 C   FIELD 22w02 MODE11 (rw): Port x configuration pin 11
0x50001400 C   FIELD 24w02 MODE12 (rw): Port x configuration pin 12
0x50001400 C   FIELD 26w02 MODE13 (rw): Port x configuration pin 13
0x50001400 C   FIELD 28w02 MODE14 (rw): Port x configuration pin 14
0x50001400 C   FIELD 30w02 MODE15 (rw): Port x configuration pin 15
0x50001404 B  REGISTER OTYPER: GPIO port output type register
0x50001404 C   FIELD 00w01 OT0 (rw): Port x configuration pin 0
0x50001404 C   FIELD 01w01 OT1 (rw): Port x configuration pin 1
0x50001404 C   FIELD 02w01 OT2 (rw): Port x configuration pin 2
0x50001404 C   FIELD 03w01 OT3 (rw): Port x configuration pin 3
0x50001404 C   FIELD 04w01 OT4 (rw): Port x configuration pin 4
0x50001404 C   FIELD 05w01 OT5 (rw): Port x configuration pin 5
0x50001404 C   FIELD 06w01 OT6 (rw): Port x configuration pin 6
0x50001404 C   FIELD 07w01 OT7 (rw): Port x configuration pin 7
0x50001404 C   FIELD 08w01 OT8 (rw): Port x configuration pin 8
0x50001404 C   FIELD 09w01 OT9 (rw): Port x configuration pin 9
0x50001404 C   FIELD 10w01 OT10 (rw): Port x configuration pin 10
0x50001404 C   FIELD 11w01 OT11 (rw): Port x configuration pin 11
0x50001404 C   FIELD 12w01 OT12 (rw): Port x configuration pin 12
0x50001404 C   FIELD 13w01 OT13 (rw): Port x configuration pin 13
0x50001404 C   FIELD 14w01 OT14 (rw): Port x configuration pin 14
0x50001404 C   FIELD 15w01 OT15 (rw): Port x configuration pin 15
0x50001408 B  REGISTER OSPEEDR: GPIO port output speed register
0x50001408 C   FIELD 00w02 OSPEED0 (rw): Port x configuration pin 0
0x50001408 C   FIELD 02w02 OSPEED1 (rw): Port x configuration pin 1
0x50001408 C   FIELD 04w02 OSPEED2 (rw): Port x configuration pin 2
0x50001408 C   FIELD 06w02 OSPEED3 (rw): Port x configuration pin 3
0x50001408 C   FIELD 08w02 OSPEED4 (rw): Port x configuration pin 4
0x50001408 C   FIELD 10w02 OSPEED5 (rw): Port x configuration pin 5
0x50001408 C   FIELD 12w02 OSPEED6 (rw): Port x configuration pin 6
0x50001408 C   FIELD 14w02 OSPEED7 (rw): Port x configuration pin 7
0x50001408 C   FIELD 16w02 OSPEED8 (rw): Port x configuration pin 8
0x50001408 C   FIELD 18w02 OSPEED9 (rw): Port x configuration pin 9
0x50001408 C   FIELD 20w02 OSPEED10 (rw): Port x configuration pin 10
0x50001408 C   FIELD 22w02 OSPEED11 (rw): Port x configuration pin 11
0x50001408 C   FIELD 24w02 OSPEED12 (rw): Port x configuration pin 12
0x50001408 C   FIELD 26w02 OSPEED13 (rw): Port x configuration pin 13
0x50001408 C   FIELD 28w02 OSPEED14 (rw): Port x configuration pin 14
0x50001408 C   FIELD 30w02 OSPEED15 (rw): Port x configuration pin 15
0x5000140C B  REGISTER PUPDR: GPIO port pull-up/pull-down register
0x5000140C C   FIELD 00w02 PUPD0 (rw): Port x configuration pin 0
0x5000140C C   FIELD 02w02 PUPD1 (rw): Port x configuration pin 1
0x5000140C C   FIELD 04w02 PUPD2 (rw): Port x configuration pin 2
0x5000140C C   FIELD 06w02 PUPD3 (rw): Port x configuration pin 3
0x5000140C C   FIELD 08w02 PUPD4 (rw): Port x configuration pin 4
0x5000140C C   FIELD 10w02 PUPD5 (rw): Port x configuration pin 5
0x5000140C C   FIELD 12w02 PUPD6 (rw): Port x configuration pin 6
0x5000140C C   FIELD 14w02 PUPD7 (rw): Port x configuration pin 7
0x5000140C C   FIELD 16w02 PUPD8 (rw): Port x configuration pin 8
0x5000140C C   FIELD 18w02 PUPD9 (rw): Port x configuration pin 9
0x5000140C C   FIELD 20w02 PUPD10 (rw): Port x configuration pin 10
0x5000140C C   FIELD 22w02 PUPD11 (rw): Port x configuration pin 11
0x5000140C C   FIELD 24w02 PUPD12 (rw): Port x configuration pin 12
0x5000140C C   FIELD 26w02 PUPD13 (rw): Port x configuration pin 13
0x5000140C C   FIELD 28w02 PUPD14 (rw): Port x configuration pin 14
0x5000140C C   FIELD 30w02 PUPD15 (rw): Port x configuration pin 15
0x50001410 B  REGISTER IDR: GPIO port input data register
0x50001410 C   FIELD 00w01 ID0 (ro): Port input data pin 0
0x50001410 C   FIELD 01w01 ID1 (ro): Port input data pin 1
0x50001410 C   FIELD 02w01 ID2 (ro): Port input data pin 2
0x50001410 C   FIELD 03w01 ID3 (ro): Port input data pin 3
0x50001410 C   FIELD 04w01 ID4 (ro): Port input data pin 4
0x50001410 C   FIELD 05w01 ID5 (ro): Port input data pin 5
0x50001410 C   FIELD 06w01 ID6 (ro): Port input data pin 6
0x50001410 C   FIELD 07w01 ID7 (ro): Port input data pin 7
0x50001410 C   FIELD 08w01 ID8 (ro): Port input data pin 8
0x50001410 C   FIELD 09w01 ID9 (ro): Port input data pin 9
0x50001410 C   FIELD 10w01 ID10 (ro): Port input data pin 10
0x50001410 C   FIELD 11w01 ID11 (ro): Port input data pin 11
0x50001410 C   FIELD 12w01 ID12 (ro): Port input data pin 12
0x50001410 C   FIELD 13w01 ID13 (ro): Port input data pin 13
0x50001410 C   FIELD 14w01 ID14 (ro): Port input data pin 14
0x50001410 C   FIELD 15w01 ID15 (ro): Port input data pin 15
0x50001414 B  REGISTER ODR: GPIO port output data register
0x50001414 C   FIELD 00w01 OD0 (rw): Port output data pin 0
0x50001414 C   FIELD 01w01 OD1 (rw): Port output data pin 1
0x50001414 C   FIELD 02w01 OD2 (rw): Port output data pin 2
0x50001414 C   FIELD 03w01 OD3 (rw): Port output data pin 3
0x50001414 C   FIELD 04w01 OD4 (rw): Port output data pin 4
0x50001414 C   FIELD 05w01 OD5 (rw): Port output data pin 5
0x50001414 C   FIELD 06w01 OD6 (rw): Port output data pin 6
0x50001414 C   FIELD 07w01 OD7 (rw): Port output data pin 7
0x50001414 C   FIELD 08w01 OD8 (rw): Port output data pin 8
0x50001414 C   FIELD 09w01 OD9 (rw): Port output data pin 9
0x50001414 C   FIELD 10w01 OD10 (rw): Port output data pin 10
0x50001414 C   FIELD 11w01 OD11 (rw): Port output data pin 11
0x50001414 C   FIELD 12w01 OD12 (rw): Port output data pin 12
0x50001414 C   FIELD 13w01 OD13 (rw): Port output data pin 13
0x50001414 C   FIELD 14w01 OD14 (rw): Port output data pin 14
0x50001414 C   FIELD 15w01 OD15 (rw): Port output data pin 15
0x50001418 B  REGISTER BSRR: GPIO port bit set/reset register
0x50001418 C   FIELD 00w01 BS0 (wo): Port x set pin 0
0x50001418 C   FIELD 01w01 BS1 (wo): Port x set pin 1
0x50001418 C   FIELD 02w01 BS2 (wo): Port x set pin 2
0x50001418 C   FIELD 03w01 BS3 (wo): Port x set pin 3
0x50001418 C   FIELD 04w01 BS4 (wo): Port x set pin 4
0x50001418 C   FIELD 05w01 BS5 (wo): Port x set pin 5
0x50001418 C   FIELD 06w01 BS6 (wo): Port x set pin 6
0x50001418 C   FIELD 07w01 BS7 (wo): Port x set pin 7
0x50001418 C   FIELD 08w01 BS8 (wo): Port x set pin 8
0x50001418 C   FIELD 09w01 BS9 (wo): Port x set pin 9
0x50001418 C   FIELD 10w01 BS10 (wo): Port x set pin 10
0x50001418 C   FIELD 11w01 BS11 (wo): Port x set pin 11
0x50001418 C   FIELD 12w01 BS12 (wo): Port x set pin 12
0x50001418 C   FIELD 13w01 BS13 (wo): Port x set pin 13
0x50001418 C   FIELD 14w01 BS14 (wo): Port x set pin 14
0x50001418 C   FIELD 15w01 BS15 (wo): Port x set pin 15
0x50001418 C   FIELD 16w01 BR0 (wo): Port x reset pin 0
0x50001418 C   FIELD 17w01 BR1 (wo): Port x reset pin 1
0x50001418 C   FIELD 18w01 BR2 (wo): Port x reset pin 2
0x50001418 C   FIELD 19w01 BR3 (wo): Port x reset pin 3
0x50001418 C   FIELD 20w01 BR4 (wo): Port x reset pin 4
0x50001418 C   FIELD 21w01 BR5 (wo): Port x reset pin 5
0x50001418 C   FIELD 22w01 BR6 (wo): Port x reset pin 6
0x50001418 C   FIELD 23w01 BR7 (wo): Port x reset pin 7
0x50001418 C   FIELD 24w01 BR8 (wo): Port x reset pin 8
0x50001418 C   FIELD 25w01 BR9 (wo): Port x reset pin 9
0x50001418 C   FIELD 26w01 BR10 (wo): Port x reset pin 10
0x50001418 C   FIELD 27w01 BR11 (wo): Port x reset pin 11
0x50001418 C   FIELD 28w01 BR12 (wo): Port x reset pin 12
0x50001418 C   FIELD 29w01 BR13 (wo): Port x reset pin 13
0x50001418 C   FIELD 30w01 BR14 (wo): Port x reset pin 14
0x50001418 C   FIELD 31w01 BR15 (wo): Port x reset pin 15
0x5000141C B  REGISTER LCKR: GPIO port configuration lock register
0x5000141C C   FIELD 00w01 LCK0 (rw): Port x lock pin 0
0x5000141C C   FIELD 01w01 LCK1 (rw): Port x lock pin 1
0x5000141C C   FIELD 02w01 LCK2 (rw): Port x lock pin 2
0x5000141C C   FIELD 03w01 LCK3 (rw): Port x lock pin 3
0x5000141C C   FIELD 04w01 LCK4 (rw): Port x lock pin 4
0x5000141C C   FIELD 05w01 LCK5 (rw): Port x lock pin 5
0x5000141C C   FIELD 06w01 LCK6 (rw): Port x lock pin 6
0x5000141C C   FIELD 07w01 LCK7 (rw): Port x lock pin 7
0x5000141C C   FIELD 08w01 LCK8 (rw): Port x lock pin 8
0x5000141C C   FIELD 09w01 LCK9 (rw): Port x lock pin 9
0x5000141C C   FIELD 10w01 LCK10 (rw): Port x lock pin 10
0x5000141C C   FIELD 11w01 LCK11 (rw): Port x lock pin 11
0x5000141C C   FIELD 12w01 LCK12 (rw): Port x lock pin 12
0x5000141C C   FIELD 13w01 LCK13 (rw): Port x lock pin 13
0x5000141C C   FIELD 14w01 LCK14 (rw): Port x lock pin 14
0x5000141C C   FIELD 15w01 LCK15 (rw): Port x lock pin 15
0x5000141C C   FIELD 16w01 LCKK (rw): Lock key This bit can be read any time. It can only be modified using the lock key write sequence. LOCK key write sequence: WR LCKR[16] = 1 + LCKR[15:0] WR LCKR[16] = 0 + LCKR[15:0] WR LCKR[16] = 1 + LCKR[15:0] RD LCKR RD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active) Note: During the LOCK key write sequence, the value of LCK[15:0] must not change. Note: Any error in the lock sequence aborts the lock. Note: After the first lock sequence on any bit of the port, any read access on the LCKK bit returns 1 until the next MCU reset or peripheral reset.
0x50001420 B  REGISTER AFRL: GPIO alternate function low register
0x50001420 C   FIELD 00w04 AFREL0 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001420 C   FIELD 04w04 AFREL1 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001420 C   FIELD 08w04 AFREL2 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001420 C   FIELD 12w04 AFREL3 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001420 C   FIELD 16w04 AFREL4 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001420 C   FIELD 20w04 AFREL5 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001420 C   FIELD 24w04 AFREL6 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001420 C   FIELD 28w04 AFREL7 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001424 B  REGISTER AFRH: GPIO alternate function high register
0x50001424 C   FIELD 00w04 AFREL8 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001424 C   FIELD 04w04 AFREL9 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001424 C   FIELD 08w04 AFREL10 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001424 C   FIELD 12w04 AFREL11 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001424 C   FIELD 16w04 AFREL12 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001424 C   FIELD 20w04 AFREL13 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001424 C   FIELD 24w04 AFREL14 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001424 C   FIELD 28w04 AFREL15 (rw): Alternate function selection for port x I/O pin y These bits are written by software to configure alternate function I/Os.
0x50001428 B  REGISTER BRR: GPIO port bit reset register
0x50001428 C   FIELD 00w01 BR0 (wo): Port x reset pin 0
0x50001428 C   FIELD 01w01 BR1 (wo): Port x reset pin 1
0x50001428 C   FIELD 02w01 BR2 (wo): Port x reset pin 2
0x50001428 C   FIELD 03w01 BR3 (wo): Port x reset pin 3
0x50001428 C   FIELD 04w01 BR4 (wo): Port x reset pin 4
0x50001428 C   FIELD 05w01 BR5 (wo): Port x reset pin 5
0x50001428 C   FIELD 06w01 BR6 (wo): Port x reset pin 6
0x50001428 C   FIELD 07w01 BR7 (wo): Port x reset pin 7
0x50001428 C   FIELD 08w01 BR8 (wo): Port x reset pin 8
0x50001428 C   FIELD 09w01 BR9 (wo): Port x reset pin 9
0x50001428 C   FIELD 10w01 BR10 (wo): Port x reset pin 10
0x50001428 C   FIELD 11w01 BR11 (wo): Port x reset pin 11
0x50001428 C   FIELD 12w01 BR12 (wo): Port x reset pin 12
0x50001428 C   FIELD 13w01 BR13 (wo): Port x reset pin 13
0x50001428 C   FIELD 14w01 BR14 (wo): Port x reset pin 14
0x50001428 C   FIELD 15w01 BR15 (wo): Port x reset pin 15
INTERRUPT 000: WWDG (WWDG): Window watchdog interrupt
INTERRUPT 001: PVD_PVM (EXTI): PVD/PVM1/PVM2/PVM3 interrupt (combined with EXTI lines 16 and 19 and 20 and 21)
INTERRUPT 002: RTC_TAMP (RTC): RTC and TAMP interrupts(combined EXTI lines 19 and 21)
INTERRUPT 003: FLASH (FLASH): FLASH global interrupt
INTERRUPT 004: RCC_CRS (RCC): RCC and CRS global interrupt
INTERRUPT 005: EXTI0_1 (EXTI): EXTI lines 0 and 1 interrupt
INTERRUPT 006: EXTI2_3 (EXTI): EXTI lines 2 and 3 interrupt
INTERRUPT 007: EXTI4_15 (EXTI): EXTI lines 4 to 15 interrupt
INTERRUPT 008: USB (USB): USB global interrupt (combined with EXTI line 33)
INTERRUPT 009: DMA1_CHannel1 (DMA1): DMA1 channel 1 interrupt
INTERRUPT 010: DMA1_Channel2_3 (DMA1): DMA1 channel 2 and 3 interrupts
INTERRUPT 011: DMA1_Channel4_5_6_7 (DMA1): DMA1 channel 4, 5, 6, 7, DMAMUX, DMA2 channel 1, 2, 3, 4, 5 interrupts
INTERRUPT 012: ADC_COMP (ADC): ADC and COMP interrupts (ADC combined with EXTI lines 17 and 18)
INTERRUPT 013: TIM1_BRK_UP_TRG_COM (TIM1): TIM1 break, update, trigger and commutation interrupts
INTERRUPT 014: TIM1_CC (TIM1): TIM1 Capture Compare interrupt
INTERRUPT 015: TIM2 (TIM2): TIM2 global interrupt
INTERRUPT 016: TIM3 (TIM3): TIM3 global interrupt
INTERRUPT 017: TIM6_DAC_LPTIM1 (TIM6): TIM6, LPTIM1 and DAC global interrupt (combined with EXTI line 29)
INTERRUPT 018: TIM7_LPTIM2 (TIM7): TIM7 and LPTIM2 global interrupt (combined with EXTI line 30)
INTERRUPT 019: TIM15_LPTIM3 (TIM15): TIM15 and LPTIM3 global interrupt (combined with EXTI line 29)
INTERRUPT 020: TIM16 (TIM16): TIM16 global interrupt
INTERRUPT 021: TSC (TSC): TSC global interrupt
INTERRUPT 022: LCD (LCD): LCD global interrupt (combined with EXTI line 32)
INTERRUPT 023: I2C1 (I2C1): I2C1 global interrupt (combined with EXTI line 23)
INTERRUPT 024: I2C2_I2C3_I2C4 (I2C2): I2C2/3/4 global interrupt
INTERRUPT 025: SPI1 (SPI1): SPI1 global interrupt
INTERRUPT 026: SPI2_SPI3 (SPI2): SPI2/3 global interrupt
INTERRUPT 027: USART1 (USART1): USART1 global interrupt (combined with EXTI line 25)
INTERRUPT 028: USART2_LPUART2 (USART2): USART2 and LPUART2 global interrupt (combined with EXTI lines 26 and 35)
INTERRUPT 029: USART3_LPUART1 (USART3): USART3 and LPUART1 global interrupt (combined with EXTI lines 24 and 28)
INTERRUPT 030: USART4_LPUART3 (USART4): USART4 and LPUART3 global interrupt (combined with EXTI lines 20 and 34)
