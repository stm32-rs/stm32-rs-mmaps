0x40000000 A PERIPHERAL TIM2
0x40000000 B  REGISTER CR1 (rw): control register 1
0x40000000 C   FIELD 00w01 CEN: Counter enable
0x40000000 C   FIELD 01w01 UDIS: Update disable
0x40000000 C   FIELD 02w01 URS: Update request source
0x40000000 C   FIELD 03w01 OPM: One-pulse mode
0x40000000 C   FIELD 04w01 DIR: Direction
0x40000000 C   FIELD 05w02 CMS: Center-aligned mode selection
0x40000000 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40000000 C   FIELD 08w02 CKD: Clock division
0x40000000 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40000000 C   FIELD 12w01 DITHEN: Dithering Enable
0x40000004 B  REGISTER CR2 (rw): control register 2
0x40000004 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40000004 C   FIELD 04w03 MMS: Master mode selection
0x40000004 C   FIELD 07w01 TI1S: TI1 selection
0x40000004 C   FIELD 25w01 MMS_3: Master mode selection
0x40000008 B  REGISTER SMCR (rw): slave mode control register
0x40000008 C   FIELD 00w03 SMS: Slave mode selection
0x40000008 C   FIELD 03w01 OCCS: OCREF clear selection
0x40000008 C   FIELD 04w03 TS_2_0: Trigger selection
0x40000008 C   FIELD 07w01 MSM: Master/Slave mode
0x40000008 C   FIELD 08w04 ETF: External trigger filter
0x40000008 C   FIELD 12w02 ETPS: External trigger prescaler
0x40000008 C   FIELD 14w01 ECE: External clock enable
0x40000008 C   FIELD 15w01 ETP: External trigger polarity
0x40000008 C   FIELD 16w01 SMS_bit3: Slave mode selection - bit 3
0x40000008 C   FIELD 20w02 TS_4_3: Trigger selection
0x40000008 C   FIELD 24w01 SMSPE: SMS preload enable
0x40000008 C   FIELD 25w01 SMSPS: SMS preload source
0x4000000C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000000C C   FIELD 00w01 UIE: Update interrupt enable
0x4000000C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x4000000C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x4000000C C   FIELD 03w01 CC3IE: Capture/Compare 3 interrupt enable
0x4000000C C   FIELD 04w01 CC4IE: Capture/Compare 4 interrupt enable
0x4000000C C   FIELD 06w01 TIE: Trigger interrupt enable
0x4000000C C   FIELD 08w01 UDE: Update DMA request enable
0x4000000C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x4000000C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x4000000C C   FIELD 11w01 CC3DE: Capture/Compare 3 DMA request enable
0x4000000C C   FIELD 12w01 CC4DE: Capture/Compare 4 DMA request enable
0x4000000C C   FIELD 14w01 TDE: Trigger DMA request enable
0x4000000C C   FIELD 20w01 IDXIE: Index interrupt enable
0x4000000C C   FIELD 21w01 DIRIE: Direction change interrupt enable
0x4000000C C   FIELD 22w01 IERRIE: Index error interrupt enable
0x4000000C C   FIELD 23w01 TERRIE: Transition error interrupt enable
0x40000010 B  REGISTER SR (rw): status register
0x40000010 C   FIELD 00w01 UIF: Update interrupt flag
0x40000010 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x40000010 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x40000010 C   FIELD 03w01 CC3IF: Capture/Compare 3 interrupt flag
0x40000010 C   FIELD 04w01 CC4IF: Capture/Compare 4 interrupt flag
0x40000010 C   FIELD 06w01 TIF: Trigger interrupt flag
0x40000010 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x40000010 C   FIELD 10w01 CC2OF: Capture/compare 2 overcapture flag
0x40000010 C   FIELD 11w01 CC3OF: Capture/Compare 3 overcapture flag
0x40000010 C   FIELD 12w01 CC4OF: Capture/Compare 4 overcapture flag
0x40000010 C   FIELD 20w01 IDXF: Index interrupt flag
0x40000010 C   FIELD 21w01 DIRF: Direction change interrupt flag
0x40000010 C   FIELD 22w01 IERRF: Index error interrupt flag
0x40000010 C   FIELD 23w01 TERRF: Transition error interrupt flag
0x40000014 B  REGISTER EGR (wo): event generation register
0x40000014 C   FIELD 00w01 UG: Update generation
0x40000014 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x40000014 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x40000014 C   FIELD 03w01 CC3G: Capture/compare 3 generation
0x40000014 C   FIELD 04w01 CC4G: Capture/compare 4 generation
0x40000014 C   FIELD 06w01 TG: Trigger generation
0x40000018 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40000018 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40000018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000018 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x40000018 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40000018 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x40000018 C   FIELD 04w03 OC1M: Output compare 1 mode
0x40000018 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40000018 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x40000018 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x40000018 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x40000018 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x40000018 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x40000018 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x40000018 C   FIELD 12w03 OC2M: Output compare 2 mode
0x40000018 C   FIELD 12w04 IC2F: Input capture 2 filter
0x40000018 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x40000018 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x40000018 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x4000001C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x4000001C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x4000001C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x4000001C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x4000001C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x4000001C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x4000001C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x4000001C C   FIELD 04w03 OC3M: Output compare 3 mode
0x4000001C C   FIELD 04w04 IC3F: Input capture 3 filter
0x4000001C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x4000001C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x4000001C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x4000001C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x4000001C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x4000001C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x4000001C C   FIELD 12w03 OC4M: Output compare 4 mode
0x4000001C C   FIELD 12w04 IC4F: Input capture 4 filter
0x4000001C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x4000001C C   FIELD 16w01 OC3M_bit3: Output Compare 1 mode - bit 3
0x4000001C C   FIELD 24w01 OC4M_bit3: Output Compare 2 mode - bit 3
0x40000020 B  REGISTER CCER (rw): capture/compare enable register
0x40000020 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x40000020 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x40000020 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x40000020 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x40000020 C   FIELD 05w01 CC2P: Capture/Compare 2 output Polarity
0x40000020 C   FIELD 07w01 CC2NP: Capture/Compare 2 output Polarity
0x40000020 C   FIELD 08w01 CC3E: Capture/Compare 3 output enable
0x40000020 C   FIELD 09w01 CC3P: Capture/Compare 3 output Polarity
0x40000020 C   FIELD 11w01 CC3NP: Capture/Compare 3 output Polarity
0x40000020 C   FIELD 12w01 CC4E: Capture/Compare 4 output enable
0x40000020 C   FIELD 13w01 CC4P: Capture/Compare 3 output Polarity
0x40000020 C   FIELD 15w01 CC4NP: Capture/Compare 4 output Polarity
0x40000024 B  REGISTER CNT (rw): counter
0x40000024 C   FIELD 00w16 CNT_L: Least significant part of counter value
0x40000024 C   FIELD 16w15 CNT_H: Most significant part counter value (on TIM2 and TIM5)
0x40000024 C   FIELD 31w01 CNT_bit31: Most significant bit of counter value (on TIM2 and TIM5)
0x40000028 B  REGISTER PSC (rw): prescaler
0x40000028 C   FIELD 00w16 PSC: Prescaler value
0x4000002C B  REGISTER ARR (rw): auto-reload register
0x4000002C C   FIELD 00w16 ARR_L: Low Auto-reload value
0x4000002C C   FIELD 16w16 ARR_H: High Auto-reload value (TIM2 only)
0x40000034 B  REGISTER CCR1 (rw): capture/compare register 1
0x40000034 C   FIELD 00w16 CCR1_L: Low Capture/Compare 1 value
0x40000034 C   FIELD 16w16 CCR1_H: High Capture/Compare 1 value (TIM2 only)
0x40000038 B  REGISTER CCR2 (rw): capture/compare register 2
0x40000038 C   FIELD 00w16 CCR2_L: Low Capture/Compare 2 value
0x40000038 C   FIELD 16w16 CCR2_H: High Capture/Compare 2 value (TIM2 only)
0x4000003C B  REGISTER CCR3 (rw): capture/compare register 3
0x4000003C C   FIELD 00w16 CCR3_L: Low Capture/Compare value
0x4000003C C   FIELD 16w16 CCR3_H: High Capture/Compare value (TIM2 only)
0x40000040 B  REGISTER CCR4 (rw): capture/compare register 4
0x40000040 C   FIELD 00w16 CCR4_L: Low Capture/Compare value
0x40000040 C   FIELD 16w16 CCR4_H: High Capture/Compare value (TIM2 only)
0x40000058 B  REGISTER ECR (rw): encoder control register
0x40000058 C   FIELD 00w01 IE: Index enable
0x40000058 C   FIELD 01w02 IDIR: Index direction
0x40000058 C   FIELD 03w02 IBLK: Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x40000058 C   FIELD 05w01 FIDX: First index
0x40000058 C   FIELD 06w02 IPOS: Index positioning
0x40000058 C   FIELD 16w08 PW: Pulse width
0x40000058 C   FIELD 24w03 PWPRSC: Pulse width prescaler
0x4000005C B  REGISTER TISEL (rw): timer input selection register
0x4000005C C   FIELD 00w04 TI1SEL: Selects tim_ti1[0..15] input
0x4000005C C   FIELD 08w04 TI2SEL: Selects tim_ti2[0..15] input
0x4000005C C   FIELD 16w04 TI3SEL: Selects tim_ti3[0..15] input
0x4000005C C   FIELD 24w04 TI4SEL: Selects tim_ti4[0..15] input
0x40000060 B  REGISTER AF1 (rw): alternate function register 1
0x40000060 C   FIELD 14w04 ETRSEL: etr_in source selection
0x40000064 B  REGISTER AF2 (rw): alternate function register 2
0x40000064 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x400003DC B  REGISTER DCR (rw): DMA control register
0x400003DC C   FIELD 00w05 DBA: DMA base address
0x400003DC C   FIELD 08w05 DBL: DMA burst length
0x400003DC C   FIELD 16w04 DBSS: DMA burst source selection
0x400003E0 B  REGISTER DMAR (rw): DMA address for full transfer
0x400003E0 C   FIELD 00w32 ETRSEL: DMA register for burst accesses
0x40000400 A PERIPHERAL TIM3
0x40000400 B  REGISTER CR1 (rw): control register 1
0x40000400 C   FIELD 00w01 CEN: Counter enable
0x40000400 C   FIELD 01w01 UDIS: Update disable
0x40000400 C   FIELD 02w01 URS: Update request source
0x40000400 C   FIELD 03w01 OPM: One-pulse mode
0x40000400 C   FIELD 04w01 DIR: Direction
0x40000400 C   FIELD 05w02 CMS: Center-aligned mode selection
0x40000400 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40000400 C   FIELD 08w02 CKD: Clock division
0x40000400 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40000400 C   FIELD 12w01 DITHEN: Dithering Enable
0x40000404 B  REGISTER CR2 (rw): control register 2
0x40000404 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40000404 C   FIELD 04w03 MMS: Master mode selection
0x40000404 C   FIELD 07w01 TI1S: TI1 selection
0x40000404 C   FIELD 25w01 MMS_3: Master mode selection
0x40000408 B  REGISTER SMCR (rw): slave mode control register
0x40000408 C   FIELD 00w03 SMS: Slave mode selection
0x40000408 C   FIELD 03w01 OCCS: OCREF clear selection
0x40000408 C   FIELD 04w03 TS_2_0: Trigger selection
0x40000408 C   FIELD 07w01 MSM: Master/Slave mode
0x40000408 C   FIELD 08w04 ETF: External trigger filter
0x40000408 C   FIELD 12w02 ETPS: External trigger prescaler
0x40000408 C   FIELD 14w01 ECE: External clock enable
0x40000408 C   FIELD 15w01 ETP: External trigger polarity
0x40000408 C   FIELD 16w01 SMS_bit3: Slave mode selection - bit 3
0x40000408 C   FIELD 20w02 TS_4_3: Trigger selection
0x40000408 C   FIELD 24w01 SMSPE: SMS preload enable
0x40000408 C   FIELD 25w01 SMSPS: SMS preload source
0x4000040C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000040C C   FIELD 00w01 UIE: Update interrupt enable
0x4000040C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x4000040C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x4000040C C   FIELD 03w01 CC3IE: Capture/Compare 3 interrupt enable
0x4000040C C   FIELD 04w01 CC4IE: Capture/Compare 4 interrupt enable
0x4000040C C   FIELD 06w01 TIE: Trigger interrupt enable
0x4000040C C   FIELD 08w01 UDE: Update DMA request enable
0x4000040C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x4000040C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x4000040C C   FIELD 11w01 CC3DE: Capture/Compare 3 DMA request enable
0x4000040C C   FIELD 12w01 CC4DE: Capture/Compare 4 DMA request enable
0x4000040C C   FIELD 14w01 TDE: Trigger DMA request enable
0x4000040C C   FIELD 20w01 IDXIE: Index interrupt enable
0x4000040C C   FIELD 21w01 DIRIE: Direction change interrupt enable
0x4000040C C   FIELD 22w01 IERRIE: Index error interrupt enable
0x4000040C C   FIELD 23w01 TERRIE: Transition error interrupt enable
0x40000410 B  REGISTER SR (rw): status register
0x40000410 C   FIELD 00w01 UIF: Update interrupt flag
0x40000410 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x40000410 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x40000410 C   FIELD 03w01 CC3IF: Capture/Compare 3 interrupt flag
0x40000410 C   FIELD 04w01 CC4IF: Capture/Compare 4 interrupt flag
0x40000410 C   FIELD 06w01 TIF: Trigger interrupt flag
0x40000410 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x40000410 C   FIELD 10w01 CC2OF: Capture/compare 2 overcapture flag
0x40000410 C   FIELD 11w01 CC3OF: Capture/Compare 3 overcapture flag
0x40000410 C   FIELD 12w01 CC4OF: Capture/Compare 4 overcapture flag
0x40000410 C   FIELD 20w01 IDXF: Index interrupt flag
0x40000410 C   FIELD 21w01 DIRF: Direction change interrupt flag
0x40000410 C   FIELD 22w01 IERRF: Index error interrupt flag
0x40000410 C   FIELD 23w01 TERRF: Transition error interrupt flag
0x40000414 B  REGISTER EGR (wo): event generation register
0x40000414 C   FIELD 00w01 UG: Update generation
0x40000414 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x40000414 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x40000414 C   FIELD 03w01 CC3G: Capture/compare 3 generation
0x40000414 C   FIELD 04w01 CC4G: Capture/compare 4 generation
0x40000414 C   FIELD 06w01 TG: Trigger generation
0x40000418 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40000418 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40000418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000418 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x40000418 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40000418 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x40000418 C   FIELD 04w03 OC1M: Output compare 1 mode
0x40000418 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40000418 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x40000418 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x40000418 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x40000418 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x40000418 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x40000418 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x40000418 C   FIELD 12w03 OC2M: Output compare 2 mode
0x40000418 C   FIELD 12w04 IC2F: Input capture 2 filter
0x40000418 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x40000418 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x40000418 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x4000041C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x4000041C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x4000041C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x4000041C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x4000041C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x4000041C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x4000041C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x4000041C C   FIELD 04w03 OC3M: Output compare 3 mode
0x4000041C C   FIELD 04w04 IC3F: Input capture 3 filter
0x4000041C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x4000041C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x4000041C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x4000041C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x4000041C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x4000041C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x4000041C C   FIELD 12w03 OC4M: Output compare 4 mode
0x4000041C C   FIELD 12w04 IC4F: Input capture 4 filter
0x4000041C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x4000041C C   FIELD 16w01 OC3M_bit3: Output Compare 1 mode - bit 3
0x4000041C C   FIELD 24w01 OC4M_bit3: Output Compare 2 mode - bit 3
0x40000420 B  REGISTER CCER (rw): capture/compare enable register
0x40000420 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x40000420 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x40000420 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x40000420 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x40000420 C   FIELD 05w01 CC2P: Capture/Compare 2 output Polarity
0x40000420 C   FIELD 07w01 CC2NP: Capture/Compare 2 output Polarity
0x40000420 C   FIELD 08w01 CC3E: Capture/Compare 3 output enable
0x40000420 C   FIELD 09w01 CC3P: Capture/Compare 3 output Polarity
0x40000420 C   FIELD 11w01 CC3NP: Capture/Compare 3 output Polarity
0x40000420 C   FIELD 12w01 CC4E: Capture/Compare 4 output enable
0x40000420 C   FIELD 13w01 CC4P: Capture/Compare 3 output Polarity
0x40000420 C   FIELD 15w01 CC4NP: Capture/Compare 4 output Polarity
0x40000424 B  REGISTER CNT (rw): counter
0x40000424 C   FIELD 00w16 CNT_L: Least significant part of counter value
0x40000424 C   FIELD 16w15 CNT_H: Most significant part counter value (on TIM2 and TIM5)
0x40000424 C   FIELD 31w01 CNT_bit31: Most significant bit of counter value (on TIM2 and TIM5)
0x40000428 B  REGISTER PSC (rw): prescaler
0x40000428 C   FIELD 00w16 PSC: Prescaler value
0x4000042C B  REGISTER ARR (rw): auto-reload register
0x4000042C C   FIELD 00w16 ARR_L: Low Auto-reload value
0x4000042C C   FIELD 16w16 ARR_H: High Auto-reload value (TIM2 only)
0x40000434 B  REGISTER CCR1 (rw): capture/compare register 1
0x40000434 C   FIELD 00w16 CCR1_L: Low Capture/Compare 1 value
0x40000434 C   FIELD 16w16 CCR1_H: High Capture/Compare 1 value (TIM2 only)
0x40000438 B  REGISTER CCR2 (rw): capture/compare register 2
0x40000438 C   FIELD 00w16 CCR2_L: Low Capture/Compare 2 value
0x40000438 C   FIELD 16w16 CCR2_H: High Capture/Compare 2 value (TIM2 only)
0x4000043C B  REGISTER CCR3 (rw): capture/compare register 3
0x4000043C C   FIELD 00w16 CCR3_L: Low Capture/Compare value
0x4000043C C   FIELD 16w16 CCR3_H: High Capture/Compare value (TIM2 only)
0x40000440 B  REGISTER CCR4 (rw): capture/compare register 4
0x40000440 C   FIELD 00w16 CCR4_L: Low Capture/Compare value
0x40000440 C   FIELD 16w16 CCR4_H: High Capture/Compare value (TIM2 only)
0x40000458 B  REGISTER ECR (rw): encoder control register
0x40000458 C   FIELD 00w01 IE: Index enable
0x40000458 C   FIELD 01w02 IDIR: Index direction
0x40000458 C   FIELD 03w02 IBLK: Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x40000458 C   FIELD 05w01 FIDX: First index
0x40000458 C   FIELD 06w02 IPOS: Index positioning
0x40000458 C   FIELD 16w08 PW: Pulse width
0x40000458 C   FIELD 24w03 PWPRSC: Pulse width prescaler
0x4000045C B  REGISTER TISEL (rw): timer input selection register
0x4000045C C   FIELD 00w04 TI1SEL: Selects tim_ti1[0..15] input
0x4000045C C   FIELD 08w04 TI2SEL: Selects tim_ti2[0..15] input
0x4000045C C   FIELD 16w04 TI3SEL: Selects tim_ti3[0..15] input
0x4000045C C   FIELD 24w04 TI4SEL: Selects tim_ti4[0..15] input
0x40000460 B  REGISTER AF1 (rw): alternate function register 1
0x40000460 C   FIELD 14w04 ETRSEL: etr_in source selection
0x40000464 B  REGISTER AF2 (rw): alternate function register 2
0x40000464 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x400007DC B  REGISTER DCR (rw): DMA control register
0x400007DC C   FIELD 00w05 DBA: DMA base address
0x400007DC C   FIELD 08w05 DBL: DMA burst length
0x400007DC C   FIELD 16w04 DBSS: DMA burst source selection
0x400007E0 B  REGISTER DMAR (rw): DMA address for full transfer
0x400007E0 C   FIELD 00w32 ETRSEL: DMA register for burst accesses
0x40000800 A PERIPHERAL TIM4
0x40000800 B  REGISTER CR1 (rw): control register 1
0x40000800 C   FIELD 00w01 CEN: Counter enable
0x40000800 C   FIELD 01w01 UDIS: Update disable
0x40000800 C   FIELD 02w01 URS: Update request source
0x40000800 C   FIELD 03w01 OPM: One-pulse mode
0x40000800 C   FIELD 04w01 DIR: Direction
0x40000800 C   FIELD 05w02 CMS: Center-aligned mode selection
0x40000800 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40000800 C   FIELD 08w02 CKD: Clock division
0x40000800 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40000800 C   FIELD 12w01 DITHEN: Dithering Enable
0x40000804 B  REGISTER CR2 (rw): control register 2
0x40000804 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40000804 C   FIELD 04w03 MMS: Master mode selection
0x40000804 C   FIELD 07w01 TI1S: TI1 selection
0x40000804 C   FIELD 25w01 MMS_3: Master mode selection
0x40000808 B  REGISTER SMCR (rw): slave mode control register
0x40000808 C   FIELD 00w03 SMS: Slave mode selection
0x40000808 C   FIELD 03w01 OCCS: OCREF clear selection
0x40000808 C   FIELD 04w03 TS_2_0: Trigger selection
0x40000808 C   FIELD 07w01 MSM: Master/Slave mode
0x40000808 C   FIELD 08w04 ETF: External trigger filter
0x40000808 C   FIELD 12w02 ETPS: External trigger prescaler
0x40000808 C   FIELD 14w01 ECE: External clock enable
0x40000808 C   FIELD 15w01 ETP: External trigger polarity
0x40000808 C   FIELD 16w01 SMS_bit3: Slave mode selection - bit 3
0x40000808 C   FIELD 20w02 TS_4_3: Trigger selection
0x40000808 C   FIELD 24w01 SMSPE: SMS preload enable
0x40000808 C   FIELD 25w01 SMSPS: SMS preload source
0x4000080C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000080C C   FIELD 00w01 UIE: Update interrupt enable
0x4000080C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x4000080C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x4000080C C   FIELD 03w01 CC3IE: Capture/Compare 3 interrupt enable
0x4000080C C   FIELD 04w01 CC4IE: Capture/Compare 4 interrupt enable
0x4000080C C   FIELD 06w01 TIE: Trigger interrupt enable
0x4000080C C   FIELD 08w01 UDE: Update DMA request enable
0x4000080C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x4000080C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x4000080C C   FIELD 11w01 CC3DE: Capture/Compare 3 DMA request enable
0x4000080C C   FIELD 12w01 CC4DE: Capture/Compare 4 DMA request enable
0x4000080C C   FIELD 14w01 TDE: Trigger DMA request enable
0x4000080C C   FIELD 20w01 IDXIE: Index interrupt enable
0x4000080C C   FIELD 21w01 DIRIE: Direction change interrupt enable
0x4000080C C   FIELD 22w01 IERRIE: Index error interrupt enable
0x4000080C C   FIELD 23w01 TERRIE: Transition error interrupt enable
0x40000810 B  REGISTER SR (rw): status register
0x40000810 C   FIELD 00w01 UIF: Update interrupt flag
0x40000810 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x40000810 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x40000810 C   FIELD 03w01 CC3IF: Capture/Compare 3 interrupt flag
0x40000810 C   FIELD 04w01 CC4IF: Capture/Compare 4 interrupt flag
0x40000810 C   FIELD 06w01 TIF: Trigger interrupt flag
0x40000810 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x40000810 C   FIELD 10w01 CC2OF: Capture/compare 2 overcapture flag
0x40000810 C   FIELD 11w01 CC3OF: Capture/Compare 3 overcapture flag
0x40000810 C   FIELD 12w01 CC4OF: Capture/Compare 4 overcapture flag
0x40000810 C   FIELD 20w01 IDXF: Index interrupt flag
0x40000810 C   FIELD 21w01 DIRF: Direction change interrupt flag
0x40000810 C   FIELD 22w01 IERRF: Index error interrupt flag
0x40000810 C   FIELD 23w01 TERRF: Transition error interrupt flag
0x40000814 B  REGISTER EGR (wo): event generation register
0x40000814 C   FIELD 00w01 UG: Update generation
0x40000814 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x40000814 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x40000814 C   FIELD 03w01 CC3G: Capture/compare 3 generation
0x40000814 C   FIELD 04w01 CC4G: Capture/compare 4 generation
0x40000814 C   FIELD 06w01 TG: Trigger generation
0x40000818 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40000818 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40000818 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000818 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000818 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x40000818 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40000818 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x40000818 C   FIELD 04w03 OC1M: Output compare 1 mode
0x40000818 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40000818 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x40000818 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x40000818 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x40000818 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x40000818 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x40000818 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x40000818 C   FIELD 12w03 OC2M: Output compare 2 mode
0x40000818 C   FIELD 12w04 IC2F: Input capture 2 filter
0x40000818 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x40000818 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x40000818 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x4000081C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x4000081C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x4000081C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x4000081C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x4000081C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x4000081C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x4000081C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x4000081C C   FIELD 04w03 OC3M: Output compare 3 mode
0x4000081C C   FIELD 04w04 IC3F: Input capture 3 filter
0x4000081C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x4000081C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x4000081C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x4000081C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x4000081C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x4000081C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x4000081C C   FIELD 12w03 OC4M: Output compare 4 mode
0x4000081C C   FIELD 12w04 IC4F: Input capture 4 filter
0x4000081C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x4000081C C   FIELD 16w01 OC3M_bit3: Output Compare 1 mode - bit 3
0x4000081C C   FIELD 24w01 OC4M_bit3: Output Compare 2 mode - bit 3
0x40000820 B  REGISTER CCER (rw): capture/compare enable register
0x40000820 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x40000820 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x40000820 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x40000820 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x40000820 C   FIELD 05w01 CC2P: Capture/Compare 2 output Polarity
0x40000820 C   FIELD 07w01 CC2NP: Capture/Compare 2 output Polarity
0x40000820 C   FIELD 08w01 CC3E: Capture/Compare 3 output enable
0x40000820 C   FIELD 09w01 CC3P: Capture/Compare 3 output Polarity
0x40000820 C   FIELD 11w01 CC3NP: Capture/Compare 3 output Polarity
0x40000820 C   FIELD 12w01 CC4E: Capture/Compare 4 output enable
0x40000820 C   FIELD 13w01 CC4P: Capture/Compare 3 output Polarity
0x40000820 C   FIELD 15w01 CC4NP: Capture/Compare 4 output Polarity
0x40000824 B  REGISTER CNT (rw): counter
0x40000824 C   FIELD 00w16 CNT_L: Least significant part of counter value
0x40000824 C   FIELD 16w15 CNT_H: Most significant part counter value (on TIM2 and TIM5)
0x40000824 C   FIELD 31w01 CNT_bit31: Most significant bit of counter value (on TIM2 and TIM5)
0x40000828 B  REGISTER PSC (rw): prescaler
0x40000828 C   FIELD 00w16 PSC: Prescaler value
0x4000082C B  REGISTER ARR (rw): auto-reload register
0x4000082C C   FIELD 00w16 ARR_L: Low Auto-reload value
0x4000082C C   FIELD 16w16 ARR_H: High Auto-reload value (TIM2 only)
0x40000834 B  REGISTER CCR1 (rw): capture/compare register 1
0x40000834 C   FIELD 00w16 CCR1_L: Low Capture/Compare 1 value
0x40000834 C   FIELD 16w16 CCR1_H: High Capture/Compare 1 value (TIM2 only)
0x40000838 B  REGISTER CCR2 (rw): capture/compare register 2
0x40000838 C   FIELD 00w16 CCR2_L: Low Capture/Compare 2 value
0x40000838 C   FIELD 16w16 CCR2_H: High Capture/Compare 2 value (TIM2 only)
0x4000083C B  REGISTER CCR3 (rw): capture/compare register 3
0x4000083C C   FIELD 00w16 CCR3_L: Low Capture/Compare value
0x4000083C C   FIELD 16w16 CCR3_H: High Capture/Compare value (TIM2 only)
0x40000840 B  REGISTER CCR4 (rw): capture/compare register 4
0x40000840 C   FIELD 00w16 CCR4_L: Low Capture/Compare value
0x40000840 C   FIELD 16w16 CCR4_H: High Capture/Compare value (TIM2 only)
0x40000858 B  REGISTER ECR (rw): encoder control register
0x40000858 C   FIELD 00w01 IE: Index enable
0x40000858 C   FIELD 01w02 IDIR: Index direction
0x40000858 C   FIELD 03w02 IBLK: Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x40000858 C   FIELD 05w01 FIDX: First index
0x40000858 C   FIELD 06w02 IPOS: Index positioning
0x40000858 C   FIELD 16w08 PW: Pulse width
0x40000858 C   FIELD 24w03 PWPRSC: Pulse width prescaler
0x4000085C B  REGISTER TISEL (rw): timer input selection register
0x4000085C C   FIELD 00w04 TI1SEL: Selects tim_ti1[0..15] input
0x4000085C C   FIELD 08w04 TI2SEL: Selects tim_ti2[0..15] input
0x4000085C C   FIELD 16w04 TI3SEL: Selects tim_ti3[0..15] input
0x4000085C C   FIELD 24w04 TI4SEL: Selects tim_ti4[0..15] input
0x40000860 B  REGISTER AF1 (rw): alternate function register 1
0x40000860 C   FIELD 14w04 ETRSEL: etr_in source selection
0x40000864 B  REGISTER AF2 (rw): alternate function register 2
0x40000864 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x40000BDC B  REGISTER DCR (rw): DMA control register
0x40000BDC C   FIELD 00w05 DBA: DMA base address
0x40000BDC C   FIELD 08w05 DBL: DMA burst length
0x40000BDC C   FIELD 16w04 DBSS: DMA burst source selection
0x40000BE0 B  REGISTER DMAR (rw): DMA address for full transfer
0x40000BE0 C   FIELD 00w32 ETRSEL: DMA register for burst accesses
0x40000C00 A PERIPHERAL TIM5
0x40000C00 B  REGISTER CR1 (rw): control register 1
0x40000C00 C   FIELD 00w01 CEN: Counter enable
0x40000C00 C   FIELD 01w01 UDIS: Update disable
0x40000C00 C   FIELD 02w01 URS: Update request source
0x40000C00 C   FIELD 03w01 OPM: One-pulse mode
0x40000C00 C   FIELD 04w01 DIR: Direction
0x40000C00 C   FIELD 05w02 CMS: Center-aligned mode selection
0x40000C00 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40000C00 C   FIELD 08w02 CKD: Clock division
0x40000C00 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40000C00 C   FIELD 12w01 DITHEN: Dithering Enable
0x40000C04 B  REGISTER CR2 (rw): control register 2
0x40000C04 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40000C04 C   FIELD 04w03 MMS: Master mode selection
0x40000C04 C   FIELD 07w01 TI1S: TI1 selection
0x40000C04 C   FIELD 25w01 MMS_3: Master mode selection
0x40000C08 B  REGISTER SMCR (rw): slave mode control register
0x40000C08 C   FIELD 00w03 SMS: Slave mode selection
0x40000C08 C   FIELD 03w01 OCCS: OCREF clear selection
0x40000C08 C   FIELD 04w03 TS_2_0: Trigger selection
0x40000C08 C   FIELD 07w01 MSM: Master/Slave mode
0x40000C08 C   FIELD 08w04 ETF: External trigger filter
0x40000C08 C   FIELD 12w02 ETPS: External trigger prescaler
0x40000C08 C   FIELD 14w01 ECE: External clock enable
0x40000C08 C   FIELD 15w01 ETP: External trigger polarity
0x40000C08 C   FIELD 16w01 SMS_bit3: Slave mode selection - bit 3
0x40000C08 C   FIELD 20w02 TS_4_3: Trigger selection
0x40000C08 C   FIELD 24w01 SMSPE: SMS preload enable
0x40000C08 C   FIELD 25w01 SMSPS: SMS preload source
0x40000C0C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x40000C0C C   FIELD 00w01 UIE: Update interrupt enable
0x40000C0C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x40000C0C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x40000C0C C   FIELD 03w01 CC3IE: Capture/Compare 3 interrupt enable
0x40000C0C C   FIELD 04w01 CC4IE: Capture/Compare 4 interrupt enable
0x40000C0C C   FIELD 06w01 TIE: Trigger interrupt enable
0x40000C0C C   FIELD 08w01 UDE: Update DMA request enable
0x40000C0C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x40000C0C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x40000C0C C   FIELD 11w01 CC3DE: Capture/Compare 3 DMA request enable
0x40000C0C C   FIELD 12w01 CC4DE: Capture/Compare 4 DMA request enable
0x40000C0C C   FIELD 14w01 TDE: Trigger DMA request enable
0x40000C0C C   FIELD 20w01 IDXIE: Index interrupt enable
0x40000C0C C   FIELD 21w01 DIRIE: Direction change interrupt enable
0x40000C0C C   FIELD 22w01 IERRIE: Index error interrupt enable
0x40000C0C C   FIELD 23w01 TERRIE: Transition error interrupt enable
0x40000C10 B  REGISTER SR (rw): status register
0x40000C10 C   FIELD 00w01 UIF: Update interrupt flag
0x40000C10 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x40000C10 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x40000C10 C   FIELD 03w01 CC3IF: Capture/Compare 3 interrupt flag
0x40000C10 C   FIELD 04w01 CC4IF: Capture/Compare 4 interrupt flag
0x40000C10 C   FIELD 06w01 TIF: Trigger interrupt flag
0x40000C10 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x40000C10 C   FIELD 10w01 CC2OF: Capture/compare 2 overcapture flag
0x40000C10 C   FIELD 11w01 CC3OF: Capture/Compare 3 overcapture flag
0x40000C10 C   FIELD 12w01 CC4OF: Capture/Compare 4 overcapture flag
0x40000C10 C   FIELD 20w01 IDXF: Index interrupt flag
0x40000C10 C   FIELD 21w01 DIRF: Direction change interrupt flag
0x40000C10 C   FIELD 22w01 IERRF: Index error interrupt flag
0x40000C10 C   FIELD 23w01 TERRF: Transition error interrupt flag
0x40000C14 B  REGISTER EGR (wo): event generation register
0x40000C14 C   FIELD 00w01 UG: Update generation
0x40000C14 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x40000C14 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x40000C14 C   FIELD 03w01 CC3G: Capture/compare 3 generation
0x40000C14 C   FIELD 04w01 CC4G: Capture/compare 4 generation
0x40000C14 C   FIELD 06w01 TG: Trigger generation
0x40000C18 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40000C18 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40000C18 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000C18 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40000C18 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x40000C18 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40000C18 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x40000C18 C   FIELD 04w03 OC1M: Output compare 1 mode
0x40000C18 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40000C18 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x40000C18 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x40000C18 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x40000C18 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x40000C18 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x40000C18 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x40000C18 C   FIELD 12w03 OC2M: Output compare 2 mode
0x40000C18 C   FIELD 12w04 IC2F: Input capture 2 filter
0x40000C18 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x40000C18 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x40000C18 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x40000C1C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x40000C1C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x40000C1C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x40000C1C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x40000C1C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x40000C1C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x40000C1C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x40000C1C C   FIELD 04w03 OC3M: Output compare 3 mode
0x40000C1C C   FIELD 04w04 IC3F: Input capture 3 filter
0x40000C1C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x40000C1C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x40000C1C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x40000C1C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x40000C1C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x40000C1C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x40000C1C C   FIELD 12w03 OC4M: Output compare 4 mode
0x40000C1C C   FIELD 12w04 IC4F: Input capture 4 filter
0x40000C1C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x40000C1C C   FIELD 16w01 OC3M_bit3: Output Compare 1 mode - bit 3
0x40000C1C C   FIELD 24w01 OC4M_bit3: Output Compare 2 mode - bit 3
0x40000C20 B  REGISTER CCER (rw): capture/compare enable register
0x40000C20 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x40000C20 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x40000C20 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x40000C20 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x40000C20 C   FIELD 05w01 CC2P: Capture/Compare 2 output Polarity
0x40000C20 C   FIELD 07w01 CC2NP: Capture/Compare 2 output Polarity
0x40000C20 C   FIELD 08w01 CC3E: Capture/Compare 3 output enable
0x40000C20 C   FIELD 09w01 CC3P: Capture/Compare 3 output Polarity
0x40000C20 C   FIELD 11w01 CC3NP: Capture/Compare 3 output Polarity
0x40000C20 C   FIELD 12w01 CC4E: Capture/Compare 4 output enable
0x40000C20 C   FIELD 13w01 CC4P: Capture/Compare 3 output Polarity
0x40000C20 C   FIELD 15w01 CC4NP: Capture/Compare 4 output Polarity
0x40000C24 B  REGISTER CNT (rw): counter
0x40000C24 C   FIELD 00w16 CNT_L: Least significant part of counter value
0x40000C24 C   FIELD 16w15 CNT_H: Most significant part counter value (on TIM2 and TIM5)
0x40000C24 C   FIELD 31w01 CNT_bit31: Most significant bit of counter value (on TIM2 and TIM5)
0x40000C28 B  REGISTER PSC (rw): prescaler
0x40000C28 C   FIELD 00w16 PSC: Prescaler value
0x40000C2C B  REGISTER ARR (rw): auto-reload register
0x40000C2C C   FIELD 00w16 ARR_L: Low Auto-reload value
0x40000C2C C   FIELD 16w16 ARR_H: High Auto-reload value (TIM2 only)
0x40000C34 B  REGISTER CCR1 (rw): capture/compare register 1
0x40000C34 C   FIELD 00w16 CCR1_L: Low Capture/Compare 1 value
0x40000C34 C   FIELD 16w16 CCR1_H: High Capture/Compare 1 value (TIM2 only)
0x40000C38 B  REGISTER CCR2 (rw): capture/compare register 2
0x40000C38 C   FIELD 00w16 CCR2_L: Low Capture/Compare 2 value
0x40000C38 C   FIELD 16w16 CCR2_H: High Capture/Compare 2 value (TIM2 only)
0x40000C3C B  REGISTER CCR3 (rw): capture/compare register 3
0x40000C3C C   FIELD 00w16 CCR3_L: Low Capture/Compare value
0x40000C3C C   FIELD 16w16 CCR3_H: High Capture/Compare value (TIM2 only)
0x40000C40 B  REGISTER CCR4 (rw): capture/compare register 4
0x40000C40 C   FIELD 00w16 CCR4_L: Low Capture/Compare value
0x40000C40 C   FIELD 16w16 CCR4_H: High Capture/Compare value (TIM2 only)
0x40000C58 B  REGISTER ECR (rw): encoder control register
0x40000C58 C   FIELD 00w01 IE: Index enable
0x40000C58 C   FIELD 01w02 IDIR: Index direction
0x40000C58 C   FIELD 03w02 IBLK: Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x40000C58 C   FIELD 05w01 FIDX: First index
0x40000C58 C   FIELD 06w02 IPOS: Index positioning
0x40000C58 C   FIELD 16w08 PW: Pulse width
0x40000C58 C   FIELD 24w03 PWPRSC: Pulse width prescaler
0x40000C5C B  REGISTER TISEL (rw): timer input selection register
0x40000C5C C   FIELD 00w04 TI1SEL: Selects tim_ti1[0..15] input
0x40000C5C C   FIELD 08w04 TI2SEL: Selects tim_ti2[0..15] input
0x40000C5C C   FIELD 16w04 TI3SEL: Selects tim_ti3[0..15] input
0x40000C5C C   FIELD 24w04 TI4SEL: Selects tim_ti4[0..15] input
0x40000C60 B  REGISTER AF1 (rw): alternate function register 1
0x40000C60 C   FIELD 14w04 ETRSEL: etr_in source selection
0x40000C64 B  REGISTER AF2 (rw): alternate function register 2
0x40000C64 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x40000FDC B  REGISTER DCR (rw): DMA control register
0x40000FDC C   FIELD 00w05 DBA: DMA base address
0x40000FDC C   FIELD 08w05 DBL: DMA burst length
0x40000FDC C   FIELD 16w04 DBSS: DMA burst source selection
0x40000FE0 B  REGISTER DMAR (rw): DMA address for full transfer
0x40000FE0 C   FIELD 00w32 ETRSEL: DMA register for burst accesses
0x40001000 A PERIPHERAL TIM6
0x40001000 B  REGISTER CR1 (rw): control register 1
0x40001000 C   FIELD 00w01 CEN: Counter enable
0x40001000 C   FIELD 01w01 UDIS: Update disable
0x40001000 C   FIELD 02w01 URS: Update request source
0x40001000 C   FIELD 03w01 OPM: One-pulse mode
0x40001000 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40001000 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40001000 C   FIELD 12w01 DITHEN: Dithering Enable
0x40001004 B  REGISTER CR2 (rw): control register 2
0x40001004 C   FIELD 04w03 MMS: Master mode selection
0x4000100C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000100C C   FIELD 00w01 UIE: UIE
0x4000100C C   FIELD 08w01 UDE: UDE
0x40001010 B  REGISTER SR (rw): status register
0x40001010 C   FIELD 00w01 UIF: UIF
0x40001014 B  REGISTER EGR (wo): event generation register
0x40001014 C   FIELD 00w01 UG: UG
0x40001024 B  REGISTER CNT (rw): counter
0x40001024 C   FIELD 00w16 CNT: CNT
0x40001024 C   FIELD 31w01 UIFCPY: UIFCPY
0x40001028 B  REGISTER PSC (rw): prescaler
0x40001028 C   FIELD 00w16 PSC: PSC
0x4000102C B  REGISTER ARR (rw): auto-reload register
0x4000102C C   FIELD 00w19 ARR: ARR
0x40001400 A PERIPHERAL TIM7
0x40001400 B  REGISTER CR1 (rw): control register 1
0x40001400 C   FIELD 00w01 CEN: Counter enable
0x40001400 C   FIELD 01w01 UDIS: Update disable
0x40001400 C   FIELD 02w01 URS: Update request source
0x40001400 C   FIELD 03w01 OPM: One-pulse mode
0x40001400 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40001400 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40001400 C   FIELD 12w01 DITHEN: Dithering Enable
0x40001404 B  REGISTER CR2 (rw): control register 2
0x40001404 C   FIELD 04w03 MMS: Master mode selection
0x4000140C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4000140C C   FIELD 00w01 UIE: UIE
0x4000140C C   FIELD 08w01 UDE: UDE
0x40001410 B  REGISTER SR (rw): status register
0x40001410 C   FIELD 00w01 UIF: UIF
0x40001414 B  REGISTER EGR (wo): event generation register
0x40001414 C   FIELD 00w01 UG: UG
0x40001424 B  REGISTER CNT (rw): counter
0x40001424 C   FIELD 00w16 CNT: CNT
0x40001424 C   FIELD 31w01 UIFCPY: UIFCPY
0x40001428 B  REGISTER PSC (rw): prescaler
0x40001428 C   FIELD 00w16 PSC: PSC
0x4000142C B  REGISTER ARR (rw): auto-reload register
0x4000142C C   FIELD 00w19 ARR: ARR
0x40002C00 A PERIPHERAL WWDG
0x40002C00 B  REGISTER CR (rw): Control register
0x40002C00 C   FIELD 00w07 T: 7-bit counter (MSB to LSB)
0x40002C00 C   FIELD 07w01 WDGA: Activation bit
0x40002C04 B  REGISTER CFR (rw): Configuration register
0x40002C04 C   FIELD 00w07 W: 7-bit window value
0x40002C04 C   FIELD 09w01 EWI: Early wakeup interrupt
0x40002C04 C   FIELD 11w03 WDGTB: Timer base
0x40002C08 B  REGISTER SR (rw): Status register
0x40002C08 C   FIELD 00w01 EWIF: Early wakeup interrupt flag
0x40003000 A PERIPHERAL IWDG
0x40003000 B  REGISTER KR (wo): Key register
0x40003000 C   FIELD 00w16 KEY: Key value (write only, read 0x0000)
0x40003004 B  REGISTER PR (rw): Prescaler register
0x40003004 C   FIELD 00w04 PR: Prescaler divider
0x40003008 B  REGISTER RLR (rw): Reload register
0x40003008 C   FIELD 00w12 RL: Watchdog counter reload value
0x4000300C B  REGISTER SR (ro): Status register
0x4000300C C   FIELD 00w01 PVU: Watchdog prescaler value update
0x4000300C C   FIELD 01w01 RVU: Watchdog counter reload value update
0x4000300C C   FIELD 02w01 WVU: Watchdog counter window value update
0x4000300C C   FIELD 03w01 EWU: Watchdog interrupt comparator value update
0x4000300C C   FIELD 14w01 EWIF: Watchdog Early interrupt flag
0x40003010 B  REGISTER WINR (rw): Window register
0x40003010 C   FIELD 00w12 WIN: Watchdog counter window value
0x40003014 B  REGISTER EWCR (rw): IWDG early wakeup interrupt register
0x40003014 C   FIELD 00w12 EWIT: Watchdog counter window value
0x40003014 C   FIELD 14w01 EWIC: Watchdog early interrupt acknowledge
0x40003014 C   FIELD 15w01 EWIE: Watchdog early interrupt enable
0x40003800 A PERIPHERAL SPI2
0x40003800 B  REGISTER SPI_CR1: 
0x40003800 C   FIELD 00w01 SPE (rw): serial peripheral enable This bit is set by and cleared by software. When SPE=1, SPI data transfer is enabled, SPI_CFG1 and SPI_CFG2 configuration registers, CRCPOLY, UDRDR, part of SPI_AUTOCR register and IOLOCK bit in the SPI_CR1 register are write protected. They can be changed only when SPE=0. When SPE=0 any SPI operation is stopped and disabled, all the pending requests of the events with enabled interrupt are blocked except the MODF interrupt request (but their pending still propagates the request of the spi_plck clock), the SS output is deactivated at master, the RDY signal keeps not ready status at slave, the internal state machine is reseted, all the FIFOs content is flushed, CRC calculation initialized, receive data register is read zero. SPE is cleared and cannot be set when MODF error flag is active.
0x40003800 C   FIELD 08w01 MASRX (rw): master automatic suspension in Receive mode This bit is set and cleared by software to control continuous SPI transfer in master receiver mode and automatic management in order to avoid overrun condition. When SPI communication is suspended by hardware automatically, it could happen that few bits of next frame are already clocked out due to internal synchronization delay. This is why, the automatic suspension is not quite reliable when size of data drops below 8 bits. In this case, a safe suspension can be achieved by combination with delay inserted between data frames applied when MIDI parameter keeps a non zero value; sum of data size and the interleaved SPI cycles should always produce interval at length of 8 SPI clock periods at minimum. After software clearing of the SUSP bit, the communication resumes and continues by subsequent bits transaction without any next constraint. Prior the SUSP bit is cleared, the user must release the RxFIFO space as much as possible by reading out all the data packets available at RxFIFO based on the RXP flag indication to prevent any subsequent suspension.
0x40003800 C   FIELD 09w01 CSTART (rw): master transfer start This bit can be set by software if SPI is enabled only to start an SPI communication. it is cleared by hardware when end of transfer (EOT) flag is set or when a transaction suspend request is accepted. In SPI mode, the bit is taken into account at master mode only. If transmission is enabled, communication starts or continues only if any data is available in the transmission FIFO.
0x40003800 C   FIELD 10w01 CSUSP (wo): master SUSPend request This bit reads as zero. In Master mode, when this bit is set by software, the CSTART bit is reset at the end of the current frame and SPI communication is suspended. The user has to check SUSP flag to check end of the frame transaction. The Master mode communication must be suspended (using this bit or keeping TXDR empty) before disabling the SPI or going to Low-power mode. After software suspension, SUSP flag has to be cleared and SPI disabled and re-enabled before the next transaction starts.
0x40003800 C   FIELD 11w01 HDDIR (rw): Rx/Tx direction at Half-duplex mode In Half-Duplex configuration the HDDIR bit establishes the Rx/Tx direction of the data transfer. This bit is ignored in Full-Duplex or any Simplex configuration.
0x40003800 C   FIELD 12w01 SSI (rw): internal SS signal input level This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the peripheral SS input internally and the I/O value of the SS pin is ignored.
0x40003800 C   FIELD 13w01 CRC33_17 (rw): 32-bit CRC polynomial configuration
0x40003800 C   FIELD 14w01 RCRCINI (rw): CRC calculation initialization pattern control for receiver
0x40003800 C   FIELD 15w01 TCRCINI (rw): CRC calculation initialization pattern control for transmitter
0x40003800 C   FIELD 16w01 IOLOCK (rw): locking the AF configuration of associated IOs This bit is set by software and cleared by hardware whenever the SPE bit is changed from 1 to 0. When this bit is set, SPI_CFG2 register content cannot be modified. This bit can be set when SPI is disabled only else it is write protected. It is cleared and cannot be set when MODF bit is set.
0x40003804 B  REGISTER SPI_CR2: 
0x40003804 C   FIELD 00w16 TSIZE (rw): number of data at current transfer When these bits are changed by software, the SPI has to be disabled. Endless transaction is initialized when CSTART is set while zero value is stored at TSIZE. TSIZE cannot be set to 0xFFFF respective 0x3FFF value when CRC is enabled. Note: TSIZE[15:10] bits are reserved at limited feature set instances and must be kept at reset value.
0x40003808 B  REGISTER SPI_CFG1: SPI configuration register 1
0x40003808 C   FIELD 00w05 DSIZE (rw): number of bits in at single SPI data frame ..... Note: Maximum data size can be limited up to 16-bits at some instances. At instances with limited set of features, DSIZE2:0] bits are reserved and must be kept at reset state. DSIZE[4:3] bits then control next settings of data size: 00xxx: 8-bits 01xxx: 16-bits 10xxx: 24-bits 11xxx: 32-bits.
0x40003808 C   FIELD 05w04 FTHLV (rw): FIFO threshold level Defines number of data frames at single data packet. Size of the packet should not exceed 1/2 of FIFO space. SPI interface is more efficient if configured packet sizes are aligned with data register access parallelism: If SPI data register is accessed as a 16-bit register and DSIZE ¤ 8 bit, better to select FTHLV = 2, 4, 6. If SPI data register is accessed as a 32-bit register and DSIZE> 8 bit, better to select FTHLV = 2, 4, 6, while if DSIZE ¤ 8bit, better to select FTHLV = 4, 8, 12. Note: FTHLV[3:2] bits are reserved at instances with limited set of features
0x40003808 C   FIELD 09w01 UDRCFG (rw): behavior of slave transmitter at underrun condition For more details see underrun condition.
0x40003808 C   FIELD 14w01 RXDMAEN (rw): Rx DMA stream enable
0x40003808 C   FIELD 15w01 TXDMAEN (rw): Tx DMA stream enable
0x40003808 C   FIELD 16w05 CRCSIZE (rw): length of CRC frame to be transacted and compared Most significant bits are taken into account from polynomial calculation when CRC result is transacted or compared. The length of the polynomial is not affected by this setting. ..... The value must be set equal or multiply of data size (DSIZE[4:0]). Its maximum size corresponds to DSIZE maximum at the instance. Note: The most significant bit at CRCSIZE bit field is reserved at the peripheral instances where data size is limited to 16-bit.
0x40003808 C   FIELD 22w01 CRCEN (rw): hardware CRC computation enable
0x40003808 C   FIELD 28w03 MBR (rw): master baud rate prescaler setting Note: MBR setting is considered at slave working at TI mode, too (see mode).
0x40003808 C   FIELD 31w01 BPASS (rw): bypass of the prescaler at master baud rate clock generator
0x4000380C B  REGISTER SPI_CFG2: SPI configuration register 2
0x4000380C C   FIELD 00w04 MSSI (rw): Master SS Idleness Specifies an extra delay, expressed in number of SPI clock cycle periods, inserted additionally between active edge of SS opening a session and the beginning of the first data frame of the session in Master mode when SSOE is enabled. ... Note: This feature is not supported in TI mode. To include the delay, the SPI must be disabled and re-enabled between sessions.
0x4000380C C   FIELD 04w04 MIDI (rw): master Inter-Data Idleness Specifies minimum time delay (expressed in SPI clock cycles periods) inserted between two consecutive data frames in Master mode. ... Note: This feature is not supported in TI mode.
0x4000380C C   FIELD 13w01 RDIOM (rw): RDY signal input/output management Note: When DSIZE at the SPI_CFG1 register is configured shorter than 8-bit, the RDIOM bit has to be kept at zero.
0x4000380C C   FIELD 14w01 RDIOP (rw): RDY signal input/output polarity
0x4000380C C   FIELD 15w01 IOSWP (rw): swap functionality of MISO and MOSI pins When this bit is set, the function of MISO and MOSI pins alternate functions are inverted. Original MISO pin becomes MOSI and original MOSI pin becomes MISO.
0x4000380C C   FIELD 17w02 COMM (rw): SPI Communication Mode
0x4000380C C   FIELD 19w03 SP (rw): serial protocol others: reserved, must not be used
0x4000380C C   FIELD 22w01 MASTER (rw): SPI Master
0x4000380C C   FIELD 23w01 LSBFRST (rw): data frame format
0x4000380C C   FIELD 24w01 CPHA (rw): clock phase
0x4000380C C   FIELD 25w01 CPOL (rw): clock polarity
0x4000380C C   FIELD 26w01 SSM (rw): software management of SS signal input When master uses hardware SS output (SSM=0 and SSOE=1) the SS signal input is forced to not active state internally to prevent master mode fault error.
0x4000380C C   FIELD 28w01 SSIOP (rw): SS input/output polarity
0x4000380C C   FIELD 29w01 SSOE (rw): SS output enable This bit is taken into account in Master mode only
0x4000380C C   FIELD 30w01 SSOM (rw): SS output management in Master mode This bit is taken into account in Master mode when SSOE is enabled. It allows the SS output to be configured between two consecutive data transfers.
0x4000380C C   FIELD 31w01 AFCNTR (rw): alternate function GPIOs control This bit is taken into account when SPE=0 only When SPI has to be disabled temporary for a specific configuration reason (e.g. CRC reset, CPHA or HDDIR change) setting this bit prevents any glitches on the associated outputs configured at alternate function mode by keeping them forced at state corresponding the current SPI configuration.
0x40003810 B  REGISTER SPI_IER: 
0x40003810 C   FIELD 00w01 RXPIE (rw): RXP interrupt enable
0x40003810 C   FIELD 01w01 TXPIE (rw): TXP interrupt enable TXPIE is set by software and cleared by TXTF flag set event.
0x40003810 C   FIELD 02w01 DXPIE (rw): DXP interrupt enabled DXPIE is set by software and cleared by TXTF flag set event.
0x40003810 C   FIELD 03w01 EOTIE (rw): EOT, SUSP and TXC interrupt enable
0x40003810 C   FIELD 04w01 TXTFIE (rw): TXTFIE interrupt enable
0x40003810 C   FIELD 05w01 UDRIE (rw): UDR interrupt enable
0x40003810 C   FIELD 06w01 OVRIE (rw): OVR interrupt enable
0x40003810 C   FIELD 07w01 CRCEIE (rw): CRC error interrupt enable
0x40003810 C   FIELD 08w01 TIFREIE (rw): TIFRE interrupt enable
0x40003810 C   FIELD 09w01 MODFIE (rw): mode Fault interrupt enable
0x40003814 B  REGISTER SPI_SR: 
0x40003814 C   FIELD 00w01 RXP (ro): Rx-Packet available RXP flag is changed by hardware. It monitors number of overall data currently available at RxFIFO if SPI is enabled. It has to be checked once a data packet is completely read out from RxFIFO.
0x40003814 C   FIELD 01w01 TXP (ro): Tx-Packet space available TXP flag is changed by hardware. It monitors overall space currently available at TxFIFO no matter if SPI is enabled or not. It has to be checked once a complete data packet is stored at TxFIFO.
0x40003814 C   FIELD 02w01 DXP (ro): duplex packet DXP flag is set whenever both TXP and RXP flags are set regardless SPI mode.
0x40003814 C   FIELD 03w01 EOT (ro): end of transfer EOT is set by hardware as soon as a full transfer is complete, that is when TSIZE number of data have been transmitted and/or received on the SPI. EOT is cleared by software write 1 to EOTC bit at SPI_IFCR. EOT flag triggers an interrupt if EOTIE bit is set. If DXP flag is used until TXTF flag is set and DXPIE is cleared, EOT can be used to download the last packets contained into RxFIFO in one-shot. In master, EOT event terminates the data transaction and handles SS output optionally. When CRC is applied, the EOT event is extended over the CRC frame transaction. To restart the internal state machine properly, SPI is strongly suggested to be disabled and re-enabled before next transaction starts despite its setting is not changed.
0x40003814 C   FIELD 04w01 TXTF (ro): transmission transfer filled TXTF is set by hardware as soon as all of the data packets in a transfer have been submitted for transmission by application software or DMA, that is when TSIZE number of data have been pushed into the TxFIFO. This bit is cleared by software write 1 to TXTFC bit at SPI_IFCR TXTF flag triggers an interrupt if TXTFIE bit is set. TXTF setting clears the TXPIE and DXPIE masks so to off-load application software from calculating when to disable TXP and DXP interrupts.
0x40003814 C   FIELD 05w01 UDR (ro): underrun at slave transmission mode This bit is cleared by writing 1 to UDRC bit at SPI_IFCR Note: UDR flag applies to Slave mode only
0x40003814 C   FIELD 06w01 OVR (ro): overrun This bit is cleared by writing 1 to OVRC bit at SPI_IFCR
0x40003814 C   FIELD 07w01 CRCE (ro): CRC error This bit is cleared by writing 1 to CRCEC bit at SPI_IFCR
0x40003814 C   FIELD 08w01 TIFRE (ro): TI frame format error This bit is cleared by writing 1 to TIFREC bit at SPI_IFCR
0x40003814 C   FIELD 09w01 MODF (ro): mode fault This bit is cleared by writing 1 to MODFC bit at SPI_IFCR
0x40003814 C   FIELD 11w01 SUSP (ro): suspension status In Master mode, SUSP is set by hardware either as soon as the current frame is completed after CSUSP request is done or at master automatic suspend receive mode (MASRX bit is set at SPI_CR1 register) on RxFIFO full condition. SUSP generates an interrupt when EOTIE is set. This bit has to be cleared prior SPI is disabled by writing 1 to SUSPC bit at SPI_IFCR.
0x40003814 C   FIELD 12w01 TXC (ro): TxFIFO transmission complete The flag behavior depends on TSIZE setting. When TSIZE=0 the TXC is changed by hardware exclusively and it raises each time the TxFIFO becomes empty and there is no activity on the bus. If TSIZE <>0 there is no specific reason to monitor TXC as it just copies the EOT flag value including its software clearing. The TXC generates an interrupt when EOTIE is set.
0x40003814 C   FIELD 13w02 RXPLVL (ro): RxFIFO packing level When RXWNE=0 and data size is set up to 16-bit, the value gives number of remaining data frames persisting at RxFIFO. Note: (*): Optional value when data size is set up to 8-bit only. When data size is greater than 16-bit, these bits are always read as 00. In that consequence, the single data frame received at the FIFO cannot be detected neither by RWNE nor by RXPLVL bits if data size is set from 17 to 24 bits. The user then must apply other methods like TSIZE>0 or FTHLV=0.
0x40003814 C   FIELD 15w01 RXWNE (ro): RxFIFO word not empty Note: This bit value does not depend on DSIZE setting and keeps together with RXPLVL[1:0] information about RxFIFO occupancy by residual data.
0x40003814 C   FIELD 16w16 CTSIZE (ro): number of data frames remaining in current TSIZE session The value is not quite reliable when traffic is ongoing on bus or during autonomous operation at low-power mode. Note: CTSIZE[15:0] bits are not available at instances with limited set of features
0x40003818 B  REGISTER SPI_IFCR: 
0x40003818 C   FIELD 03w01 EOTC (wo): end of transfer flag clear Writing a 1 into this bit clears EOT flag in the SPI_SR register
0x40003818 C   FIELD 04w01 TXTFC (wo): transmission transfer filled flag clear Writing a 1 into this bit clears TXTF flag in the SPI_SR register
0x40003818 C   FIELD 05w01 UDRC (wo): underrun flag clear Writing a 1 into this bit clears UDR flag in the SPI_SR register
0x40003818 C   FIELD 06w01 OVRC (wo): overrun flag clear Writing a 1 into this bit clears OVR flag in the SPI_SR register
0x40003818 C   FIELD 07w01 CRCEC (wo): CRC error flag clear Writing a 1 into this bit clears CRCE flag in the SPI_SR register
0x40003818 C   FIELD 08w01 TIFREC (wo): TI frame format error flag clear Writing a 1 into this bit clears TIFRE flag in the SPI_SR register
0x40003818 C   FIELD 09w01 MODFC (wo): mode fault flag clear Writing a 1 into this bit clears MODF flag in the SPI_SR register
0x40003818 C   FIELD 11w01 SUSPC (wo): SUSPend flag clear Writing a 1 into this bit clears SUSP flag in the SPI_SR register
0x4000381C B  REGISTER SPI_AUTOCR: 
0x4000381C C   FIELD 16w04 TRIGSEL (rw): trigger selection (refer ). ... Note: these bits can be written only when SPE = 0.
0x4000381C C   FIELD 20w01 TRIGPOL (rw): trigger polarity Note: This bit can be written only when SPE = 0.
0x4000381C C   FIELD 21w01 TRIGEN (rw): trigger of CSTART control enable Note: if user can't prevent trigger event during write, the TRIGEN has to be changed when SPI is disabled
0x40003820 B  REGISTER SPI_TXDR: 
0x40003820 C   FIELD 00w32 TXDR (wo): transmit data register The register serves as an interface with TxFIFO. A write to it accesses TxFIFO. Note: data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is written by single access. halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be written by single access. word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be written by single access. Write access of this register less than the configured data size is forbidden.
0x40003830 B  REGISTER SPI_RXDR: 
0x40003830 C   FIELD 00w32 RXDR (ro): receive data register The register serves as an interface with RxFIFO. When it is read, RxFIFO is accessed. Note: data is always right-aligned. Unused bits are read as zero when the register is read. Writing to the register is ignored. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is read by single access halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be read by single access word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be read by single access. Read access of this register less than the configured data size is forbidden.
0x40003840 B  REGISTER SPI_CRCPOLY: SPI polynomial register
0x40003840 C   FIELD 00w32 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The default 9-bit polynomial setting 0x107 corresponds to default 8-bit setting of DSIZE. It is compatible with setting 0x07 used at some other ST products with fixed length of the polynomial string where the most significant bit of the string is always kept hidden. Length of the polynomial is given by the most significant bit of the value stored at this register. It has to be set greater than DSIZE. CRC33_17 bit has to be set additionally with CRCPOLY register when DSIZE is configured to maximum 32-bit or 16-bit size and CRC is enabled (to keep polynomial length grater than data size). Note: CRCPOLY[31:16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x40003844 B  REGISTER SPI_TXCRC: 
0x40003844 C   FIELD 00w32 TXCRC (ro): CRC register for transmitter When CRC calculation is enabled, the TXCRC[31:0] bits contain the computed CRC value of the subsequently transmitted bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. Note: TXCRC[31-16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x40003848 B  REGISTER SPI_RXCRC: 
0x40003848 C   FIELD 00w32 RXCRC (ro): CRC register for receiver When CRC calculation is enabled, the RXCRC[31:0] bits contain the computed CRC value of the subsequently received bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. RXCRC[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x4000384C B  REGISTER SPI_UDRDR: SPI underrun data register
0x4000384C C   FIELD 00w32 UDRDR (rw): data at slave underrun condition The register is taken into account in Slave mode and at underrun condition only. The number of bits considered depends on DSIZE bit settings of the SPI_CFG1 register. Underrun condition handling depends on setting UDRCFG bit at SPI_CFG1 register. Note: UDRDR[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constraint when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x40004400 A PERIPHERAL USART2
0x40004400 B  REGISTER CR1_disabled (rw): Control register 1
0x40004400 B  REGISTER CR1_enabled (rw): Control register 1
0x40004400 C   FIELD 00w01 UE: USART enable
0x40004400 C   FIELD 00w01 UE: USART enable
0x40004400 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40004400 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40004400 C   FIELD 02w01 RE: Receiver enable
0x40004400 C   FIELD 02w01 RE: Receiver enable
0x40004400 C   FIELD 03w01 TE: Transmitter enable
0x40004400 C   FIELD 03w01 TE: Transmitter enable
0x40004400 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40004400 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40004400 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40004400 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40004400 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40004400 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40004400 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40004400 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40004400 C   FIELD 08w01 PEIE: PE interrupt enable
0x40004400 C   FIELD 08w01 PEIE: PE interrupt enable
0x40004400 C   FIELD 09w01 PS: Parity selection
0x40004400 C   FIELD 09w01 PS: Parity selection
0x40004400 C   FIELD 10w01 PCE: Parity control enable
0x40004400 C   FIELD 10w01 PCE: Parity control enable
0x40004400 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40004400 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40004400 C   FIELD 12w01 M0: Word length
0x40004400 C   FIELD 12w01 M0: Word length
0x40004400 C   FIELD 13w01 MME: Mute mode enable
0x40004400 C   FIELD 13w01 MME: Mute mode enable
0x40004400 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40004400 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40004400 C   FIELD 15w01 OVER8: Oversampling mode
0x40004400 C   FIELD 15w01 OVER8: Oversampling mode
0x40004400 C   FIELD 16w05 DEDT: DEDT
0x40004400 C   FIELD 16w05 DEDT: DEDT
0x40004400 C   FIELD 21w05 DEAT: DEAT
0x40004400 C   FIELD 21w05 DEAT: DEAT
0x40004400 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x40004400 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40004400 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40004400 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x40004400 C   FIELD 28w01 M1: Word length
0x40004400 C   FIELD 28w01 M1: Word length
0x40004400 C   FIELD 29w01 FIFOEN: FIFOEN
0x40004400 C   FIELD 29w01 FIFOEN: FIFOEN
0x40004400 C   FIELD 30w01 TXFEIE: TXFEIE
0x40004400 C   FIELD 31w01 RXFFIE: RXFFIE
0x40004404 B  REGISTER CR2 (rw): Control register 2
0x40004404 C   FIELD 00w01 SLVEN: SLVEN
0x40004404 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x40004404 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40004404 C   FIELD 05w01 LBDL: LIN break detection length
0x40004404 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40004404 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40004404 C   FIELD 09w01 CPHA: Clock phase
0x40004404 C   FIELD 10w01 CPOL: Clock polarity
0x40004404 C   FIELD 11w01 CLKEN: Clock enable
0x40004404 C   FIELD 12w02 STOP: STOP bits
0x40004404 C   FIELD 14w01 LINEN: LIN mode enable
0x40004404 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40004404 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40004404 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40004404 C   FIELD 18w01 DATAINV: Binary data inversion
0x40004404 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40004404 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40004404 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40004404 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40004404 C   FIELD 24w08 ADD: Address of the USART node
0x40004408 B  REGISTER CR3 (rw): Control register 3
0x40004408 C   FIELD 00w01 EIE: Error interrupt enable
0x40004408 C   FIELD 01w01 IREN: Ir mode enable
0x40004408 C   FIELD 02w01 IRLP: Ir low-power
0x40004408 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40004408 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40004408 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40004408 C   FIELD 06w01 DMAR: DMA enable receiver
0x40004408 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40004408 C   FIELD 08w01 RTSE: RTS enable
0x40004408 C   FIELD 09w01 CTSE: CTS enable
0x40004408 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40004408 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40004408 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40004408 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40004408 C   FIELD 14w01 DEM: Driver enable mode
0x40004408 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40004408 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40004408 C   FIELD 23w01 TXFTIE: TXFTIE
0x40004408 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x40004408 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x40004408 C   FIELD 28w01 RXFTIE: RXFTIE
0x40004408 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x4000440C B  REGISTER BRR (rw): Baud rate register
0x4000440C C   FIELD 00w16 BRR: BRR
0x40004410 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40004410 C   FIELD 00w08 PSC: Prescaler value
0x40004410 C   FIELD 08w08 GT: Guard time value
0x40004414 B  REGISTER RTOR (rw): Receiver timeout register
0x40004414 C   FIELD 00w24 RTO: Receiver timeout value
0x40004414 C   FIELD 24w08 BLEN: Block Length
0x40004418 B  REGISTER RQR (wo): Request register
0x40004418 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40004418 C   FIELD 01w01 SBKRQ: Send break request
0x40004418 C   FIELD 02w01 MMRQ: Mute mode request
0x40004418 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40004418 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4000441C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x4000441C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x4000441C C   FIELD 00w01 PE: PE
0x4000441C C   FIELD 00w01 PE: PE
0x4000441C C   FIELD 01w01 FE: FE
0x4000441C C   FIELD 01w01 FE: FE
0x4000441C C   FIELD 02w01 NE: NE
0x4000441C C   FIELD 02w01 NE: NE
0x4000441C C   FIELD 03w01 ORE: ORE
0x4000441C C   FIELD 03w01 ORE: ORE
0x4000441C C   FIELD 04w01 IDLE: IDLE
0x4000441C C   FIELD 04w01 IDLE: IDLE
0x4000441C C   FIELD 05w01 RXFNE: RXFNE
0x4000441C C   FIELD 05w01 RXFNE: RXFNE
0x4000441C C   FIELD 06w01 TC: TC
0x4000441C C   FIELD 06w01 TC: TC
0x4000441C C   FIELD 07w01 TXFNF: TXFNF
0x4000441C C   FIELD 07w01 TXFNF: TXFNF
0x4000441C C   FIELD 08w01 LBDF: LBDF
0x4000441C C   FIELD 08w01 LBDF: LBDF
0x4000441C C   FIELD 09w01 CTSIF: CTSIF
0x4000441C C   FIELD 09w01 CTSIF: CTSIF
0x4000441C C   FIELD 10w01 CTS: CTS
0x4000441C C   FIELD 10w01 CTS: CTS
0x4000441C C   FIELD 11w01 RTOF: RTOF
0x4000441C C   FIELD 11w01 RTOF: RTOF
0x4000441C C   FIELD 12w01 EOBF: EOBF
0x4000441C C   FIELD 12w01 EOBF: EOBF
0x4000441C C   FIELD 13w01 UDR: UDR
0x4000441C C   FIELD 14w01 ABRE: ABRE
0x4000441C C   FIELD 14w01 ABRE: ABRE
0x4000441C C   FIELD 15w01 ABRF: ABRF
0x4000441C C   FIELD 15w01 ABRF: ABRF
0x4000441C C   FIELD 16w01 BUSY: BUSY
0x4000441C C   FIELD 16w01 BUSY: BUSY
0x4000441C C   FIELD 17w01 CMF: CMF
0x4000441C C   FIELD 17w01 CMF: CMF
0x4000441C C   FIELD 18w01 SBKF: SBKF
0x4000441C C   FIELD 18w01 SBKF: SBKF
0x4000441C C   FIELD 19w01 RWU: RWU
0x4000441C C   FIELD 19w01 RWU: RWU
0x4000441C C   FIELD 21w01 TEACK: TEACK
0x4000441C C   FIELD 21w01 TEACK: TEACK
0x4000441C C   FIELD 22w01 REACK: REACK
0x4000441C C   FIELD 22w01 REACK: REACK
0x4000441C C   FIELD 23w01 TXFE: TXFE
0x4000441C C   FIELD 24w01 RXFF: RXFF
0x4000441C C   FIELD 25w01 TCBGT: TCBGT
0x4000441C C   FIELD 25w01 TCBGT: TCBGT
0x4000441C C   FIELD 26w01 RXFT: RXFT
0x4000441C C   FIELD 27w01 TXFT: TXFT
0x40004420 B  REGISTER ICR (wo): Interrupt flag clear register
0x40004420 C   FIELD 00w01 PECF: Parity error clear flag
0x40004420 C   FIELD 01w01 FECF: Framing error clear flag
0x40004420 C   FIELD 02w01 NECF: Noise detected clear flag
0x40004420 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40004420 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40004420 C   FIELD 05w01 TXFECF: TXFECF
0x40004420 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40004420 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x40004420 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40004420 C   FIELD 09w01 CTSCF: CTS clear flag
0x40004420 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40004420 C   FIELD 12w01 EOBCF: End of block clear flag
0x40004420 C   FIELD 13w01 UDRCF: UDRCF
0x40004420 C   FIELD 17w01 CMCF: Character match clear flag
0x40004424 B  REGISTER RDR (ro): Receive data register
0x40004424 C   FIELD 00w09 RDR: Receive data value
0x40004428 B  REGISTER TDR (rw): Transmit data register
0x40004428 C   FIELD 00w09 TDR: Transmit data value
0x4000442C B  REGISTER PRESC (rw): PRESC
0x4000442C C   FIELD 00w04 PRESCALER: PRESCALER
0x40004430 B  REGISTER AUTOCR (rw): AUTOCR
0x40004430 C   FIELD 00w16 TDN: TDN
0x40004430 C   FIELD 16w01 TRIGPOL: TRIPOL
0x40004430 C   FIELD 17w01 TRIGEN: TRIGEN
0x40004430 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x40004430 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x40004430 C   FIELD 31w01 TECLREN: TECLREN
0x40004800 A PERIPHERAL USART3
0x40004800 B  REGISTER CR1_disabled (rw): Control register 1
0x40004800 B  REGISTER CR1_enabled (rw): Control register 1
0x40004800 C   FIELD 00w01 UE: USART enable
0x40004800 C   FIELD 00w01 UE: USART enable
0x40004800 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40004800 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40004800 C   FIELD 02w01 RE: Receiver enable
0x40004800 C   FIELD 02w01 RE: Receiver enable
0x40004800 C   FIELD 03w01 TE: Transmitter enable
0x40004800 C   FIELD 03w01 TE: Transmitter enable
0x40004800 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40004800 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40004800 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40004800 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40004800 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40004800 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40004800 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40004800 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40004800 C   FIELD 08w01 PEIE: PE interrupt enable
0x40004800 C   FIELD 08w01 PEIE: PE interrupt enable
0x40004800 C   FIELD 09w01 PS: Parity selection
0x40004800 C   FIELD 09w01 PS: Parity selection
0x40004800 C   FIELD 10w01 PCE: Parity control enable
0x40004800 C   FIELD 10w01 PCE: Parity control enable
0x40004800 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40004800 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40004800 C   FIELD 12w01 M0: Word length
0x40004800 C   FIELD 12w01 M0: Word length
0x40004800 C   FIELD 13w01 MME: Mute mode enable
0x40004800 C   FIELD 13w01 MME: Mute mode enable
0x40004800 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40004800 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40004800 C   FIELD 15w01 OVER8: Oversampling mode
0x40004800 C   FIELD 15w01 OVER8: Oversampling mode
0x40004800 C   FIELD 16w05 DEDT: DEDT
0x40004800 C   FIELD 16w05 DEDT: DEDT
0x40004800 C   FIELD 21w05 DEAT: DEAT
0x40004800 C   FIELD 21w05 DEAT: DEAT
0x40004800 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x40004800 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40004800 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40004800 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x40004800 C   FIELD 28w01 M1: Word length
0x40004800 C   FIELD 28w01 M1: Word length
0x40004800 C   FIELD 29w01 FIFOEN: FIFOEN
0x40004800 C   FIELD 29w01 FIFOEN: FIFOEN
0x40004800 C   FIELD 30w01 TXFEIE: TXFEIE
0x40004800 C   FIELD 31w01 RXFFIE: RXFFIE
0x40004804 B  REGISTER CR2 (rw): Control register 2
0x40004804 C   FIELD 00w01 SLVEN: SLVEN
0x40004804 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x40004804 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40004804 C   FIELD 05w01 LBDL: LIN break detection length
0x40004804 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40004804 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40004804 C   FIELD 09w01 CPHA: Clock phase
0x40004804 C   FIELD 10w01 CPOL: Clock polarity
0x40004804 C   FIELD 11w01 CLKEN: Clock enable
0x40004804 C   FIELD 12w02 STOP: STOP bits
0x40004804 C   FIELD 14w01 LINEN: LIN mode enable
0x40004804 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40004804 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40004804 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40004804 C   FIELD 18w01 DATAINV: Binary data inversion
0x40004804 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40004804 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40004804 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40004804 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40004804 C   FIELD 24w08 ADD: Address of the USART node
0x40004808 B  REGISTER CR3 (rw): Control register 3
0x40004808 C   FIELD 00w01 EIE: Error interrupt enable
0x40004808 C   FIELD 01w01 IREN: Ir mode enable
0x40004808 C   FIELD 02w01 IRLP: Ir low-power
0x40004808 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40004808 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40004808 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40004808 C   FIELD 06w01 DMAR: DMA enable receiver
0x40004808 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40004808 C   FIELD 08w01 RTSE: RTS enable
0x40004808 C   FIELD 09w01 CTSE: CTS enable
0x40004808 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40004808 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40004808 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40004808 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40004808 C   FIELD 14w01 DEM: Driver enable mode
0x40004808 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40004808 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40004808 C   FIELD 23w01 TXFTIE: TXFTIE
0x40004808 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x40004808 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x40004808 C   FIELD 28w01 RXFTIE: RXFTIE
0x40004808 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x4000480C B  REGISTER BRR (rw): Baud rate register
0x4000480C C   FIELD 00w16 BRR: BRR
0x40004810 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40004810 C   FIELD 00w08 PSC: Prescaler value
0x40004810 C   FIELD 08w08 GT: Guard time value
0x40004814 B  REGISTER RTOR (rw): Receiver timeout register
0x40004814 C   FIELD 00w24 RTO: Receiver timeout value
0x40004814 C   FIELD 24w08 BLEN: Block Length
0x40004818 B  REGISTER RQR (wo): Request register
0x40004818 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40004818 C   FIELD 01w01 SBKRQ: Send break request
0x40004818 C   FIELD 02w01 MMRQ: Mute mode request
0x40004818 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40004818 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4000481C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x4000481C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x4000481C C   FIELD 00w01 PE: PE
0x4000481C C   FIELD 00w01 PE: PE
0x4000481C C   FIELD 01w01 FE: FE
0x4000481C C   FIELD 01w01 FE: FE
0x4000481C C   FIELD 02w01 NE: NE
0x4000481C C   FIELD 02w01 NE: NE
0x4000481C C   FIELD 03w01 ORE: ORE
0x4000481C C   FIELD 03w01 ORE: ORE
0x4000481C C   FIELD 04w01 IDLE: IDLE
0x4000481C C   FIELD 04w01 IDLE: IDLE
0x4000481C C   FIELD 05w01 RXFNE: RXFNE
0x4000481C C   FIELD 05w01 RXFNE: RXFNE
0x4000481C C   FIELD 06w01 TC: TC
0x4000481C C   FIELD 06w01 TC: TC
0x4000481C C   FIELD 07w01 TXFNF: TXFNF
0x4000481C C   FIELD 07w01 TXFNF: TXFNF
0x4000481C C   FIELD 08w01 LBDF: LBDF
0x4000481C C   FIELD 08w01 LBDF: LBDF
0x4000481C C   FIELD 09w01 CTSIF: CTSIF
0x4000481C C   FIELD 09w01 CTSIF: CTSIF
0x4000481C C   FIELD 10w01 CTS: CTS
0x4000481C C   FIELD 10w01 CTS: CTS
0x4000481C C   FIELD 11w01 RTOF: RTOF
0x4000481C C   FIELD 11w01 RTOF: RTOF
0x4000481C C   FIELD 12w01 EOBF: EOBF
0x4000481C C   FIELD 12w01 EOBF: EOBF
0x4000481C C   FIELD 13w01 UDR: UDR
0x4000481C C   FIELD 14w01 ABRE: ABRE
0x4000481C C   FIELD 14w01 ABRE: ABRE
0x4000481C C   FIELD 15w01 ABRF: ABRF
0x4000481C C   FIELD 15w01 ABRF: ABRF
0x4000481C C   FIELD 16w01 BUSY: BUSY
0x4000481C C   FIELD 16w01 BUSY: BUSY
0x4000481C C   FIELD 17w01 CMF: CMF
0x4000481C C   FIELD 17w01 CMF: CMF
0x4000481C C   FIELD 18w01 SBKF: SBKF
0x4000481C C   FIELD 18w01 SBKF: SBKF
0x4000481C C   FIELD 19w01 RWU: RWU
0x4000481C C   FIELD 19w01 RWU: RWU
0x4000481C C   FIELD 21w01 TEACK: TEACK
0x4000481C C   FIELD 21w01 TEACK: TEACK
0x4000481C C   FIELD 22w01 REACK: REACK
0x4000481C C   FIELD 22w01 REACK: REACK
0x4000481C C   FIELD 23w01 TXFE: TXFE
0x4000481C C   FIELD 24w01 RXFF: RXFF
0x4000481C C   FIELD 25w01 TCBGT: TCBGT
0x4000481C C   FIELD 25w01 TCBGT: TCBGT
0x4000481C C   FIELD 26w01 RXFT: RXFT
0x4000481C C   FIELD 27w01 TXFT: TXFT
0x40004820 B  REGISTER ICR (wo): Interrupt flag clear register
0x40004820 C   FIELD 00w01 PECF: Parity error clear flag
0x40004820 C   FIELD 01w01 FECF: Framing error clear flag
0x40004820 C   FIELD 02w01 NECF: Noise detected clear flag
0x40004820 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40004820 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40004820 C   FIELD 05w01 TXFECF: TXFECF
0x40004820 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40004820 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x40004820 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40004820 C   FIELD 09w01 CTSCF: CTS clear flag
0x40004820 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40004820 C   FIELD 12w01 EOBCF: End of block clear flag
0x40004820 C   FIELD 13w01 UDRCF: UDRCF
0x40004820 C   FIELD 17w01 CMCF: Character match clear flag
0x40004824 B  REGISTER RDR (ro): Receive data register
0x40004824 C   FIELD 00w09 RDR: Receive data value
0x40004828 B  REGISTER TDR (rw): Transmit data register
0x40004828 C   FIELD 00w09 TDR: Transmit data value
0x4000482C B  REGISTER PRESC (rw): PRESC
0x4000482C C   FIELD 00w04 PRESCALER: PRESCALER
0x40004830 B  REGISTER AUTOCR (rw): AUTOCR
0x40004830 C   FIELD 00w16 TDN: TDN
0x40004830 C   FIELD 16w01 TRIGPOL: TRIPOL
0x40004830 C   FIELD 17w01 TRIGEN: TRIGEN
0x40004830 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x40004830 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x40004830 C   FIELD 31w01 TECLREN: TECLREN
0x40004C00 A PERIPHERAL UART4
0x40004C00 B  REGISTER CR1_disabled (rw): Control register 1
0x40004C00 B  REGISTER CR1_enabled (rw): Control register 1
0x40004C00 C   FIELD 00w01 UE: USART enable
0x40004C00 C   FIELD 00w01 UE: USART enable
0x40004C00 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40004C00 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40004C00 C   FIELD 02w01 RE: Receiver enable
0x40004C00 C   FIELD 02w01 RE: Receiver enable
0x40004C00 C   FIELD 03w01 TE: Transmitter enable
0x40004C00 C   FIELD 03w01 TE: Transmitter enable
0x40004C00 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40004C00 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40004C00 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40004C00 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40004C00 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40004C00 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40004C00 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40004C00 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40004C00 C   FIELD 08w01 PEIE: PE interrupt enable
0x40004C00 C   FIELD 08w01 PEIE: PE interrupt enable
0x40004C00 C   FIELD 09w01 PS: Parity selection
0x40004C00 C   FIELD 09w01 PS: Parity selection
0x40004C00 C   FIELD 10w01 PCE: Parity control enable
0x40004C00 C   FIELD 10w01 PCE: Parity control enable
0x40004C00 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40004C00 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40004C00 C   FIELD 12w01 M0: Word length
0x40004C00 C   FIELD 12w01 M0: Word length
0x40004C00 C   FIELD 13w01 MME: Mute mode enable
0x40004C00 C   FIELD 13w01 MME: Mute mode enable
0x40004C00 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40004C00 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40004C00 C   FIELD 15w01 OVER8: Oversampling mode
0x40004C00 C   FIELD 15w01 OVER8: Oversampling mode
0x40004C00 C   FIELD 16w05 DEDT: DEDT
0x40004C00 C   FIELD 16w05 DEDT: DEDT
0x40004C00 C   FIELD 21w05 DEAT: DEAT
0x40004C00 C   FIELD 21w05 DEAT: DEAT
0x40004C00 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x40004C00 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40004C00 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40004C00 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x40004C00 C   FIELD 28w01 M1: Word length
0x40004C00 C   FIELD 28w01 M1: Word length
0x40004C00 C   FIELD 29w01 FIFOEN: FIFOEN
0x40004C00 C   FIELD 29w01 FIFOEN: FIFOEN
0x40004C00 C   FIELD 30w01 TXFEIE: TXFEIE
0x40004C00 C   FIELD 31w01 RXFFIE: RXFFIE
0x40004C04 B  REGISTER CR2 (rw): Control register 2
0x40004C04 C   FIELD 00w01 SLVEN: SLVEN
0x40004C04 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x40004C04 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40004C04 C   FIELD 05w01 LBDL: LIN break detection length
0x40004C04 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40004C04 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40004C04 C   FIELD 09w01 CPHA: Clock phase
0x40004C04 C   FIELD 10w01 CPOL: Clock polarity
0x40004C04 C   FIELD 11w01 CLKEN: Clock enable
0x40004C04 C   FIELD 12w02 STOP: STOP bits
0x40004C04 C   FIELD 14w01 LINEN: LIN mode enable
0x40004C04 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40004C04 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40004C04 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40004C04 C   FIELD 18w01 DATAINV: Binary data inversion
0x40004C04 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40004C04 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40004C04 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40004C04 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40004C04 C   FIELD 24w08 ADD: Address of the USART node
0x40004C08 B  REGISTER CR3 (rw): Control register 3
0x40004C08 C   FIELD 00w01 EIE: Error interrupt enable
0x40004C08 C   FIELD 01w01 IREN: Ir mode enable
0x40004C08 C   FIELD 02w01 IRLP: Ir low-power
0x40004C08 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40004C08 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40004C08 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40004C08 C   FIELD 06w01 DMAR: DMA enable receiver
0x40004C08 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40004C08 C   FIELD 08w01 RTSE: RTS enable
0x40004C08 C   FIELD 09w01 CTSE: CTS enable
0x40004C08 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40004C08 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40004C08 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40004C08 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40004C08 C   FIELD 14w01 DEM: Driver enable mode
0x40004C08 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40004C08 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40004C08 C   FIELD 23w01 TXFTIE: TXFTIE
0x40004C08 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x40004C08 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x40004C08 C   FIELD 28w01 RXFTIE: RXFTIE
0x40004C08 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x40004C0C B  REGISTER BRR (rw): Baud rate register
0x40004C0C C   FIELD 00w16 BRR: BRR
0x40004C10 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40004C10 C   FIELD 00w08 PSC: Prescaler value
0x40004C10 C   FIELD 08w08 GT: Guard time value
0x40004C14 B  REGISTER RTOR (rw): Receiver timeout register
0x40004C14 C   FIELD 00w24 RTO: Receiver timeout value
0x40004C14 C   FIELD 24w08 BLEN: Block Length
0x40004C18 B  REGISTER RQR (wo): Request register
0x40004C18 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40004C18 C   FIELD 01w01 SBKRQ: Send break request
0x40004C18 C   FIELD 02w01 MMRQ: Mute mode request
0x40004C18 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40004C18 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x40004C1C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x40004C1C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x40004C1C C   FIELD 00w01 PE: PE
0x40004C1C C   FIELD 00w01 PE: PE
0x40004C1C C   FIELD 01w01 FE: FE
0x40004C1C C   FIELD 01w01 FE: FE
0x40004C1C C   FIELD 02w01 NE: NE
0x40004C1C C   FIELD 02w01 NE: NE
0x40004C1C C   FIELD 03w01 ORE: ORE
0x40004C1C C   FIELD 03w01 ORE: ORE
0x40004C1C C   FIELD 04w01 IDLE: IDLE
0x40004C1C C   FIELD 04w01 IDLE: IDLE
0x40004C1C C   FIELD 05w01 RXFNE: RXFNE
0x40004C1C C   FIELD 05w01 RXFNE: RXFNE
0x40004C1C C   FIELD 06w01 TC: TC
0x40004C1C C   FIELD 06w01 TC: TC
0x40004C1C C   FIELD 07w01 TXFNF: TXFNF
0x40004C1C C   FIELD 07w01 TXFNF: TXFNF
0x40004C1C C   FIELD 08w01 LBDF: LBDF
0x40004C1C C   FIELD 08w01 LBDF: LBDF
0x40004C1C C   FIELD 09w01 CTSIF: CTSIF
0x40004C1C C   FIELD 09w01 CTSIF: CTSIF
0x40004C1C C   FIELD 10w01 CTS: CTS
0x40004C1C C   FIELD 10w01 CTS: CTS
0x40004C1C C   FIELD 11w01 RTOF: RTOF
0x40004C1C C   FIELD 11w01 RTOF: RTOF
0x40004C1C C   FIELD 12w01 EOBF: EOBF
0x40004C1C C   FIELD 12w01 EOBF: EOBF
0x40004C1C C   FIELD 13w01 UDR: UDR
0x40004C1C C   FIELD 14w01 ABRE: ABRE
0x40004C1C C   FIELD 14w01 ABRE: ABRE
0x40004C1C C   FIELD 15w01 ABRF: ABRF
0x40004C1C C   FIELD 15w01 ABRF: ABRF
0x40004C1C C   FIELD 16w01 BUSY: BUSY
0x40004C1C C   FIELD 16w01 BUSY: BUSY
0x40004C1C C   FIELD 17w01 CMF: CMF
0x40004C1C C   FIELD 17w01 CMF: CMF
0x40004C1C C   FIELD 18w01 SBKF: SBKF
0x40004C1C C   FIELD 18w01 SBKF: SBKF
0x40004C1C C   FIELD 19w01 RWU: RWU
0x40004C1C C   FIELD 19w01 RWU: RWU
0x40004C1C C   FIELD 21w01 TEACK: TEACK
0x40004C1C C   FIELD 21w01 TEACK: TEACK
0x40004C1C C   FIELD 22w01 REACK: REACK
0x40004C1C C   FIELD 22w01 REACK: REACK
0x40004C1C C   FIELD 23w01 TXFE: TXFE
0x40004C1C C   FIELD 24w01 RXFF: RXFF
0x40004C1C C   FIELD 25w01 TCBGT: TCBGT
0x40004C1C C   FIELD 25w01 TCBGT: TCBGT
0x40004C1C C   FIELD 26w01 RXFT: RXFT
0x40004C1C C   FIELD 27w01 TXFT: TXFT
0x40004C20 B  REGISTER ICR (wo): Interrupt flag clear register
0x40004C20 C   FIELD 00w01 PECF: Parity error clear flag
0x40004C20 C   FIELD 01w01 FECF: Framing error clear flag
0x40004C20 C   FIELD 02w01 NECF: Noise detected clear flag
0x40004C20 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40004C20 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40004C20 C   FIELD 05w01 TXFECF: TXFECF
0x40004C20 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40004C20 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x40004C20 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40004C20 C   FIELD 09w01 CTSCF: CTS clear flag
0x40004C20 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40004C20 C   FIELD 12w01 EOBCF: End of block clear flag
0x40004C20 C   FIELD 13w01 UDRCF: UDRCF
0x40004C20 C   FIELD 17w01 CMCF: Character match clear flag
0x40004C24 B  REGISTER RDR (ro): Receive data register
0x40004C24 C   FIELD 00w09 RDR: Receive data value
0x40004C28 B  REGISTER TDR (rw): Transmit data register
0x40004C28 C   FIELD 00w09 TDR: Transmit data value
0x40004C2C B  REGISTER PRESC (rw): PRESC
0x40004C2C C   FIELD 00w04 PRESCALER: PRESCALER
0x40004C30 B  REGISTER AUTOCR (rw): AUTOCR
0x40004C30 C   FIELD 00w16 TDN: TDN
0x40004C30 C   FIELD 16w01 TRIGPOL: TRIPOL
0x40004C30 C   FIELD 17w01 TRIGEN: TRIGEN
0x40004C30 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x40004C30 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x40004C30 C   FIELD 31w01 TECLREN: TECLREN
0x40005000 A PERIPHERAL UART5
0x40005000 B  REGISTER CR1_disabled (rw): Control register 1
0x40005000 B  REGISTER CR1_enabled (rw): Control register 1
0x40005000 C   FIELD 00w01 UE: USART enable
0x40005000 C   FIELD 00w01 UE: USART enable
0x40005000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40005000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40005000 C   FIELD 02w01 RE: Receiver enable
0x40005000 C   FIELD 02w01 RE: Receiver enable
0x40005000 C   FIELD 03w01 TE: Transmitter enable
0x40005000 C   FIELD 03w01 TE: Transmitter enable
0x40005000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40005000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40005000 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40005000 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40005000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40005000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40005000 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40005000 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40005000 C   FIELD 08w01 PEIE: PE interrupt enable
0x40005000 C   FIELD 08w01 PEIE: PE interrupt enable
0x40005000 C   FIELD 09w01 PS: Parity selection
0x40005000 C   FIELD 09w01 PS: Parity selection
0x40005000 C   FIELD 10w01 PCE: Parity control enable
0x40005000 C   FIELD 10w01 PCE: Parity control enable
0x40005000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40005000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40005000 C   FIELD 12w01 M0: Word length
0x40005000 C   FIELD 12w01 M0: Word length
0x40005000 C   FIELD 13w01 MME: Mute mode enable
0x40005000 C   FIELD 13w01 MME: Mute mode enable
0x40005000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40005000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40005000 C   FIELD 15w01 OVER8: Oversampling mode
0x40005000 C   FIELD 15w01 OVER8: Oversampling mode
0x40005000 C   FIELD 16w05 DEDT: DEDT
0x40005000 C   FIELD 16w05 DEDT: DEDT
0x40005000 C   FIELD 21w05 DEAT: DEAT
0x40005000 C   FIELD 21w05 DEAT: DEAT
0x40005000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x40005000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40005000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40005000 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x40005000 C   FIELD 28w01 M1: Word length
0x40005000 C   FIELD 28w01 M1: Word length
0x40005000 C   FIELD 29w01 FIFOEN: FIFOEN
0x40005000 C   FIELD 29w01 FIFOEN: FIFOEN
0x40005000 C   FIELD 30w01 TXFEIE: TXFEIE
0x40005000 C   FIELD 31w01 RXFFIE: RXFFIE
0x40005004 B  REGISTER CR2 (rw): Control register 2
0x40005004 C   FIELD 00w01 SLVEN: SLVEN
0x40005004 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x40005004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40005004 C   FIELD 05w01 LBDL: LIN break detection length
0x40005004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40005004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40005004 C   FIELD 09w01 CPHA: Clock phase
0x40005004 C   FIELD 10w01 CPOL: Clock polarity
0x40005004 C   FIELD 11w01 CLKEN: Clock enable
0x40005004 C   FIELD 12w02 STOP: STOP bits
0x40005004 C   FIELD 14w01 LINEN: LIN mode enable
0x40005004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40005004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40005004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40005004 C   FIELD 18w01 DATAINV: Binary data inversion
0x40005004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40005004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40005004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40005004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40005004 C   FIELD 24w08 ADD: Address of the USART node
0x40005008 B  REGISTER CR3 (rw): Control register 3
0x40005008 C   FIELD 00w01 EIE: Error interrupt enable
0x40005008 C   FIELD 01w01 IREN: Ir mode enable
0x40005008 C   FIELD 02w01 IRLP: Ir low-power
0x40005008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40005008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40005008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40005008 C   FIELD 06w01 DMAR: DMA enable receiver
0x40005008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40005008 C   FIELD 08w01 RTSE: RTS enable
0x40005008 C   FIELD 09w01 CTSE: CTS enable
0x40005008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40005008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40005008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40005008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40005008 C   FIELD 14w01 DEM: Driver enable mode
0x40005008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40005008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40005008 C   FIELD 23w01 TXFTIE: TXFTIE
0x40005008 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x40005008 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x40005008 C   FIELD 28w01 RXFTIE: RXFTIE
0x40005008 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x4000500C B  REGISTER BRR (rw): Baud rate register
0x4000500C C   FIELD 00w16 BRR: BRR
0x40005010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40005010 C   FIELD 00w08 PSC: Prescaler value
0x40005010 C   FIELD 08w08 GT: Guard time value
0x40005014 B  REGISTER RTOR (rw): Receiver timeout register
0x40005014 C   FIELD 00w24 RTO: Receiver timeout value
0x40005014 C   FIELD 24w08 BLEN: Block Length
0x40005018 B  REGISTER RQR (wo): Request register
0x40005018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40005018 C   FIELD 01w01 SBKRQ: Send break request
0x40005018 C   FIELD 02w01 MMRQ: Mute mode request
0x40005018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40005018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4000501C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x4000501C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x4000501C C   FIELD 00w01 PE: PE
0x4000501C C   FIELD 00w01 PE: PE
0x4000501C C   FIELD 01w01 FE: FE
0x4000501C C   FIELD 01w01 FE: FE
0x4000501C C   FIELD 02w01 NE: NE
0x4000501C C   FIELD 02w01 NE: NE
0x4000501C C   FIELD 03w01 ORE: ORE
0x4000501C C   FIELD 03w01 ORE: ORE
0x4000501C C   FIELD 04w01 IDLE: IDLE
0x4000501C C   FIELD 04w01 IDLE: IDLE
0x4000501C C   FIELD 05w01 RXFNE: RXFNE
0x4000501C C   FIELD 05w01 RXFNE: RXFNE
0x4000501C C   FIELD 06w01 TC: TC
0x4000501C C   FIELD 06w01 TC: TC
0x4000501C C   FIELD 07w01 TXFNF: TXFNF
0x4000501C C   FIELD 07w01 TXFNF: TXFNF
0x4000501C C   FIELD 08w01 LBDF: LBDF
0x4000501C C   FIELD 08w01 LBDF: LBDF
0x4000501C C   FIELD 09w01 CTSIF: CTSIF
0x4000501C C   FIELD 09w01 CTSIF: CTSIF
0x4000501C C   FIELD 10w01 CTS: CTS
0x4000501C C   FIELD 10w01 CTS: CTS
0x4000501C C   FIELD 11w01 RTOF: RTOF
0x4000501C C   FIELD 11w01 RTOF: RTOF
0x4000501C C   FIELD 12w01 EOBF: EOBF
0x4000501C C   FIELD 12w01 EOBF: EOBF
0x4000501C C   FIELD 13w01 UDR: UDR
0x4000501C C   FIELD 14w01 ABRE: ABRE
0x4000501C C   FIELD 14w01 ABRE: ABRE
0x4000501C C   FIELD 15w01 ABRF: ABRF
0x4000501C C   FIELD 15w01 ABRF: ABRF
0x4000501C C   FIELD 16w01 BUSY: BUSY
0x4000501C C   FIELD 16w01 BUSY: BUSY
0x4000501C C   FIELD 17w01 CMF: CMF
0x4000501C C   FIELD 17w01 CMF: CMF
0x4000501C C   FIELD 18w01 SBKF: SBKF
0x4000501C C   FIELD 18w01 SBKF: SBKF
0x4000501C C   FIELD 19w01 RWU: RWU
0x4000501C C   FIELD 19w01 RWU: RWU
0x4000501C C   FIELD 21w01 TEACK: TEACK
0x4000501C C   FIELD 21w01 TEACK: TEACK
0x4000501C C   FIELD 22w01 REACK: REACK
0x4000501C C   FIELD 22w01 REACK: REACK
0x4000501C C   FIELD 23w01 TXFE: TXFE
0x4000501C C   FIELD 24w01 RXFF: RXFF
0x4000501C C   FIELD 25w01 TCBGT: TCBGT
0x4000501C C   FIELD 25w01 TCBGT: TCBGT
0x4000501C C   FIELD 26w01 RXFT: RXFT
0x4000501C C   FIELD 27w01 TXFT: TXFT
0x40005020 B  REGISTER ICR (wo): Interrupt flag clear register
0x40005020 C   FIELD 00w01 PECF: Parity error clear flag
0x40005020 C   FIELD 01w01 FECF: Framing error clear flag
0x40005020 C   FIELD 02w01 NECF: Noise detected clear flag
0x40005020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40005020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40005020 C   FIELD 05w01 TXFECF: TXFECF
0x40005020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40005020 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x40005020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40005020 C   FIELD 09w01 CTSCF: CTS clear flag
0x40005020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40005020 C   FIELD 12w01 EOBCF: End of block clear flag
0x40005020 C   FIELD 13w01 UDRCF: UDRCF
0x40005020 C   FIELD 17w01 CMCF: Character match clear flag
0x40005024 B  REGISTER RDR (ro): Receive data register
0x40005024 C   FIELD 00w09 RDR: Receive data value
0x40005028 B  REGISTER TDR (rw): Transmit data register
0x40005028 C   FIELD 00w09 TDR: Transmit data value
0x4000502C B  REGISTER PRESC (rw): PRESC
0x4000502C C   FIELD 00w04 PRESCALER: PRESCALER
0x40005030 B  REGISTER AUTOCR (rw): AUTOCR
0x40005030 C   FIELD 00w16 TDN: TDN
0x40005030 C   FIELD 16w01 TRIGPOL: TRIPOL
0x40005030 C   FIELD 17w01 TRIGEN: TRIGEN
0x40005030 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x40005030 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x40005030 C   FIELD 31w01 TECLREN: TECLREN
0x40005400 A PERIPHERAL I2C1
0x40005400 B  REGISTER CR1 (rw): Control register 1
0x40005400 C   FIELD 00w01 PE: Peripheral enable
0x40005400 C   FIELD 01w01 TXIE: TX Interrupt enable
0x40005400 C   FIELD 02w01 RXIE: RX Interrupt enable
0x40005400 C   FIELD 03w01 ADDRIE: Address match interrupt enable (slave only)
0x40005400 C   FIELD 04w01 NACKIE: Not acknowledge received interrupt enable
0x40005400 C   FIELD 05w01 STOPIE: STOP detection Interrupt enable
0x40005400 C   FIELD 06w01 TCIE: Transfer Complete interrupt enable
0x40005400 C   FIELD 07w01 ERRIE: Error interrupts enable
0x40005400 C   FIELD 08w04 DNF: Digital noise filter
0x40005400 C   FIELD 12w01 ANFOFF: Analog noise filter OFF
0x40005400 C   FIELD 14w01 TXDMAEN: DMA transmission requests enable
0x40005400 C   FIELD 15w01 RXDMAEN: DMA reception requests enable
0x40005400 C   FIELD 16w01 SBC: Slave byte control
0x40005400 C   FIELD 17w01 NOSTRETCH: Clock stretching disable
0x40005400 C   FIELD 18w01 WUPEN: Wakeup from STOP enable
0x40005400 C   FIELD 19w01 GCEN: General call enable
0x40005400 C   FIELD 20w01 SMBHEN: SMBus Host address enable
0x40005400 C   FIELD 21w01 SMBDEN: SMBus Device Default address enable
0x40005400 C   FIELD 22w01 ALERTEN: SMBUS alert enable
0x40005400 C   FIELD 23w01 PECEN: PEC enable
0x40005400 C   FIELD 24w01 FMP: Fast-mode Plus 20 mA drive enable
0x40005400 C   FIELD 30w01 ADDRACLR: Address match flag (ADDR) automatic clear
0x40005400 C   FIELD 31w01 STOPFACLR: STOP detection flag (STOPF) automatic clear
0x40005404 B  REGISTER CR2 (rw): Control register 2
0x40005404 C   FIELD 00w10 SADD: Slave address bit (master mode)
0x40005404 C   FIELD 10w01 RD_WRN: Transfer direction (master mode)
0x40005404 C   FIELD 11w01 ADD10: 10-bit addressing mode (master mode)
0x40005404 C   FIELD 12w01 HEAD10R: 10-bit address header only read direction (master receiver mode)
0x40005404 C   FIELD 13w01 START: Start generation
0x40005404 C   FIELD 14w01 STOP: Stop generation (master mode)
0x40005404 C   FIELD 15w01 NACK: NACK generation (slave mode)
0x40005404 C   FIELD 16w08 NBYTES: Number of bytes
0x40005404 C   FIELD 24w01 RELOAD: NBYTES reload mode
0x40005404 C   FIELD 25w01 AUTOEND: Automatic end mode (master mode)
0x40005404 C   FIELD 26w01 PECBYTE: Packet error checking byte
0x40005408 B  REGISTER OAR1 (rw): Own address register 1
0x40005408 C   FIELD 00w10 OA1: Interface address
0x40005408 C   FIELD 10w01 OA1MODE: Own Address 1 10-bit mode
0x40005408 C   FIELD 15w01 OA1EN: Own Address 1 enable
0x4000540C B  REGISTER OAR2 (rw): Own address register 2
0x4000540C C   FIELD 01w07 OA2: Interface address
0x4000540C C   FIELD 08w03 OA2MSK: Own Address 2 masks
0x4000540C C   FIELD 15w01 OA2EN: Own Address 2 enable
0x40005410 B  REGISTER TIMINGR (rw): Timing register
0x40005410 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x40005410 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x40005410 C   FIELD 16w04 SDADEL: Data hold time
0x40005410 C   FIELD 20w04 SCLDEL: Data setup time
0x40005410 C   FIELD 28w04 PRESC: Timing prescaler
0x40005414 B  REGISTER TIMEOUTR (rw): Status register 1
0x40005414 C   FIELD 00w12 TIMEOUTA: Bus timeout A
0x40005414 C   FIELD 12w01 TIDLE: Idle clock timeout detection
0x40005414 C   FIELD 15w01 TIMOUTEN: Clock timeout enable
0x40005414 C   FIELD 16w12 TIMEOUTB: Bus timeout B
0x40005414 C   FIELD 31w01 TEXTEN: Extended clock timeout enable
0x40005418 B  REGISTER ISR: Interrupt and Status register
0x40005418 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x40005418 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x40005418 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x40005418 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x40005418 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x40005418 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x40005418 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x40005418 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x40005418 C   FIELD 08w01 BERR (ro): Bus error
0x40005418 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x40005418 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x40005418 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x40005418 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x40005418 C   FIELD 13w01 ALERT (ro): SMBus alert
0x40005418 C   FIELD 15w01 BUSY (ro): Bus busy
0x40005418 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode)
0x40005418 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x4000541C B  REGISTER ICR (wo): Interrupt clear register
0x4000541C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x4000541C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x4000541C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x4000541C C   FIELD 08w01 BERRCF: Bus error flag clear
0x4000541C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x4000541C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x4000541C C   FIELD 11w01 PECCF: PEC Error flag clear
0x4000541C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x4000541C C   FIELD 13w01 ALERTCF: Alert flag clear
0x40005420 B  REGISTER PECR (ro): PEC register
0x40005420 C   FIELD 00w08 PEC: Packet error checking register
0x40005424 B  REGISTER RXDR (ro): Receive data register
0x40005424 C   FIELD 00w08 RXDATA: 8-bit receive data
0x40005428 B  REGISTER TXDR (rw): Transmit data register
0x40005428 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x4000542C B  REGISTER I2C_AUTOCR (rw): I2C Autonomous mode control register
0x4000542C C   FIELD 06w01 TCDMAEN: DMA request enable on Transfer Complete event
0x4000542C C   FIELD 07w01 TCRDMAEN: DMA request enable on Transfer Complete Reload event
0x4000542C C   FIELD 16w04 TRIGSEL: Trigger selection
0x4000542C C   FIELD 20w01 TRIGPOL: Trigger polarity
0x4000542C C   FIELD 21w01 TRIGEN: Trigger enable
0x40005800 A PERIPHERAL I2C2
0x40005800 B  REGISTER CR1 (rw): Control register 1
0x40005800 C   FIELD 00w01 PE: Peripheral enable
0x40005800 C   FIELD 01w01 TXIE: TX Interrupt enable
0x40005800 C   FIELD 02w01 RXIE: RX Interrupt enable
0x40005800 C   FIELD 03w01 ADDRIE: Address match interrupt enable (slave only)
0x40005800 C   FIELD 04w01 NACKIE: Not acknowledge received interrupt enable
0x40005800 C   FIELD 05w01 STOPIE: STOP detection Interrupt enable
0x40005800 C   FIELD 06w01 TCIE: Transfer Complete interrupt enable
0x40005800 C   FIELD 07w01 ERRIE: Error interrupts enable
0x40005800 C   FIELD 08w04 DNF: Digital noise filter
0x40005800 C   FIELD 12w01 ANFOFF: Analog noise filter OFF
0x40005800 C   FIELD 14w01 TXDMAEN: DMA transmission requests enable
0x40005800 C   FIELD 15w01 RXDMAEN: DMA reception requests enable
0x40005800 C   FIELD 16w01 SBC: Slave byte control
0x40005800 C   FIELD 17w01 NOSTRETCH: Clock stretching disable
0x40005800 C   FIELD 18w01 WUPEN: Wakeup from STOP enable
0x40005800 C   FIELD 19w01 GCEN: General call enable
0x40005800 C   FIELD 20w01 SMBHEN: SMBus Host address enable
0x40005800 C   FIELD 21w01 SMBDEN: SMBus Device Default address enable
0x40005800 C   FIELD 22w01 ALERTEN: SMBUS alert enable
0x40005800 C   FIELD 23w01 PECEN: PEC enable
0x40005800 C   FIELD 24w01 FMP: Fast-mode Plus 20 mA drive enable
0x40005800 C   FIELD 30w01 ADDRACLR: Address match flag (ADDR) automatic clear
0x40005800 C   FIELD 31w01 STOPFACLR: STOP detection flag (STOPF) automatic clear
0x40005804 B  REGISTER CR2 (rw): Control register 2
0x40005804 C   FIELD 00w10 SADD: Slave address bit (master mode)
0x40005804 C   FIELD 10w01 RD_WRN: Transfer direction (master mode)
0x40005804 C   FIELD 11w01 ADD10: 10-bit addressing mode (master mode)
0x40005804 C   FIELD 12w01 HEAD10R: 10-bit address header only read direction (master receiver mode)
0x40005804 C   FIELD 13w01 START: Start generation
0x40005804 C   FIELD 14w01 STOP: Stop generation (master mode)
0x40005804 C   FIELD 15w01 NACK: NACK generation (slave mode)
0x40005804 C   FIELD 16w08 NBYTES: Number of bytes
0x40005804 C   FIELD 24w01 RELOAD: NBYTES reload mode
0x40005804 C   FIELD 25w01 AUTOEND: Automatic end mode (master mode)
0x40005804 C   FIELD 26w01 PECBYTE: Packet error checking byte
0x40005808 B  REGISTER OAR1 (rw): Own address register 1
0x40005808 C   FIELD 00w10 OA1: Interface address
0x40005808 C   FIELD 10w01 OA1MODE: Own Address 1 10-bit mode
0x40005808 C   FIELD 15w01 OA1EN: Own Address 1 enable
0x4000580C B  REGISTER OAR2 (rw): Own address register 2
0x4000580C C   FIELD 01w07 OA2: Interface address
0x4000580C C   FIELD 08w03 OA2MSK: Own Address 2 masks
0x4000580C C   FIELD 15w01 OA2EN: Own Address 2 enable
0x40005810 B  REGISTER TIMINGR (rw): Timing register
0x40005810 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x40005810 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x40005810 C   FIELD 16w04 SDADEL: Data hold time
0x40005810 C   FIELD 20w04 SCLDEL: Data setup time
0x40005810 C   FIELD 28w04 PRESC: Timing prescaler
0x40005814 B  REGISTER TIMEOUTR (rw): Status register 1
0x40005814 C   FIELD 00w12 TIMEOUTA: Bus timeout A
0x40005814 C   FIELD 12w01 TIDLE: Idle clock timeout detection
0x40005814 C   FIELD 15w01 TIMOUTEN: Clock timeout enable
0x40005814 C   FIELD 16w12 TIMEOUTB: Bus timeout B
0x40005814 C   FIELD 31w01 TEXTEN: Extended clock timeout enable
0x40005818 B  REGISTER ISR: Interrupt and Status register
0x40005818 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x40005818 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x40005818 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x40005818 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x40005818 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x40005818 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x40005818 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x40005818 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x40005818 C   FIELD 08w01 BERR (ro): Bus error
0x40005818 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x40005818 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x40005818 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x40005818 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x40005818 C   FIELD 13w01 ALERT (ro): SMBus alert
0x40005818 C   FIELD 15w01 BUSY (ro): Bus busy
0x40005818 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode)
0x40005818 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x4000581C B  REGISTER ICR (wo): Interrupt clear register
0x4000581C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x4000581C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x4000581C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x4000581C C   FIELD 08w01 BERRCF: Bus error flag clear
0x4000581C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x4000581C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x4000581C C   FIELD 11w01 PECCF: PEC Error flag clear
0x4000581C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x4000581C C   FIELD 13w01 ALERTCF: Alert flag clear
0x40005820 B  REGISTER PECR (ro): PEC register
0x40005820 C   FIELD 00w08 PEC: Packet error checking register
0x40005824 B  REGISTER RXDR (ro): Receive data register
0x40005824 C   FIELD 00w08 RXDATA: 8-bit receive data
0x40005828 B  REGISTER TXDR (rw): Transmit data register
0x40005828 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x4000582C B  REGISTER I2C_AUTOCR (rw): I2C Autonomous mode control register
0x4000582C C   FIELD 06w01 TCDMAEN: DMA request enable on Transfer Complete event
0x4000582C C   FIELD 07w01 TCRDMAEN: DMA request enable on Transfer Complete Reload event
0x4000582C C   FIELD 16w04 TRIGSEL: Trigger selection
0x4000582C C   FIELD 20w01 TRIGPOL: Trigger polarity
0x4000582C C   FIELD 21w01 TRIGEN: Trigger enable
0x40006000 A PERIPHERAL CRS
0x40006000 B  REGISTER CR (rw): control register
0x40006000 C   FIELD 00w01 SYNCOKIE: SYNC event OK interrupt enable
0x40006000 C   FIELD 01w01 SYNCWARNIE: SYNC warning interrupt enable
0x40006000 C   FIELD 02w01 ERRIE: Synchronization or trimming error interrupt enable
0x40006000 C   FIELD 03w01 ESYNCIE: Expected SYNC interrupt enable
0x40006000 C   FIELD 05w01 CEN: Frequency error counter enable
0x40006000 C   FIELD 06w01 AUTOTRIMEN: Automatic trimming enable
0x40006000 C   FIELD 07w01 SWSYNC: Generate software SYNC event
0x40006000 C   FIELD 08w07 TRIM: HSI48 oscillator smooth trimming
0x40006004 B  REGISTER CFGR (rw): configuration register
0x40006004 C   FIELD 00w16 RELOAD: Counter reload value
0x40006004 C   FIELD 16w08 FELIM: Frequency error limit
0x40006004 C   FIELD 24w03 SYNCDIV: SYNC divider
0x40006004 C   FIELD 28w02 SYNCSRC: SYNC signal source selection
0x40006004 C   FIELD 31w01 SYNCPOL: SYNC polarity selection
0x40006008 B  REGISTER ISR (ro): interrupt and status register
0x40006008 C   FIELD 00w01 SYNCOKF: SYNC event OK flag
0x40006008 C   FIELD 01w01 SYNCWARNF: SYNC warning flag
0x40006008 C   FIELD 02w01 ERRF: Error flag
0x40006008 C   FIELD 03w01 ESYNCF: Expected SYNC flag
0x40006008 C   FIELD 08w01 SYNCERR: SYNC error
0x40006008 C   FIELD 09w01 SYNCMISS: SYNC missed
0x40006008 C   FIELD 10w01 TRIMOVF: Trimming overflow or underflow
0x40006008 C   FIELD 15w01 FEDIR: Frequency error direction
0x40006008 C   FIELD 16w16 FECAP: Frequency error capture
0x4000600C B  REGISTER ICR (rw): interrupt flag clear register
0x4000600C C   FIELD 00w01 SYNCOKC: SYNC event OK clear flag
0x4000600C C   FIELD 01w01 SYNCWARNC: SYNC warning clear flag
0x4000600C C   FIELD 02w01 ERRC: Error clear flag
0x4000600C C   FIELD 03w01 ESYNCC: Expected SYNC clear flag
0x40008400 A PERIPHERAL I2C4
0x40008400 B  REGISTER CR1 (rw): Control register 1
0x40008400 C   FIELD 00w01 PE: Peripheral enable
0x40008400 C   FIELD 01w01 TXIE: TX Interrupt enable
0x40008400 C   FIELD 02w01 RXIE: RX Interrupt enable
0x40008400 C   FIELD 03w01 ADDRIE: Address match interrupt enable (slave only)
0x40008400 C   FIELD 04w01 NACKIE: Not acknowledge received interrupt enable
0x40008400 C   FIELD 05w01 STOPIE: STOP detection Interrupt enable
0x40008400 C   FIELD 06w01 TCIE: Transfer Complete interrupt enable
0x40008400 C   FIELD 07w01 ERRIE: Error interrupts enable
0x40008400 C   FIELD 08w04 DNF: Digital noise filter
0x40008400 C   FIELD 12w01 ANFOFF: Analog noise filter OFF
0x40008400 C   FIELD 14w01 TXDMAEN: DMA transmission requests enable
0x40008400 C   FIELD 15w01 RXDMAEN: DMA reception requests enable
0x40008400 C   FIELD 16w01 SBC: Slave byte control
0x40008400 C   FIELD 17w01 NOSTRETCH: Clock stretching disable
0x40008400 C   FIELD 18w01 WUPEN: Wakeup from STOP enable
0x40008400 C   FIELD 19w01 GCEN: General call enable
0x40008400 C   FIELD 20w01 SMBHEN: SMBus Host address enable
0x40008400 C   FIELD 21w01 SMBDEN: SMBus Device Default address enable
0x40008400 C   FIELD 22w01 ALERTEN: SMBUS alert enable
0x40008400 C   FIELD 23w01 PECEN: PEC enable
0x40008400 C   FIELD 24w01 FMP: Fast-mode Plus 20 mA drive enable
0x40008400 C   FIELD 30w01 ADDRACLR: Address match flag (ADDR) automatic clear
0x40008400 C   FIELD 31w01 STOPFACLR: STOP detection flag (STOPF) automatic clear
0x40008404 B  REGISTER CR2 (rw): Control register 2
0x40008404 C   FIELD 00w10 SADD: Slave address bit (master mode)
0x40008404 C   FIELD 10w01 RD_WRN: Transfer direction (master mode)
0x40008404 C   FIELD 11w01 ADD10: 10-bit addressing mode (master mode)
0x40008404 C   FIELD 12w01 HEAD10R: 10-bit address header only read direction (master receiver mode)
0x40008404 C   FIELD 13w01 START: Start generation
0x40008404 C   FIELD 14w01 STOP: Stop generation (master mode)
0x40008404 C   FIELD 15w01 NACK: NACK generation (slave mode)
0x40008404 C   FIELD 16w08 NBYTES: Number of bytes
0x40008404 C   FIELD 24w01 RELOAD: NBYTES reload mode
0x40008404 C   FIELD 25w01 AUTOEND: Automatic end mode (master mode)
0x40008404 C   FIELD 26w01 PECBYTE: Packet error checking byte
0x40008408 B  REGISTER OAR1 (rw): Own address register 1
0x40008408 C   FIELD 00w10 OA1: Interface address
0x40008408 C   FIELD 10w01 OA1MODE: Own Address 1 10-bit mode
0x40008408 C   FIELD 15w01 OA1EN: Own Address 1 enable
0x4000840C B  REGISTER OAR2 (rw): Own address register 2
0x4000840C C   FIELD 01w07 OA2: Interface address
0x4000840C C   FIELD 08w03 OA2MSK: Own Address 2 masks
0x4000840C C   FIELD 15w01 OA2EN: Own Address 2 enable
0x40008410 B  REGISTER TIMINGR (rw): Timing register
0x40008410 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x40008410 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x40008410 C   FIELD 16w04 SDADEL: Data hold time
0x40008410 C   FIELD 20w04 SCLDEL: Data setup time
0x40008410 C   FIELD 28w04 PRESC: Timing prescaler
0x40008414 B  REGISTER TIMEOUTR (rw): Status register 1
0x40008414 C   FIELD 00w12 TIMEOUTA: Bus timeout A
0x40008414 C   FIELD 12w01 TIDLE: Idle clock timeout detection
0x40008414 C   FIELD 15w01 TIMOUTEN: Clock timeout enable
0x40008414 C   FIELD 16w12 TIMEOUTB: Bus timeout B
0x40008414 C   FIELD 31w01 TEXTEN: Extended clock timeout enable
0x40008418 B  REGISTER ISR: Interrupt and Status register
0x40008418 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x40008418 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x40008418 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x40008418 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x40008418 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x40008418 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x40008418 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x40008418 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x40008418 C   FIELD 08w01 BERR (ro): Bus error
0x40008418 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x40008418 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x40008418 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x40008418 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x40008418 C   FIELD 13w01 ALERT (ro): SMBus alert
0x40008418 C   FIELD 15w01 BUSY (ro): Bus busy
0x40008418 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode)
0x40008418 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x4000841C B  REGISTER ICR (wo): Interrupt clear register
0x4000841C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x4000841C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x4000841C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x4000841C C   FIELD 08w01 BERRCF: Bus error flag clear
0x4000841C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x4000841C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x4000841C C   FIELD 11w01 PECCF: PEC Error flag clear
0x4000841C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x4000841C C   FIELD 13w01 ALERTCF: Alert flag clear
0x40008420 B  REGISTER PECR (ro): PEC register
0x40008420 C   FIELD 00w08 PEC: Packet error checking register
0x40008424 B  REGISTER RXDR (ro): Receive data register
0x40008424 C   FIELD 00w08 RXDATA: 8-bit receive data
0x40008428 B  REGISTER TXDR (rw): Transmit data register
0x40008428 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x4000842C B  REGISTER I2C_AUTOCR (rw): I2C Autonomous mode control register
0x4000842C C   FIELD 06w01 TCDMAEN: DMA request enable on Transfer Complete event
0x4000842C C   FIELD 07w01 TCRDMAEN: DMA request enable on Transfer Complete Reload event
0x4000842C C   FIELD 16w04 TRIGSEL: Trigger selection
0x4000842C C   FIELD 20w01 TRIGPOL: Trigger polarity
0x4000842C C   FIELD 21w01 TRIGEN: Trigger enable
0x40009400 A PERIPHERAL LPTIM2
0x40009400 B  REGISTER ISR_intput (ro): Interrupt and Status Register (intput mode)
0x40009400 B  REGISTER ISR_output (ro): Interrupt and Status Register (output mode)
0x40009400 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x40009400 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x40009400 C   FIELD 01w01 ARRM: Autoreload match
0x40009400 C   FIELD 01w01 ARRM: Autoreload match
0x40009400 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x40009400 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x40009400 C   FIELD 03w01 CMP1OK: Compare register 1 update OK
0x40009400 C   FIELD 04w01 ARROK: Autoreload register update OK
0x40009400 C   FIELD 04w01 ARROK: Autoreload register update OK
0x40009400 C   FIELD 05w01 UP: Counter direction change down to up
0x40009400 C   FIELD 05w01 UP: Counter direction change down to up
0x40009400 C   FIELD 06w01 DOWN: Counter direction change up to down
0x40009400 C   FIELD 06w01 DOWN: Counter direction change up to down
0x40009400 C   FIELD 07w01 UE: LPTIM update event occurred
0x40009400 C   FIELD 07w01 UE: LPTIM update event occurred
0x40009400 C   FIELD 08w01 REPOK: Repetition register update Ok
0x40009400 C   FIELD 08w01 REPOK: Repetition register update Ok
0x40009400 C   FIELD 09w01 CC2IF: Capture 2 interrupt flag
0x40009400 C   FIELD 09w01 CC2IF: Compare 2 interrupt flag
0x40009400 C   FIELD 12w01 CC1OF: Capture 1 over-capture flag
0x40009400 C   FIELD 13w01 CC2OF: Capture 2 over-capture flag
0x40009400 C   FIELD 19w01 CMP2OK: Compare register 2 update OK
0x40009400 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x40009400 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x40009404 B  REGISTER ICR_intput (wo): Interrupt Clear Register (intput mode)
0x40009404 B  REGISTER ICR_output (wo): Interrupt Clear Register (output mode)
0x40009404 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x40009404 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x40009404 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x40009404 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x40009404 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x40009404 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x40009404 C   FIELD 03w01 CMP1OKCF: Compare register 1 update OK Clear Flag
0x40009404 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x40009404 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x40009404 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x40009404 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x40009404 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x40009404 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x40009404 C   FIELD 07w01 UECF: Update event clear flag
0x40009404 C   FIELD 07w01 UECF: Update event clear flag
0x40009404 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x40009404 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x40009404 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x40009404 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x40009404 C   FIELD 12w01 CC1OCF: Capture/compare 1 over-capture clear flag
0x40009404 C   FIELD 13w01 CC2OCF: Capture/compare 2 over-capture clear flag
0x40009404 C   FIELD 19w01 CMP2OKCF: Compare register 2 update OK clear flag
0x40009404 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x40009404 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x40009408 B  REGISTER DIER_intput (rw): LPTIM interrupt Enable Register (intput mode)
0x40009408 B  REGISTER DIER_output (rw): LPTIM interrupt Enable Register (output mode)
0x40009408 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x40009408 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x40009408 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x40009408 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x40009408 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x40009408 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x40009408 C   FIELD 03w01 CMP1OKIE: Compare register 1 update OK Interrupt Enable
0x40009408 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x40009408 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x40009408 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x40009408 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x40009408 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x40009408 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x40009408 C   FIELD 07w01 UEIE: Update event interrupt enable
0x40009408 C   FIELD 07w01 UEIE: Update event interrupt enable
0x40009408 C   FIELD 08w01 REPOKIE: REPOKIE
0x40009408 C   FIELD 08w01 REPOKIE: REPOKIE
0x40009408 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x40009408 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x40009408 C   FIELD 12w01 CC1OIE: Capture/compare 1 over-capture interrupt enable
0x40009408 C   FIELD 13w01 CC2OIE: Capture/compare 2 over-capture interrupt enable
0x40009408 C   FIELD 16w01 CC1DE: Capture/compare 1 DMA request enable
0x40009408 C   FIELD 19w01 CMP2OKIE: Compare register 2 update OK interrupt enable
0x40009408 C   FIELD 23w01 UEDE: Update event DMA request enable
0x40009408 C   FIELD 25w01 CC2DE: Capture/compare 2 DMA request enable
0x4000940C B  REGISTER CFGR (rw): Configuration Register
0x4000940C C   FIELD 00w01 CKSEL: Clock selector
0x4000940C C   FIELD 01w02 CKPOL: Clock Polarity
0x4000940C C   FIELD 03w02 CKFLT: Configurable digital filter for external clock
0x4000940C C   FIELD 06w02 TRGFLT: Configurable digital filter for trigger
0x4000940C C   FIELD 09w03 PRESC: Clock prescaler
0x4000940C C   FIELD 13w03 TRIGSEL: Trigger selector
0x4000940C C   FIELD 17w02 TRIGEN: Trigger enable and polarity
0x4000940C C   FIELD 19w01 TIMOUT: Timeout enable
0x4000940C C   FIELD 20w01 WAVE: Waveform shape
0x4000940C C   FIELD 21w01 WAVPOL: Waveform shape polarity
0x4000940C C   FIELD 22w01 PRELOAD: Registers update mode
0x4000940C C   FIELD 23w01 COUNTMODE: counter mode enabled
0x4000940C C   FIELD 24w01 ENC: Encoder mode enable
0x40009410 B  REGISTER CR (rw): Control Register
0x40009410 C   FIELD 00w01 ENABLE: LPTIM Enable
0x40009410 C   FIELD 01w01 SNGSTRT: LPTIM start in single mode
0x40009410 C   FIELD 02w01 CNTSTRT: Timer start in continuous mode
0x40009410 C   FIELD 03w01 COUNTRST: Counter reset
0x40009410 C   FIELD 04w01 RSTARE: Reset after read enable
0x40009414 B  REGISTER CCR1 (rw): Compare Register
0x40009414 C   FIELD 00w16 CCR1: Capture/compare 1 value
0x40009418 B  REGISTER ARR (rw): Autoreload Register
0x40009418 C   FIELD 00w16 ARR: Auto reload value
0x4000941C B  REGISTER CNT (ro): Counter Register
0x4000941C C   FIELD 00w16 CNT: Counter value
0x40009424 B  REGISTER CFGR2 (rw): LPTIM configuration register 2
0x40009424 C   FIELD 00w02 IN1SEL: LPTIM input 1 selection
0x40009424 C   FIELD 04w02 IN2SEL: LPTIM input 2 selection
0x40009424 C   FIELD 16w02 IC1SEL: LPTIM input capture 1 selection
0x40009424 C   FIELD 20w02 IC2SEL: LPTIM input capture 2 selection
0x40009428 B  REGISTER RCR (rw): LPTIM repetition register
0x40009428 C   FIELD 00w08 REP: Repetition register value
0x4000942C B  REGISTER CCMR1 (rw): LPTIM capture/compare mode register 1
0x4000942C C   FIELD 00w01 CC1SEL: Capture/compare 1 selection
0x4000942C C   FIELD 01w01 CC1E: Capture/compare 1 output enable
0x4000942C C   FIELD 02w02 CC1P: Capture/compare 1 output polarity
0x4000942C C   FIELD 08w02 IC1PSC: Input capture 1 prescaler
0x4000942C C   FIELD 12w02 IC1F: Input capture 1 filter
0x4000942C C   FIELD 16w01 CC2SEL: Capture/compare 2 selection
0x4000942C C   FIELD 17w01 CC2E: Capture/compare 2 output enable
0x4000942C C   FIELD 18w02 CC2P: Capture/compare 2 output polarity
0x4000942C C   FIELD 24w02 IC2PSC: Input capture 2 prescaler
0x4000942C C   FIELD 28w02 IC2F: Input capture 2 filter
0x40009434 B  REGISTER CCR2 (rw): LPTIM Compare Register 2
0x40009434 C   FIELD 00w16 CCR2: Capture/compare 2 value
0x400097EC B  REGISTER HWCFGR2 (ro): LPTIM peripheral hardware configuration register 2
0x400097EC C   FIELD 00w04 CFG1: peripheral hardware configuration 1
0x400097EC C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x400097EC C   FIELD 16w01 CFG3: peripheral hardware configuration 3
0x400097F0 B  REGISTER HWCFGR1 (ro): LPTIM peripheral hardware configuration register 1
0x400097F0 C   FIELD 00w08 CFG1: peripheral hardware configuration 1
0x400097F0 C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x400097F0 C   FIELD 16w04 CFG3: peripheral hardware configuration 3
0x400097F0 C   FIELD 24w08 CFG4: peripheral hardware configuration 4
0x4000A400 A PERIPHERAL FDCAN1
0x4000A400 B  REGISTER FDCAN_CREL (ro): FDCAN Core Release Register
0x4000A400 C   FIELD 00w08 DAY: Timestamp Day
0x4000A400 C   FIELD 08w08 MON: Timestamp Month
0x4000A400 C   FIELD 16w04 YEAR: Timestamp Year
0x4000A400 C   FIELD 20w04 SUBSTEP: Sub-step of Core release
0x4000A400 C   FIELD 24w04 STEP: Step of Core release
0x4000A400 C   FIELD 28w04 REL: Core release
0x4000A404 B  REGISTER FDCAN_ENDN (ro): FDCAN endian register
0x4000A404 C   FIELD 00w32 ETV: Endiannes Test Value
0x4000A40C B  REGISTER FDCAN_DBTP (rw): FDCAN Data Bit Timing and Prescaler Register
0x4000A40C C   FIELD 00w04 DSJW: Synchronization Jump Width
0x4000A40C C   FIELD 04w04 DTSEG2: Data time segment after sample point
0x4000A40C C   FIELD 08w05 DTSEG1: Data time segment after sample point
0x4000A40C C   FIELD 16w05 DBRP: Data BIt Rate Prescaler
0x4000A40C C   FIELD 23w01 TDC: Transceiver Delay Compensation
0x4000A410 B  REGISTER FDCAN_TEST: FDCAN Test Register
0x4000A410 C   FIELD 04w01 LBCK (rw): Loop Back mode
0x4000A410 C   FIELD 05w02 TX (rw): Loop Back mode
0x4000A410 C   FIELD 07w01 RX (ro): Control of Transmit Pin
0x4000A414 B  REGISTER FDCAN_RWD: FDCAN RAM Watchdog Register
0x4000A414 C   FIELD 00w08 WDC (rw): Watchdog configuration
0x4000A414 C   FIELD 08w08 WDV (ro): Watchdog value
0x4000A418 B  REGISTER FDCAN_CCCR (rw): FDCAN CC Control Register
0x4000A418 C   FIELD 00w01 INIT: Initialization
0x4000A418 C   FIELD 01w01 CCE: Configuration Change Enable
0x4000A418 C   FIELD 02w01 ASM: ASM Restricted Operation Mode
0x4000A418 C   FIELD 03w01 CSA: Clock Stop Acknowledge
0x4000A418 C   FIELD 04w01 CSR: Clock Stop Request
0x4000A418 C   FIELD 05w01 MON: Bus Monitoring Mode
0x4000A418 C   FIELD 06w01 DAR: Disable Automatic Retransmission
0x4000A418 C   FIELD 07w01 TEST: Test Mode Enable
0x4000A418 C   FIELD 08w01 FDOE: FD Operation Enable
0x4000A418 C   FIELD 09w01 BRSE: FDCAN Bit Rate Switching
0x4000A418 C   FIELD 12w01 PXHD: Protocol Exception Handling Disable
0x4000A418 C   FIELD 13w01 EFBI: Edge Filtering during Bus Integration
0x4000A418 C   FIELD 14w01 TXP: TXP
0x4000A418 C   FIELD 15w01 NISO: Non ISO Operation
0x4000A41C B  REGISTER FDCAN_NBTP (rw): FDCAN Nominal Bit Timing and Prescaler Register
0x4000A41C C   FIELD 00w07 NTSEG2: Nominal Time segment after sample point
0x4000A41C C   FIELD 08w08 NTSEG1: Nominal Time segment before sample point
0x4000A41C C   FIELD 16w09 NBRP: Bit Rate Prescaler
0x4000A41C C   FIELD 25w07 NSJW: Nominal (Re)Synchronization Jump Width
0x4000A420 B  REGISTER FDCAN_TSCC (rw): FDCAN Timestamp Counter Configuration Register
0x4000A420 C   FIELD 00w02 TSS: Timestamp Select
0x4000A420 C   FIELD 16w04 TCP: Timestamp Counter Prescaler
0x4000A424 B  REGISTER FDCAN_TSCV (rw): FDCAN Timestamp Counter Value Register
0x4000A424 C   FIELD 00w16 TSC: Timestamp Counter
0x4000A428 B  REGISTER FDCAN_TOCC (rw): FDCAN Timeout Counter Configuration Register
0x4000A428 C   FIELD 00w01 ETOC: Enable Timeout Counter
0x4000A428 C   FIELD 01w02 TOS: Timeout Select
0x4000A428 C   FIELD 16w16 TOP: Timeout Period
0x4000A42C B  REGISTER FDCAN_TOCV (rw): FDCAN Timeout Counter Value Register
0x4000A42C C   FIELD 00w16 TOC: Timeout Counter
0x4000A440 B  REGISTER FDCAN_ECR: FDCAN Error Counter Register
0x4000A440 C   FIELD 00w08 TEC (ro): Transmit Error Counter
0x4000A440 C   FIELD 08w07 REC (ro): Receive Error Counter
0x4000A440 C   FIELD 15w01 RP (ro): Receive Error Passive
0x4000A440 C   FIELD 16w08 CEL (rw): AN Error Logging
0x4000A444 B  REGISTER FDCAN_PSR: FDCAN Protocol Status Register
0x4000A444 C   FIELD 00w03 LEC (rw): Last Error Code
0x4000A444 C   FIELD 03w02 ACT (ro): Activity
0x4000A444 C   FIELD 05w01 EP (ro): Error Passive
0x4000A444 C   FIELD 06w01 EW (ro): Warning Status
0x4000A444 C   FIELD 07w01 BO (ro): Bus_Off Status
0x4000A444 C   FIELD 08w03 DLEC (rw): Data Last Error Code
0x4000A444 C   FIELD 11w01 RESI (rw): ESI flag of last received FDCAN Message
0x4000A444 C   FIELD 12w01 RBRS (rw): BRS flag of last received FDCAN Message
0x4000A444 C   FIELD 13w01 REDL (rw): Received FDCAN Message
0x4000A444 C   FIELD 14w01 PXE (rw): Protocol Exception Event
0x4000A444 C   FIELD 16w07 TDCV (ro): Transmitter Delay Compensation Value
0x4000A448 B  REGISTER FDCAN_TDCR (rw): FDCAN Transmitter Delay Compensation Register
0x4000A448 C   FIELD 00w07 TDCF: Transmitter Delay Compensation Filter Window Length
0x4000A448 C   FIELD 08w07 TDCO: Transmitter Delay Compensation Offset
0x4000A450 B  REGISTER FDCAN_IR (rw): FDCAN Interrupt Register
0x4000A450 C   FIELD 00w01 RF0N: RF0N
0x4000A450 C   FIELD 01w01 RF0F: RF0F
0x4000A450 C   FIELD 02w01 RF0L: RF0L
0x4000A450 C   FIELD 03w01 RF1N: RF1N
0x4000A450 C   FIELD 04w01 RF1F: RF1F
0x4000A450 C   FIELD 05w01 RF1L: RF1L
0x4000A450 C   FIELD 06w01 HPM: HPM
0x4000A450 C   FIELD 07w01 TC: TC
0x4000A450 C   FIELD 08w01 TCF: TCF
0x4000A450 C   FIELD 09w01 TFE: TFE
0x4000A450 C   FIELD 10w01 TEFN: TEFN
0x4000A450 C   FIELD 11w01 TEFF: TEFF
0x4000A450 C   FIELD 12w01 TEFL: TEFL
0x4000A450 C   FIELD 13w01 TSW: TSW
0x4000A450 C   FIELD 14w01 MRAF: MRAF
0x4000A450 C   FIELD 15w01 TOO: TOO
0x4000A450 C   FIELD 16w01 ELO: ELO
0x4000A450 C   FIELD 17w01 EP: EP
0x4000A450 C   FIELD 18w01 EW: EW
0x4000A450 C   FIELD 19w01 BO: BO
0x4000A450 C   FIELD 20w01 WDI: WDI
0x4000A450 C   FIELD 21w01 PEA: PEA
0x4000A450 C   FIELD 22w01 PED: PED
0x4000A450 C   FIELD 23w01 ARA: ARA
0x4000A454 B  REGISTER FDCAN_IE (rw): FDCAN Interrupt Enable Register
0x4000A454 C   FIELD 00w01 RF0NE: Rx FIFO 0 New Message Enable
0x4000A454 C   FIELD 01w01 RF0FE: Rx FIFO 0 Full Enable
0x4000A454 C   FIELD 02w01 RF0LE: Rx FIFO 0 Message Lost Enable
0x4000A454 C   FIELD 03w01 RF1NE: Rx FIFO 1 New Message Enable
0x4000A454 C   FIELD 04w01 RF1FE: Rx FIFO 1 Watermark Reached Enable
0x4000A454 C   FIELD 05w01 RF1LE: Rx FIFO 1 Message Lost Enable
0x4000A454 C   FIELD 06w01 HPME: High Priority Message Enable
0x4000A454 C   FIELD 07w01 TCE: Transmission Completed Enable
0x4000A454 C   FIELD 08w01 TCFE: Transmission Cancellation Finished Enable
0x4000A454 C   FIELD 09w01 TEFE: Tx FIFO Empty Enable
0x4000A454 C   FIELD 10w01 TEFNE: Tx Event FIFO New Entry Enable
0x4000A454 C   FIELD 11w01 TEFFE: Tx Event FIFO Full Enable
0x4000A454 C   FIELD 12w01 TEFLE: Tx Event FIFO Element Lost Enable
0x4000A454 C   FIELD 13w01 TSWE: TSWE
0x4000A454 C   FIELD 14w01 MRAFE: Message RAM Access Failure Enable
0x4000A454 C   FIELD 15w01 TOOE: Timeout Occurred Enable
0x4000A454 C   FIELD 16w01 ELOE: Error Logging Overflow Enable
0x4000A454 C   FIELD 17w01 EPE: Error Passive Enable
0x4000A454 C   FIELD 18w01 EWE: Warning Status Enable
0x4000A454 C   FIELD 19w01 BOE: Bus_Off Status Enable
0x4000A454 C   FIELD 20w01 WDIE: Watchdog Interrupt Enable
0x4000A454 C   FIELD 21w01 PEAE: Protocol Error in Arbitration Phase Enable
0x4000A454 C   FIELD 22w01 PEDE: Protocol Error in Data Phase Enable
0x4000A454 C   FIELD 23w01 ARAE: Access to Reserved Address Enable
0x4000A458 B  REGISTER FDCAN_ILS (rw): FDCAN Interrupt Line Select Register
0x4000A458 C   FIELD 00w01 RxFIFO0: RxFIFO0
0x4000A458 C   FIELD 01w01 RxFIFO1: RxFIFO1
0x4000A458 C   FIELD 02w01 SMSG: SMSG
0x4000A458 C   FIELD 03w01 TFERR: TFERR
0x4000A458 C   FIELD 04w01 MISC: MISC
0x4000A458 C   FIELD 05w01 BERR: BERR
0x4000A458 C   FIELD 06w01 PERR: PERR
0x4000A45C B  REGISTER FDCAN_ILE (rw): FDCAN Interrupt Line Enable Register
0x4000A45C C   FIELD 00w01 EINT0: Enable Interrupt Line 0
0x4000A45C C   FIELD 01w01 EINT1: Enable Interrupt Line 1
0x4000A480 B  REGISTER FDCAN_RXGFC (rw): FDCAN Global Filter Configuration Register
0x4000A480 C   FIELD 00w01 RRFE: Reject Remote Frames Extended
0x4000A480 C   FIELD 01w01 RRFS: Reject Remote Frames Standard
0x4000A480 C   FIELD 02w02 ANFE: Accept Non-matching Frames Extended
0x4000A480 C   FIELD 04w02 ANFS: Accept Non-matching Frames Standard
0x4000A480 C   FIELD 08w01 F1OM: F1OM
0x4000A480 C   FIELD 09w01 F0OM: F0OM
0x4000A480 C   FIELD 16w05 LSS: LSS
0x4000A480 C   FIELD 24w04 LSE: LSE
0x4000A484 B  REGISTER FDCAN_XIDAM (rw): FDCAN Extended ID and Mask Register
0x4000A484 C   FIELD 00w29 EIDM: Extended ID Mask
0x4000A488 B  REGISTER FDCAN_HPMS (ro): FDCAN High Priority Message Status Register
0x4000A488 C   FIELD 00w03 BIDX: Buffer Index
0x4000A488 C   FIELD 06w02 MSI: Message Storage Indicator
0x4000A488 C   FIELD 08w05 FIDX: Filter Index
0x4000A488 C   FIELD 15w01 FLST: Filter List
0x4000A490 B  REGISTER FDCAN_RXF0S (ro): FDCAN Rx FIFO 0 Status Register
0x4000A490 C   FIELD 00w04 F0FL: Rx FIFO 0 Fill Level
0x4000A490 C   FIELD 08w02 F0GI: Rx FIFO 0 Get Index
0x4000A490 C   FIELD 16w02 F0PI: Rx FIFO 0 Put Index
0x4000A490 C   FIELD 24w01 F0F: Rx FIFO 0 Full
0x4000A490 C   FIELD 25w01 RF0L: Rx FIFO 0 Message Lost
0x4000A494 B  REGISTER FDCAN_RXF0A (rw): CAN Rx FIFO 0 Acknowledge Register
0x4000A494 C   FIELD 00w03 F0AI: Rx FIFO 0 Acknowledge Index
0x4000A498 B  REGISTER FDCAN_RXF1S (ro): FDCAN Rx FIFO 1 Status Register
0x4000A498 C   FIELD 00w04 F1FL: Rx FIFO 1 Fill Level
0x4000A498 C   FIELD 08w02 F1GI: Rx FIFO 1 Get Index
0x4000A498 C   FIELD 16w02 F1PI: Rx FIFO 1 Put Index
0x4000A498 C   FIELD 24w01 F1F: Rx FIFO 1 Full
0x4000A498 C   FIELD 25w01 RF1L: Rx FIFO 1 Message Lost
0x4000A49C B  REGISTER FDCAN_RXF1A (rw): FDCAN Rx FIFO 1 Acknowledge Register
0x4000A49C C   FIELD 00w03 F1AI: Rx FIFO 1 Acknowledge Index
0x4000A4C0 B  REGISTER FDCAN_TXBC (rw): FDCAN Tx buffer configuration register
0x4000A4C0 C   FIELD 24w01 TFQM: Tx FIFO/Queue Mode
0x4000A4C4 B  REGISTER FDCAN_TXFQS (ro): FDCAN Tx FIFO/Queue Status Register
0x4000A4C4 C   FIELD 00w03 TFFL: Tx FIFO Free Level
0x4000A4C4 C   FIELD 08w02 TFGI: TFGI
0x4000A4C4 C   FIELD 16w02 TFQPI: Tx FIFO/Queue Put Index
0x4000A4C4 C   FIELD 21w01 TFQF: Tx FIFO/Queue Full
0x4000A4C8 B  REGISTER FDCAN_TXBRP (ro): FDCAN Tx Buffer Request Pending Register
0x4000A4C8 C   FIELD 00w03 TRP: Transmission Request Pending
0x4000A4CC B  REGISTER FDCAN_TXBAR (rw): FDCAN Tx Buffer Add Request Register
0x4000A4CC C   FIELD 00w03 AR: Add Request
0x4000A4D0 B  REGISTER FDCAN_TXBCR (rw): FDCAN Tx Buffer Cancellation Request Register
0x4000A4D0 C   FIELD 00w03 CR: Cancellation Request
0x4000A4D4 B  REGISTER FDCAN_TXBTO (ro): FDCAN Tx Buffer Transmission Occurred Register
0x4000A4D4 C   FIELD 00w03 TO: Transmission Occurred.
0x4000A4D8 B  REGISTER FDCAN_TXBCF (ro): FDCAN Tx Buffer Cancellation Finished Register
0x4000A4D8 C   FIELD 00w03 CF: Cancellation Finished
0x4000A4DC B  REGISTER FDCAN_TXBTIE (rw): FDCAN Tx Buffer Transmission Interrupt Enable Register
0x4000A4DC C   FIELD 00w03 TIE: Transmission Interrupt Enable
0x4000A4E0 B  REGISTER FDCAN_TXBCIE (rw): FDCAN Tx Buffer Cancellation Finished Interrupt Enable Register
0x4000A4E0 C   FIELD 00w03 CFIE: Cancellation Finished Interrupt Enable
0x4000A4E4 B  REGISTER FDCAN_TXEFS (ro): FDCAN Tx Event FIFO Status Register
0x4000A4E4 C   FIELD 00w03 EFFL: Event FIFO Fill Level
0x4000A4E4 C   FIELD 08w02 EFGI: Event FIFO Get Index.
0x4000A4E4 C   FIELD 16w02 EFPI: Event FIFO Put Index
0x4000A4E4 C   FIELD 24w01 EFF: Event FIFO Full.
0x4000A4E4 C   FIELD 25w01 TEFL: Tx Event FIFO Element Lost.
0x4000A4E8 B  REGISTER FDCAN_TXEFA (rw): FDCAN Tx Event FIFO Acknowledge Register
0x4000A4E8 C   FIELD 00w02 EFAI: Event FIFO Acknowledge Index
0x4000A500 B  REGISTER FDCAN_CKDIV (rw): FDCAN CFG clock divider register
0x4000A500 C   FIELD 00w04 PDIV: PDIV
0x4000AC00 A PERIPHERAL FDCAN1_RAM
0x4000AC00 B  REGISTER FDCAN_CREL (ro): FDCAN Core Release Register
0x4000AC00 C   FIELD 00w08 DAY: Timestamp Day
0x4000AC00 C   FIELD 08w08 MON: Timestamp Month
0x4000AC00 C   FIELD 16w04 YEAR: Timestamp Year
0x4000AC00 C   FIELD 20w04 SUBSTEP: Sub-step of Core release
0x4000AC00 C   FIELD 24w04 STEP: Step of Core release
0x4000AC00 C   FIELD 28w04 REL: Core release
0x4000AC04 B  REGISTER FDCAN_ENDN (ro): FDCAN endian register
0x4000AC04 C   FIELD 00w32 ETV: Endiannes Test Value
0x4000AC0C B  REGISTER FDCAN_DBTP (rw): FDCAN Data Bit Timing and Prescaler Register
0x4000AC0C C   FIELD 00w04 DSJW: Synchronization Jump Width
0x4000AC0C C   FIELD 04w04 DTSEG2: Data time segment after sample point
0x4000AC0C C   FIELD 08w05 DTSEG1: Data time segment after sample point
0x4000AC0C C   FIELD 16w05 DBRP: Data BIt Rate Prescaler
0x4000AC0C C   FIELD 23w01 TDC: Transceiver Delay Compensation
0x4000AC10 B  REGISTER FDCAN_TEST: FDCAN Test Register
0x4000AC10 C   FIELD 04w01 LBCK (rw): Loop Back mode
0x4000AC10 C   FIELD 05w02 TX (rw): Loop Back mode
0x4000AC10 C   FIELD 07w01 RX (ro): Control of Transmit Pin
0x4000AC14 B  REGISTER FDCAN_RWD: FDCAN RAM Watchdog Register
0x4000AC14 C   FIELD 00w08 WDC (rw): Watchdog configuration
0x4000AC14 C   FIELD 08w08 WDV (ro): Watchdog value
0x4000AC18 B  REGISTER FDCAN_CCCR (rw): FDCAN CC Control Register
0x4000AC18 C   FIELD 00w01 INIT: Initialization
0x4000AC18 C   FIELD 01w01 CCE: Configuration Change Enable
0x4000AC18 C   FIELD 02w01 ASM: ASM Restricted Operation Mode
0x4000AC18 C   FIELD 03w01 CSA: Clock Stop Acknowledge
0x4000AC18 C   FIELD 04w01 CSR: Clock Stop Request
0x4000AC18 C   FIELD 05w01 MON: Bus Monitoring Mode
0x4000AC18 C   FIELD 06w01 DAR: Disable Automatic Retransmission
0x4000AC18 C   FIELD 07w01 TEST: Test Mode Enable
0x4000AC18 C   FIELD 08w01 FDOE: FD Operation Enable
0x4000AC18 C   FIELD 09w01 BRSE: FDCAN Bit Rate Switching
0x4000AC18 C   FIELD 12w01 PXHD: Protocol Exception Handling Disable
0x4000AC18 C   FIELD 13w01 EFBI: Edge Filtering during Bus Integration
0x4000AC18 C   FIELD 14w01 TXP: TXP
0x4000AC18 C   FIELD 15w01 NISO: Non ISO Operation
0x4000AC1C B  REGISTER FDCAN_NBTP (rw): FDCAN Nominal Bit Timing and Prescaler Register
0x4000AC1C C   FIELD 00w07 NTSEG2: Nominal Time segment after sample point
0x4000AC1C C   FIELD 08w08 NTSEG1: Nominal Time segment before sample point
0x4000AC1C C   FIELD 16w09 NBRP: Bit Rate Prescaler
0x4000AC1C C   FIELD 25w07 NSJW: Nominal (Re)Synchronization Jump Width
0x4000AC20 B  REGISTER FDCAN_TSCC (rw): FDCAN Timestamp Counter Configuration Register
0x4000AC20 C   FIELD 00w02 TSS: Timestamp Select
0x4000AC20 C   FIELD 16w04 TCP: Timestamp Counter Prescaler
0x4000AC24 B  REGISTER FDCAN_TSCV (rw): FDCAN Timestamp Counter Value Register
0x4000AC24 C   FIELD 00w16 TSC: Timestamp Counter
0x4000AC28 B  REGISTER FDCAN_TOCC (rw): FDCAN Timeout Counter Configuration Register
0x4000AC28 C   FIELD 00w01 ETOC: Enable Timeout Counter
0x4000AC28 C   FIELD 01w02 TOS: Timeout Select
0x4000AC28 C   FIELD 16w16 TOP: Timeout Period
0x4000AC2C B  REGISTER FDCAN_TOCV (rw): FDCAN Timeout Counter Value Register
0x4000AC2C C   FIELD 00w16 TOC: Timeout Counter
0x4000AC40 B  REGISTER FDCAN_ECR: FDCAN Error Counter Register
0x4000AC40 C   FIELD 00w08 TEC (ro): Transmit Error Counter
0x4000AC40 C   FIELD 08w07 REC (ro): Receive Error Counter
0x4000AC40 C   FIELD 15w01 RP (ro): Receive Error Passive
0x4000AC40 C   FIELD 16w08 CEL (rw): AN Error Logging
0x4000AC44 B  REGISTER FDCAN_PSR: FDCAN Protocol Status Register
0x4000AC44 C   FIELD 00w03 LEC (rw): Last Error Code
0x4000AC44 C   FIELD 03w02 ACT (ro): Activity
0x4000AC44 C   FIELD 05w01 EP (ro): Error Passive
0x4000AC44 C   FIELD 06w01 EW (ro): Warning Status
0x4000AC44 C   FIELD 07w01 BO (ro): Bus_Off Status
0x4000AC44 C   FIELD 08w03 DLEC (rw): Data Last Error Code
0x4000AC44 C   FIELD 11w01 RESI (rw): ESI flag of last received FDCAN Message
0x4000AC44 C   FIELD 12w01 RBRS (rw): BRS flag of last received FDCAN Message
0x4000AC44 C   FIELD 13w01 REDL (rw): Received FDCAN Message
0x4000AC44 C   FIELD 14w01 PXE (rw): Protocol Exception Event
0x4000AC44 C   FIELD 16w07 TDCV (ro): Transmitter Delay Compensation Value
0x4000AC48 B  REGISTER FDCAN_TDCR (rw): FDCAN Transmitter Delay Compensation Register
0x4000AC48 C   FIELD 00w07 TDCF: Transmitter Delay Compensation Filter Window Length
0x4000AC48 C   FIELD 08w07 TDCO: Transmitter Delay Compensation Offset
0x4000AC50 B  REGISTER FDCAN_IR (rw): FDCAN Interrupt Register
0x4000AC50 C   FIELD 00w01 RF0N: RF0N
0x4000AC50 C   FIELD 01w01 RF0F: RF0F
0x4000AC50 C   FIELD 02w01 RF0L: RF0L
0x4000AC50 C   FIELD 03w01 RF1N: RF1N
0x4000AC50 C   FIELD 04w01 RF1F: RF1F
0x4000AC50 C   FIELD 05w01 RF1L: RF1L
0x4000AC50 C   FIELD 06w01 HPM: HPM
0x4000AC50 C   FIELD 07w01 TC: TC
0x4000AC50 C   FIELD 08w01 TCF: TCF
0x4000AC50 C   FIELD 09w01 TFE: TFE
0x4000AC50 C   FIELD 10w01 TEFN: TEFN
0x4000AC50 C   FIELD 11w01 TEFF: TEFF
0x4000AC50 C   FIELD 12w01 TEFL: TEFL
0x4000AC50 C   FIELD 13w01 TSW: TSW
0x4000AC50 C   FIELD 14w01 MRAF: MRAF
0x4000AC50 C   FIELD 15w01 TOO: TOO
0x4000AC50 C   FIELD 16w01 ELO: ELO
0x4000AC50 C   FIELD 17w01 EP: EP
0x4000AC50 C   FIELD 18w01 EW: EW
0x4000AC50 C   FIELD 19w01 BO: BO
0x4000AC50 C   FIELD 20w01 WDI: WDI
0x4000AC50 C   FIELD 21w01 PEA: PEA
0x4000AC50 C   FIELD 22w01 PED: PED
0x4000AC50 C   FIELD 23w01 ARA: ARA
0x4000AC54 B  REGISTER FDCAN_IE (rw): FDCAN Interrupt Enable Register
0x4000AC54 C   FIELD 00w01 RF0NE: Rx FIFO 0 New Message Enable
0x4000AC54 C   FIELD 01w01 RF0FE: Rx FIFO 0 Full Enable
0x4000AC54 C   FIELD 02w01 RF0LE: Rx FIFO 0 Message Lost Enable
0x4000AC54 C   FIELD 03w01 RF1NE: Rx FIFO 1 New Message Enable
0x4000AC54 C   FIELD 04w01 RF1FE: Rx FIFO 1 Watermark Reached Enable
0x4000AC54 C   FIELD 05w01 RF1LE: Rx FIFO 1 Message Lost Enable
0x4000AC54 C   FIELD 06w01 HPME: High Priority Message Enable
0x4000AC54 C   FIELD 07w01 TCE: Transmission Completed Enable
0x4000AC54 C   FIELD 08w01 TCFE: Transmission Cancellation Finished Enable
0x4000AC54 C   FIELD 09w01 TEFE: Tx FIFO Empty Enable
0x4000AC54 C   FIELD 10w01 TEFNE: Tx Event FIFO New Entry Enable
0x4000AC54 C   FIELD 11w01 TEFFE: Tx Event FIFO Full Enable
0x4000AC54 C   FIELD 12w01 TEFLE: Tx Event FIFO Element Lost Enable
0x4000AC54 C   FIELD 13w01 TSWE: TSWE
0x4000AC54 C   FIELD 14w01 MRAFE: Message RAM Access Failure Enable
0x4000AC54 C   FIELD 15w01 TOOE: Timeout Occurred Enable
0x4000AC54 C   FIELD 16w01 ELOE: Error Logging Overflow Enable
0x4000AC54 C   FIELD 17w01 EPE: Error Passive Enable
0x4000AC54 C   FIELD 18w01 EWE: Warning Status Enable
0x4000AC54 C   FIELD 19w01 BOE: Bus_Off Status Enable
0x4000AC54 C   FIELD 20w01 WDIE: Watchdog Interrupt Enable
0x4000AC54 C   FIELD 21w01 PEAE: Protocol Error in Arbitration Phase Enable
0x4000AC54 C   FIELD 22w01 PEDE: Protocol Error in Data Phase Enable
0x4000AC54 C   FIELD 23w01 ARAE: Access to Reserved Address Enable
0x4000AC58 B  REGISTER FDCAN_ILS (rw): FDCAN Interrupt Line Select Register
0x4000AC58 C   FIELD 00w01 RxFIFO0: RxFIFO0
0x4000AC58 C   FIELD 01w01 RxFIFO1: RxFIFO1
0x4000AC58 C   FIELD 02w01 SMSG: SMSG
0x4000AC58 C   FIELD 03w01 TFERR: TFERR
0x4000AC58 C   FIELD 04w01 MISC: MISC
0x4000AC58 C   FIELD 05w01 BERR: BERR
0x4000AC58 C   FIELD 06w01 PERR: PERR
0x4000AC5C B  REGISTER FDCAN_ILE (rw): FDCAN Interrupt Line Enable Register
0x4000AC5C C   FIELD 00w01 EINT0: Enable Interrupt Line 0
0x4000AC5C C   FIELD 01w01 EINT1: Enable Interrupt Line 1
0x4000AC80 B  REGISTER FDCAN_RXGFC (rw): FDCAN Global Filter Configuration Register
0x4000AC80 C   FIELD 00w01 RRFE: Reject Remote Frames Extended
0x4000AC80 C   FIELD 01w01 RRFS: Reject Remote Frames Standard
0x4000AC80 C   FIELD 02w02 ANFE: Accept Non-matching Frames Extended
0x4000AC80 C   FIELD 04w02 ANFS: Accept Non-matching Frames Standard
0x4000AC80 C   FIELD 08w01 F1OM: F1OM
0x4000AC80 C   FIELD 09w01 F0OM: F0OM
0x4000AC80 C   FIELD 16w05 LSS: LSS
0x4000AC80 C   FIELD 24w04 LSE: LSE
0x4000AC84 B  REGISTER FDCAN_XIDAM (rw): FDCAN Extended ID and Mask Register
0x4000AC84 C   FIELD 00w29 EIDM: Extended ID Mask
0x4000AC88 B  REGISTER FDCAN_HPMS (ro): FDCAN High Priority Message Status Register
0x4000AC88 C   FIELD 00w03 BIDX: Buffer Index
0x4000AC88 C   FIELD 06w02 MSI: Message Storage Indicator
0x4000AC88 C   FIELD 08w05 FIDX: Filter Index
0x4000AC88 C   FIELD 15w01 FLST: Filter List
0x4000AC90 B  REGISTER FDCAN_RXF0S (ro): FDCAN Rx FIFO 0 Status Register
0x4000AC90 C   FIELD 00w04 F0FL: Rx FIFO 0 Fill Level
0x4000AC90 C   FIELD 08w02 F0GI: Rx FIFO 0 Get Index
0x4000AC90 C   FIELD 16w02 F0PI: Rx FIFO 0 Put Index
0x4000AC90 C   FIELD 24w01 F0F: Rx FIFO 0 Full
0x4000AC90 C   FIELD 25w01 RF0L: Rx FIFO 0 Message Lost
0x4000AC94 B  REGISTER FDCAN_RXF0A (rw): CAN Rx FIFO 0 Acknowledge Register
0x4000AC94 C   FIELD 00w03 F0AI: Rx FIFO 0 Acknowledge Index
0x4000AC98 B  REGISTER FDCAN_RXF1S (ro): FDCAN Rx FIFO 1 Status Register
0x4000AC98 C   FIELD 00w04 F1FL: Rx FIFO 1 Fill Level
0x4000AC98 C   FIELD 08w02 F1GI: Rx FIFO 1 Get Index
0x4000AC98 C   FIELD 16w02 F1PI: Rx FIFO 1 Put Index
0x4000AC98 C   FIELD 24w01 F1F: Rx FIFO 1 Full
0x4000AC98 C   FIELD 25w01 RF1L: Rx FIFO 1 Message Lost
0x4000AC9C B  REGISTER FDCAN_RXF1A (rw): FDCAN Rx FIFO 1 Acknowledge Register
0x4000AC9C C   FIELD 00w03 F1AI: Rx FIFO 1 Acknowledge Index
0x4000ACC0 B  REGISTER FDCAN_TXBC (rw): FDCAN Tx buffer configuration register
0x4000ACC0 C   FIELD 24w01 TFQM: Tx FIFO/Queue Mode
0x4000ACC4 B  REGISTER FDCAN_TXFQS (ro): FDCAN Tx FIFO/Queue Status Register
0x4000ACC4 C   FIELD 00w03 TFFL: Tx FIFO Free Level
0x4000ACC4 C   FIELD 08w02 TFGI: TFGI
0x4000ACC4 C   FIELD 16w02 TFQPI: Tx FIFO/Queue Put Index
0x4000ACC4 C   FIELD 21w01 TFQF: Tx FIFO/Queue Full
0x4000ACC8 B  REGISTER FDCAN_TXBRP (ro): FDCAN Tx Buffer Request Pending Register
0x4000ACC8 C   FIELD 00w03 TRP: Transmission Request Pending
0x4000ACCC B  REGISTER FDCAN_TXBAR (rw): FDCAN Tx Buffer Add Request Register
0x4000ACCC C   FIELD 00w03 AR: Add Request
0x4000ACD0 B  REGISTER FDCAN_TXBCR (rw): FDCAN Tx Buffer Cancellation Request Register
0x4000ACD0 C   FIELD 00w03 CR: Cancellation Request
0x4000ACD4 B  REGISTER FDCAN_TXBTO (ro): FDCAN Tx Buffer Transmission Occurred Register
0x4000ACD4 C   FIELD 00w03 TO: Transmission Occurred.
0x4000ACD8 B  REGISTER FDCAN_TXBCF (ro): FDCAN Tx Buffer Cancellation Finished Register
0x4000ACD8 C   FIELD 00w03 CF: Cancellation Finished
0x4000ACDC B  REGISTER FDCAN_TXBTIE (rw): FDCAN Tx Buffer Transmission Interrupt Enable Register
0x4000ACDC C   FIELD 00w03 TIE: Transmission Interrupt Enable
0x4000ACE0 B  REGISTER FDCAN_TXBCIE (rw): FDCAN Tx Buffer Cancellation Finished Interrupt Enable Register
0x4000ACE0 C   FIELD 00w03 CFIE: Cancellation Finished Interrupt Enable
0x4000ACE4 B  REGISTER FDCAN_TXEFS (ro): FDCAN Tx Event FIFO Status Register
0x4000ACE4 C   FIELD 00w03 EFFL: Event FIFO Fill Level
0x4000ACE4 C   FIELD 08w02 EFGI: Event FIFO Get Index.
0x4000ACE4 C   FIELD 16w02 EFPI: Event FIFO Put Index
0x4000ACE4 C   FIELD 24w01 EFF: Event FIFO Full.
0x4000ACE4 C   FIELD 25w01 TEFL: Tx Event FIFO Element Lost.
0x4000ACE8 B  REGISTER FDCAN_TXEFA (rw): FDCAN Tx Event FIFO Acknowledge Register
0x4000ACE8 C   FIELD 00w02 EFAI: Event FIFO Acknowledge Index
0x4000AD00 B  REGISTER FDCAN_CKDIV (rw): FDCAN CFG clock divider register
0x4000AD00 C   FIELD 00w04 PDIV: PDIV
0x4000DC00 A PERIPHERAL UCPD1
0x4000DC00 B  REGISTER UCPD_CFGR1: UCPD configuration register 1
0x4000DC00 C   FIELD 00w06 HBITCLKDIV (rw): Division ratio for producing half-bit clock The bitfield determines the division ratio (the bitfield value plus one) of a ucpd_clk divider producing half-bit clock (hbit_clk).
0x4000DC00 C   FIELD 06w05 IFRGAP (rw): Division ratio for producing inter-frame gap timer clock The bitfield determines the division ratio (the bitfield value minus one) of a ucpd_clk divider producing inter-frame gap timer clock (tInterFrameGap). The division ratio 15 is to apply for Tx clock at the USB PD 2.0 specification nominal value. The division ratios below 15 are to apply for Tx clock below nominal, and the division ratios above 15 for Tx clock above nominal.
0x4000DC00 C   FIELD 11w05 TRANSWIN (rw): Transition window duration The bitfield determines the division ratio (the bitfield value minus one) of a hbit_clk divider producing tTransitionWindow interval. Set a value that produces an interval of 12 to 20 us, taking into account the ucpd_clk frequency and the HBITCLKDIV[5:0] bitfield setting.
0x4000DC00 C   FIELD 17w03 PSC_USBPDCLK (rw): Pre-scaler division ratio for generating ucpd_clk The bitfield determines the division ratio of a kernel clock pre-scaler producing UCPD peripheral clock (ucpd_clk). It is recommended to use the pre-scaler so as to set the ucpd_clk frequency in the range from 6 to 9 MHz.
0x4000DC00 C   FIELD 20w09 RXORDSETEN (rw): Receiver ordered set enable The bitfield determines the types of ordered sets that the receiver must detect. When set/cleared, each bit enables/disables a specific function: 0bxxxxxxxx1: SOP detect enabled 0bxxxxxxx1x: SOP' detect enabled 0bxxxxxx1xx: SOP'' detect enabled 0bxxxxx1xxx: Hard Reset detect enabled 0bxxxx1xxxx: Cable Detect reset enabled 0bxxx1xxxxx: SOP'_Debug enabled 0bxx1xxxxxx: SOP''_Debug enabled 0bx1xxxxxxx: SOP extension#1 enabled 0b1xxxxxxxx: SOP extension#2 enabled
0x4000DC00 C   FIELD 29w01 TXDMAEN (rw): Transmission DMA mode enable When set, the bit enables DMA mode for transmission.
0x4000DC00 C   FIELD 30w01 RXDMAEN (rw): Reception DMA mode enable When set, the bit enables DMA mode for reception.
0x4000DC00 C   FIELD 31w01 UCPDEN (rw): UCPD peripheral enable General enable of the UCPD peripheral. Upon disabling, the peripheral instantly quits any ongoing activity and all control bits and bitfields default to their reset values. They must be set to their desired values each time the peripheral transits from disabled to enabled state.
0x4000DC04 B  REGISTER UCPD_CFGR2: UCPD configuration register 2
0x4000DC04 C   FIELD 00w01 RXFILTDIS (rw): BMC decoder Rx pre-filter enable The sampling clock is that of the receiver (that is, after pre-scaler).
0x4000DC04 C   FIELD 01w01 RXFILT2N3 (rw): BMC decoder Rx pre-filter sampling method Number of consistent consecutive samples before confirming a new value.
0x4000DC04 C   FIELD 02w01 FORCECLK (rw): Force ClkReq clock request
0x4000DC04 C   FIELD 03w01 WUPEN (rw): Wakeup from Stop mode enable Setting the bit enables the UCPD_ASYNC_INT signal.
0x4000DC08 B  REGISTER UCPD_CFGR3: UCPD configuration register 3
0x4000DC08 C   FIELD 00w04 TRIM1_NG_CCRPD (rw): SW trim value for RPD resistors on the CC1 line
0x4000DC08 C   FIELD 09w04 TRIM1_NG_CC3A0 (rw): SW trim value for Iref on the CC1 line
0x4000DC08 C   FIELD 16w04 TRIM2_NG_CCRPD (rw): SW trim value for RPD resistors on the CC2 line
0x4000DC08 C   FIELD 25w04 TRIM2_NG_CC3A0 (rw): SW trim value for Iref on the CC2 line
0x4000DC0C B  REGISTER UCPD_CR: UCPD control register
0x4000DC0C C   FIELD 00w02 TXMODE (rw): Type of Tx packet Writing the bitfield triggers the action as follows, depending on the value: Others: invalid From V1.1 of the USB PD specification, there is a counter defined for the duration of the BIST Carrier Mode 2. To quit this mode correctly (after the "tBISTContMode" delay), disable the peripheral (UCPDEN = 0).
0x4000DC0C C   FIELD 02w01 TXSEND (rw): Command to send a Tx packet The bit is cleared by hardware as soon as the packet transmission begins or is discarded.
0x4000DC0C C   FIELD 03w01 TXHRST (rw): Command to send a Tx Hard Reset The bit is cleared by hardware as soon as the message transmission begins or is discarded.
0x4000DC0C C   FIELD 04w01 RXMODE (rw): Receiver mode Determines the mode of the receiver. When the bit is set, RXORDSET behaves normally, RXDR no longer receives bytes yet the CRC checking still proceeds as for a normal message.
0x4000DC0C C   FIELD 05w01 PHYRXEN (rw): USB Power Delivery receiver enable Both CC1 and CC2 receivers are disabled when the bit is cleared. Only the CC receiver selected via the PHYCCSEL bit is enabled when the bit is set.
0x4000DC0C C   FIELD 06w01 PHYCCSEL (rw): CC1/CC2 line selector for USB Power Delivery signaling The selection depends on the cable orientation as discovered at attach.
0x4000DC0C C   FIELD 07w02 ANASUBMODE (rw): Analog PHY sub-mode Refer to TYPEC_VSTATE_CCx for the effect of this bitfield.
0x4000DC0C C   FIELD 09w01 ANAMODE (rw): Analog PHY operating mode The use of CC1 and CC2 depends on CCENABLE. Refer to ANAMODE, ANASUBMODE and link with TYPEC_VSTATE_CCx for the effect of this bitfield in conjunction with ANASUBMODE[1:0].
0x4000DC0C C   FIELD 10w02 CCENABLE (rw): CC line enable This bitfield enables CC1 and CC2 line analog PHYs (pull-ups and pull-downs) according to ANAMODE and ANASUBMODE[1:0] setting. A single line PHY can be enabled when, for example, the other line is driven by VCONN via an external VCONN switch. Enabling both PHYs is the normal usage for sink/source.
0x4000DC0C C   FIELD 13w01 CC1VCONNEN (rw): VCONN switch enable for CC1
0x4000DC0C C   FIELD 14w01 CC2VCONNEN (rw): VCONN switch enable for CC2
0x4000DC0C C   FIELD 16w01 FRSRXEN (rw): FRS event detection enable Setting the bit enables FRS Rx event (FRSEVT) detection on the CC line selected through the PHYCCSEL bit. 0: Disable Clear the bit when the device is attached to an FRS-incapable source/sink.
0x4000DC0C C   FIELD 17w01 FRSTX (rw): FRS Tx signaling enable. Setting the bit enables FRS Tx signaling. The bit is cleared by hardware after a delay respecting the USB Power Delivery specification Revision 3.0.
0x4000DC0C C   FIELD 18w01 RDCH (rw): Rdch condition drive The bit drives Rdch condition on the CC line selected through the PHYCCSEL bit (thus associated with VCONN), by remaining set during the source-only UnattachedWait.SRC state, to respect the Type-C state. Refer to "USB Type-C ECN for Source VCONN Discharge". The CCENABLE[1:0] bitfield must be set accordingly, too.
0x4000DC0C C   FIELD 20w01 CC1TCDIS (rw): CC1 Type-C detector disable The bit disables the Type-C detector on the CC1 line. When enabled, the Type-C detector for CC1 is configured through ANAMODE and ANASUBMODE[1:0].
0x4000DC0C C   FIELD 21w01 CC2TCDIS (rw): CC2 Type-C detector disable The bit disables the Type-C detector on the CC2 line. When enabled, the Type-C detector for CC2 is configured through ANAMODE and ANASUBMODE[1:0].
0x4000DC10 B  REGISTER UCPD_IMR: UCPD interrupt mask register
0x4000DC10 C   FIELD 00w01 TXISIE (rw): TXIS interrupt enable
0x4000DC10 C   FIELD 01w01 TXMSGDISCIE (rw): TXMSGDISC interrupt enable
0x4000DC10 C   FIELD 02w01 TXMSGSENTIE (rw): TXMSGSENT interrupt enable
0x4000DC10 C   FIELD 03w01 TXMSGABTIE (rw): TXMSGABT interrupt enable
0x4000DC10 C   FIELD 04w01 HRSTDISCIE (rw): HRSTDISC interrupt enable
0x4000DC10 C   FIELD 05w01 HRSTSENTIE (rw): HRSTSENT interrupt enable
0x4000DC10 C   FIELD 06w01 TXUNDIE (rw): TXUND interrupt enable
0x4000DC10 C   FIELD 08w01 RXNEIE (rw): RXNE interrupt enable
0x4000DC10 C   FIELD 09w01 RXORDDETIE (rw): RXORDDET interrupt enable
0x4000DC10 C   FIELD 10w01 RXHRSTDETIE (rw): RXHRSTDET interrupt enable
0x4000DC10 C   FIELD 11w01 RXOVRIE (rw): RXOVR interrupt enable
0x4000DC10 C   FIELD 12w01 RXMSGENDIE (rw): RXMSGEND interrupt enable
0x4000DC10 C   FIELD 14w01 TYPECEVT1IE (rw): TYPECEVT1 interrupt enable
0x4000DC10 C   FIELD 15w01 TYPECEVT2IE (rw): TYPECEVT2 interrupt enable
0x4000DC10 C   FIELD 20w01 FRSEVTIE (ro): FRSEVT interrupt enable
0x4000DC14 B  REGISTER UCPD_SR: UCPD status register
0x4000DC14 C   FIELD 00w01 TXIS (ro): Transmit interrupt status The flag indicates that the UCPD_TXDR register is empty and new data write is required (as the amount of data sent has not reached the payload size defined in the TXPAYSZ bitfield). The flag is cleared with the data write into the UCPD_TXDR register.
0x4000DC14 C   FIELD 01w01 TXMSGDISC (ro): Message transmission discarded The flag indicates that a message transmission was dropped. The flag is cleared by setting the TXMSGDISCCF bit. Transmission of a message can be dropped if there is a concurrent receive in progress or at excessive noise on the line. After a Tx message is discarded, the flag is only raised when the CC line becomes idle.
0x4000DC14 C   FIELD 02w01 TXMSGSENT (ro): Message transmission completed The flag indicates the completion of packet transmission. It is cleared by setting the TXMSGSENTCF bit. In the event of a message transmission interrupted by a Hard Reset, the flag is not raised.
0x4000DC14 C   FIELD 03w01 TXMSGABT (ro): Transmit message abort The flag indicates that a Tx message is aborted due to a subsequent Hard Reset message send request taking priority during transmit. It is cleared by setting the TXMSGABTCF bit.
0x4000DC14 C   FIELD 04w01 HRSTDISC (ro): Hard Reset discarded The flag indicates that the Hard Reset message is discarded. The flag is cleared by setting the HRSTDISCCF bit.
0x4000DC14 C   FIELD 05w01 HRSTSENT (ro): Hard Reset message sent The flag indicates that the Hard Reset message is sent. The flag is cleared by setting the HRSTSENTCF bit.
0x4000DC14 C   FIELD 06w01 TXUND (ro): Tx data underrun detection The flag indicates that the Tx data register (UCPD_TXDR) was not written in time for a transmit message to execute normally. It is cleared by setting the TXUNDCF bit.
0x4000DC14 C   FIELD 08w01 RXNE (ro): Receive data register not empty detection The flag indicates that the UCPD_RXDR register is not empty. It is automatically cleared upon reading UCPD_RXDR.
0x4000DC14 C   FIELD 09w01 RXORDDET (ro): Rx ordered set (4 K-codes) detection The flag indicates the detection of an ordered set. The relevant information is stored in the RXORDSET[2:0] bitfield of the UCPD_RX_ORDSET register. It is cleared by setting the RXORDDETCF bit.
0x4000DC14 C   FIELD 10w01 RXHRSTDET (ro): Rx Hard Reset receipt detection The flag indicates the receipt of valid Hard Reset message. It is cleared by setting the RXHRSTDETCF bit.
0x4000DC14 C   FIELD 11w01 RXOVR (ro): Rx data overflow detection The flag indicates Rx data buffer overflow. It is cleared by setting the RXOVRCF bit. The buffer overflow can occur if the received data are not read fast enough.
0x4000DC14 C   FIELD 12w01 RXMSGEND (ro): Rx message received The flag indicates whether a message (except Hard Reset message) has been received, regardless the CRC value. The flag is cleared by setting the RXMSGENDCF bit. The RXERR flag set when the RXMSGEND flag goes high indicates errors in the last-received message.
0x4000DC14 C   FIELD 13w01 RXERR (ro): Receive message error The flag indicates errors of the last Rx message declared (via RXMSGEND), such as incorrect CRC or truncated message (a line becoming static before EOP is met). It is asserted whenever the RXMSGEND flag is set.
0x4000DC14 C   FIELD 14w01 TYPECEVT1 (ro): Type-C voltage level event on CC1 line The flag indicates a change of the TYPEC_VSTATE_CC1[1:0] bitfield value, which corresponds to a new Type-C event. It is cleared by setting the TYPECEVT2CF bit.
0x4000DC14 C   FIELD 15w01 TYPECEVT2 (ro): Type-C voltage level event on CC2 line The flag indicates a change of the TYPEC_VSTATE_CC2[1:0] bitfield value, which corresponds to a new Type-C event. It is cleared by setting the TYPECEVT2CF bit.
0x4000DC14 C   FIELD 16w02 TYPEC_VSTATE_CC1 (ro): The status bitfield indicates the voltage level on the CC1 line in its steady state. The voltage variation on the CC1 line during USB PD messages due to the BMC PHY modulation does not impact the bitfield value.
0x4000DC14 C   FIELD 18w02 TYPEC_VSTATE_CC2 (ro): CC2 line voltage level The status bitfield indicates the voltage level on the CC2 line in its steady state. The voltage variation on the CC2 line during USB PD messages due to the BMC PHY modulation does not impact the bitfield value.
0x4000DC14 C   FIELD 20w01 FRSEVT (ro): FRS detection event The flag is cleared by setting the FRSEVTCF bit.
0x4000DC18 B  REGISTER UCPD_ICR: UCPD interrupt clear register
0x4000DC18 C   FIELD 01w01 TXMSGDISCCF (wo): Tx message discard flag (TXMSGDISC) clear Setting the bit clears the TXMSGDISC flag in the UCPD_SR register.
0x4000DC18 C   FIELD 02w01 TXMSGSENTCF (wo): Tx message send flag (TXMSGSENT) clear Setting the bit clears the TXMSGSENT flag in the UCPD_SR register.
0x4000DC18 C   FIELD 03w01 TXMSGABTCF (wo): Tx message abort flag (TXMSGABT) clear Setting the bit clears the TXMSGABT flag in the UCPD_SR register.
0x4000DC18 C   FIELD 04w01 HRSTDISCCF (wo): Hard reset discard flag (HRSTDISC) clear Setting the bit clears the HRSTDISC flag in the UCPD_SR register.
0x4000DC18 C   FIELD 05w01 HRSTSENTCF (wo): Hard reset send flag (HRSTSENT) clear Setting the bit clears the HRSTSENT flag in the UCPD_SR register.
0x4000DC18 C   FIELD 06w01 TXUNDCF (wo): Tx underflow flag (TXUND) clear Setting the bit clears the TXUND flag in the UCPD_SR register.
0x4000DC18 C   FIELD 09w01 RXORDDETCF (wo): Rx ordered set detect flag (RXORDDET) clear Setting the bit clears the RXORDDET flag in the UCPD_SR register.
0x4000DC18 C   FIELD 10w01 RXHRSTDETCF (wo): Rx Hard Reset detect flag (RXHRSTDET) clear Setting the bit clears the RXHRSTDET flag in the UCPD_SR register.
0x4000DC18 C   FIELD 11w01 RXOVRCF (wo): Rx overflow flag (RXOVR) clear Setting the bit clears the RXOVR flag in the UCPD_SR register.
0x4000DC18 C   FIELD 12w01 RXMSGENDCF (wo): Rx message received flag (RXMSGEND) clear Setting the bit clears the RXMSGEND flag in the UCPD_SR register.
0x4000DC18 C   FIELD 14w01 TYPECEVT1CF (wo): Type-C CC1 event flag (TYPECEVT1) clear Setting the bit clears the TYPECEVT1 flag in the UCPD_SR register
0x4000DC18 C   FIELD 15w01 TYPECEVT2CF (wo): Type-C CC2 line event flag (TYPECEVT2) clear Setting the bit clears the TYPECEVT2 flag in the UCPD_SR register
0x4000DC18 C   FIELD 20w01 FRSEVTCF (wo): FRS event flag (FRSEVT) clear Setting the bit clears the FRSEVT flag in the UCPD_SR register.
0x4000DC1C B  REGISTER UCPD_TX_ORDSETR: UCPD Tx ordered set type register
0x4000DC1C C   FIELD 00w20 TXORDSET (rw): Ordered set to transmit The bitfield determines a full 20-bit sequence to transmit, consisting of four K-codes, each of five bits, defining the packet to transmit. The bit 0 (bit 0 of K-code1) is the first, the bit 19 (bit 4 of K‑code4) the last.
0x4000DC20 B  REGISTER UCPD_TX_PAYSZR: UCPD Tx payload size register
0x4000DC20 C   FIELD 00w10 TXPAYSZ (rw): Payload size yet to transmit The bitfield is modified by software and by hardware. It contains the number of bytes of a payload (including header but excluding CRC) yet to transmit: each time a data byte is written into the UCPD_TXDR register, the bitfield value decrements and the TXIS bit is set, except when the bitfield value reaches zero. The enumerated values are standard payload sizes before the start of transmission.
0x4000DC24 B  REGISTER UCPD_TXDR: UCPD Tx data register
0x4000DC24 C   FIELD 00w08 TXDATA (rw): Data byte to transmit
0x4000DC28 B  REGISTER UCPD_RX_ORDSETR: 
0x4000DC28 C   FIELD 00w03 RXORDSET (ro): Rx ordered set code detected
0x4000DC28 C   FIELD 03w01 RXSOP3OF4 (ro): The bit indicates the number of correct K‑codes. For debug purposes only.
0x4000DC28 C   FIELD 04w03 RXSOPKINVALID (ro): The bitfield is for debug purposes only. Others: Invalid
0x4000DC2C B  REGISTER UCPD_RX_PAYSZR: 
0x4000DC2C C   FIELD 00w10 RXPAYSZ (ro): Rx payload size received This bitfield contains the number of bytes of a payload (including header but excluding CRC) received: each time a new data byte is received in the UCPD_RXDR register, the bitfield value increments and the RXMSGEND flag is set (and an interrupt generated if enabled). The bitfield may return a spurious value when a byte reception is ongoing (the RXMSGEND flag is low).
0x4000DC30 B  REGISTER UCPD_RXDR: 
0x4000DC30 C   FIELD 00w08 RXDATA (ro): Data byte received
0x4000DC34 B  REGISTER UCPD_RX_ORDEXTR1: UCPD Rx ordered set extension register 1
0x4000DC34 C   FIELD 00w20 RXSOPX1 (rw): Ordered set 1 received The bitfield contains a full 20-bit sequence received, consisting of four K‑codes, each of five bits. The bit 0 (bit 0 of K‑code1) is receive first, the bit 19 (bit 4 of K‑code4) last.
0x4000DC38 B  REGISTER UCPD_RX_ORDEXTR2: UCPD Rx ordered set extension register 2
0x4000DC38 C   FIELD 00w20 RXSOPX2 (rw): Ordered set 2 received The bitfield contains a full 20-bit sequence received, consisting of four K‑codes, each of five bits. The bit 0 (bit 0 of K‑code1) is receive first, the bit 19 (bit 4 of K‑code4) last.
0x40012C00 A PERIPHERAL TIM1
0x40012C00 B  REGISTER TIM1_CR1: TIM1 control register 1
0x40012C00 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock, gated mode and encoder mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x40012C00 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40012C00 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40012C00 C   FIELD 03w01 OPM (rw): One pulse mode
0x40012C00 C   FIELD 04w01 DIR (rw): Direction Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder mode.
0x40012C00 C   FIELD 05w02 CMS (rw): Center-aligned mode selection Note: It is not allowed to switch from edge-aligned mode to center-aligned mode as long as the counter is enabled (CEN=1)
0x40012C00 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40012C00 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (tim_ker_ck) frequency and the dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters (tim_etr_in, tim_tix),
0x40012C00 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40012C00 C   FIELD 12w01 DITHEN (rw): Dithering enable Note: The DITHEN bit can only be modified when CEN bit is reset.
0x40012C04 B  REGISTER TIM1_CR2 (rw): control register 2
0x40012C04 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x40012C04 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x40012C04 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40012C04 C   FIELD 04w03 MMS0_2: Master mode selection
0x40012C04 C   FIELD 07w01 TI1S: TI1 selection
0x40012C04 C   FIELD 08w01 OIS1: Output Idle state 1
0x40012C04 C   FIELD 09w01 OIS1N: Output Idle state 1
0x40012C04 C   FIELD 10w01 OIS2: Output Idle state 2
0x40012C04 C   FIELD 11w01 OIS2N: Output Idle state 2
0x40012C04 C   FIELD 12w01 OIS3: Output Idle state 3
0x40012C04 C   FIELD 13w01 OIS3N: Output Idle state 3
0x40012C04 C   FIELD 14w01 OIS4: Output Idle state 4
0x40012C04 C   FIELD 15w01 OIS4N: Output Idle state 4 (OC5 output)
0x40012C04 C   FIELD 16w01 OIS5: Output Idle state 5
0x40012C04 C   FIELD 18w01 OIS6: Output Idle state 6
0x40012C04 C   FIELD 20w04 MMS2: Master mode selection 2
0x40012C04 C   FIELD 25w01 MMS_3: Master mode selection 2
0x40012C08 B  REGISTER TIM1_SMCR: TIM1 slave mode control register
0x40012C08 C   FIELD 00w03 SMS1 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (tim_trgi) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if tim_ti1f_ed is selected as the trigger input (TS=00100). Indeed, tim_ti1f_ed outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the tim_trgo or the tim_trgo2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40012C08 C   FIELD 03w01 OCCS (rw): OCREF clear selection This bit is used to select the OCREF clear source.
0x40012C08 C   FIELD 04w03 TS1 (rw): Trigger selection - bit 4:3 Refer to TS[2:0] description - bits 6:4 null Trigger selection This bitfield is combined with TS[4:3] bits. This bit-field selects the trigger input to be used to synchronize the counter. others: Reserved See for more details on tim_itrx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40012C08 C   FIELD 07w01 MSM (rw): Master/slave mode
0x40012C08 C   FIELD 08w04 ETF (rw): External trigger filter This bit-field then defines the frequency used to sample tim_etrp signal and the length of the digital filter applied to tim_etrp. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40012C08 C   FIELD 12w02 ETPS (rw): External trigger prescaler External trigger signal tim_etrp frequency must be at most 1/4 of TIMxCLK frequency. A prescaler can be enabled to reduce tim_etrp frequency. It is useful when inputting fast external clocks on tim_etr_in.
0x40012C08 C   FIELD 14w01 ECE (rw): External clock enable This bit enables External clock mode 2. Note: Setting the ECE bit has the same effect as selecting external clock mode 1 with tim_trgi connected to tim_etrf (SMS=111 and TS=00111). It is possible to simultaneously use external clock mode 2 with the following slave modes: reset mode, gated mode and trigger mode. Nevertheless, tim_trgi must not be connected to tim_etrf in this case (TS bits must not be 00111). If external clock mode 1 and external clock mode 2 are enabled at the same time, the external clock input is tim_etrf.
0x40012C08 C   FIELD 15w01 ETP (rw): External trigger polarity This bit selects whether tim_etr_in or tim_etr_in is used for trigger operations
0x40012C08 C   FIELD 16w01 SMS2 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (tim_trgi) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if tim_ti1f_ed is selected as the trigger input (TS=00100). Indeed, tim_ti1f_ed outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the tim_trgo or the tim_trgo2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40012C08 C   FIELD 20w02 TS2 (rw): Trigger selection - bit 4:3 Refer to TS[2:0] description - bits 6:4 null Trigger selection This bitfield is combined with TS[4:3] bits. This bit-field selects the trigger input to be used to synchronize the counter. others: Reserved See for more details on tim_itrx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40012C08 C   FIELD 24w01 SMSPE (rw): SMS preload enable This bit selects whether the SMS[3:0] bitfield is preloaded
0x40012C08 C   FIELD 25w01 SMSPS (rw): SMS preload source This bit selects whether the events that triggers the SMS[3:0] bitfield transfer from preload to active
0x40012C0C B  REGISTER TIM1_DIER: TIM1 DMA/interrupt enable register
0x40012C0C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x40012C0C C   FIELD 01w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x40012C0C C   FIELD 02w01 CC2IE (rw): Capture/compare 2 interrupt enable
0x40012C0C C   FIELD 03w01 CC3IE (rw): Capture/compare 3 interrupt enable
0x40012C0C C   FIELD 04w01 CC4IE (rw): Capture/compare 4 interrupt enable
0x40012C0C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x40012C0C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x40012C0C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x40012C0C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x40012C0C C   FIELD 09w01 CC1DE (rw): Capture/compare 1 DMA request enable
0x40012C0C C   FIELD 10w01 CC2DE (rw): Capture/compare 2 DMA request enable
0x40012C0C C   FIELD 11w01 CC3DE (rw): Capture/compare 3 DMA request enable
0x40012C0C C   FIELD 12w01 CC4DE (rw): Capture/compare 4 DMA request enable
0x40012C0C C   FIELD 13w01 COMDE (rw): COM DMA request enable
0x40012C0C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x40012C0C C   FIELD 20w01 IDXIE (rw): Index interrupt enable
0x40012C0C C   FIELD 21w01 DIRIE (rw): Direction change interrupt enable
0x40012C0C C   FIELD 22w01 IERRIE (rw): Index error interrupt enable
0x40012C0C C   FIELD 23w01 TERRIE (rw): Transition error interrupt enable
0x40012C10 B  REGISTER TIM1_SR: TIM1 status register
0x40012C10 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to control register (TIMx_SMCR)(x = 1, 8)), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40012C10 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in downcounting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40012C10 C   FIELD 02w01 CC2IF (rw): Capture/compare 2 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 03w01 CC3IF (rw): Capture/compare 3 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 04w01 CC4IF (rw): Capture/compare 4 interrupt flag Refer to CC1IF description
0x40012C10 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on COM event (when capture/compare Control bits - CCxE, CCxNE, OCxM - have been updated). It is cleared by software.
0x40012C10 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on tim_trgi input when the slave mode controller is enabled in all modes but gated mode. It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x40012C10 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x40012C10 C   FIELD 08w01 B2IF (rw): Break 2 interrupt flag This flag is set by hardware as soon as the break 2 input goes active. It can be cleared by software if the break 2 input is not active.
0x40012C10 C   FIELD 09w01 CC1OF (rw): Capture/compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40012C10 C   FIELD 10w01 CC2OF (rw): Capture/compare 2 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 11w01 CC3OF (rw): Capture/compare 3 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 12w01 CC4OF (rw): Capture/compare 4 overcapture flag Refer to CC1OF description
0x40012C10 C   FIELD 13w01 SBIF (rw): System break interrupt flag This flag is set by hardware as soon as the system break input goes active. It can be cleared by software if the system break input is not active. This flag must be reset to re-start PWM operation.
0x40012C10 C   FIELD 16w01 CC5IF (rw): Compare 5 interrupt flag Refer to CC1IF description Note: Channel 5 can only be configured as output.
0x40012C10 C   FIELD 17w01 CC6IF (rw): Compare 6 interrupt flag Refer to CC1IF description Note: Channel 6 can only be configured as output.
0x40012C10 C   FIELD 20w01 IDXF (rw): Index interrupt flag This flag is set by hardware when an index event is detected. It is cleared by software by writing it to '0â.
0x40012C10 C   FIELD 21w01 DIRF (rw): Direction change interrupt flag This flag is set by hardware when the direction changes in encoder mode (DIR bit value in TIMx_CR is changing). It is cleared by software by writing it to '0â.
0x40012C10 C   FIELD 22w01 IERRF (rw): Index error interrupt flag This flag is set by hardware when an index error is detected. It is cleared by software by writing it to '0â.
0x40012C10 C   FIELD 23w01 TERRF (rw): Transition error interrupt flag This flag is set by hardware when a transition error is detected in encoder mode. It is cleared by software by writing it to '0â.
0x40012C14 B  REGISTER TIM1_EGR: TIM1 event generation register
0x40012C14 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40012C14 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40012C14 C   FIELD 02w01 CC2G (wo): Capture/compare 2 generation Refer to CC1G description
0x40012C14 C   FIELD 03w01 CC3G (wo): Capture/compare 3 generation Refer to CC1G description
0x40012C14 C   FIELD 04w01 CC4G (wo): Capture/compare 4 generation Refer to CC1G description
0x40012C14 C   FIELD 05w01 COMG (wo): Capture/compare control update generation This bit can be set by software, it is automatically cleared by hardware Note: This bit acts only on channels having a complementary output.
0x40012C14 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C14 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C14 C   FIELD 08w01 B2G (wo): Break 2 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40012C18 B  REGISTER TIM1_CCMR1_Input: TIM1 capture/compare mode register 1 [alternate]
0x40012C18 B  REGISTER TIM1_CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40012C18 C   FIELD 00w02 CC1S (rw): Capture/compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40012C18 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40012C18 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x40012C18 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (tim_ic1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x40012C18 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x40012C18 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x40012C18 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample tim_ti1 input and the length of the digital filter applied to tim_ti1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40012C18 C   FIELD 07w01 OC1CE: Output Compare 1 clear enable
0x40012C18 C   FIELD 08w02 CC2S (rw): Capture/compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = '0â in TIMx_CCER).
0x40012C18 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x40012C18 C   FIELD 10w01 OC2FE: Output Compare 2 fast enable
0x40012C18 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler
0x40012C18 C   FIELD 11w01 OC2PE: Output Compare 2 preload enable
0x40012C18 C   FIELD 12w03 OC2M: Output Compare 2 mode
0x40012C18 C   FIELD 12w04 IC2F (rw): Input capture 2 filter
0x40012C18 C   FIELD 15w01 OC2CE: Output Compare 2 clear enable
0x40012C18 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x40012C18 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x40012C1C B  REGISTER TIM1_CCMR2_Input: TIM1 capture/compare mode register 2 [alternate]
0x40012C1C B  REGISTER TIM1_CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x40012C1C C   FIELD 00w02 CC3S (rw): Capture/compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = '0â in TIMx_CCER).
0x40012C1C C   FIELD 00w02 CC3S_1_0: Capture/Compare 3 selection
0x40012C1C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x40012C1C C   FIELD 02w02 IC3PSC (rw): Input capture 3 prescaler
0x40012C1C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x40012C1C C   FIELD 04w03 OC3M_2_0: Output compare 3 mode
0x40012C1C C   FIELD 04w04 IC3F (rw): Input capture 3 filter
0x40012C1C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x40012C1C C   FIELD 08w02 CC4S (rw): Capture/compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = '0â in TIMx_CCER).
0x40012C1C C   FIELD 08w02 CC4S_1_0: Capture/Compare 4 selection
0x40012C1C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x40012C1C C   FIELD 10w02 IC4PSC (rw): Input capture 4 prescaler
0x40012C1C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x40012C1C C   FIELD 12w03 OC4M_3_0: Output compare 4 mode
0x40012C1C C   FIELD 12w04 IC4F (rw): Input capture 4 filter
0x40012C1C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x40012C1C C   FIELD 16w01 OC3M_3: Output compare 3 mode
0x40012C1C C   FIELD 24w01 OC4M_bit3: Output Compare 4 mode - bit 3
0x40012C20 B  REGISTER TIM1_CCER: TIM1 capture/compare enable register
0x40012C20 C   FIELD 00w01 CC1E (rw): Capture/compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to for details. Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1E active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 01w01 CC1P (rw): Capture/compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: the configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 02w01 CC1NE (rw): Capture/compare 1 complementary output enable Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NE active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 03w01 CC1NP (rw): Capture/compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of tim_ti1fp1 and tim_ti2fp1. Refer to CC1P description. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (channel configured as output). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40012C20 C   FIELD 04w01 CC2E (rw): Capture/compare 2 output enable Refer to CC1E description
0x40012C20 C   FIELD 05w01 CC2P (rw): Capture/compare 2 output polarity Refer to CC1P description
0x40012C20 C   FIELD 06w01 CC2NE (rw): Capture/compare 2 complementary output enable Refer to CC1NE description
0x40012C20 C   FIELD 07w01 CC2NP (rw): Capture/compare 2 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 08w01 CC3E (rw): Capture/compare 3 output enable Refer to CC1E description
0x40012C20 C   FIELD 09w01 CC3P (rw): Capture/compare 3 output polarity Refer to CC1P description
0x40012C20 C   FIELD 10w01 CC3NE (rw): Capture/compare 3 complementary output enable Refer to CC1NE description
0x40012C20 C   FIELD 11w01 CC3NP (rw): Capture/compare 3 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 12w01 CC4E (rw): Capture/compare 4 output enable Refer to CC1E description
0x40012C20 C   FIELD 13w01 CC4P (rw): Capture/compare 4 output polarity Refer to CC1P description
0x40012C20 C   FIELD 14w01 CC4NE (rw): Capture/compare 4 complementary output enable Refer to CC1NE description
0x40012C20 C   FIELD 15w01 CC4NP (rw): Capture/compare 4 complementary output polarity Refer to CC1NP description
0x40012C20 C   FIELD 16w01 CC5E (rw): Capture/compare 5 output enable Refer to CC1E description
0x40012C20 C   FIELD 17w01 CC5P (rw): Capture/compare 5 output polarity Refer to CC1P description
0x40012C20 C   FIELD 20w01 CC6E (rw): Capture/compare 6 output enable Refer to CC1E description
0x40012C20 C   FIELD 21w01 CC6P (rw): Capture/compare 6 output polarity Refer to CC1P description
0x40012C24 B  REGISTER TIM1_CNT: TIM1 counter
0x40012C24 C   FIELD 00w16 CNT (rw): Counter value Non-dithering mode (DITHEN = 0) The register holds the counter value. Dithering mode (DITHEN = 1) The register only holds the non-dithered part in CNT[15:0]. The fractional part is not available.
0x40012C24 C   FIELD 31w01 UIFCPY (ro): UIF copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in the TIMxCR1 is reset, bit 31 is reserved and read at 0.
0x40012C28 B  REGISTER TIM1_PSC: TIM1 prescaler
0x40012C28 C   FIELD 00w16 PSC (rw): Prescaler value The counter clock frequency (ftim_cnt_ck) is equal to ftim_psc_ck / (PSC[15:0] + 1). PSC contains the value to be loaded in the active prescaler register at each update event (including when the counter is cleared through UG bit of TIMx_EGR register or through trigger controller when configured in âreset modeâ).
0x40012C2C B  REGISTER TIM1_ARR: TIM1 auto-reload register
0x40012C2C C   FIELD 00w20 ARR (rw): Auto-reload value ARR is the value to be loaded in the actual auto-reload register. Refer to the for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null. Non-dithering mode (DITHEN = 0) The register holds the auto-reload value. Dithering mode (DITHEN = 1) The register holds the integer part in ARR[19:4]. The ARR[3:0] bitfield contains the dithered part.
0x40012C30 B  REGISTER TIM1_RCR: TIM1 repetition counter register
0x40012C30 C   FIELD 00w16 REP (rw): Repetition counter reload value This bitfield defines the update rate of the compare registers (i.e. periodic transfers from preload to active registers) when preload registers are enable. It also defines the update interrupt generation rate, if this interrupt is enable. When the repetition down-counter reaches zero, an update event is generated and it restarts counting from REP value. As the repetition counter is reloaded with REP value only at the repetition update event UEV, any write to the TIMx_RCR register is not taken in account until the next repetition update event. It means in PWM mode (REP+1) corresponds to: the number of PWM periods in edge-aligned mode the number of half PWM period in center-aligned mode.
0x40012C34 B  REGISTER TIM1_CCR1: TIM1 capture/compare register 1
0x40012C34 C   FIELD 00w20 CCR1 (rw): Capture/compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC1PE). Else the preload value is copied in the active capture/compare 1 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc1 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR1[15:0]. The CCR1[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR1[19:4]. The CCR1[3:0] bitfield contains the dithered part. If channel CC1 is configured as input: CR1 is the counter value transferred by the last input capture 1 event (tim_ic1). The TIMx_CCR1 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR1[15:0]. The CCR1[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR1[19:4]. The CCR1[3:0] bits are reset.
0x40012C38 B  REGISTER TIM1_CCR2: TIM1 capture/compare register 2
0x40012C38 C   FIELD 00w20 CCR2 (rw): Capture/compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC2PE). Else the preload value is copied in the active capture/compare 2 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc2 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR2[15:0]. The CCR2[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR2[19:4]. The CCR2[3:0] bitfield contains the dithered part. If channel CC2 is configured as input: CCR2 is the counter value transferred by the last input capture 2 event (tim_ic2). The TIMx_CCR2 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR2[15:0]. The CCR2[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR2[19:4]. The CCR2[3:0] bits are reset.
0x40012C3C B  REGISTER TIM1_CCR3: TIM1 capture/compare register 3
0x40012C3C C   FIELD 00w20 CCR3 (rw): Capture/compare value If channel CC3 is configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC3PE). Else the preload value is copied in the active capture/compare 3 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc3 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR3[15:0]. The CCR3[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR3[19:4]. The CCR3[3:0] bitfield contains the dithered part. If channel CC3 is configured as input: CCR3 is the counter value transferred by the last input capture 3 event (tim_ic3). The TIMx_CCR3 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR3[15:0]. The CCR3[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR3[19:4]. The CCR3[3:0] bits are reset.
0x40012C40 B  REGISTER TIM1_CCR4: TIM1 capture/compare register 4
0x40012C40 C   FIELD 00w20 CCR4 (rw): Capture/compare value If channel CC4 is configured as output: CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC4PE). Else the preload value is copied in the active capture/compare 4 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on tim_oc4 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR4[15:0]. The CCR4[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR4[19:4]. The CCR4[3:0] bitfield contains the dithered part. If channel CC4 is configured as input: CCR4 is the counter value transferred by the last input capture 4 event (tim_ic4). The TIMx_CCR4 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR4[15:0]. The CCR4[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR4[19:4]. The CCR4[3:0] bits are reset.
0x40012C44 B  REGISTER TIM1_BDTR: TIM1 break and dead-time register
0x40012C44 C   FIELD 00w08 DTG (rw): Dead-time generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration. DTG[7:5]=0xx => DT=DTG[7:0]x tdtg with tdtg=tDTS. DTG[7:5]=10x => DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS. DTG[7:5]=110 => DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS. DTG[7:5]=111 => DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS. Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 us to 31750 ns by 250 ns steps, 32 us to 63us by 1 us steps, 64 us to 126 us by 2 us steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x40012C44 C   FIELD 10w01 OSSI (rw): Off-state selection for idle mode This bit is used when MOE=0 due to a break event or by a software write, on channels configured as outputs. See OC/OCN enable description for more details (enable register (TIMx_CCER)(x = 1, 8)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels having a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (enable register (TIMx_CCER)(x = 1, 8)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 12w01 BKE (rw): Break enable This bit enables the complete break protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as one of the break inputs is active (tim_brk or tim_brk2). It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. In response to a break event or if MOE is written to 0: OC and OCN outputs are disabled or forced to idle state depending on the OSSI bit. enable register (TIMx_CCER)(x = 1, 8)).
0x40012C44 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample tim_brk input and the length of the digital filter applied to tim_brk. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 20w04 BK2F (rw): Break 2 filter This bit-field defines the frequency used to sample tim_brk2 input and the length of the digital filter applied to tim_brk2. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C44 C   FIELD 24w01 BK2E (rw): Break 2 enable This bit enables the complete break 2 protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: The BRKIN2 must only be used with OSSR = OSSI = 1. Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 25w01 BK2P (rw): Break 2 polarity Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 26w01 BKDSRM (rw): Break disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 27w01 BK2DSRM (rw): Break2 disarm Refer to BKDSRM description
0x40012C44 C   FIELD 28w01 BKBID (rw): Break bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40012C44 C   FIELD 29w01 BK2BID (rw): Break2 bidirectional Refer to BKBID description
0x40012C48 B  REGISTER TIM1_CCR5: TIM1 capture/compare register 5
0x40012C48 C   FIELD 00w20 CCR5 (rw): Capture/compare 5 value CCR5 is the value to be loaded in the actual capture/compare 5 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC5PE). Else the preload value is copied in the active capture/compare 5 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc5 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR5[15:0]. The CCR5[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR5[19:4]. The CCR5[3:0] bitfield contains the dithered part.
0x40012C48 C   FIELD 29w01 GC5C1 (rw): Group channel 5 and channel 1 Distortion on channel 1 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C48 C   FIELD 30w01 GC5C2 (rw): Group channel 5 and channel 2 Distortion on channel 2 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C48 C   FIELD 31w01 GC5C3 (rw): Group channel 5 and channel 3 Distortion on channel 3 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR2). Note: it is also possible to apply this distortion on combined PWM signals.
0x40012C4C B  REGISTER TIM1_CCR6: TIM1 capture/compare register 6
0x40012C4C C   FIELD 00w20 CCR6 (rw): Capture/compare 6 value CCR6 is the value to be loaded in the actual capture/compare 6 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC6PE). Else the preload value is copied in the active capture/compare 6 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc6 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR6[15:0]. The CCR6[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR6[19:4]. The CCR6[3:0] bitfield contains the dithered part.
0x40012C50 B  REGISTER TIM1_CCMR3: TIM1 capture/compare mode register 3
0x40012C50 C   FIELD 02w01 OC5FE (rw): Output compare 5 fast enable
0x40012C50 C   FIELD 03w01 OC5PE (rw): Output compare 5 preload enable
0x40012C50 C   FIELD 04w03 OC5M1 (rw): Output compare 5 mode
0x40012C50 C   FIELD 07w01 OC5CE (rw): Output compare 5 clear enable
0x40012C50 C   FIELD 10w01 OC6FE (rw): Output compare 6 fast enable
0x40012C50 C   FIELD 11w01 OC6PE (rw): Output compare 6 preload enable
0x40012C50 C   FIELD 12w03 OC6M1 (rw): Output compare 6 mode
0x40012C50 C   FIELD 15w01 OC6CE (rw): Output compare 6 clear enable
0x40012C50 C   FIELD 16w01 OC5M2 (rw): Output compare 5 mode
0x40012C50 C   FIELD 24w01 OC6M2 (rw): Output compare 6 mode
0x40012C54 B  REGISTER TIM1_DTR2: TIM1 timer deadtime register 2
0x40012C54 C   FIELD 00w08 DTGF (rw): Dead-time falling edge generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs, on the falling edge. DTGF[7:5]=0xx => DTF=DTGF[7:0]x tdtg with tdtg=tDTS. DTGF[7:5]=10x => DTF=(64+DTGF[5:0])xtdtg with Tdtg=2xtDTS. DTGF[7:5]=110 => DTF=(32+DTGF[4:0])xtdtg with Tdtg=8xtDTS. DTGF[7:5]=111 => DTF=(32+DTGF[4:0])xtdtg with Tdtg=16xtDTS. Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 us to 31750 ns by 250 ns steps, 32 us to 63us by 1 us steps, 64 us to 126 us by 2 us steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C54 C   FIELD 16w01 DTAE (rw): Deadtime asymmetric enable Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C54 C   FIELD 17w01 DTPE (rw): Deadtime preload enable Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C58 B  REGISTER TIM1_ECR: TIM1 timer encoder control register
0x40012C58 C   FIELD 00w01 IE (rw): Index enable This bit indicates if the Index event resets the counter.
0x40012C58 C   FIELD 01w02 IDIR (rw): Index direction This bit indicates in which direction the Index event resets the counter. Note: The IDR[1:0] bitfield must be written when IE bit is reset (index disabled).
0x40012C58 C   FIELD 03w02 IBLK (rw): Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x40012C58 C   FIELD 05w01 FIDX (rw): First index This bit indicates if the first index only is taken into account
0x40012C58 C   FIELD 06w02 IPOS (rw): Index positioning In quadrature encoder mode (SMS[3:0] = 0001, 0010, 0011, 1110, 1111), this bit indicates in which AB input configuration the Index event resets the counter. In directional clock mode or clock plus direction mode (SMS[3:0] = 1010, 1011, 1100, 1101), these bits indicates on which level the Index event resets the counter. In bidirectional clock mode, this applies for both clock inputs. x0: Index resets the counter when clock is 0 x1: Index resets the counter when clock is 1 Note: IPOS[1]âbit is not significant
0x40012C58 C   FIELD 16w08 PW (rw): Pulse width This bitfield defines the pulse duration, as following: tPW = PW[7:0] x tPWG
0x40012C58 C   FIELD 24w03 PWPRSC (rw): Pulse width prescaler This bitfield sets the clock prescaler for the pulse generator, as following: tPWG = (2(PWPRSC[2:0])) x ttim_ker_ck
0x40012C5C B  REGISTER TIM1_TISEL: TIM1 timer input selection register
0x40012C5C C   FIELD 00w04 TI1SEL (rw): Selects tim_ti1[0..15] input ... Refer to for interconnects list.
0x40012C5C C   FIELD 08w04 TI2SEL (rw): Selects tim_ti2[0..15] input ... Refer to for interconnects list.
0x40012C5C C   FIELD 16w04 TI3SEL (rw): Selects tim_ti3[0..15] input ... Refer to for interconnects list.
0x40012C5C C   FIELD 24w04 TI4SEL (rw): Selects tim_ti4[0..15] input ... Refer to for interconnects list.
0x40012C60 B  REGISTER TIM1_AF1: TIM1 alternate function option register 1
0x40012C60 C   FIELD 00w01 BKINE (rw): TIMx_BKIN input enable This bit enables the TIMx_BKIN alternate function input for the timerâs tim_brk input. TIMx_BKIN input is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 01w01 BKCMP1E (rw): tim_brk_cmp1 enable This bit enables the tim_brk_cmp1 for the timerâs tim_brk input. tim_brk_cmp1 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 02w01 BKCMP2E (rw): tim_brk_cmp2 enable This bit enables the tim_brk_cmp2 for the timerâs tim_brk input. tim_brk_cmp2 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 03w01 BKCMP3E (rw): tim_brk_cmp3 enable This bit enables the tim_brk_cmp3 for the timerâs tim_brk input. tim_brk_cmp3 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 04w01 BKCMP4E (rw): tim_brk_cmp4 enable This bit enables the tim_brk_cmp4 for the timerâs tim_brk input. tim_brk_cmp4 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 05w01 BKCMP5E (rw): tim_brk_cmp5 enable This bit enables the tim_brk_cmp5 for the timerâs tim_brk input. tim_brk_cmp5 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 06w01 BKCMP6E (rw): tim_brk_cmp6 enable This bit enables the tim_brk_cmp6 for the timerâs tim_brk input. tim_brk_cmp6 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 07w01 BKCMP7E (rw): tim_brk_cmp7 enable This bit enables the tim_brk_cmp7 for the timerâs tim_brk input. tim_brk_cmp7 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 08w01 BKCMP8E (rw): tim_brk_cmp8 enable This bit enables the tim_brk_cmp8 for the timerâs tim_brk input. tim_brk_cmp8 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 09w01 BKINP (rw): TIMx_BKIN input polarity This bit selects the TIMx_BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 10w01 BKCMP1P (rw): tim_brk_cmp1 input polarity This bit selects the tim_brk_cmp1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 11w01 BKCMP2P (rw): tim_brk_cmp2 input polarity This bit selects the tim_brk_cmp2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 12w01 BKCMP3P (rw): tim_brk_cmp3 input polarity This bit selects the tim_brk_cmp3 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 13w01 BKCMP4P (rw): tim_brk_cmp4 input polarity This bit selects the tim_brk_cmp4 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C60 C   FIELD 14w04 ETRSEL (rw): etr_in source selection These bits select the etr_in input source. ... Refer to for product specific implementation. Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 B  REGISTER TIM1_AF2: TIM1 alternate function register 2
0x40012C64 C   FIELD 00w01 BK2INE (rw): TIMx_BKIN2 input enable This bit enables the TIMx_BKIN2 alternate function input for the timerâs tim_brk2 input. TIMx_BKIN2 input is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 01w01 BK2CMP1E (rw): tim_brk2_cmp1 enable This bit enables the tim_brk2_cmp1 for the timerâs tim_brk2 input. tim_brk2_cmp1 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 02w01 BK2CMP2E (rw): tim_brk2_cmp2 enable This bit enables the tim_brk2_cmp2 for the timerâs tim_brk2 input. tim_brk2_cmp2 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 03w01 BK2CMP3E (rw): tim_brk2_cmp3 enable This bit enables the tim_brk2_cmp3 for the timerâs tim_brk2 input. tim_brk2_cmp3 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 04w01 BK2CMP4E (rw): tim_brk2_cmp4 enable This bit enables the tim_brk2_cmp4 for the timerâs tim_brk2 input. tim_brk2_cmp4 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 05w01 BK2CMP5E (rw): tim_brk2_cmp5 enable This bit enables the tim_brk2_cmp5 for the timerâs tim_brk2 input. tim_brk2_cmp5 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 06w01 BK2CMP6E (rw): tim_brk2_cmp6 enable This bit enables the tim_brk2_cmp6 for the timerâs tim_brk2 input. tim_brk2_cmp6 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 07w01 BK2CMP7E (rw): tim_brk2_cmp7 enable This bit enables the tim_brk2_cmp7 for the timerâs tim_brk2 input. tim_brk2_cmp7 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 08w01 BK2CMP8E (rw): tim_brk2_cmp8 enable This bit enables the tim_brk2_cmp8 for the timerâs tim_brk2 input. tim_brk2_cmp8 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 09w01 BK2INP (rw): TIMx_BKIN2 input polarity This bit selects the TIMx_BKIN2 alternate function input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 10w01 BK2CMP1P (rw): tim_brk2_cmp1 input polarity This bit selects the tim_brk2_cmp1 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 11w01 BK2CMP2P (rw): tim_brk2_cmp2 input polarity This bit selects the tim_brk2_cmp2 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 12w01 BK2CMP3P (rw): tim_brk2_cmp3 input polarity This bit selects the tim_brk2_cmp3 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 13w01 BK2CMP4P (rw): tim_brk2_cmp4 input polarity This bit selects the tim_brk2_cmp4 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012C64 C   FIELD 16w03 OCRSEL (rw): ocref_clr source selection These bits select the ocref_clr input source. ... Refer to for product specific information. Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40012FDC B  REGISTER TIM1_DCR: TIM1 DMA control register
0x40012FDC C   FIELD 00w05 DBA (rw): DMA base address This 5-bits vector defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ...
0x40012FDC C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit vector defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers. Transfers can be in half-words or in bytes (see example below). ... Example: Let us consider the following transfer: DBL = 7 bytes & DBA = TIM2_CR1. If DBL = 7 bytes and DBA = TIM2_CR1 represents the address of the byte to be transferred, the address of the transfer should be given by the following equation: (TIMx_CR1 address) + DBA + (DMA index), where DMA index = DBL In this example, 7 bytes are added to (TIMx_CR1 address) + DBA, which gives us the address from/to which the data are copied. In this case, the transfer is done to 7 registers starting from the following address: (TIMx_CR1 address) + DBA According to the configuration of the DMA Data Size, several cases may occur: If the DMA Data Size is configured in half-words, 16-bit data are transferred to each of the 7 registers. If the DMA Data Size is configured in bytes, the data are also transferred to 7 registers: the first register contains the first MSB byte, the second register, the first LSB byte and so on. So with the transfer Timer, one also has to specify the size of data transferred by DMA.
0x40012FDC C   FIELD 16w04 DBSS (rw): DMA burst source selection This bitfield defines the interrupt source that triggers the DMA burst transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address). Others: reserved
0x40012FE0 B  REGISTER TIM1_DMAR: TIM1 DMA address for full transfer
0x40012FE0 C   FIELD 00w32 DMAB (rw): DMA register for burst accesses A read or write operation to the DMAR register accesses the register located at the address (TIMx_CR1 address) + (DBA + DMA index) x 4 where TIMx_CR1 address is the address of the control register 1, DBA is the DMA base address configured in TIMx_DCR register, DMA index is automatically controlled by the DMA transfer, and ranges from 0 to DBL (DBL configured in TIMx_DCR).
0x40013000 A PERIPHERAL SPI1
0x40013000 B  REGISTER SPI_CR1: 
0x40013000 C   FIELD 00w01 SPE (rw): serial peripheral enable This bit is set by and cleared by software. When SPE=1, SPI data transfer is enabled, SPI_CFG1 and SPI_CFG2 configuration registers, CRCPOLY, UDRDR, part of SPI_AUTOCR register and IOLOCK bit in the SPI_CR1 register are write protected. They can be changed only when SPE=0. When SPE=0 any SPI operation is stopped and disabled, all the pending requests of the events with enabled interrupt are blocked except the MODF interrupt request (but their pending still propagates the request of the spi_plck clock), the SS output is deactivated at master, the RDY signal keeps not ready status at slave, the internal state machine is reseted, all the FIFOs content is flushed, CRC calculation initialized, receive data register is read zero. SPE is cleared and cannot be set when MODF error flag is active.
0x40013000 C   FIELD 08w01 MASRX (rw): master automatic suspension in Receive mode This bit is set and cleared by software to control continuous SPI transfer in master receiver mode and automatic management in order to avoid overrun condition. When SPI communication is suspended by hardware automatically, it could happen that few bits of next frame are already clocked out due to internal synchronization delay. This is why, the automatic suspension is not quite reliable when size of data drops below 8 bits. In this case, a safe suspension can be achieved by combination with delay inserted between data frames applied when MIDI parameter keeps a non zero value; sum of data size and the interleaved SPI cycles should always produce interval at length of 8 SPI clock periods at minimum. After software clearing of the SUSP bit, the communication resumes and continues by subsequent bits transaction without any next constraint. Prior the SUSP bit is cleared, the user must release the RxFIFO space as much as possible by reading out all the data packets available at RxFIFO based on the RXP flag indication to prevent any subsequent suspension.
0x40013000 C   FIELD 09w01 CSTART (rw): master transfer start This bit can be set by software if SPI is enabled only to start an SPI communication. it is cleared by hardware when end of transfer (EOT) flag is set or when a transaction suspend request is accepted. In SPI mode, the bit is taken into account at master mode only. If transmission is enabled, communication starts or continues only if any data is available in the transmission FIFO.
0x40013000 C   FIELD 10w01 CSUSP (wo): master SUSPend request This bit reads as zero. In Master mode, when this bit is set by software, the CSTART bit is reset at the end of the current frame and SPI communication is suspended. The user has to check SUSP flag to check end of the frame transaction. The Master mode communication must be suspended (using this bit or keeping TXDR empty) before disabling the SPI or going to Low-power mode. After software suspension, SUSP flag has to be cleared and SPI disabled and re-enabled before the next transaction starts.
0x40013000 C   FIELD 11w01 HDDIR (rw): Rx/Tx direction at Half-duplex mode In Half-Duplex configuration the HDDIR bit establishes the Rx/Tx direction of the data transfer. This bit is ignored in Full-Duplex or any Simplex configuration.
0x40013000 C   FIELD 12w01 SSI (rw): internal SS signal input level This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the peripheral SS input internally and the I/O value of the SS pin is ignored.
0x40013000 C   FIELD 13w01 CRC33_17 (rw): 32-bit CRC polynomial configuration
0x40013000 C   FIELD 14w01 RCRCINI (rw): CRC calculation initialization pattern control for receiver
0x40013000 C   FIELD 15w01 TCRCINI (rw): CRC calculation initialization pattern control for transmitter
0x40013000 C   FIELD 16w01 IOLOCK (rw): locking the AF configuration of associated IOs This bit is set by software and cleared by hardware whenever the SPE bit is changed from 1 to 0. When this bit is set, SPI_CFG2 register content cannot be modified. This bit can be set when SPI is disabled only else it is write protected. It is cleared and cannot be set when MODF bit is set.
0x40013004 B  REGISTER SPI_CR2: 
0x40013004 C   FIELD 00w16 TSIZE (rw): number of data at current transfer When these bits are changed by software, the SPI has to be disabled. Endless transaction is initialized when CSTART is set while zero value is stored at TSIZE. TSIZE cannot be set to 0xFFFF respective 0x3FFF value when CRC is enabled. Note: TSIZE[15:10] bits are reserved at limited feature set instances and must be kept at reset value.
0x40013008 B  REGISTER SPI_CFG1: SPI configuration register 1
0x40013008 C   FIELD 00w05 DSIZE (rw): number of bits in at single SPI data frame ..... Note: Maximum data size can be limited up to 16-bits at some instances. At instances with limited set of features, DSIZE2:0] bits are reserved and must be kept at reset state. DSIZE[4:3] bits then control next settings of data size: 00xxx: 8-bits 01xxx: 16-bits 10xxx: 24-bits 11xxx: 32-bits.
0x40013008 C   FIELD 05w04 FTHLV (rw): FIFO threshold level Defines number of data frames at single data packet. Size of the packet should not exceed 1/2 of FIFO space. SPI interface is more efficient if configured packet sizes are aligned with data register access parallelism: If SPI data register is accessed as a 16-bit register and DSIZE ¤ 8 bit, better to select FTHLV = 2, 4, 6. If SPI data register is accessed as a 32-bit register and DSIZE> 8 bit, better to select FTHLV = 2, 4, 6, while if DSIZE ¤ 8bit, better to select FTHLV = 4, 8, 12. Note: FTHLV[3:2] bits are reserved at instances with limited set of features
0x40013008 C   FIELD 09w01 UDRCFG (rw): behavior of slave transmitter at underrun condition For more details see underrun condition.
0x40013008 C   FIELD 14w01 RXDMAEN (rw): Rx DMA stream enable
0x40013008 C   FIELD 15w01 TXDMAEN (rw): Tx DMA stream enable
0x40013008 C   FIELD 16w05 CRCSIZE (rw): length of CRC frame to be transacted and compared Most significant bits are taken into account from polynomial calculation when CRC result is transacted or compared. The length of the polynomial is not affected by this setting. ..... The value must be set equal or multiply of data size (DSIZE[4:0]). Its maximum size corresponds to DSIZE maximum at the instance. Note: The most significant bit at CRCSIZE bit field is reserved at the peripheral instances where data size is limited to 16-bit.
0x40013008 C   FIELD 22w01 CRCEN (rw): hardware CRC computation enable
0x40013008 C   FIELD 28w03 MBR (rw): master baud rate prescaler setting Note: MBR setting is considered at slave working at TI mode, too (see mode).
0x40013008 C   FIELD 31w01 BPASS (rw): bypass of the prescaler at master baud rate clock generator
0x4001300C B  REGISTER SPI_CFG2: SPI configuration register 2
0x4001300C C   FIELD 00w04 MSSI (rw): Master SS Idleness Specifies an extra delay, expressed in number of SPI clock cycle periods, inserted additionally between active edge of SS opening a session and the beginning of the first data frame of the session in Master mode when SSOE is enabled. ... Note: This feature is not supported in TI mode. To include the delay, the SPI must be disabled and re-enabled between sessions.
0x4001300C C   FIELD 04w04 MIDI (rw): master Inter-Data Idleness Specifies minimum time delay (expressed in SPI clock cycles periods) inserted between two consecutive data frames in Master mode. ... Note: This feature is not supported in TI mode.
0x4001300C C   FIELD 13w01 RDIOM (rw): RDY signal input/output management Note: When DSIZE at the SPI_CFG1 register is configured shorter than 8-bit, the RDIOM bit has to be kept at zero.
0x4001300C C   FIELD 14w01 RDIOP (rw): RDY signal input/output polarity
0x4001300C C   FIELD 15w01 IOSWP (rw): swap functionality of MISO and MOSI pins When this bit is set, the function of MISO and MOSI pins alternate functions are inverted. Original MISO pin becomes MOSI and original MOSI pin becomes MISO.
0x4001300C C   FIELD 17w02 COMM (rw): SPI Communication Mode
0x4001300C C   FIELD 19w03 SP (rw): serial protocol others: reserved, must not be used
0x4001300C C   FIELD 22w01 MASTER (rw): SPI Master
0x4001300C C   FIELD 23w01 LSBFRST (rw): data frame format
0x4001300C C   FIELD 24w01 CPHA (rw): clock phase
0x4001300C C   FIELD 25w01 CPOL (rw): clock polarity
0x4001300C C   FIELD 26w01 SSM (rw): software management of SS signal input When master uses hardware SS output (SSM=0 and SSOE=1) the SS signal input is forced to not active state internally to prevent master mode fault error.
0x4001300C C   FIELD 28w01 SSIOP (rw): SS input/output polarity
0x4001300C C   FIELD 29w01 SSOE (rw): SS output enable This bit is taken into account in Master mode only
0x4001300C C   FIELD 30w01 SSOM (rw): SS output management in Master mode This bit is taken into account in Master mode when SSOE is enabled. It allows the SS output to be configured between two consecutive data transfers.
0x4001300C C   FIELD 31w01 AFCNTR (rw): alternate function GPIOs control This bit is taken into account when SPE=0 only When SPI has to be disabled temporary for a specific configuration reason (e.g. CRC reset, CPHA or HDDIR change) setting this bit prevents any glitches on the associated outputs configured at alternate function mode by keeping them forced at state corresponding the current SPI configuration.
0x40013010 B  REGISTER SPI_IER: 
0x40013010 C   FIELD 00w01 RXPIE (rw): RXP interrupt enable
0x40013010 C   FIELD 01w01 TXPIE (rw): TXP interrupt enable TXPIE is set by software and cleared by TXTF flag set event.
0x40013010 C   FIELD 02w01 DXPIE (rw): DXP interrupt enabled DXPIE is set by software and cleared by TXTF flag set event.
0x40013010 C   FIELD 03w01 EOTIE (rw): EOT, SUSP and TXC interrupt enable
0x40013010 C   FIELD 04w01 TXTFIE (rw): TXTFIE interrupt enable
0x40013010 C   FIELD 05w01 UDRIE (rw): UDR interrupt enable
0x40013010 C   FIELD 06w01 OVRIE (rw): OVR interrupt enable
0x40013010 C   FIELD 07w01 CRCEIE (rw): CRC error interrupt enable
0x40013010 C   FIELD 08w01 TIFREIE (rw): TIFRE interrupt enable
0x40013010 C   FIELD 09w01 MODFIE (rw): mode Fault interrupt enable
0x40013014 B  REGISTER SPI_SR: 
0x40013014 C   FIELD 00w01 RXP (ro): Rx-Packet available RXP flag is changed by hardware. It monitors number of overall data currently available at RxFIFO if SPI is enabled. It has to be checked once a data packet is completely read out from RxFIFO.
0x40013014 C   FIELD 01w01 TXP (ro): Tx-Packet space available TXP flag is changed by hardware. It monitors overall space currently available at TxFIFO no matter if SPI is enabled or not. It has to be checked once a complete data packet is stored at TxFIFO.
0x40013014 C   FIELD 02w01 DXP (ro): duplex packet DXP flag is set whenever both TXP and RXP flags are set regardless SPI mode.
0x40013014 C   FIELD 03w01 EOT (ro): end of transfer EOT is set by hardware as soon as a full transfer is complete, that is when TSIZE number of data have been transmitted and/or received on the SPI. EOT is cleared by software write 1 to EOTC bit at SPI_IFCR. EOT flag triggers an interrupt if EOTIE bit is set. If DXP flag is used until TXTF flag is set and DXPIE is cleared, EOT can be used to download the last packets contained into RxFIFO in one-shot. In master, EOT event terminates the data transaction and handles SS output optionally. When CRC is applied, the EOT event is extended over the CRC frame transaction. To restart the internal state machine properly, SPI is strongly suggested to be disabled and re-enabled before next transaction starts despite its setting is not changed.
0x40013014 C   FIELD 04w01 TXTF (ro): transmission transfer filled TXTF is set by hardware as soon as all of the data packets in a transfer have been submitted for transmission by application software or DMA, that is when TSIZE number of data have been pushed into the TxFIFO. This bit is cleared by software write 1 to TXTFC bit at SPI_IFCR TXTF flag triggers an interrupt if TXTFIE bit is set. TXTF setting clears the TXPIE and DXPIE masks so to off-load application software from calculating when to disable TXP and DXP interrupts.
0x40013014 C   FIELD 05w01 UDR (ro): underrun at slave transmission mode This bit is cleared by writing 1 to UDRC bit at SPI_IFCR Note: UDR flag applies to Slave mode only
0x40013014 C   FIELD 06w01 OVR (ro): overrun This bit is cleared by writing 1 to OVRC bit at SPI_IFCR
0x40013014 C   FIELD 07w01 CRCE (ro): CRC error This bit is cleared by writing 1 to CRCEC bit at SPI_IFCR
0x40013014 C   FIELD 08w01 TIFRE (ro): TI frame format error This bit is cleared by writing 1 to TIFREC bit at SPI_IFCR
0x40013014 C   FIELD 09w01 MODF (ro): mode fault This bit is cleared by writing 1 to MODFC bit at SPI_IFCR
0x40013014 C   FIELD 11w01 SUSP (ro): suspension status In Master mode, SUSP is set by hardware either as soon as the current frame is completed after CSUSP request is done or at master automatic suspend receive mode (MASRX bit is set at SPI_CR1 register) on RxFIFO full condition. SUSP generates an interrupt when EOTIE is set. This bit has to be cleared prior SPI is disabled by writing 1 to SUSPC bit at SPI_IFCR.
0x40013014 C   FIELD 12w01 TXC (ro): TxFIFO transmission complete The flag behavior depends on TSIZE setting. When TSIZE=0 the TXC is changed by hardware exclusively and it raises each time the TxFIFO becomes empty and there is no activity on the bus. If TSIZE <>0 there is no specific reason to monitor TXC as it just copies the EOT flag value including its software clearing. The TXC generates an interrupt when EOTIE is set.
0x40013014 C   FIELD 13w02 RXPLVL (ro): RxFIFO packing level When RXWNE=0 and data size is set up to 16-bit, the value gives number of remaining data frames persisting at RxFIFO. Note: (*): Optional value when data size is set up to 8-bit only. When data size is greater than 16-bit, these bits are always read as 00. In that consequence, the single data frame received at the FIFO cannot be detected neither by RWNE nor by RXPLVL bits if data size is set from 17 to 24 bits. The user then must apply other methods like TSIZE>0 or FTHLV=0.
0x40013014 C   FIELD 15w01 RXWNE (ro): RxFIFO word not empty Note: This bit value does not depend on DSIZE setting and keeps together with RXPLVL[1:0] information about RxFIFO occupancy by residual data.
0x40013014 C   FIELD 16w16 CTSIZE (ro): number of data frames remaining in current TSIZE session The value is not quite reliable when traffic is ongoing on bus or during autonomous operation at low-power mode. Note: CTSIZE[15:0] bits are not available at instances with limited set of features
0x40013018 B  REGISTER SPI_IFCR: 
0x40013018 C   FIELD 03w01 EOTC (wo): end of transfer flag clear Writing a 1 into this bit clears EOT flag in the SPI_SR register
0x40013018 C   FIELD 04w01 TXTFC (wo): transmission transfer filled flag clear Writing a 1 into this bit clears TXTF flag in the SPI_SR register
0x40013018 C   FIELD 05w01 UDRC (wo): underrun flag clear Writing a 1 into this bit clears UDR flag in the SPI_SR register
0x40013018 C   FIELD 06w01 OVRC (wo): overrun flag clear Writing a 1 into this bit clears OVR flag in the SPI_SR register
0x40013018 C   FIELD 07w01 CRCEC (wo): CRC error flag clear Writing a 1 into this bit clears CRCE flag in the SPI_SR register
0x40013018 C   FIELD 08w01 TIFREC (wo): TI frame format error flag clear Writing a 1 into this bit clears TIFRE flag in the SPI_SR register
0x40013018 C   FIELD 09w01 MODFC (wo): mode fault flag clear Writing a 1 into this bit clears MODF flag in the SPI_SR register
0x40013018 C   FIELD 11w01 SUSPC (wo): SUSPend flag clear Writing a 1 into this bit clears SUSP flag in the SPI_SR register
0x4001301C B  REGISTER SPI_AUTOCR: 
0x4001301C C   FIELD 16w04 TRIGSEL (rw): trigger selection (refer ). ... Note: these bits can be written only when SPE = 0.
0x4001301C C   FIELD 20w01 TRIGPOL (rw): trigger polarity Note: This bit can be written only when SPE = 0.
0x4001301C C   FIELD 21w01 TRIGEN (rw): trigger of CSTART control enable Note: if user can't prevent trigger event during write, the TRIGEN has to be changed when SPI is disabled
0x40013020 B  REGISTER SPI_TXDR: 
0x40013020 C   FIELD 00w32 TXDR (wo): transmit data register The register serves as an interface with TxFIFO. A write to it accesses TxFIFO. Note: data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is written by single access. halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be written by single access. word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be written by single access. Write access of this register less than the configured data size is forbidden.
0x40013030 B  REGISTER SPI_RXDR: 
0x40013030 C   FIELD 00w32 RXDR (ro): receive data register The register serves as an interface with RxFIFO. When it is read, RxFIFO is accessed. Note: data is always right-aligned. Unused bits are read as zero when the register is read. Writing to the register is ignored. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is read by single access halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be read by single access word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be read by single access. Read access of this register less than the configured data size is forbidden.
0x40013040 B  REGISTER SPI_CRCPOLY: SPI polynomial register
0x40013040 C   FIELD 00w32 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The default 9-bit polynomial setting 0x107 corresponds to default 8-bit setting of DSIZE. It is compatible with setting 0x07 used at some other ST products with fixed length of the polynomial string where the most significant bit of the string is always kept hidden. Length of the polynomial is given by the most significant bit of the value stored at this register. It has to be set greater than DSIZE. CRC33_17 bit has to be set additionally with CRCPOLY register when DSIZE is configured to maximum 32-bit or 16-bit size and CRC is enabled (to keep polynomial length grater than data size). Note: CRCPOLY[31:16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x40013044 B  REGISTER SPI_TXCRC: 
0x40013044 C   FIELD 00w32 TXCRC (ro): CRC register for transmitter When CRC calculation is enabled, the TXCRC[31:0] bits contain the computed CRC value of the subsequently transmitted bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. Note: TXCRC[31-16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x40013048 B  REGISTER SPI_RXCRC: 
0x40013048 C   FIELD 00w32 RXCRC (ro): CRC register for receiver When CRC calculation is enabled, the RXCRC[31:0] bits contain the computed CRC value of the subsequently received bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. RXCRC[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x4001304C B  REGISTER SPI_UDRDR: SPI underrun data register
0x4001304C C   FIELD 00w32 UDRDR (rw): data at slave underrun condition The register is taken into account in Slave mode and at underrun condition only. The number of bits considered depends on DSIZE bit settings of the SPI_CFG1 register. Underrun condition handling depends on setting UDRCFG bit at SPI_CFG1 register. Note: UDRDR[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constraint when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x40013400 A PERIPHERAL TIM8
0x40013400 B  REGISTER TIM1_CR1: TIM1 control register 1
0x40013400 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock, gated mode and encoder mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x40013400 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x40013400 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x40013400 C   FIELD 03w01 OPM (rw): One pulse mode
0x40013400 C   FIELD 04w01 DIR (rw): Direction Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder mode.
0x40013400 C   FIELD 05w02 CMS (rw): Center-aligned mode selection Note: It is not allowed to switch from edge-aligned mode to center-aligned mode as long as the counter is enabled (CEN=1)
0x40013400 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x40013400 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (tim_ker_ck) frequency and the dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters (tim_etr_in, tim_tix),
0x40013400 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x40013400 C   FIELD 12w01 DITHEN (rw): Dithering enable Note: The DITHEN bit can only be modified when CEN bit is reset.
0x40013404 B  REGISTER TIM1_CR2 (rw): control register 2
0x40013404 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x40013404 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x40013404 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40013404 C   FIELD 04w03 MMS0_2: Master mode selection
0x40013404 C   FIELD 07w01 TI1S: TI1 selection
0x40013404 C   FIELD 08w01 OIS1: Output Idle state 1
0x40013404 C   FIELD 09w01 OIS1N: Output Idle state 1
0x40013404 C   FIELD 10w01 OIS2: Output Idle state 2
0x40013404 C   FIELD 11w01 OIS2N: Output Idle state 2
0x40013404 C   FIELD 12w01 OIS3: Output Idle state 3
0x40013404 C   FIELD 13w01 OIS3N: Output Idle state 3
0x40013404 C   FIELD 14w01 OIS4: Output Idle state 4
0x40013404 C   FIELD 15w01 OIS4N: Output Idle state 4 (OC5 output)
0x40013404 C   FIELD 16w01 OIS5: Output Idle state 5
0x40013404 C   FIELD 18w01 OIS6: Output Idle state 6
0x40013404 C   FIELD 20w04 MMS2: Master mode selection 2
0x40013404 C   FIELD 25w01 MMS_3: Master mode selection 2
0x40013408 B  REGISTER TIM1_SMCR: TIM1 slave mode control register
0x40013408 C   FIELD 00w03 SMS1 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (tim_trgi) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if tim_ti1f_ed is selected as the trigger input (TS=00100). Indeed, tim_ti1f_ed outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the tim_trgo or the tim_trgo2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40013408 C   FIELD 03w01 OCCS (rw): OCREF clear selection This bit is used to select the OCREF clear source.
0x40013408 C   FIELD 04w03 TS1 (rw): Trigger selection - bit 4:3 Refer to TS[2:0] description - bits 6:4 null Trigger selection This bitfield is combined with TS[4:3] bits. This bit-field selects the trigger input to be used to synchronize the counter. others: Reserved See for more details on tim_itrx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40013408 C   FIELD 07w01 MSM (rw): Master/slave mode
0x40013408 C   FIELD 08w04 ETF (rw): External trigger filter This bit-field then defines the frequency used to sample tim_etrp signal and the length of the digital filter applied to tim_etrp. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40013408 C   FIELD 12w02 ETPS (rw): External trigger prescaler External trigger signal tim_etrp frequency must be at most 1/4 of TIMxCLK frequency. A prescaler can be enabled to reduce tim_etrp frequency. It is useful when inputting fast external clocks on tim_etr_in.
0x40013408 C   FIELD 14w01 ECE (rw): External clock enable This bit enables External clock mode 2. Note: Setting the ECE bit has the same effect as selecting external clock mode 1 with tim_trgi connected to tim_etrf (SMS=111 and TS=00111). It is possible to simultaneously use external clock mode 2 with the following slave modes: reset mode, gated mode and trigger mode. Nevertheless, tim_trgi must not be connected to tim_etrf in this case (TS bits must not be 00111). If external clock mode 1 and external clock mode 2 are enabled at the same time, the external clock input is tim_etrf.
0x40013408 C   FIELD 15w01 ETP (rw): External trigger polarity This bit selects whether tim_etr_in or tim_etr_in is used for trigger operations
0x40013408 C   FIELD 16w01 SMS2 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (tim_trgi) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if tim_ti1f_ed is selected as the trigger input (TS=00100). Indeed, tim_ti1f_ed outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the tim_trgo or the tim_trgo2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x40013408 C   FIELD 20w02 TS2 (rw): Trigger selection - bit 4:3 Refer to TS[2:0] description - bits 6:4 null Trigger selection This bitfield is combined with TS[4:3] bits. This bit-field selects the trigger input to be used to synchronize the counter. others: Reserved See for more details on tim_itrx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x40013408 C   FIELD 24w01 SMSPE (rw): SMS preload enable This bit selects whether the SMS[3:0] bitfield is preloaded
0x40013408 C   FIELD 25w01 SMSPS (rw): SMS preload source This bit selects whether the events that triggers the SMS[3:0] bitfield transfer from preload to active
0x4001340C B  REGISTER TIM1_DIER: TIM1 DMA/interrupt enable register
0x4001340C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x4001340C C   FIELD 01w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x4001340C C   FIELD 02w01 CC2IE (rw): Capture/compare 2 interrupt enable
0x4001340C C   FIELD 03w01 CC3IE (rw): Capture/compare 3 interrupt enable
0x4001340C C   FIELD 04w01 CC4IE (rw): Capture/compare 4 interrupt enable
0x4001340C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x4001340C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x4001340C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x4001340C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x4001340C C   FIELD 09w01 CC1DE (rw): Capture/compare 1 DMA request enable
0x4001340C C   FIELD 10w01 CC2DE (rw): Capture/compare 2 DMA request enable
0x4001340C C   FIELD 11w01 CC3DE (rw): Capture/compare 3 DMA request enable
0x4001340C C   FIELD 12w01 CC4DE (rw): Capture/compare 4 DMA request enable
0x4001340C C   FIELD 13w01 COMDE (rw): COM DMA request enable
0x4001340C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x4001340C C   FIELD 20w01 IDXIE (rw): Index interrupt enable
0x4001340C C   FIELD 21w01 DIRIE (rw): Direction change interrupt enable
0x4001340C C   FIELD 22w01 IERRIE (rw): Index error interrupt enable
0x4001340C C   FIELD 23w01 TERRIE (rw): Transition error interrupt enable
0x40013410 B  REGISTER TIM1_SR: TIM1 status register
0x40013410 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to control register (TIMx_SMCR)(x = 1, 8)), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x40013410 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in downcounting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x40013410 C   FIELD 02w01 CC2IF (rw): Capture/compare 2 interrupt flag Refer to CC1IF description
0x40013410 C   FIELD 03w01 CC3IF (rw): Capture/compare 3 interrupt flag Refer to CC1IF description
0x40013410 C   FIELD 04w01 CC4IF (rw): Capture/compare 4 interrupt flag Refer to CC1IF description
0x40013410 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on COM event (when capture/compare Control bits - CCxE, CCxNE, OCxM - have been updated). It is cleared by software.
0x40013410 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on tim_trgi input when the slave mode controller is enabled in all modes but gated mode. It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x40013410 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x40013410 C   FIELD 08w01 B2IF (rw): Break 2 interrupt flag This flag is set by hardware as soon as the break 2 input goes active. It can be cleared by software if the break 2 input is not active.
0x40013410 C   FIELD 09w01 CC1OF (rw): Capture/compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x40013410 C   FIELD 10w01 CC2OF (rw): Capture/compare 2 overcapture flag Refer to CC1OF description
0x40013410 C   FIELD 11w01 CC3OF (rw): Capture/compare 3 overcapture flag Refer to CC1OF description
0x40013410 C   FIELD 12w01 CC4OF (rw): Capture/compare 4 overcapture flag Refer to CC1OF description
0x40013410 C   FIELD 13w01 SBIF (rw): System break interrupt flag This flag is set by hardware as soon as the system break input goes active. It can be cleared by software if the system break input is not active. This flag must be reset to re-start PWM operation.
0x40013410 C   FIELD 16w01 CC5IF (rw): Compare 5 interrupt flag Refer to CC1IF description Note: Channel 5 can only be configured as output.
0x40013410 C   FIELD 17w01 CC6IF (rw): Compare 6 interrupt flag Refer to CC1IF description Note: Channel 6 can only be configured as output.
0x40013410 C   FIELD 20w01 IDXF (rw): Index interrupt flag This flag is set by hardware when an index event is detected. It is cleared by software by writing it to '0â.
0x40013410 C   FIELD 21w01 DIRF (rw): Direction change interrupt flag This flag is set by hardware when the direction changes in encoder mode (DIR bit value in TIMx_CR is changing). It is cleared by software by writing it to '0â.
0x40013410 C   FIELD 22w01 IERRF (rw): Index error interrupt flag This flag is set by hardware when an index error is detected. It is cleared by software by writing it to '0â.
0x40013410 C   FIELD 23w01 TERRF (rw): Transition error interrupt flag This flag is set by hardware when a transition error is detected in encoder mode. It is cleared by software by writing it to '0â.
0x40013414 B  REGISTER TIM1_EGR: TIM1 event generation register
0x40013414 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x40013414 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x40013414 C   FIELD 02w01 CC2G (wo): Capture/compare 2 generation Refer to CC1G description
0x40013414 C   FIELD 03w01 CC3G (wo): Capture/compare 3 generation Refer to CC1G description
0x40013414 C   FIELD 04w01 CC4G (wo): Capture/compare 4 generation Refer to CC1G description
0x40013414 C   FIELD 05w01 COMG (wo): Capture/compare control update generation This bit can be set by software, it is automatically cleared by hardware Note: This bit acts only on channels having a complementary output.
0x40013414 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40013414 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40013414 C   FIELD 08w01 B2G (wo): Break 2 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x40013418 B  REGISTER TIM1_CCMR1_Input: TIM1 capture/compare mode register 1 [alternate]
0x40013418 B  REGISTER TIM1_CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x40013418 C   FIELD 00w02 CC1S (rw): Capture/compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x40013418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40013418 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x40013418 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (tim_ic1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x40013418 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x40013418 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x40013418 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample tim_ti1 input and the length of the digital filter applied to tim_ti1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x40013418 C   FIELD 07w01 OC1CE: Output Compare 1 clear enable
0x40013418 C   FIELD 08w02 CC2S (rw): Capture/compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = '0â in TIMx_CCER).
0x40013418 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x40013418 C   FIELD 10w01 OC2FE: Output Compare 2 fast enable
0x40013418 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler
0x40013418 C   FIELD 11w01 OC2PE: Output Compare 2 preload enable
0x40013418 C   FIELD 12w03 OC2M: Output Compare 2 mode
0x40013418 C   FIELD 12w04 IC2F (rw): Input capture 2 filter
0x40013418 C   FIELD 15w01 OC2CE: Output Compare 2 clear enable
0x40013418 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x40013418 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x4001341C B  REGISTER TIM1_CCMR2_Input: TIM1 capture/compare mode register 2 [alternate]
0x4001341C B  REGISTER TIM1_CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x4001341C C   FIELD 00w02 CC3S (rw): Capture/compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = '0â in TIMx_CCER).
0x4001341C C   FIELD 00w02 CC3S_1_0: Capture/Compare 3 selection
0x4001341C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x4001341C C   FIELD 02w02 IC3PSC (rw): Input capture 3 prescaler
0x4001341C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x4001341C C   FIELD 04w03 OC3M_2_0: Output compare 3 mode
0x4001341C C   FIELD 04w04 IC3F (rw): Input capture 3 filter
0x4001341C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x4001341C C   FIELD 08w02 CC4S (rw): Capture/compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = '0â in TIMx_CCER).
0x4001341C C   FIELD 08w02 CC4S_1_0: Capture/Compare 4 selection
0x4001341C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x4001341C C   FIELD 10w02 IC4PSC (rw): Input capture 4 prescaler
0x4001341C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x4001341C C   FIELD 12w03 OC4M_3_0: Output compare 4 mode
0x4001341C C   FIELD 12w04 IC4F (rw): Input capture 4 filter
0x4001341C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x4001341C C   FIELD 16w01 OC3M_3: Output compare 3 mode
0x4001341C C   FIELD 24w01 OC4M_bit3: Output Compare 4 mode - bit 3
0x40013420 B  REGISTER TIM1_CCER: TIM1 capture/compare enable register
0x40013420 C   FIELD 00w01 CC1E (rw): Capture/compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to for details. Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1E active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40013420 C   FIELD 01w01 CC1P (rw): Capture/compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: the configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40013420 C   FIELD 02w01 CC1NE (rw): Capture/compare 1 complementary output enable Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NE active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40013420 C   FIELD 03w01 CC1NP (rw): Capture/compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of tim_ti1fp1 and tim_ti2fp1. Refer to CC1P description. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (channel configured as output). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x40013420 C   FIELD 04w01 CC2E (rw): Capture/compare 2 output enable Refer to CC1E description
0x40013420 C   FIELD 05w01 CC2P (rw): Capture/compare 2 output polarity Refer to CC1P description
0x40013420 C   FIELD 06w01 CC2NE (rw): Capture/compare 2 complementary output enable Refer to CC1NE description
0x40013420 C   FIELD 07w01 CC2NP (rw): Capture/compare 2 complementary output polarity Refer to CC1NP description
0x40013420 C   FIELD 08w01 CC3E (rw): Capture/compare 3 output enable Refer to CC1E description
0x40013420 C   FIELD 09w01 CC3P (rw): Capture/compare 3 output polarity Refer to CC1P description
0x40013420 C   FIELD 10w01 CC3NE (rw): Capture/compare 3 complementary output enable Refer to CC1NE description
0x40013420 C   FIELD 11w01 CC3NP (rw): Capture/compare 3 complementary output polarity Refer to CC1NP description
0x40013420 C   FIELD 12w01 CC4E (rw): Capture/compare 4 output enable Refer to CC1E description
0x40013420 C   FIELD 13w01 CC4P (rw): Capture/compare 4 output polarity Refer to CC1P description
0x40013420 C   FIELD 14w01 CC4NE (rw): Capture/compare 4 complementary output enable Refer to CC1NE description
0x40013420 C   FIELD 15w01 CC4NP (rw): Capture/compare 4 complementary output polarity Refer to CC1NP description
0x40013420 C   FIELD 16w01 CC5E (rw): Capture/compare 5 output enable Refer to CC1E description
0x40013420 C   FIELD 17w01 CC5P (rw): Capture/compare 5 output polarity Refer to CC1P description
0x40013420 C   FIELD 20w01 CC6E (rw): Capture/compare 6 output enable Refer to CC1E description
0x40013420 C   FIELD 21w01 CC6P (rw): Capture/compare 6 output polarity Refer to CC1P description
0x40013424 B  REGISTER TIM1_CNT: TIM1 counter
0x40013424 C   FIELD 00w16 CNT (rw): Counter value Non-dithering mode (DITHEN = 0) The register holds the counter value. Dithering mode (DITHEN = 1) The register only holds the non-dithered part in CNT[15:0]. The fractional part is not available.
0x40013424 C   FIELD 31w01 UIFCPY (ro): UIF copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in the TIMxCR1 is reset, bit 31 is reserved and read at 0.
0x40013428 B  REGISTER TIM1_PSC: TIM1 prescaler
0x40013428 C   FIELD 00w16 PSC (rw): Prescaler value The counter clock frequency (ftim_cnt_ck) is equal to ftim_psc_ck / (PSC[15:0] + 1). PSC contains the value to be loaded in the active prescaler register at each update event (including when the counter is cleared through UG bit of TIMx_EGR register or through trigger controller when configured in âreset modeâ).
0x4001342C B  REGISTER TIM1_ARR: TIM1 auto-reload register
0x4001342C C   FIELD 00w20 ARR (rw): Auto-reload value ARR is the value to be loaded in the actual auto-reload register. Refer to the for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null. Non-dithering mode (DITHEN = 0) The register holds the auto-reload value. Dithering mode (DITHEN = 1) The register holds the integer part in ARR[19:4]. The ARR[3:0] bitfield contains the dithered part.
0x40013430 B  REGISTER TIM1_RCR: TIM1 repetition counter register
0x40013430 C   FIELD 00w16 REP (rw): Repetition counter reload value This bitfield defines the update rate of the compare registers (i.e. periodic transfers from preload to active registers) when preload registers are enable. It also defines the update interrupt generation rate, if this interrupt is enable. When the repetition down-counter reaches zero, an update event is generated and it restarts counting from REP value. As the repetition counter is reloaded with REP value only at the repetition update event UEV, any write to the TIMx_RCR register is not taken in account until the next repetition update event. It means in PWM mode (REP+1) corresponds to: the number of PWM periods in edge-aligned mode the number of half PWM period in center-aligned mode.
0x40013434 B  REGISTER TIM1_CCR1: TIM1 capture/compare register 1
0x40013434 C   FIELD 00w20 CCR1 (rw): Capture/compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC1PE). Else the preload value is copied in the active capture/compare 1 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc1 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR1[15:0]. The CCR1[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR1[19:4]. The CCR1[3:0] bitfield contains the dithered part. If channel CC1 is configured as input: CR1 is the counter value transferred by the last input capture 1 event (tim_ic1). The TIMx_CCR1 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR1[15:0]. The CCR1[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR1[19:4]. The CCR1[3:0] bits are reset.
0x40013438 B  REGISTER TIM1_CCR2: TIM1 capture/compare register 2
0x40013438 C   FIELD 00w20 CCR2 (rw): Capture/compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC2PE). Else the preload value is copied in the active capture/compare 2 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc2 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR2[15:0]. The CCR2[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR2[19:4]. The CCR2[3:0] bitfield contains the dithered part. If channel CC2 is configured as input: CCR2 is the counter value transferred by the last input capture 2 event (tim_ic2). The TIMx_CCR2 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR2[15:0]. The CCR2[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR2[19:4]. The CCR2[3:0] bits are reset.
0x4001343C B  REGISTER TIM1_CCR3: TIM1 capture/compare register 3
0x4001343C C   FIELD 00w20 CCR3 (rw): Capture/compare value If channel CC3 is configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC3PE). Else the preload value is copied in the active capture/compare 3 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc3 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR3[15:0]. The CCR3[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR3[19:4]. The CCR3[3:0] bitfield contains the dithered part. If channel CC3 is configured as input: CCR3 is the counter value transferred by the last input capture 3 event (tim_ic3). The TIMx_CCR3 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR3[15:0]. The CCR3[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR3[19:4]. The CCR3[3:0] bits are reset.
0x40013440 B  REGISTER TIM1_CCR4: TIM1 capture/compare register 4
0x40013440 C   FIELD 00w20 CCR4 (rw): Capture/compare value If channel CC4 is configured as output: CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC4PE). Else the preload value is copied in the active capture/compare 4 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on tim_oc4 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR4[15:0]. The CCR4[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR4[19:4]. The CCR4[3:0] bitfield contains the dithered part. If channel CC4 is configured as input: CCR4 is the counter value transferred by the last input capture 4 event (tim_ic4). The TIMx_CCR4 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR4[15:0]. The CCR4[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR4[19:4]. The CCR4[3:0] bits are reset.
0x40013444 B  REGISTER TIM1_BDTR: TIM1 break and dead-time register
0x40013444 C   FIELD 00w08 DTG (rw): Dead-time generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration. DTG[7:5]=0xx => DT=DTG[7:0]x tdtg with tdtg=tDTS. DTG[7:5]=10x => DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS. DTG[7:5]=110 => DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS. DTG[7:5]=111 => DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS. Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 us to 31750 ns by 250 ns steps, 32 us to 63us by 1 us steps, 64 us to 126 us by 2 us steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013444 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x40013444 C   FIELD 10w01 OSSI (rw): Off-state selection for idle mode This bit is used when MOE=0 due to a break event or by a software write, on channels configured as outputs. See OC/OCN enable description for more details (enable register (TIMx_CCER)(x = 1, 8)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013444 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels having a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (enable register (TIMx_CCER)(x = 1, 8)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013444 C   FIELD 12w01 BKE (rw): Break enable This bit enables the complete break protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40013444 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40013444 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013444 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as one of the break inputs is active (tim_brk or tim_brk2). It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. In response to a break event or if MOE is written to 0: OC and OCN outputs are disabled or forced to idle state depending on the OSSI bit. enable register (TIMx_CCER)(x = 1, 8)).
0x40013444 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample tim_brk input and the length of the digital filter applied to tim_brk. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013444 C   FIELD 20w04 BK2F (rw): Break 2 filter This bit-field defines the frequency used to sample tim_brk2 input and the length of the digital filter applied to tim_brk2. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013444 C   FIELD 24w01 BK2E (rw): Break 2 enable This bit enables the complete break 2 protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: The BRKIN2 must only be used with OSSR = OSSI = 1. Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40013444 C   FIELD 25w01 BK2P (rw): Break 2 polarity Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40013444 C   FIELD 26w01 BKDSRM (rw): Break disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40013444 C   FIELD 27w01 BK2DSRM (rw): Break2 disarm Refer to BKDSRM description
0x40013444 C   FIELD 28w01 BKBID (rw): Break bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x40013444 C   FIELD 29w01 BK2BID (rw): Break2 bidirectional Refer to BKBID description
0x40013448 B  REGISTER TIM1_CCR5: TIM1 capture/compare register 5
0x40013448 C   FIELD 00w20 CCR5 (rw): Capture/compare 5 value CCR5 is the value to be loaded in the actual capture/compare 5 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC5PE). Else the preload value is copied in the active capture/compare 5 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc5 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR5[15:0]. The CCR5[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR5[19:4]. The CCR5[3:0] bitfield contains the dithered part.
0x40013448 C   FIELD 29w01 GC5C1 (rw): Group channel 5 and channel 1 Distortion on channel 1 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x40013448 C   FIELD 30w01 GC5C2 (rw): Group channel 5 and channel 2 Distortion on channel 2 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x40013448 C   FIELD 31w01 GC5C3 (rw): Group channel 5 and channel 3 Distortion on channel 3 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR2). Note: it is also possible to apply this distortion on combined PWM signals.
0x4001344C B  REGISTER TIM1_CCR6: TIM1 capture/compare register 6
0x4001344C C   FIELD 00w20 CCR6 (rw): Capture/compare 6 value CCR6 is the value to be loaded in the actual capture/compare 6 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC6PE). Else the preload value is copied in the active capture/compare 6 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc6 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR6[15:0]. The CCR6[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR6[19:4]. The CCR6[3:0] bitfield contains the dithered part.
0x40013450 B  REGISTER TIM1_CCMR3: TIM1 capture/compare mode register 3
0x40013450 C   FIELD 02w01 OC5FE (rw): Output compare 5 fast enable
0x40013450 C   FIELD 03w01 OC5PE (rw): Output compare 5 preload enable
0x40013450 C   FIELD 04w03 OC5M1 (rw): Output compare 5 mode
0x40013450 C   FIELD 07w01 OC5CE (rw): Output compare 5 clear enable
0x40013450 C   FIELD 10w01 OC6FE (rw): Output compare 6 fast enable
0x40013450 C   FIELD 11w01 OC6PE (rw): Output compare 6 preload enable
0x40013450 C   FIELD 12w03 OC6M1 (rw): Output compare 6 mode
0x40013450 C   FIELD 15w01 OC6CE (rw): Output compare 6 clear enable
0x40013450 C   FIELD 16w01 OC5M2 (rw): Output compare 5 mode
0x40013450 C   FIELD 24w01 OC6M2 (rw): Output compare 6 mode
0x40013454 B  REGISTER TIM1_DTR2: TIM1 timer deadtime register 2
0x40013454 C   FIELD 00w08 DTGF (rw): Dead-time falling edge generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs, on the falling edge. DTGF[7:5]=0xx => DTF=DTGF[7:0]x tdtg with tdtg=tDTS. DTGF[7:5]=10x => DTF=(64+DTGF[5:0])xtdtg with Tdtg=2xtDTS. DTGF[7:5]=110 => DTF=(32+DTGF[4:0])xtdtg with Tdtg=8xtDTS. DTGF[7:5]=111 => DTF=(32+DTGF[4:0])xtdtg with Tdtg=16xtDTS. Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 us to 31750 ns by 250 ns steps, 32 us to 63us by 1 us steps, 64 us to 126 us by 2 us steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013454 C   FIELD 16w01 DTAE (rw): Deadtime asymmetric enable Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013454 C   FIELD 17w01 DTPE (rw): Deadtime preload enable Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013458 B  REGISTER TIM1_ECR: TIM1 timer encoder control register
0x40013458 C   FIELD 00w01 IE (rw): Index enable This bit indicates if the Index event resets the counter.
0x40013458 C   FIELD 01w02 IDIR (rw): Index direction This bit indicates in which direction the Index event resets the counter. Note: The IDR[1:0] bitfield must be written when IE bit is reset (index disabled).
0x40013458 C   FIELD 03w02 IBLK (rw): Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x40013458 C   FIELD 05w01 FIDX (rw): First index This bit indicates if the first index only is taken into account
0x40013458 C   FIELD 06w02 IPOS (rw): Index positioning In quadrature encoder mode (SMS[3:0] = 0001, 0010, 0011, 1110, 1111), this bit indicates in which AB input configuration the Index event resets the counter. In directional clock mode or clock plus direction mode (SMS[3:0] = 1010, 1011, 1100, 1101), these bits indicates on which level the Index event resets the counter. In bidirectional clock mode, this applies for both clock inputs. x0: Index resets the counter when clock is 0 x1: Index resets the counter when clock is 1 Note: IPOS[1]âbit is not significant
0x40013458 C   FIELD 16w08 PW (rw): Pulse width This bitfield defines the pulse duration, as following: tPW = PW[7:0] x tPWG
0x40013458 C   FIELD 24w03 PWPRSC (rw): Pulse width prescaler This bitfield sets the clock prescaler for the pulse generator, as following: tPWG = (2(PWPRSC[2:0])) x ttim_ker_ck
0x4001345C B  REGISTER TIM1_TISEL: TIM1 timer input selection register
0x4001345C C   FIELD 00w04 TI1SEL (rw): Selects tim_ti1[0..15] input ... Refer to for interconnects list.
0x4001345C C   FIELD 08w04 TI2SEL (rw): Selects tim_ti2[0..15] input ... Refer to for interconnects list.
0x4001345C C   FIELD 16w04 TI3SEL (rw): Selects tim_ti3[0..15] input ... Refer to for interconnects list.
0x4001345C C   FIELD 24w04 TI4SEL (rw): Selects tim_ti4[0..15] input ... Refer to for interconnects list.
0x40013460 B  REGISTER TIM1_AF1: TIM1 alternate function option register 1
0x40013460 C   FIELD 00w01 BKINE (rw): TIMx_BKIN input enable This bit enables the TIMx_BKIN alternate function input for the timerâs tim_brk input. TIMx_BKIN input is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 01w01 BKCMP1E (rw): tim_brk_cmp1 enable This bit enables the tim_brk_cmp1 for the timerâs tim_brk input. tim_brk_cmp1 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 02w01 BKCMP2E (rw): tim_brk_cmp2 enable This bit enables the tim_brk_cmp2 for the timerâs tim_brk input. tim_brk_cmp2 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 03w01 BKCMP3E (rw): tim_brk_cmp3 enable This bit enables the tim_brk_cmp3 for the timerâs tim_brk input. tim_brk_cmp3 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 04w01 BKCMP4E (rw): tim_brk_cmp4 enable This bit enables the tim_brk_cmp4 for the timerâs tim_brk input. tim_brk_cmp4 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 05w01 BKCMP5E (rw): tim_brk_cmp5 enable This bit enables the tim_brk_cmp5 for the timerâs tim_brk input. tim_brk_cmp5 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 06w01 BKCMP6E (rw): tim_brk_cmp6 enable This bit enables the tim_brk_cmp6 for the timerâs tim_brk input. tim_brk_cmp6 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 07w01 BKCMP7E (rw): tim_brk_cmp7 enable This bit enables the tim_brk_cmp7 for the timerâs tim_brk input. tim_brk_cmp7 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 08w01 BKCMP8E (rw): tim_brk_cmp8 enable This bit enables the tim_brk_cmp8 for the timerâs tim_brk input. tim_brk_cmp8 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 09w01 BKINP (rw): TIMx_BKIN input polarity This bit selects the TIMx_BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 10w01 BKCMP1P (rw): tim_brk_cmp1 input polarity This bit selects the tim_brk_cmp1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 11w01 BKCMP2P (rw): tim_brk_cmp2 input polarity This bit selects the tim_brk_cmp2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 12w01 BKCMP3P (rw): tim_brk_cmp3 input polarity This bit selects the tim_brk_cmp3 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 13w01 BKCMP4P (rw): tim_brk_cmp4 input polarity This bit selects the tim_brk_cmp4 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013460 C   FIELD 14w04 ETRSEL (rw): etr_in source selection These bits select the etr_in input source. ... Refer to for product specific implementation. Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 B  REGISTER TIM1_AF2: TIM1 alternate function register 2
0x40013464 C   FIELD 00w01 BK2INE (rw): TIMx_BKIN2 input enable This bit enables the TIMx_BKIN2 alternate function input for the timerâs tim_brk2 input. TIMx_BKIN2 input is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 01w01 BK2CMP1E (rw): tim_brk2_cmp1 enable This bit enables the tim_brk2_cmp1 for the timerâs tim_brk2 input. tim_brk2_cmp1 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 02w01 BK2CMP2E (rw): tim_brk2_cmp2 enable This bit enables the tim_brk2_cmp2 for the timerâs tim_brk2 input. tim_brk2_cmp2 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 03w01 BK2CMP3E (rw): tim_brk2_cmp3 enable This bit enables the tim_brk2_cmp3 for the timerâs tim_brk2 input. tim_brk2_cmp3 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 04w01 BK2CMP4E (rw): tim_brk2_cmp4 enable This bit enables the tim_brk2_cmp4 for the timerâs tim_brk2 input. tim_brk2_cmp4 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 05w01 BK2CMP5E (rw): tim_brk2_cmp5 enable This bit enables the tim_brk2_cmp5 for the timerâs tim_brk2 input. tim_brk2_cmp5 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 06w01 BK2CMP6E (rw): tim_brk2_cmp6 enable This bit enables the tim_brk2_cmp6 for the timerâs tim_brk2 input. tim_brk2_cmp6 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 07w01 BK2CMP7E (rw): tim_brk2_cmp7 enable This bit enables the tim_brk2_cmp7 for the timerâs tim_brk2 input. tim_brk2_cmp7 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 08w01 BK2CMP8E (rw): tim_brk2_cmp8 enable This bit enables the tim_brk2_cmp8 for the timerâs tim_brk2 input. tim_brk2_cmp8 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 09w01 BK2INP (rw): TIMx_BKIN2 input polarity This bit selects the TIMx_BKIN2 alternate function input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 10w01 BK2CMP1P (rw): tim_brk2_cmp1 input polarity This bit selects the tim_brk2_cmp1 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 11w01 BK2CMP2P (rw): tim_brk2_cmp2 input polarity This bit selects the tim_brk2_cmp2 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 12w01 BK2CMP3P (rw): tim_brk2_cmp3 input polarity This bit selects the tim_brk2_cmp3 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 13w01 BK2CMP4P (rw): tim_brk2_cmp4 input polarity This bit selects the tim_brk2_cmp4 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x40013464 C   FIELD 16w03 OCRSEL (rw): ocref_clr source selection These bits select the ocref_clr input source. ... Refer to for product specific information. Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x400137DC B  REGISTER TIM1_DCR: TIM1 DMA control register
0x400137DC C   FIELD 00w05 DBA (rw): DMA base address This 5-bits vector defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ...
0x400137DC C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit vector defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers. Transfers can be in half-words or in bytes (see example below). ... Example: Let us consider the following transfer: DBL = 7 bytes & DBA = TIM2_CR1. If DBL = 7 bytes and DBA = TIM2_CR1 represents the address of the byte to be transferred, the address of the transfer should be given by the following equation: (TIMx_CR1 address) + DBA + (DMA index), where DMA index = DBL In this example, 7 bytes are added to (TIMx_CR1 address) + DBA, which gives us the address from/to which the data are copied. In this case, the transfer is done to 7 registers starting from the following address: (TIMx_CR1 address) + DBA According to the configuration of the DMA Data Size, several cases may occur: If the DMA Data Size is configured in half-words, 16-bit data are transferred to each of the 7 registers. If the DMA Data Size is configured in bytes, the data are also transferred to 7 registers: the first register contains the first MSB byte, the second register, the first LSB byte and so on. So with the transfer Timer, one also has to specify the size of data transferred by DMA.
0x400137DC C   FIELD 16w04 DBSS (rw): DMA burst source selection This bitfield defines the interrupt source that triggers the DMA burst transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address). Others: reserved
0x400137E0 B  REGISTER TIM1_DMAR: TIM1 DMA address for full transfer
0x400137E0 C   FIELD 00w32 DMAB (rw): DMA register for burst accesses A read or write operation to the DMAR register accesses the register located at the address (TIMx_CR1 address) + (DBA + DMA index) x 4 where TIMx_CR1 address is the address of the control register 1, DBA is the DMA base address configured in TIMx_DCR register, DMA index is automatically controlled by the DMA transfer, and ranges from 0 to DBL (DBL configured in TIMx_DCR).
0x40013800 A PERIPHERAL USART1
0x40013800 B  REGISTER CR1_disabled (rw): Control register 1
0x40013800 B  REGISTER CR1_enabled (rw): Control register 1
0x40013800 C   FIELD 00w01 UE: USART enable
0x40013800 C   FIELD 00w01 UE: USART enable
0x40013800 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40013800 C   FIELD 01w01 UESM: USART enable in Stop mode
0x40013800 C   FIELD 02w01 RE: Receiver enable
0x40013800 C   FIELD 02w01 RE: Receiver enable
0x40013800 C   FIELD 03w01 TE: Transmitter enable
0x40013800 C   FIELD 03w01 TE: Transmitter enable
0x40013800 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40013800 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x40013800 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40013800 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x40013800 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40013800 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x40013800 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40013800 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x40013800 C   FIELD 08w01 PEIE: PE interrupt enable
0x40013800 C   FIELD 08w01 PEIE: PE interrupt enable
0x40013800 C   FIELD 09w01 PS: Parity selection
0x40013800 C   FIELD 09w01 PS: Parity selection
0x40013800 C   FIELD 10w01 PCE: Parity control enable
0x40013800 C   FIELD 10w01 PCE: Parity control enable
0x40013800 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40013800 C   FIELD 11w01 WAKE: Receiver wakeup method
0x40013800 C   FIELD 12w01 M0: Word length
0x40013800 C   FIELD 12w01 M0: Word length
0x40013800 C   FIELD 13w01 MME: Mute mode enable
0x40013800 C   FIELD 13w01 MME: Mute mode enable
0x40013800 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40013800 C   FIELD 14w01 CMIE: Character match interrupt enable
0x40013800 C   FIELD 15w01 OVER8: Oversampling mode
0x40013800 C   FIELD 15w01 OVER8: Oversampling mode
0x40013800 C   FIELD 16w05 DEDT: DEDT
0x40013800 C   FIELD 16w05 DEDT: DEDT
0x40013800 C   FIELD 21w05 DEAT: DEAT
0x40013800 C   FIELD 21w05 DEAT: DEAT
0x40013800 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x40013800 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x40013800 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x40013800 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x40013800 C   FIELD 28w01 M1: Word length
0x40013800 C   FIELD 28w01 M1: Word length
0x40013800 C   FIELD 29w01 FIFOEN: FIFOEN
0x40013800 C   FIELD 29w01 FIFOEN: FIFOEN
0x40013800 C   FIELD 30w01 TXFEIE: TXFEIE
0x40013800 C   FIELD 31w01 RXFFIE: RXFFIE
0x40013804 B  REGISTER CR2 (rw): Control register 2
0x40013804 C   FIELD 00w01 SLVEN: SLVEN
0x40013804 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x40013804 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x40013804 C   FIELD 05w01 LBDL: LIN break detection length
0x40013804 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x40013804 C   FIELD 08w01 LBCL: Last bit clock pulse
0x40013804 C   FIELD 09w01 CPHA: Clock phase
0x40013804 C   FIELD 10w01 CPOL: Clock polarity
0x40013804 C   FIELD 11w01 CLKEN: Clock enable
0x40013804 C   FIELD 12w02 STOP: STOP bits
0x40013804 C   FIELD 14w01 LINEN: LIN mode enable
0x40013804 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x40013804 C   FIELD 16w01 RXINV: RX pin active level inversion
0x40013804 C   FIELD 17w01 TXINV: TX pin active level inversion
0x40013804 C   FIELD 18w01 DATAINV: Binary data inversion
0x40013804 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x40013804 C   FIELD 20w01 ABREN: Auto baud rate enable
0x40013804 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x40013804 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x40013804 C   FIELD 24w08 ADD: Address of the USART node
0x40013808 B  REGISTER CR3 (rw): Control register 3
0x40013808 C   FIELD 00w01 EIE: Error interrupt enable
0x40013808 C   FIELD 01w01 IREN: Ir mode enable
0x40013808 C   FIELD 02w01 IRLP: Ir low-power
0x40013808 C   FIELD 03w01 HDSEL: Half-duplex selection
0x40013808 C   FIELD 04w01 NACK: Smartcard NACK enable
0x40013808 C   FIELD 05w01 SCEN: Smartcard mode enable
0x40013808 C   FIELD 06w01 DMAR: DMA enable receiver
0x40013808 C   FIELD 07w01 DMAT: DMA enable transmitter
0x40013808 C   FIELD 08w01 RTSE: RTS enable
0x40013808 C   FIELD 09w01 CTSE: CTS enable
0x40013808 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x40013808 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x40013808 C   FIELD 12w01 OVRDIS: Overrun Disable
0x40013808 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x40013808 C   FIELD 14w01 DEM: Driver enable mode
0x40013808 C   FIELD 15w01 DEP: Driver enable polarity selection
0x40013808 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x40013808 C   FIELD 23w01 TXFTIE: TXFTIE
0x40013808 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x40013808 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x40013808 C   FIELD 28w01 RXFTIE: RXFTIE
0x40013808 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x4001380C B  REGISTER BRR (rw): Baud rate register
0x4001380C C   FIELD 00w16 BRR: BRR
0x40013810 B  REGISTER GTPR (rw): Guard time and prescaler register
0x40013810 C   FIELD 00w08 PSC: Prescaler value
0x40013810 C   FIELD 08w08 GT: Guard time value
0x40013814 B  REGISTER RTOR (rw): Receiver timeout register
0x40013814 C   FIELD 00w24 RTO: Receiver timeout value
0x40013814 C   FIELD 24w08 BLEN: Block Length
0x40013818 B  REGISTER RQR (wo): Request register
0x40013818 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x40013818 C   FIELD 01w01 SBKRQ: Send break request
0x40013818 C   FIELD 02w01 MMRQ: Mute mode request
0x40013818 C   FIELD 03w01 RXFRQ: Receive data flush request
0x40013818 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x4001381C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x4001381C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x4001381C C   FIELD 00w01 PE: PE
0x4001381C C   FIELD 00w01 PE: PE
0x4001381C C   FIELD 01w01 FE: FE
0x4001381C C   FIELD 01w01 FE: FE
0x4001381C C   FIELD 02w01 NE: NE
0x4001381C C   FIELD 02w01 NE: NE
0x4001381C C   FIELD 03w01 ORE: ORE
0x4001381C C   FIELD 03w01 ORE: ORE
0x4001381C C   FIELD 04w01 IDLE: IDLE
0x4001381C C   FIELD 04w01 IDLE: IDLE
0x4001381C C   FIELD 05w01 RXFNE: RXFNE
0x4001381C C   FIELD 05w01 RXFNE: RXFNE
0x4001381C C   FIELD 06w01 TC: TC
0x4001381C C   FIELD 06w01 TC: TC
0x4001381C C   FIELD 07w01 TXFNF: TXFNF
0x4001381C C   FIELD 07w01 TXFNF: TXFNF
0x4001381C C   FIELD 08w01 LBDF: LBDF
0x4001381C C   FIELD 08w01 LBDF: LBDF
0x4001381C C   FIELD 09w01 CTSIF: CTSIF
0x4001381C C   FIELD 09w01 CTSIF: CTSIF
0x4001381C C   FIELD 10w01 CTS: CTS
0x4001381C C   FIELD 10w01 CTS: CTS
0x4001381C C   FIELD 11w01 RTOF: RTOF
0x4001381C C   FIELD 11w01 RTOF: RTOF
0x4001381C C   FIELD 12w01 EOBF: EOBF
0x4001381C C   FIELD 12w01 EOBF: EOBF
0x4001381C C   FIELD 13w01 UDR: UDR
0x4001381C C   FIELD 14w01 ABRE: ABRE
0x4001381C C   FIELD 14w01 ABRE: ABRE
0x4001381C C   FIELD 15w01 ABRF: ABRF
0x4001381C C   FIELD 15w01 ABRF: ABRF
0x4001381C C   FIELD 16w01 BUSY: BUSY
0x4001381C C   FIELD 16w01 BUSY: BUSY
0x4001381C C   FIELD 17w01 CMF: CMF
0x4001381C C   FIELD 17w01 CMF: CMF
0x4001381C C   FIELD 18w01 SBKF: SBKF
0x4001381C C   FIELD 18w01 SBKF: SBKF
0x4001381C C   FIELD 19w01 RWU: RWU
0x4001381C C   FIELD 19w01 RWU: RWU
0x4001381C C   FIELD 21w01 TEACK: TEACK
0x4001381C C   FIELD 21w01 TEACK: TEACK
0x4001381C C   FIELD 22w01 REACK: REACK
0x4001381C C   FIELD 22w01 REACK: REACK
0x4001381C C   FIELD 23w01 TXFE: TXFE
0x4001381C C   FIELD 24w01 RXFF: RXFF
0x4001381C C   FIELD 25w01 TCBGT: TCBGT
0x4001381C C   FIELD 25w01 TCBGT: TCBGT
0x4001381C C   FIELD 26w01 RXFT: RXFT
0x4001381C C   FIELD 27w01 TXFT: TXFT
0x40013820 B  REGISTER ICR (wo): Interrupt flag clear register
0x40013820 C   FIELD 00w01 PECF: Parity error clear flag
0x40013820 C   FIELD 01w01 FECF: Framing error clear flag
0x40013820 C   FIELD 02w01 NECF: Noise detected clear flag
0x40013820 C   FIELD 03w01 ORECF: Overrun error clear flag
0x40013820 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x40013820 C   FIELD 05w01 TXFECF: TXFECF
0x40013820 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x40013820 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x40013820 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x40013820 C   FIELD 09w01 CTSCF: CTS clear flag
0x40013820 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x40013820 C   FIELD 12w01 EOBCF: End of block clear flag
0x40013820 C   FIELD 13w01 UDRCF: UDRCF
0x40013820 C   FIELD 17w01 CMCF: Character match clear flag
0x40013824 B  REGISTER RDR (ro): Receive data register
0x40013824 C   FIELD 00w09 RDR: Receive data value
0x40013828 B  REGISTER TDR (rw): Transmit data register
0x40013828 C   FIELD 00w09 TDR: Transmit data value
0x4001382C B  REGISTER PRESC (rw): PRESC
0x4001382C C   FIELD 00w04 PRESCALER: PRESCALER
0x40013830 B  REGISTER AUTOCR (rw): AUTOCR
0x40013830 C   FIELD 00w16 TDN: TDN
0x40013830 C   FIELD 16w01 TRIGPOL: TRIPOL
0x40013830 C   FIELD 17w01 TRIGEN: TRIGEN
0x40013830 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x40013830 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x40013830 C   FIELD 31w01 TECLREN: TECLREN
0x40014000 A PERIPHERAL TIM15
0x40014000 B  REGISTER CR1 (rw): control register 1
0x40014000 C   FIELD 00w01 CEN: Counter enable
0x40014000 C   FIELD 01w01 UDIS: Update disable
0x40014000 C   FIELD 02w01 URS: Update request source
0x40014000 C   FIELD 03w01 OPM: One-pulse mode
0x40014000 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40014000 C   FIELD 08w02 CKD: Clock division
0x40014000 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40014000 C   FIELD 12w01 DITHEN: Dithering enable
0x40014004 B  REGISTER CR2 (rw): control register 2
0x40014004 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x40014004 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x40014004 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40014004 C   FIELD 04w02 MMS: Master mode selection
0x40014004 C   FIELD 07w01 TI1S: TI1 selection
0x40014004 C   FIELD 08w01 OIS1: Output Idle state 1
0x40014004 C   FIELD 09w01 OIS1N: Output Idle state 1
0x40014004 C   FIELD 10w01 OIS2: Output idle state 2 (OC2 output)
0x40014008 B  REGISTER SMCR (rw): slave mode control register
0x40014008 C   FIELD 00w03 SMS: Slave mode selection
0x40014008 C   FIELD 04w03 TS_2_0: Trigger selection
0x40014008 C   FIELD 07w01 MSM: Master/slave mode
0x40014008 C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x40014008 C   FIELD 16w01 SMS_3: Slave mode selection
0x40014008 C   FIELD 20w02 TS_4_3: Trigger selection
0x4001400C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x4001400C C   FIELD 00w01 UIE: Update interrupt enable
0x4001400C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x4001400C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x4001400C C   FIELD 05w01 COMIE: COM interrupt enable
0x4001400C C   FIELD 06w01 TIE: Trigger interrupt enable
0x4001400C C   FIELD 07w01 BIE: Break interrupt enable
0x4001400C C   FIELD 08w01 UDE: Update DMA request enable
0x4001400C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x4001400C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x4001400C C   FIELD 13w01 COMDE: COM DMA request enable
0x4001400C C   FIELD 14w01 TDE: Trigger DMA request enable
0x40014010 B  REGISTER SR (rw): status register
0x40014010 C   FIELD 00w01 UIF: Update interrupt flag
0x40014010 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x40014010 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x40014010 C   FIELD 05w01 COMIF: COM interrupt flag
0x40014010 C   FIELD 06w01 TIF: Trigger interrupt flag
0x40014010 C   FIELD 07w01 BIF: Break interrupt flag
0x40014010 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x40014010 C   FIELD 10w01 CC2OF: Capture/Compare 2 overcapture flag
0x40014014 B  REGISTER EGR: event generation register
0x40014014 C   FIELD 00w01 UG (wo): Update generation
0x40014014 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation
0x40014014 C   FIELD 02w01 CC2G (wo): Capture/Compare 2 generation
0x40014014 C   FIELD 05w01 COMG (rw): Capture/Compare control update generation
0x40014014 C   FIELD 06w01 TG (wo): Trigger generation
0x40014014 C   FIELD 07w01 BG (wo): Break generation
0x40014018 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40014018 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x40014018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40014018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40014018 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x40014018 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40014018 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x40014018 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x40014018 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40014018 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x40014018 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x40014018 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x40014018 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x40014018 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x40014018 C   FIELD 11w01 OC2PE: Output Compare 2 preload enable
0x40014018 C   FIELD 12w03 OC2M: Output Compare 2 mode
0x40014018 C   FIELD 12w04 IC2F: Input capture 2 filter
0x40014018 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode
0x40014018 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x40014020 B  REGISTER CCER (rw): capture/compare enable register
0x40014020 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x40014020 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x40014020 C   FIELD 02w01 CC1NE: Capture/Compare 1 complementary output enable
0x40014020 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x40014020 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x40014020 C   FIELD 05w01 CC2P: Capture/Compare 2 output polarity
0x40014020 C   FIELD 07w01 CC2NP: Capture/Compare 2 complementary output polarity
0x40014024 B  REGISTER CNT: counter
0x40014024 C   FIELD 00w16 CNT (rw): counter value
0x40014024 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x40014028 B  REGISTER PSC (rw): prescaler
0x40014028 C   FIELD 00w16 PSC: Prescaler value
0x4001402C B  REGISTER ARR (rw): auto-reload register
0x4001402C C   FIELD 00w20 ARR: Auto-reload value
0x40014030 B  REGISTER RCR (rw): repetition counter register
0x40014030 C   FIELD 00w08 REP: Repetition counter value
0x40014034 B  REGISTER CCR1 (rw): capture/compare register 1
0x40014034 C   FIELD 00w20 CCR1: Capture/Compare 1 value
0x40014038 B  REGISTER CCR2 (rw): capture/compare register 2
0x40014038 C   FIELD 00w20 CCR1: Capture/Compare 1 value
0x40014044 B  REGISTER BDTR (rw): break and dead-time register
0x40014044 C   FIELD 00w08 DTG: Dead-time generator setup
0x40014044 C   FIELD 08w02 LOCK: Lock configuration
0x40014044 C   FIELD 10w01 OSSI: Off-state selection for Idle mode
0x40014044 C   FIELD 11w01 OSSR: Off-state selection for Run mode
0x40014044 C   FIELD 12w01 BKE: Break enable
0x40014044 C   FIELD 13w01 BKP: Break polarity
0x40014044 C   FIELD 14w01 AOE: Automatic output enable
0x40014044 C   FIELD 15w01 MOE: Main output enable
0x40014044 C   FIELD 16w04 BKF: Break filter
0x40014044 C   FIELD 26w01 BKDSRM: Break Disarm
0x40014044 C   FIELD 28w01 BKBID: Break Bidirectional
0x40014054 B  REGISTER DTR2 (rw): timer deadtime register 2
0x40014054 C   FIELD 00w08 DTGF: Dead-time falling edge generator setup
0x40014054 C   FIELD 16w01 DTAE: Deadtime asymmetric enable
0x40014054 C   FIELD 17w01 DTPE: Deadtime preload enable
0x4001405C B  REGISTER TISEL (rw): input selection register
0x4001405C C   FIELD 00w04 TI1SEL: selects tim_ti1_in[0..15] input
0x4001405C C   FIELD 08w04 TI2SEL: selects tim_ti2_in[0..15] input
0x40014060 B  REGISTER AF1 (rw): alternate function register 1
0x40014060 C   FIELD 00w01 BKINE: TIMx_BKIN input enable
0x40014060 C   FIELD 01w01 BKCMP1E: tim_brk_cmp1 enable
0x40014060 C   FIELD 02w01 BKCMP2E: tim_brk_cmp2 enable
0x40014060 C   FIELD 03w01 BKCMP3E: tim_brk_cmp3 enable
0x40014060 C   FIELD 04w01 BKCMP4E: tim_brk_cmp4 enable
0x40014060 C   FIELD 05w01 BKCMP5E: tim_brk_cmp5 enable
0x40014060 C   FIELD 06w01 BKCMP6E: tim_brk_cmp6 enable
0x40014060 C   FIELD 07w01 BKCMP7E: tim_brk_cmp7 enable
0x40014060 C   FIELD 09w01 BKINP: TIMx_BKIN input polarity
0x40014060 C   FIELD 10w01 BKCMP1P: tim_brk_cmp1 input polarity
0x40014060 C   FIELD 11w01 BKCMP2P: tim_brk_cmp2 input polarity
0x40014060 C   FIELD 12w01 BKCMP3P: tim_brk_cmp3 input polarity
0x40014060 C   FIELD 13w01 BKCMP4P: tim_brk_cmp4 input polarity
0x40014064 B  REGISTER AF2 (rw): alternate function register 2
0x40014064 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x400143DC B  REGISTER DCR (rw): DMA control register
0x400143DC C   FIELD 00w05 DBA: DMA base address
0x400143DC C   FIELD 08w05 DBL: DMA burst length
0x400143DC C   FIELD 16w04 DBSS: DMA burst source selection
0x400143E0 B  REGISTER DMAR (rw): DMA address for full transfer
0x400143E0 C   FIELD 00w32 DMAB: DMA register for burst accesses
0x40014400 A PERIPHERAL TIM16
0x40014400 B  REGISTER CR1 (rw): control register 1
0x40014400 C   FIELD 00w01 CEN: Counter enable
0x40014400 C   FIELD 01w01 UDIS: Update disable
0x40014400 C   FIELD 02w01 URS: Update request source
0x40014400 C   FIELD 03w01 OPM: One pulse mode
0x40014400 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40014400 C   FIELD 08w02 CKD: Clock division
0x40014400 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40014404 B  REGISTER CR2 (rw): control register 2
0x40014404 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x40014404 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x40014404 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40014404 C   FIELD 08w01 OIS1: Output Idle state 1
0x40014404 C   FIELD 09w01 OIS1N: Output Idle state 1
0x4001440C B  REGISTER DIER (rw): DMA/interrupt enable register
0x4001440C C   FIELD 00w01 UIE: Update interrupt enable
0x4001440C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x4001440C C   FIELD 05w01 COMIE: COM interrupt enable
0x4001440C C   FIELD 07w01 BIE: Break interrupt enable
0x4001440C C   FIELD 08w01 UDE: Update DMA request enable
0x4001440C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x4001440C C   FIELD 13w01 COMDE: COM DMA request enable
0x40014410 B  REGISTER SR (rw): status register
0x40014410 C   FIELD 00w01 UIF: Update interrupt flag
0x40014410 C   FIELD 01w01 CC1IF: Capture/Compare 1 interrupt flag
0x40014410 C   FIELD 05w01 COMIF: COM interrupt flag
0x40014410 C   FIELD 07w01 BIF: Break interrupt flag
0x40014410 C   FIELD 09w01 CC1OF: CC1OF
0x40014414 B  REGISTER EGR (wo): event generation register
0x40014414 C   FIELD 00w01 UG: Update generation
0x40014414 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x40014414 C   FIELD 05w01 COMG: Capture/Compare control update generation
0x40014414 C   FIELD 07w01 BG: Break generation
0x40014418 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40014418 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x40014418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40014418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40014418 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x40014418 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40014418 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x40014418 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x40014418 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40014418 C   FIELD 07w01 OC1CE: Output Compare 1 clear enable
0x40014418 C   FIELD 16w01 OC1M_2: Output Compare 1 mode
0x40014420 B  REGISTER CCER (rw): capture/compare enable register
0x40014420 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x40014420 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x40014420 C   FIELD 02w01 CC1NE: Capture/Compare 1 complementary output enable
0x40014420 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x40014424 B  REGISTER CNT: counter
0x40014424 C   FIELD 00w16 CNT (rw): CNT
0x40014424 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x40014428 B  REGISTER PSC (rw): prescaler
0x40014428 C   FIELD 00w16 PSC: Prescaler value
0x4001442C B  REGISTER ARR (rw): auto-reload register
0x4001442C C   FIELD 00w20 ARR: Auto-reload value
0x40014430 B  REGISTER RCR (rw): repetition counter register
0x40014430 C   FIELD 00w08 REP: Repetition counter value
0x40014434 B  REGISTER CCR1 (rw): capture/compare register 1
0x40014434 C   FIELD 00w20 CCR1: Capture/Compare 1 value
0x40014444 B  REGISTER BDTR (rw): break and dead-time register
0x40014444 C   FIELD 00w08 DTG: Dead-time generator setup
0x40014444 C   FIELD 08w02 LOCK: Lock configuration
0x40014444 C   FIELD 10w01 OSSI: Off-state selection for Idle mode
0x40014444 C   FIELD 11w01 OSSR: Off-state selection for Run mode
0x40014444 C   FIELD 12w01 BKE: Break enable
0x40014444 C   FIELD 13w01 BKP: Break polarity
0x40014444 C   FIELD 14w01 AOE: Automatic output enable
0x40014444 C   FIELD 15w01 MOE: Main output enable
0x40014444 C   FIELD 26w01 BKDSRM: Break Disarm
0x40014444 C   FIELD 28w01 BKBID: Break Bidirectional
0x40014454 B  REGISTER DTR2 (rw): timer deadtime register 2
0x40014454 C   FIELD 00w08 DTGF: Deadtime asymmetric enable
0x40014454 C   FIELD 16w01 DTAE: Deadtime asymmetric enable
0x40014454 C   FIELD 17w01 DTPE: Deadtime preload enable
0x4001445C B  REGISTER TISEL (rw): TIM17 option register 1
0x4001445C C   FIELD 00w04 TI1SEL: selects tim_ti1_in[0..15] input
0x40014460 B  REGISTER AF1 (rw): alternate function register 1
0x40014460 C   FIELD 00w01 BKINE: TIMx_BKIN input enable
0x40014460 C   FIELD 01w01 BKCMP1E: tim_brk_cmp1 enable
0x40014460 C   FIELD 02w01 BKCMP2E: tim_brk_cmp2 enable
0x40014460 C   FIELD 03w01 BKCMP3E: tim_brk_cmp3 enable
0x40014460 C   FIELD 04w01 BKCMP4E: tim_brk_cmp4 enable
0x40014460 C   FIELD 05w01 BKCMP5E: tim_brk_cmp5 enable
0x40014460 C   FIELD 06w01 BKCMP6E: tim_brk_cmp6 enable
0x40014460 C   FIELD 07w01 BKCMP7E: tim_brk_cmp7 enable
0x40014460 C   FIELD 09w01 BKINP: TIMx_BKIN input polarity
0x40014460 C   FIELD 10w01 BKCMP1P: tim_brk_cmp1 input polarity
0x40014460 C   FIELD 11w01 BKCMP2P: tim_brk_cmp2 input polarity
0x40014460 C   FIELD 12w01 BKCMP3P: tim_brk_cmp3 input polarity
0x40014460 C   FIELD 13w01 BKCMP4P: tim_brk_cmp4 input polarity
0x40014464 B  REGISTER AF2 (rw): alternate function register 2
0x40014464 C   FIELD 16w03 OCRSEL: tim_ocref_clr source selection
0x400147DC B  REGISTER DCR (rw): DMA control register
0x400147DC C   FIELD 00w05 DBA: DMA base address
0x400147DC C   FIELD 08w05 DBL: DMA burst length
0x400147DC C   FIELD 16w04 DBSS: DMA burst source selection
0x400147E0 B  REGISTER DMAR (rw): TIM17 option register 1
0x400147E0 C   FIELD 00w32 DMAB: DMA register for burst accesses
0x40014800 A PERIPHERAL TIM17
0x40014800 B  REGISTER CR1 (rw): control register 1
0x40014800 C   FIELD 00w01 CEN: Counter enable
0x40014800 C   FIELD 01w01 UDIS: Update disable
0x40014800 C   FIELD 02w01 URS: Update request source
0x40014800 C   FIELD 03w01 OPM: One pulse mode
0x40014800 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x40014800 C   FIELD 08w02 CKD: Clock division
0x40014800 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x40014804 B  REGISTER CR2 (rw): control register 2
0x40014804 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x40014804 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x40014804 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x40014804 C   FIELD 08w01 OIS1: Output Idle state 1
0x40014804 C   FIELD 09w01 OIS1N: Output Idle state 1
0x4001480C B  REGISTER DIER (rw): DMA/interrupt enable register
0x4001480C C   FIELD 00w01 UIE: Update interrupt enable
0x4001480C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x4001480C C   FIELD 05w01 COMIE: COM interrupt enable
0x4001480C C   FIELD 07w01 BIE: Break interrupt enable
0x4001480C C   FIELD 08w01 UDE: Update DMA request enable
0x4001480C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x4001480C C   FIELD 13w01 COMDE: COM DMA request enable
0x40014810 B  REGISTER SR (rw): status register
0x40014810 C   FIELD 00w01 UIF: Update interrupt flag
0x40014810 C   FIELD 01w01 CC1IF: Capture/Compare 1 interrupt flag
0x40014810 C   FIELD 05w01 COMIF: COM interrupt flag
0x40014810 C   FIELD 07w01 BIF: Break interrupt flag
0x40014810 C   FIELD 09w01 CC1OF: CC1OF
0x40014814 B  REGISTER EGR (wo): event generation register
0x40014814 C   FIELD 00w01 UG: Update generation
0x40014814 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x40014814 C   FIELD 05w01 COMG: Capture/Compare control update generation
0x40014814 C   FIELD 07w01 BG: Break generation
0x40014818 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x40014818 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x40014818 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40014818 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x40014818 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x40014818 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x40014818 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x40014818 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x40014818 C   FIELD 04w04 IC1F: Input capture 1 filter
0x40014818 C   FIELD 07w01 OC1CE: Output Compare 1 clear enable
0x40014818 C   FIELD 16w01 OC1M_2: Output Compare 1 mode
0x40014820 B  REGISTER CCER (rw): capture/compare enable register
0x40014820 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x40014820 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x40014820 C   FIELD 02w01 CC1NE: Capture/Compare 1 complementary output enable
0x40014820 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x40014824 B  REGISTER CNT: counter
0x40014824 C   FIELD 00w16 CNT (rw): CNT
0x40014824 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x40014828 B  REGISTER PSC (rw): prescaler
0x40014828 C   FIELD 00w16 PSC: Prescaler value
0x4001482C B  REGISTER ARR (rw): auto-reload register
0x4001482C C   FIELD 00w20 ARR: Auto-reload value
0x40014830 B  REGISTER RCR (rw): repetition counter register
0x40014830 C   FIELD 00w08 REP: Repetition counter value
0x40014834 B  REGISTER CCR1 (rw): capture/compare register 1
0x40014834 C   FIELD 00w20 CCR1: Capture/Compare 1 value
0x40014844 B  REGISTER BDTR (rw): break and dead-time register
0x40014844 C   FIELD 00w08 DTG: Dead-time generator setup
0x40014844 C   FIELD 08w02 LOCK: Lock configuration
0x40014844 C   FIELD 10w01 OSSI: Off-state selection for Idle mode
0x40014844 C   FIELD 11w01 OSSR: Off-state selection for Run mode
0x40014844 C   FIELD 12w01 BKE: Break enable
0x40014844 C   FIELD 13w01 BKP: Break polarity
0x40014844 C   FIELD 14w01 AOE: Automatic output enable
0x40014844 C   FIELD 15w01 MOE: Main output enable
0x40014844 C   FIELD 26w01 BKDSRM: Break Disarm
0x40014844 C   FIELD 28w01 BKBID: Break Bidirectional
0x40014854 B  REGISTER DTR2 (rw): timer deadtime register 2
0x40014854 C   FIELD 00w08 DTGF: Deadtime asymmetric enable
0x40014854 C   FIELD 16w01 DTAE: Deadtime asymmetric enable
0x40014854 C   FIELD 17w01 DTPE: Deadtime preload enable
0x4001485C B  REGISTER TISEL (rw): TIM17 option register 1
0x4001485C C   FIELD 00w04 TI1SEL: selects tim_ti1_in[0..15] input
0x40014860 B  REGISTER AF1 (rw): alternate function register 1
0x40014860 C   FIELD 00w01 BKINE: TIMx_BKIN input enable
0x40014860 C   FIELD 01w01 BKCMP1E: tim_brk_cmp1 enable
0x40014860 C   FIELD 02w01 BKCMP2E: tim_brk_cmp2 enable
0x40014860 C   FIELD 03w01 BKCMP3E: tim_brk_cmp3 enable
0x40014860 C   FIELD 04w01 BKCMP4E: tim_brk_cmp4 enable
0x40014860 C   FIELD 05w01 BKCMP5E: tim_brk_cmp5 enable
0x40014860 C   FIELD 06w01 BKCMP6E: tim_brk_cmp6 enable
0x40014860 C   FIELD 07w01 BKCMP7E: tim_brk_cmp7 enable
0x40014860 C   FIELD 09w01 BKINP: TIMx_BKIN input polarity
0x40014860 C   FIELD 10w01 BKCMP1P: tim_brk_cmp1 input polarity
0x40014860 C   FIELD 11w01 BKCMP2P: tim_brk_cmp2 input polarity
0x40014860 C   FIELD 12w01 BKCMP3P: tim_brk_cmp3 input polarity
0x40014860 C   FIELD 13w01 BKCMP4P: tim_brk_cmp4 input polarity
0x40014864 B  REGISTER AF2 (rw): alternate function register 2
0x40014864 C   FIELD 16w03 OCRSEL: tim_ocref_clr source selection
0x40014BDC B  REGISTER DCR (rw): DMA control register
0x40014BDC C   FIELD 00w05 DBA: DMA base address
0x40014BDC C   FIELD 08w05 DBL: DMA burst length
0x40014BDC C   FIELD 16w04 DBSS: DMA burst source selection
0x40014BE0 B  REGISTER DMAR (rw): TIM17 option register 1
0x40014BE0 C   FIELD 00w32 DMAB: DMA register for burst accesses
0x40015400 A PERIPHERAL SAI1
0x40015400 B  REGISTER GCR (rw): Global configuration register
0x40015400 C   FIELD 00w02 SYNCIN: Synchronization inputs
0x40015400 C   FIELD 04w02 SYNCOUT: Synchronization outputs
0x40015404 B  REGISTER ACR1 (rw): A Configuration register 1
0x40015404 C   FIELD 00w02 MODE: Audio block mode
0x40015404 C   FIELD 02w02 PRTCFG: Protocol configuration
0x40015404 C   FIELD 05w03 DS: Data size
0x40015404 C   FIELD 08w01 LSBFIRST: Least significant bit first
0x40015404 C   FIELD 09w01 CKSTR: Clock strobing edge
0x40015404 C   FIELD 10w02 SYNCEN: Synchronization enable
0x40015404 C   FIELD 12w01 MONO: Mono mode
0x40015404 C   FIELD 13w01 OUTDRIV: Output drive
0x40015404 C   FIELD 16w01 SAIAEN: Audio block A enable
0x40015404 C   FIELD 17w01 DMAEN: DMA enable
0x40015404 C   FIELD 19w01 NODIV: No divider
0x40015404 C   FIELD 20w06 MCKDIV: Master clock divider
0x40015404 C   FIELD 26w01 OSR: OSR
0x40015404 C   FIELD 27w01 MCKEN: MCKEN
0x40015408 B  REGISTER ACR2 (rw): A Configuration register 2
0x40015408 C   FIELD 00w03 FTH: FIFO threshold
0x40015408 C   FIELD 03w01 FFLUSH: FIFO flush
0x40015408 C   FIELD 04w01 TRIS: Tristate management on data line
0x40015408 C   FIELD 05w01 MUTE: Mute
0x40015408 C   FIELD 06w01 MUTEVAL: Mute value
0x40015408 C   FIELD 07w06 MUTECN: Mute counter
0x40015408 C   FIELD 13w01 CPL: Complement bit
0x40015408 C   FIELD 14w02 COMP: Companding mode
0x4001540C B  REGISTER AFRCR: A frame configuration register
0x4001540C C   FIELD 00w08 FRL (rw): Frame length
0x4001540C C   FIELD 08w07 FSALL (rw): Frame synchronization active level length
0x4001540C C   FIELD 16w01 FSDEF (ro): Frame synchronization definition
0x4001540C C   FIELD 17w01 FSPOL (rw): Frame synchronization polarity
0x4001540C C   FIELD 18w01 FSOFF (rw): Frame synchronization offset
0x40015410 B  REGISTER ASLOTR (rw): A Slot register
0x40015410 C   FIELD 00w05 FBOFF: First bit offset
0x40015410 C   FIELD 06w02 SLOTSZ: Slot size
0x40015410 C   FIELD 08w04 NBSLOT: Number of slots in an audio frame
0x40015410 C   FIELD 16w16 SLOTEN: Slot enable
0x40015414 B  REGISTER AIM (rw): A Interrupt mask register
0x40015414 C   FIELD 00w01 OVRUDRIE: Overrun/underrun interrupt enable
0x40015414 C   FIELD 01w01 MUTEDETIE: Mute detection interrupt enable
0x40015414 C   FIELD 02w01 WCKCFGIE: Wrong clock configuration interrupt enable
0x40015414 C   FIELD 03w01 FREQIE: FIFO request interrupt enable
0x40015414 C   FIELD 04w01 CNRDYIE: Codec not ready interrupt enable
0x40015414 C   FIELD 05w01 AFSDETIE: Anticipated frame synchronization detection interrupt enable
0x40015414 C   FIELD 06w01 LFSDETIE: Late frame synchronization detection interrupt enable
0x40015418 B  REGISTER ASR (ro): A Status register
0x40015418 C   FIELD 00w01 OVRUDR: Overrun / underrun
0x40015418 C   FIELD 01w01 MUTEDET: Mute detection
0x40015418 C   FIELD 02w01 WCKCFG: Wrong clock configuration flag. This bit is read only
0x40015418 C   FIELD 03w01 FREQ: FIFO request
0x40015418 C   FIELD 04w01 CNRDY: Codec not ready
0x40015418 C   FIELD 05w01 AFSDET: Anticipated frame synchronization detection
0x40015418 C   FIELD 06w01 LFSDET: Late frame synchronization detection
0x40015418 C   FIELD 16w03 FLVL: FIFO level threshold
0x4001541C B  REGISTER ACLRFR (wo): A Clear flag register
0x4001541C C   FIELD 00w01 COVRUDR: Clear overrun / underrun
0x4001541C C   FIELD 01w01 CMUTEDET: Mute detection flag
0x4001541C C   FIELD 02w01 CWCKCFG: Clear wrong clock configuration flag
0x4001541C C   FIELD 04w01 CCNRDY: Clear codec not ready flag
0x4001541C C   FIELD 05w01 CAFSDET: Clear anticipated frame synchronization detection flag
0x4001541C C   FIELD 06w01 CLFSDET: Clear late frame synchronization detection flag
0x40015420 B  REGISTER ADR (rw): A Data register
0x40015420 C   FIELD 00w32 DATA: Data
0x40015424 B  REGISTER BCR1 (rw): B Configuration register 1
0x40015424 C   FIELD 00w02 MODE: Audio block mode
0x40015424 C   FIELD 02w02 PRTCFG: Protocol configuration
0x40015424 C   FIELD 05w03 DS: Data size
0x40015424 C   FIELD 08w01 LSBFIRST: Least significant bit first
0x40015424 C   FIELD 09w01 CKSTR: Clock strobing edge
0x40015424 C   FIELD 10w02 SYNCEN: Synchronization enable
0x40015424 C   FIELD 12w01 MONO: Mono mode
0x40015424 C   FIELD 13w01 OUTDRIV: Output drive
0x40015424 C   FIELD 16w01 SAIAEN: Audio block A enable
0x40015424 C   FIELD 17w01 DMAEN: DMA enable
0x40015424 C   FIELD 19w01 NODIV: No divider
0x40015424 C   FIELD 20w06 MCKDIV: Master clock divider
0x40015424 C   FIELD 26w01 OSR: OSR
0x40015424 C   FIELD 27w01 MCKEN: MCKEN
0x40015428 B  REGISTER BCR2 (rw): B Configuration register 2
0x40015428 C   FIELD 00w03 FTH: FIFO threshold
0x40015428 C   FIELD 03w01 FFLUSH: FIFO flush
0x40015428 C   FIELD 04w01 TRIS: Tristate management on data line
0x40015428 C   FIELD 05w01 MUTE: Mute
0x40015428 C   FIELD 06w01 MUTEVAL: Mute value
0x40015428 C   FIELD 07w06 MUTECN: Mute counter
0x40015428 C   FIELD 13w01 CPL: Complement bit
0x40015428 C   FIELD 14w02 COMP: Companding mode
0x4001542C B  REGISTER BFRCR: B frame configuration register
0x4001542C C   FIELD 00w08 FRL (rw): Frame length
0x4001542C C   FIELD 08w07 FSALL (rw): Frame synchronization active level length
0x4001542C C   FIELD 16w01 FSDEF (ro): Frame synchronization definition
0x4001542C C   FIELD 17w01 FSPOL (rw): Frame synchronization polarity
0x4001542C C   FIELD 18w01 FSOFF (rw): Frame synchronization offset
0x40015430 B  REGISTER BSLOTR (rw): B Slot register
0x40015430 C   FIELD 00w05 FBOFF: First bit offset
0x40015430 C   FIELD 06w02 SLOTSZ: Slot size
0x40015430 C   FIELD 08w04 NBSLOT: Number of slots in an audio frame
0x40015430 C   FIELD 16w16 SLOTEN: Slot enable
0x40015434 B  REGISTER BIM (rw): B Interrupt mask register
0x40015434 C   FIELD 00w01 OVRUDRIE: Overrun/underrun interrupt enable
0x40015434 C   FIELD 01w01 MUTEDETIE: Mute detection interrupt enable
0x40015434 C   FIELD 02w01 WCKCFGIE: Wrong clock configuration interrupt enable
0x40015434 C   FIELD 03w01 FREQIE: FIFO request interrupt enable
0x40015434 C   FIELD 04w01 CNRDYIE: Codec not ready interrupt enable
0x40015434 C   FIELD 05w01 AFSDETIE: Anticipated frame synchronization detection interrupt enable
0x40015434 C   FIELD 06w01 LFSDETIE: Late frame synchronization detection interrupt enable
0x40015438 B  REGISTER BSR (ro): B Status register
0x40015438 C   FIELD 00w01 OVRUDR: Overrun / underrun
0x40015438 C   FIELD 01w01 MUTEDET: Mute detection
0x40015438 C   FIELD 02w01 WCKCFG: Wrong clock configuration flag
0x40015438 C   FIELD 03w01 FREQ: FIFO request
0x40015438 C   FIELD 04w01 CNRDY: Codec not ready
0x40015438 C   FIELD 05w01 AFSDET: Anticipated frame synchronization detection
0x40015438 C   FIELD 06w01 LFSDET: Late frame synchronization detection
0x40015438 C   FIELD 16w03 FLVL: FIFO level threshold
0x4001543C B  REGISTER BCLRFR (wo): B Clear flag register
0x4001543C C   FIELD 00w01 COVRUDR: Clear overrun / underrun
0x4001543C C   FIELD 01w01 CMUTEDET: Mute detection flag
0x4001543C C   FIELD 02w01 CWCKCFG: Clear wrong clock configuration flag
0x4001543C C   FIELD 04w01 CCNRDY: Clear codec not ready flag
0x4001543C C   FIELD 05w01 CAFSDET: Clear anticipated frame synchronization detection flag
0x4001543C C   FIELD 06w01 CLFSDET: Clear late frame synchronization detection flag
0x40015440 B  REGISTER BDR (rw): B Data register
0x40015440 C   FIELD 00w32 DATA: Data
0x40015444 B  REGISTER PDMCR (rw): PDM control register
0x40015444 C   FIELD 00w01 PDMEN: PDM enable
0x40015444 C   FIELD 04w02 MICNBR: MICNBR
0x40015444 C   FIELD 08w01 CKEN1: Clock enable of bitstream clock number 1
0x40015444 C   FIELD 09w01 CKEN2: CKEN2
0x40015444 C   FIELD 10w01 CKEN3: CKEN3
0x40015444 C   FIELD 11w01 CKEN4: CKEN4
0x40015448 B  REGISTER PDMDLY (rw): PDM delay register
0x40015448 C   FIELD 00w03 DLYM1L: Delay line adjust for first microphone of pair 1
0x40015448 C   FIELD 04w03 DLYM1R: Delay line adjust for second microphone of pair 1
0x40015448 C   FIELD 08w03 DLYM2L: Delay line for first microphone of pair 2
0x40015448 C   FIELD 12w03 DLYM2R: Delay line for second microphone of pair 2
0x40015448 C   FIELD 16w03 DLYM3L: DLYM3L
0x40015448 C   FIELD 20w03 DLYM3R: DLYM3R
0x40015448 C   FIELD 24w03 DLYM4L: DLYM4L
0x40015448 C   FIELD 28w03 DLYM4R: DLYM4R
0x40015800 A PERIPHERAL SAI2
0x40015800 B  REGISTER GCR (rw): Global configuration register
0x40015800 C   FIELD 00w02 SYNCIN: Synchronization inputs
0x40015800 C   FIELD 04w02 SYNCOUT: Synchronization outputs
0x40015804 B  REGISTER ACR1 (rw): A Configuration register 1
0x40015804 C   FIELD 00w02 MODE: Audio block mode
0x40015804 C   FIELD 02w02 PRTCFG: Protocol configuration
0x40015804 C   FIELD 05w03 DS: Data size
0x40015804 C   FIELD 08w01 LSBFIRST: Least significant bit first
0x40015804 C   FIELD 09w01 CKSTR: Clock strobing edge
0x40015804 C   FIELD 10w02 SYNCEN: Synchronization enable
0x40015804 C   FIELD 12w01 MONO: Mono mode
0x40015804 C   FIELD 13w01 OUTDRIV: Output drive
0x40015804 C   FIELD 16w01 SAIAEN: Audio block A enable
0x40015804 C   FIELD 17w01 DMAEN: DMA enable
0x40015804 C   FIELD 19w01 NODIV: No divider
0x40015804 C   FIELD 20w06 MCKDIV: Master clock divider
0x40015804 C   FIELD 26w01 OSR: OSR
0x40015804 C   FIELD 27w01 MCKEN: MCKEN
0x40015808 B  REGISTER ACR2 (rw): A Configuration register 2
0x40015808 C   FIELD 00w03 FTH: FIFO threshold
0x40015808 C   FIELD 03w01 FFLUSH: FIFO flush
0x40015808 C   FIELD 04w01 TRIS: Tristate management on data line
0x40015808 C   FIELD 05w01 MUTE: Mute
0x40015808 C   FIELD 06w01 MUTEVAL: Mute value
0x40015808 C   FIELD 07w06 MUTECN: Mute counter
0x40015808 C   FIELD 13w01 CPL: Complement bit
0x40015808 C   FIELD 14w02 COMP: Companding mode
0x4001580C B  REGISTER AFRCR: A frame configuration register
0x4001580C C   FIELD 00w08 FRL (rw): Frame length
0x4001580C C   FIELD 08w07 FSALL (rw): Frame synchronization active level length
0x4001580C C   FIELD 16w01 FSDEF (ro): Frame synchronization definition
0x4001580C C   FIELD 17w01 FSPOL (rw): Frame synchronization polarity
0x4001580C C   FIELD 18w01 FSOFF (rw): Frame synchronization offset
0x40015810 B  REGISTER ASLOTR (rw): A Slot register
0x40015810 C   FIELD 00w05 FBOFF: First bit offset
0x40015810 C   FIELD 06w02 SLOTSZ: Slot size
0x40015810 C   FIELD 08w04 NBSLOT: Number of slots in an audio frame
0x40015810 C   FIELD 16w16 SLOTEN: Slot enable
0x40015814 B  REGISTER AIM (rw): A Interrupt mask register
0x40015814 C   FIELD 00w01 OVRUDRIE: Overrun/underrun interrupt enable
0x40015814 C   FIELD 01w01 MUTEDETIE: Mute detection interrupt enable
0x40015814 C   FIELD 02w01 WCKCFGIE: Wrong clock configuration interrupt enable
0x40015814 C   FIELD 03w01 FREQIE: FIFO request interrupt enable
0x40015814 C   FIELD 04w01 CNRDYIE: Codec not ready interrupt enable
0x40015814 C   FIELD 05w01 AFSDETIE: Anticipated frame synchronization detection interrupt enable
0x40015814 C   FIELD 06w01 LFSDETIE: Late frame synchronization detection interrupt enable
0x40015818 B  REGISTER ASR (ro): A Status register
0x40015818 C   FIELD 00w01 OVRUDR: Overrun / underrun
0x40015818 C   FIELD 01w01 MUTEDET: Mute detection
0x40015818 C   FIELD 02w01 WCKCFG: Wrong clock configuration flag. This bit is read only
0x40015818 C   FIELD 03w01 FREQ: FIFO request
0x40015818 C   FIELD 04w01 CNRDY: Codec not ready
0x40015818 C   FIELD 05w01 AFSDET: Anticipated frame synchronization detection
0x40015818 C   FIELD 06w01 LFSDET: Late frame synchronization detection
0x40015818 C   FIELD 16w03 FLVL: FIFO level threshold
0x4001581C B  REGISTER ACLRFR (wo): A Clear flag register
0x4001581C C   FIELD 00w01 COVRUDR: Clear overrun / underrun
0x4001581C C   FIELD 01w01 CMUTEDET: Mute detection flag
0x4001581C C   FIELD 02w01 CWCKCFG: Clear wrong clock configuration flag
0x4001581C C   FIELD 04w01 CCNRDY: Clear codec not ready flag
0x4001581C C   FIELD 05w01 CAFSDET: Clear anticipated frame synchronization detection flag
0x4001581C C   FIELD 06w01 CLFSDET: Clear late frame synchronization detection flag
0x40015820 B  REGISTER ADR (rw): A Data register
0x40015820 C   FIELD 00w32 DATA: Data
0x40015824 B  REGISTER BCR1 (rw): B Configuration register 1
0x40015824 C   FIELD 00w02 MODE: Audio block mode
0x40015824 C   FIELD 02w02 PRTCFG: Protocol configuration
0x40015824 C   FIELD 05w03 DS: Data size
0x40015824 C   FIELD 08w01 LSBFIRST: Least significant bit first
0x40015824 C   FIELD 09w01 CKSTR: Clock strobing edge
0x40015824 C   FIELD 10w02 SYNCEN: Synchronization enable
0x40015824 C   FIELD 12w01 MONO: Mono mode
0x40015824 C   FIELD 13w01 OUTDRIV: Output drive
0x40015824 C   FIELD 16w01 SAIAEN: Audio block A enable
0x40015824 C   FIELD 17w01 DMAEN: DMA enable
0x40015824 C   FIELD 19w01 NODIV: No divider
0x40015824 C   FIELD 20w06 MCKDIV: Master clock divider
0x40015824 C   FIELD 26w01 OSR: OSR
0x40015824 C   FIELD 27w01 MCKEN: MCKEN
0x40015828 B  REGISTER BCR2 (rw): B Configuration register 2
0x40015828 C   FIELD 00w03 FTH: FIFO threshold
0x40015828 C   FIELD 03w01 FFLUSH: FIFO flush
0x40015828 C   FIELD 04w01 TRIS: Tristate management on data line
0x40015828 C   FIELD 05w01 MUTE: Mute
0x40015828 C   FIELD 06w01 MUTEVAL: Mute value
0x40015828 C   FIELD 07w06 MUTECN: Mute counter
0x40015828 C   FIELD 13w01 CPL: Complement bit
0x40015828 C   FIELD 14w02 COMP: Companding mode
0x4001582C B  REGISTER BFRCR: B frame configuration register
0x4001582C C   FIELD 00w08 FRL (rw): Frame length
0x4001582C C   FIELD 08w07 FSALL (rw): Frame synchronization active level length
0x4001582C C   FIELD 16w01 FSDEF (ro): Frame synchronization definition
0x4001582C C   FIELD 17w01 FSPOL (rw): Frame synchronization polarity
0x4001582C C   FIELD 18w01 FSOFF (rw): Frame synchronization offset
0x40015830 B  REGISTER BSLOTR (rw): B Slot register
0x40015830 C   FIELD 00w05 FBOFF: First bit offset
0x40015830 C   FIELD 06w02 SLOTSZ: Slot size
0x40015830 C   FIELD 08w04 NBSLOT: Number of slots in an audio frame
0x40015830 C   FIELD 16w16 SLOTEN: Slot enable
0x40015834 B  REGISTER BIM (rw): B Interrupt mask register
0x40015834 C   FIELD 00w01 OVRUDRIE: Overrun/underrun interrupt enable
0x40015834 C   FIELD 01w01 MUTEDETIE: Mute detection interrupt enable
0x40015834 C   FIELD 02w01 WCKCFGIE: Wrong clock configuration interrupt enable
0x40015834 C   FIELD 03w01 FREQIE: FIFO request interrupt enable
0x40015834 C   FIELD 04w01 CNRDYIE: Codec not ready interrupt enable
0x40015834 C   FIELD 05w01 AFSDETIE: Anticipated frame synchronization detection interrupt enable
0x40015834 C   FIELD 06w01 LFSDETIE: Late frame synchronization detection interrupt enable
0x40015838 B  REGISTER BSR (ro): B Status register
0x40015838 C   FIELD 00w01 OVRUDR: Overrun / underrun
0x40015838 C   FIELD 01w01 MUTEDET: Mute detection
0x40015838 C   FIELD 02w01 WCKCFG: Wrong clock configuration flag
0x40015838 C   FIELD 03w01 FREQ: FIFO request
0x40015838 C   FIELD 04w01 CNRDY: Codec not ready
0x40015838 C   FIELD 05w01 AFSDET: Anticipated frame synchronization detection
0x40015838 C   FIELD 06w01 LFSDET: Late frame synchronization detection
0x40015838 C   FIELD 16w03 FLVL: FIFO level threshold
0x4001583C B  REGISTER BCLRFR (wo): B Clear flag register
0x4001583C C   FIELD 00w01 COVRUDR: Clear overrun / underrun
0x4001583C C   FIELD 01w01 CMUTEDET: Mute detection flag
0x4001583C C   FIELD 02w01 CWCKCFG: Clear wrong clock configuration flag
0x4001583C C   FIELD 04w01 CCNRDY: Clear codec not ready flag
0x4001583C C   FIELD 05w01 CAFSDET: Clear anticipated frame synchronization detection flag
0x4001583C C   FIELD 06w01 CLFSDET: Clear late frame synchronization detection flag
0x40015840 B  REGISTER BDR (rw): B Data register
0x40015840 C   FIELD 00w32 DATA: Data
0x40015844 B  REGISTER PDMCR (rw): PDM control register
0x40015844 C   FIELD 00w01 PDMEN: PDM enable
0x40015844 C   FIELD 04w02 MICNBR: MICNBR
0x40015844 C   FIELD 08w01 CKEN1: Clock enable of bitstream clock number 1
0x40015844 C   FIELD 09w01 CKEN2: CKEN2
0x40015844 C   FIELD 10w01 CKEN3: CKEN3
0x40015844 C   FIELD 11w01 CKEN4: CKEN4
0x40015848 B  REGISTER PDMDLY (rw): PDM delay register
0x40015848 C   FIELD 00w03 DLYM1L: Delay line adjust for first microphone of pair 1
0x40015848 C   FIELD 04w03 DLYM1R: Delay line adjust for second microphone of pair 1
0x40015848 C   FIELD 08w03 DLYM2L: Delay line for first microphone of pair 2
0x40015848 C   FIELD 12w03 DLYM2R: Delay line for second microphone of pair 2
0x40015848 C   FIELD 16w03 DLYM3L: DLYM3L
0x40015848 C   FIELD 20w03 DLYM3R: DLYM3R
0x40015848 C   FIELD 24w03 DLYM4L: DLYM4L
0x40015848 C   FIELD 28w03 DLYM4R: DLYM4R
0x40020000 A PERIPHERAL GPDMA1
0x40020000 B  REGISTER GPDMA_SECCFGR: GPDMA secure configuration register
0x40020000 C   FIELD 00w01 SEC0 (rw): SEC0
0x40020000 C   FIELD 01w01 SEC1 (rw): SEC1
0x40020000 C   FIELD 02w01 SEC2 (rw): SEC2
0x40020000 C   FIELD 03w01 SEC3 (rw): SEC3
0x40020000 C   FIELD 04w01 SEC4 (rw): SEC4
0x40020000 C   FIELD 05w01 SEC5 (rw): SEC5
0x40020000 C   FIELD 06w01 SEC6 (rw): SEC6
0x40020000 C   FIELD 07w01 SEC7 (rw): SEC7
0x40020000 C   FIELD 08w01 SEC8 (rw): SEC8
0x40020000 C   FIELD 09w01 SEC9 (rw): SEC9
0x40020000 C   FIELD 10w01 SEC10 (rw): SEC10
0x40020000 C   FIELD 11w01 SEC11 (rw): SEC11
0x40020000 C   FIELD 12w01 SEC12 (rw): SEC12
0x40020000 C   FIELD 13w01 SEC13 (rw): SEC13
0x40020000 C   FIELD 14w01 SEC14 (rw): SEC14
0x40020000 C   FIELD 15w01 SEC15 (rw): SEC15
0x40020004 B  REGISTER GPDMA_PRIVCFGR: GPDMA privileged configuration register
0x40020004 C   FIELD 00w01 PRIV0 (rw): PRIV0
0x40020004 C   FIELD 01w01 PRIV1 (rw): PRIV1
0x40020004 C   FIELD 02w01 PRIV2 (rw): PRIV2
0x40020004 C   FIELD 03w01 PRIV3 (rw): PRIV3
0x40020004 C   FIELD 04w01 PRIV4 (rw): PRIV4
0x40020004 C   FIELD 05w01 PRIV5 (rw): PRIV5
0x40020004 C   FIELD 06w01 PRIV6 (rw): PRIV6
0x40020004 C   FIELD 07w01 PRIV7 (rw): PRIV7
0x40020004 C   FIELD 08w01 PRIV8 (rw): PRIV8
0x40020004 C   FIELD 09w01 PRIV9 (rw): PRIV9
0x40020004 C   FIELD 10w01 PRIV10 (rw): PRIV10
0x40020004 C   FIELD 11w01 PRIV11 (rw): PRIV11
0x40020004 C   FIELD 12w01 PRIV12 (rw): PRIV12
0x40020004 C   FIELD 13w01 PRIV13 (rw): PRIV13
0x40020004 C   FIELD 14w01 PRIV14 (rw): PRIV14
0x40020004 C   FIELD 15w01 PRIV15 (rw): PRIV15
0x40020008 B  REGISTER GPDMA_RCFGLOCKR: GPDMA configuration lock register
0x40020008 C   FIELD 00w01 LOCK0 (rw): LOCK0
0x40020008 C   FIELD 01w01 LOCK1 (rw): LOCK1
0x40020008 C   FIELD 02w01 LOCK2 (rw): LOCK2
0x40020008 C   FIELD 03w01 LOCK3 (rw): LOCK3
0x40020008 C   FIELD 04w01 LOCK4 (rw): LOCK4
0x40020008 C   FIELD 05w01 LOCK5 (rw): LOCK5
0x40020008 C   FIELD 06w01 LOCK6 (rw): LOCK6
0x40020008 C   FIELD 07w01 LOCK7 (rw): LOCK7
0x40020008 C   FIELD 08w01 LOCK8 (rw): LOCK8
0x40020008 C   FIELD 09w01 LOCK9 (rw): LOCK9
0x40020008 C   FIELD 10w01 LOCK10 (rw): LOCK10
0x40020008 C   FIELD 11w01 LOCK11 (rw): LOCK11
0x40020008 C   FIELD 12w01 LOCK12 (rw): LOCK12
0x40020008 C   FIELD 13w01 LOCK13 (rw): LOCK13
0x40020008 C   FIELD 14w01 LOCK14 (rw): LOCK14
0x40020008 C   FIELD 15w01 LOCK15 (rw): LOCK15
0x4002000C B  REGISTER GPDMA_MISR: GPDMA non-secure masked interrupt status register
0x4002000C C   FIELD 00w01 MIS0 (ro): MIS0
0x4002000C C   FIELD 01w01 MIS1 (ro): MIS1
0x4002000C C   FIELD 02w01 MIS2 (ro): MIS2
0x4002000C C   FIELD 03w01 MIS3 (ro): MIS3
0x4002000C C   FIELD 04w01 MIS4 (ro): MIS4
0x4002000C C   FIELD 05w01 MIS5 (ro): MIS5
0x4002000C C   FIELD 06w01 MIS6 (ro): MIS6
0x4002000C C   FIELD 07w01 MIS7 (ro): MIS7
0x4002000C C   FIELD 08w01 MIS8 (ro): MIS8
0x4002000C C   FIELD 09w01 MIS9 (ro): MIS9
0x4002000C C   FIELD 10w01 MIS10 (ro): MIS10
0x4002000C C   FIELD 11w01 MIS11 (ro): MIS11
0x4002000C C   FIELD 12w01 MIS12 (ro): MIS12
0x4002000C C   FIELD 13w01 MIS13 (ro): MIS13
0x4002000C C   FIELD 14w01 MIS14 (ro): MIS14
0x4002000C C   FIELD 15w01 MIS15 (ro): MIS15
0x40020010 B  REGISTER GPDMA_SMISR: GPDMA secure masked interrupt status register
0x40020010 C   FIELD 00w01 MIS0 (ro): MIS0
0x40020010 C   FIELD 01w01 MIS1 (ro): MIS1
0x40020010 C   FIELD 02w01 MIS2 (ro): MIS2
0x40020010 C   FIELD 03w01 MIS3 (ro): MIS3
0x40020010 C   FIELD 04w01 MIS4 (ro): MIS4
0x40020010 C   FIELD 05w01 MIS5 (ro): MIS5
0x40020010 C   FIELD 06w01 MIS6 (ro): MIS6
0x40020010 C   FIELD 07w01 MIS7 (ro): MIS7
0x40020010 C   FIELD 08w01 MIS8 (ro): MIS8
0x40020010 C   FIELD 09w01 MIS9 (ro): MIS9
0x40020010 C   FIELD 10w01 MIS10 (ro): MIS10
0x40020010 C   FIELD 11w01 MIS11 (ro): MIS11
0x40020010 C   FIELD 12w01 MIS12 (ro): MIS12
0x40020010 C   FIELD 13w01 MIS13 (ro): MIS13
0x40020010 C   FIELD 14w01 MIS14 (ro): MIS14
0x40020010 C   FIELD 15w01 MIS15 (ro): MIS15
0x40020050 B  REGISTER GPDMA_C0LBAR: GPDMA channel 0 linked-list base address register
0x40020050 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x4002005C B  REGISTER GPDMA_C0FCR: GPDMA channel 0 flag clear register
0x4002005C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4002005C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4002005C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4002005C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4002005C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4002005C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4002005C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x40020060 B  REGISTER GPDMA_C0SR: GPDMA channel 0 status register
0x40020060 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x40020060 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x40020060 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x40020060 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x40020060 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x40020060 C   FIELD 12w01 USEF (ro): user setting error flag
0x40020060 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x40020060 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x40020060 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x40020064 B  REGISTER GPDMA_C0CR: GPDMA channel 0 control register
0x40020064 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x40020064 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x40020064 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x40020064 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x40020064 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x40020064 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x40020064 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x40020064 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x40020064 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x40020064 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x40020064 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020064 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020064 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020090 B  REGISTER GPDMA_C0TR1: GPDMA channel 0 transfer register 1
0x40020090 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020090 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020090 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020090 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020090 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020090 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020090 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020090 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020090 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020090 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020090 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020090 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020090 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020090 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020094 B  REGISTER GPDMA_C0TR2: GPDMA channel 0 transfer register 2
0x40020094 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020094 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020094 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020094 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020094 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020094 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020094 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020094 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020098 B  REGISTER GPDMA_C0BR1: GPDMA channel 0 block register 1
0x40020098 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002009C B  REGISTER GPDMA_C0SAR: GPDMA channel 0 source address register
0x4002009C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400200A0 B  REGISTER GPDMA_C0DAR: GPDMA channel 0 destination address register
0x400200A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400200CC B  REGISTER GPDMA_C0LLR: GPDMA channel 0 linked-list address register
0x400200CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x400200CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x400200CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x400200CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x400200CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x400200CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x400200CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x400200D0 B  REGISTER GPDMA_C1LBAR: GPDMA channel 1 linked-list base address register
0x400200D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x400200DC B  REGISTER GPDMA_C1FCR: GPDMA channel 1 flag clear register
0x400200DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x400200DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x400200DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x400200DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x400200DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x400200DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x400200DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x400200E0 B  REGISTER GPDMA_C1SR: GPDMA channel 1 status register
0x400200E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x400200E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x400200E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x400200E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x400200E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x400200E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x400200E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x400200E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x400200E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x400200E4 B  REGISTER GPDMA_C1CR: GPDMA channel 1 control register
0x400200E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x400200E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x400200E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x400200E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x400200E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x400200E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x400200E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x400200E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x400200E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x400200E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x400200E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400200E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400200E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020110 B  REGISTER GPDMA_C1TR1: GPDMA channel 1 transfer register 1
0x40020110 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020110 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020110 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020110 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020110 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020110 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020110 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020110 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020110 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020110 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020110 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020110 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020110 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020110 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020114 B  REGISTER GPDMA_C1TR2: GPDMA channel 1 transfer register 2
0x40020114 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020114 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020114 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020114 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020114 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020114 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020114 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020114 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020118 B  REGISTER GPDMA_C1BR1: GPDMA channel 1 block register 1
0x40020118 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002011C B  REGISTER GPDMA_C1SAR: GPDMA channel 1 source address register
0x4002011C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020120 B  REGISTER GPDMA_C1DAR: GPDMA channel 1 destination address register
0x40020120 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x4002014C B  REGISTER GPDMA_C1LLR: GPDMA channel 1 linked-list address register
0x4002014C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4002014C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x4002014C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x4002014C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x4002014C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x4002014C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x4002014C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x40020150 B  REGISTER GPDMA_C2LBAR: GPDMA channel 2 linked-list base address register
0x40020150 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x4002015C B  REGISTER GPDMA_C2FCR: GPDMA channel 2 flag clear register
0x4002015C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4002015C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4002015C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4002015C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4002015C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4002015C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4002015C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x40020160 B  REGISTER GPDMA_C2SR: GPDMA channel 2 status register
0x40020160 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x40020160 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x40020160 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x40020160 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x40020160 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x40020160 C   FIELD 12w01 USEF (ro): user setting error flag
0x40020160 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x40020160 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x40020160 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x40020164 B  REGISTER GPDMA_C2CR: GPDMA channel 2 control register
0x40020164 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x40020164 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x40020164 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x40020164 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x40020164 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x40020164 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x40020164 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x40020164 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x40020164 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x40020164 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x40020164 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020164 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020164 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020190 B  REGISTER GPDMA_C2TR1: GPDMA channel 2 transfer register 1
0x40020190 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020190 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020190 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020190 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020190 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020190 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020190 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020190 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020190 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020190 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020190 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020190 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020190 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020190 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020194 B  REGISTER GPDMA_C2TR2: GPDMA channel 2 transfer register 2
0x40020194 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020194 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020194 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020194 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020194 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020194 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020194 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020194 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020198 B  REGISTER GPDMA_C2BR1: GPDMA channel 2 block register 1
0x40020198 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002019C B  REGISTER GPDMA_C2SAR: GPDMA channel 2 source address register
0x4002019C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400201A0 B  REGISTER GPDMA_C2DAR: GPDMA channel 2 destination address register
0x400201A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400201CC B  REGISTER GPDMA_C2LLR: GPDMA channel 2 linked-list address register
0x400201CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x400201CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x400201CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x400201CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x400201CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x400201CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x400201CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x400201D0 B  REGISTER GPDMA_C3LBAR: GPDMA channel 3 linked-list base address register
0x400201D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x400201DC B  REGISTER GPDMA_C3FCR: GPDMA channel 3 flag clear register
0x400201DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x400201DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x400201DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x400201DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x400201DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x400201DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x400201DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x400201E0 B  REGISTER GPDMA_C3SR: GPDMA channel 3 status register
0x400201E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x400201E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x400201E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x400201E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x400201E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x400201E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x400201E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x400201E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x400201E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x400201E4 B  REGISTER GPDMA_C3CR: GPDMA channel 3 control register
0x400201E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x400201E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x400201E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x400201E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x400201E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x400201E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x400201E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x400201E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x400201E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x400201E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x400201E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400201E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400201E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020210 B  REGISTER GPDMA_C3TR1: GPDMA channel 3 transfer register 1
0x40020210 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020210 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020210 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020210 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020210 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020210 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020210 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020210 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020210 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020210 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020210 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020210 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020210 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020210 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020214 B  REGISTER GPDMA_C3TR2: GPDMA channel 3 transfer register 2
0x40020214 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020214 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020214 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020214 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020214 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020214 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020214 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020214 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020218 B  REGISTER GPDMA_C3BR1: GPDMA channel 3 block register 1
0x40020218 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002021C B  REGISTER GPDMA_C3SAR: GPDMA channel 3 source address register
0x4002021C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020220 B  REGISTER GPDMA_C3DAR: GPDMA channel 3 destination address register
0x40020220 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x4002024C B  REGISTER GPDMA_C3LLR: GPDMA channel 3 linked-list address register
0x4002024C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4002024C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x4002024C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x4002024C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x4002024C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x4002024C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x4002024C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x40020250 B  REGISTER GPDMA_C4LBAR: GPDMA channel 4 linked-list base address register
0x40020250 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x4002025C B  REGISTER GPDMA_C4FCR: GPDMA channel 4 flag clear register
0x4002025C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4002025C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4002025C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4002025C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4002025C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4002025C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4002025C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x40020260 B  REGISTER GPDMA_C4SR: GPDMA channel 4 status register
0x40020260 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x40020260 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x40020260 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x40020260 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x40020260 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x40020260 C   FIELD 12w01 USEF (ro): user setting error flag
0x40020260 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x40020260 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x40020260 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x40020264 B  REGISTER GPDMA_C4CR: GPDMA channel 4 control register
0x40020264 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x40020264 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x40020264 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x40020264 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x40020264 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x40020264 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x40020264 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x40020264 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x40020264 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x40020264 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x40020264 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020264 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020264 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020290 B  REGISTER GPDMA_C4TR1: GPDMA channel 4 transfer register 1
0x40020290 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020290 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020290 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020290 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020290 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020290 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020290 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020290 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020290 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020290 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020290 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020290 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020290 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020290 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020294 B  REGISTER GPDMA_C4TR2: GPDMA channel 4 transfer register 2
0x40020294 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020294 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020294 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020294 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020294 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020294 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020294 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020294 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020298 B  REGISTER GPDMA_C4BR1: GPDMA channel 4 block register 1
0x40020298 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002029C B  REGISTER GPDMA_C4SAR: GPDMA channel 4 source address register
0x4002029C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400202A0 B  REGISTER GPDMA_C4DAR: GPDMA channel 4 destination address register
0x400202A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400202CC B  REGISTER GPDMA_C4LLR: GPDMA channel 4 linked-list address register
0x400202CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x400202CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x400202CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x400202CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x400202CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x400202CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x400202CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x400202D0 B  REGISTER GPDMA_C5LBAR: GPDMA channel 5 linked-list base address register
0x400202D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x400202DC B  REGISTER GPDMA_C5FCR: GPDMA channel 5 flag clear register
0x400202DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x400202DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x400202DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x400202DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x400202DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x400202DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x400202DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x400202E0 B  REGISTER GPDMA_C5SR: GPDMA channel 5 status register
0x400202E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x400202E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x400202E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x400202E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x400202E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x400202E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x400202E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x400202E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x400202E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x400202E4 B  REGISTER GPDMA_C5CR: GPDMA channel 5 control register
0x400202E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x400202E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x400202E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x400202E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x400202E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x400202E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x400202E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x400202E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x400202E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x400202E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x400202E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400202E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400202E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020310 B  REGISTER GPDMA_C5TR1: GPDMA channel 5 transfer register 1
0x40020310 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020310 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020310 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020310 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020310 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020310 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020310 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020310 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020310 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020310 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020310 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020310 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020310 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020310 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020314 B  REGISTER GPDMA_C5TR2: GPDMA channel 5 transfer register 2
0x40020314 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020314 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020314 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020314 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020314 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020314 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020314 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020314 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020318 B  REGISTER GPDMA_C5BR1: GPDMA channel 5 block register 1
0x40020318 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002031C B  REGISTER GPDMA_C5SAR: GPDMA channel 5 source address register
0x4002031C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020320 B  REGISTER GPDMA_C5DAR: GPDMA channel 5 destination address register
0x40020320 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x4002034C B  REGISTER GPDMA_C5LLR: GPDMA channel 5 linked-list address register
0x4002034C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4002034C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x4002034C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x4002034C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x4002034C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x4002034C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x4002034C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x40020350 B  REGISTER GPDMA_C6LBAR: GPDMA channel 6 linked-list base address register
0x40020350 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x4002035C B  REGISTER GPDMA_C6FCR: GPDMA channel 6 flag clear register
0x4002035C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4002035C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4002035C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4002035C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4002035C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4002035C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4002035C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x40020360 B  REGISTER GPDMA_C6SR: GPDMA channel 6 status register
0x40020360 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x40020360 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x40020360 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x40020360 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x40020360 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x40020360 C   FIELD 12w01 USEF (ro): user setting error flag
0x40020360 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x40020360 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x40020360 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x40020364 B  REGISTER GPDMA_C6CR: GPDMA channel 6 control register
0x40020364 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x40020364 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x40020364 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x40020364 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x40020364 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x40020364 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x40020364 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x40020364 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x40020364 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x40020364 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x40020364 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020364 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020364 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020390 B  REGISTER GPDMA_C6TR1: GPDMA channel 6 transfer register 1
0x40020390 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020390 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020390 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020390 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020390 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020390 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020390 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020390 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020390 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020390 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020390 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020390 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020390 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020390 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020394 B  REGISTER GPDMA_C6TR2: GPDMA channel 6 transfer register 2
0x40020394 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020394 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020394 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020394 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020394 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020394 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020394 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020394 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020398 B  REGISTER GPDMA_C6BR1: GPDMA channel 6 block register 1
0x40020398 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002039C B  REGISTER GPDMA_C6SAR: GPDMA channel 6 source address register
0x4002039C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400203A0 B  REGISTER GPDMA_C6DAR: GPDMA channel 6 destination address register
0x400203A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400203CC B  REGISTER GPDMA_C6LLR: GPDMA channel 6 linked-list address register
0x400203CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x400203CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x400203CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x400203CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x400203CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x400203CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x400203CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x400203D0 B  REGISTER GPDMA_C7LBAR: GPDMA channel 7 linked-list base address register
0x400203D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x400203DC B  REGISTER GPDMA_C7FCR: GPDMA channel 7 flag clear register
0x400203DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x400203DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x400203DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x400203DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x400203DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x400203DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x400203DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x400203E0 B  REGISTER GPDMA_C7SR: GPDMA channel 7 status register
0x400203E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x400203E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x400203E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x400203E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x400203E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x400203E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x400203E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x400203E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x400203E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x400203E4 B  REGISTER GPDMA_C7CR: GPDMA channel 7 control register
0x400203E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x400203E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x400203E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x400203E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x400203E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x400203E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x400203E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x400203E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x400203E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x400203E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x400203E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400203E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400203E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020410 B  REGISTER GPDMA_C7TR1: GPDMA channel 7 transfer register 1
0x40020410 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020410 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020410 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020410 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020410 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020410 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020410 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020410 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020410 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020410 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020410 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020410 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020410 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020410 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020414 B  REGISTER GPDMA_C7TR2: GPDMA channel 7 transfer register 2
0x40020414 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020414 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020414 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020414 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020414 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020414 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020414 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020414 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020418 B  REGISTER GPDMA_C7BR1: GPDMA channel 7 block register 1
0x40020418 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002041C B  REGISTER GPDMA_C7SAR: GPDMA channel 7 source address register
0x4002041C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020420 B  REGISTER GPDMA_C7DAR: GPDMA channel 7 destination address register
0x40020420 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x4002044C B  REGISTER GPDMA_C7LLR: GPDMA channel 7 linked-list address register
0x4002044C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4002044C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x4002044C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x4002044C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x4002044C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x4002044C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x4002044C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x40020450 B  REGISTER GPDMA_C8LBAR: GPDMA channel 8 linked-list base address register
0x40020450 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x4002045C B  REGISTER GPDMA_C8FCR: GPDMA channel 8 flag clear register
0x4002045C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4002045C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4002045C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4002045C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4002045C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4002045C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4002045C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x40020460 B  REGISTER GPDMA_C8SR: GPDMA channel 8 status register
0x40020460 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x40020460 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x40020460 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x40020460 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x40020460 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x40020460 C   FIELD 12w01 USEF (ro): user setting error flag
0x40020460 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x40020460 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x40020460 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x40020464 B  REGISTER GPDMA_C8CR: GPDMA channel 8 control register
0x40020464 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x40020464 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x40020464 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x40020464 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x40020464 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x40020464 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x40020464 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x40020464 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x40020464 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x40020464 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x40020464 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020464 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020464 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020490 B  REGISTER GPDMA_C8TR1: GPDMA channel 8 transfer register 1
0x40020490 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020490 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020490 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020490 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020490 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020490 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020490 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020490 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020490 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020490 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020490 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020490 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020490 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020490 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020494 B  REGISTER GPDMA_C8TR2: GPDMA channel 8 transfer register 2
0x40020494 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020494 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020494 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020494 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020494 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020494 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020494 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020494 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020498 B  REGISTER GPDMA_C8BR1: GPDMA channel 8 block register 1
0x40020498 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002049C B  REGISTER GPDMA_C8SAR: GPDMA channel 8 source address register
0x4002049C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400204A0 B  REGISTER GPDMA_C8DAR: GPDMA channel 8 destination address register
0x400204A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400204CC B  REGISTER GPDMA_C8LLR: GPDMA channel 8 linked-list address register
0x400204CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x400204CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x400204CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x400204CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x400204CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x400204CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x400204CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x400204D0 B  REGISTER GPDMA_C9LBAR: GPDMA channel 9 linked-list base address register
0x400204D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x400204DC B  REGISTER GPDMA_C9FCR: GPDMA channel 9 flag clear register
0x400204DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x400204DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x400204DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x400204DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x400204DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x400204DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x400204DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x400204E0 B  REGISTER GPDMA_C9SR: GPDMA channel 9 status register
0x400204E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x400204E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x400204E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x400204E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x400204E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x400204E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x400204E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x400204E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x400204E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x400204E4 B  REGISTER GPDMA_C9CR: GPDMA channel 9 control register
0x400204E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x400204E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x400204E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x400204E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x400204E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x400204E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x400204E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x400204E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x400204E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x400204E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x400204E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400204E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400204E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020510 B  REGISTER GPDMA_C9TR1: GPDMA channel 9 transfer register 1
0x40020510 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020510 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020510 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020510 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020510 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020510 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020510 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020510 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020510 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020510 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020510 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020510 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020510 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020510 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020514 B  REGISTER GPDMA_C9TR2: GPDMA channel 9 transfer register 2
0x40020514 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020514 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020514 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020514 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020514 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020514 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020514 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020514 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020518 B  REGISTER GPDMA_C9BR1: GPDMA channel 9 block register 1
0x40020518 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002051C B  REGISTER GPDMA_C9SAR: GPDMA channel 9 source address register
0x4002051C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020520 B  REGISTER GPDMA_C9DAR: GPDMA channel 9 destination address register
0x40020520 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x4002054C B  REGISTER GPDMA_C9LLR: GPDMA channel 9 linked-list address register
0x4002054C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4002054C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x4002054C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x4002054C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x4002054C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x4002054C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x4002054C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x40020550 B  REGISTER GPDMA_C10LBAR: GPDMA channel 10 linked-list base address register
0x40020550 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x4002055C B  REGISTER GPDMA_C10FCR: GPDMA channel 10 flag clear register
0x4002055C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4002055C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4002055C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4002055C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4002055C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4002055C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4002055C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x40020560 B  REGISTER GPDMA_C10SR: GPDMA channel 10 status register
0x40020560 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x40020560 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x40020560 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x40020560 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x40020560 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x40020560 C   FIELD 12w01 USEF (ro): user setting error flag
0x40020560 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x40020560 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x40020560 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x40020564 B  REGISTER GPDMA_C10CR: GPDMA channel 10 control register
0x40020564 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x40020564 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x40020564 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x40020564 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x40020564 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x40020564 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x40020564 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x40020564 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x40020564 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x40020564 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x40020564 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020564 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020564 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020590 B  REGISTER GPDMA_C10TR1: GPDMA channel 10 transfer register 1
0x40020590 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020590 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020590 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020590 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020590 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020590 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020590 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020590 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020590 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020590 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020590 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020590 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020590 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020590 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020594 B  REGISTER GPDMA_C10TR2: GPDMA channel 10 transfer register 2
0x40020594 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020594 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020594 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020594 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020594 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020594 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020594 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020594 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020598 B  REGISTER GPDMA_C10BR1: GPDMA channel 10 block register 1
0x40020598 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002059C B  REGISTER GPDMA_C10SAR: GPDMA channel 10 source address register
0x4002059C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400205A0 B  REGISTER GPDMA_C10DAR: GPDMA channel 10 destination address register
0x400205A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400205CC B  REGISTER GPDMA_C10LLR: GPDMA channel 10 linked-list address register
0x400205CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x400205CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x400205CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x400205CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x400205CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x400205CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x400205CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x400205D0 B  REGISTER GPDMA_C11LBAR: GPDMA channel 11 linked-list base address register
0x400205D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x400205DC B  REGISTER GPDMA_C11FCR: GPDMA channel 11 flag clear register
0x400205DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x400205DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x400205DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x400205DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x400205DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x400205DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x400205DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x400205E0 B  REGISTER GPDMA_C11SR: GPDMA channel 11 status register
0x400205E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x400205E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x400205E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x400205E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x400205E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x400205E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x400205E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x400205E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x400205E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x400205E4 B  REGISTER GPDMA_C11CR: GPDMA channel 11 control register
0x400205E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x400205E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x400205E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x400205E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x400205E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x400205E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x400205E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x400205E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x400205E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x400205E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x400205E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400205E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400205E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020610 B  REGISTER GPDMA_C11TR1: GPDMA channel 11 transfer register 1
0x40020610 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020610 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020610 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020610 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020610 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020610 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020610 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020610 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020610 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020610 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020610 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020610 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020610 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020610 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020614 B  REGISTER GPDMA_C11TR2: GPDMA channel 11 transfer register 2
0x40020614 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020614 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020614 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020614 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020614 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020614 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020614 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020614 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020618 B  REGISTER GPDMA_C11BR1: GPDMA channel 11 block register 1
0x40020618 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002061C B  REGISTER GPDMA_C11SAR: GPDMA channel 11 source address register
0x4002061C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020620 B  REGISTER GPDMA_C11DAR: GPDMA channel 11 destination address register
0x40020620 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x4002064C B  REGISTER GPDMA_C11LLR: GPDMA channel 11 linked-list address register
0x4002064C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4002064C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x4002064C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x4002064C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x4002064C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x4002064C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x4002064C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x40020650 B  REGISTER GPDMA_C12LBAR: GPDMA channel 12 linked-list base address register
0x40020650 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x4002065C B  REGISTER GPDMA_C12FCR: GPDMA channel 12 flag clear register
0x4002065C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4002065C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4002065C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4002065C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4002065C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4002065C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4002065C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x40020660 B  REGISTER GPDMA_C12SR: GPDMA channel 12 status register
0x40020660 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x40020660 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x40020660 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x40020660 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x40020660 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x40020660 C   FIELD 12w01 USEF (ro): user setting error flag
0x40020660 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x40020660 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x40020660 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x40020664 B  REGISTER GPDMA_C12CR: GPDMA channel 12 control register
0x40020664 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x40020664 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x40020664 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x40020664 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x40020664 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x40020664 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x40020664 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x40020664 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x40020664 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x40020664 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x40020664 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020664 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020664 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020690 B  REGISTER GPDMA_C12TR1: GPDMA channel 12 transfer register 1
0x40020690 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020690 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020690 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020690 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020690 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020690 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020690 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020690 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020690 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020690 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020690 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020690 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020690 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020690 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020694 B  REGISTER GPDMA_C12TR2: GPDMA channel 12 transfer register 2
0x40020694 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020694 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020694 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020694 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020694 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020694 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020694 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020694 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020698 B  REGISTER GPDMA_C12BR1: GPDMA channel 12 alternate block register 1
0x40020698 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x40020698 C   FIELD 16w11 BRC (rw): Block repeat counter This field contains the number of repetitions of the current block (0 to 2047). When the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer. Once the last block transfer is completed (BRC[10:0] = BNDT[15:0] = 0): If GPDMA_CxLLR.UB1 = 1, all GPDMA_CxBR1 fields are updated by the next LLI in the memory. If GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI and data transfer.
0x40020698 C   FIELD 28w01 SDEC (rw): source address decrement
0x40020698 C   FIELD 29w01 DDEC (rw): destination address decrement
0x40020698 C   FIELD 30w01 BRSDEC (rw): Block repeat source address decrement Note: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer.
0x40020698 C   FIELD 31w01 BRDDEC (rw): Block repeat destination address decrement Note: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer.
0x4002069C B  REGISTER GPDMA_C12SAR: GPDMA channel 12 source address register
0x4002069C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400206A0 B  REGISTER GPDMA_C12DAR: GPDMA channel 12 destination address register
0x400206A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400206A4 B  REGISTER GPDMA_C12TR3: GPDMA channel 12 transfer register 3
0x400206A4 C   FIELD 00w13 SAO (rw): source address offset increment The source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC = 1). Note: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued. When the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400206A4 C   FIELD 16w13 DAO (rw): destination address offset increment The destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC = 1). Note: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400206A8 B  REGISTER GPDMA_C12BR2: GPDMA channel 12 block register 2
0x400206A8 C   FIELD 00w16 BRSAO (rw): Block repeated source address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer. Note: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x400206A8 C   FIELD 16w16 BRDAO (rw): Block repeated destination address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer. Note: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x400206CC B  REGISTER GPDMA_C12LLR: GPDMA channel 12 alternate linked-list address register
0x400206CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x400206CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x400206CC C   FIELD 25w01 UB2 (rw): Update GPDMA_CxBR2 from memory This bit controls the update of GPDMA_CxBR2 from the memory during the link transfer.
0x400206CC C   FIELD 26w01 UT3 (rw): Update GPDMA_CxTR3 from memory This bit controls the update of GPDMA_CxTR3 from the memory during the link transfer.
0x400206CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x400206CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x400206CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x400206CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x400206CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x400206D0 B  REGISTER GPDMA_C13LBAR: GPDMA channel 13 linked-list base address register
0x400206D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x400206DC B  REGISTER GPDMA_C13FCR: GPDMA channel 13 flag clear register
0x400206DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x400206DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x400206DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x400206DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x400206DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x400206DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x400206DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x400206E0 B  REGISTER GPDMA_C13SR: GPDMA channel 13 status register
0x400206E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x400206E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x400206E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x400206E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x400206E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x400206E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x400206E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x400206E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x400206E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x400206E4 B  REGISTER GPDMA_C13CR: GPDMA channel 13 control register
0x400206E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x400206E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x400206E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x400206E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x400206E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x400206E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x400206E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x400206E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x400206E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x400206E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x400206E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400206E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400206E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020710 B  REGISTER GPDMA_C13TR1: GPDMA channel 13 transfer register 1
0x40020710 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020710 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020710 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020710 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020710 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020710 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020710 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020710 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020710 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020710 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020710 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020710 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020710 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020710 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020714 B  REGISTER GPDMA_C13TR2: GPDMA channel 13 transfer register 2
0x40020714 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020714 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020714 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020714 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020714 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020714 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020714 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020714 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020718 B  REGISTER GPDMA_C13BR1: GPDMA channel 13 alternate block register 1
0x40020718 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x40020718 C   FIELD 16w11 BRC (rw): Block repeat counter This field contains the number of repetitions of the current block (0 to 2047). When the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer. Once the last block transfer is completed (BRC[10:0] = BNDT[15:0] = 0): If GPDMA_CxLLR.UB1 = 1, all GPDMA_CxBR1 fields are updated by the next LLI in the memory. If GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI and data transfer.
0x40020718 C   FIELD 28w01 SDEC (rw): source address decrement
0x40020718 C   FIELD 29w01 DDEC (rw): destination address decrement
0x40020718 C   FIELD 30w01 BRSDEC (rw): Block repeat source address decrement Note: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer.
0x40020718 C   FIELD 31w01 BRDDEC (rw): Block repeat destination address decrement Note: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer.
0x4002071C B  REGISTER GPDMA_C13SAR: GPDMA channel 13 source address register
0x4002071C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020720 B  REGISTER GPDMA_C13DAR: GPDMA channel 13 destination address register
0x40020720 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x40020724 B  REGISTER GPDMA_C13TR3: GPDMA channel 13 transfer register 3
0x40020724 C   FIELD 00w13 SAO (rw): source address offset increment The source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC = 1). Note: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued. When the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020724 C   FIELD 16w13 DAO (rw): destination address offset increment The destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC = 1). Note: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x40020728 B  REGISTER GPDMA_C13BR2: GPDMA channel 13 block register 2
0x40020728 C   FIELD 00w16 BRSAO (rw): Block repeated source address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer. Note: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x40020728 C   FIELD 16w16 BRDAO (rw): Block repeated destination address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer. Note: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002074C B  REGISTER GPDMA_C13LLR: GPDMA channel 13 alternate linked-list address register
0x4002074C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4002074C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x4002074C C   FIELD 25w01 UB2 (rw): Update GPDMA_CxBR2 from memory This bit controls the update of GPDMA_CxBR2 from the memory during the link transfer.
0x4002074C C   FIELD 26w01 UT3 (rw): Update GPDMA_CxTR3 from memory This bit controls the update of GPDMA_CxTR3 from the memory during the link transfer.
0x4002074C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x4002074C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x4002074C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x4002074C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x4002074C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x40020750 B  REGISTER GPDMA_C14LBAR: GPDMA channel 14 linked-list base address register
0x40020750 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x4002075C B  REGISTER GPDMA_C14FCR: GPDMA channel 14 flag clear register
0x4002075C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4002075C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4002075C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4002075C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4002075C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4002075C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4002075C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x40020760 B  REGISTER GPDMA_C14SR: GPDMA channel 14 status register
0x40020760 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x40020760 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x40020760 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x40020760 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x40020760 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x40020760 C   FIELD 12w01 USEF (ro): user setting error flag
0x40020760 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x40020760 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x40020760 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x40020764 B  REGISTER GPDMA_C14CR: GPDMA channel 14 control register
0x40020764 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x40020764 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x40020764 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x40020764 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x40020764 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x40020764 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x40020764 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x40020764 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x40020764 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x40020764 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x40020764 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020764 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x40020764 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020790 B  REGISTER GPDMA_C14TR1: GPDMA channel 14 transfer register 1
0x40020790 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020790 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020790 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020790 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020790 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020790 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020790 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020790 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020790 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020790 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020790 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020790 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020790 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020790 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020794 B  REGISTER GPDMA_C14TR2: GPDMA channel 14 transfer register 2
0x40020794 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020794 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020794 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020794 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020794 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020794 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020794 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020794 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020798 B  REGISTER GPDMA_C14BR1: GPDMA channel 14 alternate block register 1
0x40020798 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x40020798 C   FIELD 16w11 BRC (rw): Block repeat counter This field contains the number of repetitions of the current block (0 to 2047). When the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer. Once the last block transfer is completed (BRC[10:0] = BNDT[15:0] = 0): If GPDMA_CxLLR.UB1 = 1, all GPDMA_CxBR1 fields are updated by the next LLI in the memory. If GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI and data transfer.
0x40020798 C   FIELD 28w01 SDEC (rw): source address decrement
0x40020798 C   FIELD 29w01 DDEC (rw): destination address decrement
0x40020798 C   FIELD 30w01 BRSDEC (rw): Block repeat source address decrement Note: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer.
0x40020798 C   FIELD 31w01 BRDDEC (rw): Block repeat destination address decrement Note: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer.
0x4002079C B  REGISTER GPDMA_C14SAR: GPDMA channel 14 source address register
0x4002079C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400207A0 B  REGISTER GPDMA_C14DAR: GPDMA channel 14 destination address register
0x400207A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400207A4 B  REGISTER GPDMA_C14TR3: GPDMA channel 14 transfer register 3
0x400207A4 C   FIELD 00w13 SAO (rw): source address offset increment The source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC = 1). Note: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued. When the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x400207A4 C   FIELD 16w13 DAO (rw): destination address offset increment The destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC = 1). Note: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x400207A8 B  REGISTER GPDMA_C14BR2: GPDMA channel 14 block register 2
0x400207A8 C   FIELD 00w16 BRSAO (rw): Block repeated source address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer. Note: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x400207A8 C   FIELD 16w16 BRDAO (rw): Block repeated destination address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer. Note: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x400207CC B  REGISTER GPDMA_C14LLR: GPDMA channel 14 alternate linked-list address register
0x400207CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x400207CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x400207CC C   FIELD 25w01 UB2 (rw): Update GPDMA_CxBR2 from memory This bit controls the update of GPDMA_CxBR2 from the memory during the link transfer.
0x400207CC C   FIELD 26w01 UT3 (rw): Update GPDMA_CxTR3 from memory This bit controls the update of GPDMA_CxTR3 from the memory during the link transfer.
0x400207CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x400207CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x400207CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x400207CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x400207CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x400207D0 B  REGISTER GPDMA_C15LBAR: GPDMA channel 15 linked-list base address register
0x400207D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x400207DC B  REGISTER GPDMA_C15FCR: GPDMA channel 15 flag clear register
0x400207DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x400207DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x400207DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x400207DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x400207DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x400207DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x400207DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x400207E0 B  REGISTER GPDMA_C15SR: GPDMA channel 15 status register
0x400207E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x400207E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x400207E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x400207E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x400207E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x400207E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x400207E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x400207E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x400207E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x400207E4 B  REGISTER GPDMA_C15CR: GPDMA channel 15 control register
0x400207E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x400207E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x400207E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x400207E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x400207E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x400207E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x400207E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x400207E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x400207E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x400207E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x400207E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400207E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x400207E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020810 B  REGISTER GPDMA_C15TR1: GPDMA channel 15 transfer register 1
0x40020810 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x40020810 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020810 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020810 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x40020810 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x40020810 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020810 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x40020810 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x40020810 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x40020810 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x40020810 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x40020810 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x40020810 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x40020810 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x40020814 B  REGISTER GPDMA_C15TR2: GPDMA channel 15 transfer register 2
0x40020814 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x40020814 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x40020814 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x40020814 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x40020814 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x40020814 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x40020814 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x40020814 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x40020818 B  REGISTER GPDMA_C15BR1: GPDMA channel 15 alternate block register 1
0x40020818 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x40020818 C   FIELD 16w11 BRC (rw): Block repeat counter This field contains the number of repetitions of the current block (0 to 2047). When the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer. Once the last block transfer is completed (BRC[10:0] = BNDT[15:0] = 0): If GPDMA_CxLLR.UB1 = 1, all GPDMA_CxBR1 fields are updated by the next LLI in the memory. If GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI and data transfer.
0x40020818 C   FIELD 28w01 SDEC (rw): source address decrement
0x40020818 C   FIELD 29w01 DDEC (rw): destination address decrement
0x40020818 C   FIELD 30w01 BRSDEC (rw): Block repeat source address decrement Note: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer.
0x40020818 C   FIELD 31w01 BRDDEC (rw): Block repeat destination address decrement Note: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer.
0x4002081C B  REGISTER GPDMA_C15SAR: GPDMA channel 15 source address register
0x4002081C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020820 B  REGISTER GPDMA_C15DAR: GPDMA channel 15 destination address register
0x40020820 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x40020824 B  REGISTER GPDMA_C15TR3: GPDMA channel 15 transfer register 3
0x40020824 C   FIELD 00w13 SAO (rw): source address offset increment The source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC = 1). Note: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued. When the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x40020824 C   FIELD 16w13 DAO (rw): destination address offset increment The destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC = 1). Note: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x40020828 B  REGISTER GPDMA_C15BR2: GPDMA channel 15 block register 2
0x40020828 C   FIELD 00w16 BRSAO (rw): Block repeated source address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer. Note: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x40020828 C   FIELD 16w16 BRDAO (rw): Block repeated destination address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer. Note: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x4002084C B  REGISTER GPDMA_C15LLR: GPDMA channel 15 alternate linked-list address register
0x4002084C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4002084C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x4002084C C   FIELD 25w01 UB2 (rw): Update GPDMA_CxBR2 from memory This bit controls the update of GPDMA_CxBR2 from the memory during the link transfer.
0x4002084C C   FIELD 26w01 UT3 (rw): Update GPDMA_CxTR3 from memory This bit controls the update of GPDMA_CxTR3 from the memory during the link transfer.
0x4002084C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x4002084C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x4002084C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x4002084C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x4002084C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x40021000 A PERIPHERAL CORDIC
0x40021000 B  REGISTER CSR: CORDIC Control Status register
0x40021000 C   FIELD 00w04 FUNC (rw): Function
0x40021000 C   FIELD 04w04 PRECISION (rw): Precision required (number of iterations)
0x40021000 C   FIELD 08w03 SCALE (rw): Scaling factor
0x40021000 C   FIELD 16w01 IEN (rw): Enable interrupt
0x40021000 C   FIELD 17w01 DMAREN (rw): Enable DMA read channel
0x40021000 C   FIELD 18w01 DMAWEN (rw): Enable DMA write channel
0x40021000 C   FIELD 19w01 NRES (rw): Number of results in the CORDIC_RDATA register
0x40021000 C   FIELD 20w01 NARGS (rw): Number of arguments expected by the CORDIC_WDATA register
0x40021000 C   FIELD 21w01 RESSIZE (rw): Width of output data
0x40021000 C   FIELD 22w01 ARGSIZE (rw): Width of input data
0x40021000 C   FIELD 31w01 RRDY (ro): Result ready flag
0x40021004 B  REGISTER WDATA (wo): FMAC Write Data register
0x40021004 C   FIELD 00w32 ARG: Function input arguments
0x40021008 B  REGISTER RDATA (ro): FMAC Read Data register
0x40021008 C   FIELD 00w32 RES: Function result
0x40021400 A PERIPHERAL FMAC
0x40021400 B  REGISTER X1BUFCFG (rw): FMAC X1 Buffer Configuration register
0x40021400 C   FIELD 00w08 X1_BASE: Base address of X1 buffer
0x40021400 C   FIELD 08w08 X1_BUF_SIZE: Allocated size of X1 buffer in 16-bit words
0x40021400 C   FIELD 24w02 FULL_WM: Watermark for buffer full flag
0x40021404 B  REGISTER X2BUFCFG (rw): FMAC X2 Buffer Configuration register
0x40021404 C   FIELD 00w08 X2_BASE: Base address of X2 buffer
0x40021404 C   FIELD 08w08 X2_BUF_SIZE: Size of X2 buffer in 16-bit words
0x40021408 B  REGISTER YBUFCFG (rw): FMAC Y Buffer Configuration register
0x40021408 C   FIELD 00w08 Y_BASE: Base address of Y buffer
0x40021408 C   FIELD 08w08 Y_BUF_SIZE: Size of Y buffer in 16-bit words
0x40021408 C   FIELD 24w02 EMPTY_WM: Watermark for buffer empty flag
0x4002140C B  REGISTER PARAM (rw): FMAC Parameter register
0x4002140C C   FIELD 00w08 P: Input parameter P
0x4002140C C   FIELD 08w08 Q: Input parameter Q
0x4002140C C   FIELD 16w08 R: Input parameter R
0x4002140C C   FIELD 24w07 FUNC: Function
0x4002140C C   FIELD 31w01 START: Enable execution
0x40021410 B  REGISTER CR (rw): FMAC Control register
0x40021410 C   FIELD 00w01 RIEN: Enable read interrupt
0x40021410 C   FIELD 01w01 WIEN: Enable write interrupt
0x40021410 C   FIELD 02w01 OVFLIEN: Enable overflow error interrupts
0x40021410 C   FIELD 03w01 UNFLIEN: Enable underflow error interrupts
0x40021410 C   FIELD 04w01 SATIEN: Enable saturation error interrupts
0x40021410 C   FIELD 08w01 DMAREN: Enable DMA read channel requests
0x40021410 C   FIELD 09w01 DMAWEN: Enable DMA write channel requests
0x40021410 C   FIELD 15w01 CLIPEN: Enable clipping
0x40021410 C   FIELD 16w01 RESET: Reset FMAC unit
0x40021414 B  REGISTER SR (ro): FMAC Status register
0x40021414 C   FIELD 00w01 YEMPTY: Y buffer empty flag
0x40021414 C   FIELD 01w01 X1FULL: X1 buffer full flag
0x40021414 C   FIELD 08w01 OVFL: Overflow error flag
0x40021414 C   FIELD 09w01 UNFL: Underflow error flag
0x40021414 C   FIELD 10w01 SAT: Saturation error flag
0x40021418 B  REGISTER WDATA (wo): FMAC Write Data register
0x40021418 C   FIELD 00w16 WDATA: Write data
0x4002141C B  REGISTER RDATA (ro): FMAC Read Data register
0x4002141C C   FIELD 00w16 RDATA: Read data
0x40022000 A PERIPHERAL FLASH
0x40022000 B  REGISTER FLASH_ACR: FLASH access control register
0x40022000 C   FIELD 00w04 LATENCY (rw): Latency These bits represent the ratio between the HCLK (AHB clock) period and the Flash memory access time. ...
0x40022000 C   FIELD 08w01 PRFTEN (rw): Prefetch enable This bit enables the prefetch buffer in the embedded Flash memory.
0x40022000 C   FIELD 11w01 LPM (rw): Low-power read mode This bit puts the Flash memory in low-power read mode.
0x40022000 C   FIELD 12w01 PDREQ1 (rw): Bank 1 power-down mode request This bit is write-protected with FLASH_PDKEY1R. This bit requests bank 1 to enter power-down mode. When bank 1 enters power-down mode, this bit is cleared by hardware and the PDKEY1R is locked.
0x40022000 C   FIELD 13w01 PDREQ2 (rw): Bank 2 power-down mode request This bit is write-protected with FLASH_PDKEY2R. This bit requests bank 2 to enter power-down mode. When bank 2 enters power-down mode, this bit is cleared by hardware and the PDKEY2R is locked.
0x40022000 C   FIELD 14w01 SLEEP_PD (rw): Flash memory power-down mode during Sleep mode This bit determines whether the Flash memory is in power-down mode or Idle mode when the device is in Sleep mode. The Flash must not be put in power-down while a program or an erase operation is on-going.
0x40022008 B  REGISTER FLASH_NSKEYR: FLASH non-secure key register
0x40022008 C   FIELD 00w32 NSKEY (wo): Flash memory non-secure key
0x4002200C B  REGISTER FLASH_SECKEYR: FLASH secure key register
0x4002200C C   FIELD 00w32 SECKEY (wo): Flash memory secure key
0x40022010 B  REGISTER FLASH_OPTKEYR: FLASH option key register
0x40022010 C   FIELD 00w32 OPTKEY (wo): Option byte key
0x40022018 B  REGISTER FLASH_PDKEY1R: FLASH bank 1 power-down key register
0x40022018 C   FIELD 00w32 PDKEY1 (wo): Bank 1 power-down key
0x4002201C B  REGISTER FLASH_PDKEY2R: FLASH bank 2 power-down key register
0x4002201C C   FIELD 00w32 PDKEY2 (wo): Bank 2 power-down key
0x40022020 B  REGISTER FLASH_NSSR: FLASH non-secure status register
0x40022020 C   FIELD 00w01 EOP (rw): Non-secure end of operation
0x40022020 C   FIELD 01w01 OPERR (rw): Non-secure operation error
0x40022020 C   FIELD 03w01 PROGERR (rw): Non-secure programming error This bit is set by hardware when a non-secure quad-word address to be programmed contains a value different from all 1 before programming, except if the data to write is all 0. This bit is cleared by writing 1.
0x40022020 C   FIELD 04w01 WRPERR (rw): Non-secure write protection error This bit is set by hardware when an non-secure address to be erased/programmed belongs to a write-protected part (by WRP, HDP or RDP level 1) of the Flash memory. This bit is cleared by writing 1. Refer to for full conditions of error flag setting.
0x40022020 C   FIELD 05w01 PGAERR (rw): Non-secure programming alignment error This bit is set by hardware when the first word to be programmed is not aligned with a quad-word address, or the second, third or forth word does not belong to the same quad-word address. This bit is cleared by writing 1.
0x40022020 C   FIELD 06w01 SIZERR (rw): Non-secure size error This bit is set by hardware when the size of the access is a byte or half-word during a non-secure program sequence. Only quad-word programming is allowed by means of successive word accesses. This bit is cleared by writing 1.
0x40022020 C   FIELD 07w01 PGSERR (rw): Non-secure programming sequence error This bit is set by hardware when programming sequence is not correct. It is cleared by writing 1. Refer to for full conditions of error flag setting.
0x40022020 C   FIELD 13w01 OPTWERR (rw): Option write error This bit is set by hardware when the options bytes are written with an invalid configuration. It is cleared by writing 1. Refer to for full conditions of error flag setting.
0x40022020 C   FIELD 16w01 BSY (ro): Non-secure busy This indicates that a Flash memory secure or non-secure operation is in progress. This bit is set at the beginning of a Flash operation and reset when the operation finishes or when an error occurs.
0x40022020 C   FIELD 17w01 WDW (ro): Non-secure wait data to write This bit indicates that the Flash memory write buffer has been written by a secure or non-secure operation. It is set when the first data is stored in the buffer and cleared when the write is performed in the Flash memory.
0x40022020 C   FIELD 18w01 OEM1LOCK (ro): OEM1 lock This bit indicates that the OEM1 RDP key read during the OBL is not virgin. When set, the OEM1 RDP lock mechanism is active.
0x40022020 C   FIELD 19w01 OEM2LOCK (ro): OEM2 lock This bit indicates that the OEM2 RDP key read during the OBL is not virgin. When set, the OEM2 RDP lock mechanism is active.
0x40022020 C   FIELD 20w01 PD1 (ro): Bank 1 in power-down mode This bit indicates that the Flash memory bank 1 is in power-down state. It is reset when bank 1 is in normal mode or being awaken.
0x40022020 C   FIELD 21w01 PD2 (ro): Bank 2 in power-down mode This bit indicates that the Flash memory bank 2 is in power-down state. It is reset when bank 2 is in normal mode or being awaken.
0x40022024 B  REGISTER FLASH_SECSR: FLASH secure status register
0x40022024 C   FIELD 00w01 EOP (rw): Secure end of operation This bit is set by hardware when one or more Flash memory secure operation (program/erase) has been completed successfully. This bit is set only if the secure end of operation interrupts are enabled (EOPIE = 1 in FLASH_SECCR). This bit is cleared by writing 1.
0x40022024 C   FIELD 01w01 OPERR (rw): Secure operation error This bit is set by hardware when a Flash memory secure operation (program/erase) completes unsuccessfully. This bit is set only if secure error interrupts are enabled (SECERRIE = 1). This bit is cleared by writing 1.
0x40022024 C   FIELD 03w01 PROGERR (rw): Secure programming error This bit is set by hardware when a secure quad-word address to be programmed contains a value different from all 1 before programming, except if the data to write is all 0. This bit is cleared by writing 1.
0x40022024 C   FIELD 04w01 WRPERR (rw): Secure write protection error This bit is set by hardware when an secure address to be erased/programmed belongs to a write-protected part (by WRP, PCROP, HDP or RDP level 1) of the Flash memory.This bit is cleared by writing 1. Refer to for full conditions of error flag setting.
0x40022024 C   FIELD 05w01 PGAERR (rw): Secure programming alignment error This bit is set by hardware when the first word to be programmed is not aligned with a quad-word address, or the second, third or forth word does not belong to the same quad-word address.This bit is cleared by writing 1.
0x40022024 C   FIELD 06w01 SIZERR (rw): Secure size error This bit is set by hardware when the size of the access is a byte or half-word during a secure program sequence. Only quad-word programming is allowed by means of successive word accesses.This bit is cleared by writing 1.
0x40022024 C   FIELD 07w01 PGSERR (rw): Secure programming sequence error This bit is set by hardware when programming sequence is not correct. It is cleared by writing 1. Refer to for full conditions of error flag setting.
0x40022024 C   FIELD 16w01 BSY (ro): Secure busy This bit indicates that a Flash memory secure or non-secure operation is in progress. This is set on the beginning of a Flash operation and reset when the operation finishes or when an error occurs.
0x40022024 C   FIELD 17w01 WDW (ro): Secure wait data to write This bit indicates that the Flash memory write buffer has been written by a secure or non-secure operation. It is set when the first data is stored in the buffer and cleared when the write is performed in the Flash memory.
0x40022028 B  REGISTER FLASH_NSCR: FLASH non-secure control register
0x40022028 C   FIELD 00w01 PG (rw): Non-secure programming
0x40022028 C   FIELD 01w01 PER (rw): Non-secure page erase
0x40022028 C   FIELD 02w01 MER1 (rw): Non-secure bank 1 mass erase This bit triggers the bank 1 non-secure mass erase (all bank 1 user pages) when set.
0x40022028 C   FIELD 03w07 PNB (rw): Non-secure page number selection These bits select the page to erase. ...
0x40022028 C   FIELD 11w01 BKER (rw): Non-secure bank selection for page erase
0x40022028 C   FIELD 14w01 BWR (rw): Non-secure burst write programming mode When set, this bit selects the burst write programming mode.
0x40022028 C   FIELD 15w01 MER2 (rw): Non-secure bank 2 mass erase This bit triggers the bank 2 non-secure mass erase (all bank 2 user pages) when set.
0x40022028 C   FIELD 16w01 STRT (rw): Non-secure start This bit triggers a non-secure erase operation when set. If MER1, MER2 and PER bits are reset and the STRT bit is set, the PGSERR bit in FLASH_NSSR is set (this condition is forbidden). This bit is set only by software and is cleared when the BSY bit is cleared in FLASH_NSSR.
0x40022028 C   FIELD 17w01 OPTSTRT (rw): Options modification start This bit triggers an options operation when set. It can not be written if OPTLOCK bit is set. This bit is set only by software, and is cleared when the BSY bit is cleared in FLASH_NSSR.
0x40022028 C   FIELD 24w01 EOPIE (rw): Non-secure end of operation interrupt enable This bit enables the interrupt generation when the EOP bit in the FLASH_NSSR is set to 1.
0x40022028 C   FIELD 25w01 ERRIE (rw): Non-secure error interrupt enable This bit enables the interrupt generation when the OPERR bit in the FLASH_NSSR is set to 1.
0x40022028 C   FIELD 27w01 OBL_LAUNCH (rw): Force the option byte loading When set to 1, this bit forces the option byte reloading. This bit is cleared only when the option byte loading is complete. It cannot be written if OPTLOCK is set.
0x40022028 C   FIELD 30w01 OPTLOCK (rw): Option lock This bit is set only. When set, all bits concerning user options in FLASH_NSCR register are locked. This bit is cleared by hardware after detecting the unlock sequence. The LOCK bit in the FLASH_NSCR must be cleared before doing the unlock sequence for OPTLOCK bit. In case of an unsuccessful unlock operation, this bit remains set until the next reset.
0x40022028 C   FIELD 31w01 LOCK (rw): Non-secure lock This bit is set only. When set, the FLASH_NSCR register is locked. It is cleared by hardware after detecting the unlock sequence in FLASH_NSKEYR register. In case of an unsuccessful unlock operation, this bit remains set until the next system reset.
0x4002202C B  REGISTER FLASH_SECCR: FLASH secure control register
0x4002202C C   FIELD 00w01 PG (rw): Secure programming
0x4002202C C   FIELD 01w01 PER (rw): Secure page erase
0x4002202C C   FIELD 02w01 MER1 (rw): Secure bank 1 mass erase This bit triggers the bank 1 secure mass erase (all bank 1 user pages) when set.
0x4002202C C   FIELD 03w07 PNB (rw): Secure page number selection These bits select the page to erase: ...
0x4002202C C   FIELD 11w01 BKER (rw): Secure bank selection for page erase
0x4002202C C   FIELD 14w01 BWR (rw): Secure burst write programming mode When set, this bit selects the burst write programming mode.
0x4002202C C   FIELD 15w01 MER2 (rw): Secure bank 2 mass erase This bit triggers the bank 2 secure mass erase (all bank 2 user pages) when set.
0x4002202C C   FIELD 16w01 STRT (rw): Secure start This bit triggers a secure erase operation when set. If MER1, MER2 and PER bits are reset and the STRT bit is set, the PGSERR in the FLASH_SECSR is set (this condition is forbidden). This bit is set only by software and is cleared when the BSY bit is cleared in FLASH_SECSR.
0x4002202C C   FIELD 24w01 EOPIE (rw): Secure End of operation interrupt enable This bit enables the interrupt generation when the EOP bit in the FLASH_SECSR is set to 1.
0x4002202C C   FIELD 25w01 ERRIE (rw): Secure error interrupt enable
0x4002202C C   FIELD 26w01 RDERRIE (rw): Secure PCROP read error interrupt enable
0x4002202C C   FIELD 29w01 INV (rw): Flash memory security state invert This bit inverts the Flash memory security state.
0x4002202C C   FIELD 31w01 LOCK (rw): Secure lock This bit is set only. When set, the FLASH_SECCR register is locked. It is cleared by hardware after detecting the unlock sequence in FLASH_SECKEYR register. In case of an unsuccessful unlock operation, this bit remains set until the next system reset.
0x40022030 B  REGISTER FLASH_ECCR: FLASH ECC register
0x40022030 C   FIELD 00w20 ADDR_ECC (ro): ECC fail address
0x40022030 C   FIELD 21w01 BK_ECC (ro): ECC fail bank
0x40022030 C   FIELD 22w01 SYSF_ECC (ro): System Flash memory ECC fail This bit indicates that the ECC error correction or double ECC error detection is located in the system Flash memory.
0x40022030 C   FIELD 24w01 ECCIE (rw): ECC correction interrupt enable This bit enables the interrupt generation when the ECCC bit in the FLASH_ECCR register is set.
0x40022030 C   FIELD 30w01 ECCC (rw): ECC correction This bit is set by hardware when one ECC error has been detected and corrected (only if ECCC and ECCD were previously cleared). An interrupt is generated if ECCIE is set. This bit is cleared by writing 1.
0x40022030 C   FIELD 31w01 ECCD (rw): ECC detection This bit is set by hardware when two ECC errors have been detected (only if ECCC and ECCD were previously cleared). When this bit is set, a NMI is generated. This bit is cleared by writing 1.
0x40022034 B  REGISTER FLASH_OPSR: FLASH operation status register
0x40022034 C   FIELD 00w20 ADDR_OP (ro): Interrupted operation address This field indicates which address in the Flash memory was accessed when reset occurred. The address is given by bank from address 0x0 0000 to 0xF FFF0.
0x40022034 C   FIELD 21w01 BK_OP (ro): Interrupted operation bank This bit indicates which Flash memory bank was accessed when reset occurred
0x40022034 C   FIELD 22w01 SYSF_OP (ro): Operation in system Flash memory interrupted This bit indicates that the reset occurred during an operation in the system Flash memory.
0x40022034 C   FIELD 29w03 CODE_OP (ro): Flash memory operation code This field indicates which Flash memory operation has been interrupted by a system reset:
0x40022040 B  REGISTER FLASH_OPTR: FLASH option register
0x40022040 C   FIELD 00w08 RDP (rw): Readout protection level Others: Level 1 (memories readout protection active) Note: Refer to for more details.
0x40022040 C   FIELD 08w03 BOR_LEV (rw): BOR reset level These bits contain the VDD supply level threshold that activates/releases the reset.
0x40022040 C   FIELD 12w01 nRST_STOP (rw): Reset generation in Stop mode
0x40022040 C   FIELD 13w01 nRST_STDBY (rw): Reset generation in Standby mode
0x40022040 C   FIELD 14w01 nRST_SHDW (rw): Reset generation in Shutdown mode
0x40022040 C   FIELD 15w01 SRAM1345_RST (rw): SRAM1, SRAM3 and SRAM4 erase upon system reset
0x40022040 C   FIELD 16w01 IWDG_SW (rw): Independent watchdog selection
0x40022040 C   FIELD 17w01 IWDG_STOP (rw): Independent watchdog counter freeze in Stop mode
0x40022040 C   FIELD 18w01 IWDG_STDBY (rw): Independent watchdog counter freeze in Standby mode
0x40022040 C   FIELD 19w01 WWDG_SW (rw): Window watchdog selection
0x40022040 C   FIELD 20w01 SWAP_BANK (rw): Swap banks
0x40022040 C   FIELD 21w01 DUALBANK (rw): Dual-bank on 1-Mbyte and 512-Kbyte Flash memory devices
0x40022040 C   FIELD 22w01 BKPRAM_ECC (rw): Backup RAM ECC detection and correction enable
0x40022040 C   FIELD 23w01 SRAM3_ECC (rw): SRAM3 ECC detection and correction enable
0x40022040 C   FIELD 24w01 SRAM2_ECC (rw): SRAM2 ECC detection and correction enable
0x40022040 C   FIELD 25w01 SRAM2_RST (rw): SRAM2 erase when system reset
0x40022040 C   FIELD 26w01 nSWBOOT0 (rw): Software BOOT0
0x40022040 C   FIELD 27w01 nBOOT0 (rw): nBOOT0 option bit
0x40022040 C   FIELD 28w01 PA15_PUPEN (rw): PA15 pull-up enable
0x40022040 C   FIELD 29w01 IO_VDD_HSLV (rw): High-speed IO at low VDD voltage configuration bit This bit can be set only with VDD below 2.5V
0x40022040 C   FIELD 30w01 IO_VDDIO2_HSLV (rw): High-speed IO at low VDDIO2 voltage configuration bit This bit can be set only with VDDIO2 below 2.5 V.
0x40022040 C   FIELD 31w01 TZEN (rw): Global TrustZone security enable
0x40022044 B  REGISTER FLASH_NSBOOTADD0R: FLASH non-secure boot address 0 register
0x40022044 C   FIELD 07w25 NSBOOTADD0 (rw): Non-secure boot base address 0 The non-secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. These bits correspond to address [31:7]. The NSBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state. Examples: NSBOOTADD0[24:0] = 0x0100000: Boot from non-secure Flash memory (0x0800 0000) NSBOOTADD0[24:0] = 0x017F200: Boot from system memory bootloader (0x0BF9 0000) NSBOOTADD0[24:0] = 0x0400000: Boot from non-secure SRAM1 on S-Bus (0x2000 0000)
0x40022048 B  REGISTER FLASH_NSBOOTADD1R: FLASH non-secure boot address 1 register
0x40022048 C   FIELD 07w25 NSBOOTADD1 (rw): Non-secure boot address 1 The non-secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. These bits correspond to address [31:7]. The NSBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state. Examples: NSBOOTADD1[24:0] = 0x0100000: Boot from non-secure Flash memory (0x0800 0000) NSBOOTADD1[24:0] = 0x017F200: Boot from system memory bootloader (0x0BF9 0000) NSBOOTADD1[24:0] = 0x0400000: Boot from non-secure SRAM1 on S-Bus (0x2000 0000)
0x4002204C B  REGISTER FLASH_SECBOOTADD0R: FLASH secure boot address 0 register
0x4002204C C   FIELD 00w01 BOOT_LOCK (rw): Boot lock When set, the boot is always forced to base address value programmed in SECBOOTADD0[24:0] option bytes whatever the boot selection option. When set, this bit can only be cleared by an RDP at level 0.
0x4002204C C   FIELD 07w25 SECBOOTADD0 (rw): Secure boot base address 0 The secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. This bits correspond to address [31:7] The SECBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state. Examples: SECBOOTADD0[24:0] = 0x018 0000: Boot from secure Flash memory (0x0C00 0000) SECBOOTADD0[24:0] = 0x01F F000: Boot from RSS (0x0FF8 0000) SECBOOTADD0[24:0] = 0x060 0000: Boot from secure SRAM1 on S-Bus (0x3000 0000)
0x40022050 B  REGISTER FLASH_SECWM1R1: FLASH secure watermark1 register 1
0x40022050 C   FIELD 00w07 SECWM1_PSTRT (rw): Start page of first secure area This field contains the first page of the secure area in bank 1.
0x40022050 C   FIELD 16w07 SECWM1_PEND (rw): End page of first secure area This field contains the last page of the secure area in bank 1.
0x40022054 B  REGISTER FLASH_SECWM1R2: FLASH secure watermark1 register 2
0x40022054 C   FIELD 16w07 HDP1_PEND (rw): End page of first hide protection area This field contains the last page of the HDP area in bank 1.
0x40022054 C   FIELD 31w01 HDP1EN (rw): Hide protection first area enable
0x40022058 B  REGISTER FLASH_WRP1AR: FLASH WRP1 area A address register
0x40022058 C   FIELD 00w07 WRP1A_PSTRT (rw): bank 1 WPR first area A start page This field contains the first page of the first WPR area for bank 1.
0x40022058 C   FIELD 16w07 WRP1A_PEND (rw): Bank 1 WPR first area A end page This field contains the last page of the first WPR area in bank 1.
0x40022058 C   FIELD 31w01 UNLOCK (rw): Bank 1 WPR first area A unlock
0x4002205C B  REGISTER FLASH_WRP1BR: FLASH WRP1 area B address register
0x4002205C C   FIELD 00w07 WRP1B_PSTRT (rw): Bank 1 WRP second area B start page This field contains the first page of the second WRP area for bank 1.
0x4002205C C   FIELD 16w07 WRP1B_PEND (rw): Bank 1 WRP second area B end page This field contains the last page of the second WRP area in bank 1.
0x4002205C C   FIELD 31w01 UNLOCK (rw): Bank 1 WPR second area B unlock
0x40022060 B  REGISTER FLASH_SECWM2R1: FLASH secure watermark2 register 1
0x40022060 C   FIELD 00w07 SECWM2_PSTRT (rw): Start page of second secure area This field contains the first page of the secure area in bank 2.
0x40022060 C   FIELD 16w07 SECWM2_PEND (rw): End page of second secure area This field contains the last page of the secure area in bank 2.
0x40022064 B  REGISTER FLASH_SECWM2R2: FLASH secure watermark2 register 2
0x40022064 C   FIELD 16w07 HDP2_PEND (rw): End page of hide protection second area HDP2_PEND contains the last page of the HDP area in bank 2.
0x40022064 C   FIELD 31w01 HDP2EN (rw): Hide protection second area enable
0x40022068 B  REGISTER FLASH_WRP2AR: FLASH WPR2 area A address register
0x40022068 C   FIELD 00w07 WRP2A_PSTRT (rw): Bank 2 WPR first area A start page This field contains the first page of the first WRP area for bank 2.
0x40022068 C   FIELD 16w07 WRP2A_PEND (rw): Bank 2 WPR first area A end page This field contains the last page of the first WRP area in bank 2.
0x40022068 C   FIELD 31w01 UNLOCK (rw): Bank 2 WPR first area A unlock
0x4002206C B  REGISTER FLASH_WRP2BR: FLASH WPR2 area B address register
0x4002206C C   FIELD 00w07 WRP2B_PSTRT (rw): Bank 2 WPR second area B start page This field contains the first page of the second WRP area for bank 2.
0x4002206C C   FIELD 16w07 WRP2B_PEND (rw): Bank 2 WPR second area B end page This field contains the last page of the second WRP area in bank 2.
0x4002206C C   FIELD 31w01 UNLOCK (rw): Bank 2 WPR second area B unlock
0x40022070 B  REGISTER FLASH_OEM1KEYR1: FLASH OEM1 key register 1
0x40022070 C   FIELD 00w32 OEM1KEY (wo): OEM1 least significant bytes key
0x40022074 B  REGISTER FLASH_OEM1KEYR2: FLASH OEM1 key register 2
0x40022074 C   FIELD 00w32 OEM1KEY (wo): OEM1 most significant bytes key
0x40022078 B  REGISTER FLASH_OEM2KEYR1: FLASH OEM2 key register 1
0x40022078 C   FIELD 00w32 OEM2KEY (wo): OEM2 least significant bytes key
0x4002207C B  REGISTER FLASH_OEM2KEYR2: FLASH OEM2 key register 2
0x4002207C C   FIELD 00w32 OEM2KEY (wo): OEM2 most significant bytes key
0x40022080 B  REGISTER FLASH_SEC1BBR1: FLASH secure block based bank 1 register 1
0x40022080 C   FIELD 00w01 SEC1BB0 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 01w01 SEC1BB1 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 02w01 SEC1BB2 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 03w01 SEC1BB3 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 04w01 SEC1BB4 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 05w01 SEC1BB5 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 06w01 SEC1BB6 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 07w01 SEC1BB7 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 08w01 SEC1BB8 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 09w01 SEC1BB9 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 10w01 SEC1BB10 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 11w01 SEC1BB11 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 12w01 SEC1BB12 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 13w01 SEC1BB13 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 14w01 SEC1BB14 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 15w01 SEC1BB15 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 16w01 SEC1BB16 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 17w01 SEC1BB17 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 18w01 SEC1BB18 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 19w01 SEC1BB19 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 20w01 SEC1BB20 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 21w01 SEC1BB21 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 22w01 SEC1BB22 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 23w01 SEC1BB23 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 24w01 SEC1BB24 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 25w01 SEC1BB25 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 26w01 SEC1BB26 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 27w01 SEC1BB27 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 28w01 SEC1BB28 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 29w01 SEC1BB29 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 30w01 SEC1BB30 (rw): page secure/non-secure attribution
0x40022080 C   FIELD 31w01 SEC1BB31 (rw): page secure/non-secure attribution
0x40022084 B  REGISTER FLASH_SEC1BBR2: FLASH secure block based bank 1 register 2
0x40022084 C   FIELD 00w01 SEC1BB0 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 01w01 SEC1BB1 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 02w01 SEC1BB2 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 03w01 SEC1BB3 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 04w01 SEC1BB4 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 05w01 SEC1BB5 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 06w01 SEC1BB6 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 07w01 SEC1BB7 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 08w01 SEC1BB8 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 09w01 SEC1BB9 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 10w01 SEC1BB10 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 11w01 SEC1BB11 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 12w01 SEC1BB12 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 13w01 SEC1BB13 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 14w01 SEC1BB14 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 15w01 SEC1BB15 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 16w01 SEC1BB16 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 17w01 SEC1BB17 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 18w01 SEC1BB18 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 19w01 SEC1BB19 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 20w01 SEC1BB20 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 21w01 SEC1BB21 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 22w01 SEC1BB22 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 23w01 SEC1BB23 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 24w01 SEC1BB24 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 25w01 SEC1BB25 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 26w01 SEC1BB26 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 27w01 SEC1BB27 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 28w01 SEC1BB28 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 29w01 SEC1BB29 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 30w01 SEC1BB30 (rw): page secure/non-secure attribution
0x40022084 C   FIELD 31w01 SEC1BB31 (rw): page secure/non-secure attribution
0x40022088 B  REGISTER FLASH_SEC1BBR3: FLASH secure block based bank 1 register 3
0x40022088 C   FIELD 00w01 SEC1BB0 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 01w01 SEC1BB1 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 02w01 SEC1BB2 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 03w01 SEC1BB3 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 04w01 SEC1BB4 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 05w01 SEC1BB5 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 06w01 SEC1BB6 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 07w01 SEC1BB7 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 08w01 SEC1BB8 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 09w01 SEC1BB9 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 10w01 SEC1BB10 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 11w01 SEC1BB11 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 12w01 SEC1BB12 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 13w01 SEC1BB13 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 14w01 SEC1BB14 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 15w01 SEC1BB15 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 16w01 SEC1BB16 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 17w01 SEC1BB17 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 18w01 SEC1BB18 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 19w01 SEC1BB19 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 20w01 SEC1BB20 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 21w01 SEC1BB21 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 22w01 SEC1BB22 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 23w01 SEC1BB23 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 24w01 SEC1BB24 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 25w01 SEC1BB25 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 26w01 SEC1BB26 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 27w01 SEC1BB27 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 28w01 SEC1BB28 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 29w01 SEC1BB29 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 30w01 SEC1BB30 (rw): page secure/non-secure attribution
0x40022088 C   FIELD 31w01 SEC1BB31 (rw): page secure/non-secure attribution
0x4002208C B  REGISTER FLASH_SEC1BBR4: FLASH secure block based bank 1 register 4
0x4002208C C   FIELD 00w01 SEC1BB0 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 01w01 SEC1BB1 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 02w01 SEC1BB2 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 03w01 SEC1BB3 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 04w01 SEC1BB4 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 05w01 SEC1BB5 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 06w01 SEC1BB6 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 07w01 SEC1BB7 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 08w01 SEC1BB8 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 09w01 SEC1BB9 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 10w01 SEC1BB10 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 11w01 SEC1BB11 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 12w01 SEC1BB12 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 13w01 SEC1BB13 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 14w01 SEC1BB14 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 15w01 SEC1BB15 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 16w01 SEC1BB16 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 17w01 SEC1BB17 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 18w01 SEC1BB18 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 19w01 SEC1BB19 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 20w01 SEC1BB20 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 21w01 SEC1BB21 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 22w01 SEC1BB22 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 23w01 SEC1BB23 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 24w01 SEC1BB24 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 25w01 SEC1BB25 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 26w01 SEC1BB26 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 27w01 SEC1BB27 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 28w01 SEC1BB28 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 29w01 SEC1BB29 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 30w01 SEC1BB30 (rw): page secure/non-secure attribution
0x4002208C C   FIELD 31w01 SEC1BB31 (rw): page secure/non-secure attribution
0x400220A0 B  REGISTER FLASH_SEC2BBR1: FLASH secure block based bank 2 register 1
0x400220A0 C   FIELD 00w01 SEC2BB0 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 01w01 SEC2BB1 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 02w01 SEC2BB2 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 03w01 SEC2BB3 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 04w01 SEC2BB4 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 05w01 SEC2BB5 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 06w01 SEC2BB6 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 07w01 SEC2BB7 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 08w01 SEC2BB8 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 09w01 SEC2BB9 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 10w01 SEC2BB10 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 11w01 SEC2BB11 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 12w01 SEC2BB12 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 13w01 SEC2BB13 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 14w01 SEC2BB14 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 15w01 SEC2BB15 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 16w01 SEC2BB16 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 17w01 SEC2BB17 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 18w01 SEC2BB18 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 19w01 SEC2BB19 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 20w01 SEC2BB20 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 21w01 SEC2BB21 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 22w01 SEC2BB22 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 23w01 SEC2BB23 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 24w01 SEC2BB24 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 25w01 SEC2BB25 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 26w01 SEC2BB26 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 27w01 SEC2BB27 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 28w01 SEC2BB28 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 29w01 SEC2BB29 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 30w01 SEC2BB30 (rw): page secure/non-secure attribution
0x400220A0 C   FIELD 31w01 SEC2BB31 (rw): page secure/non-secure attribution
0x400220A4 B  REGISTER FLASH_SEC2BBR2: FLASH secure block based bank 2 register 2
0x400220A4 C   FIELD 00w01 SEC2BB0 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 01w01 SEC2BB1 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 02w01 SEC2BB2 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 03w01 SEC2BB3 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 04w01 SEC2BB4 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 05w01 SEC2BB5 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 06w01 SEC2BB6 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 07w01 SEC2BB7 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 08w01 SEC2BB8 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 09w01 SEC2BB9 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 10w01 SEC2BB10 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 11w01 SEC2BB11 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 12w01 SEC2BB12 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 13w01 SEC2BB13 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 14w01 SEC2BB14 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 15w01 SEC2BB15 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 16w01 SEC2BB16 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 17w01 SEC2BB17 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 18w01 SEC2BB18 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 19w01 SEC2BB19 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 20w01 SEC2BB20 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 21w01 SEC2BB21 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 22w01 SEC2BB22 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 23w01 SEC2BB23 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 24w01 SEC2BB24 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 25w01 SEC2BB25 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 26w01 SEC2BB26 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 27w01 SEC2BB27 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 28w01 SEC2BB28 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 29w01 SEC2BB29 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 30w01 SEC2BB30 (rw): page secure/non-secure attribution
0x400220A4 C   FIELD 31w01 SEC2BB31 (rw): page secure/non-secure attribution
0x400220A8 B  REGISTER FLASH_SEC2BBR3: FLASH secure block based bank 2 register 3
0x400220A8 C   FIELD 00w01 SEC2BB0 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 01w01 SEC2BB1 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 02w01 SEC2BB2 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 03w01 SEC2BB3 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 04w01 SEC2BB4 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 05w01 SEC2BB5 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 06w01 SEC2BB6 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 07w01 SEC2BB7 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 08w01 SEC2BB8 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 09w01 SEC2BB9 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 10w01 SEC2BB10 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 11w01 SEC2BB11 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 12w01 SEC2BB12 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 13w01 SEC2BB13 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 14w01 SEC2BB14 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 15w01 SEC2BB15 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 16w01 SEC2BB16 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 17w01 SEC2BB17 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 18w01 SEC2BB18 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 19w01 SEC2BB19 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 20w01 SEC2BB20 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 21w01 SEC2BB21 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 22w01 SEC2BB22 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 23w01 SEC2BB23 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 24w01 SEC2BB24 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 25w01 SEC2BB25 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 26w01 SEC2BB26 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 27w01 SEC2BB27 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 28w01 SEC2BB28 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 29w01 SEC2BB29 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 30w01 SEC2BB30 (rw): page secure/non-secure attribution
0x400220A8 C   FIELD 31w01 SEC2BB31 (rw): page secure/non-secure attribution
0x400220AC B  REGISTER FLASH_SEC2BBR4: FLASH secure block based bank 2 register 4
0x400220AC C   FIELD 00w01 SEC2BB0 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 01w01 SEC2BB1 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 02w01 SEC2BB2 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 03w01 SEC2BB3 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 04w01 SEC2BB4 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 05w01 SEC2BB5 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 06w01 SEC2BB6 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 07w01 SEC2BB7 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 08w01 SEC2BB8 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 09w01 SEC2BB9 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 10w01 SEC2BB10 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 11w01 SEC2BB11 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 12w01 SEC2BB12 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 13w01 SEC2BB13 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 14w01 SEC2BB14 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 15w01 SEC2BB15 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 16w01 SEC2BB16 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 17w01 SEC2BB17 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 18w01 SEC2BB18 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 19w01 SEC2BB19 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 20w01 SEC2BB20 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 21w01 SEC2BB21 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 22w01 SEC2BB22 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 23w01 SEC2BB23 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 24w01 SEC2BB24 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 25w01 SEC2BB25 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 26w01 SEC2BB26 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 27w01 SEC2BB27 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 28w01 SEC2BB28 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 29w01 SEC2BB29 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 30w01 SEC2BB30 (rw): page secure/non-secure attribution
0x400220AC C   FIELD 31w01 SEC2BB31 (rw): page secure/non-secure attribution
0x400220C0 B  REGISTER FLASH_SECHDPCR: FLASH secure HDP control register
0x400220C0 C   FIELD 00w01 HDP1_ACCDIS (rw): HDP1 area access disable When set, this bit is only cleared by a system reset.
0x400220C0 C   FIELD 01w01 HDP2_ACCDIS (rw): HDP2 area access disable When set, this bit is only cleared by a system reset.
0x400220C4 B  REGISTER FLASH_PRIVCFGR: FLASH privilege configuration register
0x400220C4 C   FIELD 00w01 SPRIV (rw): Privileged protection for secure registers This bit can be accessed only when TrustZone is enabled (TZEN = 1). This bit can be read by both privileged or unprivileged, secure and non-secure access. The SPRIV bit can be written only by a secure privileged access. A non-secure write access on SPRIV bit is ignored. A secure unprivileged write access on SPRIV bit is ignored.
0x400220C4 C   FIELD 01w01 NSPRIV (rw): Privileged protection for non-secure registers This bit can be read by both privileged or unprivileged, secure and non-secure access. The NSPRIV bit can be written by a secure or non-secure privileged access. A secure or non-secure unprivileged write access on NSPRIV bit is ignored.
0x400220D0 B  REGISTER FLASH_PRIV1BBR1: FLASH privilege block based bank 1 register 1
0x400220D0 C   FIELD 00w01 PRIV1BB0 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 01w01 PRIV1BB1 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 02w01 PRIV1BB2 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 03w01 PRIV1BB3 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 04w01 PRIV1BB4 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 05w01 PRIV1BB5 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 06w01 PRIV1BB6 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 07w01 PRIV1BB7 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 08w01 PRIV1BB8 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 09w01 PRIV1BB9 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 10w01 PRIV1BB10 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 11w01 PRIV1BB11 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 12w01 PRIV1BB12 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 13w01 PRIV1BB13 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 14w01 PRIV1BB14 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 15w01 PRIV1BB15 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 16w01 PRIV1BB16 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 17w01 PRIV1BB17 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 18w01 PRIV1BB18 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 19w01 PRIV1BB19 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 20w01 PRIV1BB20 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 21w01 PRIV1BB21 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 22w01 PRIV1BB22 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 23w01 PRIV1BB23 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 24w01 PRIV1BB24 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 25w01 PRIV1BB25 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 26w01 PRIV1BB26 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 27w01 PRIV1BB27 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 28w01 PRIV1BB28 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 29w01 PRIV1BB29 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 30w01 PRIV1BB30 (rw): page privileged/unprivileged attribution
0x400220D0 C   FIELD 31w01 PRIV1BB31 (rw): page privileged/unprivileged attribution
0x400220D4 B  REGISTER FLASH_PRIV1BBR2: FLASH privilege block based bank 1 register 2
0x400220D4 C   FIELD 00w01 PRIV1BB0 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 01w01 PRIV1BB1 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 02w01 PRIV1BB2 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 03w01 PRIV1BB3 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 04w01 PRIV1BB4 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 05w01 PRIV1BB5 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 06w01 PRIV1BB6 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 07w01 PRIV1BB7 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 08w01 PRIV1BB8 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 09w01 PRIV1BB9 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 10w01 PRIV1BB10 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 11w01 PRIV1BB11 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 12w01 PRIV1BB12 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 13w01 PRIV1BB13 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 14w01 PRIV1BB14 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 15w01 PRIV1BB15 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 16w01 PRIV1BB16 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 17w01 PRIV1BB17 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 18w01 PRIV1BB18 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 19w01 PRIV1BB19 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 20w01 PRIV1BB20 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 21w01 PRIV1BB21 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 22w01 PRIV1BB22 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 23w01 PRIV1BB23 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 24w01 PRIV1BB24 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 25w01 PRIV1BB25 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 26w01 PRIV1BB26 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 27w01 PRIV1BB27 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 28w01 PRIV1BB28 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 29w01 PRIV1BB29 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 30w01 PRIV1BB30 (rw): page privileged/unprivileged attribution
0x400220D4 C   FIELD 31w01 PRIV1BB31 (rw): page privileged/unprivileged attribution
0x400220D8 B  REGISTER FLASH_PRIV1BBR3: FLASH privilege block based bank 1 register 3
0x400220D8 C   FIELD 00w01 PRIV1BB0 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 01w01 PRIV1BB1 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 02w01 PRIV1BB2 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 03w01 PRIV1BB3 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 04w01 PRIV1BB4 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 05w01 PRIV1BB5 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 06w01 PRIV1BB6 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 07w01 PRIV1BB7 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 08w01 PRIV1BB8 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 09w01 PRIV1BB9 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 10w01 PRIV1BB10 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 11w01 PRIV1BB11 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 12w01 PRIV1BB12 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 13w01 PRIV1BB13 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 14w01 PRIV1BB14 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 15w01 PRIV1BB15 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 16w01 PRIV1BB16 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 17w01 PRIV1BB17 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 18w01 PRIV1BB18 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 19w01 PRIV1BB19 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 20w01 PRIV1BB20 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 21w01 PRIV1BB21 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 22w01 PRIV1BB22 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 23w01 PRIV1BB23 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 24w01 PRIV1BB24 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 25w01 PRIV1BB25 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 26w01 PRIV1BB26 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 27w01 PRIV1BB27 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 28w01 PRIV1BB28 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 29w01 PRIV1BB29 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 30w01 PRIV1BB30 (rw): page privileged/unprivileged attribution
0x400220D8 C   FIELD 31w01 PRIV1BB31 (rw): page privileged/unprivileged attribution
0x400220DC B  REGISTER FLASH_PRIV1BBR4: FLASH privilege block based bank 1 register 4
0x400220DC C   FIELD 00w01 PRIV1BB0 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 01w01 PRIV1BB1 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 02w01 PRIV1BB2 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 03w01 PRIV1BB3 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 04w01 PRIV1BB4 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 05w01 PRIV1BB5 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 06w01 PRIV1BB6 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 07w01 PRIV1BB7 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 08w01 PRIV1BB8 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 09w01 PRIV1BB9 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 10w01 PRIV1BB10 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 11w01 PRIV1BB11 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 12w01 PRIV1BB12 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 13w01 PRIV1BB13 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 14w01 PRIV1BB14 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 15w01 PRIV1BB15 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 16w01 PRIV1BB16 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 17w01 PRIV1BB17 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 18w01 PRIV1BB18 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 19w01 PRIV1BB19 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 20w01 PRIV1BB20 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 21w01 PRIV1BB21 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 22w01 PRIV1BB22 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 23w01 PRIV1BB23 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 24w01 PRIV1BB24 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 25w01 PRIV1BB25 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 26w01 PRIV1BB26 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 27w01 PRIV1BB27 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 28w01 PRIV1BB28 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 29w01 PRIV1BB29 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 30w01 PRIV1BB30 (rw): page privileged/unprivileged attribution
0x400220DC C   FIELD 31w01 PRIV1BB31 (rw): page privileged/unprivileged attribution
0x400220F0 B  REGISTER FLASH_PRIV2BBR1: FLASH privilege block based bank 2 register 1
0x400220F0 C   FIELD 00w01 PRIV2BB0 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 01w01 PRIV2BB1 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 02w01 PRIV2BB2 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 03w01 PRIV2BB3 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 04w01 PRIV2BB4 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 05w01 PRIV2BB5 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 06w01 PRIV2BB6 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 07w01 PRIV2BB7 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 08w01 PRIV2BB8 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 09w01 PRIV2BB9 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 10w01 PRIV2BB10 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 11w01 PRIV2BB11 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 12w01 PRIV2BB12 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 13w01 PRIV2BB13 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 14w01 PRIV2BB14 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 15w01 PRIV2BB15 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 16w01 PRIV2BB16 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 17w01 PRIV2BB17 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 18w01 PRIV2BB18 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 19w01 PRIV2BB19 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 20w01 PRIV2BB20 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 21w01 PRIV2BB21 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 22w01 PRIV2BB22 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 23w01 PRIV2BB23 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 24w01 PRIV2BB24 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 25w01 PRIV2BB25 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 26w01 PRIV2BB26 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 27w01 PRIV2BB27 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 28w01 PRIV2BB28 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 29w01 PRIV2BB29 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 30w01 PRIV2BB30 (rw): page privileged/unprivileged attribution
0x400220F0 C   FIELD 31w01 PRIV2BB31 (rw): page privileged/unprivileged attribution
0x400220F4 B  REGISTER FLASH_PRIV2BBR2: FLASH privilege block based bank 2 register 2
0x400220F4 C   FIELD 00w01 PRIV2BB0 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 01w01 PRIV2BB1 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 02w01 PRIV2BB2 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 03w01 PRIV2BB3 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 04w01 PRIV2BB4 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 05w01 PRIV2BB5 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 06w01 PRIV2BB6 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 07w01 PRIV2BB7 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 08w01 PRIV2BB8 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 09w01 PRIV2BB9 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 10w01 PRIV2BB10 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 11w01 PRIV2BB11 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 12w01 PRIV2BB12 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 13w01 PRIV2BB13 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 14w01 PRIV2BB14 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 15w01 PRIV2BB15 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 16w01 PRIV2BB16 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 17w01 PRIV2BB17 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 18w01 PRIV2BB18 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 19w01 PRIV2BB19 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 20w01 PRIV2BB20 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 21w01 PRIV2BB21 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 22w01 PRIV2BB22 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 23w01 PRIV2BB23 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 24w01 PRIV2BB24 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 25w01 PRIV2BB25 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 26w01 PRIV2BB26 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 27w01 PRIV2BB27 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 28w01 PRIV2BB28 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 29w01 PRIV2BB29 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 30w01 PRIV2BB30 (rw): page privileged/unprivileged attribution
0x400220F4 C   FIELD 31w01 PRIV2BB31 (rw): page privileged/unprivileged attribution
0x400220F8 B  REGISTER FLASH_PRIV2BBR3: FLASH privilege block based bank 2 register 3
0x400220F8 C   FIELD 00w01 PRIV2BB0 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 01w01 PRIV2BB1 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 02w01 PRIV2BB2 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 03w01 PRIV2BB3 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 04w01 PRIV2BB4 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 05w01 PRIV2BB5 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 06w01 PRIV2BB6 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 07w01 PRIV2BB7 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 08w01 PRIV2BB8 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 09w01 PRIV2BB9 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 10w01 PRIV2BB10 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 11w01 PRIV2BB11 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 12w01 PRIV2BB12 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 13w01 PRIV2BB13 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 14w01 PRIV2BB14 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 15w01 PRIV2BB15 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 16w01 PRIV2BB16 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 17w01 PRIV2BB17 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 18w01 PRIV2BB18 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 19w01 PRIV2BB19 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 20w01 PRIV2BB20 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 21w01 PRIV2BB21 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 22w01 PRIV2BB22 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 23w01 PRIV2BB23 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 24w01 PRIV2BB24 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 25w01 PRIV2BB25 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 26w01 PRIV2BB26 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 27w01 PRIV2BB27 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 28w01 PRIV2BB28 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 29w01 PRIV2BB29 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 30w01 PRIV2BB30 (rw): page privileged/unprivileged attribution
0x400220F8 C   FIELD 31w01 PRIV2BB31 (rw): page privileged/unprivileged attribution
0x400220FC B  REGISTER FLASH_PRIV2BBR4: FLASH privilege block based bank 2 register 4
0x400220FC C   FIELD 00w01 PRIV2BB0 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 01w01 PRIV2BB1 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 02w01 PRIV2BB2 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 03w01 PRIV2BB3 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 04w01 PRIV2BB4 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 05w01 PRIV2BB5 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 06w01 PRIV2BB6 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 07w01 PRIV2BB7 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 08w01 PRIV2BB8 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 09w01 PRIV2BB9 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 10w01 PRIV2BB10 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 11w01 PRIV2BB11 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 12w01 PRIV2BB12 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 13w01 PRIV2BB13 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 14w01 PRIV2BB14 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 15w01 PRIV2BB15 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 16w01 PRIV2BB16 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 17w01 PRIV2BB17 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 18w01 PRIV2BB18 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 19w01 PRIV2BB19 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 20w01 PRIV2BB20 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 21w01 PRIV2BB21 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 22w01 PRIV2BB22 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 23w01 PRIV2BB23 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 24w01 PRIV2BB24 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 25w01 PRIV2BB25 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 26w01 PRIV2BB26 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 27w01 PRIV2BB27 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 28w01 PRIV2BB28 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 29w01 PRIV2BB29 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 30w01 PRIV2BB30 (rw): page privileged/unprivileged attribution
0x400220FC C   FIELD 31w01 PRIV2BB31 (rw): page privileged/unprivileged attribution
0x40023000 A PERIPHERAL CRC
0x40023000 B  REGISTER DR (rw): Data register
0x40023000 C   FIELD 00w32 DR: Data register bits
0x40023004 B  REGISTER IDR (rw): Independent data register
0x40023004 C   FIELD 00w32 IDR: General-purpose 8-bit data register bits
0x40023008 B  REGISTER CR: Control register
0x40023008 C   FIELD 00w01 RESET (rw): RESET bit
0x40023008 C   FIELD 03w02 POLYSIZE (rw): Polynomial size
0x40023008 C   FIELD 05w02 REV_IN (rw): Reverse input data
0x40023008 C   FIELD 07w01 REV_OUT (rw): Reverse output data
0x40023010 B  REGISTER INIT (rw): Initial CRC value
0x40023010 C   FIELD 00w32 CRC_INIT: Programmable initial CRC value
0x40023014 B  REGISTER POL (rw): polynomial
0x40023014 C   FIELD 00w32 POL: Programmable polynomial
0x40024000 A PERIPHERAL TSC
0x40024000 B  REGISTER CR (rw): control register
0x40024000 C   FIELD 00w01 TSCE: Touch sensing controller enable
0x40024000 C   FIELD 01w01 START: Start a new acquisition
0x40024000 C   FIELD 02w01 AM: Acquisition mode
0x40024000 C   FIELD 03w01 SYNCPOL: Synchronization pin polarity
0x40024000 C   FIELD 04w01 IODEF: I/O Default mode
0x40024000 C   FIELD 05w03 MCV: Max count value
0x40024000 C   FIELD 12w03 PGPSC: pulse generator prescaler
0x40024000 C   FIELD 15w01 SSPSC: Spread spectrum prescaler
0x40024000 C   FIELD 16w01 SSE: Spread spectrum enable
0x40024000 C   FIELD 17w07 SSD: Spread spectrum deviation
0x40024000 C   FIELD 24w04 CTPL: Charge transfer pulse low
0x40024000 C   FIELD 28w04 CTPH: Charge transfer pulse high
0x40024004 B  REGISTER IER (rw): interrupt enable register
0x40024004 C   FIELD 00w01 EOAIE: End of acquisition interrupt enable
0x40024004 C   FIELD 01w01 MCEIE: Max count error interrupt enable
0x40024008 B  REGISTER ICR (rw): interrupt clear register
0x40024008 C   FIELD 00w01 EOAIC: End of acquisition interrupt clear
0x40024008 C   FIELD 01w01 MCEIC: Max count error interrupt clear
0x4002400C B  REGISTER ISR (ro): interrupt status register
0x4002400C C   FIELD 00w01 EOAF: End of acquisition flag
0x4002400C C   FIELD 01w01 MCEF: Max count error flag
0x40024010 B  REGISTER IOHCR (rw): I/O hysteresis control register
0x40024010 C   FIELD 00w01 G1_IO1: G1_IO1
0x40024010 C   FIELD 01w01 G1_IO2: G1_IO2
0x40024010 C   FIELD 02w01 G1_IO3: G1_IO3
0x40024010 C   FIELD 03w01 G1_IO4: G1_IO4
0x40024010 C   FIELD 04w01 G2_IO1: G2_IO1
0x40024010 C   FIELD 05w01 G2_IO2: G2_IO2
0x40024010 C   FIELD 06w01 G2_IO3: G2_IO3
0x40024010 C   FIELD 07w01 G2_IO4: G2_IO4
0x40024010 C   FIELD 08w01 G3_IO1: G3_IO1
0x40024010 C   FIELD 09w01 G3_IO2: G3_IO2
0x40024010 C   FIELD 10w01 G3_IO3: G3_IO3
0x40024010 C   FIELD 11w01 G3_IO4: G3_IO4
0x40024010 C   FIELD 12w01 G4_IO1: G4_IO1
0x40024010 C   FIELD 13w01 G4_IO2: G4_IO2
0x40024010 C   FIELD 14w01 G4_IO3: G4_IO3
0x40024010 C   FIELD 15w01 G4_IO4: G4_IO4
0x40024010 C   FIELD 16w01 G5_IO1: G5_IO1
0x40024010 C   FIELD 17w01 G5_IO2: G5_IO2
0x40024010 C   FIELD 18w01 G5_IO3: G5_IO3
0x40024010 C   FIELD 19w01 G5_IO4: G5_IO4
0x40024010 C   FIELD 20w01 G6_IO1: G6_IO1
0x40024010 C   FIELD 21w01 G6_IO2: G6_IO2
0x40024010 C   FIELD 22w01 G6_IO3: G6_IO3
0x40024010 C   FIELD 23w01 G6_IO4: G6_IO4
0x40024010 C   FIELD 24w01 G7_IO1: G7_IO1
0x40024010 C   FIELD 25w01 G7_IO2: G7_IO2
0x40024010 C   FIELD 26w01 G7_IO3: G7_IO3
0x40024010 C   FIELD 27w01 G7_IO4: G7_IO4
0x40024010 C   FIELD 28w01 G8_IO1: G8_IO1
0x40024010 C   FIELD 29w01 G8_IO2: G8_IO2
0x40024010 C   FIELD 30w01 G8_IO3: G8_IO3
0x40024010 C   FIELD 31w01 G8_IO4: G8_IO4
0x40024018 B  REGISTER IOASCR (rw): I/O analog switch control register
0x40024018 C   FIELD 00w01 G1_IO1: G1_IO1
0x40024018 C   FIELD 01w01 G1_IO2: G1_IO2
0x40024018 C   FIELD 02w01 G1_IO3: G1_IO3
0x40024018 C   FIELD 03w01 G1_IO4: G1_IO4
0x40024018 C   FIELD 04w01 G2_IO1: G2_IO1
0x40024018 C   FIELD 05w01 G2_IO2: G2_IO2
0x40024018 C   FIELD 06w01 G2_IO3: G2_IO3
0x40024018 C   FIELD 07w01 G2_IO4: G2_IO4
0x40024018 C   FIELD 08w01 G3_IO1: G3_IO1
0x40024018 C   FIELD 09w01 G3_IO2: G3_IO2
0x40024018 C   FIELD 10w01 G3_IO3: G3_IO3
0x40024018 C   FIELD 11w01 G3_IO4: G3_IO4
0x40024018 C   FIELD 12w01 G4_IO1: G4_IO1
0x40024018 C   FIELD 13w01 G4_IO2: G4_IO2
0x40024018 C   FIELD 14w01 G4_IO3: G4_IO3
0x40024018 C   FIELD 15w01 G4_IO4: G4_IO4
0x40024018 C   FIELD 16w01 G5_IO1: G5_IO1
0x40024018 C   FIELD 17w01 G5_IO2: G5_IO2
0x40024018 C   FIELD 18w01 G5_IO3: G5_IO3
0x40024018 C   FIELD 19w01 G5_IO4: G5_IO4
0x40024018 C   FIELD 20w01 G6_IO1: G6_IO1
0x40024018 C   FIELD 21w01 G6_IO2: G6_IO2
0x40024018 C   FIELD 22w01 G6_IO3: G6_IO3
0x40024018 C   FIELD 23w01 G6_IO4: G6_IO4
0x40024018 C   FIELD 24w01 G7_IO1: G7_IO1
0x40024018 C   FIELD 25w01 G7_IO2: G7_IO2
0x40024018 C   FIELD 26w01 G7_IO3: G7_IO3
0x40024018 C   FIELD 27w01 G7_IO4: G7_IO4
0x40024018 C   FIELD 28w01 G8_IO1: G8_IO1
0x40024018 C   FIELD 29w01 G8_IO2: G8_IO2
0x40024018 C   FIELD 30w01 G8_IO3: G8_IO3
0x40024018 C   FIELD 31w01 G8_IO4: G8_IO4
0x40024020 B  REGISTER IOSCR (rw): I/O sampling control register
0x40024020 C   FIELD 00w01 G1_IO1: G1_IO1
0x40024020 C   FIELD 01w01 G1_IO2: G1_IO2
0x40024020 C   FIELD 02w01 G1_IO3: G1_IO3
0x40024020 C   FIELD 03w01 G1_IO4: G1_IO4
0x40024020 C   FIELD 04w01 G2_IO1: G2_IO1
0x40024020 C   FIELD 05w01 G2_IO2: G2_IO2
0x40024020 C   FIELD 06w01 G2_IO3: G2_IO3
0x40024020 C   FIELD 07w01 G2_IO4: G2_IO4
0x40024020 C   FIELD 08w01 G3_IO1: G3_IO1
0x40024020 C   FIELD 09w01 G3_IO2: G3_IO2
0x40024020 C   FIELD 10w01 G3_IO3: G3_IO3
0x40024020 C   FIELD 11w01 G3_IO4: G3_IO4
0x40024020 C   FIELD 12w01 G4_IO1: G4_IO1
0x40024020 C   FIELD 13w01 G4_IO2: G4_IO2
0x40024020 C   FIELD 14w01 G4_IO3: G4_IO3
0x40024020 C   FIELD 15w01 G4_IO4: G4_IO4
0x40024020 C   FIELD 16w01 G5_IO1: G5_IO1
0x40024020 C   FIELD 17w01 G5_IO2: G5_IO2
0x40024020 C   FIELD 18w01 G5_IO3: G5_IO3
0x40024020 C   FIELD 19w01 G5_IO4: G5_IO4
0x40024020 C   FIELD 20w01 G6_IO1: G6_IO1
0x40024020 C   FIELD 21w01 G6_IO2: G6_IO2
0x40024020 C   FIELD 22w01 G6_IO3: G6_IO3
0x40024020 C   FIELD 23w01 G6_IO4: G6_IO4
0x40024020 C   FIELD 24w01 G7_IO1: G7_IO1
0x40024020 C   FIELD 25w01 G7_IO2: G7_IO2
0x40024020 C   FIELD 26w01 G7_IO3: G7_IO3
0x40024020 C   FIELD 27w01 G7_IO4: G7_IO4
0x40024020 C   FIELD 28w01 G8_IO1: G8_IO1
0x40024020 C   FIELD 29w01 G8_IO2: G8_IO2
0x40024020 C   FIELD 30w01 G8_IO3: G8_IO3
0x40024020 C   FIELD 31w01 G8_IO4: G8_IO4
0x40024028 B  REGISTER IOCCR (rw): I/O channel control register
0x40024028 C   FIELD 00w01 G1_IO1: G1_IO1
0x40024028 C   FIELD 01w01 G1_IO2: G1_IO2
0x40024028 C   FIELD 02w01 G1_IO3: G1_IO3
0x40024028 C   FIELD 03w01 G1_IO4: G1_IO4
0x40024028 C   FIELD 04w01 G2_IO1: G2_IO1
0x40024028 C   FIELD 05w01 G2_IO2: G2_IO2
0x40024028 C   FIELD 06w01 G2_IO3: G2_IO3
0x40024028 C   FIELD 07w01 G2_IO4: G2_IO4
0x40024028 C   FIELD 08w01 G3_IO1: G3_IO1
0x40024028 C   FIELD 09w01 G3_IO2: G3_IO2
0x40024028 C   FIELD 10w01 G3_IO3: G3_IO3
0x40024028 C   FIELD 11w01 G3_IO4: G3_IO4
0x40024028 C   FIELD 12w01 G4_IO1: G4_IO1
0x40024028 C   FIELD 13w01 G4_IO2: G4_IO2
0x40024028 C   FIELD 14w01 G4_IO3: G4_IO3
0x40024028 C   FIELD 15w01 G4_IO4: G4_IO4
0x40024028 C   FIELD 16w01 G5_IO1: G5_IO1
0x40024028 C   FIELD 17w01 G5_IO2: G5_IO2
0x40024028 C   FIELD 18w01 G5_IO3: G5_IO3
0x40024028 C   FIELD 19w01 G5_IO4: G5_IO4
0x40024028 C   FIELD 20w01 G6_IO1: G6_IO1
0x40024028 C   FIELD 21w01 G6_IO2: G6_IO2
0x40024028 C   FIELD 22w01 G6_IO3: G6_IO3
0x40024028 C   FIELD 23w01 G6_IO4: G6_IO4
0x40024028 C   FIELD 24w01 G7_IO1: G7_IO1
0x40024028 C   FIELD 25w01 G7_IO2: G7_IO2
0x40024028 C   FIELD 26w01 G7_IO3: G7_IO3
0x40024028 C   FIELD 27w01 G7_IO4: G7_IO4
0x40024028 C   FIELD 28w01 G8_IO1: G8_IO1
0x40024028 C   FIELD 29w01 G8_IO2: G8_IO2
0x40024028 C   FIELD 30w01 G8_IO3: G8_IO3
0x40024028 C   FIELD 31w01 G8_IO4: G8_IO4
0x40024030 B  REGISTER IOGCSR: I/O group control status register
0x40024030 C   FIELD 00w01 G1E (rw): Analog I/O group x enable
0x40024030 C   FIELD 01w01 G2E (rw): Analog I/O group x enable
0x40024030 C   FIELD 02w01 G3E (rw): Analog I/O group x enable
0x40024030 C   FIELD 03w01 G4E (rw): Analog I/O group x enable
0x40024030 C   FIELD 04w01 G5E (rw): Analog I/O group x enable
0x40024030 C   FIELD 05w01 G6E (rw): Analog I/O group x enable
0x40024030 C   FIELD 06w01 G7E (rw): Analog I/O group x enable
0x40024030 C   FIELD 07w01 G8E (rw): Analog I/O group x enable
0x40024030 C   FIELD 16w01 G1S (ro): Analog I/O group x status
0x40024030 C   FIELD 17w01 G2S (ro): Analog I/O group x status
0x40024030 C   FIELD 18w01 G3S (ro): Analog I/O group x status
0x40024030 C   FIELD 19w01 G4S (ro): Analog I/O group x status
0x40024030 C   FIELD 20w01 G5S (ro): Analog I/O group x status
0x40024030 C   FIELD 21w01 G6S (ro): Analog I/O group x status
0x40024030 C   FIELD 22w01 G7S (ro): Analog I/O group x status
0x40024030 C   FIELD 23w01 G8S (ro): Analog I/O group x status
0x40024034 B  REGISTER IOG1CR (ro): I/O group x counter register
0x40024034 C   FIELD 00w14 CNT: Counter value
0x40024038 B  REGISTER IOG2CR (ro): I/O group x counter register
0x40024038 C   FIELD 00w14 CNT: Counter value
0x4002403C B  REGISTER IOG3CR (ro): I/O group x counter register
0x4002403C C   FIELD 00w14 CNT: Counter value
0x40024040 B  REGISTER IOG4CR (ro): I/O group x counter register
0x40024040 C   FIELD 00w14 CNT: Counter value
0x40024044 B  REGISTER IOG5CR (ro): I/O group x counter register
0x40024044 C   FIELD 00w14 CNT: Counter value
0x40024048 B  REGISTER IOG6CR (ro): I/O group x counter register
0x40024048 C   FIELD 00w14 CNT: Counter value
0x4002404C B  REGISTER IOG7CR (ro): I/O group x counter register
0x4002404C C   FIELD 00w14 CNT: Counter value
0x40024050 B  REGISTER IOG8CR (ro): I/O group x counter register
0x40024050 C   FIELD 00w14 CNT: Counter value
0x40025000 A PERIPHERAL MDF1
0x40025000 B  REGISTER GCR (rw): MDF global control register
0x40025000 C   FIELD 00w01 TRGO: TRGO
0x40025000 C   FIELD 04w04 ILVNB: ILVNB
0x40025004 B  REGISTER CKGCR (rw): MDF clock generator control register
0x40025004 C   FIELD 00w01 CKGDEN: CKGDEN
0x40025004 C   FIELD 01w01 CCK0EN: CCK0EN
0x40025004 C   FIELD 02w01 CCK1EN: CCK1EN
0x40025004 C   FIELD 04w01 CKGMOD: CKGMOD
0x40025004 C   FIELD 05w01 CCK0DIR: CCK0DIR
0x40025004 C   FIELD 06w01 CCK1DIR: CCK1DIR
0x40025004 C   FIELD 08w01 TRGSENS: TRGSENS
0x40025004 C   FIELD 12w04 TRGSRC: TRGSRC
0x40025004 C   FIELD 16w04 CCKDIV: CCKDIV
0x40025004 C   FIELD 24w07 PROCDIV: PROCDIV
0x40025004 C   FIELD 31w01 CKGACTIVE: CKGACTIVE
0x40025080 B  REGISTER MDF_SITF0CR: This register is used to control the serial interfaces (SITFx).
0x40025080 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x40025080 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025080 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025080 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025080 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured.
0x40025084 B  REGISTER MDF_BSMX0CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x40025084 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025084 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x40025088 B  REGISTER MDF_DFLT0CR: This register is used to control the digital filter x.
0x40025088 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x40025088 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025088 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software.
0x40025088 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025088 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025088 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025088 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025088 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025088 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x40025088 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x4002508C B  REGISTER MDF_DFLT0CICR (rw): This register is used to control the main CIC filter.
0x4002508C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002508C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002508C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002508C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x40025090 B  REGISTER MDF_DFLT0RSFR (rw): This register is used to control the reshape and HPF filters.
0x40025090 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025090 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025090 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025090 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025094 B  REGISTER MDF_DFLT0INTR (rw): This register is used to the integrator (INT) settings.
0x40025094 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025094 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025098 B  REGISTER MDF_OLD0CR: This register is used to configure the Out-of Limit Detector function.
0x40025098 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x40025098 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025098 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025098 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025098 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025098 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x4002509C B  REGISTER MDF_OLD0THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x4002509C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400250A0 B  REGISTER MDF_OLD0THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x400250A0 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x400250A4 B  REGISTER MDF_DLY0CR: This register is used for the adjustment stream delays.
0x400250A4 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x400250A4 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x400250A8 B  REGISTER MDF_SCD0CR: This register is used for the adjustment stream delays.
0x400250A8 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x400250A8 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400250A8 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400250A8 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x400250AC B  REGISTER MDF_DFLT0IER (rw): This register is used for allowing or not the events to generate an interrupt.
0x400250AC C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x400250AC C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x400250AC C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x400250AC C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x400250AC C   FIELD 07w01 SSOVRIE (rw): Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x400250AC C   FIELD 08w01 SCDIE (rw): Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x400250AC C   FIELD 09w01 SATIE (rw): Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x400250AC C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x400250AC C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x400250B0 B  REGISTER MDF_DFLT0ISR: MDF DFLT0 interrupt status register 0
0x400250B0 C   FIELD 00w01 FTHF (ro): FTHF
0x400250B0 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x400250B0 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on , writing 0 has no effect. - 1: Reading 1 means that a new data is available on , writing 1 clears this flag.
0x400250B0 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x400250B0 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x400250B0 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing this bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was higher than OLDTHL when the last OLD event occurred. - 1: The signal was lower than OLDTHL when the last OLD event occurred.
0x400250B0 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing this bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH when the last OLD event occurred. - 1: The signal was higher than OLDTHH when the last OLD event occurred.
0x400250B0 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x400250B0 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x400250B0 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x400250B0 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x400250B0 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x400250B4 B  REGISTER MDF_OEC0CR (rw): This register contains the offset compensation value.
0x400250B4 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x400250EC B  REGISTER MDF_SNPS0DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x400250EC C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x400250EC C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x400250EC C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x400250F0 B  REGISTER MDF_DFLT0DR (ro): This register is used to read the data processed by each digital filter.
0x400250F0 C   FIELD 08w24 DR: Data processed by digital filter.
0x40025100 B  REGISTER MDF_SITF1CR: This register is used to control the serial interfaces (SITFx).
0x40025100 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x40025100 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025100 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025100 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025100 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag
0x40025104 B  REGISTER MDF_BSMX1CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x40025104 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025104 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x40025108 B  REGISTER MDF_DFLT1CR: This register is used to control the digital filter x.
0x40025108 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x40025108 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025108 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025108 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025108 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025108 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025108 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025108 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025108 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x40025108 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x4002510C B  REGISTER MDF_DFLT1CICR (rw): This register is used to control the main CIC filter.
0x4002510C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002510C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002510C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002510C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x40025110 B  REGISTER MDF_DFLT1RSFR (rw): This register is used to control the reshape and HPF filters.
0x40025110 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025110 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025110 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025110 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025114 B  REGISTER MDF_DFLT1INTR (rw): This register is used to the integrator (INT) settings.
0x40025114 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025114 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025118 B  REGISTER MDF_OLD1CR: This register is used to configure the Out-of Limit Detector function.
0x40025118 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x40025118 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025118 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025118 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025118 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025118 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x4002511C B  REGISTER MDF_OLD1THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x4002511C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025120 B  REGISTER MDF_OLD1THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x40025120 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x40025124 B  REGISTER MDF_DLY1CR: This register is used for the adjustment stream delays.
0x40025124 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x40025124 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x40025128 B  REGISTER MDF_SCD1CR: This register is used for the adjustment stream delays.
0x40025128 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x40025128 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025128 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025128 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x4002512C B  REGISTER MDF_DFLT1IER (rw): MDF DFLTx interrupt enable register x
0x4002512C C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x4002512C C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x4002512C C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x4002512C C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x4002512C C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x4002512C C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x4002512C C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x4002512C C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x4002512C C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x40025130 B  REGISTER MDF_DFLT1ISR: This register contains the status flags for each digital filter path.
0x40025130 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x40025130 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x40025130 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x40025130 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x40025130 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x40025130 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x40025130 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x40025130 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x40025130 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x40025130 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x40025130 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x40025130 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x40025134 B  REGISTER MDF_OEC1CR (rw): This register contains the offset compensation value.
0x40025134 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x4002516C B  REGISTER MDF_SNPS1DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x4002516C C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x4002516C C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x4002516C C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x40025170 B  REGISTER MDF_DFLT1DR (ro): This register is used to read the data processed by each digital filter.
0x40025170 C   FIELD 08w24 DR: Data processed by digital filter.
0x40025180 B  REGISTER MDF_SITF2CR: This register is used to control the serial interfaces (SITFx).
0x40025180 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x40025180 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025180 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025180 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025180 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag
0x40025184 B  REGISTER MDF_BSMX2CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x40025184 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025184 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to a . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x40025188 B  REGISTER MDF_DFLT2CR: This register is used to control the digital filter 2.
0x40025188 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x40025188 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025188 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025188 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025188 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025188 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025188 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025188 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025188 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x40025188 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x4002518C B  REGISTER MDF_DFLT2CICR (rw): This register is used to control the main CIC filter.
0x4002518C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002518C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002518C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002518C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x40025190 B  REGISTER MDF_DFLT2RSFR (rw): This register is used to control the reshape and HPF filters.
0x40025190 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025190 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025190 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025190 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025194 B  REGISTER MDF_DFLT2INTR (rw): This register is used to the integrator (INT) settings.
0x40025194 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025194 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025198 B  REGISTER MDF_OLD2CR: This register is used to configure the Out-of Limit Detector function.
0x40025198 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x40025198 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025198 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025198 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025198 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025198 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x4002519C B  REGISTER MDF_OLD2THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x4002519C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400251A0 B  REGISTER MDF_OLD2THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x400251A0 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x400251A4 B  REGISTER MDF_DLY2CR: This register is used for the adjustment stream delays.
0x400251A4 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x400251A4 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x400251A8 B  REGISTER MDF_SCD2CR: This register is used for the adjustment stream delays.
0x400251A8 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x400251A8 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400251A8 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400251A8 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x400251AC B  REGISTER MDF_DFLT2IER (rw): MDF DFLTx interrupt enable register x
0x400251AC C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x400251AC C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x400251AC C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x400251AC C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x400251AC C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x400251AC C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x400251AC C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x400251AC C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x400251AC C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x400251B0 B  REGISTER MDF_DFLT2ISR: This register contains the status flags for each digital filter path.
0x400251B0 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x400251B0 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x400251B0 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x400251B0 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x400251B0 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x400251B0 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x400251B0 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x400251B0 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x400251B0 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x400251B0 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x400251B0 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x400251B0 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x400251B4 B  REGISTER MDF_OEC2CR (rw): This register contains the offset compensation value.
0x400251B4 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x400251EC B  REGISTER MDF_SNPS2DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x400251EC C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x400251EC C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x400251EC C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x400251F0 B  REGISTER MDF_DFLT2DR (ro): This register is used to read the data processed by each digital filter.
0x400251F0 C   FIELD 08w24 DR: Data processed by digital filter.
0x40025200 B  REGISTER MDF_SITF3CR: This register is used to control the serial interfaces (SITFx).
0x40025200 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x40025200 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025200 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025200 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025200 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured.
0x40025204 B  REGISTER MDF_BSMX3CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x40025204 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025204 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to a . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to a in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x40025208 B  REGISTER MDF_DFLT3CR: This register is used to control the digital filter 3.
0x40025208 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x40025208 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025208 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025208 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025208 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025208 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025208 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025208 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025208 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x40025208 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x4002520C B  REGISTER MDF_DFLT3CICR (rw): This register is used to control the main CIC filter.
0x4002520C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002520C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002520C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002520C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x40025210 B  REGISTER MDF_DFLT3RSFR (rw): This register is used to control the reshape and HPF filters.
0x40025210 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025210 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025210 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025210 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025214 B  REGISTER MDF_DFLT3INTR (rw): This register is used to the integrator (INT) settings.
0x40025214 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025214 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025218 B  REGISTER MDF_OLD3CR: This register is used to configure the Out-of Limit Detector function.
0x40025218 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x40025218 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025218 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025218 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025218 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025218 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x4002521C B  REGISTER MDF_OLD3THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x4002521C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025220 B  REGISTER MDF_OLD3THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x40025220 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x40025224 B  REGISTER MDF_DLY3CR: This register is used for the adjustment stream delays.
0x40025224 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x40025224 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x40025228 B  REGISTER MDF_SCD3CR: This register is used for the adjustment stream delays.
0x40025228 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x40025228 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025228 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025228 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x4002522C B  REGISTER MDF_DFLT3IER (rw): MDF DFLTx interrupt enable register x
0x4002522C C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x4002522C C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x4002522C C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x4002522C C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x4002522C C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x4002522C C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x4002522C C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x4002522C C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x4002522C C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x40025230 B  REGISTER MDF_DFLT3ISR: This register contains the status flags for each digital filter path.
0x40025230 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x40025230 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x40025230 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x40025230 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x40025230 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x40025230 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x40025230 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x40025230 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x40025230 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x40025230 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x40025230 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x40025230 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x40025234 B  REGISTER MDF_OEC3CR (rw): This register contains the offset compensation value.
0x40025234 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x4002526C B  REGISTER MDF_SNPS3DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x4002526C C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x4002526C C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x4002526C C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x40025270 B  REGISTER MDF_DFLT3DR (ro): This register is used to read the data processed by each digital filter.
0x40025270 C   FIELD 08w24 DR: Data processed by digital filter.
0x40025280 B  REGISTER MDF_SITF4CR: This register is used to control the serial interfaces (SITFx).
0x40025280 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x40025280 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025280 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025280 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025280 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured.
0x40025284 B  REGISTER MDF_BSMX4CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x40025284 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025284 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x40025288 B  REGISTER MDF_DFLT4CR: This register is used to control the digital filter 4.
0x40025288 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x40025288 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025288 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025288 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025288 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025288 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025288 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025288 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025288 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x40025288 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x4002528C B  REGISTER MDF_DFLT4CICR (rw): This register is used to control the main CIC filter.
0x4002528C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002528C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002528C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002528C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x40025290 B  REGISTER MDF_DFLT4RSFR (rw): This register is used to control the reshape and HPF filters.
0x40025290 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025290 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025290 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025290 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025294 B  REGISTER MDF_DFLT4INTR (rw): This register is used to the integrator (INT) settings.
0x40025294 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025294 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025298 B  REGISTER MDF_OLD4CR: This register is used to configure the Out-of Limit Detector function.
0x40025298 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x40025298 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025298 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025298 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025298 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025298 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x4002529C B  REGISTER MDF_OLD4THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x4002529C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400252A0 B  REGISTER MDF_OLD4THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x400252A0 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x400252A4 B  REGISTER MDF_DLY4CR: This register is used for the adjustment stream delays.
0x400252A4 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x400252A4 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x400252A8 B  REGISTER MDF_SCD4CR: This register is used for the adjustment stream delays.
0x400252A8 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x400252A8 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400252A8 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x400252A8 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x400252AC B  REGISTER MDF_DFLT4IER (rw): MDF DFLTx interrupt enable register x
0x400252AC C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x400252AC C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x400252AC C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x400252AC C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x400252AC C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x400252AC C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x400252AC C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x400252AC C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x400252AC C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x400252B0 B  REGISTER MDF_DFLT4ISR: This register contains the status flags for each digital filter path.
0x400252B0 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x400252B0 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x400252B0 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x400252B0 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x400252B0 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x400252B0 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x400252B0 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x400252B0 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x400252B0 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x400252B0 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x400252B0 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x400252B0 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x400252B4 B  REGISTER MDF_OEC4CR (rw): This register contains the offset compensation value.
0x400252B4 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x400252EC B  REGISTER MDF_SNPS4DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x400252EC C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x400252EC C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x400252EC C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x400252F0 B  REGISTER MDF_DFLT4DR (ro): This register is used to read the data processed by each digital filter.
0x400252F0 C   FIELD 08w24 DR: Data processed by digital filter.
0x40025300 B  REGISTER MDF_SITF5CR: This register is used to control the serial interfaces (SITFx).
0x40025300 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x40025300 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025300 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025300 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025300 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured.
0x40025304 B  REGISTER MDF_BSMX5CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x40025304 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025304 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x40025308 B  REGISTER MDF_DFLT5CR: This register is used to control the digital filter x.
0x40025308 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x40025308 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025308 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025308 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025308 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025308 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025308 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025308 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025308 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x40025308 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x4002530C B  REGISTER MDF_DFLT5CICR (rw): This register is used to control the main CIC filter.
0x4002530C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002530C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002530C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x4002530C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x40025310 B  REGISTER MDF_DFLT5RSFR (rw): This register is used to control the reshape and HPF filters.
0x40025310 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025310 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025310 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025310 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025314 B  REGISTER MDF_DFLT5INTR (rw): This register is used to the integrator (INT) settings.
0x40025314 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025314 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025318 B  REGISTER MDF_OLD5CR: This register is used to configure the Out-of Limit Detector function.
0x40025318 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x40025318 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025318 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025318 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025318 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025318 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x4002531C B  REGISTER MDF_OLD5THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x4002531C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025320 B  REGISTER MDF_OLD5THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x40025320 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x40025324 B  REGISTER MDF_DLY5CR: This register is used for the adjustment stream delays.
0x40025324 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x40025324 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x40025328 B  REGISTER MDF_SCD5CR: This register is used for the adjustment stream delays.
0x40025328 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x40025328 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025328 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x40025328 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x4002532C B  REGISTER MDF_DFLT5IER (rw): MDF DFLTx interrupt enable register x
0x4002532C C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x4002532C C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x4002532C C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x4002532C C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x4002532C C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x4002532C C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x4002532C C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x4002532C C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x4002532C C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x40025330 B  REGISTER MDF_DFLT5ISR: This register contains the status flags for each digital filter path.
0x40025330 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x40025330 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x40025330 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x40025330 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x40025330 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x40025330 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x40025330 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x40025330 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x40025330 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x40025330 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x40025330 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x40025330 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x40025334 B  REGISTER MDF_OEC5CR (rw): This register contains the offset compensation value.
0x40025334 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x4002536C B  REGISTER MDF_SNPS5DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x4002536C C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x4002536C C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x4002536C C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x40025370 B  REGISTER MDF_DFLT5DR (ro): This register is used to read the data processed by each digital filter.
0x40025370 C   FIELD 08w24 DR: Data processed by digital filter.
0x40026000 A PERIPHERAL RAMCFG
0x40026000 B  REGISTER RAM1CR (rw): RAMCFG SRAM x control register
0x40026000 C   FIELD 00w01 ECCE: ECCE
0x40026000 C   FIELD 04w01 ALE: ALE
0x40026000 C   FIELD 08w01 SRAMER: SRAMER
0x40026000 C   FIELD 16w03 WSC: WSC
0x40026008 B  REGISTER RAM1ISR (ro): RAMCFG RAMx interrupt status register
0x40026008 C   FIELD 00w01 SEDC: SEDC
0x40026008 C   FIELD 01w01 DED: DED
0x40026008 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x40026028 B  REGISTER RAM1ERKEYR (wo): RAMCFG SRAM x erase key register
0x40026028 C   FIELD 00w08 ERASEKEY: ERASEKEY
0x40026040 B  REGISTER RAM2CR (rw): RAMCFG SRAM x control register
0x40026040 C   FIELD 00w01 ECCE: ECCE
0x40026040 C   FIELD 04w01 ALE: ALE
0x40026040 C   FIELD 08w01 SRAMER: SRAMER
0x40026040 C   FIELD 16w03 WSC: WSC
0x40026044 B  REGISTER RAM2IER (rw): RAMCFG SRAM x interrupt enable register
0x40026044 C   FIELD 00w01 SEIE: SEIE
0x40026044 C   FIELD 01w01 DEIE: DEIE
0x40026044 C   FIELD 03w01 ECCNMI: ECCNMI
0x40026048 B  REGISTER RAM2ISR (ro): RAMCFG RAMx interrupt status register
0x40026048 C   FIELD 00w01 SEDC: SEDC
0x40026048 C   FIELD 01w01 DED: DED
0x40026048 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x4002604C B  REGISTER RAM2SEAR (ro): RAMCFG RAM x ECC single error address register
0x4002604C C   FIELD 00w32 ESEA: ESEA
0x40026050 B  REGISTER RAM2DEAR (ro): RAMCFG RAM x ECC double error address register
0x40026050 C   FIELD 00w32 EDEA: EDEA
0x40026054 B  REGISTER RAM2ICR (rw): RAMCFG RAM x interrupt clear register x
0x40026054 C   FIELD 00w01 CSEDC: CSEDC
0x40026054 C   FIELD 01w01 CDED: CDED
0x40026058 B  REGISTER RAM2WPR1 (rw): RAMCFG SRAM2 write protection register 1
0x40026058 C   FIELD 00w01 P0WP: P0WP
0x40026058 C   FIELD 01w01 P1WP: P1WP
0x40026058 C   FIELD 02w01 P2WP: P2WP
0x40026058 C   FIELD 03w01 P3WP: P3WP
0x40026058 C   FIELD 04w01 P4WP: P4WP
0x40026058 C   FIELD 05w01 P5WP: P5WP
0x40026058 C   FIELD 06w01 P6WP: P6WP
0x40026058 C   FIELD 07w01 P7WP: P7WP
0x40026058 C   FIELD 08w01 P8WP: P8WP
0x40026058 C   FIELD 09w01 P9WP: P9WP
0x40026058 C   FIELD 10w01 P10WP: P10WP
0x40026058 C   FIELD 11w01 P11WP: P11WP
0x40026058 C   FIELD 12w01 P12WP: P12WP
0x40026058 C   FIELD 13w01 P13WP: P13WP
0x40026058 C   FIELD 14w01 P14WP: P14WP
0x40026058 C   FIELD 15w01 P15WP: P15WP
0x40026058 C   FIELD 16w01 P16WP: P16WP
0x40026058 C   FIELD 17w01 P17WP: P17WP
0x40026058 C   FIELD 18w01 P18WP: P18WP
0x40026058 C   FIELD 19w01 P19WP: P19WP
0x40026058 C   FIELD 20w01 P20WP: P20WP
0x40026058 C   FIELD 21w01 P21WP: P21WP
0x40026058 C   FIELD 22w01 P22WP: P22WP
0x40026058 C   FIELD 23w01 P23WP: P23WP
0x40026058 C   FIELD 24w01 P24WP: P24WP
0x40026058 C   FIELD 25w01 P25WP: P25WP
0x40026058 C   FIELD 26w01 P26WP: P26WP
0x40026058 C   FIELD 27w01 P27WP: P27WP
0x40026058 C   FIELD 28w01 P28WP: P28WP
0x40026058 C   FIELD 29w01 P29WP: P29WP
0x40026058 C   FIELD 30w01 P30WP: P30WP
0x40026058 C   FIELD 31w01 P31WP: P31WP
0x4002605C B  REGISTER RAM2WPR2 (rw): RAMCFG SRAM2 write protection register 2
0x4002605C C   FIELD 00w01 P32WP: P32WP
0x4002605C C   FIELD 01w01 P33WP: P33WP
0x4002605C C   FIELD 02w01 P34WP: P34WP
0x4002605C C   FIELD 03w01 P35WP: P35WP
0x4002605C C   FIELD 04w01 P36WP: P36WP
0x4002605C C   FIELD 05w01 P37WP: P37WP
0x4002605C C   FIELD 06w01 P38WP: P38WP
0x4002605C C   FIELD 07w01 P39WP: P39WP
0x4002605C C   FIELD 08w01 P40WP: P40WP
0x4002605C C   FIELD 09w01 P41WP: P41WP
0x4002605C C   FIELD 10w01 P42WP: P42WP
0x4002605C C   FIELD 11w01 P43WP: P43WP
0x4002605C C   FIELD 12w01 P44WP: P44WP
0x4002605C C   FIELD 13w01 P45WP: P45WP
0x4002605C C   FIELD 14w01 P46WP: P46WP
0x4002605C C   FIELD 15w01 P47WP: P47WP
0x4002605C C   FIELD 16w01 P48WP: P48WP
0x4002605C C   FIELD 17w01 P49WP: P49WP
0x4002605C C   FIELD 18w01 P50WP: P50WP
0x4002605C C   FIELD 19w01 P51WP: P51WP
0x4002605C C   FIELD 20w01 P52WP: P52WP
0x4002605C C   FIELD 21w01 P53WP: P53WP
0x4002605C C   FIELD 22w01 P54WP: P54WP
0x4002605C C   FIELD 23w01 P55WP: P55WP
0x4002605C C   FIELD 24w01 P56WP: P56WP
0x4002605C C   FIELD 25w01 P57WP: P57WP
0x4002605C C   FIELD 26w01 P58WP: P58WP
0x4002605C C   FIELD 27w01 P59WP: P59WP
0x4002605C C   FIELD 28w01 P60WP: P60WP
0x4002605C C   FIELD 29w01 P61WP: P61WP
0x4002605C C   FIELD 30w01 P62WP: P62WP
0x4002605C C   FIELD 31w01 P63WP: P63WP
0x40026064 B  REGISTER RAM2ECCKEYR (wo): RAMCFG SRAM x ECC key register
0x40026064 C   FIELD 00w08 ECCKEY: ECCKEY
0x40026068 B  REGISTER RAM2ERKEYR (wo): RAMCFG SRAM x erase key register
0x40026068 C   FIELD 00w08 ERASEKEY: ERASEKEY
0x40026080 B  REGISTER RAM3CR (rw): RAMCFG SRAM x control register
0x40026080 C   FIELD 00w01 ECCE: ECCE
0x40026080 C   FIELD 04w01 ALE: ALE
0x40026080 C   FIELD 08w01 SRAMER: SRAMER
0x40026080 C   FIELD 16w03 WSC: WSC
0x40026084 B  REGISTER RAM3IER (rw): RAMCFG SRAM x interrupt enable register
0x40026084 C   FIELD 00w01 SEIE: SEIE
0x40026084 C   FIELD 01w01 DEIE: DEIE
0x40026084 C   FIELD 03w01 ECCNMI: ECCNMI
0x40026088 B  REGISTER RAM3ISR (ro): RAMCFG RAMx interrupt status register
0x40026088 C   FIELD 00w01 SEDC: SEDC
0x40026088 C   FIELD 01w01 DED: DED
0x40026088 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x4002608C B  REGISTER RAM3SEAR (ro): RAMCFG RAM x ECC single error address register
0x4002608C C   FIELD 00w32 ESEA: ESEA
0x40026090 B  REGISTER RAM3DEAR (ro): RAMCFG RAM x ECC double error address register
0x40026090 C   FIELD 00w32 EDEA: EDEA
0x40026094 B  REGISTER RAM3ICR (rw): RAMCFG RAM x interrupt clear register x
0x40026094 C   FIELD 00w01 CSEDC: CSEDC
0x40026094 C   FIELD 01w01 CDED: CDED
0x400260A4 B  REGISTER RAM3ECCKEYR (wo): RAMCFG SRAM x ECC key register
0x400260A4 C   FIELD 00w08 ECCKEY: ECCKEY
0x400260A8 B  REGISTER RAM3ERKEYR (wo): RAMCFG SRAM x erase key register
0x400260A8 C   FIELD 00w08 ERASEKEY: ERASEKEY
0x400260C0 B  REGISTER RAM4CR (rw): RAMCFG SRAM x control register
0x400260C0 C   FIELD 00w01 ECCE: ECCE
0x400260C0 C   FIELD 04w01 ALE: ALE
0x400260C0 C   FIELD 08w01 SRAMER: SRAMER
0x400260C0 C   FIELD 16w03 WSC: WSC
0x400260C8 B  REGISTER RAM4ISR (ro): RAMCFG RAMx interrupt status register
0x400260C8 C   FIELD 00w01 SEDC: SEDC
0x400260C8 C   FIELD 01w01 DED: DED
0x400260C8 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x400260E8 B  REGISTER RAM4ERKEYR (wo): RAMCFG SRAM x erase key register
0x400260E8 C   FIELD 00w08 ERASEKEY: ERASEKEY
0x40026100 B  REGISTER RAM5CR (rw): RAMCFG SRAM x control register
0x40026100 C   FIELD 00w01 ECCE: ECCE
0x40026100 C   FIELD 04w01 ALE: ALE
0x40026100 C   FIELD 08w01 SRAMER: SRAMER
0x40026100 C   FIELD 16w03 WSC: WSC
0x40026104 B  REGISTER RAM5IER (rw): RAMCFG SRAM x interrupt enable register
0x40026104 C   FIELD 00w01 SEIE: SEIE
0x40026104 C   FIELD 01w01 DEIE: DEIE
0x40026104 C   FIELD 03w01 ECCNMI: ECCNMI
0x40026108 B  REGISTER RAM5ISR (ro): RAMCFG RAMx interrupt status register
0x40026108 C   FIELD 00w01 SEDC: SEDC
0x40026108 C   FIELD 01w01 DED: DED
0x40026108 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x4002610C B  REGISTER RAM5SEAR (ro): RAMCFG RAM x ECC single error address register
0x4002610C C   FIELD 00w32 ESEA: ESEA
0x40026110 B  REGISTER RAM5DEAR (ro): RAMCFG RAM x ECC double error address register
0x40026110 C   FIELD 00w32 EDEA: EDEA
0x40026114 B  REGISTER RAM5ICR (rw): RAMCFG RAM x interrupt clear register x
0x40026114 C   FIELD 00w01 CSEDC: CSEDC
0x40026114 C   FIELD 01w01 CDED: CDED
0x4002B000 A PERIPHERAL DMA2D
0x4002B000 B  REGISTER CR (rw): control register
0x4002B000 C   FIELD 00w01 START: Start
0x4002B000 C   FIELD 01w01 SUSP: Suspend
0x4002B000 C   FIELD 02w01 ABORT: Abort
0x4002B000 C   FIELD 06w01 LOM: Line Offset Mode
0x4002B000 C   FIELD 08w01 TEIE: Transfer error interrupt enable
0x4002B000 C   FIELD 09w01 TCIE: Transfer complete interrupt enable
0x4002B000 C   FIELD 10w01 TWIE: Transfer watermark interrupt enable
0x4002B000 C   FIELD 11w01 CAEIE: CLUT access error interrupt enable
0x4002B000 C   FIELD 12w01 CTCIE: CLUT transfer complete interrupt enable
0x4002B000 C   FIELD 13w01 CEIE: Configuration Error Interrupt Enable
0x4002B000 C   FIELD 16w02 MODE: DMA2D mode
0x4002B004 B  REGISTER ISR (ro): Interrupt Status Register
0x4002B004 C   FIELD 00w01 TEIF: Transfer error interrupt flag
0x4002B004 C   FIELD 01w01 TCIF: Transfer complete interrupt flag
0x4002B004 C   FIELD 02w01 TWIF: Transfer watermark interrupt flag
0x4002B004 C   FIELD 03w01 CAEIF: CLUT access error interrupt flag
0x4002B004 C   FIELD 04w01 CTCIF: CLUT transfer complete interrupt flag
0x4002B004 C   FIELD 05w01 CEIF: Configuration error interrupt flag
0x4002B008 B  REGISTER IFCR (rw): interrupt flag clear register
0x4002B008 C   FIELD 00w01 CTEIF: Clear Transfer error interrupt flag
0x4002B008 C   FIELD 01w01 CTCIF: Clear transfer complete interrupt flag
0x4002B008 C   FIELD 02w01 CTWIF: Clear transfer watermark interrupt flag
0x4002B008 C   FIELD 03w01 CAECIF: Clear CLUT access error interrupt flag
0x4002B008 C   FIELD 04w01 CCTCIF: Clear CLUT transfer complete interrupt flag
0x4002B008 C   FIELD 05w01 CCEIF: Clear configuration error interrupt flag
0x4002B00C B  REGISTER FGMAR (rw): foreground memory address register
0x4002B00C C   FIELD 00w32 MA: Memory address
0x4002B010 B  REGISTER FGOR (rw): foreground offset register
0x4002B010 C   FIELD 00w16 LO: Line offset
0x4002B014 B  REGISTER BGMAR (rw): background memory address register
0x4002B014 C   FIELD 00w32 MA: Memory address
0x4002B018 B  REGISTER BGOR (rw): background offset register
0x4002B018 C   FIELD 00w16 LO: Line offset
0x4002B01C B  REGISTER FGPFCCR (rw): foreground PFC control register
0x4002B01C C   FIELD 00w04 CM: Color mode
0x4002B01C C   FIELD 04w01 CCM: CLUT color mode
0x4002B01C C   FIELD 05w01 START: Start
0x4002B01C C   FIELD 08w08 CS: CLUT size
0x4002B01C C   FIELD 16w02 AM: Alpha mode
0x4002B01C C   FIELD 20w01 AI: Alpha Inverted
0x4002B01C C   FIELD 21w01 RBS: Red Blue Swap
0x4002B01C C   FIELD 24w08 ALPHA: Alpha value
0x4002B020 B  REGISTER FGCOLR (rw): foreground color register
0x4002B020 C   FIELD 00w08 BLUE: Blue Value
0x4002B020 C   FIELD 08w08 GREEN: Green Value
0x4002B020 C   FIELD 16w08 RED: Red Value
0x4002B024 B  REGISTER BGPFCCR (rw): background PFC control register
0x4002B024 C   FIELD 00w04 CM: Color mode
0x4002B024 C   FIELD 04w01 CCM: CLUT Color mode
0x4002B024 C   FIELD 05w01 START: Start
0x4002B024 C   FIELD 08w08 CS: CLUT size
0x4002B024 C   FIELD 16w02 AM: Alpha mode
0x4002B024 C   FIELD 20w01 AI: Alpha Inverted
0x4002B024 C   FIELD 21w01 RBS: Red Blue Swap
0x4002B024 C   FIELD 24w08 ALPHA: Alpha value
0x4002B028 B  REGISTER BGCOLR (rw): background color register
0x4002B028 C   FIELD 00w08 BLUE: Blue Value
0x4002B028 C   FIELD 08w08 GREEN: Green Value
0x4002B028 C   FIELD 16w08 RED: Red Value
0x4002B02C B  REGISTER FGCMAR (rw): foreground CLUT memory address register
0x4002B02C C   FIELD 00w32 MA: Memory Address
0x4002B030 B  REGISTER BGCMAR (rw): background CLUT memory address register
0x4002B030 C   FIELD 00w32 MA: Memory address
0x4002B034 B  REGISTER OPFCCR (rw): output PFC control register
0x4002B034 C   FIELD 00w03 CM: Color mode
0x4002B034 C   FIELD 09w01 SB: Swap Bytes
0x4002B034 C   FIELD 20w01 AI: Alpha Inverted
0x4002B034 C   FIELD 21w01 RBS: Red Blue Swap
0x4002B038 B  REGISTER OCOLR_ARGB1555 (rw): output color register
0x4002B038 B  REGISTER OCOLR_ARGB4444 (rw): output color register
0x4002B038 B  REGISTER OCOLR_RGB565 (rw): output color register
0x4002B038 B  REGISTER OCOLR_RGB888 (rw): output color register
0x4002B038 C   FIELD 00w04 BLUE: Blue value in ARGB4444 mode
0x4002B038 C   FIELD 00w05 BLUE: Blue value in ARGB1555 mode
0x4002B038 C   FIELD 00w05 BLUE: Blue value in RGB565 mode
0x4002B038 C   FIELD 00w08 BLUE: Blue Value
0x4002B038 C   FIELD 04w04 GREEN: Green value in ARGB4444 mode
0x4002B038 C   FIELD 05w05 GREEN: Green value in ARGB1555 mode
0x4002B038 C   FIELD 05w06 GREEN: Green value in RGB565 mode
0x4002B038 C   FIELD 08w04 RED: Red value in ARGB4444 mode
0x4002B038 C   FIELD 08w08 GREEN: Green Value
0x4002B038 C   FIELD 10w05 RED: Red value in ARGB1555 mode
0x4002B038 C   FIELD 11w05 RED: Red value in RGB565 mode
0x4002B038 C   FIELD 12w04 ALPHA: Alpha channel value in ARGB4444
0x4002B038 C   FIELD 15w01 A: Alpha channel value in ARGB1555 mode
0x4002B038 C   FIELD 16w08 RED: Red Value
0x4002B038 C   FIELD 24w08 APLHA: Alpha Channel Value
0x4002B03C B  REGISTER OMAR (rw): output memory address register
0x4002B03C C   FIELD 00w32 MA: Memory Address
0x4002B040 B  REGISTER OOR (rw): output offset register
0x4002B040 C   FIELD 00w16 LO: Line Offset
0x4002B044 B  REGISTER NLR (rw): number of line register
0x4002B044 C   FIELD 00w16 NL: Number of lines
0x4002B044 C   FIELD 16w14 PL: Pixel per lines
0x4002B048 B  REGISTER LWR (rw): line watermark register
0x4002B048 C   FIELD 00w16 LW: Line watermark
0x4002B04C B  REGISTER AMTCR (rw): AHB master timer configuration register
0x4002B04C C   FIELD 00w01 EN: Enable
0x4002B04C C   FIELD 08w08 DT: Dead Time
0x4002B400 B  REGISTER FGCLUT (rw): FGCLUT
0x4002B400 C   FIELD 00w08 BLUE: BLUE
0x4002B400 C   FIELD 08w08 GREEN: GREEN
0x4002B400 C   FIELD 16w08 RED: RED
0x4002B400 C   FIELD 24w08 APLHA: APLHA
0x4002B800 B  REGISTER BGCLUT (rw): BGCLUT
0x4002B800 C   FIELD 00w08 BLUE: BLUE
0x4002B800 C   FIELD 08w08 GREEN: GREEN
0x4002B800 C   FIELD 16w08 RED: RED
0x4002B800 C   FIELD 24w08 APLHA: APLHA
0x40030400 A PERIPHERAL ICache
0x40030400 B  REGISTER ICACHE_CR: ICACHE control register
0x40030400 C   FIELD 00w01 EN (rw): EN
0x40030400 C   FIELD 01w01 CACHEINV (wo): CACHEINV
0x40030400 C   FIELD 02w01 WAYSEL (rw): WAYSEL
0x40030400 C   FIELD 16w01 HITMEN (rw): HITMEN
0x40030400 C   FIELD 17w01 MISSMEN (rw): MISSMEN
0x40030400 C   FIELD 18w01 HITMRST (rw): HITMRST
0x40030400 C   FIELD 19w01 MISSMRST (rw): MISSMRST
0x40030404 B  REGISTER ICACHE_SR (ro): ICACHE status register
0x40030404 C   FIELD 00w01 BUSYF: BUSYF
0x40030404 C   FIELD 01w01 BSYENDF: BSYENDF
0x40030404 C   FIELD 02w01 ERRF: ERRF
0x40030408 B  REGISTER ICACHE_IER (rw): ICACHE interrupt enable register
0x40030408 C   FIELD 01w01 BSYENDIE: BSYENDIE
0x40030408 C   FIELD 02w01 ERRIE: ERRIE
0x4003040C B  REGISTER ICACHE_FCR (wo): ICACHE flag clear register
0x4003040C C   FIELD 01w01 CBSYENDF: CBSYENDF
0x4003040C C   FIELD 02w01 CERRF: CERRF
0x40030410 B  REGISTER ICACHE_HMONR (ro): ICACHE hit monitor register
0x40030410 C   FIELD 00w32 HITMON: HITMON
0x40030414 B  REGISTER ICACHE_MMONR (ro): ICACHE miss monitor register
0x40030414 C   FIELD 00w16 MISSMON: MISSMON
0x40030420 B  REGISTER ICACHE_CRR0 (rw): ICACHE region configuration register
0x40030420 C   FIELD 00w08 BASEADDR: BASEADDR
0x40030420 C   FIELD 09w03 RSIZE: RSIZE
0x40030420 C   FIELD 15w01 REN: REN
0x40030420 C   FIELD 16w11 REMAPADDR: REMAPADDR
0x40030420 C   FIELD 28w01 MSTSEL: MSTSEL
0x40030420 C   FIELD 31w01 HBURST: HBURST
0x40030424 B  REGISTER ICACHE_CRR1 (rw): ICACHE region configuration register
0x40030424 C   FIELD 00w08 BASEADDR: BASEADDR
0x40030424 C   FIELD 09w03 RSIZE: RSIZE
0x40030424 C   FIELD 15w01 REN: REN
0x40030424 C   FIELD 16w11 REMAPADDR: REMAPADDR
0x40030424 C   FIELD 28w01 MSTSEL: MSTSEL
0x40030424 C   FIELD 31w01 HBURST: HBURST
0x40030428 B  REGISTER ICACHE_CRR2 (rw): ICACHE region configuration register
0x40030428 C   FIELD 00w08 BASEADDR: BASEADDR
0x40030428 C   FIELD 09w03 RSIZE: RSIZE
0x40030428 C   FIELD 15w01 REN: REN
0x40030428 C   FIELD 16w11 REMAPADDR: REMAPADDR
0x40030428 C   FIELD 28w01 MSTSEL: MSTSEL
0x40030428 C   FIELD 31w01 HBURST: HBURST
0x4003042C B  REGISTER ICACHE_CRR3 (rw): ICACHE region configuration register
0x4003042C C   FIELD 00w08 BASEADDR: BASEADDR
0x4003042C C   FIELD 09w03 RSIZE: RSIZE
0x4003042C C   FIELD 15w01 REN: REN
0x4003042C C   FIELD 16w11 REMAPADDR: REMAPADDR
0x4003042C C   FIELD 28w01 MSTSEL: MSTSEL
0x4003042C C   FIELD 31w01 HBURST: HBURST
0x40031400 A PERIPHERAL DCACHE
0x40031400 B  REGISTER DCACHE_CR: DCACHE control register
0x40031400 C   FIELD 00w01 EN (rw): EN
0x40031400 C   FIELD 01w01 CACHEINV (wo): CACHEINV
0x40031400 C   FIELD 08w03 CACHECMD (rw): CACHECMD
0x40031400 C   FIELD 11w01 STARTCMD (wo): STARTCMD
0x40031400 C   FIELD 16w01 RHITMEN (rw): RHITMEN
0x40031400 C   FIELD 17w01 RMISSMEN (rw): RMISSMEN
0x40031400 C   FIELD 18w01 RHITMRST (rw): RHITMRST
0x40031400 C   FIELD 19w01 RMISSMRST (rw): RMISSMRST
0x40031400 C   FIELD 20w01 WHITMEN (rw): WHITMEN
0x40031400 C   FIELD 21w01 WMISSMEN (rw): WMISSMEN
0x40031400 C   FIELD 22w01 WHITMRST (rw): WHITMRST
0x40031400 C   FIELD 23w01 WMISSMRST (rw): WMISSMRST
0x40031400 C   FIELD 31w01 HBURST (rw): HBURST
0x40031404 B  REGISTER DCACHE_SR (ro): DCACHE status register
0x40031404 C   FIELD 00w01 BUSYF: BUSYF
0x40031404 C   FIELD 01w01 BSYENDF: BSYENDF
0x40031404 C   FIELD 02w01 ERRF: ERRF
0x40031404 C   FIELD 03w01 BUSYCMDF: BUSYCMDF
0x40031404 C   FIELD 04w01 CMDENDF: CMDENDF
0x40031408 B  REGISTER DCACHE_IER (rw): DCACHE interrupt enable register
0x40031408 C   FIELD 01w01 BSYENDIE: BSYENDIE
0x40031408 C   FIELD 02w01 ERRIE: ERRIE
0x40031408 C   FIELD 04w01 CMDENDIE: CMDENDIE
0x4003140C B  REGISTER DCACHE_FCR (wo): DCACHE flag clear register
0x4003140C C   FIELD 01w01 CBSYENDF: CBSYENDF
0x4003140C C   FIELD 02w01 CERRF: CERRF
0x4003140C C   FIELD 04w01 CCMDENDF: CCMDENDF
0x40031410 B  REGISTER DCACHE_RHMONR (ro): DCACHE read-hit monitor register
0x40031410 C   FIELD 00w32 RHITMON: RHITMON
0x40031414 B  REGISTER DCACHE_RMMONR (ro): DCACHE read-miss monitor register
0x40031414 C   FIELD 00w16 MRISSMON: RMISSMON
0x40031420 B  REGISTER DCACHE_WHMONR (ro): write-hit monitor register
0x40031420 C   FIELD 00w32 WHITMON: WHITMON
0x40031424 B  REGISTER DCACHE_WMMONR (ro): write-miss monitor register
0x40031424 C   FIELD 00w16 WMISSMON: WMISSMON
0x40031428 B  REGISTER DCACHE_CMDRSADDRR (rw): command range start address register
0x40031428 C   FIELD 00w32 CMDSTARTADDR: CMDSTARTADDR
0x4003142C B  REGISTER DCACHE_CMDREADDRR (rw): command range start address register
0x4003142C C   FIELD 00w32 CMDENDADDR: CMDENDADDR
0x40032400 A PERIPHERAL GTZC1_TZSC
0x40032400 B  REGISTER TZSC_CR (rw): TZSC control register
0x40032400 C   FIELD 00w01 LCK: lock the configuration of GTZC1_TZSC_SECCFGRx and GTZC1_TZSC_PRIVCFGRx registers until next reset
0x40032410 B  REGISTER TZSC_SECCFGR1 (rw): TZSC secure configuration register 1
0x40032410 C   FIELD 00w01 TIM2SEC: secure access mode for TIM2
0x40032410 C   FIELD 01w01 TIM3SEC: secure access mode for TIM3
0x40032410 C   FIELD 02w01 TIM4SEC: secure access mode for TIM4
0x40032410 C   FIELD 03w01 TIM5SEC: secure access mode for TIM5
0x40032410 C   FIELD 04w01 TIM6SEC: secure access mode for TIM6
0x40032410 C   FIELD 05w01 TIM7SEC: secure access mode for TIM7
0x40032410 C   FIELD 06w01 WWDGSEC: secure access mode for WWDG
0x40032410 C   FIELD 07w01 IWDGSEC: secure access mode for IWDG
0x40032410 C   FIELD 08w01 SPI2SEC: secure access mode for SPI2
0x40032410 C   FIELD 09w01 USART2SEC: secure access mode for USART2
0x40032410 C   FIELD 10w01 USART3SEC: secure access mode for USART3
0x40032410 C   FIELD 11w01 UART4SEC: secure access mode for UART4
0x40032410 C   FIELD 12w01 UART5SEC: secure access mode for UART5
0x40032410 C   FIELD 13w01 I2C1SEC: secure access mode for I2C1
0x40032410 C   FIELD 14w01 I2C2SEC: secure access mode for I2C2
0x40032410 C   FIELD 15w01 CRSSEC: secure access mode for CRS
0x40032410 C   FIELD 16w01 I2C4SEC: secure access mode for I2C4
0x40032410 C   FIELD 17w01 LPTIM2SEC: secure access mode for LPTIM2
0x40032410 C   FIELD 18w01 FDCAN1SEC: secure access mode for FDCAN1
0x40032410 C   FIELD 19w01 UCPD1SEC: secure access mode for UCPD1
0x40032414 B  REGISTER TZSC_SECCFGR2 (rw): TZSC secure configuration register 2
0x40032414 C   FIELD 00w01 TIM1SEC: secure access mode for TIM1
0x40032414 C   FIELD 01w01 SPI1SEC: secure access mode for SPI1
0x40032414 C   FIELD 02w01 TIM8SEC: secure access mode for TIM8
0x40032414 C   FIELD 03w01 USART1SEC: secure access mode for USART1
0x40032414 C   FIELD 04w01 TIM15SEC: secure access mode for TIM5
0x40032414 C   FIELD 05w01 TIM16SEC: secure access mode for TIM6
0x40032414 C   FIELD 06w01 TIM17SEC: secure access mode for TIM7
0x40032414 C   FIELD 07w01 SAI1SEC: secure access mode for SAI1
0x40032414 C   FIELD 08w01 SAI2SEC: secure access mode for SAI2
0x40032418 B  REGISTER TZSC_SECCFGR3 (rw): TZSC secure configuration register 3
0x40032418 C   FIELD 00w01 MDF1SEC: secure access mode for MDF1
0x40032418 C   FIELD 01w01 CORDICSEC: secure access mode for CORDIC
0x40032418 C   FIELD 02w01 FMACSEC: secure access mode for FMAC
0x40032418 C   FIELD 03w01 CRCSEC: secure access mode for CRC
0x40032418 C   FIELD 04w01 TSCSEC: secure access mode for TSC
0x40032418 C   FIELD 05w01 DMA2DSEC: secure access mode for register of DMA2D
0x40032418 C   FIELD 06w01 ICACHE_REGSEC: secure access mode for ICACHE registers
0x40032418 C   FIELD 07w01 DCACHE_REGSEC: secure access mode for DCACHE registers
0x40032418 C   FIELD 08w01 ADC1SEC: secure access mode for ADC1
0x40032418 C   FIELD 09w01 DCMISEC: secure access mode for DCMI
0x40032418 C   FIELD 10w01 OTGFSSEC: secure access mode for OTG_FS
0x40032418 C   FIELD 11w01 AESSEC: secure access mode for AES
0x40032418 C   FIELD 12w01 HASHSEC: secure access mode for HASH
0x40032418 C   FIELD 13w01 RNGSEC: secure access mode for RNG
0x40032418 C   FIELD 14w01 PKASEC: secure access mode for PKA
0x40032418 C   FIELD 15w01 SAESSEC: secure access mode for SAES
0x40032418 C   FIELD 16w01 OCTOSPIMSEC: secure access mode for OCTOSPIM
0x40032418 C   FIELD 17w01 SDMMC1SEC: secure access mode for SDMMC2
0x40032418 C   FIELD 18w01 SDMMC2SEC: secure access mode for SDMMC1
0x40032418 C   FIELD 19w01 FSMC_REGSEC: secure access mode for FSMC registers
0x40032418 C   FIELD 20w01 OCTOSPI1_REGSEC: secure access mode for OCTOSPI1 registers
0x40032418 C   FIELD 21w01 OCTOSPI2_REGSEC: secure access mode for OCTOSPI2 registers
0x40032418 C   FIELD 22w01 RAMCFGSEC: secure access mode for RAMCFG
0x40032420 B  REGISTER TZSC_PRIVCFGR1 (rw): TZSC privilege configuration register 1
0x40032420 C   FIELD 00w01 TIM2PRIV: privileged access mode for TIM2
0x40032420 C   FIELD 01w01 TIM3PRIV: privileged access mode for TIM3
0x40032420 C   FIELD 02w01 TIM4PRIV: privileged access mode for TIM4
0x40032420 C   FIELD 03w01 TIM5PRIV: privileged access mode for TIM5
0x40032420 C   FIELD 04w01 TIM6PRIV: privileged access mode for TIM6
0x40032420 C   FIELD 05w01 TIM7PRIV: privileged access mode for TIM7
0x40032420 C   FIELD 06w01 WWDGPRIV: privileged access mode for WWDG
0x40032420 C   FIELD 07w01 IWDGPRIV: privileged access mode for IWDG
0x40032420 C   FIELD 08w01 SPI2PRIV: privileged access mode for SPI2
0x40032420 C   FIELD 09w01 USART2PRIV: privileged access mode for USART2
0x40032420 C   FIELD 10w01 USART3PRIV: privileged access mode for USART3
0x40032420 C   FIELD 11w01 UART4PRIV: privileged access mode for UART4
0x40032420 C   FIELD 12w01 UART5PRIV: privileged access mode for UART5
0x40032420 C   FIELD 13w01 I2C1PRIV: privileged access mode for I2C1
0x40032420 C   FIELD 14w01 I2C2PRIV: privileged access mode for I2C2
0x40032420 C   FIELD 15w01 CRSPRIV: privileged access mode for CRS
0x40032420 C   FIELD 16w01 I2C4PRIV: privileged access mode for I2C4
0x40032420 C   FIELD 17w01 LPTIM2PRIV: privileged access mode for LPTIM2
0x40032420 C   FIELD 18w01 FDCAN1PRIV: privileged access mode for FDCAN1
0x40032420 C   FIELD 19w01 UCPD1PRIV: privileged access mode for UCPD1
0x40032424 B  REGISTER TZSC_PRIVCFGR2 (rw): TZSC privilege configuration register 2
0x40032424 C   FIELD 00w01 TIM1PRIV: privileged access mode for TIM1
0x40032424 C   FIELD 01w01 SPI1PRIV: privileged access mode for SPI1PRIV
0x40032424 C   FIELD 02w01 TIM8PRIV: privileged access mode for TIM8
0x40032424 C   FIELD 03w01 USART1PRIV: privileged access mode for USART1
0x40032424 C   FIELD 04w01 TIM15PRIV: privileged access mode for TIM15
0x40032424 C   FIELD 05w01 TIM16PRIV: privileged access mode for TIM16
0x40032424 C   FIELD 06w01 TIM17PRIV: privileged access mode for TIM17
0x40032424 C   FIELD 07w01 SAI1PRIV: privileged access mode for SAI1
0x40032424 C   FIELD 08w01 SAI2PRIV: privileged access mode for SAI2
0x40032428 B  REGISTER TZSC_PRIVCFGR3 (rw): TZSC privilege configuration register 3
0x40032428 C   FIELD 00w01 MDF1PRIV: privileged access mode for MDF1
0x40032428 C   FIELD 01w01 CORDICPRIV: privileged access mode for CORDIC
0x40032428 C   FIELD 02w01 FMACPRIV: privileged access mode for FMAC
0x40032428 C   FIELD 03w01 CRCPRIV: privileged access mode for CRC
0x40032428 C   FIELD 04w01 TSCPRIV: privileged access mode for TSC
0x40032428 C   FIELD 05w01 DMA2DPRIV: privileged access mode for register of DMA2D
0x40032428 C   FIELD 06w01 ICACHE_REGPRIV: privileged access mode for ICACHE registers
0x40032428 C   FIELD 07w01 DCACHE_REGPRIV: privileged access mode for DCACHE registers
0x40032428 C   FIELD 08w01 ADC1PRIV: privileged access mode for ADC1
0x40032428 C   FIELD 09w01 DCMIPRIV: privileged access mode for DCMI
0x40032428 C   FIELD 10w01 OTGFSPRIV: privileged access mode for OTG_FS
0x40032428 C   FIELD 11w01 AESPRIV: privileged access mode for AES
0x40032428 C   FIELD 12w01 HASHPRIV: privileged access mode for HASH
0x40032428 C   FIELD 13w01 RNGPRIV: privileged access mode for RNG
0x40032428 C   FIELD 14w01 PKAPRIV: privileged access mode for PKA
0x40032428 C   FIELD 15w01 SAESPRIV: privileged access mode for SAES
0x40032428 C   FIELD 16w01 OCTOSPIMPRIV: privileged access mode for OCTOSPIM
0x40032428 C   FIELD 17w01 SDMMC1PRIV: privileged access mode for SDMMC2
0x40032428 C   FIELD 18w01 SDMMC2PRIV: privileged access mode for SDMMC1
0x40032428 C   FIELD 19w01 FSMC_REGPRIV: privileged access mode for FSMC registers
0x40032428 C   FIELD 20w01 OCTOSPI1_REGPRIV: privileged access mode for OCTOSPI1
0x40032428 C   FIELD 21w01 OCTOSPI2_REGPRIV: privileged access mode for OCTOSPI2
0x40032428 C   FIELD 22w01 RAMCFGPRIV: privileged access mode for RAMCFG
0x40032440 B  REGISTER TZSC_MPCWM1ACFGR (rw): TZSC memory 1 sub-region A watermark configuration register
0x40032440 C   FIELD 00w01 SREN: Sub-region enable
0x40032440 C   FIELD 01w01 SRLOCK: Sub-region lock
0x40032440 C   FIELD 08w01 SEC: Secure sub-region
0x40032440 C   FIELD 09w01 PRIV: Privileged sub-region
0x40032444 B  REGISTER TZSC_MPCWM1AR (rw): TZSC memory 1 sub-region A watermark register
0x40032444 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x40032444 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x40032448 B  REGISTER TZSC_MPCWM1BCFGR (rw): TZSC memory 1 sub-region B watermark configuration register
0x40032448 C   FIELD 00w01 SREN: Sub-region enable
0x40032448 C   FIELD 01w01 SRLOCK: Sub-region lock
0x40032448 C   FIELD 08w01 SEC: Secure sub-region
0x40032448 C   FIELD 09w01 PRIV: Privileged sub-region
0x4003244C B  REGISTER TZSC_MPCWM1BR (rw): TZSC memory 1 sub-region B watermark register
0x4003244C C   FIELD 00w11 SUBB_START: Start of sub-region A
0x4003244C C   FIELD 16w12 SUBB_LENGTH: Length of sub-region A
0x40032450 B  REGISTER TZSC_MPCWM2ACFGR (rw): TZSC memory 2 sub-region A watermark configuration register
0x40032450 C   FIELD 00w01 SREN: Sub-region enable
0x40032450 C   FIELD 01w01 SRLOCK: Sub-region lock
0x40032450 C   FIELD 08w01 SEC: Secure sub-region
0x40032450 C   FIELD 09w01 PRIV: Privileged sub-region
0x40032454 B  REGISTER TZSC_MPCWM2AR (rw): TZSC memory 2 sub-region A watermark register
0x40032454 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x40032454 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x40032458 B  REGISTER TZSC_MPCWM2BCFGR (rw): TZSC memory 2 sub-region B watermark configuration register
0x40032458 C   FIELD 00w01 SREN: Sub-region enable
0x40032458 C   FIELD 01w01 SRLOCK: Sub-region lock
0x40032458 C   FIELD 08w01 SEC: Secure sub-region
0x40032458 C   FIELD 09w01 PRIV: Privileged sub-region
0x4003245C B  REGISTER TZSC_MPCWM2BR (rw): TZSC memory 2 sub-region B watermark register
0x4003245C C   FIELD 00w11 SUBB_START: Start of sub-region A
0x4003245C C   FIELD 16w12 SUBB_LENGTH: Length of sub-region A
0x40032460 B  REGISTER TZSC_MPCWM3ACFGR (rw): TZSC memory 3 sub-region A watermark configuration register
0x40032460 C   FIELD 00w01 SREN: Sub-region enable
0x40032460 C   FIELD 01w01 SRLOCK: Sub-region lock
0x40032460 C   FIELD 08w01 SEC: Secure sub-region
0x40032460 C   FIELD 09w01 PRIV: Privileged sub-region
0x40032464 B  REGISTER TZSC_MPCWM3AR (rw): TZSC memory 3 sub-region A watermark register
0x40032464 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x40032464 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x40032470 B  REGISTER TZSC_MPCWM4ACFGR (rw): TZSC memory 4 sub-region A watermark configuration register
0x40032470 C   FIELD 00w01 SREN: Sub-region enable
0x40032470 C   FIELD 01w01 SRLOCK: Sub-region lock
0x40032470 C   FIELD 08w01 SEC: Secure sub-region
0x40032470 C   FIELD 09w01 PRIV: Privileged sub-region
0x40032474 B  REGISTER TZSC_MPCWM4AR (rw): TZSC memory 4 sub-region A watermark register
0x40032474 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x40032474 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x40032480 B  REGISTER TZSC_MPCWM5ACFGR (rw): TZSC memory 5 sub-region A watermark configuration register
0x40032480 C   FIELD 00w01 SREN: Sub-region enable
0x40032480 C   FIELD 01w01 SRLOCK: Sub-region lock
0x40032480 C   FIELD 08w01 SEC: Secure sub-region
0x40032480 C   FIELD 09w01 PRIV: Privileged sub-region
0x40032484 B  REGISTER TZSC_MPCWM5AR (rw): TZSC memory 5 sub-region A watermark register
0x40032484 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x40032484 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x40032488 B  REGISTER TZSC_MPCWM5BCFGR (rw): TZSC memory 5 sub-region B watermark configuration register
0x40032488 C   FIELD 00w01 SREN: Sub-region enable
0x40032488 C   FIELD 01w01 SRLOCK: Sub-region lock
0x40032488 C   FIELD 08w01 SEC: Secure sub-region
0x40032488 C   FIELD 09w01 PRIV: Privileged sub-region
0x4003248C B  REGISTER TZSC_MPCWM5BR (rw): TZSC memory 5 sub-region B watermark register
0x4003248C C   FIELD 00w11 SUBB_START: Start of sub-region A
0x4003248C C   FIELD 16w12 SUBB_LENGTH: Length of sub-region A
0x40032800 A PERIPHERAL GTZC1_TZIC
0x40032800 B  REGISTER IER1 (rw): TZIC interrupt enable register 1
0x40032800 C   FIELD 00w01 TIM2IE: TIM2IE
0x40032800 C   FIELD 01w01 TIM3IE: TIM3IE
0x40032800 C   FIELD 02w01 TIM4IE: TIM4IE
0x40032800 C   FIELD 03w01 TIM5IE: TIM5IE
0x40032800 C   FIELD 04w01 TIM6IE: TIM6IE
0x40032800 C   FIELD 05w01 TIM7IE: TIM7IE
0x40032800 C   FIELD 06w01 WWDGIE: WWDGIE
0x40032800 C   FIELD 07w01 IWDGIE: IWDGIE
0x40032800 C   FIELD 08w01 SPI2IE: SPI2IE
0x40032800 C   FIELD 09w01 USART2IE: illegal access interrupt enable for USART2
0x40032800 C   FIELD 10w01 USART3IE: illegal access interrupt enable for USART3
0x40032800 C   FIELD 11w01 USART4IE: illegal access interrupt enable for UART4
0x40032800 C   FIELD 12w01 UART5IE: illegal access interrupt enable for UART5
0x40032800 C   FIELD 13w01 I2C1IE: illegal access interrupt enable for I2C1
0x40032800 C   FIELD 14w01 I2C2IE: illegal access interrupt enable for I2C2
0x40032800 C   FIELD 15w01 CRSIE: illegal access interrupt enable for CRS
0x40032800 C   FIELD 16w01 I2C4IE: illegal access interrupt enable for I2C4
0x40032800 C   FIELD 17w01 LPTIM2IE: illegal access interrupt enable for LPTIM2
0x40032800 C   FIELD 18w01 FDCAN1IE: illegal access interrupt enable for FDCAN1
0x40032800 C   FIELD 19w01 UCPD1IE: illegal access interrupt enable for UCPD1
0x40032804 B  REGISTER IER2 (rw): TZIC interrupt enable register 2
0x40032804 C   FIELD 00w01 TIM1IE: illegal access interrupt enable for TIM1
0x40032804 C   FIELD 01w01 SPI1IE: illegal access interrupt enable for SPI1
0x40032804 C   FIELD 02w01 TIM8IE: illegal access interrupt enable for TIM8
0x40032804 C   FIELD 03w01 USART1IE: illegal access interrupt enable for USART1
0x40032804 C   FIELD 04w01 TIM15IE: illegal access interrupt enable for TIM5
0x40032804 C   FIELD 05w01 TIM16IE: illegal access interrupt enable for TIM6
0x40032804 C   FIELD 06w01 TIM17IE: illegal access interrupt enable for TIM7
0x40032804 C   FIELD 07w01 SAI1IE: illegal access interrupt enable for SAI1
0x40032804 C   FIELD 08w01 SAI2IE: illegal access interrupt enable for SAI2
0x40032808 B  REGISTER IER3 (rw): TZIC interrupt enable register 3
0x40032808 C   FIELD 00w01 MDF1IE: illegal access interrupt enable for MDF1
0x40032808 C   FIELD 01w01 CORDICIE: illegal access interrupt enable for CORDIC
0x40032808 C   FIELD 02w01 FMACIE: illegal access interrupt enable for FMAC
0x40032808 C   FIELD 03w01 CRCIE: illegal access interrupt enable for CRC
0x40032808 C   FIELD 04w01 TSCIE: illegal access interrupt enable for TSC
0x40032808 C   FIELD 05w01 DMA2DIE: illegal access interrupt enable for register of DMA2D
0x40032808 C   FIELD 06w01 ICACHEIE: illegal access interrupt enable for ICACHE registers
0x40032808 C   FIELD 07w01 DCACHEIE: illegal access interrupt enable for DCACHE registers
0x40032808 C   FIELD 08w01 ADC1IE: illegal access interrupt enable for ADC1
0x40032808 C   FIELD 09w01 DCMIIE: illegal access interrupt enable for DCMI
0x40032808 C   FIELD 10w01 OTGFSIE: illegal access interrupt enable for OTG_FS
0x40032808 C   FIELD 11w01 AESIE: illegal access interrupt enable for AES
0x40032808 C   FIELD 12w01 HASHIE: illegal access interrupt enable for HASH
0x40032808 C   FIELD 13w01 RNGIE: illegal access interrupt enable for RNG
0x40032808 C   FIELD 14w01 PKAIE: illegal access interrupt enable for PKA
0x40032808 C   FIELD 15w01 SAESIE: illegal access interrupt enable for SAES
0x40032808 C   FIELD 16w01 OCTOSPIMIE: illegal access interrupt enable for OCTOSPIM
0x40032808 C   FIELD 17w01 SDMMC1IE: illegal access interrupt enable for SDMMC2
0x40032808 C   FIELD 18w01 SDMMC2IE: illegal access interrupt enable for SDMMC1
0x40032808 C   FIELD 19w01 FSMCIE: illegal access interrupt enable for FSMC registers
0x40032808 C   FIELD 20w01 OCTOSPI1IE: illegal access interrupt enable for OCTOSPI1 registers
0x40032808 C   FIELD 21w01 OCTOSPI2IE: illegal access interrupt enable for OCTOSPI2 registers
0x40032808 C   FIELD 22w01 RAMCFGIE: illegal access interrupt enable for RAMCFG
0x4003280C B  REGISTER IER4 (rw): TZIC interrupt enable register 4
0x4003280C C   FIELD 00w01 GPDMA1IE: illegal access interrupt enable for GPDMA1
0x4003280C C   FIELD 01w01 FLASHIE: illegal access interrupt enable for FLASH memory
0x4003280C C   FIELD 02w01 FLASH_REGIE: illegal access interrupt enable for FLASH registers
0x4003280C C   FIELD 03w01 OTFDEC1IE: illegal access interrupt enable for OTFDEC1
0x4003280C C   FIELD 04w01 OTFDEC2IE: illegal access interrupt enable for OTFDEC2
0x4003280C C   FIELD 14w01 TZSC1IE: illegal access interrupt enable for GTZC1 TZSC registers
0x4003280C C   FIELD 15w01 TZIC1IE: illegal access interrupt enable for GTZC1 TZIC registers
0x4003280C C   FIELD 16w01 OCTOSPI1_MEMIE: illegal access interrupt enable for MPCWM1 (OCTOSPI1) memory bank
0x4003280C C   FIELD 17w01 FSMC_MEMIE: illegal access interrupt enable for MPCWM2 (FSMC NAND) and MPCWM3
0x4003280C C   FIELD 18w01 BKPSRAMIE: illegal access interrupt enable for MPCWM3 (BKPSRAM) memory bank
0x4003280C C   FIELD 19w01 OCTOSPI2_MEMIE: illegal access interrupt enable for OCTOSPI2 memory bank
0x4003280C C   FIELD 24w01 SRAM1IE: illegal access interrupt enable for SRAM1
0x4003280C C   FIELD 25w01 MPCBB1_REGIE: illegal access interrupt enable for MPCBB1 registers
0x4003280C C   FIELD 26w01 SRAM2IE: illegal access interrupt enable for SRAM2
0x4003280C C   FIELD 27w01 MPCBB2_REGIE: illegal access interrupt enable for MPCBB2 registers
0x4003280C C   FIELD 28w01 SRAM3IE: illegal access interrupt enable for SRAM3
0x4003280C C   FIELD 29w01 MPCBB3_REGIE: illegal access interrupt enable for MPCBB3 registers
0x40032810 B  REGISTER SR1 (ro): TZIC status register 1
0x40032810 C   FIELD 00w01 TIM2F: illegal access flag for TIM2
0x40032810 C   FIELD 01w01 TIM3F: illegal access flag for TIM3
0x40032810 C   FIELD 02w01 TIM4F: illegal access flag for TIM4
0x40032810 C   FIELD 03w01 TIM5F: illegal access flag for TIM5
0x40032810 C   FIELD 04w01 TIM6F: illegal access flag for TIM6
0x40032810 C   FIELD 05w01 TIM7F: illegal access flag for TIM7
0x40032810 C   FIELD 06w01 WWDGF: illegal access flag for WWDG
0x40032810 C   FIELD 07w01 IWDGF: illegal access flag for IWDG
0x40032810 C   FIELD 08w01 SPI2F: illegal access flag for SPI2
0x40032810 C   FIELD 09w01 USART2F: illegal access flag for USART2
0x40032810 C   FIELD 10w01 USART3F: illegal access flag for USART3
0x40032810 C   FIELD 11w01 UART4F: illegal access flag for UART4
0x40032810 C   FIELD 12w01 UART5F: illegal access flag for UART5
0x40032810 C   FIELD 13w01 I2C1F: illegal access flag for I2C1
0x40032810 C   FIELD 14w01 I2C2F: illegal access flag for I2C2
0x40032810 C   FIELD 15w01 CRSF: illegal access flag for CRS
0x40032810 C   FIELD 16w01 I2C4F: illegal access flag for I2C4
0x40032810 C   FIELD 17w01 LPTIM2F: illegal access flag for LPTIM2
0x40032810 C   FIELD 18w01 FDCAN1F: illegal access flag for FDCAN1
0x40032810 C   FIELD 19w01 UCPD1F: illegal access flag for UCPD1
0x40032814 B  REGISTER SR2 (ro): TZIC status register 2
0x40032814 C   FIELD 00w01 TIM1F: illegal access flag for TIM1
0x40032814 C   FIELD 01w01 SPI1F: illegal access flag for SPI1
0x40032814 C   FIELD 02w01 TIM8F: illegal access flag for TIM8
0x40032814 C   FIELD 03w01 USART1F: illegal access flag for USART1
0x40032814 C   FIELD 04w01 TIM15F: illegal access flag for TIM5
0x40032814 C   FIELD 05w01 TIM16F: illegal access flag for TIM6
0x40032814 C   FIELD 06w01 TIM17F: illegal access flag for TIM7
0x40032814 C   FIELD 07w01 SAI1F: illegal access flag for SAI1
0x40032814 C   FIELD 08w01 SAI2F: illegal access flag for SAI2
0x40032818 B  REGISTER SR3 (ro): TZIC status register 3
0x40032818 C   FIELD 00w01 MDF1F: illegal access flag for MDF1
0x40032818 C   FIELD 01w01 CORDICF: illegal access flag for CORDIC
0x40032818 C   FIELD 02w01 FMACF: illegal access flag for FMAC
0x40032818 C   FIELD 03w01 CRCF: illegal access flag for CRC
0x40032818 C   FIELD 04w01 TSCF: illegal access flag for TSC
0x40032818 C   FIELD 05w01 DMA2DF: illegal access flag for register of DMA2D
0x40032818 C   FIELD 06w01 ICACHEF: illegal access flag for ICACHE registers
0x40032818 C   FIELD 07w01 DCACHEF: illegal access flag for DCACHE registers
0x40032818 C   FIELD 08w01 ADC1F: illegal access flag for ADC1
0x40032818 C   FIELD 09w01 DCMIF: illegal access flag for DCMI
0x40032818 C   FIELD 10w01 OTGFSF: illegal access flag for OTG_FS
0x40032818 C   FIELD 11w01 AESF: illegal access flag for AES
0x40032818 C   FIELD 12w01 HASHF: illegal access flag for HASH
0x40032818 C   FIELD 13w01 RNGF: illegal access flag for RNG
0x40032818 C   FIELD 14w01 PKAF: illegal access flag for PKA
0x40032818 C   FIELD 15w01 SAESF: illegal access flag for SAES
0x40032818 C   FIELD 16w01 OCTOSPIMF: illegal access flag for OCTOSPIM
0x40032818 C   FIELD 17w01 SDMMC1F: illegal access flag for SDMMC2
0x40032818 C   FIELD 18w01 SDMMC2F: illegal access flag for SDMMC1
0x40032818 C   FIELD 19w01 FSMCF: illegal access flag for FSMC registers
0x40032818 C   FIELD 20w01 OCTOSPI1F: illegal access flag for OCTOSPI1 registers
0x40032818 C   FIELD 21w01 OCTOSPI2F: illegal access flag for OCTOSPI2 registers
0x40032818 C   FIELD 22w01 RAMCFGF: illegal access flag for RAMCFG
0x4003281C B  REGISTER SR4 (ro): TZIC status register 4
0x4003281C C   FIELD 00w01 GPDMA1F: illegal access flag for GPDMA1
0x4003281C C   FIELD 01w01 FLASHF: illegal access flag for FLASH memory
0x4003281C C   FIELD 02w01 FLASH_REGF: illegal access flag for FLASH registers
0x4003281C C   FIELD 03w01 OTFDEC1F: illegal access flag for OTFDEC1
0x4003281C C   FIELD 04w01 OTFDEC2F: illegal access flag for OTFDEC2
0x4003281C C   FIELD 14w01 TZSC1F: illegal access flag for GTZC1 TZSC registers
0x4003281C C   FIELD 15w01 TZIC1F: illegal access flag for GTZC1 TZIC registers
0x4003281C C   FIELD 16w01 OCTOSPI1_MEMF: illegal access flag for MPCWM1 (OCTOSPI1) memory bank
0x4003281C C   FIELD 17w01 FSMC_MEMF: illegal access flag for MPCWM2 (FSMC NAND) and MPCWM3 (FSMC NOR)
0x4003281C C   FIELD 18w01 BKPSRAMF: illegal access flag for MPCWM3 (BKPSRAM) memory bank
0x4003281C C   FIELD 19w01 OCTOSPI2_MEMF: illegal access flag for OCTOSPI2 memory bank
0x4003281C C   FIELD 24w01 SRAM1F: illegal access flag for SRAM1
0x4003281C C   FIELD 25w01 MPCBB1_REGF: illegal access flag for MPCBB1 registers
0x4003281C C   FIELD 26w01 SRAM2F: illegal access flag for SRAM2
0x4003281C C   FIELD 27w01 MPCBB2_REGF: illegal access flag for MPCBB2 registers
0x4003281C C   FIELD 28w01 SRAM3F: illegal access flag for SRAM3
0x4003281C C   FIELD 29w01 MPCBB3_REGF: illegal access flag for MPCBB3 registers
0x40032820 B  REGISTER FCR1 (wo): TZIC flag clear register 1
0x40032820 C   FIELD 00w01 CTIM2F: clear the illegal access flag for TIM2
0x40032820 C   FIELD 01w01 CTIM3F: clear the illegal access flag for TIM3
0x40032820 C   FIELD 02w01 CTIM4F: clear the illegal access flag for TIM4
0x40032820 C   FIELD 03w01 CTIM5F: clear the illegal access flag for TIM5
0x40032820 C   FIELD 04w01 CTIM6F: clear the illegal access flag for TIM6
0x40032820 C   FIELD 05w01 CTIM7F: clear the illegal access flag for TIM7
0x40032820 C   FIELD 06w01 CWWDGF: clear the illegal access flag for WWDG
0x40032820 C   FIELD 07w01 CIWDGF: clear the illegal access flag for IWDG
0x40032820 C   FIELD 08w01 CSPI2F: clear the illegal access flag for SPI2
0x40032820 C   FIELD 09w01 CUSART2F: clear the illegal access flag for USART2
0x40032820 C   FIELD 10w01 CUSART3F: clear the illegal access flag for USART3
0x40032820 C   FIELD 11w01 CUART4F: clear the illegal access flag for UART4
0x40032820 C   FIELD 12w01 CUART5F: clear the illegal access flag for UART5
0x40032820 C   FIELD 13w01 CI2C1F: clear the illegal access flag for I2C1
0x40032820 C   FIELD 14w01 CI2C2F: clear the illegal access flag for I2C2
0x40032820 C   FIELD 15w01 CCRSF: clear the illegal access flag for CRS
0x40032820 C   FIELD 16w01 CI2C4F: clear the illegal access flag for I2C4
0x40032820 C   FIELD 17w01 CLPTIM2F: clear the illegal access flag for LPTIM2
0x40032820 C   FIELD 18w01 CFDCAN1F: clear the illegal access flag for FDCAN1
0x40032820 C   FIELD 19w01 CUCPD1F: clear the illegal access flag for UCPD1
0x40032824 B  REGISTER FCR2 (wo): TZIC flag clear register 2
0x40032824 C   FIELD 00w01 CTIM1F: clear the illegal access flag for TIM1
0x40032824 C   FIELD 01w01 CSPI1F: clear the illegal access flag for SPI1
0x40032824 C   FIELD 02w01 CTIM8F: clear the illegal access flag for TIM8
0x40032824 C   FIELD 03w01 CUSART1F: clear the illegal access flag for USART1
0x40032824 C   FIELD 04w01 CTIM15F: clear the illegal access flag for TIM5
0x40032824 C   FIELD 05w01 CTIM16F: clear the illegal access flag for TIM6
0x40032824 C   FIELD 06w01 CTIM17F: clear the illegal access flag for TIM7
0x40032824 C   FIELD 07w01 CSAI1F: clear the illegal access flag for SAI1
0x40032824 C   FIELD 08w01 CSAI2F: clear the illegal access flag for SAI2
0x40032828 B  REGISTER FCR3 (wo): TZIC flag clear register 3
0x40032828 C   FIELD 00w01 CMDF1F: clear the illegal access flag for MDF1
0x40032828 C   FIELD 01w01 CCORDICF: clear the illegal access flag for CORDIC
0x40032828 C   FIELD 02w01 CFMACF: clear the illegal access flag for FMAC
0x40032828 C   FIELD 03w01 CCRCF: clear the illegal access flag for CRC
0x40032828 C   FIELD 04w01 CTSCF: clear the illegal access flag for TSC
0x40032828 C   FIELD 05w01 CDMA2DF: clear the illegal access flag for register of DMA2D
0x40032828 C   FIELD 06w01 CICACHEF: clear the illegal access flag for ICACHE registers
0x40032828 C   FIELD 07w01 CDCACHEF: clear the illegal access flag for DCACHE registers
0x40032828 C   FIELD 08w01 CADC1F: clear the illegal access flag for ADC1
0x40032828 C   FIELD 09w01 CDCMIF: clear the illegal access flag for DCMI
0x40032828 C   FIELD 10w01 COTGFSF: clear the illegal access flag for OTG_FS
0x40032828 C   FIELD 11w01 CAESF: clear the illegal access flag for AES
0x40032828 C   FIELD 12w01 CHASHF: clear the illegal access flag for HASH
0x40032828 C   FIELD 13w01 CRNGF: clear the illegal access flag for RNG
0x40032828 C   FIELD 14w01 CPKAF: clear the illegal access flag for PKA
0x40032828 C   FIELD 15w01 CSAESF: clear the illegal access flag for SAES
0x40032828 C   FIELD 16w01 COCTOSPIMF: clear the illegal access flag for OCTOSPIM
0x40032828 C   FIELD 17w01 CSDMMC1F: clear the illegal access flag for SDMMC2
0x40032828 C   FIELD 18w01 CSDMMC2F: clear the illegal access flag for SDMMC1
0x40032828 C   FIELD 19w01 CFSMCF: clear the illegal access flag for FSMC registers
0x40032828 C   FIELD 20w01 COCTOSPI1F: clear the illegal access flag for OCTOSPI1 registers
0x40032828 C   FIELD 21w01 COCTOSPI2F: clear the illegal access flag for OCTOSPI2 registers
0x40032828 C   FIELD 22w01 CRAMCFGF: clear the illegal access flag for RAMCFG
0x4003282C B  REGISTER FCR4 (wo): TZIC flag clear register 3
0x4003282C C   FIELD 00w01 CGPDMA1F: clear the illegal access flag for GPDMA1
0x4003282C C   FIELD 01w01 CFLASHF: clear the illegal access flag for FLASH memory
0x4003282C C   FIELD 02w01 CFLASH_REGF: clear the illegal access flag for FLASH registers
0x4003282C C   FIELD 03w01 COTFDEC1F: clear the illegal access flag for OTFDEC1
0x4003282C C   FIELD 04w01 COTFDEC2F: clear the illegal access flag for OTFDEC2
0x4003282C C   FIELD 14w01 CTZSC1F: clear the illegal access flag for GTZC1 TZSC registers
0x4003282C C   FIELD 15w01 CTZIC1F: clear the illegal access flag for GTZC1 TZIC registers
0x4003282C C   FIELD 16w01 COCTOSPI1_MEMF: clear the illegal access flag for MPCWM1 (OCTOSPI1) memory bank
0x4003282C C   FIELD 17w01 CFSMC_MEMF: clear the illegal access flag for MPCWM2 (FSMC NAND) and MPCWM3
0x4003282C C   FIELD 18w01 CBKPSRAMF: clear the illegal access flag for MPCWM3 (BKPSRAM) memory bank
0x4003282C C   FIELD 19w01 COCTOSPI2_MEMF: clear the illegal access flag for OCTOSPI2 memory bank
0x4003282C C   FIELD 24w01 CSRAM1F: clear the illegal access flag for SRAM1
0x4003282C C   FIELD 25w01 CMPCBB1_REGF: clear the illegal access flag for MPCBB1 registers
0x4003282C C   FIELD 26w01 CSRAM2F: clear the illegal access flag for SRAM2
0x4003282C C   FIELD 27w01 CMPCBB2_REGF: clear the illegal access flag for MPCBB2 registers
0x4003282C C   FIELD 28w01 CSRAM3F: clear the illegal access flag for SRAM3
0x4003282C C   FIELD 29w01 CMPCBB3_REGF: clear the illegal access flag for MPCBB3 registers
0x40032C00 A PERIPHERAL GTZC1_MPCBB1
0x40032C00 B  REGISTER MPCBB1_CR (rw): MPCBB control register
0x40032C00 C   FIELD 00w01 GLOCK: lock the control register of the MPCBB until next reset
0x40032C00 C   FIELD 30w01 INVSECSTATE: SRAMx clocks security state
0x40032C00 C   FIELD 31w01 SRWILADIS: secure read/write illegal access disable
0x40032C10 B  REGISTER MPCBB1_CFGLOCKR1 (rw): GTZC1 SRAMz MPCBB configuration lock register
0x40032C10 C   FIELD 00w01 SPLCK0: SPLCK0
0x40032C10 C   FIELD 01w01 SPLCK1: SPLCK1
0x40032C10 C   FIELD 02w01 SPLCK2: SPLCK2
0x40032C10 C   FIELD 03w01 SPLCK3: SPLCK3
0x40032C10 C   FIELD 04w01 SPLCK4: SPLCK4
0x40032C10 C   FIELD 05w01 SPLCK5: SPLCK5
0x40032C10 C   FIELD 06w01 SPLCK6: SPLCK6
0x40032C10 C   FIELD 07w01 SPLCK7: SPLCK7
0x40032C10 C   FIELD 08w01 SPLCK8: SPLCK8
0x40032C10 C   FIELD 09w01 SPLCK9: SPLCK9
0x40032C10 C   FIELD 10w01 SPLCK10: SPLCK10
0x40032C10 C   FIELD 11w01 SPLCK11: SPLCK11
0x40032C10 C   FIELD 12w01 SPLCK12: SPLCK12
0x40032C10 C   FIELD 13w01 SPLCK13: SPLCK13
0x40032C10 C   FIELD 14w01 SPLCK14: SPLCK14
0x40032C10 C   FIELD 15w01 SPLCK15: SPLCK15
0x40032C10 C   FIELD 16w01 SPLCK16: SPLCK16
0x40032C10 C   FIELD 17w01 SPLCK17: SPLCK17
0x40032C10 C   FIELD 18w01 SPLCK18: SPLCK18
0x40032C10 C   FIELD 19w01 SPLCK19: SPLCK19
0x40032C10 C   FIELD 20w01 SPLCK20: SPLCK20
0x40032C10 C   FIELD 21w01 SPLCK21: SPLCK21
0x40032C10 C   FIELD 22w01 SPLCK22: SPLCK22
0x40032C10 C   FIELD 23w01 SPLCK23: SPLCK23
0x40032C10 C   FIELD 24w01 SPLCK24: SPLCK24
0x40032C10 C   FIELD 25w01 SPLCK25: SPLCK25
0x40032C10 C   FIELD 26w01 SPLCK26: SPLCK26
0x40032C10 C   FIELD 27w01 SPLCK27: SPLCK27
0x40032C10 C   FIELD 28w01 SPLCK28: SPLCK28
0x40032C10 C   FIELD 29w01 SPLCK29: SPLCK29
0x40032C10 C   FIELD 30w01 SPLCK30: SPLCK30
0x40032C10 C   FIELD 31w01 SPLCK31: SPLCK31
0x40032D00 B  REGISTER MPCBB1_SECCFGR0 (rw): MPCBBx security configuration for super-block x register
0x40032D00 C   FIELD 00w01 SEC0: SEC0
0x40032D00 C   FIELD 01w01 SEC1: SEC1
0x40032D00 C   FIELD 02w01 SEC2: SEC2
0x40032D00 C   FIELD 03w01 SEC3: SEC3
0x40032D00 C   FIELD 04w01 SEC4: SEC4
0x40032D00 C   FIELD 05w01 SEC5: SEC5
0x40032D00 C   FIELD 06w01 SEC6: SEC6
0x40032D00 C   FIELD 07w01 SEC7: SEC7
0x40032D00 C   FIELD 08w01 SEC8: SEC8
0x40032D00 C   FIELD 09w01 SEC9: SEC9
0x40032D00 C   FIELD 10w01 SEC10: SEC10
0x40032D00 C   FIELD 11w01 SEC11: SEC11
0x40032D00 C   FIELD 12w01 SEC12: SEC12
0x40032D00 C   FIELD 13w01 SEC13: SEC13
0x40032D00 C   FIELD 14w01 SEC14: SEC14
0x40032D00 C   FIELD 15w01 SEC15: SEC15
0x40032D00 C   FIELD 16w01 SEC16: SEC16
0x40032D00 C   FIELD 17w01 SEC17: SEC17
0x40032D00 C   FIELD 18w01 SEC18: SEC18
0x40032D00 C   FIELD 19w01 SEC19: SEC19
0x40032D00 C   FIELD 20w01 SEC20: SEC20
0x40032D00 C   FIELD 21w01 SEC21: SEC21
0x40032D00 C   FIELD 22w01 SEC22: SEC22
0x40032D00 C   FIELD 23w01 SEC23: SEC23
0x40032D00 C   FIELD 24w01 SEC24: SEC24
0x40032D00 C   FIELD 25w01 SEC25: SEC25
0x40032D00 C   FIELD 26w01 SEC26: SEC26
0x40032D00 C   FIELD 27w01 SEC27: SEC27
0x40032D00 C   FIELD 28w01 SEC28: SEC28
0x40032D00 C   FIELD 29w01 SEC29: SEC29
0x40032D00 C   FIELD 30w01 SEC30: SEC30
0x40032D00 C   FIELD 31w01 SEC31: SEC31
0x40032D04 B  REGISTER MPCBB1_SECCFGR1 (rw): MPCBBx security configuration for super-block x register
0x40032D04 C   FIELD 00w01 SEC0: SEC0
0x40032D04 C   FIELD 01w01 SEC1: SEC1
0x40032D04 C   FIELD 02w01 SEC2: SEC2
0x40032D04 C   FIELD 03w01 SEC3: SEC3
0x40032D04 C   FIELD 04w01 SEC4: SEC4
0x40032D04 C   FIELD 05w01 SEC5: SEC5
0x40032D04 C   FIELD 06w01 SEC6: SEC6
0x40032D04 C   FIELD 07w01 SEC7: SEC7
0x40032D04 C   FIELD 08w01 SEC8: SEC8
0x40032D04 C   FIELD 09w01 SEC9: SEC9
0x40032D04 C   FIELD 10w01 SEC10: SEC10
0x40032D04 C   FIELD 11w01 SEC11: SEC11
0x40032D04 C   FIELD 12w01 SEC12: SEC12
0x40032D04 C   FIELD 13w01 SEC13: SEC13
0x40032D04 C   FIELD 14w01 SEC14: SEC14
0x40032D04 C   FIELD 15w01 SEC15: SEC15
0x40032D04 C   FIELD 16w01 SEC16: SEC16
0x40032D04 C   FIELD 17w01 SEC17: SEC17
0x40032D04 C   FIELD 18w01 SEC18: SEC18
0x40032D04 C   FIELD 19w01 SEC19: SEC19
0x40032D04 C   FIELD 20w01 SEC20: SEC20
0x40032D04 C   FIELD 21w01 SEC21: SEC21
0x40032D04 C   FIELD 22w01 SEC22: SEC22
0x40032D04 C   FIELD 23w01 SEC23: SEC23
0x40032D04 C   FIELD 24w01 SEC24: SEC24
0x40032D04 C   FIELD 25w01 SEC25: SEC25
0x40032D04 C   FIELD 26w01 SEC26: SEC26
0x40032D04 C   FIELD 27w01 SEC27: SEC27
0x40032D04 C   FIELD 28w01 SEC28: SEC28
0x40032D04 C   FIELD 29w01 SEC29: SEC29
0x40032D04 C   FIELD 30w01 SEC30: SEC30
0x40032D04 C   FIELD 31w01 SEC31: SEC31
0x40032D08 B  REGISTER MPCBB1_SECCFGR2 (rw): MPCBBx security configuration for super-block x register
0x40032D08 C   FIELD 00w01 SEC0: SEC0
0x40032D08 C   FIELD 01w01 SEC1: SEC1
0x40032D08 C   FIELD 02w01 SEC2: SEC2
0x40032D08 C   FIELD 03w01 SEC3: SEC3
0x40032D08 C   FIELD 04w01 SEC4: SEC4
0x40032D08 C   FIELD 05w01 SEC5: SEC5
0x40032D08 C   FIELD 06w01 SEC6: SEC6
0x40032D08 C   FIELD 07w01 SEC7: SEC7
0x40032D08 C   FIELD 08w01 SEC8: SEC8
0x40032D08 C   FIELD 09w01 SEC9: SEC9
0x40032D08 C   FIELD 10w01 SEC10: SEC10
0x40032D08 C   FIELD 11w01 SEC11: SEC11
0x40032D08 C   FIELD 12w01 SEC12: SEC12
0x40032D08 C   FIELD 13w01 SEC13: SEC13
0x40032D08 C   FIELD 14w01 SEC14: SEC14
0x40032D08 C   FIELD 15w01 SEC15: SEC15
0x40032D08 C   FIELD 16w01 SEC16: SEC16
0x40032D08 C   FIELD 17w01 SEC17: SEC17
0x40032D08 C   FIELD 18w01 SEC18: SEC18
0x40032D08 C   FIELD 19w01 SEC19: SEC19
0x40032D08 C   FIELD 20w01 SEC20: SEC20
0x40032D08 C   FIELD 21w01 SEC21: SEC21
0x40032D08 C   FIELD 22w01 SEC22: SEC22
0x40032D08 C   FIELD 23w01 SEC23: SEC23
0x40032D08 C   FIELD 24w01 SEC24: SEC24
0x40032D08 C   FIELD 25w01 SEC25: SEC25
0x40032D08 C   FIELD 26w01 SEC26: SEC26
0x40032D08 C   FIELD 27w01 SEC27: SEC27
0x40032D08 C   FIELD 28w01 SEC28: SEC28
0x40032D08 C   FIELD 29w01 SEC29: SEC29
0x40032D08 C   FIELD 30w01 SEC30: SEC30
0x40032D08 C   FIELD 31w01 SEC31: SEC31
0x40032D0C B  REGISTER MPCBB1_SECCFGR3 (rw): MPCBBx security configuration for super-block x register
0x40032D0C C   FIELD 00w01 SEC0: SEC0
0x40032D0C C   FIELD 01w01 SEC1: SEC1
0x40032D0C C   FIELD 02w01 SEC2: SEC2
0x40032D0C C   FIELD 03w01 SEC3: SEC3
0x40032D0C C   FIELD 04w01 SEC4: SEC4
0x40032D0C C   FIELD 05w01 SEC5: SEC5
0x40032D0C C   FIELD 06w01 SEC6: SEC6
0x40032D0C C   FIELD 07w01 SEC7: SEC7
0x40032D0C C   FIELD 08w01 SEC8: SEC8
0x40032D0C C   FIELD 09w01 SEC9: SEC9
0x40032D0C C   FIELD 10w01 SEC10: SEC10
0x40032D0C C   FIELD 11w01 SEC11: SEC11
0x40032D0C C   FIELD 12w01 SEC12: SEC12
0x40032D0C C   FIELD 13w01 SEC13: SEC13
0x40032D0C C   FIELD 14w01 SEC14: SEC14
0x40032D0C C   FIELD 15w01 SEC15: SEC15
0x40032D0C C   FIELD 16w01 SEC16: SEC16
0x40032D0C C   FIELD 17w01 SEC17: SEC17
0x40032D0C C   FIELD 18w01 SEC18: SEC18
0x40032D0C C   FIELD 19w01 SEC19: SEC19
0x40032D0C C   FIELD 20w01 SEC20: SEC20
0x40032D0C C   FIELD 21w01 SEC21: SEC21
0x40032D0C C   FIELD 22w01 SEC22: SEC22
0x40032D0C C   FIELD 23w01 SEC23: SEC23
0x40032D0C C   FIELD 24w01 SEC24: SEC24
0x40032D0C C   FIELD 25w01 SEC25: SEC25
0x40032D0C C   FIELD 26w01 SEC26: SEC26
0x40032D0C C   FIELD 27w01 SEC27: SEC27
0x40032D0C C   FIELD 28w01 SEC28: SEC28
0x40032D0C C   FIELD 29w01 SEC29: SEC29
0x40032D0C C   FIELD 30w01 SEC30: SEC30
0x40032D0C C   FIELD 31w01 SEC31: SEC31
0x40032D10 B  REGISTER MPCBB1_SECCFGR4 (rw): MPCBBx security configuration for super-block x register
0x40032D10 C   FIELD 00w01 SEC0: SEC0
0x40032D10 C   FIELD 01w01 SEC1: SEC1
0x40032D10 C   FIELD 02w01 SEC2: SEC2
0x40032D10 C   FIELD 03w01 SEC3: SEC3
0x40032D10 C   FIELD 04w01 SEC4: SEC4
0x40032D10 C   FIELD 05w01 SEC5: SEC5
0x40032D10 C   FIELD 06w01 SEC6: SEC6
0x40032D10 C   FIELD 07w01 SEC7: SEC7
0x40032D10 C   FIELD 08w01 SEC8: SEC8
0x40032D10 C   FIELD 09w01 SEC9: SEC9
0x40032D10 C   FIELD 10w01 SEC10: SEC10
0x40032D10 C   FIELD 11w01 SEC11: SEC11
0x40032D10 C   FIELD 12w01 SEC12: SEC12
0x40032D10 C   FIELD 13w01 SEC13: SEC13
0x40032D10 C   FIELD 14w01 SEC14: SEC14
0x40032D10 C   FIELD 15w01 SEC15: SEC15
0x40032D10 C   FIELD 16w01 SEC16: SEC16
0x40032D10 C   FIELD 17w01 SEC17: SEC17
0x40032D10 C   FIELD 18w01 SEC18: SEC18
0x40032D10 C   FIELD 19w01 SEC19: SEC19
0x40032D10 C   FIELD 20w01 SEC20: SEC20
0x40032D10 C   FIELD 21w01 SEC21: SEC21
0x40032D10 C   FIELD 22w01 SEC22: SEC22
0x40032D10 C   FIELD 23w01 SEC23: SEC23
0x40032D10 C   FIELD 24w01 SEC24: SEC24
0x40032D10 C   FIELD 25w01 SEC25: SEC25
0x40032D10 C   FIELD 26w01 SEC26: SEC26
0x40032D10 C   FIELD 27w01 SEC27: SEC27
0x40032D10 C   FIELD 28w01 SEC28: SEC28
0x40032D10 C   FIELD 29w01 SEC29: SEC29
0x40032D10 C   FIELD 30w01 SEC30: SEC30
0x40032D10 C   FIELD 31w01 SEC31: SEC31
0x40032D14 B  REGISTER MPCBB1_SECCFGR5 (rw): MPCBBx security configuration for super-block x register
0x40032D14 C   FIELD 00w01 SEC0: SEC0
0x40032D14 C   FIELD 01w01 SEC1: SEC1
0x40032D14 C   FIELD 02w01 SEC2: SEC2
0x40032D14 C   FIELD 03w01 SEC3: SEC3
0x40032D14 C   FIELD 04w01 SEC4: SEC4
0x40032D14 C   FIELD 05w01 SEC5: SEC5
0x40032D14 C   FIELD 06w01 SEC6: SEC6
0x40032D14 C   FIELD 07w01 SEC7: SEC7
0x40032D14 C   FIELD 08w01 SEC8: SEC8
0x40032D14 C   FIELD 09w01 SEC9: SEC9
0x40032D14 C   FIELD 10w01 SEC10: SEC10
0x40032D14 C   FIELD 11w01 SEC11: SEC11
0x40032D14 C   FIELD 12w01 SEC12: SEC12
0x40032D14 C   FIELD 13w01 SEC13: SEC13
0x40032D14 C   FIELD 14w01 SEC14: SEC14
0x40032D14 C   FIELD 15w01 SEC15: SEC15
0x40032D14 C   FIELD 16w01 SEC16: SEC16
0x40032D14 C   FIELD 17w01 SEC17: SEC17
0x40032D14 C   FIELD 18w01 SEC18: SEC18
0x40032D14 C   FIELD 19w01 SEC19: SEC19
0x40032D14 C   FIELD 20w01 SEC20: SEC20
0x40032D14 C   FIELD 21w01 SEC21: SEC21
0x40032D14 C   FIELD 22w01 SEC22: SEC22
0x40032D14 C   FIELD 23w01 SEC23: SEC23
0x40032D14 C   FIELD 24w01 SEC24: SEC24
0x40032D14 C   FIELD 25w01 SEC25: SEC25
0x40032D14 C   FIELD 26w01 SEC26: SEC26
0x40032D14 C   FIELD 27w01 SEC27: SEC27
0x40032D14 C   FIELD 28w01 SEC28: SEC28
0x40032D14 C   FIELD 29w01 SEC29: SEC29
0x40032D14 C   FIELD 30w01 SEC30: SEC30
0x40032D14 C   FIELD 31w01 SEC31: SEC31
0x40032D18 B  REGISTER MPCBB1_SECCFGR6 (rw): MPCBBx security configuration for super-block x register
0x40032D18 C   FIELD 00w01 SEC0: SEC0
0x40032D18 C   FIELD 01w01 SEC1: SEC1
0x40032D18 C   FIELD 02w01 SEC2: SEC2
0x40032D18 C   FIELD 03w01 SEC3: SEC3
0x40032D18 C   FIELD 04w01 SEC4: SEC4
0x40032D18 C   FIELD 05w01 SEC5: SEC5
0x40032D18 C   FIELD 06w01 SEC6: SEC6
0x40032D18 C   FIELD 07w01 SEC7: SEC7
0x40032D18 C   FIELD 08w01 SEC8: SEC8
0x40032D18 C   FIELD 09w01 SEC9: SEC9
0x40032D18 C   FIELD 10w01 SEC10: SEC10
0x40032D18 C   FIELD 11w01 SEC11: SEC11
0x40032D18 C   FIELD 12w01 SEC12: SEC12
0x40032D18 C   FIELD 13w01 SEC13: SEC13
0x40032D18 C   FIELD 14w01 SEC14: SEC14
0x40032D18 C   FIELD 15w01 SEC15: SEC15
0x40032D18 C   FIELD 16w01 SEC16: SEC16
0x40032D18 C   FIELD 17w01 SEC17: SEC17
0x40032D18 C   FIELD 18w01 SEC18: SEC18
0x40032D18 C   FIELD 19w01 SEC19: SEC19
0x40032D18 C   FIELD 20w01 SEC20: SEC20
0x40032D18 C   FIELD 21w01 SEC21: SEC21
0x40032D18 C   FIELD 22w01 SEC22: SEC22
0x40032D18 C   FIELD 23w01 SEC23: SEC23
0x40032D18 C   FIELD 24w01 SEC24: SEC24
0x40032D18 C   FIELD 25w01 SEC25: SEC25
0x40032D18 C   FIELD 26w01 SEC26: SEC26
0x40032D18 C   FIELD 27w01 SEC27: SEC27
0x40032D18 C   FIELD 28w01 SEC28: SEC28
0x40032D18 C   FIELD 29w01 SEC29: SEC29
0x40032D18 C   FIELD 30w01 SEC30: SEC30
0x40032D18 C   FIELD 31w01 SEC31: SEC31
0x40032D1C B  REGISTER MPCBB1_SECCFGR7 (rw): MPCBBx security configuration for super-block x register
0x40032D1C C   FIELD 00w01 SEC0: SEC0
0x40032D1C C   FIELD 01w01 SEC1: SEC1
0x40032D1C C   FIELD 02w01 SEC2: SEC2
0x40032D1C C   FIELD 03w01 SEC3: SEC3
0x40032D1C C   FIELD 04w01 SEC4: SEC4
0x40032D1C C   FIELD 05w01 SEC5: SEC5
0x40032D1C C   FIELD 06w01 SEC6: SEC6
0x40032D1C C   FIELD 07w01 SEC7: SEC7
0x40032D1C C   FIELD 08w01 SEC8: SEC8
0x40032D1C C   FIELD 09w01 SEC9: SEC9
0x40032D1C C   FIELD 10w01 SEC10: SEC10
0x40032D1C C   FIELD 11w01 SEC11: SEC11
0x40032D1C C   FIELD 12w01 SEC12: SEC12
0x40032D1C C   FIELD 13w01 SEC13: SEC13
0x40032D1C C   FIELD 14w01 SEC14: SEC14
0x40032D1C C   FIELD 15w01 SEC15: SEC15
0x40032D1C C   FIELD 16w01 SEC16: SEC16
0x40032D1C C   FIELD 17w01 SEC17: SEC17
0x40032D1C C   FIELD 18w01 SEC18: SEC18
0x40032D1C C   FIELD 19w01 SEC19: SEC19
0x40032D1C C   FIELD 20w01 SEC20: SEC20
0x40032D1C C   FIELD 21w01 SEC21: SEC21
0x40032D1C C   FIELD 22w01 SEC22: SEC22
0x40032D1C C   FIELD 23w01 SEC23: SEC23
0x40032D1C C   FIELD 24w01 SEC24: SEC24
0x40032D1C C   FIELD 25w01 SEC25: SEC25
0x40032D1C C   FIELD 26w01 SEC26: SEC26
0x40032D1C C   FIELD 27w01 SEC27: SEC27
0x40032D1C C   FIELD 28w01 SEC28: SEC28
0x40032D1C C   FIELD 29w01 SEC29: SEC29
0x40032D1C C   FIELD 30w01 SEC30: SEC30
0x40032D1C C   FIELD 31w01 SEC31: SEC31
0x40032D20 B  REGISTER MPCBB1_SECCFGR8 (rw): MPCBBx security configuration for super-block x register
0x40032D20 C   FIELD 00w01 SEC0: SEC0
0x40032D20 C   FIELD 01w01 SEC1: SEC1
0x40032D20 C   FIELD 02w01 SEC2: SEC2
0x40032D20 C   FIELD 03w01 SEC3: SEC3
0x40032D20 C   FIELD 04w01 SEC4: SEC4
0x40032D20 C   FIELD 05w01 SEC5: SEC5
0x40032D20 C   FIELD 06w01 SEC6: SEC6
0x40032D20 C   FIELD 07w01 SEC7: SEC7
0x40032D20 C   FIELD 08w01 SEC8: SEC8
0x40032D20 C   FIELD 09w01 SEC9: SEC9
0x40032D20 C   FIELD 10w01 SEC10: SEC10
0x40032D20 C   FIELD 11w01 SEC11: SEC11
0x40032D20 C   FIELD 12w01 SEC12: SEC12
0x40032D20 C   FIELD 13w01 SEC13: SEC13
0x40032D20 C   FIELD 14w01 SEC14: SEC14
0x40032D20 C   FIELD 15w01 SEC15: SEC15
0x40032D20 C   FIELD 16w01 SEC16: SEC16
0x40032D20 C   FIELD 17w01 SEC17: SEC17
0x40032D20 C   FIELD 18w01 SEC18: SEC18
0x40032D20 C   FIELD 19w01 SEC19: SEC19
0x40032D20 C   FIELD 20w01 SEC20: SEC20
0x40032D20 C   FIELD 21w01 SEC21: SEC21
0x40032D20 C   FIELD 22w01 SEC22: SEC22
0x40032D20 C   FIELD 23w01 SEC23: SEC23
0x40032D20 C   FIELD 24w01 SEC24: SEC24
0x40032D20 C   FIELD 25w01 SEC25: SEC25
0x40032D20 C   FIELD 26w01 SEC26: SEC26
0x40032D20 C   FIELD 27w01 SEC27: SEC27
0x40032D20 C   FIELD 28w01 SEC28: SEC28
0x40032D20 C   FIELD 29w01 SEC29: SEC29
0x40032D20 C   FIELD 30w01 SEC30: SEC30
0x40032D20 C   FIELD 31w01 SEC31: SEC31
0x40032D24 B  REGISTER MPCBB1_SECCFGR9 (rw): MPCBBx security configuration for super-block x register
0x40032D24 C   FIELD 00w01 SEC0: SEC0
0x40032D24 C   FIELD 01w01 SEC1: SEC1
0x40032D24 C   FIELD 02w01 SEC2: SEC2
0x40032D24 C   FIELD 03w01 SEC3: SEC3
0x40032D24 C   FIELD 04w01 SEC4: SEC4
0x40032D24 C   FIELD 05w01 SEC5: SEC5
0x40032D24 C   FIELD 06w01 SEC6: SEC6
0x40032D24 C   FIELD 07w01 SEC7: SEC7
0x40032D24 C   FIELD 08w01 SEC8: SEC8
0x40032D24 C   FIELD 09w01 SEC9: SEC9
0x40032D24 C   FIELD 10w01 SEC10: SEC10
0x40032D24 C   FIELD 11w01 SEC11: SEC11
0x40032D24 C   FIELD 12w01 SEC12: SEC12
0x40032D24 C   FIELD 13w01 SEC13: SEC13
0x40032D24 C   FIELD 14w01 SEC14: SEC14
0x40032D24 C   FIELD 15w01 SEC15: SEC15
0x40032D24 C   FIELD 16w01 SEC16: SEC16
0x40032D24 C   FIELD 17w01 SEC17: SEC17
0x40032D24 C   FIELD 18w01 SEC18: SEC18
0x40032D24 C   FIELD 19w01 SEC19: SEC19
0x40032D24 C   FIELD 20w01 SEC20: SEC20
0x40032D24 C   FIELD 21w01 SEC21: SEC21
0x40032D24 C   FIELD 22w01 SEC22: SEC22
0x40032D24 C   FIELD 23w01 SEC23: SEC23
0x40032D24 C   FIELD 24w01 SEC24: SEC24
0x40032D24 C   FIELD 25w01 SEC25: SEC25
0x40032D24 C   FIELD 26w01 SEC26: SEC26
0x40032D24 C   FIELD 27w01 SEC27: SEC27
0x40032D24 C   FIELD 28w01 SEC28: SEC28
0x40032D24 C   FIELD 29w01 SEC29: SEC29
0x40032D24 C   FIELD 30w01 SEC30: SEC30
0x40032D24 C   FIELD 31w01 SEC31: SEC31
0x40032D28 B  REGISTER MPCBB1_SECCFGR10 (rw): MPCBBx security configuration for super-block x register
0x40032D28 C   FIELD 00w01 SEC0: SEC0
0x40032D28 C   FIELD 01w01 SEC1: SEC1
0x40032D28 C   FIELD 02w01 SEC2: SEC2
0x40032D28 C   FIELD 03w01 SEC3: SEC3
0x40032D28 C   FIELD 04w01 SEC4: SEC4
0x40032D28 C   FIELD 05w01 SEC5: SEC5
0x40032D28 C   FIELD 06w01 SEC6: SEC6
0x40032D28 C   FIELD 07w01 SEC7: SEC7
0x40032D28 C   FIELD 08w01 SEC8: SEC8
0x40032D28 C   FIELD 09w01 SEC9: SEC9
0x40032D28 C   FIELD 10w01 SEC10: SEC10
0x40032D28 C   FIELD 11w01 SEC11: SEC11
0x40032D28 C   FIELD 12w01 SEC12: SEC12
0x40032D28 C   FIELD 13w01 SEC13: SEC13
0x40032D28 C   FIELD 14w01 SEC14: SEC14
0x40032D28 C   FIELD 15w01 SEC15: SEC15
0x40032D28 C   FIELD 16w01 SEC16: SEC16
0x40032D28 C   FIELD 17w01 SEC17: SEC17
0x40032D28 C   FIELD 18w01 SEC18: SEC18
0x40032D28 C   FIELD 19w01 SEC19: SEC19
0x40032D28 C   FIELD 20w01 SEC20: SEC20
0x40032D28 C   FIELD 21w01 SEC21: SEC21
0x40032D28 C   FIELD 22w01 SEC22: SEC22
0x40032D28 C   FIELD 23w01 SEC23: SEC23
0x40032D28 C   FIELD 24w01 SEC24: SEC24
0x40032D28 C   FIELD 25w01 SEC25: SEC25
0x40032D28 C   FIELD 26w01 SEC26: SEC26
0x40032D28 C   FIELD 27w01 SEC27: SEC27
0x40032D28 C   FIELD 28w01 SEC28: SEC28
0x40032D28 C   FIELD 29w01 SEC29: SEC29
0x40032D28 C   FIELD 30w01 SEC30: SEC30
0x40032D28 C   FIELD 31w01 SEC31: SEC31
0x40032D2C B  REGISTER MPCBB1_SECCFGR11 (rw): MPCBBx security configuration for super-block x register
0x40032D2C C   FIELD 00w01 SEC0: SEC0
0x40032D2C C   FIELD 01w01 SEC1: SEC1
0x40032D2C C   FIELD 02w01 SEC2: SEC2
0x40032D2C C   FIELD 03w01 SEC3: SEC3
0x40032D2C C   FIELD 04w01 SEC4: SEC4
0x40032D2C C   FIELD 05w01 SEC5: SEC5
0x40032D2C C   FIELD 06w01 SEC6: SEC6
0x40032D2C C   FIELD 07w01 SEC7: SEC7
0x40032D2C C   FIELD 08w01 SEC8: SEC8
0x40032D2C C   FIELD 09w01 SEC9: SEC9
0x40032D2C C   FIELD 10w01 SEC10: SEC10
0x40032D2C C   FIELD 11w01 SEC11: SEC11
0x40032D2C C   FIELD 12w01 SEC12: SEC12
0x40032D2C C   FIELD 13w01 SEC13: SEC13
0x40032D2C C   FIELD 14w01 SEC14: SEC14
0x40032D2C C   FIELD 15w01 SEC15: SEC15
0x40032D2C C   FIELD 16w01 SEC16: SEC16
0x40032D2C C   FIELD 17w01 SEC17: SEC17
0x40032D2C C   FIELD 18w01 SEC18: SEC18
0x40032D2C C   FIELD 19w01 SEC19: SEC19
0x40032D2C C   FIELD 20w01 SEC20: SEC20
0x40032D2C C   FIELD 21w01 SEC21: SEC21
0x40032D2C C   FIELD 22w01 SEC22: SEC22
0x40032D2C C   FIELD 23w01 SEC23: SEC23
0x40032D2C C   FIELD 24w01 SEC24: SEC24
0x40032D2C C   FIELD 25w01 SEC25: SEC25
0x40032D2C C   FIELD 26w01 SEC26: SEC26
0x40032D2C C   FIELD 27w01 SEC27: SEC27
0x40032D2C C   FIELD 28w01 SEC28: SEC28
0x40032D2C C   FIELD 29w01 SEC29: SEC29
0x40032D2C C   FIELD 30w01 SEC30: SEC30
0x40032D2C C   FIELD 31w01 SEC31: SEC31
0x40032D30 B  REGISTER MPCBB1_SECCFGR12 (rw): MPCBBx security configuration for super-block x register
0x40032D30 C   FIELD 00w01 SEC0: SEC0
0x40032D30 C   FIELD 01w01 SEC1: SEC1
0x40032D30 C   FIELD 02w01 SEC2: SEC2
0x40032D30 C   FIELD 03w01 SEC3: SEC3
0x40032D30 C   FIELD 04w01 SEC4: SEC4
0x40032D30 C   FIELD 05w01 SEC5: SEC5
0x40032D30 C   FIELD 06w01 SEC6: SEC6
0x40032D30 C   FIELD 07w01 SEC7: SEC7
0x40032D30 C   FIELD 08w01 SEC8: SEC8
0x40032D30 C   FIELD 09w01 SEC9: SEC9
0x40032D30 C   FIELD 10w01 SEC10: SEC10
0x40032D30 C   FIELD 11w01 SEC11: SEC11
0x40032D30 C   FIELD 12w01 SEC12: SEC12
0x40032D30 C   FIELD 13w01 SEC13: SEC13
0x40032D30 C   FIELD 14w01 SEC14: SEC14
0x40032D30 C   FIELD 15w01 SEC15: SEC15
0x40032D30 C   FIELD 16w01 SEC16: SEC16
0x40032D30 C   FIELD 17w01 SEC17: SEC17
0x40032D30 C   FIELD 18w01 SEC18: SEC18
0x40032D30 C   FIELD 19w01 SEC19: SEC19
0x40032D30 C   FIELD 20w01 SEC20: SEC20
0x40032D30 C   FIELD 21w01 SEC21: SEC21
0x40032D30 C   FIELD 22w01 SEC22: SEC22
0x40032D30 C   FIELD 23w01 SEC23: SEC23
0x40032D30 C   FIELD 24w01 SEC24: SEC24
0x40032D30 C   FIELD 25w01 SEC25: SEC25
0x40032D30 C   FIELD 26w01 SEC26: SEC26
0x40032D30 C   FIELD 27w01 SEC27: SEC27
0x40032D30 C   FIELD 28w01 SEC28: SEC28
0x40032D30 C   FIELD 29w01 SEC29: SEC29
0x40032D30 C   FIELD 30w01 SEC30: SEC30
0x40032D30 C   FIELD 31w01 SEC31: SEC31
0x40032D34 B  REGISTER MPCBB1_SECCFGR13 (rw): MPCBBx security configuration for super-block x register
0x40032D34 C   FIELD 00w01 SEC0: SEC0
0x40032D34 C   FIELD 01w01 SEC1: SEC1
0x40032D34 C   FIELD 02w01 SEC2: SEC2
0x40032D34 C   FIELD 03w01 SEC3: SEC3
0x40032D34 C   FIELD 04w01 SEC4: SEC4
0x40032D34 C   FIELD 05w01 SEC5: SEC5
0x40032D34 C   FIELD 06w01 SEC6: SEC6
0x40032D34 C   FIELD 07w01 SEC7: SEC7
0x40032D34 C   FIELD 08w01 SEC8: SEC8
0x40032D34 C   FIELD 09w01 SEC9: SEC9
0x40032D34 C   FIELD 10w01 SEC10: SEC10
0x40032D34 C   FIELD 11w01 SEC11: SEC11
0x40032D34 C   FIELD 12w01 SEC12: SEC12
0x40032D34 C   FIELD 13w01 SEC13: SEC13
0x40032D34 C   FIELD 14w01 SEC14: SEC14
0x40032D34 C   FIELD 15w01 SEC15: SEC15
0x40032D34 C   FIELD 16w01 SEC16: SEC16
0x40032D34 C   FIELD 17w01 SEC17: SEC17
0x40032D34 C   FIELD 18w01 SEC18: SEC18
0x40032D34 C   FIELD 19w01 SEC19: SEC19
0x40032D34 C   FIELD 20w01 SEC20: SEC20
0x40032D34 C   FIELD 21w01 SEC21: SEC21
0x40032D34 C   FIELD 22w01 SEC22: SEC22
0x40032D34 C   FIELD 23w01 SEC23: SEC23
0x40032D34 C   FIELD 24w01 SEC24: SEC24
0x40032D34 C   FIELD 25w01 SEC25: SEC25
0x40032D34 C   FIELD 26w01 SEC26: SEC26
0x40032D34 C   FIELD 27w01 SEC27: SEC27
0x40032D34 C   FIELD 28w01 SEC28: SEC28
0x40032D34 C   FIELD 29w01 SEC29: SEC29
0x40032D34 C   FIELD 30w01 SEC30: SEC30
0x40032D34 C   FIELD 31w01 SEC31: SEC31
0x40032D38 B  REGISTER MPCBB1_SECCFGR14 (rw): MPCBBx security configuration for super-block x register
0x40032D38 C   FIELD 00w01 SEC0: SEC0
0x40032D38 C   FIELD 01w01 SEC1: SEC1
0x40032D38 C   FIELD 02w01 SEC2: SEC2
0x40032D38 C   FIELD 03w01 SEC3: SEC3
0x40032D38 C   FIELD 04w01 SEC4: SEC4
0x40032D38 C   FIELD 05w01 SEC5: SEC5
0x40032D38 C   FIELD 06w01 SEC6: SEC6
0x40032D38 C   FIELD 07w01 SEC7: SEC7
0x40032D38 C   FIELD 08w01 SEC8: SEC8
0x40032D38 C   FIELD 09w01 SEC9: SEC9
0x40032D38 C   FIELD 10w01 SEC10: SEC10
0x40032D38 C   FIELD 11w01 SEC11: SEC11
0x40032D38 C   FIELD 12w01 SEC12: SEC12
0x40032D38 C   FIELD 13w01 SEC13: SEC13
0x40032D38 C   FIELD 14w01 SEC14: SEC14
0x40032D38 C   FIELD 15w01 SEC15: SEC15
0x40032D38 C   FIELD 16w01 SEC16: SEC16
0x40032D38 C   FIELD 17w01 SEC17: SEC17
0x40032D38 C   FIELD 18w01 SEC18: SEC18
0x40032D38 C   FIELD 19w01 SEC19: SEC19
0x40032D38 C   FIELD 20w01 SEC20: SEC20
0x40032D38 C   FIELD 21w01 SEC21: SEC21
0x40032D38 C   FIELD 22w01 SEC22: SEC22
0x40032D38 C   FIELD 23w01 SEC23: SEC23
0x40032D38 C   FIELD 24w01 SEC24: SEC24
0x40032D38 C   FIELD 25w01 SEC25: SEC25
0x40032D38 C   FIELD 26w01 SEC26: SEC26
0x40032D38 C   FIELD 27w01 SEC27: SEC27
0x40032D38 C   FIELD 28w01 SEC28: SEC28
0x40032D38 C   FIELD 29w01 SEC29: SEC29
0x40032D38 C   FIELD 30w01 SEC30: SEC30
0x40032D38 C   FIELD 31w01 SEC31: SEC31
0x40032D3C B  REGISTER MPCBB1_SECCFGR15 (rw): MPCBBx security configuration for super-block x register
0x40032D3C C   FIELD 00w01 SEC0: SEC0
0x40032D3C C   FIELD 01w01 SEC1: SEC1
0x40032D3C C   FIELD 02w01 SEC2: SEC2
0x40032D3C C   FIELD 03w01 SEC3: SEC3
0x40032D3C C   FIELD 04w01 SEC4: SEC4
0x40032D3C C   FIELD 05w01 SEC5: SEC5
0x40032D3C C   FIELD 06w01 SEC6: SEC6
0x40032D3C C   FIELD 07w01 SEC7: SEC7
0x40032D3C C   FIELD 08w01 SEC8: SEC8
0x40032D3C C   FIELD 09w01 SEC9: SEC9
0x40032D3C C   FIELD 10w01 SEC10: SEC10
0x40032D3C C   FIELD 11w01 SEC11: SEC11
0x40032D3C C   FIELD 12w01 SEC12: SEC12
0x40032D3C C   FIELD 13w01 SEC13: SEC13
0x40032D3C C   FIELD 14w01 SEC14: SEC14
0x40032D3C C   FIELD 15w01 SEC15: SEC15
0x40032D3C C   FIELD 16w01 SEC16: SEC16
0x40032D3C C   FIELD 17w01 SEC17: SEC17
0x40032D3C C   FIELD 18w01 SEC18: SEC18
0x40032D3C C   FIELD 19w01 SEC19: SEC19
0x40032D3C C   FIELD 20w01 SEC20: SEC20
0x40032D3C C   FIELD 21w01 SEC21: SEC21
0x40032D3C C   FIELD 22w01 SEC22: SEC22
0x40032D3C C   FIELD 23w01 SEC23: SEC23
0x40032D3C C   FIELD 24w01 SEC24: SEC24
0x40032D3C C   FIELD 25w01 SEC25: SEC25
0x40032D3C C   FIELD 26w01 SEC26: SEC26
0x40032D3C C   FIELD 27w01 SEC27: SEC27
0x40032D3C C   FIELD 28w01 SEC28: SEC28
0x40032D3C C   FIELD 29w01 SEC29: SEC29
0x40032D3C C   FIELD 30w01 SEC30: SEC30
0x40032D3C C   FIELD 31w01 SEC31: SEC31
0x40032D40 B  REGISTER MPCBB1_SECCFGR16 (rw): MPCBBx security configuration for super-block x register
0x40032D40 C   FIELD 00w01 SEC0: SEC0
0x40032D40 C   FIELD 01w01 SEC1: SEC1
0x40032D40 C   FIELD 02w01 SEC2: SEC2
0x40032D40 C   FIELD 03w01 SEC3: SEC3
0x40032D40 C   FIELD 04w01 SEC4: SEC4
0x40032D40 C   FIELD 05w01 SEC5: SEC5
0x40032D40 C   FIELD 06w01 SEC6: SEC6
0x40032D40 C   FIELD 07w01 SEC7: SEC7
0x40032D40 C   FIELD 08w01 SEC8: SEC8
0x40032D40 C   FIELD 09w01 SEC9: SEC9
0x40032D40 C   FIELD 10w01 SEC10: SEC10
0x40032D40 C   FIELD 11w01 SEC11: SEC11
0x40032D40 C   FIELD 12w01 SEC12: SEC12
0x40032D40 C   FIELD 13w01 SEC13: SEC13
0x40032D40 C   FIELD 14w01 SEC14: SEC14
0x40032D40 C   FIELD 15w01 SEC15: SEC15
0x40032D40 C   FIELD 16w01 SEC16: SEC16
0x40032D40 C   FIELD 17w01 SEC17: SEC17
0x40032D40 C   FIELD 18w01 SEC18: SEC18
0x40032D40 C   FIELD 19w01 SEC19: SEC19
0x40032D40 C   FIELD 20w01 SEC20: SEC20
0x40032D40 C   FIELD 21w01 SEC21: SEC21
0x40032D40 C   FIELD 22w01 SEC22: SEC22
0x40032D40 C   FIELD 23w01 SEC23: SEC23
0x40032D40 C   FIELD 24w01 SEC24: SEC24
0x40032D40 C   FIELD 25w01 SEC25: SEC25
0x40032D40 C   FIELD 26w01 SEC26: SEC26
0x40032D40 C   FIELD 27w01 SEC27: SEC27
0x40032D40 C   FIELD 28w01 SEC28: SEC28
0x40032D40 C   FIELD 29w01 SEC29: SEC29
0x40032D40 C   FIELD 30w01 SEC30: SEC30
0x40032D40 C   FIELD 31w01 SEC31: SEC31
0x40032D44 B  REGISTER MPCBB1_SECCFGR17 (rw): MPCBBx security configuration for super-block x register
0x40032D44 C   FIELD 00w01 SEC0: SEC0
0x40032D44 C   FIELD 01w01 SEC1: SEC1
0x40032D44 C   FIELD 02w01 SEC2: SEC2
0x40032D44 C   FIELD 03w01 SEC3: SEC3
0x40032D44 C   FIELD 04w01 SEC4: SEC4
0x40032D44 C   FIELD 05w01 SEC5: SEC5
0x40032D44 C   FIELD 06w01 SEC6: SEC6
0x40032D44 C   FIELD 07w01 SEC7: SEC7
0x40032D44 C   FIELD 08w01 SEC8: SEC8
0x40032D44 C   FIELD 09w01 SEC9: SEC9
0x40032D44 C   FIELD 10w01 SEC10: SEC10
0x40032D44 C   FIELD 11w01 SEC11: SEC11
0x40032D44 C   FIELD 12w01 SEC12: SEC12
0x40032D44 C   FIELD 13w01 SEC13: SEC13
0x40032D44 C   FIELD 14w01 SEC14: SEC14
0x40032D44 C   FIELD 15w01 SEC15: SEC15
0x40032D44 C   FIELD 16w01 SEC16: SEC16
0x40032D44 C   FIELD 17w01 SEC17: SEC17
0x40032D44 C   FIELD 18w01 SEC18: SEC18
0x40032D44 C   FIELD 19w01 SEC19: SEC19
0x40032D44 C   FIELD 20w01 SEC20: SEC20
0x40032D44 C   FIELD 21w01 SEC21: SEC21
0x40032D44 C   FIELD 22w01 SEC22: SEC22
0x40032D44 C   FIELD 23w01 SEC23: SEC23
0x40032D44 C   FIELD 24w01 SEC24: SEC24
0x40032D44 C   FIELD 25w01 SEC25: SEC25
0x40032D44 C   FIELD 26w01 SEC26: SEC26
0x40032D44 C   FIELD 27w01 SEC27: SEC27
0x40032D44 C   FIELD 28w01 SEC28: SEC28
0x40032D44 C   FIELD 29w01 SEC29: SEC29
0x40032D44 C   FIELD 30w01 SEC30: SEC30
0x40032D44 C   FIELD 31w01 SEC31: SEC31
0x40032D48 B  REGISTER MPCBB1_SECCFGR18 (rw): MPCBBx security configuration for super-block x register
0x40032D48 C   FIELD 00w01 SEC0: SEC0
0x40032D48 C   FIELD 01w01 SEC1: SEC1
0x40032D48 C   FIELD 02w01 SEC2: SEC2
0x40032D48 C   FIELD 03w01 SEC3: SEC3
0x40032D48 C   FIELD 04w01 SEC4: SEC4
0x40032D48 C   FIELD 05w01 SEC5: SEC5
0x40032D48 C   FIELD 06w01 SEC6: SEC6
0x40032D48 C   FIELD 07w01 SEC7: SEC7
0x40032D48 C   FIELD 08w01 SEC8: SEC8
0x40032D48 C   FIELD 09w01 SEC9: SEC9
0x40032D48 C   FIELD 10w01 SEC10: SEC10
0x40032D48 C   FIELD 11w01 SEC11: SEC11
0x40032D48 C   FIELD 12w01 SEC12: SEC12
0x40032D48 C   FIELD 13w01 SEC13: SEC13
0x40032D48 C   FIELD 14w01 SEC14: SEC14
0x40032D48 C   FIELD 15w01 SEC15: SEC15
0x40032D48 C   FIELD 16w01 SEC16: SEC16
0x40032D48 C   FIELD 17w01 SEC17: SEC17
0x40032D48 C   FIELD 18w01 SEC18: SEC18
0x40032D48 C   FIELD 19w01 SEC19: SEC19
0x40032D48 C   FIELD 20w01 SEC20: SEC20
0x40032D48 C   FIELD 21w01 SEC21: SEC21
0x40032D48 C   FIELD 22w01 SEC22: SEC22
0x40032D48 C   FIELD 23w01 SEC23: SEC23
0x40032D48 C   FIELD 24w01 SEC24: SEC24
0x40032D48 C   FIELD 25w01 SEC25: SEC25
0x40032D48 C   FIELD 26w01 SEC26: SEC26
0x40032D48 C   FIELD 27w01 SEC27: SEC27
0x40032D48 C   FIELD 28w01 SEC28: SEC28
0x40032D48 C   FIELD 29w01 SEC29: SEC29
0x40032D48 C   FIELD 30w01 SEC30: SEC30
0x40032D48 C   FIELD 31w01 SEC31: SEC31
0x40032D4C B  REGISTER MPCBB1_SECCFGR19 (rw): MPCBBx security configuration for super-block x register
0x40032D4C C   FIELD 00w01 SEC0: SEC0
0x40032D4C C   FIELD 01w01 SEC1: SEC1
0x40032D4C C   FIELD 02w01 SEC2: SEC2
0x40032D4C C   FIELD 03w01 SEC3: SEC3
0x40032D4C C   FIELD 04w01 SEC4: SEC4
0x40032D4C C   FIELD 05w01 SEC5: SEC5
0x40032D4C C   FIELD 06w01 SEC6: SEC6
0x40032D4C C   FIELD 07w01 SEC7: SEC7
0x40032D4C C   FIELD 08w01 SEC8: SEC8
0x40032D4C C   FIELD 09w01 SEC9: SEC9
0x40032D4C C   FIELD 10w01 SEC10: SEC10
0x40032D4C C   FIELD 11w01 SEC11: SEC11
0x40032D4C C   FIELD 12w01 SEC12: SEC12
0x40032D4C C   FIELD 13w01 SEC13: SEC13
0x40032D4C C   FIELD 14w01 SEC14: SEC14
0x40032D4C C   FIELD 15w01 SEC15: SEC15
0x40032D4C C   FIELD 16w01 SEC16: SEC16
0x40032D4C C   FIELD 17w01 SEC17: SEC17
0x40032D4C C   FIELD 18w01 SEC18: SEC18
0x40032D4C C   FIELD 19w01 SEC19: SEC19
0x40032D4C C   FIELD 20w01 SEC20: SEC20
0x40032D4C C   FIELD 21w01 SEC21: SEC21
0x40032D4C C   FIELD 22w01 SEC22: SEC22
0x40032D4C C   FIELD 23w01 SEC23: SEC23
0x40032D4C C   FIELD 24w01 SEC24: SEC24
0x40032D4C C   FIELD 25w01 SEC25: SEC25
0x40032D4C C   FIELD 26w01 SEC26: SEC26
0x40032D4C C   FIELD 27w01 SEC27: SEC27
0x40032D4C C   FIELD 28w01 SEC28: SEC28
0x40032D4C C   FIELD 29w01 SEC29: SEC29
0x40032D4C C   FIELD 30w01 SEC30: SEC30
0x40032D4C C   FIELD 31w01 SEC31: SEC31
0x40032D50 B  REGISTER MPCBB1_SECCFGR20 (rw): MPCBBx security configuration for super-block x register
0x40032D50 C   FIELD 00w01 SEC0: SEC0
0x40032D50 C   FIELD 01w01 SEC1: SEC1
0x40032D50 C   FIELD 02w01 SEC2: SEC2
0x40032D50 C   FIELD 03w01 SEC3: SEC3
0x40032D50 C   FIELD 04w01 SEC4: SEC4
0x40032D50 C   FIELD 05w01 SEC5: SEC5
0x40032D50 C   FIELD 06w01 SEC6: SEC6
0x40032D50 C   FIELD 07w01 SEC7: SEC7
0x40032D50 C   FIELD 08w01 SEC8: SEC8
0x40032D50 C   FIELD 09w01 SEC9: SEC9
0x40032D50 C   FIELD 10w01 SEC10: SEC10
0x40032D50 C   FIELD 11w01 SEC11: SEC11
0x40032D50 C   FIELD 12w01 SEC12: SEC12
0x40032D50 C   FIELD 13w01 SEC13: SEC13
0x40032D50 C   FIELD 14w01 SEC14: SEC14
0x40032D50 C   FIELD 15w01 SEC15: SEC15
0x40032D50 C   FIELD 16w01 SEC16: SEC16
0x40032D50 C   FIELD 17w01 SEC17: SEC17
0x40032D50 C   FIELD 18w01 SEC18: SEC18
0x40032D50 C   FIELD 19w01 SEC19: SEC19
0x40032D50 C   FIELD 20w01 SEC20: SEC20
0x40032D50 C   FIELD 21w01 SEC21: SEC21
0x40032D50 C   FIELD 22w01 SEC22: SEC22
0x40032D50 C   FIELD 23w01 SEC23: SEC23
0x40032D50 C   FIELD 24w01 SEC24: SEC24
0x40032D50 C   FIELD 25w01 SEC25: SEC25
0x40032D50 C   FIELD 26w01 SEC26: SEC26
0x40032D50 C   FIELD 27w01 SEC27: SEC27
0x40032D50 C   FIELD 28w01 SEC28: SEC28
0x40032D50 C   FIELD 29w01 SEC29: SEC29
0x40032D50 C   FIELD 30w01 SEC30: SEC30
0x40032D50 C   FIELD 31w01 SEC31: SEC31
0x40032D54 B  REGISTER MPCBB1_SECCFGR21 (rw): MPCBBx security configuration for super-block x register
0x40032D54 C   FIELD 00w01 SEC0: SEC0
0x40032D54 C   FIELD 01w01 SEC1: SEC1
0x40032D54 C   FIELD 02w01 SEC2: SEC2
0x40032D54 C   FIELD 03w01 SEC3: SEC3
0x40032D54 C   FIELD 04w01 SEC4: SEC4
0x40032D54 C   FIELD 05w01 SEC5: SEC5
0x40032D54 C   FIELD 06w01 SEC6: SEC6
0x40032D54 C   FIELD 07w01 SEC7: SEC7
0x40032D54 C   FIELD 08w01 SEC8: SEC8
0x40032D54 C   FIELD 09w01 SEC9: SEC9
0x40032D54 C   FIELD 10w01 SEC10: SEC10
0x40032D54 C   FIELD 11w01 SEC11: SEC11
0x40032D54 C   FIELD 12w01 SEC12: SEC12
0x40032D54 C   FIELD 13w01 SEC13: SEC13
0x40032D54 C   FIELD 14w01 SEC14: SEC14
0x40032D54 C   FIELD 15w01 SEC15: SEC15
0x40032D54 C   FIELD 16w01 SEC16: SEC16
0x40032D54 C   FIELD 17w01 SEC17: SEC17
0x40032D54 C   FIELD 18w01 SEC18: SEC18
0x40032D54 C   FIELD 19w01 SEC19: SEC19
0x40032D54 C   FIELD 20w01 SEC20: SEC20
0x40032D54 C   FIELD 21w01 SEC21: SEC21
0x40032D54 C   FIELD 22w01 SEC22: SEC22
0x40032D54 C   FIELD 23w01 SEC23: SEC23
0x40032D54 C   FIELD 24w01 SEC24: SEC24
0x40032D54 C   FIELD 25w01 SEC25: SEC25
0x40032D54 C   FIELD 26w01 SEC26: SEC26
0x40032D54 C   FIELD 27w01 SEC27: SEC27
0x40032D54 C   FIELD 28w01 SEC28: SEC28
0x40032D54 C   FIELD 29w01 SEC29: SEC29
0x40032D54 C   FIELD 30w01 SEC30: SEC30
0x40032D54 C   FIELD 31w01 SEC31: SEC31
0x40032D58 B  REGISTER MPCBB1_SECCFGR22 (rw): MPCBBx security configuration for super-block x register
0x40032D58 C   FIELD 00w01 SEC0: SEC0
0x40032D58 C   FIELD 01w01 SEC1: SEC1
0x40032D58 C   FIELD 02w01 SEC2: SEC2
0x40032D58 C   FIELD 03w01 SEC3: SEC3
0x40032D58 C   FIELD 04w01 SEC4: SEC4
0x40032D58 C   FIELD 05w01 SEC5: SEC5
0x40032D58 C   FIELD 06w01 SEC6: SEC6
0x40032D58 C   FIELD 07w01 SEC7: SEC7
0x40032D58 C   FIELD 08w01 SEC8: SEC8
0x40032D58 C   FIELD 09w01 SEC9: SEC9
0x40032D58 C   FIELD 10w01 SEC10: SEC10
0x40032D58 C   FIELD 11w01 SEC11: SEC11
0x40032D58 C   FIELD 12w01 SEC12: SEC12
0x40032D58 C   FIELD 13w01 SEC13: SEC13
0x40032D58 C   FIELD 14w01 SEC14: SEC14
0x40032D58 C   FIELD 15w01 SEC15: SEC15
0x40032D58 C   FIELD 16w01 SEC16: SEC16
0x40032D58 C   FIELD 17w01 SEC17: SEC17
0x40032D58 C   FIELD 18w01 SEC18: SEC18
0x40032D58 C   FIELD 19w01 SEC19: SEC19
0x40032D58 C   FIELD 20w01 SEC20: SEC20
0x40032D58 C   FIELD 21w01 SEC21: SEC21
0x40032D58 C   FIELD 22w01 SEC22: SEC22
0x40032D58 C   FIELD 23w01 SEC23: SEC23
0x40032D58 C   FIELD 24w01 SEC24: SEC24
0x40032D58 C   FIELD 25w01 SEC25: SEC25
0x40032D58 C   FIELD 26w01 SEC26: SEC26
0x40032D58 C   FIELD 27w01 SEC27: SEC27
0x40032D58 C   FIELD 28w01 SEC28: SEC28
0x40032D58 C   FIELD 29w01 SEC29: SEC29
0x40032D58 C   FIELD 30w01 SEC30: SEC30
0x40032D58 C   FIELD 31w01 SEC31: SEC31
0x40032D5C B  REGISTER MPCBB1_SECCFGR23 (rw): MPCBBx security configuration for super-block x register
0x40032D5C C   FIELD 00w01 SEC0: SEC0
0x40032D5C C   FIELD 01w01 SEC1: SEC1
0x40032D5C C   FIELD 02w01 SEC2: SEC2
0x40032D5C C   FIELD 03w01 SEC3: SEC3
0x40032D5C C   FIELD 04w01 SEC4: SEC4
0x40032D5C C   FIELD 05w01 SEC5: SEC5
0x40032D5C C   FIELD 06w01 SEC6: SEC6
0x40032D5C C   FIELD 07w01 SEC7: SEC7
0x40032D5C C   FIELD 08w01 SEC8: SEC8
0x40032D5C C   FIELD 09w01 SEC9: SEC9
0x40032D5C C   FIELD 10w01 SEC10: SEC10
0x40032D5C C   FIELD 11w01 SEC11: SEC11
0x40032D5C C   FIELD 12w01 SEC12: SEC12
0x40032D5C C   FIELD 13w01 SEC13: SEC13
0x40032D5C C   FIELD 14w01 SEC14: SEC14
0x40032D5C C   FIELD 15w01 SEC15: SEC15
0x40032D5C C   FIELD 16w01 SEC16: SEC16
0x40032D5C C   FIELD 17w01 SEC17: SEC17
0x40032D5C C   FIELD 18w01 SEC18: SEC18
0x40032D5C C   FIELD 19w01 SEC19: SEC19
0x40032D5C C   FIELD 20w01 SEC20: SEC20
0x40032D5C C   FIELD 21w01 SEC21: SEC21
0x40032D5C C   FIELD 22w01 SEC22: SEC22
0x40032D5C C   FIELD 23w01 SEC23: SEC23
0x40032D5C C   FIELD 24w01 SEC24: SEC24
0x40032D5C C   FIELD 25w01 SEC25: SEC25
0x40032D5C C   FIELD 26w01 SEC26: SEC26
0x40032D5C C   FIELD 27w01 SEC27: SEC27
0x40032D5C C   FIELD 28w01 SEC28: SEC28
0x40032D5C C   FIELD 29w01 SEC29: SEC29
0x40032D5C C   FIELD 30w01 SEC30: SEC30
0x40032D5C C   FIELD 31w01 SEC31: SEC31
0x40032D60 B  REGISTER MPCBB1_SECCFGR24 (rw): MPCBBx security configuration for super-block x register
0x40032D60 C   FIELD 00w01 SEC0: SEC0
0x40032D60 C   FIELD 01w01 SEC1: SEC1
0x40032D60 C   FIELD 02w01 SEC2: SEC2
0x40032D60 C   FIELD 03w01 SEC3: SEC3
0x40032D60 C   FIELD 04w01 SEC4: SEC4
0x40032D60 C   FIELD 05w01 SEC5: SEC5
0x40032D60 C   FIELD 06w01 SEC6: SEC6
0x40032D60 C   FIELD 07w01 SEC7: SEC7
0x40032D60 C   FIELD 08w01 SEC8: SEC8
0x40032D60 C   FIELD 09w01 SEC9: SEC9
0x40032D60 C   FIELD 10w01 SEC10: SEC10
0x40032D60 C   FIELD 11w01 SEC11: SEC11
0x40032D60 C   FIELD 12w01 SEC12: SEC12
0x40032D60 C   FIELD 13w01 SEC13: SEC13
0x40032D60 C   FIELD 14w01 SEC14: SEC14
0x40032D60 C   FIELD 15w01 SEC15: SEC15
0x40032D60 C   FIELD 16w01 SEC16: SEC16
0x40032D60 C   FIELD 17w01 SEC17: SEC17
0x40032D60 C   FIELD 18w01 SEC18: SEC18
0x40032D60 C   FIELD 19w01 SEC19: SEC19
0x40032D60 C   FIELD 20w01 SEC20: SEC20
0x40032D60 C   FIELD 21w01 SEC21: SEC21
0x40032D60 C   FIELD 22w01 SEC22: SEC22
0x40032D60 C   FIELD 23w01 SEC23: SEC23
0x40032D60 C   FIELD 24w01 SEC24: SEC24
0x40032D60 C   FIELD 25w01 SEC25: SEC25
0x40032D60 C   FIELD 26w01 SEC26: SEC26
0x40032D60 C   FIELD 27w01 SEC27: SEC27
0x40032D60 C   FIELD 28w01 SEC28: SEC28
0x40032D60 C   FIELD 29w01 SEC29: SEC29
0x40032D60 C   FIELD 30w01 SEC30: SEC30
0x40032D60 C   FIELD 31w01 SEC31: SEC31
0x40032D64 B  REGISTER MPCBB1_SECCFGR25 (rw): MPCBBx security configuration for super-block x register
0x40032D64 C   FIELD 00w01 SEC0: SEC0
0x40032D64 C   FIELD 01w01 SEC1: SEC1
0x40032D64 C   FIELD 02w01 SEC2: SEC2
0x40032D64 C   FIELD 03w01 SEC3: SEC3
0x40032D64 C   FIELD 04w01 SEC4: SEC4
0x40032D64 C   FIELD 05w01 SEC5: SEC5
0x40032D64 C   FIELD 06w01 SEC6: SEC6
0x40032D64 C   FIELD 07w01 SEC7: SEC7
0x40032D64 C   FIELD 08w01 SEC8: SEC8
0x40032D64 C   FIELD 09w01 SEC9: SEC9
0x40032D64 C   FIELD 10w01 SEC10: SEC10
0x40032D64 C   FIELD 11w01 SEC11: SEC11
0x40032D64 C   FIELD 12w01 SEC12: SEC12
0x40032D64 C   FIELD 13w01 SEC13: SEC13
0x40032D64 C   FIELD 14w01 SEC14: SEC14
0x40032D64 C   FIELD 15w01 SEC15: SEC15
0x40032D64 C   FIELD 16w01 SEC16: SEC16
0x40032D64 C   FIELD 17w01 SEC17: SEC17
0x40032D64 C   FIELD 18w01 SEC18: SEC18
0x40032D64 C   FIELD 19w01 SEC19: SEC19
0x40032D64 C   FIELD 20w01 SEC20: SEC20
0x40032D64 C   FIELD 21w01 SEC21: SEC21
0x40032D64 C   FIELD 22w01 SEC22: SEC22
0x40032D64 C   FIELD 23w01 SEC23: SEC23
0x40032D64 C   FIELD 24w01 SEC24: SEC24
0x40032D64 C   FIELD 25w01 SEC25: SEC25
0x40032D64 C   FIELD 26w01 SEC26: SEC26
0x40032D64 C   FIELD 27w01 SEC27: SEC27
0x40032D64 C   FIELD 28w01 SEC28: SEC28
0x40032D64 C   FIELD 29w01 SEC29: SEC29
0x40032D64 C   FIELD 30w01 SEC30: SEC30
0x40032D64 C   FIELD 31w01 SEC31: SEC31
0x40032D68 B  REGISTER MPCBB1_SECCFGR26 (rw): MPCBBx security configuration for super-block x register
0x40032D68 C   FIELD 00w01 SEC0: SEC0
0x40032D68 C   FIELD 01w01 SEC1: SEC1
0x40032D68 C   FIELD 02w01 SEC2: SEC2
0x40032D68 C   FIELD 03w01 SEC3: SEC3
0x40032D68 C   FIELD 04w01 SEC4: SEC4
0x40032D68 C   FIELD 05w01 SEC5: SEC5
0x40032D68 C   FIELD 06w01 SEC6: SEC6
0x40032D68 C   FIELD 07w01 SEC7: SEC7
0x40032D68 C   FIELD 08w01 SEC8: SEC8
0x40032D68 C   FIELD 09w01 SEC9: SEC9
0x40032D68 C   FIELD 10w01 SEC10: SEC10
0x40032D68 C   FIELD 11w01 SEC11: SEC11
0x40032D68 C   FIELD 12w01 SEC12: SEC12
0x40032D68 C   FIELD 13w01 SEC13: SEC13
0x40032D68 C   FIELD 14w01 SEC14: SEC14
0x40032D68 C   FIELD 15w01 SEC15: SEC15
0x40032D68 C   FIELD 16w01 SEC16: SEC16
0x40032D68 C   FIELD 17w01 SEC17: SEC17
0x40032D68 C   FIELD 18w01 SEC18: SEC18
0x40032D68 C   FIELD 19w01 SEC19: SEC19
0x40032D68 C   FIELD 20w01 SEC20: SEC20
0x40032D68 C   FIELD 21w01 SEC21: SEC21
0x40032D68 C   FIELD 22w01 SEC22: SEC22
0x40032D68 C   FIELD 23w01 SEC23: SEC23
0x40032D68 C   FIELD 24w01 SEC24: SEC24
0x40032D68 C   FIELD 25w01 SEC25: SEC25
0x40032D68 C   FIELD 26w01 SEC26: SEC26
0x40032D68 C   FIELD 27w01 SEC27: SEC27
0x40032D68 C   FIELD 28w01 SEC28: SEC28
0x40032D68 C   FIELD 29w01 SEC29: SEC29
0x40032D68 C   FIELD 30w01 SEC30: SEC30
0x40032D68 C   FIELD 31w01 SEC31: SEC31
0x40032D6C B  REGISTER MPCBB1_SECCFGR27 (rw): MPCBBx security configuration for super-block x register
0x40032D6C C   FIELD 00w01 SEC0: SEC0
0x40032D6C C   FIELD 01w01 SEC1: SEC1
0x40032D6C C   FIELD 02w01 SEC2: SEC2
0x40032D6C C   FIELD 03w01 SEC3: SEC3
0x40032D6C C   FIELD 04w01 SEC4: SEC4
0x40032D6C C   FIELD 05w01 SEC5: SEC5
0x40032D6C C   FIELD 06w01 SEC6: SEC6
0x40032D6C C   FIELD 07w01 SEC7: SEC7
0x40032D6C C   FIELD 08w01 SEC8: SEC8
0x40032D6C C   FIELD 09w01 SEC9: SEC9
0x40032D6C C   FIELD 10w01 SEC10: SEC10
0x40032D6C C   FIELD 11w01 SEC11: SEC11
0x40032D6C C   FIELD 12w01 SEC12: SEC12
0x40032D6C C   FIELD 13w01 SEC13: SEC13
0x40032D6C C   FIELD 14w01 SEC14: SEC14
0x40032D6C C   FIELD 15w01 SEC15: SEC15
0x40032D6C C   FIELD 16w01 SEC16: SEC16
0x40032D6C C   FIELD 17w01 SEC17: SEC17
0x40032D6C C   FIELD 18w01 SEC18: SEC18
0x40032D6C C   FIELD 19w01 SEC19: SEC19
0x40032D6C C   FIELD 20w01 SEC20: SEC20
0x40032D6C C   FIELD 21w01 SEC21: SEC21
0x40032D6C C   FIELD 22w01 SEC22: SEC22
0x40032D6C C   FIELD 23w01 SEC23: SEC23
0x40032D6C C   FIELD 24w01 SEC24: SEC24
0x40032D6C C   FIELD 25w01 SEC25: SEC25
0x40032D6C C   FIELD 26w01 SEC26: SEC26
0x40032D6C C   FIELD 27w01 SEC27: SEC27
0x40032D6C C   FIELD 28w01 SEC28: SEC28
0x40032D6C C   FIELD 29w01 SEC29: SEC29
0x40032D6C C   FIELD 30w01 SEC30: SEC30
0x40032D6C C   FIELD 31w01 SEC31: SEC31
0x40032D70 B  REGISTER MPCBB1_SECCFGR28 (rw): MPCBBx security configuration for super-block x register
0x40032D70 C   FIELD 00w01 SEC0: SEC0
0x40032D70 C   FIELD 01w01 SEC1: SEC1
0x40032D70 C   FIELD 02w01 SEC2: SEC2
0x40032D70 C   FIELD 03w01 SEC3: SEC3
0x40032D70 C   FIELD 04w01 SEC4: SEC4
0x40032D70 C   FIELD 05w01 SEC5: SEC5
0x40032D70 C   FIELD 06w01 SEC6: SEC6
0x40032D70 C   FIELD 07w01 SEC7: SEC7
0x40032D70 C   FIELD 08w01 SEC8: SEC8
0x40032D70 C   FIELD 09w01 SEC9: SEC9
0x40032D70 C   FIELD 10w01 SEC10: SEC10
0x40032D70 C   FIELD 11w01 SEC11: SEC11
0x40032D70 C   FIELD 12w01 SEC12: SEC12
0x40032D70 C   FIELD 13w01 SEC13: SEC13
0x40032D70 C   FIELD 14w01 SEC14: SEC14
0x40032D70 C   FIELD 15w01 SEC15: SEC15
0x40032D70 C   FIELD 16w01 SEC16: SEC16
0x40032D70 C   FIELD 17w01 SEC17: SEC17
0x40032D70 C   FIELD 18w01 SEC18: SEC18
0x40032D70 C   FIELD 19w01 SEC19: SEC19
0x40032D70 C   FIELD 20w01 SEC20: SEC20
0x40032D70 C   FIELD 21w01 SEC21: SEC21
0x40032D70 C   FIELD 22w01 SEC22: SEC22
0x40032D70 C   FIELD 23w01 SEC23: SEC23
0x40032D70 C   FIELD 24w01 SEC24: SEC24
0x40032D70 C   FIELD 25w01 SEC25: SEC25
0x40032D70 C   FIELD 26w01 SEC26: SEC26
0x40032D70 C   FIELD 27w01 SEC27: SEC27
0x40032D70 C   FIELD 28w01 SEC28: SEC28
0x40032D70 C   FIELD 29w01 SEC29: SEC29
0x40032D70 C   FIELD 30w01 SEC30: SEC30
0x40032D70 C   FIELD 31w01 SEC31: SEC31
0x40032D74 B  REGISTER MPCBB1_SECCFGR29 (rw): MPCBBx security configuration for super-block x register
0x40032D74 C   FIELD 00w01 SEC0: SEC0
0x40032D74 C   FIELD 01w01 SEC1: SEC1
0x40032D74 C   FIELD 02w01 SEC2: SEC2
0x40032D74 C   FIELD 03w01 SEC3: SEC3
0x40032D74 C   FIELD 04w01 SEC4: SEC4
0x40032D74 C   FIELD 05w01 SEC5: SEC5
0x40032D74 C   FIELD 06w01 SEC6: SEC6
0x40032D74 C   FIELD 07w01 SEC7: SEC7
0x40032D74 C   FIELD 08w01 SEC8: SEC8
0x40032D74 C   FIELD 09w01 SEC9: SEC9
0x40032D74 C   FIELD 10w01 SEC10: SEC10
0x40032D74 C   FIELD 11w01 SEC11: SEC11
0x40032D74 C   FIELD 12w01 SEC12: SEC12
0x40032D74 C   FIELD 13w01 SEC13: SEC13
0x40032D74 C   FIELD 14w01 SEC14: SEC14
0x40032D74 C   FIELD 15w01 SEC15: SEC15
0x40032D74 C   FIELD 16w01 SEC16: SEC16
0x40032D74 C   FIELD 17w01 SEC17: SEC17
0x40032D74 C   FIELD 18w01 SEC18: SEC18
0x40032D74 C   FIELD 19w01 SEC19: SEC19
0x40032D74 C   FIELD 20w01 SEC20: SEC20
0x40032D74 C   FIELD 21w01 SEC21: SEC21
0x40032D74 C   FIELD 22w01 SEC22: SEC22
0x40032D74 C   FIELD 23w01 SEC23: SEC23
0x40032D74 C   FIELD 24w01 SEC24: SEC24
0x40032D74 C   FIELD 25w01 SEC25: SEC25
0x40032D74 C   FIELD 26w01 SEC26: SEC26
0x40032D74 C   FIELD 27w01 SEC27: SEC27
0x40032D74 C   FIELD 28w01 SEC28: SEC28
0x40032D74 C   FIELD 29w01 SEC29: SEC29
0x40032D74 C   FIELD 30w01 SEC30: SEC30
0x40032D74 C   FIELD 31w01 SEC31: SEC31
0x40032D78 B  REGISTER MPCBB1_SECCFGR30 (rw): MPCBBx security configuration for super-block x register
0x40032D78 C   FIELD 00w01 SEC0: SEC0
0x40032D78 C   FIELD 01w01 SEC1: SEC1
0x40032D78 C   FIELD 02w01 SEC2: SEC2
0x40032D78 C   FIELD 03w01 SEC3: SEC3
0x40032D78 C   FIELD 04w01 SEC4: SEC4
0x40032D78 C   FIELD 05w01 SEC5: SEC5
0x40032D78 C   FIELD 06w01 SEC6: SEC6
0x40032D78 C   FIELD 07w01 SEC7: SEC7
0x40032D78 C   FIELD 08w01 SEC8: SEC8
0x40032D78 C   FIELD 09w01 SEC9: SEC9
0x40032D78 C   FIELD 10w01 SEC10: SEC10
0x40032D78 C   FIELD 11w01 SEC11: SEC11
0x40032D78 C   FIELD 12w01 SEC12: SEC12
0x40032D78 C   FIELD 13w01 SEC13: SEC13
0x40032D78 C   FIELD 14w01 SEC14: SEC14
0x40032D78 C   FIELD 15w01 SEC15: SEC15
0x40032D78 C   FIELD 16w01 SEC16: SEC16
0x40032D78 C   FIELD 17w01 SEC17: SEC17
0x40032D78 C   FIELD 18w01 SEC18: SEC18
0x40032D78 C   FIELD 19w01 SEC19: SEC19
0x40032D78 C   FIELD 20w01 SEC20: SEC20
0x40032D78 C   FIELD 21w01 SEC21: SEC21
0x40032D78 C   FIELD 22w01 SEC22: SEC22
0x40032D78 C   FIELD 23w01 SEC23: SEC23
0x40032D78 C   FIELD 24w01 SEC24: SEC24
0x40032D78 C   FIELD 25w01 SEC25: SEC25
0x40032D78 C   FIELD 26w01 SEC26: SEC26
0x40032D78 C   FIELD 27w01 SEC27: SEC27
0x40032D78 C   FIELD 28w01 SEC28: SEC28
0x40032D78 C   FIELD 29w01 SEC29: SEC29
0x40032D78 C   FIELD 30w01 SEC30: SEC30
0x40032D78 C   FIELD 31w01 SEC31: SEC31
0x40032D7C B  REGISTER MPCBB1_SECCFGR31 (rw): MPCBBx security configuration for super-block x register
0x40032D7C C   FIELD 00w01 SEC0: SEC0
0x40032D7C C   FIELD 01w01 SEC1: SEC1
0x40032D7C C   FIELD 02w01 SEC2: SEC2
0x40032D7C C   FIELD 03w01 SEC3: SEC3
0x40032D7C C   FIELD 04w01 SEC4: SEC4
0x40032D7C C   FIELD 05w01 SEC5: SEC5
0x40032D7C C   FIELD 06w01 SEC6: SEC6
0x40032D7C C   FIELD 07w01 SEC7: SEC7
0x40032D7C C   FIELD 08w01 SEC8: SEC8
0x40032D7C C   FIELD 09w01 SEC9: SEC9
0x40032D7C C   FIELD 10w01 SEC10: SEC10
0x40032D7C C   FIELD 11w01 SEC11: SEC11
0x40032D7C C   FIELD 12w01 SEC12: SEC12
0x40032D7C C   FIELD 13w01 SEC13: SEC13
0x40032D7C C   FIELD 14w01 SEC14: SEC14
0x40032D7C C   FIELD 15w01 SEC15: SEC15
0x40032D7C C   FIELD 16w01 SEC16: SEC16
0x40032D7C C   FIELD 17w01 SEC17: SEC17
0x40032D7C C   FIELD 18w01 SEC18: SEC18
0x40032D7C C   FIELD 19w01 SEC19: SEC19
0x40032D7C C   FIELD 20w01 SEC20: SEC20
0x40032D7C C   FIELD 21w01 SEC21: SEC21
0x40032D7C C   FIELD 22w01 SEC22: SEC22
0x40032D7C C   FIELD 23w01 SEC23: SEC23
0x40032D7C C   FIELD 24w01 SEC24: SEC24
0x40032D7C C   FIELD 25w01 SEC25: SEC25
0x40032D7C C   FIELD 26w01 SEC26: SEC26
0x40032D7C C   FIELD 27w01 SEC27: SEC27
0x40032D7C C   FIELD 28w01 SEC28: SEC28
0x40032D7C C   FIELD 29w01 SEC29: SEC29
0x40032D7C C   FIELD 30w01 SEC30: SEC30
0x40032D7C C   FIELD 31w01 SEC31: SEC31
0x40032E00 B  REGISTER MPCBB1_PRIVCFGR0 (rw): MPCBB privileged configuration for super-block x register
0x40032E00 C   FIELD 00w01 PRIV0: PRIV0
0x40032E00 C   FIELD 01w01 PRIV1: PRIV1
0x40032E00 C   FIELD 02w01 PRIV2: PRIV2
0x40032E00 C   FIELD 03w01 PRIV3: PRIV3
0x40032E00 C   FIELD 04w01 PRIV4: PRIV4
0x40032E00 C   FIELD 05w01 PRIV5: PRIV5
0x40032E00 C   FIELD 06w01 PRIV6: PRIV6
0x40032E00 C   FIELD 07w01 PRIV7: PRIV7
0x40032E00 C   FIELD 08w01 PRIV8: PRIV8
0x40032E00 C   FIELD 09w01 PRIV9: PRIV9
0x40032E00 C   FIELD 10w01 PRIV10: PRIV10
0x40032E00 C   FIELD 11w01 PRIV11: PRIV11
0x40032E00 C   FIELD 12w01 PRIV12: PRIV12
0x40032E00 C   FIELD 13w01 PRIV13: PRIV13
0x40032E00 C   FIELD 14w01 PRIV14: PRIV14
0x40032E00 C   FIELD 15w01 PRIV15: PRIV15
0x40032E00 C   FIELD 16w01 PRIV16: PRIV16
0x40032E00 C   FIELD 17w01 PRIV17: PRIV17
0x40032E00 C   FIELD 18w01 PRIV18: PRIV18
0x40032E00 C   FIELD 19w01 PRIV19: PRIV19
0x40032E00 C   FIELD 20w01 PRIV20: PRIV20
0x40032E00 C   FIELD 21w01 PRIV21: PRIV21
0x40032E00 C   FIELD 22w01 PRIV22: PRIV22
0x40032E00 C   FIELD 23w01 PRIV23: PRIV23
0x40032E00 C   FIELD 24w01 PRIV24: PRIV24
0x40032E00 C   FIELD 25w01 PRIV25: PRIV25
0x40032E00 C   FIELD 26w01 PRIV26: PRIV26
0x40032E00 C   FIELD 27w01 PRIV27: PRIV27
0x40032E00 C   FIELD 28w01 PRIV28: PRIV28
0x40032E00 C   FIELD 29w01 PRIV29: PRIV29
0x40032E00 C   FIELD 30w01 PRIV30: PRIV30
0x40032E00 C   FIELD 31w01 PRIV31: PRIV31
0x40032E04 B  REGISTER MPCBB1_PRIVCFGR1 (rw): MPCBB privileged configuration for super-block x register
0x40032E04 C   FIELD 00w01 PRIV0: PRIV0
0x40032E04 C   FIELD 01w01 PRIV1: PRIV1
0x40032E04 C   FIELD 02w01 PRIV2: PRIV2
0x40032E04 C   FIELD 03w01 PRIV3: PRIV3
0x40032E04 C   FIELD 04w01 PRIV4: PRIV4
0x40032E04 C   FIELD 05w01 PRIV5: PRIV5
0x40032E04 C   FIELD 06w01 PRIV6: PRIV6
0x40032E04 C   FIELD 07w01 PRIV7: PRIV7
0x40032E04 C   FIELD 08w01 PRIV8: PRIV8
0x40032E04 C   FIELD 09w01 PRIV9: PRIV9
0x40032E04 C   FIELD 10w01 PRIV10: PRIV10
0x40032E04 C   FIELD 11w01 PRIV11: PRIV11
0x40032E04 C   FIELD 12w01 PRIV12: PRIV12
0x40032E04 C   FIELD 13w01 PRIV13: PRIV13
0x40032E04 C   FIELD 14w01 PRIV14: PRIV14
0x40032E04 C   FIELD 15w01 PRIV15: PRIV15
0x40032E04 C   FIELD 16w01 PRIV16: PRIV16
0x40032E04 C   FIELD 17w01 PRIV17: PRIV17
0x40032E04 C   FIELD 18w01 PRIV18: PRIV18
0x40032E04 C   FIELD 19w01 PRIV19: PRIV19
0x40032E04 C   FIELD 20w01 PRIV20: PRIV20
0x40032E04 C   FIELD 21w01 PRIV21: PRIV21
0x40032E04 C   FIELD 22w01 PRIV22: PRIV22
0x40032E04 C   FIELD 23w01 PRIV23: PRIV23
0x40032E04 C   FIELD 24w01 PRIV24: PRIV24
0x40032E04 C   FIELD 25w01 PRIV25: PRIV25
0x40032E04 C   FIELD 26w01 PRIV26: PRIV26
0x40032E04 C   FIELD 27w01 PRIV27: PRIV27
0x40032E04 C   FIELD 28w01 PRIV28: PRIV28
0x40032E04 C   FIELD 29w01 PRIV29: PRIV29
0x40032E04 C   FIELD 30w01 PRIV30: PRIV30
0x40032E04 C   FIELD 31w01 PRIV31: PRIV31
0x40032E08 B  REGISTER MPCBB1_PRIVCFGR2 (rw): MPCBB privileged configuration for super-block x register
0x40032E08 C   FIELD 00w01 PRIV0: PRIV0
0x40032E08 C   FIELD 01w01 PRIV1: PRIV1
0x40032E08 C   FIELD 02w01 PRIV2: PRIV2
0x40032E08 C   FIELD 03w01 PRIV3: PRIV3
0x40032E08 C   FIELD 04w01 PRIV4: PRIV4
0x40032E08 C   FIELD 05w01 PRIV5: PRIV5
0x40032E08 C   FIELD 06w01 PRIV6: PRIV6
0x40032E08 C   FIELD 07w01 PRIV7: PRIV7
0x40032E08 C   FIELD 08w01 PRIV8: PRIV8
0x40032E08 C   FIELD 09w01 PRIV9: PRIV9
0x40032E08 C   FIELD 10w01 PRIV10: PRIV10
0x40032E08 C   FIELD 11w01 PRIV11: PRIV11
0x40032E08 C   FIELD 12w01 PRIV12: PRIV12
0x40032E08 C   FIELD 13w01 PRIV13: PRIV13
0x40032E08 C   FIELD 14w01 PRIV14: PRIV14
0x40032E08 C   FIELD 15w01 PRIV15: PRIV15
0x40032E08 C   FIELD 16w01 PRIV16: PRIV16
0x40032E08 C   FIELD 17w01 PRIV17: PRIV17
0x40032E08 C   FIELD 18w01 PRIV18: PRIV18
0x40032E08 C   FIELD 19w01 PRIV19: PRIV19
0x40032E08 C   FIELD 20w01 PRIV20: PRIV20
0x40032E08 C   FIELD 21w01 PRIV21: PRIV21
0x40032E08 C   FIELD 22w01 PRIV22: PRIV22
0x40032E08 C   FIELD 23w01 PRIV23: PRIV23
0x40032E08 C   FIELD 24w01 PRIV24: PRIV24
0x40032E08 C   FIELD 25w01 PRIV25: PRIV25
0x40032E08 C   FIELD 26w01 PRIV26: PRIV26
0x40032E08 C   FIELD 27w01 PRIV27: PRIV27
0x40032E08 C   FIELD 28w01 PRIV28: PRIV28
0x40032E08 C   FIELD 29w01 PRIV29: PRIV29
0x40032E08 C   FIELD 30w01 PRIV30: PRIV30
0x40032E08 C   FIELD 31w01 PRIV31: PRIV31
0x40032E0C B  REGISTER MPCBB1_PRIVCFGR3 (rw): MPCBB privileged configuration for super-block x register
0x40032E0C C   FIELD 00w01 PRIV0: PRIV0
0x40032E0C C   FIELD 01w01 PRIV1: PRIV1
0x40032E0C C   FIELD 02w01 PRIV2: PRIV2
0x40032E0C C   FIELD 03w01 PRIV3: PRIV3
0x40032E0C C   FIELD 04w01 PRIV4: PRIV4
0x40032E0C C   FIELD 05w01 PRIV5: PRIV5
0x40032E0C C   FIELD 06w01 PRIV6: PRIV6
0x40032E0C C   FIELD 07w01 PRIV7: PRIV7
0x40032E0C C   FIELD 08w01 PRIV8: PRIV8
0x40032E0C C   FIELD 09w01 PRIV9: PRIV9
0x40032E0C C   FIELD 10w01 PRIV10: PRIV10
0x40032E0C C   FIELD 11w01 PRIV11: PRIV11
0x40032E0C C   FIELD 12w01 PRIV12: PRIV12
0x40032E0C C   FIELD 13w01 PRIV13: PRIV13
0x40032E0C C   FIELD 14w01 PRIV14: PRIV14
0x40032E0C C   FIELD 15w01 PRIV15: PRIV15
0x40032E0C C   FIELD 16w01 PRIV16: PRIV16
0x40032E0C C   FIELD 17w01 PRIV17: PRIV17
0x40032E0C C   FIELD 18w01 PRIV18: PRIV18
0x40032E0C C   FIELD 19w01 PRIV19: PRIV19
0x40032E0C C   FIELD 20w01 PRIV20: PRIV20
0x40032E0C C   FIELD 21w01 PRIV21: PRIV21
0x40032E0C C   FIELD 22w01 PRIV22: PRIV22
0x40032E0C C   FIELD 23w01 PRIV23: PRIV23
0x40032E0C C   FIELD 24w01 PRIV24: PRIV24
0x40032E0C C   FIELD 25w01 PRIV25: PRIV25
0x40032E0C C   FIELD 26w01 PRIV26: PRIV26
0x40032E0C C   FIELD 27w01 PRIV27: PRIV27
0x40032E0C C   FIELD 28w01 PRIV28: PRIV28
0x40032E0C C   FIELD 29w01 PRIV29: PRIV29
0x40032E0C C   FIELD 30w01 PRIV30: PRIV30
0x40032E0C C   FIELD 31w01 PRIV31: PRIV31
0x40032E10 B  REGISTER MPCBB1_PRIVCFGR4 (rw): MPCBB privileged configuration for super-block x register
0x40032E10 C   FIELD 00w01 PRIV0: PRIV0
0x40032E10 C   FIELD 01w01 PRIV1: PRIV1
0x40032E10 C   FIELD 02w01 PRIV2: PRIV2
0x40032E10 C   FIELD 03w01 PRIV3: PRIV3
0x40032E10 C   FIELD 04w01 PRIV4: PRIV4
0x40032E10 C   FIELD 05w01 PRIV5: PRIV5
0x40032E10 C   FIELD 06w01 PRIV6: PRIV6
0x40032E10 C   FIELD 07w01 PRIV7: PRIV7
0x40032E10 C   FIELD 08w01 PRIV8: PRIV8
0x40032E10 C   FIELD 09w01 PRIV9: PRIV9
0x40032E10 C   FIELD 10w01 PRIV10: PRIV10
0x40032E10 C   FIELD 11w01 PRIV11: PRIV11
0x40032E10 C   FIELD 12w01 PRIV12: PRIV12
0x40032E10 C   FIELD 13w01 PRIV13: PRIV13
0x40032E10 C   FIELD 14w01 PRIV14: PRIV14
0x40032E10 C   FIELD 15w01 PRIV15: PRIV15
0x40032E10 C   FIELD 16w01 PRIV16: PRIV16
0x40032E10 C   FIELD 17w01 PRIV17: PRIV17
0x40032E10 C   FIELD 18w01 PRIV18: PRIV18
0x40032E10 C   FIELD 19w01 PRIV19: PRIV19
0x40032E10 C   FIELD 20w01 PRIV20: PRIV20
0x40032E10 C   FIELD 21w01 PRIV21: PRIV21
0x40032E10 C   FIELD 22w01 PRIV22: PRIV22
0x40032E10 C   FIELD 23w01 PRIV23: PRIV23
0x40032E10 C   FIELD 24w01 PRIV24: PRIV24
0x40032E10 C   FIELD 25w01 PRIV25: PRIV25
0x40032E10 C   FIELD 26w01 PRIV26: PRIV26
0x40032E10 C   FIELD 27w01 PRIV27: PRIV27
0x40032E10 C   FIELD 28w01 PRIV28: PRIV28
0x40032E10 C   FIELD 29w01 PRIV29: PRIV29
0x40032E10 C   FIELD 30w01 PRIV30: PRIV30
0x40032E10 C   FIELD 31w01 PRIV31: PRIV31
0x40032E14 B  REGISTER MPCBB1_PRIVCFGR5 (rw): MPCBB privileged configuration for super-block x register
0x40032E14 C   FIELD 00w01 PRIV0: PRIV0
0x40032E14 C   FIELD 01w01 PRIV1: PRIV1
0x40032E14 C   FIELD 02w01 PRIV2: PRIV2
0x40032E14 C   FIELD 03w01 PRIV3: PRIV3
0x40032E14 C   FIELD 04w01 PRIV4: PRIV4
0x40032E14 C   FIELD 05w01 PRIV5: PRIV5
0x40032E14 C   FIELD 06w01 PRIV6: PRIV6
0x40032E14 C   FIELD 07w01 PRIV7: PRIV7
0x40032E14 C   FIELD 08w01 PRIV8: PRIV8
0x40032E14 C   FIELD 09w01 PRIV9: PRIV9
0x40032E14 C   FIELD 10w01 PRIV10: PRIV10
0x40032E14 C   FIELD 11w01 PRIV11: PRIV11
0x40032E14 C   FIELD 12w01 PRIV12: PRIV12
0x40032E14 C   FIELD 13w01 PRIV13: PRIV13
0x40032E14 C   FIELD 14w01 PRIV14: PRIV14
0x40032E14 C   FIELD 15w01 PRIV15: PRIV15
0x40032E14 C   FIELD 16w01 PRIV16: PRIV16
0x40032E14 C   FIELD 17w01 PRIV17: PRIV17
0x40032E14 C   FIELD 18w01 PRIV18: PRIV18
0x40032E14 C   FIELD 19w01 PRIV19: PRIV19
0x40032E14 C   FIELD 20w01 PRIV20: PRIV20
0x40032E14 C   FIELD 21w01 PRIV21: PRIV21
0x40032E14 C   FIELD 22w01 PRIV22: PRIV22
0x40032E14 C   FIELD 23w01 PRIV23: PRIV23
0x40032E14 C   FIELD 24w01 PRIV24: PRIV24
0x40032E14 C   FIELD 25w01 PRIV25: PRIV25
0x40032E14 C   FIELD 26w01 PRIV26: PRIV26
0x40032E14 C   FIELD 27w01 PRIV27: PRIV27
0x40032E14 C   FIELD 28w01 PRIV28: PRIV28
0x40032E14 C   FIELD 29w01 PRIV29: PRIV29
0x40032E14 C   FIELD 30w01 PRIV30: PRIV30
0x40032E14 C   FIELD 31w01 PRIV31: PRIV31
0x40032E18 B  REGISTER MPCBB1_PRIVCFGR6 (rw): MPCBB privileged configuration for super-block x register
0x40032E18 C   FIELD 00w01 PRIV0: PRIV0
0x40032E18 C   FIELD 01w01 PRIV1: PRIV1
0x40032E18 C   FIELD 02w01 PRIV2: PRIV2
0x40032E18 C   FIELD 03w01 PRIV3: PRIV3
0x40032E18 C   FIELD 04w01 PRIV4: PRIV4
0x40032E18 C   FIELD 05w01 PRIV5: PRIV5
0x40032E18 C   FIELD 06w01 PRIV6: PRIV6
0x40032E18 C   FIELD 07w01 PRIV7: PRIV7
0x40032E18 C   FIELD 08w01 PRIV8: PRIV8
0x40032E18 C   FIELD 09w01 PRIV9: PRIV9
0x40032E18 C   FIELD 10w01 PRIV10: PRIV10
0x40032E18 C   FIELD 11w01 PRIV11: PRIV11
0x40032E18 C   FIELD 12w01 PRIV12: PRIV12
0x40032E18 C   FIELD 13w01 PRIV13: PRIV13
0x40032E18 C   FIELD 14w01 PRIV14: PRIV14
0x40032E18 C   FIELD 15w01 PRIV15: PRIV15
0x40032E18 C   FIELD 16w01 PRIV16: PRIV16
0x40032E18 C   FIELD 17w01 PRIV17: PRIV17
0x40032E18 C   FIELD 18w01 PRIV18: PRIV18
0x40032E18 C   FIELD 19w01 PRIV19: PRIV19
0x40032E18 C   FIELD 20w01 PRIV20: PRIV20
0x40032E18 C   FIELD 21w01 PRIV21: PRIV21
0x40032E18 C   FIELD 22w01 PRIV22: PRIV22
0x40032E18 C   FIELD 23w01 PRIV23: PRIV23
0x40032E18 C   FIELD 24w01 PRIV24: PRIV24
0x40032E18 C   FIELD 25w01 PRIV25: PRIV25
0x40032E18 C   FIELD 26w01 PRIV26: PRIV26
0x40032E18 C   FIELD 27w01 PRIV27: PRIV27
0x40032E18 C   FIELD 28w01 PRIV28: PRIV28
0x40032E18 C   FIELD 29w01 PRIV29: PRIV29
0x40032E18 C   FIELD 30w01 PRIV30: PRIV30
0x40032E18 C   FIELD 31w01 PRIV31: PRIV31
0x40032E1C B  REGISTER MPCBB1_PRIVCFGR7 (rw): MPCBB privileged configuration for super-block x register
0x40032E1C C   FIELD 00w01 PRIV0: PRIV0
0x40032E1C C   FIELD 01w01 PRIV1: PRIV1
0x40032E1C C   FIELD 02w01 PRIV2: PRIV2
0x40032E1C C   FIELD 03w01 PRIV3: PRIV3
0x40032E1C C   FIELD 04w01 PRIV4: PRIV4
0x40032E1C C   FIELD 05w01 PRIV5: PRIV5
0x40032E1C C   FIELD 06w01 PRIV6: PRIV6
0x40032E1C C   FIELD 07w01 PRIV7: PRIV7
0x40032E1C C   FIELD 08w01 PRIV8: PRIV8
0x40032E1C C   FIELD 09w01 PRIV9: PRIV9
0x40032E1C C   FIELD 10w01 PRIV10: PRIV10
0x40032E1C C   FIELD 11w01 PRIV11: PRIV11
0x40032E1C C   FIELD 12w01 PRIV12: PRIV12
0x40032E1C C   FIELD 13w01 PRIV13: PRIV13
0x40032E1C C   FIELD 14w01 PRIV14: PRIV14
0x40032E1C C   FIELD 15w01 PRIV15: PRIV15
0x40032E1C C   FIELD 16w01 PRIV16: PRIV16
0x40032E1C C   FIELD 17w01 PRIV17: PRIV17
0x40032E1C C   FIELD 18w01 PRIV18: PRIV18
0x40032E1C C   FIELD 19w01 PRIV19: PRIV19
0x40032E1C C   FIELD 20w01 PRIV20: PRIV20
0x40032E1C C   FIELD 21w01 PRIV21: PRIV21
0x40032E1C C   FIELD 22w01 PRIV22: PRIV22
0x40032E1C C   FIELD 23w01 PRIV23: PRIV23
0x40032E1C C   FIELD 24w01 PRIV24: PRIV24
0x40032E1C C   FIELD 25w01 PRIV25: PRIV25
0x40032E1C C   FIELD 26w01 PRIV26: PRIV26
0x40032E1C C   FIELD 27w01 PRIV27: PRIV27
0x40032E1C C   FIELD 28w01 PRIV28: PRIV28
0x40032E1C C   FIELD 29w01 PRIV29: PRIV29
0x40032E1C C   FIELD 30w01 PRIV30: PRIV30
0x40032E1C C   FIELD 31w01 PRIV31: PRIV31
0x40032E20 B  REGISTER MPCBB1_PRIVCFGR8 (rw): MPCBB privileged configuration for super-block x register
0x40032E20 C   FIELD 00w01 PRIV0: PRIV0
0x40032E20 C   FIELD 01w01 PRIV1: PRIV1
0x40032E20 C   FIELD 02w01 PRIV2: PRIV2
0x40032E20 C   FIELD 03w01 PRIV3: PRIV3
0x40032E20 C   FIELD 04w01 PRIV4: PRIV4
0x40032E20 C   FIELD 05w01 PRIV5: PRIV5
0x40032E20 C   FIELD 06w01 PRIV6: PRIV6
0x40032E20 C   FIELD 07w01 PRIV7: PRIV7
0x40032E20 C   FIELD 08w01 PRIV8: PRIV8
0x40032E20 C   FIELD 09w01 PRIV9: PRIV9
0x40032E20 C   FIELD 10w01 PRIV10: PRIV10
0x40032E20 C   FIELD 11w01 PRIV11: PRIV11
0x40032E20 C   FIELD 12w01 PRIV12: PRIV12
0x40032E20 C   FIELD 13w01 PRIV13: PRIV13
0x40032E20 C   FIELD 14w01 PRIV14: PRIV14
0x40032E20 C   FIELD 15w01 PRIV15: PRIV15
0x40032E20 C   FIELD 16w01 PRIV16: PRIV16
0x40032E20 C   FIELD 17w01 PRIV17: PRIV17
0x40032E20 C   FIELD 18w01 PRIV18: PRIV18
0x40032E20 C   FIELD 19w01 PRIV19: PRIV19
0x40032E20 C   FIELD 20w01 PRIV20: PRIV20
0x40032E20 C   FIELD 21w01 PRIV21: PRIV21
0x40032E20 C   FIELD 22w01 PRIV22: PRIV22
0x40032E20 C   FIELD 23w01 PRIV23: PRIV23
0x40032E20 C   FIELD 24w01 PRIV24: PRIV24
0x40032E20 C   FIELD 25w01 PRIV25: PRIV25
0x40032E20 C   FIELD 26w01 PRIV26: PRIV26
0x40032E20 C   FIELD 27w01 PRIV27: PRIV27
0x40032E20 C   FIELD 28w01 PRIV28: PRIV28
0x40032E20 C   FIELD 29w01 PRIV29: PRIV29
0x40032E20 C   FIELD 30w01 PRIV30: PRIV30
0x40032E20 C   FIELD 31w01 PRIV31: PRIV31
0x40032E24 B  REGISTER MPCBB1_PRIVCFGR9 (rw): MPCBB privileged configuration for super-block x register
0x40032E24 C   FIELD 00w01 PRIV0: PRIV0
0x40032E24 C   FIELD 01w01 PRIV1: PRIV1
0x40032E24 C   FIELD 02w01 PRIV2: PRIV2
0x40032E24 C   FIELD 03w01 PRIV3: PRIV3
0x40032E24 C   FIELD 04w01 PRIV4: PRIV4
0x40032E24 C   FIELD 05w01 PRIV5: PRIV5
0x40032E24 C   FIELD 06w01 PRIV6: PRIV6
0x40032E24 C   FIELD 07w01 PRIV7: PRIV7
0x40032E24 C   FIELD 08w01 PRIV8: PRIV8
0x40032E24 C   FIELD 09w01 PRIV9: PRIV9
0x40032E24 C   FIELD 10w01 PRIV10: PRIV10
0x40032E24 C   FIELD 11w01 PRIV11: PRIV11
0x40032E24 C   FIELD 12w01 PRIV12: PRIV12
0x40032E24 C   FIELD 13w01 PRIV13: PRIV13
0x40032E24 C   FIELD 14w01 PRIV14: PRIV14
0x40032E24 C   FIELD 15w01 PRIV15: PRIV15
0x40032E24 C   FIELD 16w01 PRIV16: PRIV16
0x40032E24 C   FIELD 17w01 PRIV17: PRIV17
0x40032E24 C   FIELD 18w01 PRIV18: PRIV18
0x40032E24 C   FIELD 19w01 PRIV19: PRIV19
0x40032E24 C   FIELD 20w01 PRIV20: PRIV20
0x40032E24 C   FIELD 21w01 PRIV21: PRIV21
0x40032E24 C   FIELD 22w01 PRIV22: PRIV22
0x40032E24 C   FIELD 23w01 PRIV23: PRIV23
0x40032E24 C   FIELD 24w01 PRIV24: PRIV24
0x40032E24 C   FIELD 25w01 PRIV25: PRIV25
0x40032E24 C   FIELD 26w01 PRIV26: PRIV26
0x40032E24 C   FIELD 27w01 PRIV27: PRIV27
0x40032E24 C   FIELD 28w01 PRIV28: PRIV28
0x40032E24 C   FIELD 29w01 PRIV29: PRIV29
0x40032E24 C   FIELD 30w01 PRIV30: PRIV30
0x40032E24 C   FIELD 31w01 PRIV31: PRIV31
0x40032E28 B  REGISTER MPCBB1_PRIVCFGR10 (rw): MPCBB privileged configuration for super-block x register
0x40032E28 C   FIELD 00w01 PRIV0: PRIV0
0x40032E28 C   FIELD 01w01 PRIV1: PRIV1
0x40032E28 C   FIELD 02w01 PRIV2: PRIV2
0x40032E28 C   FIELD 03w01 PRIV3: PRIV3
0x40032E28 C   FIELD 04w01 PRIV4: PRIV4
0x40032E28 C   FIELD 05w01 PRIV5: PRIV5
0x40032E28 C   FIELD 06w01 PRIV6: PRIV6
0x40032E28 C   FIELD 07w01 PRIV7: PRIV7
0x40032E28 C   FIELD 08w01 PRIV8: PRIV8
0x40032E28 C   FIELD 09w01 PRIV9: PRIV9
0x40032E28 C   FIELD 10w01 PRIV10: PRIV10
0x40032E28 C   FIELD 11w01 PRIV11: PRIV11
0x40032E28 C   FIELD 12w01 PRIV12: PRIV12
0x40032E28 C   FIELD 13w01 PRIV13: PRIV13
0x40032E28 C   FIELD 14w01 PRIV14: PRIV14
0x40032E28 C   FIELD 15w01 PRIV15: PRIV15
0x40032E28 C   FIELD 16w01 PRIV16: PRIV16
0x40032E28 C   FIELD 17w01 PRIV17: PRIV17
0x40032E28 C   FIELD 18w01 PRIV18: PRIV18
0x40032E28 C   FIELD 19w01 PRIV19: PRIV19
0x40032E28 C   FIELD 20w01 PRIV20: PRIV20
0x40032E28 C   FIELD 21w01 PRIV21: PRIV21
0x40032E28 C   FIELD 22w01 PRIV22: PRIV22
0x40032E28 C   FIELD 23w01 PRIV23: PRIV23
0x40032E28 C   FIELD 24w01 PRIV24: PRIV24
0x40032E28 C   FIELD 25w01 PRIV25: PRIV25
0x40032E28 C   FIELD 26w01 PRIV26: PRIV26
0x40032E28 C   FIELD 27w01 PRIV27: PRIV27
0x40032E28 C   FIELD 28w01 PRIV28: PRIV28
0x40032E28 C   FIELD 29w01 PRIV29: PRIV29
0x40032E28 C   FIELD 30w01 PRIV30: PRIV30
0x40032E28 C   FIELD 31w01 PRIV31: PRIV31
0x40032E2C B  REGISTER MPCBB1_PRIVCFGR11 (rw): MPCBB privileged configuration for super-block x register
0x40032E2C C   FIELD 00w01 PRIV0: PRIV0
0x40032E2C C   FIELD 01w01 PRIV1: PRIV1
0x40032E2C C   FIELD 02w01 PRIV2: PRIV2
0x40032E2C C   FIELD 03w01 PRIV3: PRIV3
0x40032E2C C   FIELD 04w01 PRIV4: PRIV4
0x40032E2C C   FIELD 05w01 PRIV5: PRIV5
0x40032E2C C   FIELD 06w01 PRIV6: PRIV6
0x40032E2C C   FIELD 07w01 PRIV7: PRIV7
0x40032E2C C   FIELD 08w01 PRIV8: PRIV8
0x40032E2C C   FIELD 09w01 PRIV9: PRIV9
0x40032E2C C   FIELD 10w01 PRIV10: PRIV10
0x40032E2C C   FIELD 11w01 PRIV11: PRIV11
0x40032E2C C   FIELD 12w01 PRIV12: PRIV12
0x40032E2C C   FIELD 13w01 PRIV13: PRIV13
0x40032E2C C   FIELD 14w01 PRIV14: PRIV14
0x40032E2C C   FIELD 15w01 PRIV15: PRIV15
0x40032E2C C   FIELD 16w01 PRIV16: PRIV16
0x40032E2C C   FIELD 17w01 PRIV17: PRIV17
0x40032E2C C   FIELD 18w01 PRIV18: PRIV18
0x40032E2C C   FIELD 19w01 PRIV19: PRIV19
0x40032E2C C   FIELD 20w01 PRIV20: PRIV20
0x40032E2C C   FIELD 21w01 PRIV21: PRIV21
0x40032E2C C   FIELD 22w01 PRIV22: PRIV22
0x40032E2C C   FIELD 23w01 PRIV23: PRIV23
0x40032E2C C   FIELD 24w01 PRIV24: PRIV24
0x40032E2C C   FIELD 25w01 PRIV25: PRIV25
0x40032E2C C   FIELD 26w01 PRIV26: PRIV26
0x40032E2C C   FIELD 27w01 PRIV27: PRIV27
0x40032E2C C   FIELD 28w01 PRIV28: PRIV28
0x40032E2C C   FIELD 29w01 PRIV29: PRIV29
0x40032E2C C   FIELD 30w01 PRIV30: PRIV30
0x40032E2C C   FIELD 31w01 PRIV31: PRIV31
0x40032E30 B  REGISTER MPCBB1_PRIVCFGR12 (rw): MPCBB privileged configuration for super-block x register
0x40032E30 C   FIELD 00w01 PRIV0: PRIV0
0x40032E30 C   FIELD 01w01 PRIV1: PRIV1
0x40032E30 C   FIELD 02w01 PRIV2: PRIV2
0x40032E30 C   FIELD 03w01 PRIV3: PRIV3
0x40032E30 C   FIELD 04w01 PRIV4: PRIV4
0x40032E30 C   FIELD 05w01 PRIV5: PRIV5
0x40032E30 C   FIELD 06w01 PRIV6: PRIV6
0x40032E30 C   FIELD 07w01 PRIV7: PRIV7
0x40032E30 C   FIELD 08w01 PRIV8: PRIV8
0x40032E30 C   FIELD 09w01 PRIV9: PRIV9
0x40032E30 C   FIELD 10w01 PRIV10: PRIV10
0x40032E30 C   FIELD 11w01 PRIV11: PRIV11
0x40032E30 C   FIELD 12w01 PRIV12: PRIV12
0x40032E30 C   FIELD 13w01 PRIV13: PRIV13
0x40032E30 C   FIELD 14w01 PRIV14: PRIV14
0x40032E30 C   FIELD 15w01 PRIV15: PRIV15
0x40032E30 C   FIELD 16w01 PRIV16: PRIV16
0x40032E30 C   FIELD 17w01 PRIV17: PRIV17
0x40032E30 C   FIELD 18w01 PRIV18: PRIV18
0x40032E30 C   FIELD 19w01 PRIV19: PRIV19
0x40032E30 C   FIELD 20w01 PRIV20: PRIV20
0x40032E30 C   FIELD 21w01 PRIV21: PRIV21
0x40032E30 C   FIELD 22w01 PRIV22: PRIV22
0x40032E30 C   FIELD 23w01 PRIV23: PRIV23
0x40032E30 C   FIELD 24w01 PRIV24: PRIV24
0x40032E30 C   FIELD 25w01 PRIV25: PRIV25
0x40032E30 C   FIELD 26w01 PRIV26: PRIV26
0x40032E30 C   FIELD 27w01 PRIV27: PRIV27
0x40032E30 C   FIELD 28w01 PRIV28: PRIV28
0x40032E30 C   FIELD 29w01 PRIV29: PRIV29
0x40032E30 C   FIELD 30w01 PRIV30: PRIV30
0x40032E30 C   FIELD 31w01 PRIV31: PRIV31
0x40032E34 B  REGISTER MPCBB1_PRIVCFGR13 (rw): MPCBB privileged configuration for super-block x register
0x40032E34 C   FIELD 00w01 PRIV0: PRIV0
0x40032E34 C   FIELD 01w01 PRIV1: PRIV1
0x40032E34 C   FIELD 02w01 PRIV2: PRIV2
0x40032E34 C   FIELD 03w01 PRIV3: PRIV3
0x40032E34 C   FIELD 04w01 PRIV4: PRIV4
0x40032E34 C   FIELD 05w01 PRIV5: PRIV5
0x40032E34 C   FIELD 06w01 PRIV6: PRIV6
0x40032E34 C   FIELD 07w01 PRIV7: PRIV7
0x40032E34 C   FIELD 08w01 PRIV8: PRIV8
0x40032E34 C   FIELD 09w01 PRIV9: PRIV9
0x40032E34 C   FIELD 10w01 PRIV10: PRIV10
0x40032E34 C   FIELD 11w01 PRIV11: PRIV11
0x40032E34 C   FIELD 12w01 PRIV12: PRIV12
0x40032E34 C   FIELD 13w01 PRIV13: PRIV13
0x40032E34 C   FIELD 14w01 PRIV14: PRIV14
0x40032E34 C   FIELD 15w01 PRIV15: PRIV15
0x40032E34 C   FIELD 16w01 PRIV16: PRIV16
0x40032E34 C   FIELD 17w01 PRIV17: PRIV17
0x40032E34 C   FIELD 18w01 PRIV18: PRIV18
0x40032E34 C   FIELD 19w01 PRIV19: PRIV19
0x40032E34 C   FIELD 20w01 PRIV20: PRIV20
0x40032E34 C   FIELD 21w01 PRIV21: PRIV21
0x40032E34 C   FIELD 22w01 PRIV22: PRIV22
0x40032E34 C   FIELD 23w01 PRIV23: PRIV23
0x40032E34 C   FIELD 24w01 PRIV24: PRIV24
0x40032E34 C   FIELD 25w01 PRIV25: PRIV25
0x40032E34 C   FIELD 26w01 PRIV26: PRIV26
0x40032E34 C   FIELD 27w01 PRIV27: PRIV27
0x40032E34 C   FIELD 28w01 PRIV28: PRIV28
0x40032E34 C   FIELD 29w01 PRIV29: PRIV29
0x40032E34 C   FIELD 30w01 PRIV30: PRIV30
0x40032E34 C   FIELD 31w01 PRIV31: PRIV31
0x40032E38 B  REGISTER MPCBB1_PRIVCFGR14 (rw): MPCBB privileged configuration for super-block x register
0x40032E38 C   FIELD 00w01 PRIV0: PRIV0
0x40032E38 C   FIELD 01w01 PRIV1: PRIV1
0x40032E38 C   FIELD 02w01 PRIV2: PRIV2
0x40032E38 C   FIELD 03w01 PRIV3: PRIV3
0x40032E38 C   FIELD 04w01 PRIV4: PRIV4
0x40032E38 C   FIELD 05w01 PRIV5: PRIV5
0x40032E38 C   FIELD 06w01 PRIV6: PRIV6
0x40032E38 C   FIELD 07w01 PRIV7: PRIV7
0x40032E38 C   FIELD 08w01 PRIV8: PRIV8
0x40032E38 C   FIELD 09w01 PRIV9: PRIV9
0x40032E38 C   FIELD 10w01 PRIV10: PRIV10
0x40032E38 C   FIELD 11w01 PRIV11: PRIV11
0x40032E38 C   FIELD 12w01 PRIV12: PRIV12
0x40032E38 C   FIELD 13w01 PRIV13: PRIV13
0x40032E38 C   FIELD 14w01 PRIV14: PRIV14
0x40032E38 C   FIELD 15w01 PRIV15: PRIV15
0x40032E38 C   FIELD 16w01 PRIV16: PRIV16
0x40032E38 C   FIELD 17w01 PRIV17: PRIV17
0x40032E38 C   FIELD 18w01 PRIV18: PRIV18
0x40032E38 C   FIELD 19w01 PRIV19: PRIV19
0x40032E38 C   FIELD 20w01 PRIV20: PRIV20
0x40032E38 C   FIELD 21w01 PRIV21: PRIV21
0x40032E38 C   FIELD 22w01 PRIV22: PRIV22
0x40032E38 C   FIELD 23w01 PRIV23: PRIV23
0x40032E38 C   FIELD 24w01 PRIV24: PRIV24
0x40032E38 C   FIELD 25w01 PRIV25: PRIV25
0x40032E38 C   FIELD 26w01 PRIV26: PRIV26
0x40032E38 C   FIELD 27w01 PRIV27: PRIV27
0x40032E38 C   FIELD 28w01 PRIV28: PRIV28
0x40032E38 C   FIELD 29w01 PRIV29: PRIV29
0x40032E38 C   FIELD 30w01 PRIV30: PRIV30
0x40032E38 C   FIELD 31w01 PRIV31: PRIV31
0x40032E3C B  REGISTER MPCBB1_PRIVCFGR15 (rw): MPCBB privileged configuration for super-block x register
0x40032E3C C   FIELD 00w01 PRIV0: PRIV0
0x40032E3C C   FIELD 01w01 PRIV1: PRIV1
0x40032E3C C   FIELD 02w01 PRIV2: PRIV2
0x40032E3C C   FIELD 03w01 PRIV3: PRIV3
0x40032E3C C   FIELD 04w01 PRIV4: PRIV4
0x40032E3C C   FIELD 05w01 PRIV5: PRIV5
0x40032E3C C   FIELD 06w01 PRIV6: PRIV6
0x40032E3C C   FIELD 07w01 PRIV7: PRIV7
0x40032E3C C   FIELD 08w01 PRIV8: PRIV8
0x40032E3C C   FIELD 09w01 PRIV9: PRIV9
0x40032E3C C   FIELD 10w01 PRIV10: PRIV10
0x40032E3C C   FIELD 11w01 PRIV11: PRIV11
0x40032E3C C   FIELD 12w01 PRIV12: PRIV12
0x40032E3C C   FIELD 13w01 PRIV13: PRIV13
0x40032E3C C   FIELD 14w01 PRIV14: PRIV14
0x40032E3C C   FIELD 15w01 PRIV15: PRIV15
0x40032E3C C   FIELD 16w01 PRIV16: PRIV16
0x40032E3C C   FIELD 17w01 PRIV17: PRIV17
0x40032E3C C   FIELD 18w01 PRIV18: PRIV18
0x40032E3C C   FIELD 19w01 PRIV19: PRIV19
0x40032E3C C   FIELD 20w01 PRIV20: PRIV20
0x40032E3C C   FIELD 21w01 PRIV21: PRIV21
0x40032E3C C   FIELD 22w01 PRIV22: PRIV22
0x40032E3C C   FIELD 23w01 PRIV23: PRIV23
0x40032E3C C   FIELD 24w01 PRIV24: PRIV24
0x40032E3C C   FIELD 25w01 PRIV25: PRIV25
0x40032E3C C   FIELD 26w01 PRIV26: PRIV26
0x40032E3C C   FIELD 27w01 PRIV27: PRIV27
0x40032E3C C   FIELD 28w01 PRIV28: PRIV28
0x40032E3C C   FIELD 29w01 PRIV29: PRIV29
0x40032E3C C   FIELD 30w01 PRIV30: PRIV30
0x40032E3C C   FIELD 31w01 PRIV31: PRIV31
0x40032E40 B  REGISTER MPCBB1_PRIVCFGR16 (rw): MPCBB privileged configuration for super-block x register
0x40032E40 C   FIELD 00w01 PRIV0: PRIV0
0x40032E40 C   FIELD 01w01 PRIV1: PRIV1
0x40032E40 C   FIELD 02w01 PRIV2: PRIV2
0x40032E40 C   FIELD 03w01 PRIV3: PRIV3
0x40032E40 C   FIELD 04w01 PRIV4: PRIV4
0x40032E40 C   FIELD 05w01 PRIV5: PRIV5
0x40032E40 C   FIELD 06w01 PRIV6: PRIV6
0x40032E40 C   FIELD 07w01 PRIV7: PRIV7
0x40032E40 C   FIELD 08w01 PRIV8: PRIV8
0x40032E40 C   FIELD 09w01 PRIV9: PRIV9
0x40032E40 C   FIELD 10w01 PRIV10: PRIV10
0x40032E40 C   FIELD 11w01 PRIV11: PRIV11
0x40032E40 C   FIELD 12w01 PRIV12: PRIV12
0x40032E40 C   FIELD 13w01 PRIV13: PRIV13
0x40032E40 C   FIELD 14w01 PRIV14: PRIV14
0x40032E40 C   FIELD 15w01 PRIV15: PRIV15
0x40032E40 C   FIELD 16w01 PRIV16: PRIV16
0x40032E40 C   FIELD 17w01 PRIV17: PRIV17
0x40032E40 C   FIELD 18w01 PRIV18: PRIV18
0x40032E40 C   FIELD 19w01 PRIV19: PRIV19
0x40032E40 C   FIELD 20w01 PRIV20: PRIV20
0x40032E40 C   FIELD 21w01 PRIV21: PRIV21
0x40032E40 C   FIELD 22w01 PRIV22: PRIV22
0x40032E40 C   FIELD 23w01 PRIV23: PRIV23
0x40032E40 C   FIELD 24w01 PRIV24: PRIV24
0x40032E40 C   FIELD 25w01 PRIV25: PRIV25
0x40032E40 C   FIELD 26w01 PRIV26: PRIV26
0x40032E40 C   FIELD 27w01 PRIV27: PRIV27
0x40032E40 C   FIELD 28w01 PRIV28: PRIV28
0x40032E40 C   FIELD 29w01 PRIV29: PRIV29
0x40032E40 C   FIELD 30w01 PRIV30: PRIV30
0x40032E40 C   FIELD 31w01 PRIV31: PRIV31
0x40032E44 B  REGISTER MPCBB1_PRIVCFGR17 (rw): MPCBB privileged configuration for super-block x register
0x40032E44 C   FIELD 00w01 PRIV0: PRIV0
0x40032E44 C   FIELD 01w01 PRIV1: PRIV1
0x40032E44 C   FIELD 02w01 PRIV2: PRIV2
0x40032E44 C   FIELD 03w01 PRIV3: PRIV3
0x40032E44 C   FIELD 04w01 PRIV4: PRIV4
0x40032E44 C   FIELD 05w01 PRIV5: PRIV5
0x40032E44 C   FIELD 06w01 PRIV6: PRIV6
0x40032E44 C   FIELD 07w01 PRIV7: PRIV7
0x40032E44 C   FIELD 08w01 PRIV8: PRIV8
0x40032E44 C   FIELD 09w01 PRIV9: PRIV9
0x40032E44 C   FIELD 10w01 PRIV10: PRIV10
0x40032E44 C   FIELD 11w01 PRIV11: PRIV11
0x40032E44 C   FIELD 12w01 PRIV12: PRIV12
0x40032E44 C   FIELD 13w01 PRIV13: PRIV13
0x40032E44 C   FIELD 14w01 PRIV14: PRIV14
0x40032E44 C   FIELD 15w01 PRIV15: PRIV15
0x40032E44 C   FIELD 16w01 PRIV16: PRIV16
0x40032E44 C   FIELD 17w01 PRIV17: PRIV17
0x40032E44 C   FIELD 18w01 PRIV18: PRIV18
0x40032E44 C   FIELD 19w01 PRIV19: PRIV19
0x40032E44 C   FIELD 20w01 PRIV20: PRIV20
0x40032E44 C   FIELD 21w01 PRIV21: PRIV21
0x40032E44 C   FIELD 22w01 PRIV22: PRIV22
0x40032E44 C   FIELD 23w01 PRIV23: PRIV23
0x40032E44 C   FIELD 24w01 PRIV24: PRIV24
0x40032E44 C   FIELD 25w01 PRIV25: PRIV25
0x40032E44 C   FIELD 26w01 PRIV26: PRIV26
0x40032E44 C   FIELD 27w01 PRIV27: PRIV27
0x40032E44 C   FIELD 28w01 PRIV28: PRIV28
0x40032E44 C   FIELD 29w01 PRIV29: PRIV29
0x40032E44 C   FIELD 30w01 PRIV30: PRIV30
0x40032E44 C   FIELD 31w01 PRIV31: PRIV31
0x40032E48 B  REGISTER MPCBB1_PRIVCFGR18 (rw): MPCBB privileged configuration for super-block x register
0x40032E48 C   FIELD 00w01 PRIV0: PRIV0
0x40032E48 C   FIELD 01w01 PRIV1: PRIV1
0x40032E48 C   FIELD 02w01 PRIV2: PRIV2
0x40032E48 C   FIELD 03w01 PRIV3: PRIV3
0x40032E48 C   FIELD 04w01 PRIV4: PRIV4
0x40032E48 C   FIELD 05w01 PRIV5: PRIV5
0x40032E48 C   FIELD 06w01 PRIV6: PRIV6
0x40032E48 C   FIELD 07w01 PRIV7: PRIV7
0x40032E48 C   FIELD 08w01 PRIV8: PRIV8
0x40032E48 C   FIELD 09w01 PRIV9: PRIV9
0x40032E48 C   FIELD 10w01 PRIV10: PRIV10
0x40032E48 C   FIELD 11w01 PRIV11: PRIV11
0x40032E48 C   FIELD 12w01 PRIV12: PRIV12
0x40032E48 C   FIELD 13w01 PRIV13: PRIV13
0x40032E48 C   FIELD 14w01 PRIV14: PRIV14
0x40032E48 C   FIELD 15w01 PRIV15: PRIV15
0x40032E48 C   FIELD 16w01 PRIV16: PRIV16
0x40032E48 C   FIELD 17w01 PRIV17: PRIV17
0x40032E48 C   FIELD 18w01 PRIV18: PRIV18
0x40032E48 C   FIELD 19w01 PRIV19: PRIV19
0x40032E48 C   FIELD 20w01 PRIV20: PRIV20
0x40032E48 C   FIELD 21w01 PRIV21: PRIV21
0x40032E48 C   FIELD 22w01 PRIV22: PRIV22
0x40032E48 C   FIELD 23w01 PRIV23: PRIV23
0x40032E48 C   FIELD 24w01 PRIV24: PRIV24
0x40032E48 C   FIELD 25w01 PRIV25: PRIV25
0x40032E48 C   FIELD 26w01 PRIV26: PRIV26
0x40032E48 C   FIELD 27w01 PRIV27: PRIV27
0x40032E48 C   FIELD 28w01 PRIV28: PRIV28
0x40032E48 C   FIELD 29w01 PRIV29: PRIV29
0x40032E48 C   FIELD 30w01 PRIV30: PRIV30
0x40032E48 C   FIELD 31w01 PRIV31: PRIV31
0x40032E4C B  REGISTER MPCBB1_PRIVCFGR19 (rw): MPCBB privileged configuration for super-block x register
0x40032E4C C   FIELD 00w01 PRIV0: PRIV0
0x40032E4C C   FIELD 01w01 PRIV1: PRIV1
0x40032E4C C   FIELD 02w01 PRIV2: PRIV2
0x40032E4C C   FIELD 03w01 PRIV3: PRIV3
0x40032E4C C   FIELD 04w01 PRIV4: PRIV4
0x40032E4C C   FIELD 05w01 PRIV5: PRIV5
0x40032E4C C   FIELD 06w01 PRIV6: PRIV6
0x40032E4C C   FIELD 07w01 PRIV7: PRIV7
0x40032E4C C   FIELD 08w01 PRIV8: PRIV8
0x40032E4C C   FIELD 09w01 PRIV9: PRIV9
0x40032E4C C   FIELD 10w01 PRIV10: PRIV10
0x40032E4C C   FIELD 11w01 PRIV11: PRIV11
0x40032E4C C   FIELD 12w01 PRIV12: PRIV12
0x40032E4C C   FIELD 13w01 PRIV13: PRIV13
0x40032E4C C   FIELD 14w01 PRIV14: PRIV14
0x40032E4C C   FIELD 15w01 PRIV15: PRIV15
0x40032E4C C   FIELD 16w01 PRIV16: PRIV16
0x40032E4C C   FIELD 17w01 PRIV17: PRIV17
0x40032E4C C   FIELD 18w01 PRIV18: PRIV18
0x40032E4C C   FIELD 19w01 PRIV19: PRIV19
0x40032E4C C   FIELD 20w01 PRIV20: PRIV20
0x40032E4C C   FIELD 21w01 PRIV21: PRIV21
0x40032E4C C   FIELD 22w01 PRIV22: PRIV22
0x40032E4C C   FIELD 23w01 PRIV23: PRIV23
0x40032E4C C   FIELD 24w01 PRIV24: PRIV24
0x40032E4C C   FIELD 25w01 PRIV25: PRIV25
0x40032E4C C   FIELD 26w01 PRIV26: PRIV26
0x40032E4C C   FIELD 27w01 PRIV27: PRIV27
0x40032E4C C   FIELD 28w01 PRIV28: PRIV28
0x40032E4C C   FIELD 29w01 PRIV29: PRIV29
0x40032E4C C   FIELD 30w01 PRIV30: PRIV30
0x40032E4C C   FIELD 31w01 PRIV31: PRIV31
0x40032E50 B  REGISTER MPCBB1_PRIVCFGR20 (rw): MPCBB privileged configuration for super-block x register
0x40032E50 C   FIELD 00w01 PRIV0: PRIV0
0x40032E50 C   FIELD 01w01 PRIV1: PRIV1
0x40032E50 C   FIELD 02w01 PRIV2: PRIV2
0x40032E50 C   FIELD 03w01 PRIV3: PRIV3
0x40032E50 C   FIELD 04w01 PRIV4: PRIV4
0x40032E50 C   FIELD 05w01 PRIV5: PRIV5
0x40032E50 C   FIELD 06w01 PRIV6: PRIV6
0x40032E50 C   FIELD 07w01 PRIV7: PRIV7
0x40032E50 C   FIELD 08w01 PRIV8: PRIV8
0x40032E50 C   FIELD 09w01 PRIV9: PRIV9
0x40032E50 C   FIELD 10w01 PRIV10: PRIV10
0x40032E50 C   FIELD 11w01 PRIV11: PRIV11
0x40032E50 C   FIELD 12w01 PRIV12: PRIV12
0x40032E50 C   FIELD 13w01 PRIV13: PRIV13
0x40032E50 C   FIELD 14w01 PRIV14: PRIV14
0x40032E50 C   FIELD 15w01 PRIV15: PRIV15
0x40032E50 C   FIELD 16w01 PRIV16: PRIV16
0x40032E50 C   FIELD 17w01 PRIV17: PRIV17
0x40032E50 C   FIELD 18w01 PRIV18: PRIV18
0x40032E50 C   FIELD 19w01 PRIV19: PRIV19
0x40032E50 C   FIELD 20w01 PRIV20: PRIV20
0x40032E50 C   FIELD 21w01 PRIV21: PRIV21
0x40032E50 C   FIELD 22w01 PRIV22: PRIV22
0x40032E50 C   FIELD 23w01 PRIV23: PRIV23
0x40032E50 C   FIELD 24w01 PRIV24: PRIV24
0x40032E50 C   FIELD 25w01 PRIV25: PRIV25
0x40032E50 C   FIELD 26w01 PRIV26: PRIV26
0x40032E50 C   FIELD 27w01 PRIV27: PRIV27
0x40032E50 C   FIELD 28w01 PRIV28: PRIV28
0x40032E50 C   FIELD 29w01 PRIV29: PRIV29
0x40032E50 C   FIELD 30w01 PRIV30: PRIV30
0x40032E50 C   FIELD 31w01 PRIV31: PRIV31
0x40032E54 B  REGISTER MPCBB1_PRIVCFGR21 (rw): MPCBB privileged configuration for super-block x register
0x40032E54 C   FIELD 00w01 PRIV0: PRIV0
0x40032E54 C   FIELD 01w01 PRIV1: PRIV1
0x40032E54 C   FIELD 02w01 PRIV2: PRIV2
0x40032E54 C   FIELD 03w01 PRIV3: PRIV3
0x40032E54 C   FIELD 04w01 PRIV4: PRIV4
0x40032E54 C   FIELD 05w01 PRIV5: PRIV5
0x40032E54 C   FIELD 06w01 PRIV6: PRIV6
0x40032E54 C   FIELD 07w01 PRIV7: PRIV7
0x40032E54 C   FIELD 08w01 PRIV8: PRIV8
0x40032E54 C   FIELD 09w01 PRIV9: PRIV9
0x40032E54 C   FIELD 10w01 PRIV10: PRIV10
0x40032E54 C   FIELD 11w01 PRIV11: PRIV11
0x40032E54 C   FIELD 12w01 PRIV12: PRIV12
0x40032E54 C   FIELD 13w01 PRIV13: PRIV13
0x40032E54 C   FIELD 14w01 PRIV14: PRIV14
0x40032E54 C   FIELD 15w01 PRIV15: PRIV15
0x40032E54 C   FIELD 16w01 PRIV16: PRIV16
0x40032E54 C   FIELD 17w01 PRIV17: PRIV17
0x40032E54 C   FIELD 18w01 PRIV18: PRIV18
0x40032E54 C   FIELD 19w01 PRIV19: PRIV19
0x40032E54 C   FIELD 20w01 PRIV20: PRIV20
0x40032E54 C   FIELD 21w01 PRIV21: PRIV21
0x40032E54 C   FIELD 22w01 PRIV22: PRIV22
0x40032E54 C   FIELD 23w01 PRIV23: PRIV23
0x40032E54 C   FIELD 24w01 PRIV24: PRIV24
0x40032E54 C   FIELD 25w01 PRIV25: PRIV25
0x40032E54 C   FIELD 26w01 PRIV26: PRIV26
0x40032E54 C   FIELD 27w01 PRIV27: PRIV27
0x40032E54 C   FIELD 28w01 PRIV28: PRIV28
0x40032E54 C   FIELD 29w01 PRIV29: PRIV29
0x40032E54 C   FIELD 30w01 PRIV30: PRIV30
0x40032E54 C   FIELD 31w01 PRIV31: PRIV31
0x40032E58 B  REGISTER MPCBB1_PRIVCFGR22 (rw): MPCBB privileged configuration for super-block x register
0x40032E58 C   FIELD 00w01 PRIV0: PRIV0
0x40032E58 C   FIELD 01w01 PRIV1: PRIV1
0x40032E58 C   FIELD 02w01 PRIV2: PRIV2
0x40032E58 C   FIELD 03w01 PRIV3: PRIV3
0x40032E58 C   FIELD 04w01 PRIV4: PRIV4
0x40032E58 C   FIELD 05w01 PRIV5: PRIV5
0x40032E58 C   FIELD 06w01 PRIV6: PRIV6
0x40032E58 C   FIELD 07w01 PRIV7: PRIV7
0x40032E58 C   FIELD 08w01 PRIV8: PRIV8
0x40032E58 C   FIELD 09w01 PRIV9: PRIV9
0x40032E58 C   FIELD 10w01 PRIV10: PRIV10
0x40032E58 C   FIELD 11w01 PRIV11: PRIV11
0x40032E58 C   FIELD 12w01 PRIV12: PRIV12
0x40032E58 C   FIELD 13w01 PRIV13: PRIV13
0x40032E58 C   FIELD 14w01 PRIV14: PRIV14
0x40032E58 C   FIELD 15w01 PRIV15: PRIV15
0x40032E58 C   FIELD 16w01 PRIV16: PRIV16
0x40032E58 C   FIELD 17w01 PRIV17: PRIV17
0x40032E58 C   FIELD 18w01 PRIV18: PRIV18
0x40032E58 C   FIELD 19w01 PRIV19: PRIV19
0x40032E58 C   FIELD 20w01 PRIV20: PRIV20
0x40032E58 C   FIELD 21w01 PRIV21: PRIV21
0x40032E58 C   FIELD 22w01 PRIV22: PRIV22
0x40032E58 C   FIELD 23w01 PRIV23: PRIV23
0x40032E58 C   FIELD 24w01 PRIV24: PRIV24
0x40032E58 C   FIELD 25w01 PRIV25: PRIV25
0x40032E58 C   FIELD 26w01 PRIV26: PRIV26
0x40032E58 C   FIELD 27w01 PRIV27: PRIV27
0x40032E58 C   FIELD 28w01 PRIV28: PRIV28
0x40032E58 C   FIELD 29w01 PRIV29: PRIV29
0x40032E58 C   FIELD 30w01 PRIV30: PRIV30
0x40032E58 C   FIELD 31w01 PRIV31: PRIV31
0x40032E5C B  REGISTER MPCBB1_PRIVCFGR23 (rw): MPCBB privileged configuration for super-block x register
0x40032E5C C   FIELD 00w01 PRIV0: PRIV0
0x40032E5C C   FIELD 01w01 PRIV1: PRIV1
0x40032E5C C   FIELD 02w01 PRIV2: PRIV2
0x40032E5C C   FIELD 03w01 PRIV3: PRIV3
0x40032E5C C   FIELD 04w01 PRIV4: PRIV4
0x40032E5C C   FIELD 05w01 PRIV5: PRIV5
0x40032E5C C   FIELD 06w01 PRIV6: PRIV6
0x40032E5C C   FIELD 07w01 PRIV7: PRIV7
0x40032E5C C   FIELD 08w01 PRIV8: PRIV8
0x40032E5C C   FIELD 09w01 PRIV9: PRIV9
0x40032E5C C   FIELD 10w01 PRIV10: PRIV10
0x40032E5C C   FIELD 11w01 PRIV11: PRIV11
0x40032E5C C   FIELD 12w01 PRIV12: PRIV12
0x40032E5C C   FIELD 13w01 PRIV13: PRIV13
0x40032E5C C   FIELD 14w01 PRIV14: PRIV14
0x40032E5C C   FIELD 15w01 PRIV15: PRIV15
0x40032E5C C   FIELD 16w01 PRIV16: PRIV16
0x40032E5C C   FIELD 17w01 PRIV17: PRIV17
0x40032E5C C   FIELD 18w01 PRIV18: PRIV18
0x40032E5C C   FIELD 19w01 PRIV19: PRIV19
0x40032E5C C   FIELD 20w01 PRIV20: PRIV20
0x40032E5C C   FIELD 21w01 PRIV21: PRIV21
0x40032E5C C   FIELD 22w01 PRIV22: PRIV22
0x40032E5C C   FIELD 23w01 PRIV23: PRIV23
0x40032E5C C   FIELD 24w01 PRIV24: PRIV24
0x40032E5C C   FIELD 25w01 PRIV25: PRIV25
0x40032E5C C   FIELD 26w01 PRIV26: PRIV26
0x40032E5C C   FIELD 27w01 PRIV27: PRIV27
0x40032E5C C   FIELD 28w01 PRIV28: PRIV28
0x40032E5C C   FIELD 29w01 PRIV29: PRIV29
0x40032E5C C   FIELD 30w01 PRIV30: PRIV30
0x40032E5C C   FIELD 31w01 PRIV31: PRIV31
0x40032E60 B  REGISTER MPCBB1_PRIVCFGR24 (rw): MPCBB privileged configuration for super-block x register
0x40032E60 C   FIELD 00w01 PRIV0: PRIV0
0x40032E60 C   FIELD 01w01 PRIV1: PRIV1
0x40032E60 C   FIELD 02w01 PRIV2: PRIV2
0x40032E60 C   FIELD 03w01 PRIV3: PRIV3
0x40032E60 C   FIELD 04w01 PRIV4: PRIV4
0x40032E60 C   FIELD 05w01 PRIV5: PRIV5
0x40032E60 C   FIELD 06w01 PRIV6: PRIV6
0x40032E60 C   FIELD 07w01 PRIV7: PRIV7
0x40032E60 C   FIELD 08w01 PRIV8: PRIV8
0x40032E60 C   FIELD 09w01 PRIV9: PRIV9
0x40032E60 C   FIELD 10w01 PRIV10: PRIV10
0x40032E60 C   FIELD 11w01 PRIV11: PRIV11
0x40032E60 C   FIELD 12w01 PRIV12: PRIV12
0x40032E60 C   FIELD 13w01 PRIV13: PRIV13
0x40032E60 C   FIELD 14w01 PRIV14: PRIV14
0x40032E60 C   FIELD 15w01 PRIV15: PRIV15
0x40032E60 C   FIELD 16w01 PRIV16: PRIV16
0x40032E60 C   FIELD 17w01 PRIV17: PRIV17
0x40032E60 C   FIELD 18w01 PRIV18: PRIV18
0x40032E60 C   FIELD 19w01 PRIV19: PRIV19
0x40032E60 C   FIELD 20w01 PRIV20: PRIV20
0x40032E60 C   FIELD 21w01 PRIV21: PRIV21
0x40032E60 C   FIELD 22w01 PRIV22: PRIV22
0x40032E60 C   FIELD 23w01 PRIV23: PRIV23
0x40032E60 C   FIELD 24w01 PRIV24: PRIV24
0x40032E60 C   FIELD 25w01 PRIV25: PRIV25
0x40032E60 C   FIELD 26w01 PRIV26: PRIV26
0x40032E60 C   FIELD 27w01 PRIV27: PRIV27
0x40032E60 C   FIELD 28w01 PRIV28: PRIV28
0x40032E60 C   FIELD 29w01 PRIV29: PRIV29
0x40032E60 C   FIELD 30w01 PRIV30: PRIV30
0x40032E60 C   FIELD 31w01 PRIV31: PRIV31
0x40032E64 B  REGISTER MPCBB1_PRIVCFGR25 (rw): MPCBB privileged configuration for super-block x register
0x40032E64 C   FIELD 00w01 PRIV0: PRIV0
0x40032E64 C   FIELD 01w01 PRIV1: PRIV1
0x40032E64 C   FIELD 02w01 PRIV2: PRIV2
0x40032E64 C   FIELD 03w01 PRIV3: PRIV3
0x40032E64 C   FIELD 04w01 PRIV4: PRIV4
0x40032E64 C   FIELD 05w01 PRIV5: PRIV5
0x40032E64 C   FIELD 06w01 PRIV6: PRIV6
0x40032E64 C   FIELD 07w01 PRIV7: PRIV7
0x40032E64 C   FIELD 08w01 PRIV8: PRIV8
0x40032E64 C   FIELD 09w01 PRIV9: PRIV9
0x40032E64 C   FIELD 10w01 PRIV10: PRIV10
0x40032E64 C   FIELD 11w01 PRIV11: PRIV11
0x40032E64 C   FIELD 12w01 PRIV12: PRIV12
0x40032E64 C   FIELD 13w01 PRIV13: PRIV13
0x40032E64 C   FIELD 14w01 PRIV14: PRIV14
0x40032E64 C   FIELD 15w01 PRIV15: PRIV15
0x40032E64 C   FIELD 16w01 PRIV16: PRIV16
0x40032E64 C   FIELD 17w01 PRIV17: PRIV17
0x40032E64 C   FIELD 18w01 PRIV18: PRIV18
0x40032E64 C   FIELD 19w01 PRIV19: PRIV19
0x40032E64 C   FIELD 20w01 PRIV20: PRIV20
0x40032E64 C   FIELD 21w01 PRIV21: PRIV21
0x40032E64 C   FIELD 22w01 PRIV22: PRIV22
0x40032E64 C   FIELD 23w01 PRIV23: PRIV23
0x40032E64 C   FIELD 24w01 PRIV24: PRIV24
0x40032E64 C   FIELD 25w01 PRIV25: PRIV25
0x40032E64 C   FIELD 26w01 PRIV26: PRIV26
0x40032E64 C   FIELD 27w01 PRIV27: PRIV27
0x40032E64 C   FIELD 28w01 PRIV28: PRIV28
0x40032E64 C   FIELD 29w01 PRIV29: PRIV29
0x40032E64 C   FIELD 30w01 PRIV30: PRIV30
0x40032E64 C   FIELD 31w01 PRIV31: PRIV31
0x40032E68 B  REGISTER MPCBB1_PRIVCFGR26 (rw): MPCBB privileged configuration for super-block x register
0x40032E68 C   FIELD 00w01 PRIV0: PRIV0
0x40032E68 C   FIELD 01w01 PRIV1: PRIV1
0x40032E68 C   FIELD 02w01 PRIV2: PRIV2
0x40032E68 C   FIELD 03w01 PRIV3: PRIV3
0x40032E68 C   FIELD 04w01 PRIV4: PRIV4
0x40032E68 C   FIELD 05w01 PRIV5: PRIV5
0x40032E68 C   FIELD 06w01 PRIV6: PRIV6
0x40032E68 C   FIELD 07w01 PRIV7: PRIV7
0x40032E68 C   FIELD 08w01 PRIV8: PRIV8
0x40032E68 C   FIELD 09w01 PRIV9: PRIV9
0x40032E68 C   FIELD 10w01 PRIV10: PRIV10
0x40032E68 C   FIELD 11w01 PRIV11: PRIV11
0x40032E68 C   FIELD 12w01 PRIV12: PRIV12
0x40032E68 C   FIELD 13w01 PRIV13: PRIV13
0x40032E68 C   FIELD 14w01 PRIV14: PRIV14
0x40032E68 C   FIELD 15w01 PRIV15: PRIV15
0x40032E68 C   FIELD 16w01 PRIV16: PRIV16
0x40032E68 C   FIELD 17w01 PRIV17: PRIV17
0x40032E68 C   FIELD 18w01 PRIV18: PRIV18
0x40032E68 C   FIELD 19w01 PRIV19: PRIV19
0x40032E68 C   FIELD 20w01 PRIV20: PRIV20
0x40032E68 C   FIELD 21w01 PRIV21: PRIV21
0x40032E68 C   FIELD 22w01 PRIV22: PRIV22
0x40032E68 C   FIELD 23w01 PRIV23: PRIV23
0x40032E68 C   FIELD 24w01 PRIV24: PRIV24
0x40032E68 C   FIELD 25w01 PRIV25: PRIV25
0x40032E68 C   FIELD 26w01 PRIV26: PRIV26
0x40032E68 C   FIELD 27w01 PRIV27: PRIV27
0x40032E68 C   FIELD 28w01 PRIV28: PRIV28
0x40032E68 C   FIELD 29w01 PRIV29: PRIV29
0x40032E68 C   FIELD 30w01 PRIV30: PRIV30
0x40032E68 C   FIELD 31w01 PRIV31: PRIV31
0x40032E6C B  REGISTER MPCBB1_PRIVCFGR27 (rw): MPCBB privileged configuration for super-block x register
0x40032E6C C   FIELD 00w01 PRIV0: PRIV0
0x40032E6C C   FIELD 01w01 PRIV1: PRIV1
0x40032E6C C   FIELD 02w01 PRIV2: PRIV2
0x40032E6C C   FIELD 03w01 PRIV3: PRIV3
0x40032E6C C   FIELD 04w01 PRIV4: PRIV4
0x40032E6C C   FIELD 05w01 PRIV5: PRIV5
0x40032E6C C   FIELD 06w01 PRIV6: PRIV6
0x40032E6C C   FIELD 07w01 PRIV7: PRIV7
0x40032E6C C   FIELD 08w01 PRIV8: PRIV8
0x40032E6C C   FIELD 09w01 PRIV9: PRIV9
0x40032E6C C   FIELD 10w01 PRIV10: PRIV10
0x40032E6C C   FIELD 11w01 PRIV11: PRIV11
0x40032E6C C   FIELD 12w01 PRIV12: PRIV12
0x40032E6C C   FIELD 13w01 PRIV13: PRIV13
0x40032E6C C   FIELD 14w01 PRIV14: PRIV14
0x40032E6C C   FIELD 15w01 PRIV15: PRIV15
0x40032E6C C   FIELD 16w01 PRIV16: PRIV16
0x40032E6C C   FIELD 17w01 PRIV17: PRIV17
0x40032E6C C   FIELD 18w01 PRIV18: PRIV18
0x40032E6C C   FIELD 19w01 PRIV19: PRIV19
0x40032E6C C   FIELD 20w01 PRIV20: PRIV20
0x40032E6C C   FIELD 21w01 PRIV21: PRIV21
0x40032E6C C   FIELD 22w01 PRIV22: PRIV22
0x40032E6C C   FIELD 23w01 PRIV23: PRIV23
0x40032E6C C   FIELD 24w01 PRIV24: PRIV24
0x40032E6C C   FIELD 25w01 PRIV25: PRIV25
0x40032E6C C   FIELD 26w01 PRIV26: PRIV26
0x40032E6C C   FIELD 27w01 PRIV27: PRIV27
0x40032E6C C   FIELD 28w01 PRIV28: PRIV28
0x40032E6C C   FIELD 29w01 PRIV29: PRIV29
0x40032E6C C   FIELD 30w01 PRIV30: PRIV30
0x40032E6C C   FIELD 31w01 PRIV31: PRIV31
0x40032E70 B  REGISTER MPCBB1_PRIVCFGR28 (rw): MPCBB privileged configuration for super-block x register
0x40032E70 C   FIELD 00w01 PRIV0: PRIV0
0x40032E70 C   FIELD 01w01 PRIV1: PRIV1
0x40032E70 C   FIELD 02w01 PRIV2: PRIV2
0x40032E70 C   FIELD 03w01 PRIV3: PRIV3
0x40032E70 C   FIELD 04w01 PRIV4: PRIV4
0x40032E70 C   FIELD 05w01 PRIV5: PRIV5
0x40032E70 C   FIELD 06w01 PRIV6: PRIV6
0x40032E70 C   FIELD 07w01 PRIV7: PRIV7
0x40032E70 C   FIELD 08w01 PRIV8: PRIV8
0x40032E70 C   FIELD 09w01 PRIV9: PRIV9
0x40032E70 C   FIELD 10w01 PRIV10: PRIV10
0x40032E70 C   FIELD 11w01 PRIV11: PRIV11
0x40032E70 C   FIELD 12w01 PRIV12: PRIV12
0x40032E70 C   FIELD 13w01 PRIV13: PRIV13
0x40032E70 C   FIELD 14w01 PRIV14: PRIV14
0x40032E70 C   FIELD 15w01 PRIV15: PRIV15
0x40032E70 C   FIELD 16w01 PRIV16: PRIV16
0x40032E70 C   FIELD 17w01 PRIV17: PRIV17
0x40032E70 C   FIELD 18w01 PRIV18: PRIV18
0x40032E70 C   FIELD 19w01 PRIV19: PRIV19
0x40032E70 C   FIELD 20w01 PRIV20: PRIV20
0x40032E70 C   FIELD 21w01 PRIV21: PRIV21
0x40032E70 C   FIELD 22w01 PRIV22: PRIV22
0x40032E70 C   FIELD 23w01 PRIV23: PRIV23
0x40032E70 C   FIELD 24w01 PRIV24: PRIV24
0x40032E70 C   FIELD 25w01 PRIV25: PRIV25
0x40032E70 C   FIELD 26w01 PRIV26: PRIV26
0x40032E70 C   FIELD 27w01 PRIV27: PRIV27
0x40032E70 C   FIELD 28w01 PRIV28: PRIV28
0x40032E70 C   FIELD 29w01 PRIV29: PRIV29
0x40032E70 C   FIELD 30w01 PRIV30: PRIV30
0x40032E70 C   FIELD 31w01 PRIV31: PRIV31
0x40032E74 B  REGISTER MPCBB1_PRIVCFGR29 (rw): MPCBB privileged configuration for super-block x register
0x40032E74 C   FIELD 00w01 PRIV0: PRIV0
0x40032E74 C   FIELD 01w01 PRIV1: PRIV1
0x40032E74 C   FIELD 02w01 PRIV2: PRIV2
0x40032E74 C   FIELD 03w01 PRIV3: PRIV3
0x40032E74 C   FIELD 04w01 PRIV4: PRIV4
0x40032E74 C   FIELD 05w01 PRIV5: PRIV5
0x40032E74 C   FIELD 06w01 PRIV6: PRIV6
0x40032E74 C   FIELD 07w01 PRIV7: PRIV7
0x40032E74 C   FIELD 08w01 PRIV8: PRIV8
0x40032E74 C   FIELD 09w01 PRIV9: PRIV9
0x40032E74 C   FIELD 10w01 PRIV10: PRIV10
0x40032E74 C   FIELD 11w01 PRIV11: PRIV11
0x40032E74 C   FIELD 12w01 PRIV12: PRIV12
0x40032E74 C   FIELD 13w01 PRIV13: PRIV13
0x40032E74 C   FIELD 14w01 PRIV14: PRIV14
0x40032E74 C   FIELD 15w01 PRIV15: PRIV15
0x40032E74 C   FIELD 16w01 PRIV16: PRIV16
0x40032E74 C   FIELD 17w01 PRIV17: PRIV17
0x40032E74 C   FIELD 18w01 PRIV18: PRIV18
0x40032E74 C   FIELD 19w01 PRIV19: PRIV19
0x40032E74 C   FIELD 20w01 PRIV20: PRIV20
0x40032E74 C   FIELD 21w01 PRIV21: PRIV21
0x40032E74 C   FIELD 22w01 PRIV22: PRIV22
0x40032E74 C   FIELD 23w01 PRIV23: PRIV23
0x40032E74 C   FIELD 24w01 PRIV24: PRIV24
0x40032E74 C   FIELD 25w01 PRIV25: PRIV25
0x40032E74 C   FIELD 26w01 PRIV26: PRIV26
0x40032E74 C   FIELD 27w01 PRIV27: PRIV27
0x40032E74 C   FIELD 28w01 PRIV28: PRIV28
0x40032E74 C   FIELD 29w01 PRIV29: PRIV29
0x40032E74 C   FIELD 30w01 PRIV30: PRIV30
0x40032E74 C   FIELD 31w01 PRIV31: PRIV31
0x40032E78 B  REGISTER MPCBB1_PRIVCFGR30 (rw): MPCBB privileged configuration for super-block x register
0x40032E78 C   FIELD 00w01 PRIV0: PRIV0
0x40032E78 C   FIELD 01w01 PRIV1: PRIV1
0x40032E78 C   FIELD 02w01 PRIV2: PRIV2
0x40032E78 C   FIELD 03w01 PRIV3: PRIV3
0x40032E78 C   FIELD 04w01 PRIV4: PRIV4
0x40032E78 C   FIELD 05w01 PRIV5: PRIV5
0x40032E78 C   FIELD 06w01 PRIV6: PRIV6
0x40032E78 C   FIELD 07w01 PRIV7: PRIV7
0x40032E78 C   FIELD 08w01 PRIV8: PRIV8
0x40032E78 C   FIELD 09w01 PRIV9: PRIV9
0x40032E78 C   FIELD 10w01 PRIV10: PRIV10
0x40032E78 C   FIELD 11w01 PRIV11: PRIV11
0x40032E78 C   FIELD 12w01 PRIV12: PRIV12
0x40032E78 C   FIELD 13w01 PRIV13: PRIV13
0x40032E78 C   FIELD 14w01 PRIV14: PRIV14
0x40032E78 C   FIELD 15w01 PRIV15: PRIV15
0x40032E78 C   FIELD 16w01 PRIV16: PRIV16
0x40032E78 C   FIELD 17w01 PRIV17: PRIV17
0x40032E78 C   FIELD 18w01 PRIV18: PRIV18
0x40032E78 C   FIELD 19w01 PRIV19: PRIV19
0x40032E78 C   FIELD 20w01 PRIV20: PRIV20
0x40032E78 C   FIELD 21w01 PRIV21: PRIV21
0x40032E78 C   FIELD 22w01 PRIV22: PRIV22
0x40032E78 C   FIELD 23w01 PRIV23: PRIV23
0x40032E78 C   FIELD 24w01 PRIV24: PRIV24
0x40032E78 C   FIELD 25w01 PRIV25: PRIV25
0x40032E78 C   FIELD 26w01 PRIV26: PRIV26
0x40032E78 C   FIELD 27w01 PRIV27: PRIV27
0x40032E78 C   FIELD 28w01 PRIV28: PRIV28
0x40032E78 C   FIELD 29w01 PRIV29: PRIV29
0x40032E78 C   FIELD 30w01 PRIV30: PRIV30
0x40032E78 C   FIELD 31w01 PRIV31: PRIV31
0x40032E7C B  REGISTER MPCBB1_PRIVCFGR31 (rw): MPCBB privileged configuration for super-block x register
0x40032E7C C   FIELD 00w01 PRIV0: PRIV0
0x40032E7C C   FIELD 01w01 PRIV1: PRIV1
0x40032E7C C   FIELD 02w01 PRIV2: PRIV2
0x40032E7C C   FIELD 03w01 PRIV3: PRIV3
0x40032E7C C   FIELD 04w01 PRIV4: PRIV4
0x40032E7C C   FIELD 05w01 PRIV5: PRIV5
0x40032E7C C   FIELD 06w01 PRIV6: PRIV6
0x40032E7C C   FIELD 07w01 PRIV7: PRIV7
0x40032E7C C   FIELD 08w01 PRIV8: PRIV8
0x40032E7C C   FIELD 09w01 PRIV9: PRIV9
0x40032E7C C   FIELD 10w01 PRIV10: PRIV10
0x40032E7C C   FIELD 11w01 PRIV11: PRIV11
0x40032E7C C   FIELD 12w01 PRIV12: PRIV12
0x40032E7C C   FIELD 13w01 PRIV13: PRIV13
0x40032E7C C   FIELD 14w01 PRIV14: PRIV14
0x40032E7C C   FIELD 15w01 PRIV15: PRIV15
0x40032E7C C   FIELD 16w01 PRIV16: PRIV16
0x40032E7C C   FIELD 17w01 PRIV17: PRIV17
0x40032E7C C   FIELD 18w01 PRIV18: PRIV18
0x40032E7C C   FIELD 19w01 PRIV19: PRIV19
0x40032E7C C   FIELD 20w01 PRIV20: PRIV20
0x40032E7C C   FIELD 21w01 PRIV21: PRIV21
0x40032E7C C   FIELD 22w01 PRIV22: PRIV22
0x40032E7C C   FIELD 23w01 PRIV23: PRIV23
0x40032E7C C   FIELD 24w01 PRIV24: PRIV24
0x40032E7C C   FIELD 25w01 PRIV25: PRIV25
0x40032E7C C   FIELD 26w01 PRIV26: PRIV26
0x40032E7C C   FIELD 27w01 PRIV27: PRIV27
0x40032E7C C   FIELD 28w01 PRIV28: PRIV28
0x40032E7C C   FIELD 29w01 PRIV29: PRIV29
0x40032E7C C   FIELD 30w01 PRIV30: PRIV30
0x40032E7C C   FIELD 31w01 PRIV31: PRIV31
0x40033000 A PERIPHERAL GTZC1_MPCBB2
0x40033000 B  REGISTER MPCBB2_CR (rw): MPCBB control register
0x40033000 C   FIELD 00w01 GLOCK: lock the control register of the MPCBB until next reset
0x40033000 C   FIELD 30w01 INVSECSTATE: SRAMx clocks security state
0x40033000 C   FIELD 31w01 SRWILADIS: secure read/write illegal access disable
0x40033010 B  REGISTER MPCBB2_CFGLOCKR1 (rw): GTZC1 SRAMz MPCBB configuration lock register
0x40033010 C   FIELD 00w01 SPLCK0: SPLCK0
0x40033010 C   FIELD 01w01 SPLCK1: SPLCK1
0x40033010 C   FIELD 02w01 SPLCK2: SPLCK2
0x40033010 C   FIELD 03w01 SPLCK3: SPLCK3
0x40033010 C   FIELD 04w01 SPLCK4: SPLCK4
0x40033010 C   FIELD 05w01 SPLCK5: SPLCK5
0x40033010 C   FIELD 06w01 SPLCK6: SPLCK6
0x40033010 C   FIELD 07w01 SPLCK7: SPLCK7
0x40033010 C   FIELD 08w01 SPLCK8: SPLCK8
0x40033010 C   FIELD 09w01 SPLCK9: SPLCK9
0x40033010 C   FIELD 10w01 SPLCK10: SPLCK10
0x40033010 C   FIELD 11w01 SPLCK11: SPLCK11
0x40033010 C   FIELD 12w01 SPLCK12: SPLCK12
0x40033010 C   FIELD 13w01 SPLCK13: SPLCK13
0x40033010 C   FIELD 14w01 SPLCK14: SPLCK14
0x40033010 C   FIELD 15w01 SPLCK15: SPLCK15
0x40033010 C   FIELD 16w01 SPLCK16: SPLCK16
0x40033010 C   FIELD 17w01 SPLCK17: SPLCK17
0x40033010 C   FIELD 18w01 SPLCK18: SPLCK18
0x40033010 C   FIELD 19w01 SPLCK19: SPLCK19
0x40033010 C   FIELD 20w01 SPLCK20: SPLCK20
0x40033010 C   FIELD 21w01 SPLCK21: SPLCK21
0x40033010 C   FIELD 22w01 SPLCK22: SPLCK22
0x40033010 C   FIELD 23w01 SPLCK23: SPLCK23
0x40033010 C   FIELD 24w01 SPLCK24: SPLCK24
0x40033010 C   FIELD 25w01 SPLCK25: SPLCK25
0x40033010 C   FIELD 26w01 SPLCK26: SPLCK26
0x40033010 C   FIELD 27w01 SPLCK27: SPLCK27
0x40033010 C   FIELD 28w01 SPLCK28: SPLCK28
0x40033010 C   FIELD 29w01 SPLCK29: SPLCK29
0x40033010 C   FIELD 30w01 SPLCK30: SPLCK30
0x40033010 C   FIELD 31w01 SPLCK31: SPLCK31
0x40033100 B  REGISTER MPCBB2_SECCFGR0 (rw): MPCBBx security configuration for super-block x register
0x40033100 C   FIELD 00w01 SEC0: SEC0
0x40033100 C   FIELD 01w01 SEC1: SEC1
0x40033100 C   FIELD 02w01 SEC2: SEC2
0x40033100 C   FIELD 03w01 SEC3: SEC3
0x40033100 C   FIELD 04w01 SEC4: SEC4
0x40033100 C   FIELD 05w01 SEC5: SEC5
0x40033100 C   FIELD 06w01 SEC6: SEC6
0x40033100 C   FIELD 07w01 SEC7: SEC7
0x40033100 C   FIELD 08w01 SEC8: SEC8
0x40033100 C   FIELD 09w01 SEC9: SEC9
0x40033100 C   FIELD 10w01 SEC10: SEC10
0x40033100 C   FIELD 11w01 SEC11: SEC11
0x40033100 C   FIELD 12w01 SEC12: SEC12
0x40033100 C   FIELD 13w01 SEC13: SEC13
0x40033100 C   FIELD 14w01 SEC14: SEC14
0x40033100 C   FIELD 15w01 SEC15: SEC15
0x40033100 C   FIELD 16w01 SEC16: SEC16
0x40033100 C   FIELD 17w01 SEC17: SEC17
0x40033100 C   FIELD 18w01 SEC18: SEC18
0x40033100 C   FIELD 19w01 SEC19: SEC19
0x40033100 C   FIELD 20w01 SEC20: SEC20
0x40033100 C   FIELD 21w01 SEC21: SEC21
0x40033100 C   FIELD 22w01 SEC22: SEC22
0x40033100 C   FIELD 23w01 SEC23: SEC23
0x40033100 C   FIELD 24w01 SEC24: SEC24
0x40033100 C   FIELD 25w01 SEC25: SEC25
0x40033100 C   FIELD 26w01 SEC26: SEC26
0x40033100 C   FIELD 27w01 SEC27: SEC27
0x40033100 C   FIELD 28w01 SEC28: SEC28
0x40033100 C   FIELD 29w01 SEC29: SEC29
0x40033100 C   FIELD 30w01 SEC30: SEC30
0x40033100 C   FIELD 31w01 SEC31: SEC31
0x40033104 B  REGISTER MPCBB2_SECCFGR1 (rw): MPCBBx security configuration for super-block x register
0x40033104 C   FIELD 00w01 SEC0: SEC0
0x40033104 C   FIELD 01w01 SEC1: SEC1
0x40033104 C   FIELD 02w01 SEC2: SEC2
0x40033104 C   FIELD 03w01 SEC3: SEC3
0x40033104 C   FIELD 04w01 SEC4: SEC4
0x40033104 C   FIELD 05w01 SEC5: SEC5
0x40033104 C   FIELD 06w01 SEC6: SEC6
0x40033104 C   FIELD 07w01 SEC7: SEC7
0x40033104 C   FIELD 08w01 SEC8: SEC8
0x40033104 C   FIELD 09w01 SEC9: SEC9
0x40033104 C   FIELD 10w01 SEC10: SEC10
0x40033104 C   FIELD 11w01 SEC11: SEC11
0x40033104 C   FIELD 12w01 SEC12: SEC12
0x40033104 C   FIELD 13w01 SEC13: SEC13
0x40033104 C   FIELD 14w01 SEC14: SEC14
0x40033104 C   FIELD 15w01 SEC15: SEC15
0x40033104 C   FIELD 16w01 SEC16: SEC16
0x40033104 C   FIELD 17w01 SEC17: SEC17
0x40033104 C   FIELD 18w01 SEC18: SEC18
0x40033104 C   FIELD 19w01 SEC19: SEC19
0x40033104 C   FIELD 20w01 SEC20: SEC20
0x40033104 C   FIELD 21w01 SEC21: SEC21
0x40033104 C   FIELD 22w01 SEC22: SEC22
0x40033104 C   FIELD 23w01 SEC23: SEC23
0x40033104 C   FIELD 24w01 SEC24: SEC24
0x40033104 C   FIELD 25w01 SEC25: SEC25
0x40033104 C   FIELD 26w01 SEC26: SEC26
0x40033104 C   FIELD 27w01 SEC27: SEC27
0x40033104 C   FIELD 28w01 SEC28: SEC28
0x40033104 C   FIELD 29w01 SEC29: SEC29
0x40033104 C   FIELD 30w01 SEC30: SEC30
0x40033104 C   FIELD 31w01 SEC31: SEC31
0x40033108 B  REGISTER MPCBB2_SECCFGR2 (rw): MPCBBx security configuration for super-block x register
0x40033108 C   FIELD 00w01 SEC0: SEC0
0x40033108 C   FIELD 01w01 SEC1: SEC1
0x40033108 C   FIELD 02w01 SEC2: SEC2
0x40033108 C   FIELD 03w01 SEC3: SEC3
0x40033108 C   FIELD 04w01 SEC4: SEC4
0x40033108 C   FIELD 05w01 SEC5: SEC5
0x40033108 C   FIELD 06w01 SEC6: SEC6
0x40033108 C   FIELD 07w01 SEC7: SEC7
0x40033108 C   FIELD 08w01 SEC8: SEC8
0x40033108 C   FIELD 09w01 SEC9: SEC9
0x40033108 C   FIELD 10w01 SEC10: SEC10
0x40033108 C   FIELD 11w01 SEC11: SEC11
0x40033108 C   FIELD 12w01 SEC12: SEC12
0x40033108 C   FIELD 13w01 SEC13: SEC13
0x40033108 C   FIELD 14w01 SEC14: SEC14
0x40033108 C   FIELD 15w01 SEC15: SEC15
0x40033108 C   FIELD 16w01 SEC16: SEC16
0x40033108 C   FIELD 17w01 SEC17: SEC17
0x40033108 C   FIELD 18w01 SEC18: SEC18
0x40033108 C   FIELD 19w01 SEC19: SEC19
0x40033108 C   FIELD 20w01 SEC20: SEC20
0x40033108 C   FIELD 21w01 SEC21: SEC21
0x40033108 C   FIELD 22w01 SEC22: SEC22
0x40033108 C   FIELD 23w01 SEC23: SEC23
0x40033108 C   FIELD 24w01 SEC24: SEC24
0x40033108 C   FIELD 25w01 SEC25: SEC25
0x40033108 C   FIELD 26w01 SEC26: SEC26
0x40033108 C   FIELD 27w01 SEC27: SEC27
0x40033108 C   FIELD 28w01 SEC28: SEC28
0x40033108 C   FIELD 29w01 SEC29: SEC29
0x40033108 C   FIELD 30w01 SEC30: SEC30
0x40033108 C   FIELD 31w01 SEC31: SEC31
0x4003310C B  REGISTER MPCBB2_SECCFGR3 (rw): MPCBBx security configuration for super-block x register
0x4003310C C   FIELD 00w01 SEC0: SEC0
0x4003310C C   FIELD 01w01 SEC1: SEC1
0x4003310C C   FIELD 02w01 SEC2: SEC2
0x4003310C C   FIELD 03w01 SEC3: SEC3
0x4003310C C   FIELD 04w01 SEC4: SEC4
0x4003310C C   FIELD 05w01 SEC5: SEC5
0x4003310C C   FIELD 06w01 SEC6: SEC6
0x4003310C C   FIELD 07w01 SEC7: SEC7
0x4003310C C   FIELD 08w01 SEC8: SEC8
0x4003310C C   FIELD 09w01 SEC9: SEC9
0x4003310C C   FIELD 10w01 SEC10: SEC10
0x4003310C C   FIELD 11w01 SEC11: SEC11
0x4003310C C   FIELD 12w01 SEC12: SEC12
0x4003310C C   FIELD 13w01 SEC13: SEC13
0x4003310C C   FIELD 14w01 SEC14: SEC14
0x4003310C C   FIELD 15w01 SEC15: SEC15
0x4003310C C   FIELD 16w01 SEC16: SEC16
0x4003310C C   FIELD 17w01 SEC17: SEC17
0x4003310C C   FIELD 18w01 SEC18: SEC18
0x4003310C C   FIELD 19w01 SEC19: SEC19
0x4003310C C   FIELD 20w01 SEC20: SEC20
0x4003310C C   FIELD 21w01 SEC21: SEC21
0x4003310C C   FIELD 22w01 SEC22: SEC22
0x4003310C C   FIELD 23w01 SEC23: SEC23
0x4003310C C   FIELD 24w01 SEC24: SEC24
0x4003310C C   FIELD 25w01 SEC25: SEC25
0x4003310C C   FIELD 26w01 SEC26: SEC26
0x4003310C C   FIELD 27w01 SEC27: SEC27
0x4003310C C   FIELD 28w01 SEC28: SEC28
0x4003310C C   FIELD 29w01 SEC29: SEC29
0x4003310C C   FIELD 30w01 SEC30: SEC30
0x4003310C C   FIELD 31w01 SEC31: SEC31
0x40033110 B  REGISTER MPCBB2_SECCFGR4 (rw): MPCBBx security configuration for super-block x register
0x40033110 C   FIELD 00w01 SEC0: SEC0
0x40033110 C   FIELD 01w01 SEC1: SEC1
0x40033110 C   FIELD 02w01 SEC2: SEC2
0x40033110 C   FIELD 03w01 SEC3: SEC3
0x40033110 C   FIELD 04w01 SEC4: SEC4
0x40033110 C   FIELD 05w01 SEC5: SEC5
0x40033110 C   FIELD 06w01 SEC6: SEC6
0x40033110 C   FIELD 07w01 SEC7: SEC7
0x40033110 C   FIELD 08w01 SEC8: SEC8
0x40033110 C   FIELD 09w01 SEC9: SEC9
0x40033110 C   FIELD 10w01 SEC10: SEC10
0x40033110 C   FIELD 11w01 SEC11: SEC11
0x40033110 C   FIELD 12w01 SEC12: SEC12
0x40033110 C   FIELD 13w01 SEC13: SEC13
0x40033110 C   FIELD 14w01 SEC14: SEC14
0x40033110 C   FIELD 15w01 SEC15: SEC15
0x40033110 C   FIELD 16w01 SEC16: SEC16
0x40033110 C   FIELD 17w01 SEC17: SEC17
0x40033110 C   FIELD 18w01 SEC18: SEC18
0x40033110 C   FIELD 19w01 SEC19: SEC19
0x40033110 C   FIELD 20w01 SEC20: SEC20
0x40033110 C   FIELD 21w01 SEC21: SEC21
0x40033110 C   FIELD 22w01 SEC22: SEC22
0x40033110 C   FIELD 23w01 SEC23: SEC23
0x40033110 C   FIELD 24w01 SEC24: SEC24
0x40033110 C   FIELD 25w01 SEC25: SEC25
0x40033110 C   FIELD 26w01 SEC26: SEC26
0x40033110 C   FIELD 27w01 SEC27: SEC27
0x40033110 C   FIELD 28w01 SEC28: SEC28
0x40033110 C   FIELD 29w01 SEC29: SEC29
0x40033110 C   FIELD 30w01 SEC30: SEC30
0x40033110 C   FIELD 31w01 SEC31: SEC31
0x40033114 B  REGISTER MPCBB2_SECCFGR5 (rw): MPCBBx security configuration for super-block x register
0x40033114 C   FIELD 00w01 SEC0: SEC0
0x40033114 C   FIELD 01w01 SEC1: SEC1
0x40033114 C   FIELD 02w01 SEC2: SEC2
0x40033114 C   FIELD 03w01 SEC3: SEC3
0x40033114 C   FIELD 04w01 SEC4: SEC4
0x40033114 C   FIELD 05w01 SEC5: SEC5
0x40033114 C   FIELD 06w01 SEC6: SEC6
0x40033114 C   FIELD 07w01 SEC7: SEC7
0x40033114 C   FIELD 08w01 SEC8: SEC8
0x40033114 C   FIELD 09w01 SEC9: SEC9
0x40033114 C   FIELD 10w01 SEC10: SEC10
0x40033114 C   FIELD 11w01 SEC11: SEC11
0x40033114 C   FIELD 12w01 SEC12: SEC12
0x40033114 C   FIELD 13w01 SEC13: SEC13
0x40033114 C   FIELD 14w01 SEC14: SEC14
0x40033114 C   FIELD 15w01 SEC15: SEC15
0x40033114 C   FIELD 16w01 SEC16: SEC16
0x40033114 C   FIELD 17w01 SEC17: SEC17
0x40033114 C   FIELD 18w01 SEC18: SEC18
0x40033114 C   FIELD 19w01 SEC19: SEC19
0x40033114 C   FIELD 20w01 SEC20: SEC20
0x40033114 C   FIELD 21w01 SEC21: SEC21
0x40033114 C   FIELD 22w01 SEC22: SEC22
0x40033114 C   FIELD 23w01 SEC23: SEC23
0x40033114 C   FIELD 24w01 SEC24: SEC24
0x40033114 C   FIELD 25w01 SEC25: SEC25
0x40033114 C   FIELD 26w01 SEC26: SEC26
0x40033114 C   FIELD 27w01 SEC27: SEC27
0x40033114 C   FIELD 28w01 SEC28: SEC28
0x40033114 C   FIELD 29w01 SEC29: SEC29
0x40033114 C   FIELD 30w01 SEC30: SEC30
0x40033114 C   FIELD 31w01 SEC31: SEC31
0x40033118 B  REGISTER MPCBB2_SECCFGR6 (rw): MPCBBx security configuration for super-block x register
0x40033118 C   FIELD 00w01 SEC0: SEC0
0x40033118 C   FIELD 01w01 SEC1: SEC1
0x40033118 C   FIELD 02w01 SEC2: SEC2
0x40033118 C   FIELD 03w01 SEC3: SEC3
0x40033118 C   FIELD 04w01 SEC4: SEC4
0x40033118 C   FIELD 05w01 SEC5: SEC5
0x40033118 C   FIELD 06w01 SEC6: SEC6
0x40033118 C   FIELD 07w01 SEC7: SEC7
0x40033118 C   FIELD 08w01 SEC8: SEC8
0x40033118 C   FIELD 09w01 SEC9: SEC9
0x40033118 C   FIELD 10w01 SEC10: SEC10
0x40033118 C   FIELD 11w01 SEC11: SEC11
0x40033118 C   FIELD 12w01 SEC12: SEC12
0x40033118 C   FIELD 13w01 SEC13: SEC13
0x40033118 C   FIELD 14w01 SEC14: SEC14
0x40033118 C   FIELD 15w01 SEC15: SEC15
0x40033118 C   FIELD 16w01 SEC16: SEC16
0x40033118 C   FIELD 17w01 SEC17: SEC17
0x40033118 C   FIELD 18w01 SEC18: SEC18
0x40033118 C   FIELD 19w01 SEC19: SEC19
0x40033118 C   FIELD 20w01 SEC20: SEC20
0x40033118 C   FIELD 21w01 SEC21: SEC21
0x40033118 C   FIELD 22w01 SEC22: SEC22
0x40033118 C   FIELD 23w01 SEC23: SEC23
0x40033118 C   FIELD 24w01 SEC24: SEC24
0x40033118 C   FIELD 25w01 SEC25: SEC25
0x40033118 C   FIELD 26w01 SEC26: SEC26
0x40033118 C   FIELD 27w01 SEC27: SEC27
0x40033118 C   FIELD 28w01 SEC28: SEC28
0x40033118 C   FIELD 29w01 SEC29: SEC29
0x40033118 C   FIELD 30w01 SEC30: SEC30
0x40033118 C   FIELD 31w01 SEC31: SEC31
0x4003311C B  REGISTER MPCBB2_SECCFGR7 (rw): MPCBBx security configuration for super-block x register
0x4003311C C   FIELD 00w01 SEC0: SEC0
0x4003311C C   FIELD 01w01 SEC1: SEC1
0x4003311C C   FIELD 02w01 SEC2: SEC2
0x4003311C C   FIELD 03w01 SEC3: SEC3
0x4003311C C   FIELD 04w01 SEC4: SEC4
0x4003311C C   FIELD 05w01 SEC5: SEC5
0x4003311C C   FIELD 06w01 SEC6: SEC6
0x4003311C C   FIELD 07w01 SEC7: SEC7
0x4003311C C   FIELD 08w01 SEC8: SEC8
0x4003311C C   FIELD 09w01 SEC9: SEC9
0x4003311C C   FIELD 10w01 SEC10: SEC10
0x4003311C C   FIELD 11w01 SEC11: SEC11
0x4003311C C   FIELD 12w01 SEC12: SEC12
0x4003311C C   FIELD 13w01 SEC13: SEC13
0x4003311C C   FIELD 14w01 SEC14: SEC14
0x4003311C C   FIELD 15w01 SEC15: SEC15
0x4003311C C   FIELD 16w01 SEC16: SEC16
0x4003311C C   FIELD 17w01 SEC17: SEC17
0x4003311C C   FIELD 18w01 SEC18: SEC18
0x4003311C C   FIELD 19w01 SEC19: SEC19
0x4003311C C   FIELD 20w01 SEC20: SEC20
0x4003311C C   FIELD 21w01 SEC21: SEC21
0x4003311C C   FIELD 22w01 SEC22: SEC22
0x4003311C C   FIELD 23w01 SEC23: SEC23
0x4003311C C   FIELD 24w01 SEC24: SEC24
0x4003311C C   FIELD 25w01 SEC25: SEC25
0x4003311C C   FIELD 26w01 SEC26: SEC26
0x4003311C C   FIELD 27w01 SEC27: SEC27
0x4003311C C   FIELD 28w01 SEC28: SEC28
0x4003311C C   FIELD 29w01 SEC29: SEC29
0x4003311C C   FIELD 30w01 SEC30: SEC30
0x4003311C C   FIELD 31w01 SEC31: SEC31
0x40033120 B  REGISTER MPCBB2_SECCFGR8 (rw): MPCBBx security configuration for super-block x register
0x40033120 C   FIELD 00w01 SEC0: SEC0
0x40033120 C   FIELD 01w01 SEC1: SEC1
0x40033120 C   FIELD 02w01 SEC2: SEC2
0x40033120 C   FIELD 03w01 SEC3: SEC3
0x40033120 C   FIELD 04w01 SEC4: SEC4
0x40033120 C   FIELD 05w01 SEC5: SEC5
0x40033120 C   FIELD 06w01 SEC6: SEC6
0x40033120 C   FIELD 07w01 SEC7: SEC7
0x40033120 C   FIELD 08w01 SEC8: SEC8
0x40033120 C   FIELD 09w01 SEC9: SEC9
0x40033120 C   FIELD 10w01 SEC10: SEC10
0x40033120 C   FIELD 11w01 SEC11: SEC11
0x40033120 C   FIELD 12w01 SEC12: SEC12
0x40033120 C   FIELD 13w01 SEC13: SEC13
0x40033120 C   FIELD 14w01 SEC14: SEC14
0x40033120 C   FIELD 15w01 SEC15: SEC15
0x40033120 C   FIELD 16w01 SEC16: SEC16
0x40033120 C   FIELD 17w01 SEC17: SEC17
0x40033120 C   FIELD 18w01 SEC18: SEC18
0x40033120 C   FIELD 19w01 SEC19: SEC19
0x40033120 C   FIELD 20w01 SEC20: SEC20
0x40033120 C   FIELD 21w01 SEC21: SEC21
0x40033120 C   FIELD 22w01 SEC22: SEC22
0x40033120 C   FIELD 23w01 SEC23: SEC23
0x40033120 C   FIELD 24w01 SEC24: SEC24
0x40033120 C   FIELD 25w01 SEC25: SEC25
0x40033120 C   FIELD 26w01 SEC26: SEC26
0x40033120 C   FIELD 27w01 SEC27: SEC27
0x40033120 C   FIELD 28w01 SEC28: SEC28
0x40033120 C   FIELD 29w01 SEC29: SEC29
0x40033120 C   FIELD 30w01 SEC30: SEC30
0x40033120 C   FIELD 31w01 SEC31: SEC31
0x40033124 B  REGISTER MPCBB2_SECCFGR9 (rw): MPCBBx security configuration for super-block x register
0x40033124 C   FIELD 00w01 SEC0: SEC0
0x40033124 C   FIELD 01w01 SEC1: SEC1
0x40033124 C   FIELD 02w01 SEC2: SEC2
0x40033124 C   FIELD 03w01 SEC3: SEC3
0x40033124 C   FIELD 04w01 SEC4: SEC4
0x40033124 C   FIELD 05w01 SEC5: SEC5
0x40033124 C   FIELD 06w01 SEC6: SEC6
0x40033124 C   FIELD 07w01 SEC7: SEC7
0x40033124 C   FIELD 08w01 SEC8: SEC8
0x40033124 C   FIELD 09w01 SEC9: SEC9
0x40033124 C   FIELD 10w01 SEC10: SEC10
0x40033124 C   FIELD 11w01 SEC11: SEC11
0x40033124 C   FIELD 12w01 SEC12: SEC12
0x40033124 C   FIELD 13w01 SEC13: SEC13
0x40033124 C   FIELD 14w01 SEC14: SEC14
0x40033124 C   FIELD 15w01 SEC15: SEC15
0x40033124 C   FIELD 16w01 SEC16: SEC16
0x40033124 C   FIELD 17w01 SEC17: SEC17
0x40033124 C   FIELD 18w01 SEC18: SEC18
0x40033124 C   FIELD 19w01 SEC19: SEC19
0x40033124 C   FIELD 20w01 SEC20: SEC20
0x40033124 C   FIELD 21w01 SEC21: SEC21
0x40033124 C   FIELD 22w01 SEC22: SEC22
0x40033124 C   FIELD 23w01 SEC23: SEC23
0x40033124 C   FIELD 24w01 SEC24: SEC24
0x40033124 C   FIELD 25w01 SEC25: SEC25
0x40033124 C   FIELD 26w01 SEC26: SEC26
0x40033124 C   FIELD 27w01 SEC27: SEC27
0x40033124 C   FIELD 28w01 SEC28: SEC28
0x40033124 C   FIELD 29w01 SEC29: SEC29
0x40033124 C   FIELD 30w01 SEC30: SEC30
0x40033124 C   FIELD 31w01 SEC31: SEC31
0x40033128 B  REGISTER MPCBB2_SECCFGR10 (rw): MPCBBx security configuration for super-block x register
0x40033128 C   FIELD 00w01 SEC0: SEC0
0x40033128 C   FIELD 01w01 SEC1: SEC1
0x40033128 C   FIELD 02w01 SEC2: SEC2
0x40033128 C   FIELD 03w01 SEC3: SEC3
0x40033128 C   FIELD 04w01 SEC4: SEC4
0x40033128 C   FIELD 05w01 SEC5: SEC5
0x40033128 C   FIELD 06w01 SEC6: SEC6
0x40033128 C   FIELD 07w01 SEC7: SEC7
0x40033128 C   FIELD 08w01 SEC8: SEC8
0x40033128 C   FIELD 09w01 SEC9: SEC9
0x40033128 C   FIELD 10w01 SEC10: SEC10
0x40033128 C   FIELD 11w01 SEC11: SEC11
0x40033128 C   FIELD 12w01 SEC12: SEC12
0x40033128 C   FIELD 13w01 SEC13: SEC13
0x40033128 C   FIELD 14w01 SEC14: SEC14
0x40033128 C   FIELD 15w01 SEC15: SEC15
0x40033128 C   FIELD 16w01 SEC16: SEC16
0x40033128 C   FIELD 17w01 SEC17: SEC17
0x40033128 C   FIELD 18w01 SEC18: SEC18
0x40033128 C   FIELD 19w01 SEC19: SEC19
0x40033128 C   FIELD 20w01 SEC20: SEC20
0x40033128 C   FIELD 21w01 SEC21: SEC21
0x40033128 C   FIELD 22w01 SEC22: SEC22
0x40033128 C   FIELD 23w01 SEC23: SEC23
0x40033128 C   FIELD 24w01 SEC24: SEC24
0x40033128 C   FIELD 25w01 SEC25: SEC25
0x40033128 C   FIELD 26w01 SEC26: SEC26
0x40033128 C   FIELD 27w01 SEC27: SEC27
0x40033128 C   FIELD 28w01 SEC28: SEC28
0x40033128 C   FIELD 29w01 SEC29: SEC29
0x40033128 C   FIELD 30w01 SEC30: SEC30
0x40033128 C   FIELD 31w01 SEC31: SEC31
0x4003312C B  REGISTER MPCBB2_SECCFGR11 (rw): MPCBBx security configuration for super-block x register
0x4003312C C   FIELD 00w01 SEC0: SEC0
0x4003312C C   FIELD 01w01 SEC1: SEC1
0x4003312C C   FIELD 02w01 SEC2: SEC2
0x4003312C C   FIELD 03w01 SEC3: SEC3
0x4003312C C   FIELD 04w01 SEC4: SEC4
0x4003312C C   FIELD 05w01 SEC5: SEC5
0x4003312C C   FIELD 06w01 SEC6: SEC6
0x4003312C C   FIELD 07w01 SEC7: SEC7
0x4003312C C   FIELD 08w01 SEC8: SEC8
0x4003312C C   FIELD 09w01 SEC9: SEC9
0x4003312C C   FIELD 10w01 SEC10: SEC10
0x4003312C C   FIELD 11w01 SEC11: SEC11
0x4003312C C   FIELD 12w01 SEC12: SEC12
0x4003312C C   FIELD 13w01 SEC13: SEC13
0x4003312C C   FIELD 14w01 SEC14: SEC14
0x4003312C C   FIELD 15w01 SEC15: SEC15
0x4003312C C   FIELD 16w01 SEC16: SEC16
0x4003312C C   FIELD 17w01 SEC17: SEC17
0x4003312C C   FIELD 18w01 SEC18: SEC18
0x4003312C C   FIELD 19w01 SEC19: SEC19
0x4003312C C   FIELD 20w01 SEC20: SEC20
0x4003312C C   FIELD 21w01 SEC21: SEC21
0x4003312C C   FIELD 22w01 SEC22: SEC22
0x4003312C C   FIELD 23w01 SEC23: SEC23
0x4003312C C   FIELD 24w01 SEC24: SEC24
0x4003312C C   FIELD 25w01 SEC25: SEC25
0x4003312C C   FIELD 26w01 SEC26: SEC26
0x4003312C C   FIELD 27w01 SEC27: SEC27
0x4003312C C   FIELD 28w01 SEC28: SEC28
0x4003312C C   FIELD 29w01 SEC29: SEC29
0x4003312C C   FIELD 30w01 SEC30: SEC30
0x4003312C C   FIELD 31w01 SEC31: SEC31
0x40033130 B  REGISTER MPCBB2_SECCFGR12 (rw): MPCBBx security configuration for super-block x register
0x40033130 C   FIELD 00w01 SEC0: SEC0
0x40033130 C   FIELD 01w01 SEC1: SEC1
0x40033130 C   FIELD 02w01 SEC2: SEC2
0x40033130 C   FIELD 03w01 SEC3: SEC3
0x40033130 C   FIELD 04w01 SEC4: SEC4
0x40033130 C   FIELD 05w01 SEC5: SEC5
0x40033130 C   FIELD 06w01 SEC6: SEC6
0x40033130 C   FIELD 07w01 SEC7: SEC7
0x40033130 C   FIELD 08w01 SEC8: SEC8
0x40033130 C   FIELD 09w01 SEC9: SEC9
0x40033130 C   FIELD 10w01 SEC10: SEC10
0x40033130 C   FIELD 11w01 SEC11: SEC11
0x40033130 C   FIELD 12w01 SEC12: SEC12
0x40033130 C   FIELD 13w01 SEC13: SEC13
0x40033130 C   FIELD 14w01 SEC14: SEC14
0x40033130 C   FIELD 15w01 SEC15: SEC15
0x40033130 C   FIELD 16w01 SEC16: SEC16
0x40033130 C   FIELD 17w01 SEC17: SEC17
0x40033130 C   FIELD 18w01 SEC18: SEC18
0x40033130 C   FIELD 19w01 SEC19: SEC19
0x40033130 C   FIELD 20w01 SEC20: SEC20
0x40033130 C   FIELD 21w01 SEC21: SEC21
0x40033130 C   FIELD 22w01 SEC22: SEC22
0x40033130 C   FIELD 23w01 SEC23: SEC23
0x40033130 C   FIELD 24w01 SEC24: SEC24
0x40033130 C   FIELD 25w01 SEC25: SEC25
0x40033130 C   FIELD 26w01 SEC26: SEC26
0x40033130 C   FIELD 27w01 SEC27: SEC27
0x40033130 C   FIELD 28w01 SEC28: SEC28
0x40033130 C   FIELD 29w01 SEC29: SEC29
0x40033130 C   FIELD 30w01 SEC30: SEC30
0x40033130 C   FIELD 31w01 SEC31: SEC31
0x40033134 B  REGISTER MPCBB2_SECCFGR13 (rw): MPCBBx security configuration for super-block x register
0x40033134 C   FIELD 00w01 SEC0: SEC0
0x40033134 C   FIELD 01w01 SEC1: SEC1
0x40033134 C   FIELD 02w01 SEC2: SEC2
0x40033134 C   FIELD 03w01 SEC3: SEC3
0x40033134 C   FIELD 04w01 SEC4: SEC4
0x40033134 C   FIELD 05w01 SEC5: SEC5
0x40033134 C   FIELD 06w01 SEC6: SEC6
0x40033134 C   FIELD 07w01 SEC7: SEC7
0x40033134 C   FIELD 08w01 SEC8: SEC8
0x40033134 C   FIELD 09w01 SEC9: SEC9
0x40033134 C   FIELD 10w01 SEC10: SEC10
0x40033134 C   FIELD 11w01 SEC11: SEC11
0x40033134 C   FIELD 12w01 SEC12: SEC12
0x40033134 C   FIELD 13w01 SEC13: SEC13
0x40033134 C   FIELD 14w01 SEC14: SEC14
0x40033134 C   FIELD 15w01 SEC15: SEC15
0x40033134 C   FIELD 16w01 SEC16: SEC16
0x40033134 C   FIELD 17w01 SEC17: SEC17
0x40033134 C   FIELD 18w01 SEC18: SEC18
0x40033134 C   FIELD 19w01 SEC19: SEC19
0x40033134 C   FIELD 20w01 SEC20: SEC20
0x40033134 C   FIELD 21w01 SEC21: SEC21
0x40033134 C   FIELD 22w01 SEC22: SEC22
0x40033134 C   FIELD 23w01 SEC23: SEC23
0x40033134 C   FIELD 24w01 SEC24: SEC24
0x40033134 C   FIELD 25w01 SEC25: SEC25
0x40033134 C   FIELD 26w01 SEC26: SEC26
0x40033134 C   FIELD 27w01 SEC27: SEC27
0x40033134 C   FIELD 28w01 SEC28: SEC28
0x40033134 C   FIELD 29w01 SEC29: SEC29
0x40033134 C   FIELD 30w01 SEC30: SEC30
0x40033134 C   FIELD 31w01 SEC31: SEC31
0x40033138 B  REGISTER MPCBB2_SECCFGR14 (rw): MPCBBx security configuration for super-block x register
0x40033138 C   FIELD 00w01 SEC0: SEC0
0x40033138 C   FIELD 01w01 SEC1: SEC1
0x40033138 C   FIELD 02w01 SEC2: SEC2
0x40033138 C   FIELD 03w01 SEC3: SEC3
0x40033138 C   FIELD 04w01 SEC4: SEC4
0x40033138 C   FIELD 05w01 SEC5: SEC5
0x40033138 C   FIELD 06w01 SEC6: SEC6
0x40033138 C   FIELD 07w01 SEC7: SEC7
0x40033138 C   FIELD 08w01 SEC8: SEC8
0x40033138 C   FIELD 09w01 SEC9: SEC9
0x40033138 C   FIELD 10w01 SEC10: SEC10
0x40033138 C   FIELD 11w01 SEC11: SEC11
0x40033138 C   FIELD 12w01 SEC12: SEC12
0x40033138 C   FIELD 13w01 SEC13: SEC13
0x40033138 C   FIELD 14w01 SEC14: SEC14
0x40033138 C   FIELD 15w01 SEC15: SEC15
0x40033138 C   FIELD 16w01 SEC16: SEC16
0x40033138 C   FIELD 17w01 SEC17: SEC17
0x40033138 C   FIELD 18w01 SEC18: SEC18
0x40033138 C   FIELD 19w01 SEC19: SEC19
0x40033138 C   FIELD 20w01 SEC20: SEC20
0x40033138 C   FIELD 21w01 SEC21: SEC21
0x40033138 C   FIELD 22w01 SEC22: SEC22
0x40033138 C   FIELD 23w01 SEC23: SEC23
0x40033138 C   FIELD 24w01 SEC24: SEC24
0x40033138 C   FIELD 25w01 SEC25: SEC25
0x40033138 C   FIELD 26w01 SEC26: SEC26
0x40033138 C   FIELD 27w01 SEC27: SEC27
0x40033138 C   FIELD 28w01 SEC28: SEC28
0x40033138 C   FIELD 29w01 SEC29: SEC29
0x40033138 C   FIELD 30w01 SEC30: SEC30
0x40033138 C   FIELD 31w01 SEC31: SEC31
0x4003313C B  REGISTER MPCBB2_SECCFGR15 (rw): MPCBBx security configuration for super-block x register
0x4003313C C   FIELD 00w01 SEC0: SEC0
0x4003313C C   FIELD 01w01 SEC1: SEC1
0x4003313C C   FIELD 02w01 SEC2: SEC2
0x4003313C C   FIELD 03w01 SEC3: SEC3
0x4003313C C   FIELD 04w01 SEC4: SEC4
0x4003313C C   FIELD 05w01 SEC5: SEC5
0x4003313C C   FIELD 06w01 SEC6: SEC6
0x4003313C C   FIELD 07w01 SEC7: SEC7
0x4003313C C   FIELD 08w01 SEC8: SEC8
0x4003313C C   FIELD 09w01 SEC9: SEC9
0x4003313C C   FIELD 10w01 SEC10: SEC10
0x4003313C C   FIELD 11w01 SEC11: SEC11
0x4003313C C   FIELD 12w01 SEC12: SEC12
0x4003313C C   FIELD 13w01 SEC13: SEC13
0x4003313C C   FIELD 14w01 SEC14: SEC14
0x4003313C C   FIELD 15w01 SEC15: SEC15
0x4003313C C   FIELD 16w01 SEC16: SEC16
0x4003313C C   FIELD 17w01 SEC17: SEC17
0x4003313C C   FIELD 18w01 SEC18: SEC18
0x4003313C C   FIELD 19w01 SEC19: SEC19
0x4003313C C   FIELD 20w01 SEC20: SEC20
0x4003313C C   FIELD 21w01 SEC21: SEC21
0x4003313C C   FIELD 22w01 SEC22: SEC22
0x4003313C C   FIELD 23w01 SEC23: SEC23
0x4003313C C   FIELD 24w01 SEC24: SEC24
0x4003313C C   FIELD 25w01 SEC25: SEC25
0x4003313C C   FIELD 26w01 SEC26: SEC26
0x4003313C C   FIELD 27w01 SEC27: SEC27
0x4003313C C   FIELD 28w01 SEC28: SEC28
0x4003313C C   FIELD 29w01 SEC29: SEC29
0x4003313C C   FIELD 30w01 SEC30: SEC30
0x4003313C C   FIELD 31w01 SEC31: SEC31
0x40033140 B  REGISTER MPCBB2_SECCFGR16 (rw): MPCBBx security configuration for super-block x register
0x40033140 C   FIELD 00w01 SEC0: SEC0
0x40033140 C   FIELD 01w01 SEC1: SEC1
0x40033140 C   FIELD 02w01 SEC2: SEC2
0x40033140 C   FIELD 03w01 SEC3: SEC3
0x40033140 C   FIELD 04w01 SEC4: SEC4
0x40033140 C   FIELD 05w01 SEC5: SEC5
0x40033140 C   FIELD 06w01 SEC6: SEC6
0x40033140 C   FIELD 07w01 SEC7: SEC7
0x40033140 C   FIELD 08w01 SEC8: SEC8
0x40033140 C   FIELD 09w01 SEC9: SEC9
0x40033140 C   FIELD 10w01 SEC10: SEC10
0x40033140 C   FIELD 11w01 SEC11: SEC11
0x40033140 C   FIELD 12w01 SEC12: SEC12
0x40033140 C   FIELD 13w01 SEC13: SEC13
0x40033140 C   FIELD 14w01 SEC14: SEC14
0x40033140 C   FIELD 15w01 SEC15: SEC15
0x40033140 C   FIELD 16w01 SEC16: SEC16
0x40033140 C   FIELD 17w01 SEC17: SEC17
0x40033140 C   FIELD 18w01 SEC18: SEC18
0x40033140 C   FIELD 19w01 SEC19: SEC19
0x40033140 C   FIELD 20w01 SEC20: SEC20
0x40033140 C   FIELD 21w01 SEC21: SEC21
0x40033140 C   FIELD 22w01 SEC22: SEC22
0x40033140 C   FIELD 23w01 SEC23: SEC23
0x40033140 C   FIELD 24w01 SEC24: SEC24
0x40033140 C   FIELD 25w01 SEC25: SEC25
0x40033140 C   FIELD 26w01 SEC26: SEC26
0x40033140 C   FIELD 27w01 SEC27: SEC27
0x40033140 C   FIELD 28w01 SEC28: SEC28
0x40033140 C   FIELD 29w01 SEC29: SEC29
0x40033140 C   FIELD 30w01 SEC30: SEC30
0x40033140 C   FIELD 31w01 SEC31: SEC31
0x40033144 B  REGISTER MPCBB2_SECCFGR17 (rw): MPCBBx security configuration for super-block x register
0x40033144 C   FIELD 00w01 SEC0: SEC0
0x40033144 C   FIELD 01w01 SEC1: SEC1
0x40033144 C   FIELD 02w01 SEC2: SEC2
0x40033144 C   FIELD 03w01 SEC3: SEC3
0x40033144 C   FIELD 04w01 SEC4: SEC4
0x40033144 C   FIELD 05w01 SEC5: SEC5
0x40033144 C   FIELD 06w01 SEC6: SEC6
0x40033144 C   FIELD 07w01 SEC7: SEC7
0x40033144 C   FIELD 08w01 SEC8: SEC8
0x40033144 C   FIELD 09w01 SEC9: SEC9
0x40033144 C   FIELD 10w01 SEC10: SEC10
0x40033144 C   FIELD 11w01 SEC11: SEC11
0x40033144 C   FIELD 12w01 SEC12: SEC12
0x40033144 C   FIELD 13w01 SEC13: SEC13
0x40033144 C   FIELD 14w01 SEC14: SEC14
0x40033144 C   FIELD 15w01 SEC15: SEC15
0x40033144 C   FIELD 16w01 SEC16: SEC16
0x40033144 C   FIELD 17w01 SEC17: SEC17
0x40033144 C   FIELD 18w01 SEC18: SEC18
0x40033144 C   FIELD 19w01 SEC19: SEC19
0x40033144 C   FIELD 20w01 SEC20: SEC20
0x40033144 C   FIELD 21w01 SEC21: SEC21
0x40033144 C   FIELD 22w01 SEC22: SEC22
0x40033144 C   FIELD 23w01 SEC23: SEC23
0x40033144 C   FIELD 24w01 SEC24: SEC24
0x40033144 C   FIELD 25w01 SEC25: SEC25
0x40033144 C   FIELD 26w01 SEC26: SEC26
0x40033144 C   FIELD 27w01 SEC27: SEC27
0x40033144 C   FIELD 28w01 SEC28: SEC28
0x40033144 C   FIELD 29w01 SEC29: SEC29
0x40033144 C   FIELD 30w01 SEC30: SEC30
0x40033144 C   FIELD 31w01 SEC31: SEC31
0x40033148 B  REGISTER MPCBB2_SECCFGR18 (rw): MPCBBx security configuration for super-block x register
0x40033148 C   FIELD 00w01 SEC0: SEC0
0x40033148 C   FIELD 01w01 SEC1: SEC1
0x40033148 C   FIELD 02w01 SEC2: SEC2
0x40033148 C   FIELD 03w01 SEC3: SEC3
0x40033148 C   FIELD 04w01 SEC4: SEC4
0x40033148 C   FIELD 05w01 SEC5: SEC5
0x40033148 C   FIELD 06w01 SEC6: SEC6
0x40033148 C   FIELD 07w01 SEC7: SEC7
0x40033148 C   FIELD 08w01 SEC8: SEC8
0x40033148 C   FIELD 09w01 SEC9: SEC9
0x40033148 C   FIELD 10w01 SEC10: SEC10
0x40033148 C   FIELD 11w01 SEC11: SEC11
0x40033148 C   FIELD 12w01 SEC12: SEC12
0x40033148 C   FIELD 13w01 SEC13: SEC13
0x40033148 C   FIELD 14w01 SEC14: SEC14
0x40033148 C   FIELD 15w01 SEC15: SEC15
0x40033148 C   FIELD 16w01 SEC16: SEC16
0x40033148 C   FIELD 17w01 SEC17: SEC17
0x40033148 C   FIELD 18w01 SEC18: SEC18
0x40033148 C   FIELD 19w01 SEC19: SEC19
0x40033148 C   FIELD 20w01 SEC20: SEC20
0x40033148 C   FIELD 21w01 SEC21: SEC21
0x40033148 C   FIELD 22w01 SEC22: SEC22
0x40033148 C   FIELD 23w01 SEC23: SEC23
0x40033148 C   FIELD 24w01 SEC24: SEC24
0x40033148 C   FIELD 25w01 SEC25: SEC25
0x40033148 C   FIELD 26w01 SEC26: SEC26
0x40033148 C   FIELD 27w01 SEC27: SEC27
0x40033148 C   FIELD 28w01 SEC28: SEC28
0x40033148 C   FIELD 29w01 SEC29: SEC29
0x40033148 C   FIELD 30w01 SEC30: SEC30
0x40033148 C   FIELD 31w01 SEC31: SEC31
0x4003314C B  REGISTER MPCBB2_SECCFGR19 (rw): MPCBBx security configuration for super-block x register
0x4003314C C   FIELD 00w01 SEC0: SEC0
0x4003314C C   FIELD 01w01 SEC1: SEC1
0x4003314C C   FIELD 02w01 SEC2: SEC2
0x4003314C C   FIELD 03w01 SEC3: SEC3
0x4003314C C   FIELD 04w01 SEC4: SEC4
0x4003314C C   FIELD 05w01 SEC5: SEC5
0x4003314C C   FIELD 06w01 SEC6: SEC6
0x4003314C C   FIELD 07w01 SEC7: SEC7
0x4003314C C   FIELD 08w01 SEC8: SEC8
0x4003314C C   FIELD 09w01 SEC9: SEC9
0x4003314C C   FIELD 10w01 SEC10: SEC10
0x4003314C C   FIELD 11w01 SEC11: SEC11
0x4003314C C   FIELD 12w01 SEC12: SEC12
0x4003314C C   FIELD 13w01 SEC13: SEC13
0x4003314C C   FIELD 14w01 SEC14: SEC14
0x4003314C C   FIELD 15w01 SEC15: SEC15
0x4003314C C   FIELD 16w01 SEC16: SEC16
0x4003314C C   FIELD 17w01 SEC17: SEC17
0x4003314C C   FIELD 18w01 SEC18: SEC18
0x4003314C C   FIELD 19w01 SEC19: SEC19
0x4003314C C   FIELD 20w01 SEC20: SEC20
0x4003314C C   FIELD 21w01 SEC21: SEC21
0x4003314C C   FIELD 22w01 SEC22: SEC22
0x4003314C C   FIELD 23w01 SEC23: SEC23
0x4003314C C   FIELD 24w01 SEC24: SEC24
0x4003314C C   FIELD 25w01 SEC25: SEC25
0x4003314C C   FIELD 26w01 SEC26: SEC26
0x4003314C C   FIELD 27w01 SEC27: SEC27
0x4003314C C   FIELD 28w01 SEC28: SEC28
0x4003314C C   FIELD 29w01 SEC29: SEC29
0x4003314C C   FIELD 30w01 SEC30: SEC30
0x4003314C C   FIELD 31w01 SEC31: SEC31
0x40033150 B  REGISTER MPCBB2_SECCFGR20 (rw): MPCBBx security configuration for super-block x register
0x40033150 C   FIELD 00w01 SEC0: SEC0
0x40033150 C   FIELD 01w01 SEC1: SEC1
0x40033150 C   FIELD 02w01 SEC2: SEC2
0x40033150 C   FIELD 03w01 SEC3: SEC3
0x40033150 C   FIELD 04w01 SEC4: SEC4
0x40033150 C   FIELD 05w01 SEC5: SEC5
0x40033150 C   FIELD 06w01 SEC6: SEC6
0x40033150 C   FIELD 07w01 SEC7: SEC7
0x40033150 C   FIELD 08w01 SEC8: SEC8
0x40033150 C   FIELD 09w01 SEC9: SEC9
0x40033150 C   FIELD 10w01 SEC10: SEC10
0x40033150 C   FIELD 11w01 SEC11: SEC11
0x40033150 C   FIELD 12w01 SEC12: SEC12
0x40033150 C   FIELD 13w01 SEC13: SEC13
0x40033150 C   FIELD 14w01 SEC14: SEC14
0x40033150 C   FIELD 15w01 SEC15: SEC15
0x40033150 C   FIELD 16w01 SEC16: SEC16
0x40033150 C   FIELD 17w01 SEC17: SEC17
0x40033150 C   FIELD 18w01 SEC18: SEC18
0x40033150 C   FIELD 19w01 SEC19: SEC19
0x40033150 C   FIELD 20w01 SEC20: SEC20
0x40033150 C   FIELD 21w01 SEC21: SEC21
0x40033150 C   FIELD 22w01 SEC22: SEC22
0x40033150 C   FIELD 23w01 SEC23: SEC23
0x40033150 C   FIELD 24w01 SEC24: SEC24
0x40033150 C   FIELD 25w01 SEC25: SEC25
0x40033150 C   FIELD 26w01 SEC26: SEC26
0x40033150 C   FIELD 27w01 SEC27: SEC27
0x40033150 C   FIELD 28w01 SEC28: SEC28
0x40033150 C   FIELD 29w01 SEC29: SEC29
0x40033150 C   FIELD 30w01 SEC30: SEC30
0x40033150 C   FIELD 31w01 SEC31: SEC31
0x40033154 B  REGISTER MPCBB2_SECCFGR21 (rw): MPCBBx security configuration for super-block x register
0x40033154 C   FIELD 00w01 SEC0: SEC0
0x40033154 C   FIELD 01w01 SEC1: SEC1
0x40033154 C   FIELD 02w01 SEC2: SEC2
0x40033154 C   FIELD 03w01 SEC3: SEC3
0x40033154 C   FIELD 04w01 SEC4: SEC4
0x40033154 C   FIELD 05w01 SEC5: SEC5
0x40033154 C   FIELD 06w01 SEC6: SEC6
0x40033154 C   FIELD 07w01 SEC7: SEC7
0x40033154 C   FIELD 08w01 SEC8: SEC8
0x40033154 C   FIELD 09w01 SEC9: SEC9
0x40033154 C   FIELD 10w01 SEC10: SEC10
0x40033154 C   FIELD 11w01 SEC11: SEC11
0x40033154 C   FIELD 12w01 SEC12: SEC12
0x40033154 C   FIELD 13w01 SEC13: SEC13
0x40033154 C   FIELD 14w01 SEC14: SEC14
0x40033154 C   FIELD 15w01 SEC15: SEC15
0x40033154 C   FIELD 16w01 SEC16: SEC16
0x40033154 C   FIELD 17w01 SEC17: SEC17
0x40033154 C   FIELD 18w01 SEC18: SEC18
0x40033154 C   FIELD 19w01 SEC19: SEC19
0x40033154 C   FIELD 20w01 SEC20: SEC20
0x40033154 C   FIELD 21w01 SEC21: SEC21
0x40033154 C   FIELD 22w01 SEC22: SEC22
0x40033154 C   FIELD 23w01 SEC23: SEC23
0x40033154 C   FIELD 24w01 SEC24: SEC24
0x40033154 C   FIELD 25w01 SEC25: SEC25
0x40033154 C   FIELD 26w01 SEC26: SEC26
0x40033154 C   FIELD 27w01 SEC27: SEC27
0x40033154 C   FIELD 28w01 SEC28: SEC28
0x40033154 C   FIELD 29w01 SEC29: SEC29
0x40033154 C   FIELD 30w01 SEC30: SEC30
0x40033154 C   FIELD 31w01 SEC31: SEC31
0x40033158 B  REGISTER MPCBB2_SECCFGR22 (rw): MPCBBx security configuration for super-block x register
0x40033158 C   FIELD 00w01 SEC0: SEC0
0x40033158 C   FIELD 01w01 SEC1: SEC1
0x40033158 C   FIELD 02w01 SEC2: SEC2
0x40033158 C   FIELD 03w01 SEC3: SEC3
0x40033158 C   FIELD 04w01 SEC4: SEC4
0x40033158 C   FIELD 05w01 SEC5: SEC5
0x40033158 C   FIELD 06w01 SEC6: SEC6
0x40033158 C   FIELD 07w01 SEC7: SEC7
0x40033158 C   FIELD 08w01 SEC8: SEC8
0x40033158 C   FIELD 09w01 SEC9: SEC9
0x40033158 C   FIELD 10w01 SEC10: SEC10
0x40033158 C   FIELD 11w01 SEC11: SEC11
0x40033158 C   FIELD 12w01 SEC12: SEC12
0x40033158 C   FIELD 13w01 SEC13: SEC13
0x40033158 C   FIELD 14w01 SEC14: SEC14
0x40033158 C   FIELD 15w01 SEC15: SEC15
0x40033158 C   FIELD 16w01 SEC16: SEC16
0x40033158 C   FIELD 17w01 SEC17: SEC17
0x40033158 C   FIELD 18w01 SEC18: SEC18
0x40033158 C   FIELD 19w01 SEC19: SEC19
0x40033158 C   FIELD 20w01 SEC20: SEC20
0x40033158 C   FIELD 21w01 SEC21: SEC21
0x40033158 C   FIELD 22w01 SEC22: SEC22
0x40033158 C   FIELD 23w01 SEC23: SEC23
0x40033158 C   FIELD 24w01 SEC24: SEC24
0x40033158 C   FIELD 25w01 SEC25: SEC25
0x40033158 C   FIELD 26w01 SEC26: SEC26
0x40033158 C   FIELD 27w01 SEC27: SEC27
0x40033158 C   FIELD 28w01 SEC28: SEC28
0x40033158 C   FIELD 29w01 SEC29: SEC29
0x40033158 C   FIELD 30w01 SEC30: SEC30
0x40033158 C   FIELD 31w01 SEC31: SEC31
0x4003315C B  REGISTER MPCBB2_SECCFGR23 (rw): MPCBBx security configuration for super-block x register
0x4003315C C   FIELD 00w01 SEC0: SEC0
0x4003315C C   FIELD 01w01 SEC1: SEC1
0x4003315C C   FIELD 02w01 SEC2: SEC2
0x4003315C C   FIELD 03w01 SEC3: SEC3
0x4003315C C   FIELD 04w01 SEC4: SEC4
0x4003315C C   FIELD 05w01 SEC5: SEC5
0x4003315C C   FIELD 06w01 SEC6: SEC6
0x4003315C C   FIELD 07w01 SEC7: SEC7
0x4003315C C   FIELD 08w01 SEC8: SEC8
0x4003315C C   FIELD 09w01 SEC9: SEC9
0x4003315C C   FIELD 10w01 SEC10: SEC10
0x4003315C C   FIELD 11w01 SEC11: SEC11
0x4003315C C   FIELD 12w01 SEC12: SEC12
0x4003315C C   FIELD 13w01 SEC13: SEC13
0x4003315C C   FIELD 14w01 SEC14: SEC14
0x4003315C C   FIELD 15w01 SEC15: SEC15
0x4003315C C   FIELD 16w01 SEC16: SEC16
0x4003315C C   FIELD 17w01 SEC17: SEC17
0x4003315C C   FIELD 18w01 SEC18: SEC18
0x4003315C C   FIELD 19w01 SEC19: SEC19
0x4003315C C   FIELD 20w01 SEC20: SEC20
0x4003315C C   FIELD 21w01 SEC21: SEC21
0x4003315C C   FIELD 22w01 SEC22: SEC22
0x4003315C C   FIELD 23w01 SEC23: SEC23
0x4003315C C   FIELD 24w01 SEC24: SEC24
0x4003315C C   FIELD 25w01 SEC25: SEC25
0x4003315C C   FIELD 26w01 SEC26: SEC26
0x4003315C C   FIELD 27w01 SEC27: SEC27
0x4003315C C   FIELD 28w01 SEC28: SEC28
0x4003315C C   FIELD 29w01 SEC29: SEC29
0x4003315C C   FIELD 30w01 SEC30: SEC30
0x4003315C C   FIELD 31w01 SEC31: SEC31
0x40033160 B  REGISTER MPCBB2_SECCFGR24 (rw): MPCBBx security configuration for super-block x register
0x40033160 C   FIELD 00w01 SEC0: SEC0
0x40033160 C   FIELD 01w01 SEC1: SEC1
0x40033160 C   FIELD 02w01 SEC2: SEC2
0x40033160 C   FIELD 03w01 SEC3: SEC3
0x40033160 C   FIELD 04w01 SEC4: SEC4
0x40033160 C   FIELD 05w01 SEC5: SEC5
0x40033160 C   FIELD 06w01 SEC6: SEC6
0x40033160 C   FIELD 07w01 SEC7: SEC7
0x40033160 C   FIELD 08w01 SEC8: SEC8
0x40033160 C   FIELD 09w01 SEC9: SEC9
0x40033160 C   FIELD 10w01 SEC10: SEC10
0x40033160 C   FIELD 11w01 SEC11: SEC11
0x40033160 C   FIELD 12w01 SEC12: SEC12
0x40033160 C   FIELD 13w01 SEC13: SEC13
0x40033160 C   FIELD 14w01 SEC14: SEC14
0x40033160 C   FIELD 15w01 SEC15: SEC15
0x40033160 C   FIELD 16w01 SEC16: SEC16
0x40033160 C   FIELD 17w01 SEC17: SEC17
0x40033160 C   FIELD 18w01 SEC18: SEC18
0x40033160 C   FIELD 19w01 SEC19: SEC19
0x40033160 C   FIELD 20w01 SEC20: SEC20
0x40033160 C   FIELD 21w01 SEC21: SEC21
0x40033160 C   FIELD 22w01 SEC22: SEC22
0x40033160 C   FIELD 23w01 SEC23: SEC23
0x40033160 C   FIELD 24w01 SEC24: SEC24
0x40033160 C   FIELD 25w01 SEC25: SEC25
0x40033160 C   FIELD 26w01 SEC26: SEC26
0x40033160 C   FIELD 27w01 SEC27: SEC27
0x40033160 C   FIELD 28w01 SEC28: SEC28
0x40033160 C   FIELD 29w01 SEC29: SEC29
0x40033160 C   FIELD 30w01 SEC30: SEC30
0x40033160 C   FIELD 31w01 SEC31: SEC31
0x40033164 B  REGISTER MPCBB2_SECCFGR25 (rw): MPCBBx security configuration for super-block x register
0x40033164 C   FIELD 00w01 SEC0: SEC0
0x40033164 C   FIELD 01w01 SEC1: SEC1
0x40033164 C   FIELD 02w01 SEC2: SEC2
0x40033164 C   FIELD 03w01 SEC3: SEC3
0x40033164 C   FIELD 04w01 SEC4: SEC4
0x40033164 C   FIELD 05w01 SEC5: SEC5
0x40033164 C   FIELD 06w01 SEC6: SEC6
0x40033164 C   FIELD 07w01 SEC7: SEC7
0x40033164 C   FIELD 08w01 SEC8: SEC8
0x40033164 C   FIELD 09w01 SEC9: SEC9
0x40033164 C   FIELD 10w01 SEC10: SEC10
0x40033164 C   FIELD 11w01 SEC11: SEC11
0x40033164 C   FIELD 12w01 SEC12: SEC12
0x40033164 C   FIELD 13w01 SEC13: SEC13
0x40033164 C   FIELD 14w01 SEC14: SEC14
0x40033164 C   FIELD 15w01 SEC15: SEC15
0x40033164 C   FIELD 16w01 SEC16: SEC16
0x40033164 C   FIELD 17w01 SEC17: SEC17
0x40033164 C   FIELD 18w01 SEC18: SEC18
0x40033164 C   FIELD 19w01 SEC19: SEC19
0x40033164 C   FIELD 20w01 SEC20: SEC20
0x40033164 C   FIELD 21w01 SEC21: SEC21
0x40033164 C   FIELD 22w01 SEC22: SEC22
0x40033164 C   FIELD 23w01 SEC23: SEC23
0x40033164 C   FIELD 24w01 SEC24: SEC24
0x40033164 C   FIELD 25w01 SEC25: SEC25
0x40033164 C   FIELD 26w01 SEC26: SEC26
0x40033164 C   FIELD 27w01 SEC27: SEC27
0x40033164 C   FIELD 28w01 SEC28: SEC28
0x40033164 C   FIELD 29w01 SEC29: SEC29
0x40033164 C   FIELD 30w01 SEC30: SEC30
0x40033164 C   FIELD 31w01 SEC31: SEC31
0x40033168 B  REGISTER MPCBB2_SECCFGR26 (rw): MPCBBx security configuration for super-block x register
0x40033168 C   FIELD 00w01 SEC0: SEC0
0x40033168 C   FIELD 01w01 SEC1: SEC1
0x40033168 C   FIELD 02w01 SEC2: SEC2
0x40033168 C   FIELD 03w01 SEC3: SEC3
0x40033168 C   FIELD 04w01 SEC4: SEC4
0x40033168 C   FIELD 05w01 SEC5: SEC5
0x40033168 C   FIELD 06w01 SEC6: SEC6
0x40033168 C   FIELD 07w01 SEC7: SEC7
0x40033168 C   FIELD 08w01 SEC8: SEC8
0x40033168 C   FIELD 09w01 SEC9: SEC9
0x40033168 C   FIELD 10w01 SEC10: SEC10
0x40033168 C   FIELD 11w01 SEC11: SEC11
0x40033168 C   FIELD 12w01 SEC12: SEC12
0x40033168 C   FIELD 13w01 SEC13: SEC13
0x40033168 C   FIELD 14w01 SEC14: SEC14
0x40033168 C   FIELD 15w01 SEC15: SEC15
0x40033168 C   FIELD 16w01 SEC16: SEC16
0x40033168 C   FIELD 17w01 SEC17: SEC17
0x40033168 C   FIELD 18w01 SEC18: SEC18
0x40033168 C   FIELD 19w01 SEC19: SEC19
0x40033168 C   FIELD 20w01 SEC20: SEC20
0x40033168 C   FIELD 21w01 SEC21: SEC21
0x40033168 C   FIELD 22w01 SEC22: SEC22
0x40033168 C   FIELD 23w01 SEC23: SEC23
0x40033168 C   FIELD 24w01 SEC24: SEC24
0x40033168 C   FIELD 25w01 SEC25: SEC25
0x40033168 C   FIELD 26w01 SEC26: SEC26
0x40033168 C   FIELD 27w01 SEC27: SEC27
0x40033168 C   FIELD 28w01 SEC28: SEC28
0x40033168 C   FIELD 29w01 SEC29: SEC29
0x40033168 C   FIELD 30w01 SEC30: SEC30
0x40033168 C   FIELD 31w01 SEC31: SEC31
0x4003316C B  REGISTER MPCBB2_SECCFGR27 (rw): MPCBBx security configuration for super-block x register
0x4003316C C   FIELD 00w01 SEC0: SEC0
0x4003316C C   FIELD 01w01 SEC1: SEC1
0x4003316C C   FIELD 02w01 SEC2: SEC2
0x4003316C C   FIELD 03w01 SEC3: SEC3
0x4003316C C   FIELD 04w01 SEC4: SEC4
0x4003316C C   FIELD 05w01 SEC5: SEC5
0x4003316C C   FIELD 06w01 SEC6: SEC6
0x4003316C C   FIELD 07w01 SEC7: SEC7
0x4003316C C   FIELD 08w01 SEC8: SEC8
0x4003316C C   FIELD 09w01 SEC9: SEC9
0x4003316C C   FIELD 10w01 SEC10: SEC10
0x4003316C C   FIELD 11w01 SEC11: SEC11
0x4003316C C   FIELD 12w01 SEC12: SEC12
0x4003316C C   FIELD 13w01 SEC13: SEC13
0x4003316C C   FIELD 14w01 SEC14: SEC14
0x4003316C C   FIELD 15w01 SEC15: SEC15
0x4003316C C   FIELD 16w01 SEC16: SEC16
0x4003316C C   FIELD 17w01 SEC17: SEC17
0x4003316C C   FIELD 18w01 SEC18: SEC18
0x4003316C C   FIELD 19w01 SEC19: SEC19
0x4003316C C   FIELD 20w01 SEC20: SEC20
0x4003316C C   FIELD 21w01 SEC21: SEC21
0x4003316C C   FIELD 22w01 SEC22: SEC22
0x4003316C C   FIELD 23w01 SEC23: SEC23
0x4003316C C   FIELD 24w01 SEC24: SEC24
0x4003316C C   FIELD 25w01 SEC25: SEC25
0x4003316C C   FIELD 26w01 SEC26: SEC26
0x4003316C C   FIELD 27w01 SEC27: SEC27
0x4003316C C   FIELD 28w01 SEC28: SEC28
0x4003316C C   FIELD 29w01 SEC29: SEC29
0x4003316C C   FIELD 30w01 SEC30: SEC30
0x4003316C C   FIELD 31w01 SEC31: SEC31
0x40033170 B  REGISTER MPCBB2_SECCFGR28 (rw): MPCBBx security configuration for super-block x register
0x40033170 C   FIELD 00w01 SEC0: SEC0
0x40033170 C   FIELD 01w01 SEC1: SEC1
0x40033170 C   FIELD 02w01 SEC2: SEC2
0x40033170 C   FIELD 03w01 SEC3: SEC3
0x40033170 C   FIELD 04w01 SEC4: SEC4
0x40033170 C   FIELD 05w01 SEC5: SEC5
0x40033170 C   FIELD 06w01 SEC6: SEC6
0x40033170 C   FIELD 07w01 SEC7: SEC7
0x40033170 C   FIELD 08w01 SEC8: SEC8
0x40033170 C   FIELD 09w01 SEC9: SEC9
0x40033170 C   FIELD 10w01 SEC10: SEC10
0x40033170 C   FIELD 11w01 SEC11: SEC11
0x40033170 C   FIELD 12w01 SEC12: SEC12
0x40033170 C   FIELD 13w01 SEC13: SEC13
0x40033170 C   FIELD 14w01 SEC14: SEC14
0x40033170 C   FIELD 15w01 SEC15: SEC15
0x40033170 C   FIELD 16w01 SEC16: SEC16
0x40033170 C   FIELD 17w01 SEC17: SEC17
0x40033170 C   FIELD 18w01 SEC18: SEC18
0x40033170 C   FIELD 19w01 SEC19: SEC19
0x40033170 C   FIELD 20w01 SEC20: SEC20
0x40033170 C   FIELD 21w01 SEC21: SEC21
0x40033170 C   FIELD 22w01 SEC22: SEC22
0x40033170 C   FIELD 23w01 SEC23: SEC23
0x40033170 C   FIELD 24w01 SEC24: SEC24
0x40033170 C   FIELD 25w01 SEC25: SEC25
0x40033170 C   FIELD 26w01 SEC26: SEC26
0x40033170 C   FIELD 27w01 SEC27: SEC27
0x40033170 C   FIELD 28w01 SEC28: SEC28
0x40033170 C   FIELD 29w01 SEC29: SEC29
0x40033170 C   FIELD 30w01 SEC30: SEC30
0x40033170 C   FIELD 31w01 SEC31: SEC31
0x40033174 B  REGISTER MPCBB2_SECCFGR29 (rw): MPCBBx security configuration for super-block x register
0x40033174 C   FIELD 00w01 SEC0: SEC0
0x40033174 C   FIELD 01w01 SEC1: SEC1
0x40033174 C   FIELD 02w01 SEC2: SEC2
0x40033174 C   FIELD 03w01 SEC3: SEC3
0x40033174 C   FIELD 04w01 SEC4: SEC4
0x40033174 C   FIELD 05w01 SEC5: SEC5
0x40033174 C   FIELD 06w01 SEC6: SEC6
0x40033174 C   FIELD 07w01 SEC7: SEC7
0x40033174 C   FIELD 08w01 SEC8: SEC8
0x40033174 C   FIELD 09w01 SEC9: SEC9
0x40033174 C   FIELD 10w01 SEC10: SEC10
0x40033174 C   FIELD 11w01 SEC11: SEC11
0x40033174 C   FIELD 12w01 SEC12: SEC12
0x40033174 C   FIELD 13w01 SEC13: SEC13
0x40033174 C   FIELD 14w01 SEC14: SEC14
0x40033174 C   FIELD 15w01 SEC15: SEC15
0x40033174 C   FIELD 16w01 SEC16: SEC16
0x40033174 C   FIELD 17w01 SEC17: SEC17
0x40033174 C   FIELD 18w01 SEC18: SEC18
0x40033174 C   FIELD 19w01 SEC19: SEC19
0x40033174 C   FIELD 20w01 SEC20: SEC20
0x40033174 C   FIELD 21w01 SEC21: SEC21
0x40033174 C   FIELD 22w01 SEC22: SEC22
0x40033174 C   FIELD 23w01 SEC23: SEC23
0x40033174 C   FIELD 24w01 SEC24: SEC24
0x40033174 C   FIELD 25w01 SEC25: SEC25
0x40033174 C   FIELD 26w01 SEC26: SEC26
0x40033174 C   FIELD 27w01 SEC27: SEC27
0x40033174 C   FIELD 28w01 SEC28: SEC28
0x40033174 C   FIELD 29w01 SEC29: SEC29
0x40033174 C   FIELD 30w01 SEC30: SEC30
0x40033174 C   FIELD 31w01 SEC31: SEC31
0x40033178 B  REGISTER MPCBB2_SECCFGR30 (rw): MPCBBx security configuration for super-block x register
0x40033178 C   FIELD 00w01 SEC0: SEC0
0x40033178 C   FIELD 01w01 SEC1: SEC1
0x40033178 C   FIELD 02w01 SEC2: SEC2
0x40033178 C   FIELD 03w01 SEC3: SEC3
0x40033178 C   FIELD 04w01 SEC4: SEC4
0x40033178 C   FIELD 05w01 SEC5: SEC5
0x40033178 C   FIELD 06w01 SEC6: SEC6
0x40033178 C   FIELD 07w01 SEC7: SEC7
0x40033178 C   FIELD 08w01 SEC8: SEC8
0x40033178 C   FIELD 09w01 SEC9: SEC9
0x40033178 C   FIELD 10w01 SEC10: SEC10
0x40033178 C   FIELD 11w01 SEC11: SEC11
0x40033178 C   FIELD 12w01 SEC12: SEC12
0x40033178 C   FIELD 13w01 SEC13: SEC13
0x40033178 C   FIELD 14w01 SEC14: SEC14
0x40033178 C   FIELD 15w01 SEC15: SEC15
0x40033178 C   FIELD 16w01 SEC16: SEC16
0x40033178 C   FIELD 17w01 SEC17: SEC17
0x40033178 C   FIELD 18w01 SEC18: SEC18
0x40033178 C   FIELD 19w01 SEC19: SEC19
0x40033178 C   FIELD 20w01 SEC20: SEC20
0x40033178 C   FIELD 21w01 SEC21: SEC21
0x40033178 C   FIELD 22w01 SEC22: SEC22
0x40033178 C   FIELD 23w01 SEC23: SEC23
0x40033178 C   FIELD 24w01 SEC24: SEC24
0x40033178 C   FIELD 25w01 SEC25: SEC25
0x40033178 C   FIELD 26w01 SEC26: SEC26
0x40033178 C   FIELD 27w01 SEC27: SEC27
0x40033178 C   FIELD 28w01 SEC28: SEC28
0x40033178 C   FIELD 29w01 SEC29: SEC29
0x40033178 C   FIELD 30w01 SEC30: SEC30
0x40033178 C   FIELD 31w01 SEC31: SEC31
0x4003317C B  REGISTER MPCBB2_SECCFGR31 (rw): MPCBBx security configuration for super-block x register
0x4003317C C   FIELD 00w01 SEC0: SEC0
0x4003317C C   FIELD 01w01 SEC1: SEC1
0x4003317C C   FIELD 02w01 SEC2: SEC2
0x4003317C C   FIELD 03w01 SEC3: SEC3
0x4003317C C   FIELD 04w01 SEC4: SEC4
0x4003317C C   FIELD 05w01 SEC5: SEC5
0x4003317C C   FIELD 06w01 SEC6: SEC6
0x4003317C C   FIELD 07w01 SEC7: SEC7
0x4003317C C   FIELD 08w01 SEC8: SEC8
0x4003317C C   FIELD 09w01 SEC9: SEC9
0x4003317C C   FIELD 10w01 SEC10: SEC10
0x4003317C C   FIELD 11w01 SEC11: SEC11
0x4003317C C   FIELD 12w01 SEC12: SEC12
0x4003317C C   FIELD 13w01 SEC13: SEC13
0x4003317C C   FIELD 14w01 SEC14: SEC14
0x4003317C C   FIELD 15w01 SEC15: SEC15
0x4003317C C   FIELD 16w01 SEC16: SEC16
0x4003317C C   FIELD 17w01 SEC17: SEC17
0x4003317C C   FIELD 18w01 SEC18: SEC18
0x4003317C C   FIELD 19w01 SEC19: SEC19
0x4003317C C   FIELD 20w01 SEC20: SEC20
0x4003317C C   FIELD 21w01 SEC21: SEC21
0x4003317C C   FIELD 22w01 SEC22: SEC22
0x4003317C C   FIELD 23w01 SEC23: SEC23
0x4003317C C   FIELD 24w01 SEC24: SEC24
0x4003317C C   FIELD 25w01 SEC25: SEC25
0x4003317C C   FIELD 26w01 SEC26: SEC26
0x4003317C C   FIELD 27w01 SEC27: SEC27
0x4003317C C   FIELD 28w01 SEC28: SEC28
0x4003317C C   FIELD 29w01 SEC29: SEC29
0x4003317C C   FIELD 30w01 SEC30: SEC30
0x4003317C C   FIELD 31w01 SEC31: SEC31
0x40033200 B  REGISTER MPCBB2_PRIVCFGR0 (rw): MPCBB privileged configuration for super-block x register
0x40033200 C   FIELD 00w01 PRIV0: PRIV0
0x40033200 C   FIELD 01w01 PRIV1: PRIV1
0x40033200 C   FIELD 02w01 PRIV2: PRIV2
0x40033200 C   FIELD 03w01 PRIV3: PRIV3
0x40033200 C   FIELD 04w01 PRIV4: PRIV4
0x40033200 C   FIELD 05w01 PRIV5: PRIV5
0x40033200 C   FIELD 06w01 PRIV6: PRIV6
0x40033200 C   FIELD 07w01 PRIV7: PRIV7
0x40033200 C   FIELD 08w01 PRIV8: PRIV8
0x40033200 C   FIELD 09w01 PRIV9: PRIV9
0x40033200 C   FIELD 10w01 PRIV10: PRIV10
0x40033200 C   FIELD 11w01 PRIV11: PRIV11
0x40033200 C   FIELD 12w01 PRIV12: PRIV12
0x40033200 C   FIELD 13w01 PRIV13: PRIV13
0x40033200 C   FIELD 14w01 PRIV14: PRIV14
0x40033200 C   FIELD 15w01 PRIV15: PRIV15
0x40033200 C   FIELD 16w01 PRIV16: PRIV16
0x40033200 C   FIELD 17w01 PRIV17: PRIV17
0x40033200 C   FIELD 18w01 PRIV18: PRIV18
0x40033200 C   FIELD 19w01 PRIV19: PRIV19
0x40033200 C   FIELD 20w01 PRIV20: PRIV20
0x40033200 C   FIELD 21w01 PRIV21: PRIV21
0x40033200 C   FIELD 22w01 PRIV22: PRIV22
0x40033200 C   FIELD 23w01 PRIV23: PRIV23
0x40033200 C   FIELD 24w01 PRIV24: PRIV24
0x40033200 C   FIELD 25w01 PRIV25: PRIV25
0x40033200 C   FIELD 26w01 PRIV26: PRIV26
0x40033200 C   FIELD 27w01 PRIV27: PRIV27
0x40033200 C   FIELD 28w01 PRIV28: PRIV28
0x40033200 C   FIELD 29w01 PRIV29: PRIV29
0x40033200 C   FIELD 30w01 PRIV30: PRIV30
0x40033200 C   FIELD 31w01 PRIV31: PRIV31
0x40033204 B  REGISTER MPCBB2_PRIVCFGR1 (rw): MPCBB privileged configuration for super-block x register
0x40033204 C   FIELD 00w01 PRIV0: PRIV0
0x40033204 C   FIELD 01w01 PRIV1: PRIV1
0x40033204 C   FIELD 02w01 PRIV2: PRIV2
0x40033204 C   FIELD 03w01 PRIV3: PRIV3
0x40033204 C   FIELD 04w01 PRIV4: PRIV4
0x40033204 C   FIELD 05w01 PRIV5: PRIV5
0x40033204 C   FIELD 06w01 PRIV6: PRIV6
0x40033204 C   FIELD 07w01 PRIV7: PRIV7
0x40033204 C   FIELD 08w01 PRIV8: PRIV8
0x40033204 C   FIELD 09w01 PRIV9: PRIV9
0x40033204 C   FIELD 10w01 PRIV10: PRIV10
0x40033204 C   FIELD 11w01 PRIV11: PRIV11
0x40033204 C   FIELD 12w01 PRIV12: PRIV12
0x40033204 C   FIELD 13w01 PRIV13: PRIV13
0x40033204 C   FIELD 14w01 PRIV14: PRIV14
0x40033204 C   FIELD 15w01 PRIV15: PRIV15
0x40033204 C   FIELD 16w01 PRIV16: PRIV16
0x40033204 C   FIELD 17w01 PRIV17: PRIV17
0x40033204 C   FIELD 18w01 PRIV18: PRIV18
0x40033204 C   FIELD 19w01 PRIV19: PRIV19
0x40033204 C   FIELD 20w01 PRIV20: PRIV20
0x40033204 C   FIELD 21w01 PRIV21: PRIV21
0x40033204 C   FIELD 22w01 PRIV22: PRIV22
0x40033204 C   FIELD 23w01 PRIV23: PRIV23
0x40033204 C   FIELD 24w01 PRIV24: PRIV24
0x40033204 C   FIELD 25w01 PRIV25: PRIV25
0x40033204 C   FIELD 26w01 PRIV26: PRIV26
0x40033204 C   FIELD 27w01 PRIV27: PRIV27
0x40033204 C   FIELD 28w01 PRIV28: PRIV28
0x40033204 C   FIELD 29w01 PRIV29: PRIV29
0x40033204 C   FIELD 30w01 PRIV30: PRIV30
0x40033204 C   FIELD 31w01 PRIV31: PRIV31
0x40033208 B  REGISTER MPCBB2_PRIVCFGR2 (rw): MPCBB privileged configuration for super-block x register
0x40033208 C   FIELD 00w01 PRIV0: PRIV0
0x40033208 C   FIELD 01w01 PRIV1: PRIV1
0x40033208 C   FIELD 02w01 PRIV2: PRIV2
0x40033208 C   FIELD 03w01 PRIV3: PRIV3
0x40033208 C   FIELD 04w01 PRIV4: PRIV4
0x40033208 C   FIELD 05w01 PRIV5: PRIV5
0x40033208 C   FIELD 06w01 PRIV6: PRIV6
0x40033208 C   FIELD 07w01 PRIV7: PRIV7
0x40033208 C   FIELD 08w01 PRIV8: PRIV8
0x40033208 C   FIELD 09w01 PRIV9: PRIV9
0x40033208 C   FIELD 10w01 PRIV10: PRIV10
0x40033208 C   FIELD 11w01 PRIV11: PRIV11
0x40033208 C   FIELD 12w01 PRIV12: PRIV12
0x40033208 C   FIELD 13w01 PRIV13: PRIV13
0x40033208 C   FIELD 14w01 PRIV14: PRIV14
0x40033208 C   FIELD 15w01 PRIV15: PRIV15
0x40033208 C   FIELD 16w01 PRIV16: PRIV16
0x40033208 C   FIELD 17w01 PRIV17: PRIV17
0x40033208 C   FIELD 18w01 PRIV18: PRIV18
0x40033208 C   FIELD 19w01 PRIV19: PRIV19
0x40033208 C   FIELD 20w01 PRIV20: PRIV20
0x40033208 C   FIELD 21w01 PRIV21: PRIV21
0x40033208 C   FIELD 22w01 PRIV22: PRIV22
0x40033208 C   FIELD 23w01 PRIV23: PRIV23
0x40033208 C   FIELD 24w01 PRIV24: PRIV24
0x40033208 C   FIELD 25w01 PRIV25: PRIV25
0x40033208 C   FIELD 26w01 PRIV26: PRIV26
0x40033208 C   FIELD 27w01 PRIV27: PRIV27
0x40033208 C   FIELD 28w01 PRIV28: PRIV28
0x40033208 C   FIELD 29w01 PRIV29: PRIV29
0x40033208 C   FIELD 30w01 PRIV30: PRIV30
0x40033208 C   FIELD 31w01 PRIV31: PRIV31
0x4003320C B  REGISTER MPCBB2_PRIVCFGR3 (rw): MPCBB privileged configuration for super-block x register
0x4003320C C   FIELD 00w01 PRIV0: PRIV0
0x4003320C C   FIELD 01w01 PRIV1: PRIV1
0x4003320C C   FIELD 02w01 PRIV2: PRIV2
0x4003320C C   FIELD 03w01 PRIV3: PRIV3
0x4003320C C   FIELD 04w01 PRIV4: PRIV4
0x4003320C C   FIELD 05w01 PRIV5: PRIV5
0x4003320C C   FIELD 06w01 PRIV6: PRIV6
0x4003320C C   FIELD 07w01 PRIV7: PRIV7
0x4003320C C   FIELD 08w01 PRIV8: PRIV8
0x4003320C C   FIELD 09w01 PRIV9: PRIV9
0x4003320C C   FIELD 10w01 PRIV10: PRIV10
0x4003320C C   FIELD 11w01 PRIV11: PRIV11
0x4003320C C   FIELD 12w01 PRIV12: PRIV12
0x4003320C C   FIELD 13w01 PRIV13: PRIV13
0x4003320C C   FIELD 14w01 PRIV14: PRIV14
0x4003320C C   FIELD 15w01 PRIV15: PRIV15
0x4003320C C   FIELD 16w01 PRIV16: PRIV16
0x4003320C C   FIELD 17w01 PRIV17: PRIV17
0x4003320C C   FIELD 18w01 PRIV18: PRIV18
0x4003320C C   FIELD 19w01 PRIV19: PRIV19
0x4003320C C   FIELD 20w01 PRIV20: PRIV20
0x4003320C C   FIELD 21w01 PRIV21: PRIV21
0x4003320C C   FIELD 22w01 PRIV22: PRIV22
0x4003320C C   FIELD 23w01 PRIV23: PRIV23
0x4003320C C   FIELD 24w01 PRIV24: PRIV24
0x4003320C C   FIELD 25w01 PRIV25: PRIV25
0x4003320C C   FIELD 26w01 PRIV26: PRIV26
0x4003320C C   FIELD 27w01 PRIV27: PRIV27
0x4003320C C   FIELD 28w01 PRIV28: PRIV28
0x4003320C C   FIELD 29w01 PRIV29: PRIV29
0x4003320C C   FIELD 30w01 PRIV30: PRIV30
0x4003320C C   FIELD 31w01 PRIV31: PRIV31
0x40033210 B  REGISTER MPCBB2_PRIVCFGR4 (rw): MPCBB privileged configuration for super-block x register
0x40033210 C   FIELD 00w01 PRIV0: PRIV0
0x40033210 C   FIELD 01w01 PRIV1: PRIV1
0x40033210 C   FIELD 02w01 PRIV2: PRIV2
0x40033210 C   FIELD 03w01 PRIV3: PRIV3
0x40033210 C   FIELD 04w01 PRIV4: PRIV4
0x40033210 C   FIELD 05w01 PRIV5: PRIV5
0x40033210 C   FIELD 06w01 PRIV6: PRIV6
0x40033210 C   FIELD 07w01 PRIV7: PRIV7
0x40033210 C   FIELD 08w01 PRIV8: PRIV8
0x40033210 C   FIELD 09w01 PRIV9: PRIV9
0x40033210 C   FIELD 10w01 PRIV10: PRIV10
0x40033210 C   FIELD 11w01 PRIV11: PRIV11
0x40033210 C   FIELD 12w01 PRIV12: PRIV12
0x40033210 C   FIELD 13w01 PRIV13: PRIV13
0x40033210 C   FIELD 14w01 PRIV14: PRIV14
0x40033210 C   FIELD 15w01 PRIV15: PRIV15
0x40033210 C   FIELD 16w01 PRIV16: PRIV16
0x40033210 C   FIELD 17w01 PRIV17: PRIV17
0x40033210 C   FIELD 18w01 PRIV18: PRIV18
0x40033210 C   FIELD 19w01 PRIV19: PRIV19
0x40033210 C   FIELD 20w01 PRIV20: PRIV20
0x40033210 C   FIELD 21w01 PRIV21: PRIV21
0x40033210 C   FIELD 22w01 PRIV22: PRIV22
0x40033210 C   FIELD 23w01 PRIV23: PRIV23
0x40033210 C   FIELD 24w01 PRIV24: PRIV24
0x40033210 C   FIELD 25w01 PRIV25: PRIV25
0x40033210 C   FIELD 26w01 PRIV26: PRIV26
0x40033210 C   FIELD 27w01 PRIV27: PRIV27
0x40033210 C   FIELD 28w01 PRIV28: PRIV28
0x40033210 C   FIELD 29w01 PRIV29: PRIV29
0x40033210 C   FIELD 30w01 PRIV30: PRIV30
0x40033210 C   FIELD 31w01 PRIV31: PRIV31
0x40033214 B  REGISTER MPCBB2_PRIVCFGR5 (rw): MPCBB privileged configuration for super-block x register
0x40033214 C   FIELD 00w01 PRIV0: PRIV0
0x40033214 C   FIELD 01w01 PRIV1: PRIV1
0x40033214 C   FIELD 02w01 PRIV2: PRIV2
0x40033214 C   FIELD 03w01 PRIV3: PRIV3
0x40033214 C   FIELD 04w01 PRIV4: PRIV4
0x40033214 C   FIELD 05w01 PRIV5: PRIV5
0x40033214 C   FIELD 06w01 PRIV6: PRIV6
0x40033214 C   FIELD 07w01 PRIV7: PRIV7
0x40033214 C   FIELD 08w01 PRIV8: PRIV8
0x40033214 C   FIELD 09w01 PRIV9: PRIV9
0x40033214 C   FIELD 10w01 PRIV10: PRIV10
0x40033214 C   FIELD 11w01 PRIV11: PRIV11
0x40033214 C   FIELD 12w01 PRIV12: PRIV12
0x40033214 C   FIELD 13w01 PRIV13: PRIV13
0x40033214 C   FIELD 14w01 PRIV14: PRIV14
0x40033214 C   FIELD 15w01 PRIV15: PRIV15
0x40033214 C   FIELD 16w01 PRIV16: PRIV16
0x40033214 C   FIELD 17w01 PRIV17: PRIV17
0x40033214 C   FIELD 18w01 PRIV18: PRIV18
0x40033214 C   FIELD 19w01 PRIV19: PRIV19
0x40033214 C   FIELD 20w01 PRIV20: PRIV20
0x40033214 C   FIELD 21w01 PRIV21: PRIV21
0x40033214 C   FIELD 22w01 PRIV22: PRIV22
0x40033214 C   FIELD 23w01 PRIV23: PRIV23
0x40033214 C   FIELD 24w01 PRIV24: PRIV24
0x40033214 C   FIELD 25w01 PRIV25: PRIV25
0x40033214 C   FIELD 26w01 PRIV26: PRIV26
0x40033214 C   FIELD 27w01 PRIV27: PRIV27
0x40033214 C   FIELD 28w01 PRIV28: PRIV28
0x40033214 C   FIELD 29w01 PRIV29: PRIV29
0x40033214 C   FIELD 30w01 PRIV30: PRIV30
0x40033214 C   FIELD 31w01 PRIV31: PRIV31
0x40033218 B  REGISTER MPCBB2_PRIVCFGR6 (rw): MPCBB privileged configuration for super-block x register
0x40033218 C   FIELD 00w01 PRIV0: PRIV0
0x40033218 C   FIELD 01w01 PRIV1: PRIV1
0x40033218 C   FIELD 02w01 PRIV2: PRIV2
0x40033218 C   FIELD 03w01 PRIV3: PRIV3
0x40033218 C   FIELD 04w01 PRIV4: PRIV4
0x40033218 C   FIELD 05w01 PRIV5: PRIV5
0x40033218 C   FIELD 06w01 PRIV6: PRIV6
0x40033218 C   FIELD 07w01 PRIV7: PRIV7
0x40033218 C   FIELD 08w01 PRIV8: PRIV8
0x40033218 C   FIELD 09w01 PRIV9: PRIV9
0x40033218 C   FIELD 10w01 PRIV10: PRIV10
0x40033218 C   FIELD 11w01 PRIV11: PRIV11
0x40033218 C   FIELD 12w01 PRIV12: PRIV12
0x40033218 C   FIELD 13w01 PRIV13: PRIV13
0x40033218 C   FIELD 14w01 PRIV14: PRIV14
0x40033218 C   FIELD 15w01 PRIV15: PRIV15
0x40033218 C   FIELD 16w01 PRIV16: PRIV16
0x40033218 C   FIELD 17w01 PRIV17: PRIV17
0x40033218 C   FIELD 18w01 PRIV18: PRIV18
0x40033218 C   FIELD 19w01 PRIV19: PRIV19
0x40033218 C   FIELD 20w01 PRIV20: PRIV20
0x40033218 C   FIELD 21w01 PRIV21: PRIV21
0x40033218 C   FIELD 22w01 PRIV22: PRIV22
0x40033218 C   FIELD 23w01 PRIV23: PRIV23
0x40033218 C   FIELD 24w01 PRIV24: PRIV24
0x40033218 C   FIELD 25w01 PRIV25: PRIV25
0x40033218 C   FIELD 26w01 PRIV26: PRIV26
0x40033218 C   FIELD 27w01 PRIV27: PRIV27
0x40033218 C   FIELD 28w01 PRIV28: PRIV28
0x40033218 C   FIELD 29w01 PRIV29: PRIV29
0x40033218 C   FIELD 30w01 PRIV30: PRIV30
0x40033218 C   FIELD 31w01 PRIV31: PRIV31
0x4003321C B  REGISTER MPCBB2_PRIVCFGR7 (rw): MPCBB privileged configuration for super-block x register
0x4003321C C   FIELD 00w01 PRIV0: PRIV0
0x4003321C C   FIELD 01w01 PRIV1: PRIV1
0x4003321C C   FIELD 02w01 PRIV2: PRIV2
0x4003321C C   FIELD 03w01 PRIV3: PRIV3
0x4003321C C   FIELD 04w01 PRIV4: PRIV4
0x4003321C C   FIELD 05w01 PRIV5: PRIV5
0x4003321C C   FIELD 06w01 PRIV6: PRIV6
0x4003321C C   FIELD 07w01 PRIV7: PRIV7
0x4003321C C   FIELD 08w01 PRIV8: PRIV8
0x4003321C C   FIELD 09w01 PRIV9: PRIV9
0x4003321C C   FIELD 10w01 PRIV10: PRIV10
0x4003321C C   FIELD 11w01 PRIV11: PRIV11
0x4003321C C   FIELD 12w01 PRIV12: PRIV12
0x4003321C C   FIELD 13w01 PRIV13: PRIV13
0x4003321C C   FIELD 14w01 PRIV14: PRIV14
0x4003321C C   FIELD 15w01 PRIV15: PRIV15
0x4003321C C   FIELD 16w01 PRIV16: PRIV16
0x4003321C C   FIELD 17w01 PRIV17: PRIV17
0x4003321C C   FIELD 18w01 PRIV18: PRIV18
0x4003321C C   FIELD 19w01 PRIV19: PRIV19
0x4003321C C   FIELD 20w01 PRIV20: PRIV20
0x4003321C C   FIELD 21w01 PRIV21: PRIV21
0x4003321C C   FIELD 22w01 PRIV22: PRIV22
0x4003321C C   FIELD 23w01 PRIV23: PRIV23
0x4003321C C   FIELD 24w01 PRIV24: PRIV24
0x4003321C C   FIELD 25w01 PRIV25: PRIV25
0x4003321C C   FIELD 26w01 PRIV26: PRIV26
0x4003321C C   FIELD 27w01 PRIV27: PRIV27
0x4003321C C   FIELD 28w01 PRIV28: PRIV28
0x4003321C C   FIELD 29w01 PRIV29: PRIV29
0x4003321C C   FIELD 30w01 PRIV30: PRIV30
0x4003321C C   FIELD 31w01 PRIV31: PRIV31
0x40033220 B  REGISTER MPCBB2_PRIVCFGR8 (rw): MPCBB privileged configuration for super-block x register
0x40033220 C   FIELD 00w01 PRIV0: PRIV0
0x40033220 C   FIELD 01w01 PRIV1: PRIV1
0x40033220 C   FIELD 02w01 PRIV2: PRIV2
0x40033220 C   FIELD 03w01 PRIV3: PRIV3
0x40033220 C   FIELD 04w01 PRIV4: PRIV4
0x40033220 C   FIELD 05w01 PRIV5: PRIV5
0x40033220 C   FIELD 06w01 PRIV6: PRIV6
0x40033220 C   FIELD 07w01 PRIV7: PRIV7
0x40033220 C   FIELD 08w01 PRIV8: PRIV8
0x40033220 C   FIELD 09w01 PRIV9: PRIV9
0x40033220 C   FIELD 10w01 PRIV10: PRIV10
0x40033220 C   FIELD 11w01 PRIV11: PRIV11
0x40033220 C   FIELD 12w01 PRIV12: PRIV12
0x40033220 C   FIELD 13w01 PRIV13: PRIV13
0x40033220 C   FIELD 14w01 PRIV14: PRIV14
0x40033220 C   FIELD 15w01 PRIV15: PRIV15
0x40033220 C   FIELD 16w01 PRIV16: PRIV16
0x40033220 C   FIELD 17w01 PRIV17: PRIV17
0x40033220 C   FIELD 18w01 PRIV18: PRIV18
0x40033220 C   FIELD 19w01 PRIV19: PRIV19
0x40033220 C   FIELD 20w01 PRIV20: PRIV20
0x40033220 C   FIELD 21w01 PRIV21: PRIV21
0x40033220 C   FIELD 22w01 PRIV22: PRIV22
0x40033220 C   FIELD 23w01 PRIV23: PRIV23
0x40033220 C   FIELD 24w01 PRIV24: PRIV24
0x40033220 C   FIELD 25w01 PRIV25: PRIV25
0x40033220 C   FIELD 26w01 PRIV26: PRIV26
0x40033220 C   FIELD 27w01 PRIV27: PRIV27
0x40033220 C   FIELD 28w01 PRIV28: PRIV28
0x40033220 C   FIELD 29w01 PRIV29: PRIV29
0x40033220 C   FIELD 30w01 PRIV30: PRIV30
0x40033220 C   FIELD 31w01 PRIV31: PRIV31
0x40033224 B  REGISTER MPCBB2_PRIVCFGR9 (rw): MPCBB privileged configuration for super-block x register
0x40033224 C   FIELD 00w01 PRIV0: PRIV0
0x40033224 C   FIELD 01w01 PRIV1: PRIV1
0x40033224 C   FIELD 02w01 PRIV2: PRIV2
0x40033224 C   FIELD 03w01 PRIV3: PRIV3
0x40033224 C   FIELD 04w01 PRIV4: PRIV4
0x40033224 C   FIELD 05w01 PRIV5: PRIV5
0x40033224 C   FIELD 06w01 PRIV6: PRIV6
0x40033224 C   FIELD 07w01 PRIV7: PRIV7
0x40033224 C   FIELD 08w01 PRIV8: PRIV8
0x40033224 C   FIELD 09w01 PRIV9: PRIV9
0x40033224 C   FIELD 10w01 PRIV10: PRIV10
0x40033224 C   FIELD 11w01 PRIV11: PRIV11
0x40033224 C   FIELD 12w01 PRIV12: PRIV12
0x40033224 C   FIELD 13w01 PRIV13: PRIV13
0x40033224 C   FIELD 14w01 PRIV14: PRIV14
0x40033224 C   FIELD 15w01 PRIV15: PRIV15
0x40033224 C   FIELD 16w01 PRIV16: PRIV16
0x40033224 C   FIELD 17w01 PRIV17: PRIV17
0x40033224 C   FIELD 18w01 PRIV18: PRIV18
0x40033224 C   FIELD 19w01 PRIV19: PRIV19
0x40033224 C   FIELD 20w01 PRIV20: PRIV20
0x40033224 C   FIELD 21w01 PRIV21: PRIV21
0x40033224 C   FIELD 22w01 PRIV22: PRIV22
0x40033224 C   FIELD 23w01 PRIV23: PRIV23
0x40033224 C   FIELD 24w01 PRIV24: PRIV24
0x40033224 C   FIELD 25w01 PRIV25: PRIV25
0x40033224 C   FIELD 26w01 PRIV26: PRIV26
0x40033224 C   FIELD 27w01 PRIV27: PRIV27
0x40033224 C   FIELD 28w01 PRIV28: PRIV28
0x40033224 C   FIELD 29w01 PRIV29: PRIV29
0x40033224 C   FIELD 30w01 PRIV30: PRIV30
0x40033224 C   FIELD 31w01 PRIV31: PRIV31
0x40033228 B  REGISTER MPCBB2_PRIVCFGR10 (rw): MPCBB privileged configuration for super-block x register
0x40033228 C   FIELD 00w01 PRIV0: PRIV0
0x40033228 C   FIELD 01w01 PRIV1: PRIV1
0x40033228 C   FIELD 02w01 PRIV2: PRIV2
0x40033228 C   FIELD 03w01 PRIV3: PRIV3
0x40033228 C   FIELD 04w01 PRIV4: PRIV4
0x40033228 C   FIELD 05w01 PRIV5: PRIV5
0x40033228 C   FIELD 06w01 PRIV6: PRIV6
0x40033228 C   FIELD 07w01 PRIV7: PRIV7
0x40033228 C   FIELD 08w01 PRIV8: PRIV8
0x40033228 C   FIELD 09w01 PRIV9: PRIV9
0x40033228 C   FIELD 10w01 PRIV10: PRIV10
0x40033228 C   FIELD 11w01 PRIV11: PRIV11
0x40033228 C   FIELD 12w01 PRIV12: PRIV12
0x40033228 C   FIELD 13w01 PRIV13: PRIV13
0x40033228 C   FIELD 14w01 PRIV14: PRIV14
0x40033228 C   FIELD 15w01 PRIV15: PRIV15
0x40033228 C   FIELD 16w01 PRIV16: PRIV16
0x40033228 C   FIELD 17w01 PRIV17: PRIV17
0x40033228 C   FIELD 18w01 PRIV18: PRIV18
0x40033228 C   FIELD 19w01 PRIV19: PRIV19
0x40033228 C   FIELD 20w01 PRIV20: PRIV20
0x40033228 C   FIELD 21w01 PRIV21: PRIV21
0x40033228 C   FIELD 22w01 PRIV22: PRIV22
0x40033228 C   FIELD 23w01 PRIV23: PRIV23
0x40033228 C   FIELD 24w01 PRIV24: PRIV24
0x40033228 C   FIELD 25w01 PRIV25: PRIV25
0x40033228 C   FIELD 26w01 PRIV26: PRIV26
0x40033228 C   FIELD 27w01 PRIV27: PRIV27
0x40033228 C   FIELD 28w01 PRIV28: PRIV28
0x40033228 C   FIELD 29w01 PRIV29: PRIV29
0x40033228 C   FIELD 30w01 PRIV30: PRIV30
0x40033228 C   FIELD 31w01 PRIV31: PRIV31
0x4003322C B  REGISTER MPCBB2_PRIVCFGR11 (rw): MPCBB privileged configuration for super-block x register
0x4003322C C   FIELD 00w01 PRIV0: PRIV0
0x4003322C C   FIELD 01w01 PRIV1: PRIV1
0x4003322C C   FIELD 02w01 PRIV2: PRIV2
0x4003322C C   FIELD 03w01 PRIV3: PRIV3
0x4003322C C   FIELD 04w01 PRIV4: PRIV4
0x4003322C C   FIELD 05w01 PRIV5: PRIV5
0x4003322C C   FIELD 06w01 PRIV6: PRIV6
0x4003322C C   FIELD 07w01 PRIV7: PRIV7
0x4003322C C   FIELD 08w01 PRIV8: PRIV8
0x4003322C C   FIELD 09w01 PRIV9: PRIV9
0x4003322C C   FIELD 10w01 PRIV10: PRIV10
0x4003322C C   FIELD 11w01 PRIV11: PRIV11
0x4003322C C   FIELD 12w01 PRIV12: PRIV12
0x4003322C C   FIELD 13w01 PRIV13: PRIV13
0x4003322C C   FIELD 14w01 PRIV14: PRIV14
0x4003322C C   FIELD 15w01 PRIV15: PRIV15
0x4003322C C   FIELD 16w01 PRIV16: PRIV16
0x4003322C C   FIELD 17w01 PRIV17: PRIV17
0x4003322C C   FIELD 18w01 PRIV18: PRIV18
0x4003322C C   FIELD 19w01 PRIV19: PRIV19
0x4003322C C   FIELD 20w01 PRIV20: PRIV20
0x4003322C C   FIELD 21w01 PRIV21: PRIV21
0x4003322C C   FIELD 22w01 PRIV22: PRIV22
0x4003322C C   FIELD 23w01 PRIV23: PRIV23
0x4003322C C   FIELD 24w01 PRIV24: PRIV24
0x4003322C C   FIELD 25w01 PRIV25: PRIV25
0x4003322C C   FIELD 26w01 PRIV26: PRIV26
0x4003322C C   FIELD 27w01 PRIV27: PRIV27
0x4003322C C   FIELD 28w01 PRIV28: PRIV28
0x4003322C C   FIELD 29w01 PRIV29: PRIV29
0x4003322C C   FIELD 30w01 PRIV30: PRIV30
0x4003322C C   FIELD 31w01 PRIV31: PRIV31
0x40033230 B  REGISTER MPCBB2_PRIVCFGR12 (rw): MPCBB privileged configuration for super-block x register
0x40033230 C   FIELD 00w01 PRIV0: PRIV0
0x40033230 C   FIELD 01w01 PRIV1: PRIV1
0x40033230 C   FIELD 02w01 PRIV2: PRIV2
0x40033230 C   FIELD 03w01 PRIV3: PRIV3
0x40033230 C   FIELD 04w01 PRIV4: PRIV4
0x40033230 C   FIELD 05w01 PRIV5: PRIV5
0x40033230 C   FIELD 06w01 PRIV6: PRIV6
0x40033230 C   FIELD 07w01 PRIV7: PRIV7
0x40033230 C   FIELD 08w01 PRIV8: PRIV8
0x40033230 C   FIELD 09w01 PRIV9: PRIV9
0x40033230 C   FIELD 10w01 PRIV10: PRIV10
0x40033230 C   FIELD 11w01 PRIV11: PRIV11
0x40033230 C   FIELD 12w01 PRIV12: PRIV12
0x40033230 C   FIELD 13w01 PRIV13: PRIV13
0x40033230 C   FIELD 14w01 PRIV14: PRIV14
0x40033230 C   FIELD 15w01 PRIV15: PRIV15
0x40033230 C   FIELD 16w01 PRIV16: PRIV16
0x40033230 C   FIELD 17w01 PRIV17: PRIV17
0x40033230 C   FIELD 18w01 PRIV18: PRIV18
0x40033230 C   FIELD 19w01 PRIV19: PRIV19
0x40033230 C   FIELD 20w01 PRIV20: PRIV20
0x40033230 C   FIELD 21w01 PRIV21: PRIV21
0x40033230 C   FIELD 22w01 PRIV22: PRIV22
0x40033230 C   FIELD 23w01 PRIV23: PRIV23
0x40033230 C   FIELD 24w01 PRIV24: PRIV24
0x40033230 C   FIELD 25w01 PRIV25: PRIV25
0x40033230 C   FIELD 26w01 PRIV26: PRIV26
0x40033230 C   FIELD 27w01 PRIV27: PRIV27
0x40033230 C   FIELD 28w01 PRIV28: PRIV28
0x40033230 C   FIELD 29w01 PRIV29: PRIV29
0x40033230 C   FIELD 30w01 PRIV30: PRIV30
0x40033230 C   FIELD 31w01 PRIV31: PRIV31
0x40033234 B  REGISTER MPCBB2_PRIVCFGR13 (rw): MPCBB privileged configuration for super-block x register
0x40033234 C   FIELD 00w01 PRIV0: PRIV0
0x40033234 C   FIELD 01w01 PRIV1: PRIV1
0x40033234 C   FIELD 02w01 PRIV2: PRIV2
0x40033234 C   FIELD 03w01 PRIV3: PRIV3
0x40033234 C   FIELD 04w01 PRIV4: PRIV4
0x40033234 C   FIELD 05w01 PRIV5: PRIV5
0x40033234 C   FIELD 06w01 PRIV6: PRIV6
0x40033234 C   FIELD 07w01 PRIV7: PRIV7
0x40033234 C   FIELD 08w01 PRIV8: PRIV8
0x40033234 C   FIELD 09w01 PRIV9: PRIV9
0x40033234 C   FIELD 10w01 PRIV10: PRIV10
0x40033234 C   FIELD 11w01 PRIV11: PRIV11
0x40033234 C   FIELD 12w01 PRIV12: PRIV12
0x40033234 C   FIELD 13w01 PRIV13: PRIV13
0x40033234 C   FIELD 14w01 PRIV14: PRIV14
0x40033234 C   FIELD 15w01 PRIV15: PRIV15
0x40033234 C   FIELD 16w01 PRIV16: PRIV16
0x40033234 C   FIELD 17w01 PRIV17: PRIV17
0x40033234 C   FIELD 18w01 PRIV18: PRIV18
0x40033234 C   FIELD 19w01 PRIV19: PRIV19
0x40033234 C   FIELD 20w01 PRIV20: PRIV20
0x40033234 C   FIELD 21w01 PRIV21: PRIV21
0x40033234 C   FIELD 22w01 PRIV22: PRIV22
0x40033234 C   FIELD 23w01 PRIV23: PRIV23
0x40033234 C   FIELD 24w01 PRIV24: PRIV24
0x40033234 C   FIELD 25w01 PRIV25: PRIV25
0x40033234 C   FIELD 26w01 PRIV26: PRIV26
0x40033234 C   FIELD 27w01 PRIV27: PRIV27
0x40033234 C   FIELD 28w01 PRIV28: PRIV28
0x40033234 C   FIELD 29w01 PRIV29: PRIV29
0x40033234 C   FIELD 30w01 PRIV30: PRIV30
0x40033234 C   FIELD 31w01 PRIV31: PRIV31
0x40033238 B  REGISTER MPCBB2_PRIVCFGR14 (rw): MPCBB privileged configuration for super-block x register
0x40033238 C   FIELD 00w01 PRIV0: PRIV0
0x40033238 C   FIELD 01w01 PRIV1: PRIV1
0x40033238 C   FIELD 02w01 PRIV2: PRIV2
0x40033238 C   FIELD 03w01 PRIV3: PRIV3
0x40033238 C   FIELD 04w01 PRIV4: PRIV4
0x40033238 C   FIELD 05w01 PRIV5: PRIV5
0x40033238 C   FIELD 06w01 PRIV6: PRIV6
0x40033238 C   FIELD 07w01 PRIV7: PRIV7
0x40033238 C   FIELD 08w01 PRIV8: PRIV8
0x40033238 C   FIELD 09w01 PRIV9: PRIV9
0x40033238 C   FIELD 10w01 PRIV10: PRIV10
0x40033238 C   FIELD 11w01 PRIV11: PRIV11
0x40033238 C   FIELD 12w01 PRIV12: PRIV12
0x40033238 C   FIELD 13w01 PRIV13: PRIV13
0x40033238 C   FIELD 14w01 PRIV14: PRIV14
0x40033238 C   FIELD 15w01 PRIV15: PRIV15
0x40033238 C   FIELD 16w01 PRIV16: PRIV16
0x40033238 C   FIELD 17w01 PRIV17: PRIV17
0x40033238 C   FIELD 18w01 PRIV18: PRIV18
0x40033238 C   FIELD 19w01 PRIV19: PRIV19
0x40033238 C   FIELD 20w01 PRIV20: PRIV20
0x40033238 C   FIELD 21w01 PRIV21: PRIV21
0x40033238 C   FIELD 22w01 PRIV22: PRIV22
0x40033238 C   FIELD 23w01 PRIV23: PRIV23
0x40033238 C   FIELD 24w01 PRIV24: PRIV24
0x40033238 C   FIELD 25w01 PRIV25: PRIV25
0x40033238 C   FIELD 26w01 PRIV26: PRIV26
0x40033238 C   FIELD 27w01 PRIV27: PRIV27
0x40033238 C   FIELD 28w01 PRIV28: PRIV28
0x40033238 C   FIELD 29w01 PRIV29: PRIV29
0x40033238 C   FIELD 30w01 PRIV30: PRIV30
0x40033238 C   FIELD 31w01 PRIV31: PRIV31
0x4003323C B  REGISTER MPCBB2_PRIVCFGR15 (rw): MPCBB privileged configuration for super-block x register
0x4003323C C   FIELD 00w01 PRIV0: PRIV0
0x4003323C C   FIELD 01w01 PRIV1: PRIV1
0x4003323C C   FIELD 02w01 PRIV2: PRIV2
0x4003323C C   FIELD 03w01 PRIV3: PRIV3
0x4003323C C   FIELD 04w01 PRIV4: PRIV4
0x4003323C C   FIELD 05w01 PRIV5: PRIV5
0x4003323C C   FIELD 06w01 PRIV6: PRIV6
0x4003323C C   FIELD 07w01 PRIV7: PRIV7
0x4003323C C   FIELD 08w01 PRIV8: PRIV8
0x4003323C C   FIELD 09w01 PRIV9: PRIV9
0x4003323C C   FIELD 10w01 PRIV10: PRIV10
0x4003323C C   FIELD 11w01 PRIV11: PRIV11
0x4003323C C   FIELD 12w01 PRIV12: PRIV12
0x4003323C C   FIELD 13w01 PRIV13: PRIV13
0x4003323C C   FIELD 14w01 PRIV14: PRIV14
0x4003323C C   FIELD 15w01 PRIV15: PRIV15
0x4003323C C   FIELD 16w01 PRIV16: PRIV16
0x4003323C C   FIELD 17w01 PRIV17: PRIV17
0x4003323C C   FIELD 18w01 PRIV18: PRIV18
0x4003323C C   FIELD 19w01 PRIV19: PRIV19
0x4003323C C   FIELD 20w01 PRIV20: PRIV20
0x4003323C C   FIELD 21w01 PRIV21: PRIV21
0x4003323C C   FIELD 22w01 PRIV22: PRIV22
0x4003323C C   FIELD 23w01 PRIV23: PRIV23
0x4003323C C   FIELD 24w01 PRIV24: PRIV24
0x4003323C C   FIELD 25w01 PRIV25: PRIV25
0x4003323C C   FIELD 26w01 PRIV26: PRIV26
0x4003323C C   FIELD 27w01 PRIV27: PRIV27
0x4003323C C   FIELD 28w01 PRIV28: PRIV28
0x4003323C C   FIELD 29w01 PRIV29: PRIV29
0x4003323C C   FIELD 30w01 PRIV30: PRIV30
0x4003323C C   FIELD 31w01 PRIV31: PRIV31
0x40033240 B  REGISTER MPCBB2_PRIVCFGR16 (rw): MPCBB privileged configuration for super-block x register
0x40033240 C   FIELD 00w01 PRIV0: PRIV0
0x40033240 C   FIELD 01w01 PRIV1: PRIV1
0x40033240 C   FIELD 02w01 PRIV2: PRIV2
0x40033240 C   FIELD 03w01 PRIV3: PRIV3
0x40033240 C   FIELD 04w01 PRIV4: PRIV4
0x40033240 C   FIELD 05w01 PRIV5: PRIV5
0x40033240 C   FIELD 06w01 PRIV6: PRIV6
0x40033240 C   FIELD 07w01 PRIV7: PRIV7
0x40033240 C   FIELD 08w01 PRIV8: PRIV8
0x40033240 C   FIELD 09w01 PRIV9: PRIV9
0x40033240 C   FIELD 10w01 PRIV10: PRIV10
0x40033240 C   FIELD 11w01 PRIV11: PRIV11
0x40033240 C   FIELD 12w01 PRIV12: PRIV12
0x40033240 C   FIELD 13w01 PRIV13: PRIV13
0x40033240 C   FIELD 14w01 PRIV14: PRIV14
0x40033240 C   FIELD 15w01 PRIV15: PRIV15
0x40033240 C   FIELD 16w01 PRIV16: PRIV16
0x40033240 C   FIELD 17w01 PRIV17: PRIV17
0x40033240 C   FIELD 18w01 PRIV18: PRIV18
0x40033240 C   FIELD 19w01 PRIV19: PRIV19
0x40033240 C   FIELD 20w01 PRIV20: PRIV20
0x40033240 C   FIELD 21w01 PRIV21: PRIV21
0x40033240 C   FIELD 22w01 PRIV22: PRIV22
0x40033240 C   FIELD 23w01 PRIV23: PRIV23
0x40033240 C   FIELD 24w01 PRIV24: PRIV24
0x40033240 C   FIELD 25w01 PRIV25: PRIV25
0x40033240 C   FIELD 26w01 PRIV26: PRIV26
0x40033240 C   FIELD 27w01 PRIV27: PRIV27
0x40033240 C   FIELD 28w01 PRIV28: PRIV28
0x40033240 C   FIELD 29w01 PRIV29: PRIV29
0x40033240 C   FIELD 30w01 PRIV30: PRIV30
0x40033240 C   FIELD 31w01 PRIV31: PRIV31
0x40033244 B  REGISTER MPCBB2_PRIVCFGR17 (rw): MPCBB privileged configuration for super-block x register
0x40033244 C   FIELD 00w01 PRIV0: PRIV0
0x40033244 C   FIELD 01w01 PRIV1: PRIV1
0x40033244 C   FIELD 02w01 PRIV2: PRIV2
0x40033244 C   FIELD 03w01 PRIV3: PRIV3
0x40033244 C   FIELD 04w01 PRIV4: PRIV4
0x40033244 C   FIELD 05w01 PRIV5: PRIV5
0x40033244 C   FIELD 06w01 PRIV6: PRIV6
0x40033244 C   FIELD 07w01 PRIV7: PRIV7
0x40033244 C   FIELD 08w01 PRIV8: PRIV8
0x40033244 C   FIELD 09w01 PRIV9: PRIV9
0x40033244 C   FIELD 10w01 PRIV10: PRIV10
0x40033244 C   FIELD 11w01 PRIV11: PRIV11
0x40033244 C   FIELD 12w01 PRIV12: PRIV12
0x40033244 C   FIELD 13w01 PRIV13: PRIV13
0x40033244 C   FIELD 14w01 PRIV14: PRIV14
0x40033244 C   FIELD 15w01 PRIV15: PRIV15
0x40033244 C   FIELD 16w01 PRIV16: PRIV16
0x40033244 C   FIELD 17w01 PRIV17: PRIV17
0x40033244 C   FIELD 18w01 PRIV18: PRIV18
0x40033244 C   FIELD 19w01 PRIV19: PRIV19
0x40033244 C   FIELD 20w01 PRIV20: PRIV20
0x40033244 C   FIELD 21w01 PRIV21: PRIV21
0x40033244 C   FIELD 22w01 PRIV22: PRIV22
0x40033244 C   FIELD 23w01 PRIV23: PRIV23
0x40033244 C   FIELD 24w01 PRIV24: PRIV24
0x40033244 C   FIELD 25w01 PRIV25: PRIV25
0x40033244 C   FIELD 26w01 PRIV26: PRIV26
0x40033244 C   FIELD 27w01 PRIV27: PRIV27
0x40033244 C   FIELD 28w01 PRIV28: PRIV28
0x40033244 C   FIELD 29w01 PRIV29: PRIV29
0x40033244 C   FIELD 30w01 PRIV30: PRIV30
0x40033244 C   FIELD 31w01 PRIV31: PRIV31
0x40033248 B  REGISTER MPCBB2_PRIVCFGR18 (rw): MPCBB privileged configuration for super-block x register
0x40033248 C   FIELD 00w01 PRIV0: PRIV0
0x40033248 C   FIELD 01w01 PRIV1: PRIV1
0x40033248 C   FIELD 02w01 PRIV2: PRIV2
0x40033248 C   FIELD 03w01 PRIV3: PRIV3
0x40033248 C   FIELD 04w01 PRIV4: PRIV4
0x40033248 C   FIELD 05w01 PRIV5: PRIV5
0x40033248 C   FIELD 06w01 PRIV6: PRIV6
0x40033248 C   FIELD 07w01 PRIV7: PRIV7
0x40033248 C   FIELD 08w01 PRIV8: PRIV8
0x40033248 C   FIELD 09w01 PRIV9: PRIV9
0x40033248 C   FIELD 10w01 PRIV10: PRIV10
0x40033248 C   FIELD 11w01 PRIV11: PRIV11
0x40033248 C   FIELD 12w01 PRIV12: PRIV12
0x40033248 C   FIELD 13w01 PRIV13: PRIV13
0x40033248 C   FIELD 14w01 PRIV14: PRIV14
0x40033248 C   FIELD 15w01 PRIV15: PRIV15
0x40033248 C   FIELD 16w01 PRIV16: PRIV16
0x40033248 C   FIELD 17w01 PRIV17: PRIV17
0x40033248 C   FIELD 18w01 PRIV18: PRIV18
0x40033248 C   FIELD 19w01 PRIV19: PRIV19
0x40033248 C   FIELD 20w01 PRIV20: PRIV20
0x40033248 C   FIELD 21w01 PRIV21: PRIV21
0x40033248 C   FIELD 22w01 PRIV22: PRIV22
0x40033248 C   FIELD 23w01 PRIV23: PRIV23
0x40033248 C   FIELD 24w01 PRIV24: PRIV24
0x40033248 C   FIELD 25w01 PRIV25: PRIV25
0x40033248 C   FIELD 26w01 PRIV26: PRIV26
0x40033248 C   FIELD 27w01 PRIV27: PRIV27
0x40033248 C   FIELD 28w01 PRIV28: PRIV28
0x40033248 C   FIELD 29w01 PRIV29: PRIV29
0x40033248 C   FIELD 30w01 PRIV30: PRIV30
0x40033248 C   FIELD 31w01 PRIV31: PRIV31
0x4003324C B  REGISTER MPCBB2_PRIVCFGR19 (rw): MPCBB privileged configuration for super-block x register
0x4003324C C   FIELD 00w01 PRIV0: PRIV0
0x4003324C C   FIELD 01w01 PRIV1: PRIV1
0x4003324C C   FIELD 02w01 PRIV2: PRIV2
0x4003324C C   FIELD 03w01 PRIV3: PRIV3
0x4003324C C   FIELD 04w01 PRIV4: PRIV4
0x4003324C C   FIELD 05w01 PRIV5: PRIV5
0x4003324C C   FIELD 06w01 PRIV6: PRIV6
0x4003324C C   FIELD 07w01 PRIV7: PRIV7
0x4003324C C   FIELD 08w01 PRIV8: PRIV8
0x4003324C C   FIELD 09w01 PRIV9: PRIV9
0x4003324C C   FIELD 10w01 PRIV10: PRIV10
0x4003324C C   FIELD 11w01 PRIV11: PRIV11
0x4003324C C   FIELD 12w01 PRIV12: PRIV12
0x4003324C C   FIELD 13w01 PRIV13: PRIV13
0x4003324C C   FIELD 14w01 PRIV14: PRIV14
0x4003324C C   FIELD 15w01 PRIV15: PRIV15
0x4003324C C   FIELD 16w01 PRIV16: PRIV16
0x4003324C C   FIELD 17w01 PRIV17: PRIV17
0x4003324C C   FIELD 18w01 PRIV18: PRIV18
0x4003324C C   FIELD 19w01 PRIV19: PRIV19
0x4003324C C   FIELD 20w01 PRIV20: PRIV20
0x4003324C C   FIELD 21w01 PRIV21: PRIV21
0x4003324C C   FIELD 22w01 PRIV22: PRIV22
0x4003324C C   FIELD 23w01 PRIV23: PRIV23
0x4003324C C   FIELD 24w01 PRIV24: PRIV24
0x4003324C C   FIELD 25w01 PRIV25: PRIV25
0x4003324C C   FIELD 26w01 PRIV26: PRIV26
0x4003324C C   FIELD 27w01 PRIV27: PRIV27
0x4003324C C   FIELD 28w01 PRIV28: PRIV28
0x4003324C C   FIELD 29w01 PRIV29: PRIV29
0x4003324C C   FIELD 30w01 PRIV30: PRIV30
0x4003324C C   FIELD 31w01 PRIV31: PRIV31
0x40033250 B  REGISTER MPCBB2_PRIVCFGR20 (rw): MPCBB privileged configuration for super-block x register
0x40033250 C   FIELD 00w01 PRIV0: PRIV0
0x40033250 C   FIELD 01w01 PRIV1: PRIV1
0x40033250 C   FIELD 02w01 PRIV2: PRIV2
0x40033250 C   FIELD 03w01 PRIV3: PRIV3
0x40033250 C   FIELD 04w01 PRIV4: PRIV4
0x40033250 C   FIELD 05w01 PRIV5: PRIV5
0x40033250 C   FIELD 06w01 PRIV6: PRIV6
0x40033250 C   FIELD 07w01 PRIV7: PRIV7
0x40033250 C   FIELD 08w01 PRIV8: PRIV8
0x40033250 C   FIELD 09w01 PRIV9: PRIV9
0x40033250 C   FIELD 10w01 PRIV10: PRIV10
0x40033250 C   FIELD 11w01 PRIV11: PRIV11
0x40033250 C   FIELD 12w01 PRIV12: PRIV12
0x40033250 C   FIELD 13w01 PRIV13: PRIV13
0x40033250 C   FIELD 14w01 PRIV14: PRIV14
0x40033250 C   FIELD 15w01 PRIV15: PRIV15
0x40033250 C   FIELD 16w01 PRIV16: PRIV16
0x40033250 C   FIELD 17w01 PRIV17: PRIV17
0x40033250 C   FIELD 18w01 PRIV18: PRIV18
0x40033250 C   FIELD 19w01 PRIV19: PRIV19
0x40033250 C   FIELD 20w01 PRIV20: PRIV20
0x40033250 C   FIELD 21w01 PRIV21: PRIV21
0x40033250 C   FIELD 22w01 PRIV22: PRIV22
0x40033250 C   FIELD 23w01 PRIV23: PRIV23
0x40033250 C   FIELD 24w01 PRIV24: PRIV24
0x40033250 C   FIELD 25w01 PRIV25: PRIV25
0x40033250 C   FIELD 26w01 PRIV26: PRIV26
0x40033250 C   FIELD 27w01 PRIV27: PRIV27
0x40033250 C   FIELD 28w01 PRIV28: PRIV28
0x40033250 C   FIELD 29w01 PRIV29: PRIV29
0x40033250 C   FIELD 30w01 PRIV30: PRIV30
0x40033250 C   FIELD 31w01 PRIV31: PRIV31
0x40033254 B  REGISTER MPCBB2_PRIVCFGR21 (rw): MPCBB privileged configuration for super-block x register
0x40033254 C   FIELD 00w01 PRIV0: PRIV0
0x40033254 C   FIELD 01w01 PRIV1: PRIV1
0x40033254 C   FIELD 02w01 PRIV2: PRIV2
0x40033254 C   FIELD 03w01 PRIV3: PRIV3
0x40033254 C   FIELD 04w01 PRIV4: PRIV4
0x40033254 C   FIELD 05w01 PRIV5: PRIV5
0x40033254 C   FIELD 06w01 PRIV6: PRIV6
0x40033254 C   FIELD 07w01 PRIV7: PRIV7
0x40033254 C   FIELD 08w01 PRIV8: PRIV8
0x40033254 C   FIELD 09w01 PRIV9: PRIV9
0x40033254 C   FIELD 10w01 PRIV10: PRIV10
0x40033254 C   FIELD 11w01 PRIV11: PRIV11
0x40033254 C   FIELD 12w01 PRIV12: PRIV12
0x40033254 C   FIELD 13w01 PRIV13: PRIV13
0x40033254 C   FIELD 14w01 PRIV14: PRIV14
0x40033254 C   FIELD 15w01 PRIV15: PRIV15
0x40033254 C   FIELD 16w01 PRIV16: PRIV16
0x40033254 C   FIELD 17w01 PRIV17: PRIV17
0x40033254 C   FIELD 18w01 PRIV18: PRIV18
0x40033254 C   FIELD 19w01 PRIV19: PRIV19
0x40033254 C   FIELD 20w01 PRIV20: PRIV20
0x40033254 C   FIELD 21w01 PRIV21: PRIV21
0x40033254 C   FIELD 22w01 PRIV22: PRIV22
0x40033254 C   FIELD 23w01 PRIV23: PRIV23
0x40033254 C   FIELD 24w01 PRIV24: PRIV24
0x40033254 C   FIELD 25w01 PRIV25: PRIV25
0x40033254 C   FIELD 26w01 PRIV26: PRIV26
0x40033254 C   FIELD 27w01 PRIV27: PRIV27
0x40033254 C   FIELD 28w01 PRIV28: PRIV28
0x40033254 C   FIELD 29w01 PRIV29: PRIV29
0x40033254 C   FIELD 30w01 PRIV30: PRIV30
0x40033254 C   FIELD 31w01 PRIV31: PRIV31
0x40033258 B  REGISTER MPCBB2_PRIVCFGR22 (rw): MPCBB privileged configuration for super-block x register
0x40033258 C   FIELD 00w01 PRIV0: PRIV0
0x40033258 C   FIELD 01w01 PRIV1: PRIV1
0x40033258 C   FIELD 02w01 PRIV2: PRIV2
0x40033258 C   FIELD 03w01 PRIV3: PRIV3
0x40033258 C   FIELD 04w01 PRIV4: PRIV4
0x40033258 C   FIELD 05w01 PRIV5: PRIV5
0x40033258 C   FIELD 06w01 PRIV6: PRIV6
0x40033258 C   FIELD 07w01 PRIV7: PRIV7
0x40033258 C   FIELD 08w01 PRIV8: PRIV8
0x40033258 C   FIELD 09w01 PRIV9: PRIV9
0x40033258 C   FIELD 10w01 PRIV10: PRIV10
0x40033258 C   FIELD 11w01 PRIV11: PRIV11
0x40033258 C   FIELD 12w01 PRIV12: PRIV12
0x40033258 C   FIELD 13w01 PRIV13: PRIV13
0x40033258 C   FIELD 14w01 PRIV14: PRIV14
0x40033258 C   FIELD 15w01 PRIV15: PRIV15
0x40033258 C   FIELD 16w01 PRIV16: PRIV16
0x40033258 C   FIELD 17w01 PRIV17: PRIV17
0x40033258 C   FIELD 18w01 PRIV18: PRIV18
0x40033258 C   FIELD 19w01 PRIV19: PRIV19
0x40033258 C   FIELD 20w01 PRIV20: PRIV20
0x40033258 C   FIELD 21w01 PRIV21: PRIV21
0x40033258 C   FIELD 22w01 PRIV22: PRIV22
0x40033258 C   FIELD 23w01 PRIV23: PRIV23
0x40033258 C   FIELD 24w01 PRIV24: PRIV24
0x40033258 C   FIELD 25w01 PRIV25: PRIV25
0x40033258 C   FIELD 26w01 PRIV26: PRIV26
0x40033258 C   FIELD 27w01 PRIV27: PRIV27
0x40033258 C   FIELD 28w01 PRIV28: PRIV28
0x40033258 C   FIELD 29w01 PRIV29: PRIV29
0x40033258 C   FIELD 30w01 PRIV30: PRIV30
0x40033258 C   FIELD 31w01 PRIV31: PRIV31
0x4003325C B  REGISTER MPCBB2_PRIVCFGR23 (rw): MPCBB privileged configuration for super-block x register
0x4003325C C   FIELD 00w01 PRIV0: PRIV0
0x4003325C C   FIELD 01w01 PRIV1: PRIV1
0x4003325C C   FIELD 02w01 PRIV2: PRIV2
0x4003325C C   FIELD 03w01 PRIV3: PRIV3
0x4003325C C   FIELD 04w01 PRIV4: PRIV4
0x4003325C C   FIELD 05w01 PRIV5: PRIV5
0x4003325C C   FIELD 06w01 PRIV6: PRIV6
0x4003325C C   FIELD 07w01 PRIV7: PRIV7
0x4003325C C   FIELD 08w01 PRIV8: PRIV8
0x4003325C C   FIELD 09w01 PRIV9: PRIV9
0x4003325C C   FIELD 10w01 PRIV10: PRIV10
0x4003325C C   FIELD 11w01 PRIV11: PRIV11
0x4003325C C   FIELD 12w01 PRIV12: PRIV12
0x4003325C C   FIELD 13w01 PRIV13: PRIV13
0x4003325C C   FIELD 14w01 PRIV14: PRIV14
0x4003325C C   FIELD 15w01 PRIV15: PRIV15
0x4003325C C   FIELD 16w01 PRIV16: PRIV16
0x4003325C C   FIELD 17w01 PRIV17: PRIV17
0x4003325C C   FIELD 18w01 PRIV18: PRIV18
0x4003325C C   FIELD 19w01 PRIV19: PRIV19
0x4003325C C   FIELD 20w01 PRIV20: PRIV20
0x4003325C C   FIELD 21w01 PRIV21: PRIV21
0x4003325C C   FIELD 22w01 PRIV22: PRIV22
0x4003325C C   FIELD 23w01 PRIV23: PRIV23
0x4003325C C   FIELD 24w01 PRIV24: PRIV24
0x4003325C C   FIELD 25w01 PRIV25: PRIV25
0x4003325C C   FIELD 26w01 PRIV26: PRIV26
0x4003325C C   FIELD 27w01 PRIV27: PRIV27
0x4003325C C   FIELD 28w01 PRIV28: PRIV28
0x4003325C C   FIELD 29w01 PRIV29: PRIV29
0x4003325C C   FIELD 30w01 PRIV30: PRIV30
0x4003325C C   FIELD 31w01 PRIV31: PRIV31
0x40033260 B  REGISTER MPCBB2_PRIVCFGR24 (rw): MPCBB privileged configuration for super-block x register
0x40033260 C   FIELD 00w01 PRIV0: PRIV0
0x40033260 C   FIELD 01w01 PRIV1: PRIV1
0x40033260 C   FIELD 02w01 PRIV2: PRIV2
0x40033260 C   FIELD 03w01 PRIV3: PRIV3
0x40033260 C   FIELD 04w01 PRIV4: PRIV4
0x40033260 C   FIELD 05w01 PRIV5: PRIV5
0x40033260 C   FIELD 06w01 PRIV6: PRIV6
0x40033260 C   FIELD 07w01 PRIV7: PRIV7
0x40033260 C   FIELD 08w01 PRIV8: PRIV8
0x40033260 C   FIELD 09w01 PRIV9: PRIV9
0x40033260 C   FIELD 10w01 PRIV10: PRIV10
0x40033260 C   FIELD 11w01 PRIV11: PRIV11
0x40033260 C   FIELD 12w01 PRIV12: PRIV12
0x40033260 C   FIELD 13w01 PRIV13: PRIV13
0x40033260 C   FIELD 14w01 PRIV14: PRIV14
0x40033260 C   FIELD 15w01 PRIV15: PRIV15
0x40033260 C   FIELD 16w01 PRIV16: PRIV16
0x40033260 C   FIELD 17w01 PRIV17: PRIV17
0x40033260 C   FIELD 18w01 PRIV18: PRIV18
0x40033260 C   FIELD 19w01 PRIV19: PRIV19
0x40033260 C   FIELD 20w01 PRIV20: PRIV20
0x40033260 C   FIELD 21w01 PRIV21: PRIV21
0x40033260 C   FIELD 22w01 PRIV22: PRIV22
0x40033260 C   FIELD 23w01 PRIV23: PRIV23
0x40033260 C   FIELD 24w01 PRIV24: PRIV24
0x40033260 C   FIELD 25w01 PRIV25: PRIV25
0x40033260 C   FIELD 26w01 PRIV26: PRIV26
0x40033260 C   FIELD 27w01 PRIV27: PRIV27
0x40033260 C   FIELD 28w01 PRIV28: PRIV28
0x40033260 C   FIELD 29w01 PRIV29: PRIV29
0x40033260 C   FIELD 30w01 PRIV30: PRIV30
0x40033260 C   FIELD 31w01 PRIV31: PRIV31
0x40033264 B  REGISTER MPCBB2_PRIVCFGR25 (rw): MPCBB privileged configuration for super-block x register
0x40033264 C   FIELD 00w01 PRIV0: PRIV0
0x40033264 C   FIELD 01w01 PRIV1: PRIV1
0x40033264 C   FIELD 02w01 PRIV2: PRIV2
0x40033264 C   FIELD 03w01 PRIV3: PRIV3
0x40033264 C   FIELD 04w01 PRIV4: PRIV4
0x40033264 C   FIELD 05w01 PRIV5: PRIV5
0x40033264 C   FIELD 06w01 PRIV6: PRIV6
0x40033264 C   FIELD 07w01 PRIV7: PRIV7
0x40033264 C   FIELD 08w01 PRIV8: PRIV8
0x40033264 C   FIELD 09w01 PRIV9: PRIV9
0x40033264 C   FIELD 10w01 PRIV10: PRIV10
0x40033264 C   FIELD 11w01 PRIV11: PRIV11
0x40033264 C   FIELD 12w01 PRIV12: PRIV12
0x40033264 C   FIELD 13w01 PRIV13: PRIV13
0x40033264 C   FIELD 14w01 PRIV14: PRIV14
0x40033264 C   FIELD 15w01 PRIV15: PRIV15
0x40033264 C   FIELD 16w01 PRIV16: PRIV16
0x40033264 C   FIELD 17w01 PRIV17: PRIV17
0x40033264 C   FIELD 18w01 PRIV18: PRIV18
0x40033264 C   FIELD 19w01 PRIV19: PRIV19
0x40033264 C   FIELD 20w01 PRIV20: PRIV20
0x40033264 C   FIELD 21w01 PRIV21: PRIV21
0x40033264 C   FIELD 22w01 PRIV22: PRIV22
0x40033264 C   FIELD 23w01 PRIV23: PRIV23
0x40033264 C   FIELD 24w01 PRIV24: PRIV24
0x40033264 C   FIELD 25w01 PRIV25: PRIV25
0x40033264 C   FIELD 26w01 PRIV26: PRIV26
0x40033264 C   FIELD 27w01 PRIV27: PRIV27
0x40033264 C   FIELD 28w01 PRIV28: PRIV28
0x40033264 C   FIELD 29w01 PRIV29: PRIV29
0x40033264 C   FIELD 30w01 PRIV30: PRIV30
0x40033264 C   FIELD 31w01 PRIV31: PRIV31
0x40033268 B  REGISTER MPCBB2_PRIVCFGR26 (rw): MPCBB privileged configuration for super-block x register
0x40033268 C   FIELD 00w01 PRIV0: PRIV0
0x40033268 C   FIELD 01w01 PRIV1: PRIV1
0x40033268 C   FIELD 02w01 PRIV2: PRIV2
0x40033268 C   FIELD 03w01 PRIV3: PRIV3
0x40033268 C   FIELD 04w01 PRIV4: PRIV4
0x40033268 C   FIELD 05w01 PRIV5: PRIV5
0x40033268 C   FIELD 06w01 PRIV6: PRIV6
0x40033268 C   FIELD 07w01 PRIV7: PRIV7
0x40033268 C   FIELD 08w01 PRIV8: PRIV8
0x40033268 C   FIELD 09w01 PRIV9: PRIV9
0x40033268 C   FIELD 10w01 PRIV10: PRIV10
0x40033268 C   FIELD 11w01 PRIV11: PRIV11
0x40033268 C   FIELD 12w01 PRIV12: PRIV12
0x40033268 C   FIELD 13w01 PRIV13: PRIV13
0x40033268 C   FIELD 14w01 PRIV14: PRIV14
0x40033268 C   FIELD 15w01 PRIV15: PRIV15
0x40033268 C   FIELD 16w01 PRIV16: PRIV16
0x40033268 C   FIELD 17w01 PRIV17: PRIV17
0x40033268 C   FIELD 18w01 PRIV18: PRIV18
0x40033268 C   FIELD 19w01 PRIV19: PRIV19
0x40033268 C   FIELD 20w01 PRIV20: PRIV20
0x40033268 C   FIELD 21w01 PRIV21: PRIV21
0x40033268 C   FIELD 22w01 PRIV22: PRIV22
0x40033268 C   FIELD 23w01 PRIV23: PRIV23
0x40033268 C   FIELD 24w01 PRIV24: PRIV24
0x40033268 C   FIELD 25w01 PRIV25: PRIV25
0x40033268 C   FIELD 26w01 PRIV26: PRIV26
0x40033268 C   FIELD 27w01 PRIV27: PRIV27
0x40033268 C   FIELD 28w01 PRIV28: PRIV28
0x40033268 C   FIELD 29w01 PRIV29: PRIV29
0x40033268 C   FIELD 30w01 PRIV30: PRIV30
0x40033268 C   FIELD 31w01 PRIV31: PRIV31
0x4003326C B  REGISTER MPCBB2_PRIVCFGR27 (rw): MPCBB privileged configuration for super-block x register
0x4003326C C   FIELD 00w01 PRIV0: PRIV0
0x4003326C C   FIELD 01w01 PRIV1: PRIV1
0x4003326C C   FIELD 02w01 PRIV2: PRIV2
0x4003326C C   FIELD 03w01 PRIV3: PRIV3
0x4003326C C   FIELD 04w01 PRIV4: PRIV4
0x4003326C C   FIELD 05w01 PRIV5: PRIV5
0x4003326C C   FIELD 06w01 PRIV6: PRIV6
0x4003326C C   FIELD 07w01 PRIV7: PRIV7
0x4003326C C   FIELD 08w01 PRIV8: PRIV8
0x4003326C C   FIELD 09w01 PRIV9: PRIV9
0x4003326C C   FIELD 10w01 PRIV10: PRIV10
0x4003326C C   FIELD 11w01 PRIV11: PRIV11
0x4003326C C   FIELD 12w01 PRIV12: PRIV12
0x4003326C C   FIELD 13w01 PRIV13: PRIV13
0x4003326C C   FIELD 14w01 PRIV14: PRIV14
0x4003326C C   FIELD 15w01 PRIV15: PRIV15
0x4003326C C   FIELD 16w01 PRIV16: PRIV16
0x4003326C C   FIELD 17w01 PRIV17: PRIV17
0x4003326C C   FIELD 18w01 PRIV18: PRIV18
0x4003326C C   FIELD 19w01 PRIV19: PRIV19
0x4003326C C   FIELD 20w01 PRIV20: PRIV20
0x4003326C C   FIELD 21w01 PRIV21: PRIV21
0x4003326C C   FIELD 22w01 PRIV22: PRIV22
0x4003326C C   FIELD 23w01 PRIV23: PRIV23
0x4003326C C   FIELD 24w01 PRIV24: PRIV24
0x4003326C C   FIELD 25w01 PRIV25: PRIV25
0x4003326C C   FIELD 26w01 PRIV26: PRIV26
0x4003326C C   FIELD 27w01 PRIV27: PRIV27
0x4003326C C   FIELD 28w01 PRIV28: PRIV28
0x4003326C C   FIELD 29w01 PRIV29: PRIV29
0x4003326C C   FIELD 30w01 PRIV30: PRIV30
0x4003326C C   FIELD 31w01 PRIV31: PRIV31
0x40033270 B  REGISTER MPCBB2_PRIVCFGR28 (rw): MPCBB privileged configuration for super-block x register
0x40033270 C   FIELD 00w01 PRIV0: PRIV0
0x40033270 C   FIELD 01w01 PRIV1: PRIV1
0x40033270 C   FIELD 02w01 PRIV2: PRIV2
0x40033270 C   FIELD 03w01 PRIV3: PRIV3
0x40033270 C   FIELD 04w01 PRIV4: PRIV4
0x40033270 C   FIELD 05w01 PRIV5: PRIV5
0x40033270 C   FIELD 06w01 PRIV6: PRIV6
0x40033270 C   FIELD 07w01 PRIV7: PRIV7
0x40033270 C   FIELD 08w01 PRIV8: PRIV8
0x40033270 C   FIELD 09w01 PRIV9: PRIV9
0x40033270 C   FIELD 10w01 PRIV10: PRIV10
0x40033270 C   FIELD 11w01 PRIV11: PRIV11
0x40033270 C   FIELD 12w01 PRIV12: PRIV12
0x40033270 C   FIELD 13w01 PRIV13: PRIV13
0x40033270 C   FIELD 14w01 PRIV14: PRIV14
0x40033270 C   FIELD 15w01 PRIV15: PRIV15
0x40033270 C   FIELD 16w01 PRIV16: PRIV16
0x40033270 C   FIELD 17w01 PRIV17: PRIV17
0x40033270 C   FIELD 18w01 PRIV18: PRIV18
0x40033270 C   FIELD 19w01 PRIV19: PRIV19
0x40033270 C   FIELD 20w01 PRIV20: PRIV20
0x40033270 C   FIELD 21w01 PRIV21: PRIV21
0x40033270 C   FIELD 22w01 PRIV22: PRIV22
0x40033270 C   FIELD 23w01 PRIV23: PRIV23
0x40033270 C   FIELD 24w01 PRIV24: PRIV24
0x40033270 C   FIELD 25w01 PRIV25: PRIV25
0x40033270 C   FIELD 26w01 PRIV26: PRIV26
0x40033270 C   FIELD 27w01 PRIV27: PRIV27
0x40033270 C   FIELD 28w01 PRIV28: PRIV28
0x40033270 C   FIELD 29w01 PRIV29: PRIV29
0x40033270 C   FIELD 30w01 PRIV30: PRIV30
0x40033270 C   FIELD 31w01 PRIV31: PRIV31
0x40033274 B  REGISTER MPCBB2_PRIVCFGR29 (rw): MPCBB privileged configuration for super-block x register
0x40033274 C   FIELD 00w01 PRIV0: PRIV0
0x40033274 C   FIELD 01w01 PRIV1: PRIV1
0x40033274 C   FIELD 02w01 PRIV2: PRIV2
0x40033274 C   FIELD 03w01 PRIV3: PRIV3
0x40033274 C   FIELD 04w01 PRIV4: PRIV4
0x40033274 C   FIELD 05w01 PRIV5: PRIV5
0x40033274 C   FIELD 06w01 PRIV6: PRIV6
0x40033274 C   FIELD 07w01 PRIV7: PRIV7
0x40033274 C   FIELD 08w01 PRIV8: PRIV8
0x40033274 C   FIELD 09w01 PRIV9: PRIV9
0x40033274 C   FIELD 10w01 PRIV10: PRIV10
0x40033274 C   FIELD 11w01 PRIV11: PRIV11
0x40033274 C   FIELD 12w01 PRIV12: PRIV12
0x40033274 C   FIELD 13w01 PRIV13: PRIV13
0x40033274 C   FIELD 14w01 PRIV14: PRIV14
0x40033274 C   FIELD 15w01 PRIV15: PRIV15
0x40033274 C   FIELD 16w01 PRIV16: PRIV16
0x40033274 C   FIELD 17w01 PRIV17: PRIV17
0x40033274 C   FIELD 18w01 PRIV18: PRIV18
0x40033274 C   FIELD 19w01 PRIV19: PRIV19
0x40033274 C   FIELD 20w01 PRIV20: PRIV20
0x40033274 C   FIELD 21w01 PRIV21: PRIV21
0x40033274 C   FIELD 22w01 PRIV22: PRIV22
0x40033274 C   FIELD 23w01 PRIV23: PRIV23
0x40033274 C   FIELD 24w01 PRIV24: PRIV24
0x40033274 C   FIELD 25w01 PRIV25: PRIV25
0x40033274 C   FIELD 26w01 PRIV26: PRIV26
0x40033274 C   FIELD 27w01 PRIV27: PRIV27
0x40033274 C   FIELD 28w01 PRIV28: PRIV28
0x40033274 C   FIELD 29w01 PRIV29: PRIV29
0x40033274 C   FIELD 30w01 PRIV30: PRIV30
0x40033274 C   FIELD 31w01 PRIV31: PRIV31
0x40033278 B  REGISTER MPCBB2_PRIVCFGR30 (rw): MPCBB privileged configuration for super-block x register
0x40033278 C   FIELD 00w01 PRIV0: PRIV0
0x40033278 C   FIELD 01w01 PRIV1: PRIV1
0x40033278 C   FIELD 02w01 PRIV2: PRIV2
0x40033278 C   FIELD 03w01 PRIV3: PRIV3
0x40033278 C   FIELD 04w01 PRIV4: PRIV4
0x40033278 C   FIELD 05w01 PRIV5: PRIV5
0x40033278 C   FIELD 06w01 PRIV6: PRIV6
0x40033278 C   FIELD 07w01 PRIV7: PRIV7
0x40033278 C   FIELD 08w01 PRIV8: PRIV8
0x40033278 C   FIELD 09w01 PRIV9: PRIV9
0x40033278 C   FIELD 10w01 PRIV10: PRIV10
0x40033278 C   FIELD 11w01 PRIV11: PRIV11
0x40033278 C   FIELD 12w01 PRIV12: PRIV12
0x40033278 C   FIELD 13w01 PRIV13: PRIV13
0x40033278 C   FIELD 14w01 PRIV14: PRIV14
0x40033278 C   FIELD 15w01 PRIV15: PRIV15
0x40033278 C   FIELD 16w01 PRIV16: PRIV16
0x40033278 C   FIELD 17w01 PRIV17: PRIV17
0x40033278 C   FIELD 18w01 PRIV18: PRIV18
0x40033278 C   FIELD 19w01 PRIV19: PRIV19
0x40033278 C   FIELD 20w01 PRIV20: PRIV20
0x40033278 C   FIELD 21w01 PRIV21: PRIV21
0x40033278 C   FIELD 22w01 PRIV22: PRIV22
0x40033278 C   FIELD 23w01 PRIV23: PRIV23
0x40033278 C   FIELD 24w01 PRIV24: PRIV24
0x40033278 C   FIELD 25w01 PRIV25: PRIV25
0x40033278 C   FIELD 26w01 PRIV26: PRIV26
0x40033278 C   FIELD 27w01 PRIV27: PRIV27
0x40033278 C   FIELD 28w01 PRIV28: PRIV28
0x40033278 C   FIELD 29w01 PRIV29: PRIV29
0x40033278 C   FIELD 30w01 PRIV30: PRIV30
0x40033278 C   FIELD 31w01 PRIV31: PRIV31
0x4003327C B  REGISTER MPCBB2_PRIVCFGR31 (rw): MPCBB privileged configuration for super-block x register
0x4003327C C   FIELD 00w01 PRIV0: PRIV0
0x4003327C C   FIELD 01w01 PRIV1: PRIV1
0x4003327C C   FIELD 02w01 PRIV2: PRIV2
0x4003327C C   FIELD 03w01 PRIV3: PRIV3
0x4003327C C   FIELD 04w01 PRIV4: PRIV4
0x4003327C C   FIELD 05w01 PRIV5: PRIV5
0x4003327C C   FIELD 06w01 PRIV6: PRIV6
0x4003327C C   FIELD 07w01 PRIV7: PRIV7
0x4003327C C   FIELD 08w01 PRIV8: PRIV8
0x4003327C C   FIELD 09w01 PRIV9: PRIV9
0x4003327C C   FIELD 10w01 PRIV10: PRIV10
0x4003327C C   FIELD 11w01 PRIV11: PRIV11
0x4003327C C   FIELD 12w01 PRIV12: PRIV12
0x4003327C C   FIELD 13w01 PRIV13: PRIV13
0x4003327C C   FIELD 14w01 PRIV14: PRIV14
0x4003327C C   FIELD 15w01 PRIV15: PRIV15
0x4003327C C   FIELD 16w01 PRIV16: PRIV16
0x4003327C C   FIELD 17w01 PRIV17: PRIV17
0x4003327C C   FIELD 18w01 PRIV18: PRIV18
0x4003327C C   FIELD 19w01 PRIV19: PRIV19
0x4003327C C   FIELD 20w01 PRIV20: PRIV20
0x4003327C C   FIELD 21w01 PRIV21: PRIV21
0x4003327C C   FIELD 22w01 PRIV22: PRIV22
0x4003327C C   FIELD 23w01 PRIV23: PRIV23
0x4003327C C   FIELD 24w01 PRIV24: PRIV24
0x4003327C C   FIELD 25w01 PRIV25: PRIV25
0x4003327C C   FIELD 26w01 PRIV26: PRIV26
0x4003327C C   FIELD 27w01 PRIV27: PRIV27
0x4003327C C   FIELD 28w01 PRIV28: PRIV28
0x4003327C C   FIELD 29w01 PRIV29: PRIV29
0x4003327C C   FIELD 30w01 PRIV30: PRIV30
0x4003327C C   FIELD 31w01 PRIV31: PRIV31
0x40033400 A PERIPHERAL GTZC1_MPCBB3
0x40033400 B  REGISTER MPCBB3_CR (rw): MPCBB control register
0x40033400 C   FIELD 00w01 GLOCK: lock the control register of the MPCBB until next reset
0x40033400 C   FIELD 30w01 INVSECSTATE: SRAMx clocks security state
0x40033400 C   FIELD 31w01 SRWILADIS: secure read/write illegal access disable
0x40033410 B  REGISTER MPCBB3_CFGLOCKR1 (rw): GTZC1 SRAMz MPCBB configuration lock register
0x40033410 C   FIELD 00w01 SPLCK0: SPLCK0
0x40033410 C   FIELD 01w01 SPLCK1: SPLCK1
0x40033410 C   FIELD 02w01 SPLCK2: SPLCK2
0x40033410 C   FIELD 03w01 SPLCK3: SPLCK3
0x40033410 C   FIELD 04w01 SPLCK4: SPLCK4
0x40033410 C   FIELD 05w01 SPLCK5: SPLCK5
0x40033410 C   FIELD 06w01 SPLCK6: SPLCK6
0x40033410 C   FIELD 07w01 SPLCK7: SPLCK7
0x40033410 C   FIELD 08w01 SPLCK8: SPLCK8
0x40033410 C   FIELD 09w01 SPLCK9: SPLCK9
0x40033410 C   FIELD 10w01 SPLCK10: SPLCK10
0x40033410 C   FIELD 11w01 SPLCK11: SPLCK11
0x40033410 C   FIELD 12w01 SPLCK12: SPLCK12
0x40033410 C   FIELD 13w01 SPLCK13: SPLCK13
0x40033410 C   FIELD 14w01 SPLCK14: SPLCK14
0x40033410 C   FIELD 15w01 SPLCK15: SPLCK15
0x40033410 C   FIELD 16w01 SPLCK16: SPLCK16
0x40033410 C   FIELD 17w01 SPLCK17: SPLCK17
0x40033410 C   FIELD 18w01 SPLCK18: SPLCK18
0x40033410 C   FIELD 19w01 SPLCK19: SPLCK19
0x40033410 C   FIELD 20w01 SPLCK20: SPLCK20
0x40033410 C   FIELD 21w01 SPLCK21: SPLCK21
0x40033410 C   FIELD 22w01 SPLCK22: SPLCK22
0x40033410 C   FIELD 23w01 SPLCK23: SPLCK23
0x40033410 C   FIELD 24w01 SPLCK24: SPLCK24
0x40033410 C   FIELD 25w01 SPLCK25: SPLCK25
0x40033410 C   FIELD 26w01 SPLCK26: SPLCK26
0x40033410 C   FIELD 27w01 SPLCK27: SPLCK27
0x40033410 C   FIELD 28w01 SPLCK28: SPLCK28
0x40033410 C   FIELD 29w01 SPLCK29: SPLCK29
0x40033410 C   FIELD 30w01 SPLCK30: SPLCK30
0x40033410 C   FIELD 31w01 SPLCK31: SPLCK31
0x40033500 B  REGISTER MPCBB3_SECCFGR0 (rw): MPCBBx security configuration for super-block x register
0x40033500 C   FIELD 00w01 SEC0: SEC0
0x40033500 C   FIELD 01w01 SEC1: SEC1
0x40033500 C   FIELD 02w01 SEC2: SEC2
0x40033500 C   FIELD 03w01 SEC3: SEC3
0x40033500 C   FIELD 04w01 SEC4: SEC4
0x40033500 C   FIELD 05w01 SEC5: SEC5
0x40033500 C   FIELD 06w01 SEC6: SEC6
0x40033500 C   FIELD 07w01 SEC7: SEC7
0x40033500 C   FIELD 08w01 SEC8: SEC8
0x40033500 C   FIELD 09w01 SEC9: SEC9
0x40033500 C   FIELD 10w01 SEC10: SEC10
0x40033500 C   FIELD 11w01 SEC11: SEC11
0x40033500 C   FIELD 12w01 SEC12: SEC12
0x40033500 C   FIELD 13w01 SEC13: SEC13
0x40033500 C   FIELD 14w01 SEC14: SEC14
0x40033500 C   FIELD 15w01 SEC15: SEC15
0x40033500 C   FIELD 16w01 SEC16: SEC16
0x40033500 C   FIELD 17w01 SEC17: SEC17
0x40033500 C   FIELD 18w01 SEC18: SEC18
0x40033500 C   FIELD 19w01 SEC19: SEC19
0x40033500 C   FIELD 20w01 SEC20: SEC20
0x40033500 C   FIELD 21w01 SEC21: SEC21
0x40033500 C   FIELD 22w01 SEC22: SEC22
0x40033500 C   FIELD 23w01 SEC23: SEC23
0x40033500 C   FIELD 24w01 SEC24: SEC24
0x40033500 C   FIELD 25w01 SEC25: SEC25
0x40033500 C   FIELD 26w01 SEC26: SEC26
0x40033500 C   FIELD 27w01 SEC27: SEC27
0x40033500 C   FIELD 28w01 SEC28: SEC28
0x40033500 C   FIELD 29w01 SEC29: SEC29
0x40033500 C   FIELD 30w01 SEC30: SEC30
0x40033500 C   FIELD 31w01 SEC31: SEC31
0x40033504 B  REGISTER MPCBB3_SECCFGR1 (rw): MPCBBx security configuration for super-block x register
0x40033504 C   FIELD 00w01 SEC0: SEC0
0x40033504 C   FIELD 01w01 SEC1: SEC1
0x40033504 C   FIELD 02w01 SEC2: SEC2
0x40033504 C   FIELD 03w01 SEC3: SEC3
0x40033504 C   FIELD 04w01 SEC4: SEC4
0x40033504 C   FIELD 05w01 SEC5: SEC5
0x40033504 C   FIELD 06w01 SEC6: SEC6
0x40033504 C   FIELD 07w01 SEC7: SEC7
0x40033504 C   FIELD 08w01 SEC8: SEC8
0x40033504 C   FIELD 09w01 SEC9: SEC9
0x40033504 C   FIELD 10w01 SEC10: SEC10
0x40033504 C   FIELD 11w01 SEC11: SEC11
0x40033504 C   FIELD 12w01 SEC12: SEC12
0x40033504 C   FIELD 13w01 SEC13: SEC13
0x40033504 C   FIELD 14w01 SEC14: SEC14
0x40033504 C   FIELD 15w01 SEC15: SEC15
0x40033504 C   FIELD 16w01 SEC16: SEC16
0x40033504 C   FIELD 17w01 SEC17: SEC17
0x40033504 C   FIELD 18w01 SEC18: SEC18
0x40033504 C   FIELD 19w01 SEC19: SEC19
0x40033504 C   FIELD 20w01 SEC20: SEC20
0x40033504 C   FIELD 21w01 SEC21: SEC21
0x40033504 C   FIELD 22w01 SEC22: SEC22
0x40033504 C   FIELD 23w01 SEC23: SEC23
0x40033504 C   FIELD 24w01 SEC24: SEC24
0x40033504 C   FIELD 25w01 SEC25: SEC25
0x40033504 C   FIELD 26w01 SEC26: SEC26
0x40033504 C   FIELD 27w01 SEC27: SEC27
0x40033504 C   FIELD 28w01 SEC28: SEC28
0x40033504 C   FIELD 29w01 SEC29: SEC29
0x40033504 C   FIELD 30w01 SEC30: SEC30
0x40033504 C   FIELD 31w01 SEC31: SEC31
0x40033508 B  REGISTER MPCBB3_SECCFGR2 (rw): MPCBBx security configuration for super-block x register
0x40033508 C   FIELD 00w01 SEC0: SEC0
0x40033508 C   FIELD 01w01 SEC1: SEC1
0x40033508 C   FIELD 02w01 SEC2: SEC2
0x40033508 C   FIELD 03w01 SEC3: SEC3
0x40033508 C   FIELD 04w01 SEC4: SEC4
0x40033508 C   FIELD 05w01 SEC5: SEC5
0x40033508 C   FIELD 06w01 SEC6: SEC6
0x40033508 C   FIELD 07w01 SEC7: SEC7
0x40033508 C   FIELD 08w01 SEC8: SEC8
0x40033508 C   FIELD 09w01 SEC9: SEC9
0x40033508 C   FIELD 10w01 SEC10: SEC10
0x40033508 C   FIELD 11w01 SEC11: SEC11
0x40033508 C   FIELD 12w01 SEC12: SEC12
0x40033508 C   FIELD 13w01 SEC13: SEC13
0x40033508 C   FIELD 14w01 SEC14: SEC14
0x40033508 C   FIELD 15w01 SEC15: SEC15
0x40033508 C   FIELD 16w01 SEC16: SEC16
0x40033508 C   FIELD 17w01 SEC17: SEC17
0x40033508 C   FIELD 18w01 SEC18: SEC18
0x40033508 C   FIELD 19w01 SEC19: SEC19
0x40033508 C   FIELD 20w01 SEC20: SEC20
0x40033508 C   FIELD 21w01 SEC21: SEC21
0x40033508 C   FIELD 22w01 SEC22: SEC22
0x40033508 C   FIELD 23w01 SEC23: SEC23
0x40033508 C   FIELD 24w01 SEC24: SEC24
0x40033508 C   FIELD 25w01 SEC25: SEC25
0x40033508 C   FIELD 26w01 SEC26: SEC26
0x40033508 C   FIELD 27w01 SEC27: SEC27
0x40033508 C   FIELD 28w01 SEC28: SEC28
0x40033508 C   FIELD 29w01 SEC29: SEC29
0x40033508 C   FIELD 30w01 SEC30: SEC30
0x40033508 C   FIELD 31w01 SEC31: SEC31
0x4003350C B  REGISTER MPCBB3_SECCFGR3 (rw): MPCBBx security configuration for super-block x register
0x4003350C C   FIELD 00w01 SEC0: SEC0
0x4003350C C   FIELD 01w01 SEC1: SEC1
0x4003350C C   FIELD 02w01 SEC2: SEC2
0x4003350C C   FIELD 03w01 SEC3: SEC3
0x4003350C C   FIELD 04w01 SEC4: SEC4
0x4003350C C   FIELD 05w01 SEC5: SEC5
0x4003350C C   FIELD 06w01 SEC6: SEC6
0x4003350C C   FIELD 07w01 SEC7: SEC7
0x4003350C C   FIELD 08w01 SEC8: SEC8
0x4003350C C   FIELD 09w01 SEC9: SEC9
0x4003350C C   FIELD 10w01 SEC10: SEC10
0x4003350C C   FIELD 11w01 SEC11: SEC11
0x4003350C C   FIELD 12w01 SEC12: SEC12
0x4003350C C   FIELD 13w01 SEC13: SEC13
0x4003350C C   FIELD 14w01 SEC14: SEC14
0x4003350C C   FIELD 15w01 SEC15: SEC15
0x4003350C C   FIELD 16w01 SEC16: SEC16
0x4003350C C   FIELD 17w01 SEC17: SEC17
0x4003350C C   FIELD 18w01 SEC18: SEC18
0x4003350C C   FIELD 19w01 SEC19: SEC19
0x4003350C C   FIELD 20w01 SEC20: SEC20
0x4003350C C   FIELD 21w01 SEC21: SEC21
0x4003350C C   FIELD 22w01 SEC22: SEC22
0x4003350C C   FIELD 23w01 SEC23: SEC23
0x4003350C C   FIELD 24w01 SEC24: SEC24
0x4003350C C   FIELD 25w01 SEC25: SEC25
0x4003350C C   FIELD 26w01 SEC26: SEC26
0x4003350C C   FIELD 27w01 SEC27: SEC27
0x4003350C C   FIELD 28w01 SEC28: SEC28
0x4003350C C   FIELD 29w01 SEC29: SEC29
0x4003350C C   FIELD 30w01 SEC30: SEC30
0x4003350C C   FIELD 31w01 SEC31: SEC31
0x40033510 B  REGISTER MPCBB3_SECCFGR4 (rw): MPCBBx security configuration for super-block x register
0x40033510 C   FIELD 00w01 SEC0: SEC0
0x40033510 C   FIELD 01w01 SEC1: SEC1
0x40033510 C   FIELD 02w01 SEC2: SEC2
0x40033510 C   FIELD 03w01 SEC3: SEC3
0x40033510 C   FIELD 04w01 SEC4: SEC4
0x40033510 C   FIELD 05w01 SEC5: SEC5
0x40033510 C   FIELD 06w01 SEC6: SEC6
0x40033510 C   FIELD 07w01 SEC7: SEC7
0x40033510 C   FIELD 08w01 SEC8: SEC8
0x40033510 C   FIELD 09w01 SEC9: SEC9
0x40033510 C   FIELD 10w01 SEC10: SEC10
0x40033510 C   FIELD 11w01 SEC11: SEC11
0x40033510 C   FIELD 12w01 SEC12: SEC12
0x40033510 C   FIELD 13w01 SEC13: SEC13
0x40033510 C   FIELD 14w01 SEC14: SEC14
0x40033510 C   FIELD 15w01 SEC15: SEC15
0x40033510 C   FIELD 16w01 SEC16: SEC16
0x40033510 C   FIELD 17w01 SEC17: SEC17
0x40033510 C   FIELD 18w01 SEC18: SEC18
0x40033510 C   FIELD 19w01 SEC19: SEC19
0x40033510 C   FIELD 20w01 SEC20: SEC20
0x40033510 C   FIELD 21w01 SEC21: SEC21
0x40033510 C   FIELD 22w01 SEC22: SEC22
0x40033510 C   FIELD 23w01 SEC23: SEC23
0x40033510 C   FIELD 24w01 SEC24: SEC24
0x40033510 C   FIELD 25w01 SEC25: SEC25
0x40033510 C   FIELD 26w01 SEC26: SEC26
0x40033510 C   FIELD 27w01 SEC27: SEC27
0x40033510 C   FIELD 28w01 SEC28: SEC28
0x40033510 C   FIELD 29w01 SEC29: SEC29
0x40033510 C   FIELD 30w01 SEC30: SEC30
0x40033510 C   FIELD 31w01 SEC31: SEC31
0x40033514 B  REGISTER MPCBB3_SECCFGR5 (rw): MPCBBx security configuration for super-block x register
0x40033514 C   FIELD 00w01 SEC0: SEC0
0x40033514 C   FIELD 01w01 SEC1: SEC1
0x40033514 C   FIELD 02w01 SEC2: SEC2
0x40033514 C   FIELD 03w01 SEC3: SEC3
0x40033514 C   FIELD 04w01 SEC4: SEC4
0x40033514 C   FIELD 05w01 SEC5: SEC5
0x40033514 C   FIELD 06w01 SEC6: SEC6
0x40033514 C   FIELD 07w01 SEC7: SEC7
0x40033514 C   FIELD 08w01 SEC8: SEC8
0x40033514 C   FIELD 09w01 SEC9: SEC9
0x40033514 C   FIELD 10w01 SEC10: SEC10
0x40033514 C   FIELD 11w01 SEC11: SEC11
0x40033514 C   FIELD 12w01 SEC12: SEC12
0x40033514 C   FIELD 13w01 SEC13: SEC13
0x40033514 C   FIELD 14w01 SEC14: SEC14
0x40033514 C   FIELD 15w01 SEC15: SEC15
0x40033514 C   FIELD 16w01 SEC16: SEC16
0x40033514 C   FIELD 17w01 SEC17: SEC17
0x40033514 C   FIELD 18w01 SEC18: SEC18
0x40033514 C   FIELD 19w01 SEC19: SEC19
0x40033514 C   FIELD 20w01 SEC20: SEC20
0x40033514 C   FIELD 21w01 SEC21: SEC21
0x40033514 C   FIELD 22w01 SEC22: SEC22
0x40033514 C   FIELD 23w01 SEC23: SEC23
0x40033514 C   FIELD 24w01 SEC24: SEC24
0x40033514 C   FIELD 25w01 SEC25: SEC25
0x40033514 C   FIELD 26w01 SEC26: SEC26
0x40033514 C   FIELD 27w01 SEC27: SEC27
0x40033514 C   FIELD 28w01 SEC28: SEC28
0x40033514 C   FIELD 29w01 SEC29: SEC29
0x40033514 C   FIELD 30w01 SEC30: SEC30
0x40033514 C   FIELD 31w01 SEC31: SEC31
0x40033518 B  REGISTER MPCBB3_SECCFGR6 (rw): MPCBBx security configuration for super-block x register
0x40033518 C   FIELD 00w01 SEC0: SEC0
0x40033518 C   FIELD 01w01 SEC1: SEC1
0x40033518 C   FIELD 02w01 SEC2: SEC2
0x40033518 C   FIELD 03w01 SEC3: SEC3
0x40033518 C   FIELD 04w01 SEC4: SEC4
0x40033518 C   FIELD 05w01 SEC5: SEC5
0x40033518 C   FIELD 06w01 SEC6: SEC6
0x40033518 C   FIELD 07w01 SEC7: SEC7
0x40033518 C   FIELD 08w01 SEC8: SEC8
0x40033518 C   FIELD 09w01 SEC9: SEC9
0x40033518 C   FIELD 10w01 SEC10: SEC10
0x40033518 C   FIELD 11w01 SEC11: SEC11
0x40033518 C   FIELD 12w01 SEC12: SEC12
0x40033518 C   FIELD 13w01 SEC13: SEC13
0x40033518 C   FIELD 14w01 SEC14: SEC14
0x40033518 C   FIELD 15w01 SEC15: SEC15
0x40033518 C   FIELD 16w01 SEC16: SEC16
0x40033518 C   FIELD 17w01 SEC17: SEC17
0x40033518 C   FIELD 18w01 SEC18: SEC18
0x40033518 C   FIELD 19w01 SEC19: SEC19
0x40033518 C   FIELD 20w01 SEC20: SEC20
0x40033518 C   FIELD 21w01 SEC21: SEC21
0x40033518 C   FIELD 22w01 SEC22: SEC22
0x40033518 C   FIELD 23w01 SEC23: SEC23
0x40033518 C   FIELD 24w01 SEC24: SEC24
0x40033518 C   FIELD 25w01 SEC25: SEC25
0x40033518 C   FIELD 26w01 SEC26: SEC26
0x40033518 C   FIELD 27w01 SEC27: SEC27
0x40033518 C   FIELD 28w01 SEC28: SEC28
0x40033518 C   FIELD 29w01 SEC29: SEC29
0x40033518 C   FIELD 30w01 SEC30: SEC30
0x40033518 C   FIELD 31w01 SEC31: SEC31
0x4003351C B  REGISTER MPCBB3_SECCFGR7 (rw): MPCBBx security configuration for super-block x register
0x4003351C C   FIELD 00w01 SEC0: SEC0
0x4003351C C   FIELD 01w01 SEC1: SEC1
0x4003351C C   FIELD 02w01 SEC2: SEC2
0x4003351C C   FIELD 03w01 SEC3: SEC3
0x4003351C C   FIELD 04w01 SEC4: SEC4
0x4003351C C   FIELD 05w01 SEC5: SEC5
0x4003351C C   FIELD 06w01 SEC6: SEC6
0x4003351C C   FIELD 07w01 SEC7: SEC7
0x4003351C C   FIELD 08w01 SEC8: SEC8
0x4003351C C   FIELD 09w01 SEC9: SEC9
0x4003351C C   FIELD 10w01 SEC10: SEC10
0x4003351C C   FIELD 11w01 SEC11: SEC11
0x4003351C C   FIELD 12w01 SEC12: SEC12
0x4003351C C   FIELD 13w01 SEC13: SEC13
0x4003351C C   FIELD 14w01 SEC14: SEC14
0x4003351C C   FIELD 15w01 SEC15: SEC15
0x4003351C C   FIELD 16w01 SEC16: SEC16
0x4003351C C   FIELD 17w01 SEC17: SEC17
0x4003351C C   FIELD 18w01 SEC18: SEC18
0x4003351C C   FIELD 19w01 SEC19: SEC19
0x4003351C C   FIELD 20w01 SEC20: SEC20
0x4003351C C   FIELD 21w01 SEC21: SEC21
0x4003351C C   FIELD 22w01 SEC22: SEC22
0x4003351C C   FIELD 23w01 SEC23: SEC23
0x4003351C C   FIELD 24w01 SEC24: SEC24
0x4003351C C   FIELD 25w01 SEC25: SEC25
0x4003351C C   FIELD 26w01 SEC26: SEC26
0x4003351C C   FIELD 27w01 SEC27: SEC27
0x4003351C C   FIELD 28w01 SEC28: SEC28
0x4003351C C   FIELD 29w01 SEC29: SEC29
0x4003351C C   FIELD 30w01 SEC30: SEC30
0x4003351C C   FIELD 31w01 SEC31: SEC31
0x40033520 B  REGISTER MPCBB3_SECCFGR8 (rw): MPCBBx security configuration for super-block x register
0x40033520 C   FIELD 00w01 SEC0: SEC0
0x40033520 C   FIELD 01w01 SEC1: SEC1
0x40033520 C   FIELD 02w01 SEC2: SEC2
0x40033520 C   FIELD 03w01 SEC3: SEC3
0x40033520 C   FIELD 04w01 SEC4: SEC4
0x40033520 C   FIELD 05w01 SEC5: SEC5
0x40033520 C   FIELD 06w01 SEC6: SEC6
0x40033520 C   FIELD 07w01 SEC7: SEC7
0x40033520 C   FIELD 08w01 SEC8: SEC8
0x40033520 C   FIELD 09w01 SEC9: SEC9
0x40033520 C   FIELD 10w01 SEC10: SEC10
0x40033520 C   FIELD 11w01 SEC11: SEC11
0x40033520 C   FIELD 12w01 SEC12: SEC12
0x40033520 C   FIELD 13w01 SEC13: SEC13
0x40033520 C   FIELD 14w01 SEC14: SEC14
0x40033520 C   FIELD 15w01 SEC15: SEC15
0x40033520 C   FIELD 16w01 SEC16: SEC16
0x40033520 C   FIELD 17w01 SEC17: SEC17
0x40033520 C   FIELD 18w01 SEC18: SEC18
0x40033520 C   FIELD 19w01 SEC19: SEC19
0x40033520 C   FIELD 20w01 SEC20: SEC20
0x40033520 C   FIELD 21w01 SEC21: SEC21
0x40033520 C   FIELD 22w01 SEC22: SEC22
0x40033520 C   FIELD 23w01 SEC23: SEC23
0x40033520 C   FIELD 24w01 SEC24: SEC24
0x40033520 C   FIELD 25w01 SEC25: SEC25
0x40033520 C   FIELD 26w01 SEC26: SEC26
0x40033520 C   FIELD 27w01 SEC27: SEC27
0x40033520 C   FIELD 28w01 SEC28: SEC28
0x40033520 C   FIELD 29w01 SEC29: SEC29
0x40033520 C   FIELD 30w01 SEC30: SEC30
0x40033520 C   FIELD 31w01 SEC31: SEC31
0x40033524 B  REGISTER MPCBB3_SECCFGR9 (rw): MPCBBx security configuration for super-block x register
0x40033524 C   FIELD 00w01 SEC0: SEC0
0x40033524 C   FIELD 01w01 SEC1: SEC1
0x40033524 C   FIELD 02w01 SEC2: SEC2
0x40033524 C   FIELD 03w01 SEC3: SEC3
0x40033524 C   FIELD 04w01 SEC4: SEC4
0x40033524 C   FIELD 05w01 SEC5: SEC5
0x40033524 C   FIELD 06w01 SEC6: SEC6
0x40033524 C   FIELD 07w01 SEC7: SEC7
0x40033524 C   FIELD 08w01 SEC8: SEC8
0x40033524 C   FIELD 09w01 SEC9: SEC9
0x40033524 C   FIELD 10w01 SEC10: SEC10
0x40033524 C   FIELD 11w01 SEC11: SEC11
0x40033524 C   FIELD 12w01 SEC12: SEC12
0x40033524 C   FIELD 13w01 SEC13: SEC13
0x40033524 C   FIELD 14w01 SEC14: SEC14
0x40033524 C   FIELD 15w01 SEC15: SEC15
0x40033524 C   FIELD 16w01 SEC16: SEC16
0x40033524 C   FIELD 17w01 SEC17: SEC17
0x40033524 C   FIELD 18w01 SEC18: SEC18
0x40033524 C   FIELD 19w01 SEC19: SEC19
0x40033524 C   FIELD 20w01 SEC20: SEC20
0x40033524 C   FIELD 21w01 SEC21: SEC21
0x40033524 C   FIELD 22w01 SEC22: SEC22
0x40033524 C   FIELD 23w01 SEC23: SEC23
0x40033524 C   FIELD 24w01 SEC24: SEC24
0x40033524 C   FIELD 25w01 SEC25: SEC25
0x40033524 C   FIELD 26w01 SEC26: SEC26
0x40033524 C   FIELD 27w01 SEC27: SEC27
0x40033524 C   FIELD 28w01 SEC28: SEC28
0x40033524 C   FIELD 29w01 SEC29: SEC29
0x40033524 C   FIELD 30w01 SEC30: SEC30
0x40033524 C   FIELD 31w01 SEC31: SEC31
0x40033528 B  REGISTER MPCBB3_SECCFGR10 (rw): MPCBBx security configuration for super-block x register
0x40033528 C   FIELD 00w01 SEC0: SEC0
0x40033528 C   FIELD 01w01 SEC1: SEC1
0x40033528 C   FIELD 02w01 SEC2: SEC2
0x40033528 C   FIELD 03w01 SEC3: SEC3
0x40033528 C   FIELD 04w01 SEC4: SEC4
0x40033528 C   FIELD 05w01 SEC5: SEC5
0x40033528 C   FIELD 06w01 SEC6: SEC6
0x40033528 C   FIELD 07w01 SEC7: SEC7
0x40033528 C   FIELD 08w01 SEC8: SEC8
0x40033528 C   FIELD 09w01 SEC9: SEC9
0x40033528 C   FIELD 10w01 SEC10: SEC10
0x40033528 C   FIELD 11w01 SEC11: SEC11
0x40033528 C   FIELD 12w01 SEC12: SEC12
0x40033528 C   FIELD 13w01 SEC13: SEC13
0x40033528 C   FIELD 14w01 SEC14: SEC14
0x40033528 C   FIELD 15w01 SEC15: SEC15
0x40033528 C   FIELD 16w01 SEC16: SEC16
0x40033528 C   FIELD 17w01 SEC17: SEC17
0x40033528 C   FIELD 18w01 SEC18: SEC18
0x40033528 C   FIELD 19w01 SEC19: SEC19
0x40033528 C   FIELD 20w01 SEC20: SEC20
0x40033528 C   FIELD 21w01 SEC21: SEC21
0x40033528 C   FIELD 22w01 SEC22: SEC22
0x40033528 C   FIELD 23w01 SEC23: SEC23
0x40033528 C   FIELD 24w01 SEC24: SEC24
0x40033528 C   FIELD 25w01 SEC25: SEC25
0x40033528 C   FIELD 26w01 SEC26: SEC26
0x40033528 C   FIELD 27w01 SEC27: SEC27
0x40033528 C   FIELD 28w01 SEC28: SEC28
0x40033528 C   FIELD 29w01 SEC29: SEC29
0x40033528 C   FIELD 30w01 SEC30: SEC30
0x40033528 C   FIELD 31w01 SEC31: SEC31
0x4003352C B  REGISTER MPCBB3_SECCFGR11 (rw): MPCBBx security configuration for super-block x register
0x4003352C C   FIELD 00w01 SEC0: SEC0
0x4003352C C   FIELD 01w01 SEC1: SEC1
0x4003352C C   FIELD 02w01 SEC2: SEC2
0x4003352C C   FIELD 03w01 SEC3: SEC3
0x4003352C C   FIELD 04w01 SEC4: SEC4
0x4003352C C   FIELD 05w01 SEC5: SEC5
0x4003352C C   FIELD 06w01 SEC6: SEC6
0x4003352C C   FIELD 07w01 SEC7: SEC7
0x4003352C C   FIELD 08w01 SEC8: SEC8
0x4003352C C   FIELD 09w01 SEC9: SEC9
0x4003352C C   FIELD 10w01 SEC10: SEC10
0x4003352C C   FIELD 11w01 SEC11: SEC11
0x4003352C C   FIELD 12w01 SEC12: SEC12
0x4003352C C   FIELD 13w01 SEC13: SEC13
0x4003352C C   FIELD 14w01 SEC14: SEC14
0x4003352C C   FIELD 15w01 SEC15: SEC15
0x4003352C C   FIELD 16w01 SEC16: SEC16
0x4003352C C   FIELD 17w01 SEC17: SEC17
0x4003352C C   FIELD 18w01 SEC18: SEC18
0x4003352C C   FIELD 19w01 SEC19: SEC19
0x4003352C C   FIELD 20w01 SEC20: SEC20
0x4003352C C   FIELD 21w01 SEC21: SEC21
0x4003352C C   FIELD 22w01 SEC22: SEC22
0x4003352C C   FIELD 23w01 SEC23: SEC23
0x4003352C C   FIELD 24w01 SEC24: SEC24
0x4003352C C   FIELD 25w01 SEC25: SEC25
0x4003352C C   FIELD 26w01 SEC26: SEC26
0x4003352C C   FIELD 27w01 SEC27: SEC27
0x4003352C C   FIELD 28w01 SEC28: SEC28
0x4003352C C   FIELD 29w01 SEC29: SEC29
0x4003352C C   FIELD 30w01 SEC30: SEC30
0x4003352C C   FIELD 31w01 SEC31: SEC31
0x40033530 B  REGISTER MPCBB3_SECCFGR12 (rw): MPCBBx security configuration for super-block x register
0x40033530 C   FIELD 00w01 SEC0: SEC0
0x40033530 C   FIELD 01w01 SEC1: SEC1
0x40033530 C   FIELD 02w01 SEC2: SEC2
0x40033530 C   FIELD 03w01 SEC3: SEC3
0x40033530 C   FIELD 04w01 SEC4: SEC4
0x40033530 C   FIELD 05w01 SEC5: SEC5
0x40033530 C   FIELD 06w01 SEC6: SEC6
0x40033530 C   FIELD 07w01 SEC7: SEC7
0x40033530 C   FIELD 08w01 SEC8: SEC8
0x40033530 C   FIELD 09w01 SEC9: SEC9
0x40033530 C   FIELD 10w01 SEC10: SEC10
0x40033530 C   FIELD 11w01 SEC11: SEC11
0x40033530 C   FIELD 12w01 SEC12: SEC12
0x40033530 C   FIELD 13w01 SEC13: SEC13
0x40033530 C   FIELD 14w01 SEC14: SEC14
0x40033530 C   FIELD 15w01 SEC15: SEC15
0x40033530 C   FIELD 16w01 SEC16: SEC16
0x40033530 C   FIELD 17w01 SEC17: SEC17
0x40033530 C   FIELD 18w01 SEC18: SEC18
0x40033530 C   FIELD 19w01 SEC19: SEC19
0x40033530 C   FIELD 20w01 SEC20: SEC20
0x40033530 C   FIELD 21w01 SEC21: SEC21
0x40033530 C   FIELD 22w01 SEC22: SEC22
0x40033530 C   FIELD 23w01 SEC23: SEC23
0x40033530 C   FIELD 24w01 SEC24: SEC24
0x40033530 C   FIELD 25w01 SEC25: SEC25
0x40033530 C   FIELD 26w01 SEC26: SEC26
0x40033530 C   FIELD 27w01 SEC27: SEC27
0x40033530 C   FIELD 28w01 SEC28: SEC28
0x40033530 C   FIELD 29w01 SEC29: SEC29
0x40033530 C   FIELD 30w01 SEC30: SEC30
0x40033530 C   FIELD 31w01 SEC31: SEC31
0x40033534 B  REGISTER MPCBB3_SECCFGR13 (rw): MPCBBx security configuration for super-block x register
0x40033534 C   FIELD 00w01 SEC0: SEC0
0x40033534 C   FIELD 01w01 SEC1: SEC1
0x40033534 C   FIELD 02w01 SEC2: SEC2
0x40033534 C   FIELD 03w01 SEC3: SEC3
0x40033534 C   FIELD 04w01 SEC4: SEC4
0x40033534 C   FIELD 05w01 SEC5: SEC5
0x40033534 C   FIELD 06w01 SEC6: SEC6
0x40033534 C   FIELD 07w01 SEC7: SEC7
0x40033534 C   FIELD 08w01 SEC8: SEC8
0x40033534 C   FIELD 09w01 SEC9: SEC9
0x40033534 C   FIELD 10w01 SEC10: SEC10
0x40033534 C   FIELD 11w01 SEC11: SEC11
0x40033534 C   FIELD 12w01 SEC12: SEC12
0x40033534 C   FIELD 13w01 SEC13: SEC13
0x40033534 C   FIELD 14w01 SEC14: SEC14
0x40033534 C   FIELD 15w01 SEC15: SEC15
0x40033534 C   FIELD 16w01 SEC16: SEC16
0x40033534 C   FIELD 17w01 SEC17: SEC17
0x40033534 C   FIELD 18w01 SEC18: SEC18
0x40033534 C   FIELD 19w01 SEC19: SEC19
0x40033534 C   FIELD 20w01 SEC20: SEC20
0x40033534 C   FIELD 21w01 SEC21: SEC21
0x40033534 C   FIELD 22w01 SEC22: SEC22
0x40033534 C   FIELD 23w01 SEC23: SEC23
0x40033534 C   FIELD 24w01 SEC24: SEC24
0x40033534 C   FIELD 25w01 SEC25: SEC25
0x40033534 C   FIELD 26w01 SEC26: SEC26
0x40033534 C   FIELD 27w01 SEC27: SEC27
0x40033534 C   FIELD 28w01 SEC28: SEC28
0x40033534 C   FIELD 29w01 SEC29: SEC29
0x40033534 C   FIELD 30w01 SEC30: SEC30
0x40033534 C   FIELD 31w01 SEC31: SEC31
0x40033538 B  REGISTER MPCBB3_SECCFGR14 (rw): MPCBBx security configuration for super-block x register
0x40033538 C   FIELD 00w01 SEC0: SEC0
0x40033538 C   FIELD 01w01 SEC1: SEC1
0x40033538 C   FIELD 02w01 SEC2: SEC2
0x40033538 C   FIELD 03w01 SEC3: SEC3
0x40033538 C   FIELD 04w01 SEC4: SEC4
0x40033538 C   FIELD 05w01 SEC5: SEC5
0x40033538 C   FIELD 06w01 SEC6: SEC6
0x40033538 C   FIELD 07w01 SEC7: SEC7
0x40033538 C   FIELD 08w01 SEC8: SEC8
0x40033538 C   FIELD 09w01 SEC9: SEC9
0x40033538 C   FIELD 10w01 SEC10: SEC10
0x40033538 C   FIELD 11w01 SEC11: SEC11
0x40033538 C   FIELD 12w01 SEC12: SEC12
0x40033538 C   FIELD 13w01 SEC13: SEC13
0x40033538 C   FIELD 14w01 SEC14: SEC14
0x40033538 C   FIELD 15w01 SEC15: SEC15
0x40033538 C   FIELD 16w01 SEC16: SEC16
0x40033538 C   FIELD 17w01 SEC17: SEC17
0x40033538 C   FIELD 18w01 SEC18: SEC18
0x40033538 C   FIELD 19w01 SEC19: SEC19
0x40033538 C   FIELD 20w01 SEC20: SEC20
0x40033538 C   FIELD 21w01 SEC21: SEC21
0x40033538 C   FIELD 22w01 SEC22: SEC22
0x40033538 C   FIELD 23w01 SEC23: SEC23
0x40033538 C   FIELD 24w01 SEC24: SEC24
0x40033538 C   FIELD 25w01 SEC25: SEC25
0x40033538 C   FIELD 26w01 SEC26: SEC26
0x40033538 C   FIELD 27w01 SEC27: SEC27
0x40033538 C   FIELD 28w01 SEC28: SEC28
0x40033538 C   FIELD 29w01 SEC29: SEC29
0x40033538 C   FIELD 30w01 SEC30: SEC30
0x40033538 C   FIELD 31w01 SEC31: SEC31
0x4003353C B  REGISTER MPCBB3_SECCFGR15 (rw): MPCBBx security configuration for super-block x register
0x4003353C C   FIELD 00w01 SEC0: SEC0
0x4003353C C   FIELD 01w01 SEC1: SEC1
0x4003353C C   FIELD 02w01 SEC2: SEC2
0x4003353C C   FIELD 03w01 SEC3: SEC3
0x4003353C C   FIELD 04w01 SEC4: SEC4
0x4003353C C   FIELD 05w01 SEC5: SEC5
0x4003353C C   FIELD 06w01 SEC6: SEC6
0x4003353C C   FIELD 07w01 SEC7: SEC7
0x4003353C C   FIELD 08w01 SEC8: SEC8
0x4003353C C   FIELD 09w01 SEC9: SEC9
0x4003353C C   FIELD 10w01 SEC10: SEC10
0x4003353C C   FIELD 11w01 SEC11: SEC11
0x4003353C C   FIELD 12w01 SEC12: SEC12
0x4003353C C   FIELD 13w01 SEC13: SEC13
0x4003353C C   FIELD 14w01 SEC14: SEC14
0x4003353C C   FIELD 15w01 SEC15: SEC15
0x4003353C C   FIELD 16w01 SEC16: SEC16
0x4003353C C   FIELD 17w01 SEC17: SEC17
0x4003353C C   FIELD 18w01 SEC18: SEC18
0x4003353C C   FIELD 19w01 SEC19: SEC19
0x4003353C C   FIELD 20w01 SEC20: SEC20
0x4003353C C   FIELD 21w01 SEC21: SEC21
0x4003353C C   FIELD 22w01 SEC22: SEC22
0x4003353C C   FIELD 23w01 SEC23: SEC23
0x4003353C C   FIELD 24w01 SEC24: SEC24
0x4003353C C   FIELD 25w01 SEC25: SEC25
0x4003353C C   FIELD 26w01 SEC26: SEC26
0x4003353C C   FIELD 27w01 SEC27: SEC27
0x4003353C C   FIELD 28w01 SEC28: SEC28
0x4003353C C   FIELD 29w01 SEC29: SEC29
0x4003353C C   FIELD 30w01 SEC30: SEC30
0x4003353C C   FIELD 31w01 SEC31: SEC31
0x40033540 B  REGISTER MPCBB3_SECCFGR16 (rw): MPCBBx security configuration for super-block x register
0x40033540 C   FIELD 00w01 SEC0: SEC0
0x40033540 C   FIELD 01w01 SEC1: SEC1
0x40033540 C   FIELD 02w01 SEC2: SEC2
0x40033540 C   FIELD 03w01 SEC3: SEC3
0x40033540 C   FIELD 04w01 SEC4: SEC4
0x40033540 C   FIELD 05w01 SEC5: SEC5
0x40033540 C   FIELD 06w01 SEC6: SEC6
0x40033540 C   FIELD 07w01 SEC7: SEC7
0x40033540 C   FIELD 08w01 SEC8: SEC8
0x40033540 C   FIELD 09w01 SEC9: SEC9
0x40033540 C   FIELD 10w01 SEC10: SEC10
0x40033540 C   FIELD 11w01 SEC11: SEC11
0x40033540 C   FIELD 12w01 SEC12: SEC12
0x40033540 C   FIELD 13w01 SEC13: SEC13
0x40033540 C   FIELD 14w01 SEC14: SEC14
0x40033540 C   FIELD 15w01 SEC15: SEC15
0x40033540 C   FIELD 16w01 SEC16: SEC16
0x40033540 C   FIELD 17w01 SEC17: SEC17
0x40033540 C   FIELD 18w01 SEC18: SEC18
0x40033540 C   FIELD 19w01 SEC19: SEC19
0x40033540 C   FIELD 20w01 SEC20: SEC20
0x40033540 C   FIELD 21w01 SEC21: SEC21
0x40033540 C   FIELD 22w01 SEC22: SEC22
0x40033540 C   FIELD 23w01 SEC23: SEC23
0x40033540 C   FIELD 24w01 SEC24: SEC24
0x40033540 C   FIELD 25w01 SEC25: SEC25
0x40033540 C   FIELD 26w01 SEC26: SEC26
0x40033540 C   FIELD 27w01 SEC27: SEC27
0x40033540 C   FIELD 28w01 SEC28: SEC28
0x40033540 C   FIELD 29w01 SEC29: SEC29
0x40033540 C   FIELD 30w01 SEC30: SEC30
0x40033540 C   FIELD 31w01 SEC31: SEC31
0x40033544 B  REGISTER MPCBB3_SECCFGR17 (rw): MPCBBx security configuration for super-block x register
0x40033544 C   FIELD 00w01 SEC0: SEC0
0x40033544 C   FIELD 01w01 SEC1: SEC1
0x40033544 C   FIELD 02w01 SEC2: SEC2
0x40033544 C   FIELD 03w01 SEC3: SEC3
0x40033544 C   FIELD 04w01 SEC4: SEC4
0x40033544 C   FIELD 05w01 SEC5: SEC5
0x40033544 C   FIELD 06w01 SEC6: SEC6
0x40033544 C   FIELD 07w01 SEC7: SEC7
0x40033544 C   FIELD 08w01 SEC8: SEC8
0x40033544 C   FIELD 09w01 SEC9: SEC9
0x40033544 C   FIELD 10w01 SEC10: SEC10
0x40033544 C   FIELD 11w01 SEC11: SEC11
0x40033544 C   FIELD 12w01 SEC12: SEC12
0x40033544 C   FIELD 13w01 SEC13: SEC13
0x40033544 C   FIELD 14w01 SEC14: SEC14
0x40033544 C   FIELD 15w01 SEC15: SEC15
0x40033544 C   FIELD 16w01 SEC16: SEC16
0x40033544 C   FIELD 17w01 SEC17: SEC17
0x40033544 C   FIELD 18w01 SEC18: SEC18
0x40033544 C   FIELD 19w01 SEC19: SEC19
0x40033544 C   FIELD 20w01 SEC20: SEC20
0x40033544 C   FIELD 21w01 SEC21: SEC21
0x40033544 C   FIELD 22w01 SEC22: SEC22
0x40033544 C   FIELD 23w01 SEC23: SEC23
0x40033544 C   FIELD 24w01 SEC24: SEC24
0x40033544 C   FIELD 25w01 SEC25: SEC25
0x40033544 C   FIELD 26w01 SEC26: SEC26
0x40033544 C   FIELD 27w01 SEC27: SEC27
0x40033544 C   FIELD 28w01 SEC28: SEC28
0x40033544 C   FIELD 29w01 SEC29: SEC29
0x40033544 C   FIELD 30w01 SEC30: SEC30
0x40033544 C   FIELD 31w01 SEC31: SEC31
0x40033548 B  REGISTER MPCBB3_SECCFGR18 (rw): MPCBBx security configuration for super-block x register
0x40033548 C   FIELD 00w01 SEC0: SEC0
0x40033548 C   FIELD 01w01 SEC1: SEC1
0x40033548 C   FIELD 02w01 SEC2: SEC2
0x40033548 C   FIELD 03w01 SEC3: SEC3
0x40033548 C   FIELD 04w01 SEC4: SEC4
0x40033548 C   FIELD 05w01 SEC5: SEC5
0x40033548 C   FIELD 06w01 SEC6: SEC6
0x40033548 C   FIELD 07w01 SEC7: SEC7
0x40033548 C   FIELD 08w01 SEC8: SEC8
0x40033548 C   FIELD 09w01 SEC9: SEC9
0x40033548 C   FIELD 10w01 SEC10: SEC10
0x40033548 C   FIELD 11w01 SEC11: SEC11
0x40033548 C   FIELD 12w01 SEC12: SEC12
0x40033548 C   FIELD 13w01 SEC13: SEC13
0x40033548 C   FIELD 14w01 SEC14: SEC14
0x40033548 C   FIELD 15w01 SEC15: SEC15
0x40033548 C   FIELD 16w01 SEC16: SEC16
0x40033548 C   FIELD 17w01 SEC17: SEC17
0x40033548 C   FIELD 18w01 SEC18: SEC18
0x40033548 C   FIELD 19w01 SEC19: SEC19
0x40033548 C   FIELD 20w01 SEC20: SEC20
0x40033548 C   FIELD 21w01 SEC21: SEC21
0x40033548 C   FIELD 22w01 SEC22: SEC22
0x40033548 C   FIELD 23w01 SEC23: SEC23
0x40033548 C   FIELD 24w01 SEC24: SEC24
0x40033548 C   FIELD 25w01 SEC25: SEC25
0x40033548 C   FIELD 26w01 SEC26: SEC26
0x40033548 C   FIELD 27w01 SEC27: SEC27
0x40033548 C   FIELD 28w01 SEC28: SEC28
0x40033548 C   FIELD 29w01 SEC29: SEC29
0x40033548 C   FIELD 30w01 SEC30: SEC30
0x40033548 C   FIELD 31w01 SEC31: SEC31
0x4003354C B  REGISTER MPCBB3_SECCFGR19 (rw): MPCBBx security configuration for super-block x register
0x4003354C C   FIELD 00w01 SEC0: SEC0
0x4003354C C   FIELD 01w01 SEC1: SEC1
0x4003354C C   FIELD 02w01 SEC2: SEC2
0x4003354C C   FIELD 03w01 SEC3: SEC3
0x4003354C C   FIELD 04w01 SEC4: SEC4
0x4003354C C   FIELD 05w01 SEC5: SEC5
0x4003354C C   FIELD 06w01 SEC6: SEC6
0x4003354C C   FIELD 07w01 SEC7: SEC7
0x4003354C C   FIELD 08w01 SEC8: SEC8
0x4003354C C   FIELD 09w01 SEC9: SEC9
0x4003354C C   FIELD 10w01 SEC10: SEC10
0x4003354C C   FIELD 11w01 SEC11: SEC11
0x4003354C C   FIELD 12w01 SEC12: SEC12
0x4003354C C   FIELD 13w01 SEC13: SEC13
0x4003354C C   FIELD 14w01 SEC14: SEC14
0x4003354C C   FIELD 15w01 SEC15: SEC15
0x4003354C C   FIELD 16w01 SEC16: SEC16
0x4003354C C   FIELD 17w01 SEC17: SEC17
0x4003354C C   FIELD 18w01 SEC18: SEC18
0x4003354C C   FIELD 19w01 SEC19: SEC19
0x4003354C C   FIELD 20w01 SEC20: SEC20
0x4003354C C   FIELD 21w01 SEC21: SEC21
0x4003354C C   FIELD 22w01 SEC22: SEC22
0x4003354C C   FIELD 23w01 SEC23: SEC23
0x4003354C C   FIELD 24w01 SEC24: SEC24
0x4003354C C   FIELD 25w01 SEC25: SEC25
0x4003354C C   FIELD 26w01 SEC26: SEC26
0x4003354C C   FIELD 27w01 SEC27: SEC27
0x4003354C C   FIELD 28w01 SEC28: SEC28
0x4003354C C   FIELD 29w01 SEC29: SEC29
0x4003354C C   FIELD 30w01 SEC30: SEC30
0x4003354C C   FIELD 31w01 SEC31: SEC31
0x40033550 B  REGISTER MPCBB3_SECCFGR20 (rw): MPCBBx security configuration for super-block x register
0x40033550 C   FIELD 00w01 SEC0: SEC0
0x40033550 C   FIELD 01w01 SEC1: SEC1
0x40033550 C   FIELD 02w01 SEC2: SEC2
0x40033550 C   FIELD 03w01 SEC3: SEC3
0x40033550 C   FIELD 04w01 SEC4: SEC4
0x40033550 C   FIELD 05w01 SEC5: SEC5
0x40033550 C   FIELD 06w01 SEC6: SEC6
0x40033550 C   FIELD 07w01 SEC7: SEC7
0x40033550 C   FIELD 08w01 SEC8: SEC8
0x40033550 C   FIELD 09w01 SEC9: SEC9
0x40033550 C   FIELD 10w01 SEC10: SEC10
0x40033550 C   FIELD 11w01 SEC11: SEC11
0x40033550 C   FIELD 12w01 SEC12: SEC12
0x40033550 C   FIELD 13w01 SEC13: SEC13
0x40033550 C   FIELD 14w01 SEC14: SEC14
0x40033550 C   FIELD 15w01 SEC15: SEC15
0x40033550 C   FIELD 16w01 SEC16: SEC16
0x40033550 C   FIELD 17w01 SEC17: SEC17
0x40033550 C   FIELD 18w01 SEC18: SEC18
0x40033550 C   FIELD 19w01 SEC19: SEC19
0x40033550 C   FIELD 20w01 SEC20: SEC20
0x40033550 C   FIELD 21w01 SEC21: SEC21
0x40033550 C   FIELD 22w01 SEC22: SEC22
0x40033550 C   FIELD 23w01 SEC23: SEC23
0x40033550 C   FIELD 24w01 SEC24: SEC24
0x40033550 C   FIELD 25w01 SEC25: SEC25
0x40033550 C   FIELD 26w01 SEC26: SEC26
0x40033550 C   FIELD 27w01 SEC27: SEC27
0x40033550 C   FIELD 28w01 SEC28: SEC28
0x40033550 C   FIELD 29w01 SEC29: SEC29
0x40033550 C   FIELD 30w01 SEC30: SEC30
0x40033550 C   FIELD 31w01 SEC31: SEC31
0x40033554 B  REGISTER MPCBB3_SECCFGR21 (rw): MPCBBx security configuration for super-block x register
0x40033554 C   FIELD 00w01 SEC0: SEC0
0x40033554 C   FIELD 01w01 SEC1: SEC1
0x40033554 C   FIELD 02w01 SEC2: SEC2
0x40033554 C   FIELD 03w01 SEC3: SEC3
0x40033554 C   FIELD 04w01 SEC4: SEC4
0x40033554 C   FIELD 05w01 SEC5: SEC5
0x40033554 C   FIELD 06w01 SEC6: SEC6
0x40033554 C   FIELD 07w01 SEC7: SEC7
0x40033554 C   FIELD 08w01 SEC8: SEC8
0x40033554 C   FIELD 09w01 SEC9: SEC9
0x40033554 C   FIELD 10w01 SEC10: SEC10
0x40033554 C   FIELD 11w01 SEC11: SEC11
0x40033554 C   FIELD 12w01 SEC12: SEC12
0x40033554 C   FIELD 13w01 SEC13: SEC13
0x40033554 C   FIELD 14w01 SEC14: SEC14
0x40033554 C   FIELD 15w01 SEC15: SEC15
0x40033554 C   FIELD 16w01 SEC16: SEC16
0x40033554 C   FIELD 17w01 SEC17: SEC17
0x40033554 C   FIELD 18w01 SEC18: SEC18
0x40033554 C   FIELD 19w01 SEC19: SEC19
0x40033554 C   FIELD 20w01 SEC20: SEC20
0x40033554 C   FIELD 21w01 SEC21: SEC21
0x40033554 C   FIELD 22w01 SEC22: SEC22
0x40033554 C   FIELD 23w01 SEC23: SEC23
0x40033554 C   FIELD 24w01 SEC24: SEC24
0x40033554 C   FIELD 25w01 SEC25: SEC25
0x40033554 C   FIELD 26w01 SEC26: SEC26
0x40033554 C   FIELD 27w01 SEC27: SEC27
0x40033554 C   FIELD 28w01 SEC28: SEC28
0x40033554 C   FIELD 29w01 SEC29: SEC29
0x40033554 C   FIELD 30w01 SEC30: SEC30
0x40033554 C   FIELD 31w01 SEC31: SEC31
0x40033558 B  REGISTER MPCBB3_SECCFGR22 (rw): MPCBBx security configuration for super-block x register
0x40033558 C   FIELD 00w01 SEC0: SEC0
0x40033558 C   FIELD 01w01 SEC1: SEC1
0x40033558 C   FIELD 02w01 SEC2: SEC2
0x40033558 C   FIELD 03w01 SEC3: SEC3
0x40033558 C   FIELD 04w01 SEC4: SEC4
0x40033558 C   FIELD 05w01 SEC5: SEC5
0x40033558 C   FIELD 06w01 SEC6: SEC6
0x40033558 C   FIELD 07w01 SEC7: SEC7
0x40033558 C   FIELD 08w01 SEC8: SEC8
0x40033558 C   FIELD 09w01 SEC9: SEC9
0x40033558 C   FIELD 10w01 SEC10: SEC10
0x40033558 C   FIELD 11w01 SEC11: SEC11
0x40033558 C   FIELD 12w01 SEC12: SEC12
0x40033558 C   FIELD 13w01 SEC13: SEC13
0x40033558 C   FIELD 14w01 SEC14: SEC14
0x40033558 C   FIELD 15w01 SEC15: SEC15
0x40033558 C   FIELD 16w01 SEC16: SEC16
0x40033558 C   FIELD 17w01 SEC17: SEC17
0x40033558 C   FIELD 18w01 SEC18: SEC18
0x40033558 C   FIELD 19w01 SEC19: SEC19
0x40033558 C   FIELD 20w01 SEC20: SEC20
0x40033558 C   FIELD 21w01 SEC21: SEC21
0x40033558 C   FIELD 22w01 SEC22: SEC22
0x40033558 C   FIELD 23w01 SEC23: SEC23
0x40033558 C   FIELD 24w01 SEC24: SEC24
0x40033558 C   FIELD 25w01 SEC25: SEC25
0x40033558 C   FIELD 26w01 SEC26: SEC26
0x40033558 C   FIELD 27w01 SEC27: SEC27
0x40033558 C   FIELD 28w01 SEC28: SEC28
0x40033558 C   FIELD 29w01 SEC29: SEC29
0x40033558 C   FIELD 30w01 SEC30: SEC30
0x40033558 C   FIELD 31w01 SEC31: SEC31
0x4003355C B  REGISTER MPCBB3_SECCFGR23 (rw): MPCBBx security configuration for super-block x register
0x4003355C C   FIELD 00w01 SEC0: SEC0
0x4003355C C   FIELD 01w01 SEC1: SEC1
0x4003355C C   FIELD 02w01 SEC2: SEC2
0x4003355C C   FIELD 03w01 SEC3: SEC3
0x4003355C C   FIELD 04w01 SEC4: SEC4
0x4003355C C   FIELD 05w01 SEC5: SEC5
0x4003355C C   FIELD 06w01 SEC6: SEC6
0x4003355C C   FIELD 07w01 SEC7: SEC7
0x4003355C C   FIELD 08w01 SEC8: SEC8
0x4003355C C   FIELD 09w01 SEC9: SEC9
0x4003355C C   FIELD 10w01 SEC10: SEC10
0x4003355C C   FIELD 11w01 SEC11: SEC11
0x4003355C C   FIELD 12w01 SEC12: SEC12
0x4003355C C   FIELD 13w01 SEC13: SEC13
0x4003355C C   FIELD 14w01 SEC14: SEC14
0x4003355C C   FIELD 15w01 SEC15: SEC15
0x4003355C C   FIELD 16w01 SEC16: SEC16
0x4003355C C   FIELD 17w01 SEC17: SEC17
0x4003355C C   FIELD 18w01 SEC18: SEC18
0x4003355C C   FIELD 19w01 SEC19: SEC19
0x4003355C C   FIELD 20w01 SEC20: SEC20
0x4003355C C   FIELD 21w01 SEC21: SEC21
0x4003355C C   FIELD 22w01 SEC22: SEC22
0x4003355C C   FIELD 23w01 SEC23: SEC23
0x4003355C C   FIELD 24w01 SEC24: SEC24
0x4003355C C   FIELD 25w01 SEC25: SEC25
0x4003355C C   FIELD 26w01 SEC26: SEC26
0x4003355C C   FIELD 27w01 SEC27: SEC27
0x4003355C C   FIELD 28w01 SEC28: SEC28
0x4003355C C   FIELD 29w01 SEC29: SEC29
0x4003355C C   FIELD 30w01 SEC30: SEC30
0x4003355C C   FIELD 31w01 SEC31: SEC31
0x40033560 B  REGISTER MPCBB3_SECCFGR24 (rw): MPCBBx security configuration for super-block x register
0x40033560 C   FIELD 00w01 SEC0: SEC0
0x40033560 C   FIELD 01w01 SEC1: SEC1
0x40033560 C   FIELD 02w01 SEC2: SEC2
0x40033560 C   FIELD 03w01 SEC3: SEC3
0x40033560 C   FIELD 04w01 SEC4: SEC4
0x40033560 C   FIELD 05w01 SEC5: SEC5
0x40033560 C   FIELD 06w01 SEC6: SEC6
0x40033560 C   FIELD 07w01 SEC7: SEC7
0x40033560 C   FIELD 08w01 SEC8: SEC8
0x40033560 C   FIELD 09w01 SEC9: SEC9
0x40033560 C   FIELD 10w01 SEC10: SEC10
0x40033560 C   FIELD 11w01 SEC11: SEC11
0x40033560 C   FIELD 12w01 SEC12: SEC12
0x40033560 C   FIELD 13w01 SEC13: SEC13
0x40033560 C   FIELD 14w01 SEC14: SEC14
0x40033560 C   FIELD 15w01 SEC15: SEC15
0x40033560 C   FIELD 16w01 SEC16: SEC16
0x40033560 C   FIELD 17w01 SEC17: SEC17
0x40033560 C   FIELD 18w01 SEC18: SEC18
0x40033560 C   FIELD 19w01 SEC19: SEC19
0x40033560 C   FIELD 20w01 SEC20: SEC20
0x40033560 C   FIELD 21w01 SEC21: SEC21
0x40033560 C   FIELD 22w01 SEC22: SEC22
0x40033560 C   FIELD 23w01 SEC23: SEC23
0x40033560 C   FIELD 24w01 SEC24: SEC24
0x40033560 C   FIELD 25w01 SEC25: SEC25
0x40033560 C   FIELD 26w01 SEC26: SEC26
0x40033560 C   FIELD 27w01 SEC27: SEC27
0x40033560 C   FIELD 28w01 SEC28: SEC28
0x40033560 C   FIELD 29w01 SEC29: SEC29
0x40033560 C   FIELD 30w01 SEC30: SEC30
0x40033560 C   FIELD 31w01 SEC31: SEC31
0x40033564 B  REGISTER MPCBB3_SECCFGR25 (rw): MPCBBx security configuration for super-block x register
0x40033564 C   FIELD 00w01 SEC0: SEC0
0x40033564 C   FIELD 01w01 SEC1: SEC1
0x40033564 C   FIELD 02w01 SEC2: SEC2
0x40033564 C   FIELD 03w01 SEC3: SEC3
0x40033564 C   FIELD 04w01 SEC4: SEC4
0x40033564 C   FIELD 05w01 SEC5: SEC5
0x40033564 C   FIELD 06w01 SEC6: SEC6
0x40033564 C   FIELD 07w01 SEC7: SEC7
0x40033564 C   FIELD 08w01 SEC8: SEC8
0x40033564 C   FIELD 09w01 SEC9: SEC9
0x40033564 C   FIELD 10w01 SEC10: SEC10
0x40033564 C   FIELD 11w01 SEC11: SEC11
0x40033564 C   FIELD 12w01 SEC12: SEC12
0x40033564 C   FIELD 13w01 SEC13: SEC13
0x40033564 C   FIELD 14w01 SEC14: SEC14
0x40033564 C   FIELD 15w01 SEC15: SEC15
0x40033564 C   FIELD 16w01 SEC16: SEC16
0x40033564 C   FIELD 17w01 SEC17: SEC17
0x40033564 C   FIELD 18w01 SEC18: SEC18
0x40033564 C   FIELD 19w01 SEC19: SEC19
0x40033564 C   FIELD 20w01 SEC20: SEC20
0x40033564 C   FIELD 21w01 SEC21: SEC21
0x40033564 C   FIELD 22w01 SEC22: SEC22
0x40033564 C   FIELD 23w01 SEC23: SEC23
0x40033564 C   FIELD 24w01 SEC24: SEC24
0x40033564 C   FIELD 25w01 SEC25: SEC25
0x40033564 C   FIELD 26w01 SEC26: SEC26
0x40033564 C   FIELD 27w01 SEC27: SEC27
0x40033564 C   FIELD 28w01 SEC28: SEC28
0x40033564 C   FIELD 29w01 SEC29: SEC29
0x40033564 C   FIELD 30w01 SEC30: SEC30
0x40033564 C   FIELD 31w01 SEC31: SEC31
0x40033568 B  REGISTER MPCBB3_SECCFGR26 (rw): MPCBBx security configuration for super-block x register
0x40033568 C   FIELD 00w01 SEC0: SEC0
0x40033568 C   FIELD 01w01 SEC1: SEC1
0x40033568 C   FIELD 02w01 SEC2: SEC2
0x40033568 C   FIELD 03w01 SEC3: SEC3
0x40033568 C   FIELD 04w01 SEC4: SEC4
0x40033568 C   FIELD 05w01 SEC5: SEC5
0x40033568 C   FIELD 06w01 SEC6: SEC6
0x40033568 C   FIELD 07w01 SEC7: SEC7
0x40033568 C   FIELD 08w01 SEC8: SEC8
0x40033568 C   FIELD 09w01 SEC9: SEC9
0x40033568 C   FIELD 10w01 SEC10: SEC10
0x40033568 C   FIELD 11w01 SEC11: SEC11
0x40033568 C   FIELD 12w01 SEC12: SEC12
0x40033568 C   FIELD 13w01 SEC13: SEC13
0x40033568 C   FIELD 14w01 SEC14: SEC14
0x40033568 C   FIELD 15w01 SEC15: SEC15
0x40033568 C   FIELD 16w01 SEC16: SEC16
0x40033568 C   FIELD 17w01 SEC17: SEC17
0x40033568 C   FIELD 18w01 SEC18: SEC18
0x40033568 C   FIELD 19w01 SEC19: SEC19
0x40033568 C   FIELD 20w01 SEC20: SEC20
0x40033568 C   FIELD 21w01 SEC21: SEC21
0x40033568 C   FIELD 22w01 SEC22: SEC22
0x40033568 C   FIELD 23w01 SEC23: SEC23
0x40033568 C   FIELD 24w01 SEC24: SEC24
0x40033568 C   FIELD 25w01 SEC25: SEC25
0x40033568 C   FIELD 26w01 SEC26: SEC26
0x40033568 C   FIELD 27w01 SEC27: SEC27
0x40033568 C   FIELD 28w01 SEC28: SEC28
0x40033568 C   FIELD 29w01 SEC29: SEC29
0x40033568 C   FIELD 30w01 SEC30: SEC30
0x40033568 C   FIELD 31w01 SEC31: SEC31
0x4003356C B  REGISTER MPCBB3_SECCFGR27 (rw): MPCBBx security configuration for super-block x register
0x4003356C C   FIELD 00w01 SEC0: SEC0
0x4003356C C   FIELD 01w01 SEC1: SEC1
0x4003356C C   FIELD 02w01 SEC2: SEC2
0x4003356C C   FIELD 03w01 SEC3: SEC3
0x4003356C C   FIELD 04w01 SEC4: SEC4
0x4003356C C   FIELD 05w01 SEC5: SEC5
0x4003356C C   FIELD 06w01 SEC6: SEC6
0x4003356C C   FIELD 07w01 SEC7: SEC7
0x4003356C C   FIELD 08w01 SEC8: SEC8
0x4003356C C   FIELD 09w01 SEC9: SEC9
0x4003356C C   FIELD 10w01 SEC10: SEC10
0x4003356C C   FIELD 11w01 SEC11: SEC11
0x4003356C C   FIELD 12w01 SEC12: SEC12
0x4003356C C   FIELD 13w01 SEC13: SEC13
0x4003356C C   FIELD 14w01 SEC14: SEC14
0x4003356C C   FIELD 15w01 SEC15: SEC15
0x4003356C C   FIELD 16w01 SEC16: SEC16
0x4003356C C   FIELD 17w01 SEC17: SEC17
0x4003356C C   FIELD 18w01 SEC18: SEC18
0x4003356C C   FIELD 19w01 SEC19: SEC19
0x4003356C C   FIELD 20w01 SEC20: SEC20
0x4003356C C   FIELD 21w01 SEC21: SEC21
0x4003356C C   FIELD 22w01 SEC22: SEC22
0x4003356C C   FIELD 23w01 SEC23: SEC23
0x4003356C C   FIELD 24w01 SEC24: SEC24
0x4003356C C   FIELD 25w01 SEC25: SEC25
0x4003356C C   FIELD 26w01 SEC26: SEC26
0x4003356C C   FIELD 27w01 SEC27: SEC27
0x4003356C C   FIELD 28w01 SEC28: SEC28
0x4003356C C   FIELD 29w01 SEC29: SEC29
0x4003356C C   FIELD 30w01 SEC30: SEC30
0x4003356C C   FIELD 31w01 SEC31: SEC31
0x40033570 B  REGISTER MPCBB3_SECCFGR28 (rw): MPCBBx security configuration for super-block x register
0x40033570 C   FIELD 00w01 SEC0: SEC0
0x40033570 C   FIELD 01w01 SEC1: SEC1
0x40033570 C   FIELD 02w01 SEC2: SEC2
0x40033570 C   FIELD 03w01 SEC3: SEC3
0x40033570 C   FIELD 04w01 SEC4: SEC4
0x40033570 C   FIELD 05w01 SEC5: SEC5
0x40033570 C   FIELD 06w01 SEC6: SEC6
0x40033570 C   FIELD 07w01 SEC7: SEC7
0x40033570 C   FIELD 08w01 SEC8: SEC8
0x40033570 C   FIELD 09w01 SEC9: SEC9
0x40033570 C   FIELD 10w01 SEC10: SEC10
0x40033570 C   FIELD 11w01 SEC11: SEC11
0x40033570 C   FIELD 12w01 SEC12: SEC12
0x40033570 C   FIELD 13w01 SEC13: SEC13
0x40033570 C   FIELD 14w01 SEC14: SEC14
0x40033570 C   FIELD 15w01 SEC15: SEC15
0x40033570 C   FIELD 16w01 SEC16: SEC16
0x40033570 C   FIELD 17w01 SEC17: SEC17
0x40033570 C   FIELD 18w01 SEC18: SEC18
0x40033570 C   FIELD 19w01 SEC19: SEC19
0x40033570 C   FIELD 20w01 SEC20: SEC20
0x40033570 C   FIELD 21w01 SEC21: SEC21
0x40033570 C   FIELD 22w01 SEC22: SEC22
0x40033570 C   FIELD 23w01 SEC23: SEC23
0x40033570 C   FIELD 24w01 SEC24: SEC24
0x40033570 C   FIELD 25w01 SEC25: SEC25
0x40033570 C   FIELD 26w01 SEC26: SEC26
0x40033570 C   FIELD 27w01 SEC27: SEC27
0x40033570 C   FIELD 28w01 SEC28: SEC28
0x40033570 C   FIELD 29w01 SEC29: SEC29
0x40033570 C   FIELD 30w01 SEC30: SEC30
0x40033570 C   FIELD 31w01 SEC31: SEC31
0x40033574 B  REGISTER MPCBB3_SECCFGR29 (rw): MPCBBx security configuration for super-block x register
0x40033574 C   FIELD 00w01 SEC0: SEC0
0x40033574 C   FIELD 01w01 SEC1: SEC1
0x40033574 C   FIELD 02w01 SEC2: SEC2
0x40033574 C   FIELD 03w01 SEC3: SEC3
0x40033574 C   FIELD 04w01 SEC4: SEC4
0x40033574 C   FIELD 05w01 SEC5: SEC5
0x40033574 C   FIELD 06w01 SEC6: SEC6
0x40033574 C   FIELD 07w01 SEC7: SEC7
0x40033574 C   FIELD 08w01 SEC8: SEC8
0x40033574 C   FIELD 09w01 SEC9: SEC9
0x40033574 C   FIELD 10w01 SEC10: SEC10
0x40033574 C   FIELD 11w01 SEC11: SEC11
0x40033574 C   FIELD 12w01 SEC12: SEC12
0x40033574 C   FIELD 13w01 SEC13: SEC13
0x40033574 C   FIELD 14w01 SEC14: SEC14
0x40033574 C   FIELD 15w01 SEC15: SEC15
0x40033574 C   FIELD 16w01 SEC16: SEC16
0x40033574 C   FIELD 17w01 SEC17: SEC17
0x40033574 C   FIELD 18w01 SEC18: SEC18
0x40033574 C   FIELD 19w01 SEC19: SEC19
0x40033574 C   FIELD 20w01 SEC20: SEC20
0x40033574 C   FIELD 21w01 SEC21: SEC21
0x40033574 C   FIELD 22w01 SEC22: SEC22
0x40033574 C   FIELD 23w01 SEC23: SEC23
0x40033574 C   FIELD 24w01 SEC24: SEC24
0x40033574 C   FIELD 25w01 SEC25: SEC25
0x40033574 C   FIELD 26w01 SEC26: SEC26
0x40033574 C   FIELD 27w01 SEC27: SEC27
0x40033574 C   FIELD 28w01 SEC28: SEC28
0x40033574 C   FIELD 29w01 SEC29: SEC29
0x40033574 C   FIELD 30w01 SEC30: SEC30
0x40033574 C   FIELD 31w01 SEC31: SEC31
0x40033578 B  REGISTER MPCBB3_SECCFGR30 (rw): MPCBBx security configuration for super-block x register
0x40033578 C   FIELD 00w01 SEC0: SEC0
0x40033578 C   FIELD 01w01 SEC1: SEC1
0x40033578 C   FIELD 02w01 SEC2: SEC2
0x40033578 C   FIELD 03w01 SEC3: SEC3
0x40033578 C   FIELD 04w01 SEC4: SEC4
0x40033578 C   FIELD 05w01 SEC5: SEC5
0x40033578 C   FIELD 06w01 SEC6: SEC6
0x40033578 C   FIELD 07w01 SEC7: SEC7
0x40033578 C   FIELD 08w01 SEC8: SEC8
0x40033578 C   FIELD 09w01 SEC9: SEC9
0x40033578 C   FIELD 10w01 SEC10: SEC10
0x40033578 C   FIELD 11w01 SEC11: SEC11
0x40033578 C   FIELD 12w01 SEC12: SEC12
0x40033578 C   FIELD 13w01 SEC13: SEC13
0x40033578 C   FIELD 14w01 SEC14: SEC14
0x40033578 C   FIELD 15w01 SEC15: SEC15
0x40033578 C   FIELD 16w01 SEC16: SEC16
0x40033578 C   FIELD 17w01 SEC17: SEC17
0x40033578 C   FIELD 18w01 SEC18: SEC18
0x40033578 C   FIELD 19w01 SEC19: SEC19
0x40033578 C   FIELD 20w01 SEC20: SEC20
0x40033578 C   FIELD 21w01 SEC21: SEC21
0x40033578 C   FIELD 22w01 SEC22: SEC22
0x40033578 C   FIELD 23w01 SEC23: SEC23
0x40033578 C   FIELD 24w01 SEC24: SEC24
0x40033578 C   FIELD 25w01 SEC25: SEC25
0x40033578 C   FIELD 26w01 SEC26: SEC26
0x40033578 C   FIELD 27w01 SEC27: SEC27
0x40033578 C   FIELD 28w01 SEC28: SEC28
0x40033578 C   FIELD 29w01 SEC29: SEC29
0x40033578 C   FIELD 30w01 SEC30: SEC30
0x40033578 C   FIELD 31w01 SEC31: SEC31
0x4003357C B  REGISTER MPCBB3_SECCFGR31 (rw): MPCBBx security configuration for super-block x register
0x4003357C C   FIELD 00w01 SEC0: SEC0
0x4003357C C   FIELD 01w01 SEC1: SEC1
0x4003357C C   FIELD 02w01 SEC2: SEC2
0x4003357C C   FIELD 03w01 SEC3: SEC3
0x4003357C C   FIELD 04w01 SEC4: SEC4
0x4003357C C   FIELD 05w01 SEC5: SEC5
0x4003357C C   FIELD 06w01 SEC6: SEC6
0x4003357C C   FIELD 07w01 SEC7: SEC7
0x4003357C C   FIELD 08w01 SEC8: SEC8
0x4003357C C   FIELD 09w01 SEC9: SEC9
0x4003357C C   FIELD 10w01 SEC10: SEC10
0x4003357C C   FIELD 11w01 SEC11: SEC11
0x4003357C C   FIELD 12w01 SEC12: SEC12
0x4003357C C   FIELD 13w01 SEC13: SEC13
0x4003357C C   FIELD 14w01 SEC14: SEC14
0x4003357C C   FIELD 15w01 SEC15: SEC15
0x4003357C C   FIELD 16w01 SEC16: SEC16
0x4003357C C   FIELD 17w01 SEC17: SEC17
0x4003357C C   FIELD 18w01 SEC18: SEC18
0x4003357C C   FIELD 19w01 SEC19: SEC19
0x4003357C C   FIELD 20w01 SEC20: SEC20
0x4003357C C   FIELD 21w01 SEC21: SEC21
0x4003357C C   FIELD 22w01 SEC22: SEC22
0x4003357C C   FIELD 23w01 SEC23: SEC23
0x4003357C C   FIELD 24w01 SEC24: SEC24
0x4003357C C   FIELD 25w01 SEC25: SEC25
0x4003357C C   FIELD 26w01 SEC26: SEC26
0x4003357C C   FIELD 27w01 SEC27: SEC27
0x4003357C C   FIELD 28w01 SEC28: SEC28
0x4003357C C   FIELD 29w01 SEC29: SEC29
0x4003357C C   FIELD 30w01 SEC30: SEC30
0x4003357C C   FIELD 31w01 SEC31: SEC31
0x40033600 B  REGISTER MPCBB3_PRIVCFGR0 (rw): MPCBB privileged configuration for super-block x register
0x40033600 C   FIELD 00w01 PRIV0: PRIV0
0x40033600 C   FIELD 01w01 PRIV1: PRIV1
0x40033600 C   FIELD 02w01 PRIV2: PRIV2
0x40033600 C   FIELD 03w01 PRIV3: PRIV3
0x40033600 C   FIELD 04w01 PRIV4: PRIV4
0x40033600 C   FIELD 05w01 PRIV5: PRIV5
0x40033600 C   FIELD 06w01 PRIV6: PRIV6
0x40033600 C   FIELD 07w01 PRIV7: PRIV7
0x40033600 C   FIELD 08w01 PRIV8: PRIV8
0x40033600 C   FIELD 09w01 PRIV9: PRIV9
0x40033600 C   FIELD 10w01 PRIV10: PRIV10
0x40033600 C   FIELD 11w01 PRIV11: PRIV11
0x40033600 C   FIELD 12w01 PRIV12: PRIV12
0x40033600 C   FIELD 13w01 PRIV13: PRIV13
0x40033600 C   FIELD 14w01 PRIV14: PRIV14
0x40033600 C   FIELD 15w01 PRIV15: PRIV15
0x40033600 C   FIELD 16w01 PRIV16: PRIV16
0x40033600 C   FIELD 17w01 PRIV17: PRIV17
0x40033600 C   FIELD 18w01 PRIV18: PRIV18
0x40033600 C   FIELD 19w01 PRIV19: PRIV19
0x40033600 C   FIELD 20w01 PRIV20: PRIV20
0x40033600 C   FIELD 21w01 PRIV21: PRIV21
0x40033600 C   FIELD 22w01 PRIV22: PRIV22
0x40033600 C   FIELD 23w01 PRIV23: PRIV23
0x40033600 C   FIELD 24w01 PRIV24: PRIV24
0x40033600 C   FIELD 25w01 PRIV25: PRIV25
0x40033600 C   FIELD 26w01 PRIV26: PRIV26
0x40033600 C   FIELD 27w01 PRIV27: PRIV27
0x40033600 C   FIELD 28w01 PRIV28: PRIV28
0x40033600 C   FIELD 29w01 PRIV29: PRIV29
0x40033600 C   FIELD 30w01 PRIV30: PRIV30
0x40033600 C   FIELD 31w01 PRIV31: PRIV31
0x40033604 B  REGISTER MPCBB3_PRIVCFGR1 (rw): MPCBB privileged configuration for super-block x register
0x40033604 C   FIELD 00w01 PRIV0: PRIV0
0x40033604 C   FIELD 01w01 PRIV1: PRIV1
0x40033604 C   FIELD 02w01 PRIV2: PRIV2
0x40033604 C   FIELD 03w01 PRIV3: PRIV3
0x40033604 C   FIELD 04w01 PRIV4: PRIV4
0x40033604 C   FIELD 05w01 PRIV5: PRIV5
0x40033604 C   FIELD 06w01 PRIV6: PRIV6
0x40033604 C   FIELD 07w01 PRIV7: PRIV7
0x40033604 C   FIELD 08w01 PRIV8: PRIV8
0x40033604 C   FIELD 09w01 PRIV9: PRIV9
0x40033604 C   FIELD 10w01 PRIV10: PRIV10
0x40033604 C   FIELD 11w01 PRIV11: PRIV11
0x40033604 C   FIELD 12w01 PRIV12: PRIV12
0x40033604 C   FIELD 13w01 PRIV13: PRIV13
0x40033604 C   FIELD 14w01 PRIV14: PRIV14
0x40033604 C   FIELD 15w01 PRIV15: PRIV15
0x40033604 C   FIELD 16w01 PRIV16: PRIV16
0x40033604 C   FIELD 17w01 PRIV17: PRIV17
0x40033604 C   FIELD 18w01 PRIV18: PRIV18
0x40033604 C   FIELD 19w01 PRIV19: PRIV19
0x40033604 C   FIELD 20w01 PRIV20: PRIV20
0x40033604 C   FIELD 21w01 PRIV21: PRIV21
0x40033604 C   FIELD 22w01 PRIV22: PRIV22
0x40033604 C   FIELD 23w01 PRIV23: PRIV23
0x40033604 C   FIELD 24w01 PRIV24: PRIV24
0x40033604 C   FIELD 25w01 PRIV25: PRIV25
0x40033604 C   FIELD 26w01 PRIV26: PRIV26
0x40033604 C   FIELD 27w01 PRIV27: PRIV27
0x40033604 C   FIELD 28w01 PRIV28: PRIV28
0x40033604 C   FIELD 29w01 PRIV29: PRIV29
0x40033604 C   FIELD 30w01 PRIV30: PRIV30
0x40033604 C   FIELD 31w01 PRIV31: PRIV31
0x40033608 B  REGISTER MPCBB3_PRIVCFGR2 (rw): MPCBB privileged configuration for super-block x register
0x40033608 C   FIELD 00w01 PRIV0: PRIV0
0x40033608 C   FIELD 01w01 PRIV1: PRIV1
0x40033608 C   FIELD 02w01 PRIV2: PRIV2
0x40033608 C   FIELD 03w01 PRIV3: PRIV3
0x40033608 C   FIELD 04w01 PRIV4: PRIV4
0x40033608 C   FIELD 05w01 PRIV5: PRIV5
0x40033608 C   FIELD 06w01 PRIV6: PRIV6
0x40033608 C   FIELD 07w01 PRIV7: PRIV7
0x40033608 C   FIELD 08w01 PRIV8: PRIV8
0x40033608 C   FIELD 09w01 PRIV9: PRIV9
0x40033608 C   FIELD 10w01 PRIV10: PRIV10
0x40033608 C   FIELD 11w01 PRIV11: PRIV11
0x40033608 C   FIELD 12w01 PRIV12: PRIV12
0x40033608 C   FIELD 13w01 PRIV13: PRIV13
0x40033608 C   FIELD 14w01 PRIV14: PRIV14
0x40033608 C   FIELD 15w01 PRIV15: PRIV15
0x40033608 C   FIELD 16w01 PRIV16: PRIV16
0x40033608 C   FIELD 17w01 PRIV17: PRIV17
0x40033608 C   FIELD 18w01 PRIV18: PRIV18
0x40033608 C   FIELD 19w01 PRIV19: PRIV19
0x40033608 C   FIELD 20w01 PRIV20: PRIV20
0x40033608 C   FIELD 21w01 PRIV21: PRIV21
0x40033608 C   FIELD 22w01 PRIV22: PRIV22
0x40033608 C   FIELD 23w01 PRIV23: PRIV23
0x40033608 C   FIELD 24w01 PRIV24: PRIV24
0x40033608 C   FIELD 25w01 PRIV25: PRIV25
0x40033608 C   FIELD 26w01 PRIV26: PRIV26
0x40033608 C   FIELD 27w01 PRIV27: PRIV27
0x40033608 C   FIELD 28w01 PRIV28: PRIV28
0x40033608 C   FIELD 29w01 PRIV29: PRIV29
0x40033608 C   FIELD 30w01 PRIV30: PRIV30
0x40033608 C   FIELD 31w01 PRIV31: PRIV31
0x4003360C B  REGISTER MPCBB3_PRIVCFGR3 (rw): MPCBB privileged configuration for super-block x register
0x4003360C C   FIELD 00w01 PRIV0: PRIV0
0x4003360C C   FIELD 01w01 PRIV1: PRIV1
0x4003360C C   FIELD 02w01 PRIV2: PRIV2
0x4003360C C   FIELD 03w01 PRIV3: PRIV3
0x4003360C C   FIELD 04w01 PRIV4: PRIV4
0x4003360C C   FIELD 05w01 PRIV5: PRIV5
0x4003360C C   FIELD 06w01 PRIV6: PRIV6
0x4003360C C   FIELD 07w01 PRIV7: PRIV7
0x4003360C C   FIELD 08w01 PRIV8: PRIV8
0x4003360C C   FIELD 09w01 PRIV9: PRIV9
0x4003360C C   FIELD 10w01 PRIV10: PRIV10
0x4003360C C   FIELD 11w01 PRIV11: PRIV11
0x4003360C C   FIELD 12w01 PRIV12: PRIV12
0x4003360C C   FIELD 13w01 PRIV13: PRIV13
0x4003360C C   FIELD 14w01 PRIV14: PRIV14
0x4003360C C   FIELD 15w01 PRIV15: PRIV15
0x4003360C C   FIELD 16w01 PRIV16: PRIV16
0x4003360C C   FIELD 17w01 PRIV17: PRIV17
0x4003360C C   FIELD 18w01 PRIV18: PRIV18
0x4003360C C   FIELD 19w01 PRIV19: PRIV19
0x4003360C C   FIELD 20w01 PRIV20: PRIV20
0x4003360C C   FIELD 21w01 PRIV21: PRIV21
0x4003360C C   FIELD 22w01 PRIV22: PRIV22
0x4003360C C   FIELD 23w01 PRIV23: PRIV23
0x4003360C C   FIELD 24w01 PRIV24: PRIV24
0x4003360C C   FIELD 25w01 PRIV25: PRIV25
0x4003360C C   FIELD 26w01 PRIV26: PRIV26
0x4003360C C   FIELD 27w01 PRIV27: PRIV27
0x4003360C C   FIELD 28w01 PRIV28: PRIV28
0x4003360C C   FIELD 29w01 PRIV29: PRIV29
0x4003360C C   FIELD 30w01 PRIV30: PRIV30
0x4003360C C   FIELD 31w01 PRIV31: PRIV31
0x40033610 B  REGISTER MPCBB3_PRIVCFGR4 (rw): MPCBB privileged configuration for super-block x register
0x40033610 C   FIELD 00w01 PRIV0: PRIV0
0x40033610 C   FIELD 01w01 PRIV1: PRIV1
0x40033610 C   FIELD 02w01 PRIV2: PRIV2
0x40033610 C   FIELD 03w01 PRIV3: PRIV3
0x40033610 C   FIELD 04w01 PRIV4: PRIV4
0x40033610 C   FIELD 05w01 PRIV5: PRIV5
0x40033610 C   FIELD 06w01 PRIV6: PRIV6
0x40033610 C   FIELD 07w01 PRIV7: PRIV7
0x40033610 C   FIELD 08w01 PRIV8: PRIV8
0x40033610 C   FIELD 09w01 PRIV9: PRIV9
0x40033610 C   FIELD 10w01 PRIV10: PRIV10
0x40033610 C   FIELD 11w01 PRIV11: PRIV11
0x40033610 C   FIELD 12w01 PRIV12: PRIV12
0x40033610 C   FIELD 13w01 PRIV13: PRIV13
0x40033610 C   FIELD 14w01 PRIV14: PRIV14
0x40033610 C   FIELD 15w01 PRIV15: PRIV15
0x40033610 C   FIELD 16w01 PRIV16: PRIV16
0x40033610 C   FIELD 17w01 PRIV17: PRIV17
0x40033610 C   FIELD 18w01 PRIV18: PRIV18
0x40033610 C   FIELD 19w01 PRIV19: PRIV19
0x40033610 C   FIELD 20w01 PRIV20: PRIV20
0x40033610 C   FIELD 21w01 PRIV21: PRIV21
0x40033610 C   FIELD 22w01 PRIV22: PRIV22
0x40033610 C   FIELD 23w01 PRIV23: PRIV23
0x40033610 C   FIELD 24w01 PRIV24: PRIV24
0x40033610 C   FIELD 25w01 PRIV25: PRIV25
0x40033610 C   FIELD 26w01 PRIV26: PRIV26
0x40033610 C   FIELD 27w01 PRIV27: PRIV27
0x40033610 C   FIELD 28w01 PRIV28: PRIV28
0x40033610 C   FIELD 29w01 PRIV29: PRIV29
0x40033610 C   FIELD 30w01 PRIV30: PRIV30
0x40033610 C   FIELD 31w01 PRIV31: PRIV31
0x40033614 B  REGISTER MPCBB3_PRIVCFGR5 (rw): MPCBB privileged configuration for super-block x register
0x40033614 C   FIELD 00w01 PRIV0: PRIV0
0x40033614 C   FIELD 01w01 PRIV1: PRIV1
0x40033614 C   FIELD 02w01 PRIV2: PRIV2
0x40033614 C   FIELD 03w01 PRIV3: PRIV3
0x40033614 C   FIELD 04w01 PRIV4: PRIV4
0x40033614 C   FIELD 05w01 PRIV5: PRIV5
0x40033614 C   FIELD 06w01 PRIV6: PRIV6
0x40033614 C   FIELD 07w01 PRIV7: PRIV7
0x40033614 C   FIELD 08w01 PRIV8: PRIV8
0x40033614 C   FIELD 09w01 PRIV9: PRIV9
0x40033614 C   FIELD 10w01 PRIV10: PRIV10
0x40033614 C   FIELD 11w01 PRIV11: PRIV11
0x40033614 C   FIELD 12w01 PRIV12: PRIV12
0x40033614 C   FIELD 13w01 PRIV13: PRIV13
0x40033614 C   FIELD 14w01 PRIV14: PRIV14
0x40033614 C   FIELD 15w01 PRIV15: PRIV15
0x40033614 C   FIELD 16w01 PRIV16: PRIV16
0x40033614 C   FIELD 17w01 PRIV17: PRIV17
0x40033614 C   FIELD 18w01 PRIV18: PRIV18
0x40033614 C   FIELD 19w01 PRIV19: PRIV19
0x40033614 C   FIELD 20w01 PRIV20: PRIV20
0x40033614 C   FIELD 21w01 PRIV21: PRIV21
0x40033614 C   FIELD 22w01 PRIV22: PRIV22
0x40033614 C   FIELD 23w01 PRIV23: PRIV23
0x40033614 C   FIELD 24w01 PRIV24: PRIV24
0x40033614 C   FIELD 25w01 PRIV25: PRIV25
0x40033614 C   FIELD 26w01 PRIV26: PRIV26
0x40033614 C   FIELD 27w01 PRIV27: PRIV27
0x40033614 C   FIELD 28w01 PRIV28: PRIV28
0x40033614 C   FIELD 29w01 PRIV29: PRIV29
0x40033614 C   FIELD 30w01 PRIV30: PRIV30
0x40033614 C   FIELD 31w01 PRIV31: PRIV31
0x40033618 B  REGISTER MPCBB3_PRIVCFGR6 (rw): MPCBB privileged configuration for super-block x register
0x40033618 C   FIELD 00w01 PRIV0: PRIV0
0x40033618 C   FIELD 01w01 PRIV1: PRIV1
0x40033618 C   FIELD 02w01 PRIV2: PRIV2
0x40033618 C   FIELD 03w01 PRIV3: PRIV3
0x40033618 C   FIELD 04w01 PRIV4: PRIV4
0x40033618 C   FIELD 05w01 PRIV5: PRIV5
0x40033618 C   FIELD 06w01 PRIV6: PRIV6
0x40033618 C   FIELD 07w01 PRIV7: PRIV7
0x40033618 C   FIELD 08w01 PRIV8: PRIV8
0x40033618 C   FIELD 09w01 PRIV9: PRIV9
0x40033618 C   FIELD 10w01 PRIV10: PRIV10
0x40033618 C   FIELD 11w01 PRIV11: PRIV11
0x40033618 C   FIELD 12w01 PRIV12: PRIV12
0x40033618 C   FIELD 13w01 PRIV13: PRIV13
0x40033618 C   FIELD 14w01 PRIV14: PRIV14
0x40033618 C   FIELD 15w01 PRIV15: PRIV15
0x40033618 C   FIELD 16w01 PRIV16: PRIV16
0x40033618 C   FIELD 17w01 PRIV17: PRIV17
0x40033618 C   FIELD 18w01 PRIV18: PRIV18
0x40033618 C   FIELD 19w01 PRIV19: PRIV19
0x40033618 C   FIELD 20w01 PRIV20: PRIV20
0x40033618 C   FIELD 21w01 PRIV21: PRIV21
0x40033618 C   FIELD 22w01 PRIV22: PRIV22
0x40033618 C   FIELD 23w01 PRIV23: PRIV23
0x40033618 C   FIELD 24w01 PRIV24: PRIV24
0x40033618 C   FIELD 25w01 PRIV25: PRIV25
0x40033618 C   FIELD 26w01 PRIV26: PRIV26
0x40033618 C   FIELD 27w01 PRIV27: PRIV27
0x40033618 C   FIELD 28w01 PRIV28: PRIV28
0x40033618 C   FIELD 29w01 PRIV29: PRIV29
0x40033618 C   FIELD 30w01 PRIV30: PRIV30
0x40033618 C   FIELD 31w01 PRIV31: PRIV31
0x4003361C B  REGISTER MPCBB3_PRIVCFGR7 (rw): MPCBB privileged configuration for super-block x register
0x4003361C C   FIELD 00w01 PRIV0: PRIV0
0x4003361C C   FIELD 01w01 PRIV1: PRIV1
0x4003361C C   FIELD 02w01 PRIV2: PRIV2
0x4003361C C   FIELD 03w01 PRIV3: PRIV3
0x4003361C C   FIELD 04w01 PRIV4: PRIV4
0x4003361C C   FIELD 05w01 PRIV5: PRIV5
0x4003361C C   FIELD 06w01 PRIV6: PRIV6
0x4003361C C   FIELD 07w01 PRIV7: PRIV7
0x4003361C C   FIELD 08w01 PRIV8: PRIV8
0x4003361C C   FIELD 09w01 PRIV9: PRIV9
0x4003361C C   FIELD 10w01 PRIV10: PRIV10
0x4003361C C   FIELD 11w01 PRIV11: PRIV11
0x4003361C C   FIELD 12w01 PRIV12: PRIV12
0x4003361C C   FIELD 13w01 PRIV13: PRIV13
0x4003361C C   FIELD 14w01 PRIV14: PRIV14
0x4003361C C   FIELD 15w01 PRIV15: PRIV15
0x4003361C C   FIELD 16w01 PRIV16: PRIV16
0x4003361C C   FIELD 17w01 PRIV17: PRIV17
0x4003361C C   FIELD 18w01 PRIV18: PRIV18
0x4003361C C   FIELD 19w01 PRIV19: PRIV19
0x4003361C C   FIELD 20w01 PRIV20: PRIV20
0x4003361C C   FIELD 21w01 PRIV21: PRIV21
0x4003361C C   FIELD 22w01 PRIV22: PRIV22
0x4003361C C   FIELD 23w01 PRIV23: PRIV23
0x4003361C C   FIELD 24w01 PRIV24: PRIV24
0x4003361C C   FIELD 25w01 PRIV25: PRIV25
0x4003361C C   FIELD 26w01 PRIV26: PRIV26
0x4003361C C   FIELD 27w01 PRIV27: PRIV27
0x4003361C C   FIELD 28w01 PRIV28: PRIV28
0x4003361C C   FIELD 29w01 PRIV29: PRIV29
0x4003361C C   FIELD 30w01 PRIV30: PRIV30
0x4003361C C   FIELD 31w01 PRIV31: PRIV31
0x40033620 B  REGISTER MPCBB3_PRIVCFGR8 (rw): MPCBB privileged configuration for super-block x register
0x40033620 C   FIELD 00w01 PRIV0: PRIV0
0x40033620 C   FIELD 01w01 PRIV1: PRIV1
0x40033620 C   FIELD 02w01 PRIV2: PRIV2
0x40033620 C   FIELD 03w01 PRIV3: PRIV3
0x40033620 C   FIELD 04w01 PRIV4: PRIV4
0x40033620 C   FIELD 05w01 PRIV5: PRIV5
0x40033620 C   FIELD 06w01 PRIV6: PRIV6
0x40033620 C   FIELD 07w01 PRIV7: PRIV7
0x40033620 C   FIELD 08w01 PRIV8: PRIV8
0x40033620 C   FIELD 09w01 PRIV9: PRIV9
0x40033620 C   FIELD 10w01 PRIV10: PRIV10
0x40033620 C   FIELD 11w01 PRIV11: PRIV11
0x40033620 C   FIELD 12w01 PRIV12: PRIV12
0x40033620 C   FIELD 13w01 PRIV13: PRIV13
0x40033620 C   FIELD 14w01 PRIV14: PRIV14
0x40033620 C   FIELD 15w01 PRIV15: PRIV15
0x40033620 C   FIELD 16w01 PRIV16: PRIV16
0x40033620 C   FIELD 17w01 PRIV17: PRIV17
0x40033620 C   FIELD 18w01 PRIV18: PRIV18
0x40033620 C   FIELD 19w01 PRIV19: PRIV19
0x40033620 C   FIELD 20w01 PRIV20: PRIV20
0x40033620 C   FIELD 21w01 PRIV21: PRIV21
0x40033620 C   FIELD 22w01 PRIV22: PRIV22
0x40033620 C   FIELD 23w01 PRIV23: PRIV23
0x40033620 C   FIELD 24w01 PRIV24: PRIV24
0x40033620 C   FIELD 25w01 PRIV25: PRIV25
0x40033620 C   FIELD 26w01 PRIV26: PRIV26
0x40033620 C   FIELD 27w01 PRIV27: PRIV27
0x40033620 C   FIELD 28w01 PRIV28: PRIV28
0x40033620 C   FIELD 29w01 PRIV29: PRIV29
0x40033620 C   FIELD 30w01 PRIV30: PRIV30
0x40033620 C   FIELD 31w01 PRIV31: PRIV31
0x40033624 B  REGISTER MPCBB3_PRIVCFGR9 (rw): MPCBB privileged configuration for super-block x register
0x40033624 C   FIELD 00w01 PRIV0: PRIV0
0x40033624 C   FIELD 01w01 PRIV1: PRIV1
0x40033624 C   FIELD 02w01 PRIV2: PRIV2
0x40033624 C   FIELD 03w01 PRIV3: PRIV3
0x40033624 C   FIELD 04w01 PRIV4: PRIV4
0x40033624 C   FIELD 05w01 PRIV5: PRIV5
0x40033624 C   FIELD 06w01 PRIV6: PRIV6
0x40033624 C   FIELD 07w01 PRIV7: PRIV7
0x40033624 C   FIELD 08w01 PRIV8: PRIV8
0x40033624 C   FIELD 09w01 PRIV9: PRIV9
0x40033624 C   FIELD 10w01 PRIV10: PRIV10
0x40033624 C   FIELD 11w01 PRIV11: PRIV11
0x40033624 C   FIELD 12w01 PRIV12: PRIV12
0x40033624 C   FIELD 13w01 PRIV13: PRIV13
0x40033624 C   FIELD 14w01 PRIV14: PRIV14
0x40033624 C   FIELD 15w01 PRIV15: PRIV15
0x40033624 C   FIELD 16w01 PRIV16: PRIV16
0x40033624 C   FIELD 17w01 PRIV17: PRIV17
0x40033624 C   FIELD 18w01 PRIV18: PRIV18
0x40033624 C   FIELD 19w01 PRIV19: PRIV19
0x40033624 C   FIELD 20w01 PRIV20: PRIV20
0x40033624 C   FIELD 21w01 PRIV21: PRIV21
0x40033624 C   FIELD 22w01 PRIV22: PRIV22
0x40033624 C   FIELD 23w01 PRIV23: PRIV23
0x40033624 C   FIELD 24w01 PRIV24: PRIV24
0x40033624 C   FIELD 25w01 PRIV25: PRIV25
0x40033624 C   FIELD 26w01 PRIV26: PRIV26
0x40033624 C   FIELD 27w01 PRIV27: PRIV27
0x40033624 C   FIELD 28w01 PRIV28: PRIV28
0x40033624 C   FIELD 29w01 PRIV29: PRIV29
0x40033624 C   FIELD 30w01 PRIV30: PRIV30
0x40033624 C   FIELD 31w01 PRIV31: PRIV31
0x40033628 B  REGISTER MPCBB3_PRIVCFGR10 (rw): MPCBB privileged configuration for super-block x register
0x40033628 C   FIELD 00w01 PRIV0: PRIV0
0x40033628 C   FIELD 01w01 PRIV1: PRIV1
0x40033628 C   FIELD 02w01 PRIV2: PRIV2
0x40033628 C   FIELD 03w01 PRIV3: PRIV3
0x40033628 C   FIELD 04w01 PRIV4: PRIV4
0x40033628 C   FIELD 05w01 PRIV5: PRIV5
0x40033628 C   FIELD 06w01 PRIV6: PRIV6
0x40033628 C   FIELD 07w01 PRIV7: PRIV7
0x40033628 C   FIELD 08w01 PRIV8: PRIV8
0x40033628 C   FIELD 09w01 PRIV9: PRIV9
0x40033628 C   FIELD 10w01 PRIV10: PRIV10
0x40033628 C   FIELD 11w01 PRIV11: PRIV11
0x40033628 C   FIELD 12w01 PRIV12: PRIV12
0x40033628 C   FIELD 13w01 PRIV13: PRIV13
0x40033628 C   FIELD 14w01 PRIV14: PRIV14
0x40033628 C   FIELD 15w01 PRIV15: PRIV15
0x40033628 C   FIELD 16w01 PRIV16: PRIV16
0x40033628 C   FIELD 17w01 PRIV17: PRIV17
0x40033628 C   FIELD 18w01 PRIV18: PRIV18
0x40033628 C   FIELD 19w01 PRIV19: PRIV19
0x40033628 C   FIELD 20w01 PRIV20: PRIV20
0x40033628 C   FIELD 21w01 PRIV21: PRIV21
0x40033628 C   FIELD 22w01 PRIV22: PRIV22
0x40033628 C   FIELD 23w01 PRIV23: PRIV23
0x40033628 C   FIELD 24w01 PRIV24: PRIV24
0x40033628 C   FIELD 25w01 PRIV25: PRIV25
0x40033628 C   FIELD 26w01 PRIV26: PRIV26
0x40033628 C   FIELD 27w01 PRIV27: PRIV27
0x40033628 C   FIELD 28w01 PRIV28: PRIV28
0x40033628 C   FIELD 29w01 PRIV29: PRIV29
0x40033628 C   FIELD 30w01 PRIV30: PRIV30
0x40033628 C   FIELD 31w01 PRIV31: PRIV31
0x4003362C B  REGISTER MPCBB3_PRIVCFGR11 (rw): MPCBB privileged configuration for super-block x register
0x4003362C C   FIELD 00w01 PRIV0: PRIV0
0x4003362C C   FIELD 01w01 PRIV1: PRIV1
0x4003362C C   FIELD 02w01 PRIV2: PRIV2
0x4003362C C   FIELD 03w01 PRIV3: PRIV3
0x4003362C C   FIELD 04w01 PRIV4: PRIV4
0x4003362C C   FIELD 05w01 PRIV5: PRIV5
0x4003362C C   FIELD 06w01 PRIV6: PRIV6
0x4003362C C   FIELD 07w01 PRIV7: PRIV7
0x4003362C C   FIELD 08w01 PRIV8: PRIV8
0x4003362C C   FIELD 09w01 PRIV9: PRIV9
0x4003362C C   FIELD 10w01 PRIV10: PRIV10
0x4003362C C   FIELD 11w01 PRIV11: PRIV11
0x4003362C C   FIELD 12w01 PRIV12: PRIV12
0x4003362C C   FIELD 13w01 PRIV13: PRIV13
0x4003362C C   FIELD 14w01 PRIV14: PRIV14
0x4003362C C   FIELD 15w01 PRIV15: PRIV15
0x4003362C C   FIELD 16w01 PRIV16: PRIV16
0x4003362C C   FIELD 17w01 PRIV17: PRIV17
0x4003362C C   FIELD 18w01 PRIV18: PRIV18
0x4003362C C   FIELD 19w01 PRIV19: PRIV19
0x4003362C C   FIELD 20w01 PRIV20: PRIV20
0x4003362C C   FIELD 21w01 PRIV21: PRIV21
0x4003362C C   FIELD 22w01 PRIV22: PRIV22
0x4003362C C   FIELD 23w01 PRIV23: PRIV23
0x4003362C C   FIELD 24w01 PRIV24: PRIV24
0x4003362C C   FIELD 25w01 PRIV25: PRIV25
0x4003362C C   FIELD 26w01 PRIV26: PRIV26
0x4003362C C   FIELD 27w01 PRIV27: PRIV27
0x4003362C C   FIELD 28w01 PRIV28: PRIV28
0x4003362C C   FIELD 29w01 PRIV29: PRIV29
0x4003362C C   FIELD 30w01 PRIV30: PRIV30
0x4003362C C   FIELD 31w01 PRIV31: PRIV31
0x40033630 B  REGISTER MPCBB3_PRIVCFGR12 (rw): MPCBB privileged configuration for super-block x register
0x40033630 C   FIELD 00w01 PRIV0: PRIV0
0x40033630 C   FIELD 01w01 PRIV1: PRIV1
0x40033630 C   FIELD 02w01 PRIV2: PRIV2
0x40033630 C   FIELD 03w01 PRIV3: PRIV3
0x40033630 C   FIELD 04w01 PRIV4: PRIV4
0x40033630 C   FIELD 05w01 PRIV5: PRIV5
0x40033630 C   FIELD 06w01 PRIV6: PRIV6
0x40033630 C   FIELD 07w01 PRIV7: PRIV7
0x40033630 C   FIELD 08w01 PRIV8: PRIV8
0x40033630 C   FIELD 09w01 PRIV9: PRIV9
0x40033630 C   FIELD 10w01 PRIV10: PRIV10
0x40033630 C   FIELD 11w01 PRIV11: PRIV11
0x40033630 C   FIELD 12w01 PRIV12: PRIV12
0x40033630 C   FIELD 13w01 PRIV13: PRIV13
0x40033630 C   FIELD 14w01 PRIV14: PRIV14
0x40033630 C   FIELD 15w01 PRIV15: PRIV15
0x40033630 C   FIELD 16w01 PRIV16: PRIV16
0x40033630 C   FIELD 17w01 PRIV17: PRIV17
0x40033630 C   FIELD 18w01 PRIV18: PRIV18
0x40033630 C   FIELD 19w01 PRIV19: PRIV19
0x40033630 C   FIELD 20w01 PRIV20: PRIV20
0x40033630 C   FIELD 21w01 PRIV21: PRIV21
0x40033630 C   FIELD 22w01 PRIV22: PRIV22
0x40033630 C   FIELD 23w01 PRIV23: PRIV23
0x40033630 C   FIELD 24w01 PRIV24: PRIV24
0x40033630 C   FIELD 25w01 PRIV25: PRIV25
0x40033630 C   FIELD 26w01 PRIV26: PRIV26
0x40033630 C   FIELD 27w01 PRIV27: PRIV27
0x40033630 C   FIELD 28w01 PRIV28: PRIV28
0x40033630 C   FIELD 29w01 PRIV29: PRIV29
0x40033630 C   FIELD 30w01 PRIV30: PRIV30
0x40033630 C   FIELD 31w01 PRIV31: PRIV31
0x40033634 B  REGISTER MPCBB3_PRIVCFGR13 (rw): MPCBB privileged configuration for super-block x register
0x40033634 C   FIELD 00w01 PRIV0: PRIV0
0x40033634 C   FIELD 01w01 PRIV1: PRIV1
0x40033634 C   FIELD 02w01 PRIV2: PRIV2
0x40033634 C   FIELD 03w01 PRIV3: PRIV3
0x40033634 C   FIELD 04w01 PRIV4: PRIV4
0x40033634 C   FIELD 05w01 PRIV5: PRIV5
0x40033634 C   FIELD 06w01 PRIV6: PRIV6
0x40033634 C   FIELD 07w01 PRIV7: PRIV7
0x40033634 C   FIELD 08w01 PRIV8: PRIV8
0x40033634 C   FIELD 09w01 PRIV9: PRIV9
0x40033634 C   FIELD 10w01 PRIV10: PRIV10
0x40033634 C   FIELD 11w01 PRIV11: PRIV11
0x40033634 C   FIELD 12w01 PRIV12: PRIV12
0x40033634 C   FIELD 13w01 PRIV13: PRIV13
0x40033634 C   FIELD 14w01 PRIV14: PRIV14
0x40033634 C   FIELD 15w01 PRIV15: PRIV15
0x40033634 C   FIELD 16w01 PRIV16: PRIV16
0x40033634 C   FIELD 17w01 PRIV17: PRIV17
0x40033634 C   FIELD 18w01 PRIV18: PRIV18
0x40033634 C   FIELD 19w01 PRIV19: PRIV19
0x40033634 C   FIELD 20w01 PRIV20: PRIV20
0x40033634 C   FIELD 21w01 PRIV21: PRIV21
0x40033634 C   FIELD 22w01 PRIV22: PRIV22
0x40033634 C   FIELD 23w01 PRIV23: PRIV23
0x40033634 C   FIELD 24w01 PRIV24: PRIV24
0x40033634 C   FIELD 25w01 PRIV25: PRIV25
0x40033634 C   FIELD 26w01 PRIV26: PRIV26
0x40033634 C   FIELD 27w01 PRIV27: PRIV27
0x40033634 C   FIELD 28w01 PRIV28: PRIV28
0x40033634 C   FIELD 29w01 PRIV29: PRIV29
0x40033634 C   FIELD 30w01 PRIV30: PRIV30
0x40033634 C   FIELD 31w01 PRIV31: PRIV31
0x40033638 B  REGISTER MPCBB3_PRIVCFGR14 (rw): MPCBB privileged configuration for super-block x register
0x40033638 C   FIELD 00w01 PRIV0: PRIV0
0x40033638 C   FIELD 01w01 PRIV1: PRIV1
0x40033638 C   FIELD 02w01 PRIV2: PRIV2
0x40033638 C   FIELD 03w01 PRIV3: PRIV3
0x40033638 C   FIELD 04w01 PRIV4: PRIV4
0x40033638 C   FIELD 05w01 PRIV5: PRIV5
0x40033638 C   FIELD 06w01 PRIV6: PRIV6
0x40033638 C   FIELD 07w01 PRIV7: PRIV7
0x40033638 C   FIELD 08w01 PRIV8: PRIV8
0x40033638 C   FIELD 09w01 PRIV9: PRIV9
0x40033638 C   FIELD 10w01 PRIV10: PRIV10
0x40033638 C   FIELD 11w01 PRIV11: PRIV11
0x40033638 C   FIELD 12w01 PRIV12: PRIV12
0x40033638 C   FIELD 13w01 PRIV13: PRIV13
0x40033638 C   FIELD 14w01 PRIV14: PRIV14
0x40033638 C   FIELD 15w01 PRIV15: PRIV15
0x40033638 C   FIELD 16w01 PRIV16: PRIV16
0x40033638 C   FIELD 17w01 PRIV17: PRIV17
0x40033638 C   FIELD 18w01 PRIV18: PRIV18
0x40033638 C   FIELD 19w01 PRIV19: PRIV19
0x40033638 C   FIELD 20w01 PRIV20: PRIV20
0x40033638 C   FIELD 21w01 PRIV21: PRIV21
0x40033638 C   FIELD 22w01 PRIV22: PRIV22
0x40033638 C   FIELD 23w01 PRIV23: PRIV23
0x40033638 C   FIELD 24w01 PRIV24: PRIV24
0x40033638 C   FIELD 25w01 PRIV25: PRIV25
0x40033638 C   FIELD 26w01 PRIV26: PRIV26
0x40033638 C   FIELD 27w01 PRIV27: PRIV27
0x40033638 C   FIELD 28w01 PRIV28: PRIV28
0x40033638 C   FIELD 29w01 PRIV29: PRIV29
0x40033638 C   FIELD 30w01 PRIV30: PRIV30
0x40033638 C   FIELD 31w01 PRIV31: PRIV31
0x4003363C B  REGISTER MPCBB3_PRIVCFGR15 (rw): MPCBB privileged configuration for super-block x register
0x4003363C C   FIELD 00w01 PRIV0: PRIV0
0x4003363C C   FIELD 01w01 PRIV1: PRIV1
0x4003363C C   FIELD 02w01 PRIV2: PRIV2
0x4003363C C   FIELD 03w01 PRIV3: PRIV3
0x4003363C C   FIELD 04w01 PRIV4: PRIV4
0x4003363C C   FIELD 05w01 PRIV5: PRIV5
0x4003363C C   FIELD 06w01 PRIV6: PRIV6
0x4003363C C   FIELD 07w01 PRIV7: PRIV7
0x4003363C C   FIELD 08w01 PRIV8: PRIV8
0x4003363C C   FIELD 09w01 PRIV9: PRIV9
0x4003363C C   FIELD 10w01 PRIV10: PRIV10
0x4003363C C   FIELD 11w01 PRIV11: PRIV11
0x4003363C C   FIELD 12w01 PRIV12: PRIV12
0x4003363C C   FIELD 13w01 PRIV13: PRIV13
0x4003363C C   FIELD 14w01 PRIV14: PRIV14
0x4003363C C   FIELD 15w01 PRIV15: PRIV15
0x4003363C C   FIELD 16w01 PRIV16: PRIV16
0x4003363C C   FIELD 17w01 PRIV17: PRIV17
0x4003363C C   FIELD 18w01 PRIV18: PRIV18
0x4003363C C   FIELD 19w01 PRIV19: PRIV19
0x4003363C C   FIELD 20w01 PRIV20: PRIV20
0x4003363C C   FIELD 21w01 PRIV21: PRIV21
0x4003363C C   FIELD 22w01 PRIV22: PRIV22
0x4003363C C   FIELD 23w01 PRIV23: PRIV23
0x4003363C C   FIELD 24w01 PRIV24: PRIV24
0x4003363C C   FIELD 25w01 PRIV25: PRIV25
0x4003363C C   FIELD 26w01 PRIV26: PRIV26
0x4003363C C   FIELD 27w01 PRIV27: PRIV27
0x4003363C C   FIELD 28w01 PRIV28: PRIV28
0x4003363C C   FIELD 29w01 PRIV29: PRIV29
0x4003363C C   FIELD 30w01 PRIV30: PRIV30
0x4003363C C   FIELD 31w01 PRIV31: PRIV31
0x40033640 B  REGISTER MPCBB3_PRIVCFGR16 (rw): MPCBB privileged configuration for super-block x register
0x40033640 C   FIELD 00w01 PRIV0: PRIV0
0x40033640 C   FIELD 01w01 PRIV1: PRIV1
0x40033640 C   FIELD 02w01 PRIV2: PRIV2
0x40033640 C   FIELD 03w01 PRIV3: PRIV3
0x40033640 C   FIELD 04w01 PRIV4: PRIV4
0x40033640 C   FIELD 05w01 PRIV5: PRIV5
0x40033640 C   FIELD 06w01 PRIV6: PRIV6
0x40033640 C   FIELD 07w01 PRIV7: PRIV7
0x40033640 C   FIELD 08w01 PRIV8: PRIV8
0x40033640 C   FIELD 09w01 PRIV9: PRIV9
0x40033640 C   FIELD 10w01 PRIV10: PRIV10
0x40033640 C   FIELD 11w01 PRIV11: PRIV11
0x40033640 C   FIELD 12w01 PRIV12: PRIV12
0x40033640 C   FIELD 13w01 PRIV13: PRIV13
0x40033640 C   FIELD 14w01 PRIV14: PRIV14
0x40033640 C   FIELD 15w01 PRIV15: PRIV15
0x40033640 C   FIELD 16w01 PRIV16: PRIV16
0x40033640 C   FIELD 17w01 PRIV17: PRIV17
0x40033640 C   FIELD 18w01 PRIV18: PRIV18
0x40033640 C   FIELD 19w01 PRIV19: PRIV19
0x40033640 C   FIELD 20w01 PRIV20: PRIV20
0x40033640 C   FIELD 21w01 PRIV21: PRIV21
0x40033640 C   FIELD 22w01 PRIV22: PRIV22
0x40033640 C   FIELD 23w01 PRIV23: PRIV23
0x40033640 C   FIELD 24w01 PRIV24: PRIV24
0x40033640 C   FIELD 25w01 PRIV25: PRIV25
0x40033640 C   FIELD 26w01 PRIV26: PRIV26
0x40033640 C   FIELD 27w01 PRIV27: PRIV27
0x40033640 C   FIELD 28w01 PRIV28: PRIV28
0x40033640 C   FIELD 29w01 PRIV29: PRIV29
0x40033640 C   FIELD 30w01 PRIV30: PRIV30
0x40033640 C   FIELD 31w01 PRIV31: PRIV31
0x40033644 B  REGISTER MPCBB3_PRIVCFGR17 (rw): MPCBB privileged configuration for super-block x register
0x40033644 C   FIELD 00w01 PRIV0: PRIV0
0x40033644 C   FIELD 01w01 PRIV1: PRIV1
0x40033644 C   FIELD 02w01 PRIV2: PRIV2
0x40033644 C   FIELD 03w01 PRIV3: PRIV3
0x40033644 C   FIELD 04w01 PRIV4: PRIV4
0x40033644 C   FIELD 05w01 PRIV5: PRIV5
0x40033644 C   FIELD 06w01 PRIV6: PRIV6
0x40033644 C   FIELD 07w01 PRIV7: PRIV7
0x40033644 C   FIELD 08w01 PRIV8: PRIV8
0x40033644 C   FIELD 09w01 PRIV9: PRIV9
0x40033644 C   FIELD 10w01 PRIV10: PRIV10
0x40033644 C   FIELD 11w01 PRIV11: PRIV11
0x40033644 C   FIELD 12w01 PRIV12: PRIV12
0x40033644 C   FIELD 13w01 PRIV13: PRIV13
0x40033644 C   FIELD 14w01 PRIV14: PRIV14
0x40033644 C   FIELD 15w01 PRIV15: PRIV15
0x40033644 C   FIELD 16w01 PRIV16: PRIV16
0x40033644 C   FIELD 17w01 PRIV17: PRIV17
0x40033644 C   FIELD 18w01 PRIV18: PRIV18
0x40033644 C   FIELD 19w01 PRIV19: PRIV19
0x40033644 C   FIELD 20w01 PRIV20: PRIV20
0x40033644 C   FIELD 21w01 PRIV21: PRIV21
0x40033644 C   FIELD 22w01 PRIV22: PRIV22
0x40033644 C   FIELD 23w01 PRIV23: PRIV23
0x40033644 C   FIELD 24w01 PRIV24: PRIV24
0x40033644 C   FIELD 25w01 PRIV25: PRIV25
0x40033644 C   FIELD 26w01 PRIV26: PRIV26
0x40033644 C   FIELD 27w01 PRIV27: PRIV27
0x40033644 C   FIELD 28w01 PRIV28: PRIV28
0x40033644 C   FIELD 29w01 PRIV29: PRIV29
0x40033644 C   FIELD 30w01 PRIV30: PRIV30
0x40033644 C   FIELD 31w01 PRIV31: PRIV31
0x40033648 B  REGISTER MPCBB3_PRIVCFGR18 (rw): MPCBB privileged configuration for super-block x register
0x40033648 C   FIELD 00w01 PRIV0: PRIV0
0x40033648 C   FIELD 01w01 PRIV1: PRIV1
0x40033648 C   FIELD 02w01 PRIV2: PRIV2
0x40033648 C   FIELD 03w01 PRIV3: PRIV3
0x40033648 C   FIELD 04w01 PRIV4: PRIV4
0x40033648 C   FIELD 05w01 PRIV5: PRIV5
0x40033648 C   FIELD 06w01 PRIV6: PRIV6
0x40033648 C   FIELD 07w01 PRIV7: PRIV7
0x40033648 C   FIELD 08w01 PRIV8: PRIV8
0x40033648 C   FIELD 09w01 PRIV9: PRIV9
0x40033648 C   FIELD 10w01 PRIV10: PRIV10
0x40033648 C   FIELD 11w01 PRIV11: PRIV11
0x40033648 C   FIELD 12w01 PRIV12: PRIV12
0x40033648 C   FIELD 13w01 PRIV13: PRIV13
0x40033648 C   FIELD 14w01 PRIV14: PRIV14
0x40033648 C   FIELD 15w01 PRIV15: PRIV15
0x40033648 C   FIELD 16w01 PRIV16: PRIV16
0x40033648 C   FIELD 17w01 PRIV17: PRIV17
0x40033648 C   FIELD 18w01 PRIV18: PRIV18
0x40033648 C   FIELD 19w01 PRIV19: PRIV19
0x40033648 C   FIELD 20w01 PRIV20: PRIV20
0x40033648 C   FIELD 21w01 PRIV21: PRIV21
0x40033648 C   FIELD 22w01 PRIV22: PRIV22
0x40033648 C   FIELD 23w01 PRIV23: PRIV23
0x40033648 C   FIELD 24w01 PRIV24: PRIV24
0x40033648 C   FIELD 25w01 PRIV25: PRIV25
0x40033648 C   FIELD 26w01 PRIV26: PRIV26
0x40033648 C   FIELD 27w01 PRIV27: PRIV27
0x40033648 C   FIELD 28w01 PRIV28: PRIV28
0x40033648 C   FIELD 29w01 PRIV29: PRIV29
0x40033648 C   FIELD 30w01 PRIV30: PRIV30
0x40033648 C   FIELD 31w01 PRIV31: PRIV31
0x4003364C B  REGISTER MPCBB3_PRIVCFGR19 (rw): MPCBB privileged configuration for super-block x register
0x4003364C C   FIELD 00w01 PRIV0: PRIV0
0x4003364C C   FIELD 01w01 PRIV1: PRIV1
0x4003364C C   FIELD 02w01 PRIV2: PRIV2
0x4003364C C   FIELD 03w01 PRIV3: PRIV3
0x4003364C C   FIELD 04w01 PRIV4: PRIV4
0x4003364C C   FIELD 05w01 PRIV5: PRIV5
0x4003364C C   FIELD 06w01 PRIV6: PRIV6
0x4003364C C   FIELD 07w01 PRIV7: PRIV7
0x4003364C C   FIELD 08w01 PRIV8: PRIV8
0x4003364C C   FIELD 09w01 PRIV9: PRIV9
0x4003364C C   FIELD 10w01 PRIV10: PRIV10
0x4003364C C   FIELD 11w01 PRIV11: PRIV11
0x4003364C C   FIELD 12w01 PRIV12: PRIV12
0x4003364C C   FIELD 13w01 PRIV13: PRIV13
0x4003364C C   FIELD 14w01 PRIV14: PRIV14
0x4003364C C   FIELD 15w01 PRIV15: PRIV15
0x4003364C C   FIELD 16w01 PRIV16: PRIV16
0x4003364C C   FIELD 17w01 PRIV17: PRIV17
0x4003364C C   FIELD 18w01 PRIV18: PRIV18
0x4003364C C   FIELD 19w01 PRIV19: PRIV19
0x4003364C C   FIELD 20w01 PRIV20: PRIV20
0x4003364C C   FIELD 21w01 PRIV21: PRIV21
0x4003364C C   FIELD 22w01 PRIV22: PRIV22
0x4003364C C   FIELD 23w01 PRIV23: PRIV23
0x4003364C C   FIELD 24w01 PRIV24: PRIV24
0x4003364C C   FIELD 25w01 PRIV25: PRIV25
0x4003364C C   FIELD 26w01 PRIV26: PRIV26
0x4003364C C   FIELD 27w01 PRIV27: PRIV27
0x4003364C C   FIELD 28w01 PRIV28: PRIV28
0x4003364C C   FIELD 29w01 PRIV29: PRIV29
0x4003364C C   FIELD 30w01 PRIV30: PRIV30
0x4003364C C   FIELD 31w01 PRIV31: PRIV31
0x40033650 B  REGISTER MPCBB3_PRIVCFGR20 (rw): MPCBB privileged configuration for super-block x register
0x40033650 C   FIELD 00w01 PRIV0: PRIV0
0x40033650 C   FIELD 01w01 PRIV1: PRIV1
0x40033650 C   FIELD 02w01 PRIV2: PRIV2
0x40033650 C   FIELD 03w01 PRIV3: PRIV3
0x40033650 C   FIELD 04w01 PRIV4: PRIV4
0x40033650 C   FIELD 05w01 PRIV5: PRIV5
0x40033650 C   FIELD 06w01 PRIV6: PRIV6
0x40033650 C   FIELD 07w01 PRIV7: PRIV7
0x40033650 C   FIELD 08w01 PRIV8: PRIV8
0x40033650 C   FIELD 09w01 PRIV9: PRIV9
0x40033650 C   FIELD 10w01 PRIV10: PRIV10
0x40033650 C   FIELD 11w01 PRIV11: PRIV11
0x40033650 C   FIELD 12w01 PRIV12: PRIV12
0x40033650 C   FIELD 13w01 PRIV13: PRIV13
0x40033650 C   FIELD 14w01 PRIV14: PRIV14
0x40033650 C   FIELD 15w01 PRIV15: PRIV15
0x40033650 C   FIELD 16w01 PRIV16: PRIV16
0x40033650 C   FIELD 17w01 PRIV17: PRIV17
0x40033650 C   FIELD 18w01 PRIV18: PRIV18
0x40033650 C   FIELD 19w01 PRIV19: PRIV19
0x40033650 C   FIELD 20w01 PRIV20: PRIV20
0x40033650 C   FIELD 21w01 PRIV21: PRIV21
0x40033650 C   FIELD 22w01 PRIV22: PRIV22
0x40033650 C   FIELD 23w01 PRIV23: PRIV23
0x40033650 C   FIELD 24w01 PRIV24: PRIV24
0x40033650 C   FIELD 25w01 PRIV25: PRIV25
0x40033650 C   FIELD 26w01 PRIV26: PRIV26
0x40033650 C   FIELD 27w01 PRIV27: PRIV27
0x40033650 C   FIELD 28w01 PRIV28: PRIV28
0x40033650 C   FIELD 29w01 PRIV29: PRIV29
0x40033650 C   FIELD 30w01 PRIV30: PRIV30
0x40033650 C   FIELD 31w01 PRIV31: PRIV31
0x40033654 B  REGISTER MPCBB3_PRIVCFGR21 (rw): MPCBB privileged configuration for super-block x register
0x40033654 C   FIELD 00w01 PRIV0: PRIV0
0x40033654 C   FIELD 01w01 PRIV1: PRIV1
0x40033654 C   FIELD 02w01 PRIV2: PRIV2
0x40033654 C   FIELD 03w01 PRIV3: PRIV3
0x40033654 C   FIELD 04w01 PRIV4: PRIV4
0x40033654 C   FIELD 05w01 PRIV5: PRIV5
0x40033654 C   FIELD 06w01 PRIV6: PRIV6
0x40033654 C   FIELD 07w01 PRIV7: PRIV7
0x40033654 C   FIELD 08w01 PRIV8: PRIV8
0x40033654 C   FIELD 09w01 PRIV9: PRIV9
0x40033654 C   FIELD 10w01 PRIV10: PRIV10
0x40033654 C   FIELD 11w01 PRIV11: PRIV11
0x40033654 C   FIELD 12w01 PRIV12: PRIV12
0x40033654 C   FIELD 13w01 PRIV13: PRIV13
0x40033654 C   FIELD 14w01 PRIV14: PRIV14
0x40033654 C   FIELD 15w01 PRIV15: PRIV15
0x40033654 C   FIELD 16w01 PRIV16: PRIV16
0x40033654 C   FIELD 17w01 PRIV17: PRIV17
0x40033654 C   FIELD 18w01 PRIV18: PRIV18
0x40033654 C   FIELD 19w01 PRIV19: PRIV19
0x40033654 C   FIELD 20w01 PRIV20: PRIV20
0x40033654 C   FIELD 21w01 PRIV21: PRIV21
0x40033654 C   FIELD 22w01 PRIV22: PRIV22
0x40033654 C   FIELD 23w01 PRIV23: PRIV23
0x40033654 C   FIELD 24w01 PRIV24: PRIV24
0x40033654 C   FIELD 25w01 PRIV25: PRIV25
0x40033654 C   FIELD 26w01 PRIV26: PRIV26
0x40033654 C   FIELD 27w01 PRIV27: PRIV27
0x40033654 C   FIELD 28w01 PRIV28: PRIV28
0x40033654 C   FIELD 29w01 PRIV29: PRIV29
0x40033654 C   FIELD 30w01 PRIV30: PRIV30
0x40033654 C   FIELD 31w01 PRIV31: PRIV31
0x40033658 B  REGISTER MPCBB3_PRIVCFGR22 (rw): MPCBB privileged configuration for super-block x register
0x40033658 C   FIELD 00w01 PRIV0: PRIV0
0x40033658 C   FIELD 01w01 PRIV1: PRIV1
0x40033658 C   FIELD 02w01 PRIV2: PRIV2
0x40033658 C   FIELD 03w01 PRIV3: PRIV3
0x40033658 C   FIELD 04w01 PRIV4: PRIV4
0x40033658 C   FIELD 05w01 PRIV5: PRIV5
0x40033658 C   FIELD 06w01 PRIV6: PRIV6
0x40033658 C   FIELD 07w01 PRIV7: PRIV7
0x40033658 C   FIELD 08w01 PRIV8: PRIV8
0x40033658 C   FIELD 09w01 PRIV9: PRIV9
0x40033658 C   FIELD 10w01 PRIV10: PRIV10
0x40033658 C   FIELD 11w01 PRIV11: PRIV11
0x40033658 C   FIELD 12w01 PRIV12: PRIV12
0x40033658 C   FIELD 13w01 PRIV13: PRIV13
0x40033658 C   FIELD 14w01 PRIV14: PRIV14
0x40033658 C   FIELD 15w01 PRIV15: PRIV15
0x40033658 C   FIELD 16w01 PRIV16: PRIV16
0x40033658 C   FIELD 17w01 PRIV17: PRIV17
0x40033658 C   FIELD 18w01 PRIV18: PRIV18
0x40033658 C   FIELD 19w01 PRIV19: PRIV19
0x40033658 C   FIELD 20w01 PRIV20: PRIV20
0x40033658 C   FIELD 21w01 PRIV21: PRIV21
0x40033658 C   FIELD 22w01 PRIV22: PRIV22
0x40033658 C   FIELD 23w01 PRIV23: PRIV23
0x40033658 C   FIELD 24w01 PRIV24: PRIV24
0x40033658 C   FIELD 25w01 PRIV25: PRIV25
0x40033658 C   FIELD 26w01 PRIV26: PRIV26
0x40033658 C   FIELD 27w01 PRIV27: PRIV27
0x40033658 C   FIELD 28w01 PRIV28: PRIV28
0x40033658 C   FIELD 29w01 PRIV29: PRIV29
0x40033658 C   FIELD 30w01 PRIV30: PRIV30
0x40033658 C   FIELD 31w01 PRIV31: PRIV31
0x4003365C B  REGISTER MPCBB3_PRIVCFGR23 (rw): MPCBB privileged configuration for super-block x register
0x4003365C C   FIELD 00w01 PRIV0: PRIV0
0x4003365C C   FIELD 01w01 PRIV1: PRIV1
0x4003365C C   FIELD 02w01 PRIV2: PRIV2
0x4003365C C   FIELD 03w01 PRIV3: PRIV3
0x4003365C C   FIELD 04w01 PRIV4: PRIV4
0x4003365C C   FIELD 05w01 PRIV5: PRIV5
0x4003365C C   FIELD 06w01 PRIV6: PRIV6
0x4003365C C   FIELD 07w01 PRIV7: PRIV7
0x4003365C C   FIELD 08w01 PRIV8: PRIV8
0x4003365C C   FIELD 09w01 PRIV9: PRIV9
0x4003365C C   FIELD 10w01 PRIV10: PRIV10
0x4003365C C   FIELD 11w01 PRIV11: PRIV11
0x4003365C C   FIELD 12w01 PRIV12: PRIV12
0x4003365C C   FIELD 13w01 PRIV13: PRIV13
0x4003365C C   FIELD 14w01 PRIV14: PRIV14
0x4003365C C   FIELD 15w01 PRIV15: PRIV15
0x4003365C C   FIELD 16w01 PRIV16: PRIV16
0x4003365C C   FIELD 17w01 PRIV17: PRIV17
0x4003365C C   FIELD 18w01 PRIV18: PRIV18
0x4003365C C   FIELD 19w01 PRIV19: PRIV19
0x4003365C C   FIELD 20w01 PRIV20: PRIV20
0x4003365C C   FIELD 21w01 PRIV21: PRIV21
0x4003365C C   FIELD 22w01 PRIV22: PRIV22
0x4003365C C   FIELD 23w01 PRIV23: PRIV23
0x4003365C C   FIELD 24w01 PRIV24: PRIV24
0x4003365C C   FIELD 25w01 PRIV25: PRIV25
0x4003365C C   FIELD 26w01 PRIV26: PRIV26
0x4003365C C   FIELD 27w01 PRIV27: PRIV27
0x4003365C C   FIELD 28w01 PRIV28: PRIV28
0x4003365C C   FIELD 29w01 PRIV29: PRIV29
0x4003365C C   FIELD 30w01 PRIV30: PRIV30
0x4003365C C   FIELD 31w01 PRIV31: PRIV31
0x40033660 B  REGISTER MPCBB3_PRIVCFGR24 (rw): MPCBB privileged configuration for super-block x register
0x40033660 C   FIELD 00w01 PRIV0: PRIV0
0x40033660 C   FIELD 01w01 PRIV1: PRIV1
0x40033660 C   FIELD 02w01 PRIV2: PRIV2
0x40033660 C   FIELD 03w01 PRIV3: PRIV3
0x40033660 C   FIELD 04w01 PRIV4: PRIV4
0x40033660 C   FIELD 05w01 PRIV5: PRIV5
0x40033660 C   FIELD 06w01 PRIV6: PRIV6
0x40033660 C   FIELD 07w01 PRIV7: PRIV7
0x40033660 C   FIELD 08w01 PRIV8: PRIV8
0x40033660 C   FIELD 09w01 PRIV9: PRIV9
0x40033660 C   FIELD 10w01 PRIV10: PRIV10
0x40033660 C   FIELD 11w01 PRIV11: PRIV11
0x40033660 C   FIELD 12w01 PRIV12: PRIV12
0x40033660 C   FIELD 13w01 PRIV13: PRIV13
0x40033660 C   FIELD 14w01 PRIV14: PRIV14
0x40033660 C   FIELD 15w01 PRIV15: PRIV15
0x40033660 C   FIELD 16w01 PRIV16: PRIV16
0x40033660 C   FIELD 17w01 PRIV17: PRIV17
0x40033660 C   FIELD 18w01 PRIV18: PRIV18
0x40033660 C   FIELD 19w01 PRIV19: PRIV19
0x40033660 C   FIELD 20w01 PRIV20: PRIV20
0x40033660 C   FIELD 21w01 PRIV21: PRIV21
0x40033660 C   FIELD 22w01 PRIV22: PRIV22
0x40033660 C   FIELD 23w01 PRIV23: PRIV23
0x40033660 C   FIELD 24w01 PRIV24: PRIV24
0x40033660 C   FIELD 25w01 PRIV25: PRIV25
0x40033660 C   FIELD 26w01 PRIV26: PRIV26
0x40033660 C   FIELD 27w01 PRIV27: PRIV27
0x40033660 C   FIELD 28w01 PRIV28: PRIV28
0x40033660 C   FIELD 29w01 PRIV29: PRIV29
0x40033660 C   FIELD 30w01 PRIV30: PRIV30
0x40033660 C   FIELD 31w01 PRIV31: PRIV31
0x40033664 B  REGISTER MPCBB3_PRIVCFGR25 (rw): MPCBB privileged configuration for super-block x register
0x40033664 C   FIELD 00w01 PRIV0: PRIV0
0x40033664 C   FIELD 01w01 PRIV1: PRIV1
0x40033664 C   FIELD 02w01 PRIV2: PRIV2
0x40033664 C   FIELD 03w01 PRIV3: PRIV3
0x40033664 C   FIELD 04w01 PRIV4: PRIV4
0x40033664 C   FIELD 05w01 PRIV5: PRIV5
0x40033664 C   FIELD 06w01 PRIV6: PRIV6
0x40033664 C   FIELD 07w01 PRIV7: PRIV7
0x40033664 C   FIELD 08w01 PRIV8: PRIV8
0x40033664 C   FIELD 09w01 PRIV9: PRIV9
0x40033664 C   FIELD 10w01 PRIV10: PRIV10
0x40033664 C   FIELD 11w01 PRIV11: PRIV11
0x40033664 C   FIELD 12w01 PRIV12: PRIV12
0x40033664 C   FIELD 13w01 PRIV13: PRIV13
0x40033664 C   FIELD 14w01 PRIV14: PRIV14
0x40033664 C   FIELD 15w01 PRIV15: PRIV15
0x40033664 C   FIELD 16w01 PRIV16: PRIV16
0x40033664 C   FIELD 17w01 PRIV17: PRIV17
0x40033664 C   FIELD 18w01 PRIV18: PRIV18
0x40033664 C   FIELD 19w01 PRIV19: PRIV19
0x40033664 C   FIELD 20w01 PRIV20: PRIV20
0x40033664 C   FIELD 21w01 PRIV21: PRIV21
0x40033664 C   FIELD 22w01 PRIV22: PRIV22
0x40033664 C   FIELD 23w01 PRIV23: PRIV23
0x40033664 C   FIELD 24w01 PRIV24: PRIV24
0x40033664 C   FIELD 25w01 PRIV25: PRIV25
0x40033664 C   FIELD 26w01 PRIV26: PRIV26
0x40033664 C   FIELD 27w01 PRIV27: PRIV27
0x40033664 C   FIELD 28w01 PRIV28: PRIV28
0x40033664 C   FIELD 29w01 PRIV29: PRIV29
0x40033664 C   FIELD 30w01 PRIV30: PRIV30
0x40033664 C   FIELD 31w01 PRIV31: PRIV31
0x40033668 B  REGISTER MPCBB3_PRIVCFGR26 (rw): MPCBB privileged configuration for super-block x register
0x40033668 C   FIELD 00w01 PRIV0: PRIV0
0x40033668 C   FIELD 01w01 PRIV1: PRIV1
0x40033668 C   FIELD 02w01 PRIV2: PRIV2
0x40033668 C   FIELD 03w01 PRIV3: PRIV3
0x40033668 C   FIELD 04w01 PRIV4: PRIV4
0x40033668 C   FIELD 05w01 PRIV5: PRIV5
0x40033668 C   FIELD 06w01 PRIV6: PRIV6
0x40033668 C   FIELD 07w01 PRIV7: PRIV7
0x40033668 C   FIELD 08w01 PRIV8: PRIV8
0x40033668 C   FIELD 09w01 PRIV9: PRIV9
0x40033668 C   FIELD 10w01 PRIV10: PRIV10
0x40033668 C   FIELD 11w01 PRIV11: PRIV11
0x40033668 C   FIELD 12w01 PRIV12: PRIV12
0x40033668 C   FIELD 13w01 PRIV13: PRIV13
0x40033668 C   FIELD 14w01 PRIV14: PRIV14
0x40033668 C   FIELD 15w01 PRIV15: PRIV15
0x40033668 C   FIELD 16w01 PRIV16: PRIV16
0x40033668 C   FIELD 17w01 PRIV17: PRIV17
0x40033668 C   FIELD 18w01 PRIV18: PRIV18
0x40033668 C   FIELD 19w01 PRIV19: PRIV19
0x40033668 C   FIELD 20w01 PRIV20: PRIV20
0x40033668 C   FIELD 21w01 PRIV21: PRIV21
0x40033668 C   FIELD 22w01 PRIV22: PRIV22
0x40033668 C   FIELD 23w01 PRIV23: PRIV23
0x40033668 C   FIELD 24w01 PRIV24: PRIV24
0x40033668 C   FIELD 25w01 PRIV25: PRIV25
0x40033668 C   FIELD 26w01 PRIV26: PRIV26
0x40033668 C   FIELD 27w01 PRIV27: PRIV27
0x40033668 C   FIELD 28w01 PRIV28: PRIV28
0x40033668 C   FIELD 29w01 PRIV29: PRIV29
0x40033668 C   FIELD 30w01 PRIV30: PRIV30
0x40033668 C   FIELD 31w01 PRIV31: PRIV31
0x4003366C B  REGISTER MPCBB3_PRIVCFGR27 (rw): MPCBB privileged configuration for super-block x register
0x4003366C C   FIELD 00w01 PRIV0: PRIV0
0x4003366C C   FIELD 01w01 PRIV1: PRIV1
0x4003366C C   FIELD 02w01 PRIV2: PRIV2
0x4003366C C   FIELD 03w01 PRIV3: PRIV3
0x4003366C C   FIELD 04w01 PRIV4: PRIV4
0x4003366C C   FIELD 05w01 PRIV5: PRIV5
0x4003366C C   FIELD 06w01 PRIV6: PRIV6
0x4003366C C   FIELD 07w01 PRIV7: PRIV7
0x4003366C C   FIELD 08w01 PRIV8: PRIV8
0x4003366C C   FIELD 09w01 PRIV9: PRIV9
0x4003366C C   FIELD 10w01 PRIV10: PRIV10
0x4003366C C   FIELD 11w01 PRIV11: PRIV11
0x4003366C C   FIELD 12w01 PRIV12: PRIV12
0x4003366C C   FIELD 13w01 PRIV13: PRIV13
0x4003366C C   FIELD 14w01 PRIV14: PRIV14
0x4003366C C   FIELD 15w01 PRIV15: PRIV15
0x4003366C C   FIELD 16w01 PRIV16: PRIV16
0x4003366C C   FIELD 17w01 PRIV17: PRIV17
0x4003366C C   FIELD 18w01 PRIV18: PRIV18
0x4003366C C   FIELD 19w01 PRIV19: PRIV19
0x4003366C C   FIELD 20w01 PRIV20: PRIV20
0x4003366C C   FIELD 21w01 PRIV21: PRIV21
0x4003366C C   FIELD 22w01 PRIV22: PRIV22
0x4003366C C   FIELD 23w01 PRIV23: PRIV23
0x4003366C C   FIELD 24w01 PRIV24: PRIV24
0x4003366C C   FIELD 25w01 PRIV25: PRIV25
0x4003366C C   FIELD 26w01 PRIV26: PRIV26
0x4003366C C   FIELD 27w01 PRIV27: PRIV27
0x4003366C C   FIELD 28w01 PRIV28: PRIV28
0x4003366C C   FIELD 29w01 PRIV29: PRIV29
0x4003366C C   FIELD 30w01 PRIV30: PRIV30
0x4003366C C   FIELD 31w01 PRIV31: PRIV31
0x40033670 B  REGISTER MPCBB3_PRIVCFGR28 (rw): MPCBB privileged configuration for super-block x register
0x40033670 C   FIELD 00w01 PRIV0: PRIV0
0x40033670 C   FIELD 01w01 PRIV1: PRIV1
0x40033670 C   FIELD 02w01 PRIV2: PRIV2
0x40033670 C   FIELD 03w01 PRIV3: PRIV3
0x40033670 C   FIELD 04w01 PRIV4: PRIV4
0x40033670 C   FIELD 05w01 PRIV5: PRIV5
0x40033670 C   FIELD 06w01 PRIV6: PRIV6
0x40033670 C   FIELD 07w01 PRIV7: PRIV7
0x40033670 C   FIELD 08w01 PRIV8: PRIV8
0x40033670 C   FIELD 09w01 PRIV9: PRIV9
0x40033670 C   FIELD 10w01 PRIV10: PRIV10
0x40033670 C   FIELD 11w01 PRIV11: PRIV11
0x40033670 C   FIELD 12w01 PRIV12: PRIV12
0x40033670 C   FIELD 13w01 PRIV13: PRIV13
0x40033670 C   FIELD 14w01 PRIV14: PRIV14
0x40033670 C   FIELD 15w01 PRIV15: PRIV15
0x40033670 C   FIELD 16w01 PRIV16: PRIV16
0x40033670 C   FIELD 17w01 PRIV17: PRIV17
0x40033670 C   FIELD 18w01 PRIV18: PRIV18
0x40033670 C   FIELD 19w01 PRIV19: PRIV19
0x40033670 C   FIELD 20w01 PRIV20: PRIV20
0x40033670 C   FIELD 21w01 PRIV21: PRIV21
0x40033670 C   FIELD 22w01 PRIV22: PRIV22
0x40033670 C   FIELD 23w01 PRIV23: PRIV23
0x40033670 C   FIELD 24w01 PRIV24: PRIV24
0x40033670 C   FIELD 25w01 PRIV25: PRIV25
0x40033670 C   FIELD 26w01 PRIV26: PRIV26
0x40033670 C   FIELD 27w01 PRIV27: PRIV27
0x40033670 C   FIELD 28w01 PRIV28: PRIV28
0x40033670 C   FIELD 29w01 PRIV29: PRIV29
0x40033670 C   FIELD 30w01 PRIV30: PRIV30
0x40033670 C   FIELD 31w01 PRIV31: PRIV31
0x40033674 B  REGISTER MPCBB3_PRIVCFGR29 (rw): MPCBB privileged configuration for super-block x register
0x40033674 C   FIELD 00w01 PRIV0: PRIV0
0x40033674 C   FIELD 01w01 PRIV1: PRIV1
0x40033674 C   FIELD 02w01 PRIV2: PRIV2
0x40033674 C   FIELD 03w01 PRIV3: PRIV3
0x40033674 C   FIELD 04w01 PRIV4: PRIV4
0x40033674 C   FIELD 05w01 PRIV5: PRIV5
0x40033674 C   FIELD 06w01 PRIV6: PRIV6
0x40033674 C   FIELD 07w01 PRIV7: PRIV7
0x40033674 C   FIELD 08w01 PRIV8: PRIV8
0x40033674 C   FIELD 09w01 PRIV9: PRIV9
0x40033674 C   FIELD 10w01 PRIV10: PRIV10
0x40033674 C   FIELD 11w01 PRIV11: PRIV11
0x40033674 C   FIELD 12w01 PRIV12: PRIV12
0x40033674 C   FIELD 13w01 PRIV13: PRIV13
0x40033674 C   FIELD 14w01 PRIV14: PRIV14
0x40033674 C   FIELD 15w01 PRIV15: PRIV15
0x40033674 C   FIELD 16w01 PRIV16: PRIV16
0x40033674 C   FIELD 17w01 PRIV17: PRIV17
0x40033674 C   FIELD 18w01 PRIV18: PRIV18
0x40033674 C   FIELD 19w01 PRIV19: PRIV19
0x40033674 C   FIELD 20w01 PRIV20: PRIV20
0x40033674 C   FIELD 21w01 PRIV21: PRIV21
0x40033674 C   FIELD 22w01 PRIV22: PRIV22
0x40033674 C   FIELD 23w01 PRIV23: PRIV23
0x40033674 C   FIELD 24w01 PRIV24: PRIV24
0x40033674 C   FIELD 25w01 PRIV25: PRIV25
0x40033674 C   FIELD 26w01 PRIV26: PRIV26
0x40033674 C   FIELD 27w01 PRIV27: PRIV27
0x40033674 C   FIELD 28w01 PRIV28: PRIV28
0x40033674 C   FIELD 29w01 PRIV29: PRIV29
0x40033674 C   FIELD 30w01 PRIV30: PRIV30
0x40033674 C   FIELD 31w01 PRIV31: PRIV31
0x40033678 B  REGISTER MPCBB3_PRIVCFGR30 (rw): MPCBB privileged configuration for super-block x register
0x40033678 C   FIELD 00w01 PRIV0: PRIV0
0x40033678 C   FIELD 01w01 PRIV1: PRIV1
0x40033678 C   FIELD 02w01 PRIV2: PRIV2
0x40033678 C   FIELD 03w01 PRIV3: PRIV3
0x40033678 C   FIELD 04w01 PRIV4: PRIV4
0x40033678 C   FIELD 05w01 PRIV5: PRIV5
0x40033678 C   FIELD 06w01 PRIV6: PRIV6
0x40033678 C   FIELD 07w01 PRIV7: PRIV7
0x40033678 C   FIELD 08w01 PRIV8: PRIV8
0x40033678 C   FIELD 09w01 PRIV9: PRIV9
0x40033678 C   FIELD 10w01 PRIV10: PRIV10
0x40033678 C   FIELD 11w01 PRIV11: PRIV11
0x40033678 C   FIELD 12w01 PRIV12: PRIV12
0x40033678 C   FIELD 13w01 PRIV13: PRIV13
0x40033678 C   FIELD 14w01 PRIV14: PRIV14
0x40033678 C   FIELD 15w01 PRIV15: PRIV15
0x40033678 C   FIELD 16w01 PRIV16: PRIV16
0x40033678 C   FIELD 17w01 PRIV17: PRIV17
0x40033678 C   FIELD 18w01 PRIV18: PRIV18
0x40033678 C   FIELD 19w01 PRIV19: PRIV19
0x40033678 C   FIELD 20w01 PRIV20: PRIV20
0x40033678 C   FIELD 21w01 PRIV21: PRIV21
0x40033678 C   FIELD 22w01 PRIV22: PRIV22
0x40033678 C   FIELD 23w01 PRIV23: PRIV23
0x40033678 C   FIELD 24w01 PRIV24: PRIV24
0x40033678 C   FIELD 25w01 PRIV25: PRIV25
0x40033678 C   FIELD 26w01 PRIV26: PRIV26
0x40033678 C   FIELD 27w01 PRIV27: PRIV27
0x40033678 C   FIELD 28w01 PRIV28: PRIV28
0x40033678 C   FIELD 29w01 PRIV29: PRIV29
0x40033678 C   FIELD 30w01 PRIV30: PRIV30
0x40033678 C   FIELD 31w01 PRIV31: PRIV31
0x4003367C B  REGISTER MPCBB3_PRIVCFGR31 (rw): MPCBB privileged configuration for super-block x register
0x4003367C C   FIELD 00w01 PRIV0: PRIV0
0x4003367C C   FIELD 01w01 PRIV1: PRIV1
0x4003367C C   FIELD 02w01 PRIV2: PRIV2
0x4003367C C   FIELD 03w01 PRIV3: PRIV3
0x4003367C C   FIELD 04w01 PRIV4: PRIV4
0x4003367C C   FIELD 05w01 PRIV5: PRIV5
0x4003367C C   FIELD 06w01 PRIV6: PRIV6
0x4003367C C   FIELD 07w01 PRIV7: PRIV7
0x4003367C C   FIELD 08w01 PRIV8: PRIV8
0x4003367C C   FIELD 09w01 PRIV9: PRIV9
0x4003367C C   FIELD 10w01 PRIV10: PRIV10
0x4003367C C   FIELD 11w01 PRIV11: PRIV11
0x4003367C C   FIELD 12w01 PRIV12: PRIV12
0x4003367C C   FIELD 13w01 PRIV13: PRIV13
0x4003367C C   FIELD 14w01 PRIV14: PRIV14
0x4003367C C   FIELD 15w01 PRIV15: PRIV15
0x4003367C C   FIELD 16w01 PRIV16: PRIV16
0x4003367C C   FIELD 17w01 PRIV17: PRIV17
0x4003367C C   FIELD 18w01 PRIV18: PRIV18
0x4003367C C   FIELD 19w01 PRIV19: PRIV19
0x4003367C C   FIELD 20w01 PRIV20: PRIV20
0x4003367C C   FIELD 21w01 PRIV21: PRIV21
0x4003367C C   FIELD 22w01 PRIV22: PRIV22
0x4003367C C   FIELD 23w01 PRIV23: PRIV23
0x4003367C C   FIELD 24w01 PRIV24: PRIV24
0x4003367C C   FIELD 25w01 PRIV25: PRIV25
0x4003367C C   FIELD 26w01 PRIV26: PRIV26
0x4003367C C   FIELD 27w01 PRIV27: PRIV27
0x4003367C C   FIELD 28w01 PRIV28: PRIV28
0x4003367C C   FIELD 29w01 PRIV29: PRIV29
0x4003367C C   FIELD 30w01 PRIV30: PRIV30
0x4003367C C   FIELD 31w01 PRIV31: PRIV31
0x42020000 A PERIPHERAL GPIOA
0x42020000 B  REGISTER MODER (rw): GPIO port mode register
0x42020000 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42020000 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42020004 B  REGISTER OTYPER (rw): GPIO port output type register
0x42020004 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42020004 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42020008 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42020008 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x42020008 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x4202000C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x4202000C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x4202000C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x42020010 B  REGISTER IDR (ro): GPIO port input data register
0x42020010 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x42020010 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x42020010 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x42020010 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x42020010 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x42020010 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x42020010 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x42020010 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x42020010 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x42020010 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x42020010 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x42020010 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x42020010 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x42020010 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x42020010 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x42020010 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x42020014 B  REGISTER ODR (rw): GPIO port output data register
0x42020014 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x42020014 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x42020014 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x42020014 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x42020014 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x42020014 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x42020014 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x42020014 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x42020014 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x42020014 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x42020014 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x42020014 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x42020014 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x42020014 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x42020014 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x42020014 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x42020018 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42020018 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x42020018 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x42020018 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x4202001C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x4202001C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x4202001C C   FIELD 16w01 LCKK: Lock key
0x42020020 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42020020 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42020020 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42020020 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42020020 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42020020 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42020020 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42020020 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42020020 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42020024 B  REGISTER AFRH (rw): GPIO alternate function high register
0x42020024 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x42020024 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x42020024 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x42020024 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x42020024 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x42020024 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x42020024 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x42020024 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x42020028 B  REGISTER BRR (wo): GPIO port bit reset register
0x42020028 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42020028 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42020028 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42020028 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42020028 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42020028 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42020028 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42020028 C   FIELD 07w01 BR7: Port x reset IO pin y
0x42020028 C   FIELD 08w01 BR8: Port x reset IO pin y
0x42020028 C   FIELD 09w01 BR9: Port x reset IO pin y
0x42020028 C   FIELD 10w01 BR10: Port x reset IO pin y
0x42020028 C   FIELD 11w01 BR11: Port x reset IO pin y
0x42020028 C   FIELD 12w01 BR12: Port x reset IO pin y
0x42020028 C   FIELD 13w01 BR13: Port x reset IO pin y
0x42020028 C   FIELD 14w01 BR14: Port x reset IO pin y
0x42020028 C   FIELD 15w01 BR15: Port x reset IO pin y
0x4202002C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x4202002C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202002C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020030 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42020030 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x42020030 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x42020400 A PERIPHERAL GPIOB
0x42020400 B  REGISTER MODER (rw): GPIO port mode register
0x42020400 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42020400 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42020404 B  REGISTER OTYPER (rw): GPIO port output type register
0x42020404 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42020404 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42020408 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42020408 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x42020408 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x4202040C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x4202040C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x4202040C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x42020410 B  REGISTER IDR (ro): GPIO port input data register
0x42020410 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x42020410 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x42020410 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x42020410 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x42020410 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x42020410 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x42020410 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x42020410 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x42020410 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x42020410 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x42020410 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x42020410 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x42020410 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x42020410 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x42020410 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x42020410 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x42020414 B  REGISTER ODR (rw): GPIO port output data register
0x42020414 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x42020414 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x42020414 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x42020414 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x42020414 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x42020414 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x42020414 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x42020414 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x42020414 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x42020414 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x42020414 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x42020414 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x42020414 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x42020414 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x42020414 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x42020414 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x42020418 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42020418 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x42020418 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x42020418 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x4202041C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x4202041C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x4202041C C   FIELD 16w01 LCKK: Lock key
0x42020420 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42020420 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42020420 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42020420 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42020420 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42020420 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42020420 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42020420 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42020420 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42020424 B  REGISTER AFRH (rw): GPIO alternate function high register
0x42020424 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x42020424 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x42020424 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x42020424 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x42020424 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x42020424 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x42020424 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x42020424 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x42020428 B  REGISTER BRR (wo): GPIO port bit reset register
0x42020428 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42020428 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42020428 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42020428 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42020428 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42020428 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42020428 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42020428 C   FIELD 07w01 BR7: Port x reset IO pin y
0x42020428 C   FIELD 08w01 BR8: Port x reset IO pin y
0x42020428 C   FIELD 09w01 BR9: Port x reset IO pin y
0x42020428 C   FIELD 10w01 BR10: Port x reset IO pin y
0x42020428 C   FIELD 11w01 BR11: Port x reset IO pin y
0x42020428 C   FIELD 12w01 BR12: Port x reset IO pin y
0x42020428 C   FIELD 13w01 BR13: Port x reset IO pin y
0x42020428 C   FIELD 14w01 BR14: Port x reset IO pin y
0x42020428 C   FIELD 15w01 BR15: Port x reset IO pin y
0x4202042C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x4202042C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202042C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020430 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42020430 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x42020430 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x42020800 A PERIPHERAL GPIOC
0x42020800 B  REGISTER MODER (rw): GPIO port mode register
0x42020800 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42020800 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42020804 B  REGISTER OTYPER (rw): GPIO port output type register
0x42020804 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42020804 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42020808 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42020808 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x42020808 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x4202080C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x4202080C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x4202080C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x42020810 B  REGISTER IDR (ro): GPIO port input data register
0x42020810 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x42020810 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x42020810 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x42020810 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x42020810 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x42020810 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x42020810 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x42020810 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x42020810 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x42020810 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x42020810 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x42020810 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x42020810 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x42020810 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x42020810 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x42020810 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x42020814 B  REGISTER ODR (rw): GPIO port output data register
0x42020814 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x42020814 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x42020814 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x42020814 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x42020814 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x42020814 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x42020814 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x42020814 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x42020814 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x42020814 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x42020814 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x42020814 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x42020814 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x42020814 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x42020814 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x42020814 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x42020818 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42020818 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x42020818 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x42020818 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x4202081C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x4202081C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x4202081C C   FIELD 16w01 LCKK: Lock key
0x42020820 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42020820 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42020820 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42020820 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42020820 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42020820 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42020820 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42020820 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42020820 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42020824 B  REGISTER AFRH (rw): GPIO alternate function high register
0x42020824 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x42020824 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x42020824 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x42020824 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x42020824 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x42020824 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x42020824 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x42020824 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x42020828 B  REGISTER BRR (wo): GPIO port bit reset register
0x42020828 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42020828 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42020828 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42020828 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42020828 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42020828 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42020828 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42020828 C   FIELD 07w01 BR7: Port x reset IO pin y
0x42020828 C   FIELD 08w01 BR8: Port x reset IO pin y
0x42020828 C   FIELD 09w01 BR9: Port x reset IO pin y
0x42020828 C   FIELD 10w01 BR10: Port x reset IO pin y
0x42020828 C   FIELD 11w01 BR11: Port x reset IO pin y
0x42020828 C   FIELD 12w01 BR12: Port x reset IO pin y
0x42020828 C   FIELD 13w01 BR13: Port x reset IO pin y
0x42020828 C   FIELD 14w01 BR14: Port x reset IO pin y
0x42020828 C   FIELD 15w01 BR15: Port x reset IO pin y
0x4202082C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x4202082C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202082C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020830 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42020830 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x42020830 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x42020C00 A PERIPHERAL GPIOD
0x42020C00 B  REGISTER MODER (rw): GPIO port mode register
0x42020C00 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42020C00 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42020C04 B  REGISTER OTYPER (rw): GPIO port output type register
0x42020C04 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42020C04 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42020C08 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42020C08 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x42020C08 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x42020C0C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x42020C0C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x42020C0C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x42020C10 B  REGISTER IDR (ro): GPIO port input data register
0x42020C10 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x42020C10 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x42020C10 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x42020C10 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x42020C10 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x42020C10 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x42020C10 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x42020C10 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x42020C10 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x42020C10 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x42020C10 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x42020C10 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x42020C10 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x42020C10 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x42020C10 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x42020C10 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x42020C14 B  REGISTER ODR (rw): GPIO port output data register
0x42020C14 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x42020C14 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x42020C14 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x42020C14 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x42020C14 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x42020C14 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x42020C14 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x42020C14 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x42020C14 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x42020C14 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x42020C14 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x42020C14 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x42020C14 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x42020C14 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x42020C14 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x42020C14 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x42020C18 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42020C18 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x42020C18 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x42020C18 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x42020C1C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x42020C1C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x42020C1C C   FIELD 16w01 LCKK: Lock key
0x42020C20 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42020C20 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42020C20 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42020C20 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42020C20 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42020C20 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42020C20 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42020C20 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42020C20 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42020C24 B  REGISTER AFRH (rw): GPIO alternate function high register
0x42020C24 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x42020C24 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x42020C24 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x42020C24 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x42020C24 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x42020C24 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x42020C24 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x42020C24 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x42020C28 B  REGISTER BRR (wo): GPIO port bit reset register
0x42020C28 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42020C28 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42020C28 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42020C28 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42020C28 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42020C28 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42020C28 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42020C28 C   FIELD 07w01 BR7: Port x reset IO pin y
0x42020C28 C   FIELD 08w01 BR8: Port x reset IO pin y
0x42020C28 C   FIELD 09w01 BR9: Port x reset IO pin y
0x42020C28 C   FIELD 10w01 BR10: Port x reset IO pin y
0x42020C28 C   FIELD 11w01 BR11: Port x reset IO pin y
0x42020C28 C   FIELD 12w01 BR12: Port x reset IO pin y
0x42020C28 C   FIELD 13w01 BR13: Port x reset IO pin y
0x42020C28 C   FIELD 14w01 BR14: Port x reset IO pin y
0x42020C28 C   FIELD 15w01 BR15: Port x reset IO pin y
0x42020C2C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x42020C2C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C2C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42020C30 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42020C30 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x42020C30 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x42021000 A PERIPHERAL GPIOE
0x42021000 B  REGISTER MODER (rw): GPIO port mode register
0x42021000 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42021000 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42021004 B  REGISTER OTYPER (rw): GPIO port output type register
0x42021004 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42021004 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42021008 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42021008 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x42021008 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x4202100C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x4202100C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x4202100C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x42021010 B  REGISTER IDR (ro): GPIO port input data register
0x42021010 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x42021010 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x42021010 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x42021010 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x42021010 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x42021010 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x42021010 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x42021010 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x42021010 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x42021010 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x42021010 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x42021010 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x42021010 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x42021010 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x42021010 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x42021010 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x42021014 B  REGISTER ODR (rw): GPIO port output data register
0x42021014 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x42021014 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x42021014 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x42021014 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x42021014 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x42021014 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x42021014 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x42021014 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x42021014 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x42021014 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x42021014 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x42021014 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x42021014 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x42021014 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x42021014 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x42021014 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x42021018 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42021018 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x42021018 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x42021018 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x4202101C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x4202101C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x4202101C C   FIELD 16w01 LCKK: Lock key
0x42021020 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42021020 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42021020 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42021020 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42021020 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42021020 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42021020 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42021020 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42021020 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42021024 B  REGISTER AFRH (rw): GPIO alternate function high register
0x42021024 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x42021024 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x42021024 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x42021024 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x42021024 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x42021024 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x42021024 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x42021024 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x42021028 B  REGISTER BRR (wo): GPIO port bit reset register
0x42021028 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42021028 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42021028 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42021028 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42021028 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42021028 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42021028 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42021028 C   FIELD 07w01 BR7: Port x reset IO pin y
0x42021028 C   FIELD 08w01 BR8: Port x reset IO pin y
0x42021028 C   FIELD 09w01 BR9: Port x reset IO pin y
0x42021028 C   FIELD 10w01 BR10: Port x reset IO pin y
0x42021028 C   FIELD 11w01 BR11: Port x reset IO pin y
0x42021028 C   FIELD 12w01 BR12: Port x reset IO pin y
0x42021028 C   FIELD 13w01 BR13: Port x reset IO pin y
0x42021028 C   FIELD 14w01 BR14: Port x reset IO pin y
0x42021028 C   FIELD 15w01 BR15: Port x reset IO pin y
0x4202102C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x4202102C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202102C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021030 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42021030 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x42021030 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x42021400 A PERIPHERAL GPIOF
0x42021400 B  REGISTER MODER (rw): GPIO port mode register
0x42021400 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42021400 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42021404 B  REGISTER OTYPER (rw): GPIO port output type register
0x42021404 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42021404 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42021408 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42021408 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x42021408 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x4202140C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x4202140C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x4202140C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x42021410 B  REGISTER IDR (ro): GPIO port input data register
0x42021410 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x42021410 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x42021410 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x42021410 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x42021410 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x42021410 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x42021410 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x42021410 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x42021410 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x42021410 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x42021410 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x42021410 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x42021410 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x42021410 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x42021410 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x42021410 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x42021414 B  REGISTER ODR (rw): GPIO port output data register
0x42021414 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x42021414 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x42021414 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x42021414 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x42021414 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x42021414 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x42021414 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x42021414 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x42021414 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x42021414 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x42021414 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x42021414 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x42021414 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x42021414 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x42021414 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x42021414 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x42021418 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42021418 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x42021418 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x42021418 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x4202141C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x4202141C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x4202141C C   FIELD 16w01 LCKK: Lock key
0x42021420 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42021420 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42021420 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42021420 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42021420 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42021420 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42021420 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42021420 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42021420 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42021424 B  REGISTER AFRH (rw): GPIO alternate function high register
0x42021424 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x42021424 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x42021424 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x42021424 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x42021424 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x42021424 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x42021424 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x42021424 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x42021428 B  REGISTER BRR (wo): GPIO port bit reset register
0x42021428 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42021428 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42021428 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42021428 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42021428 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42021428 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42021428 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42021428 C   FIELD 07w01 BR7: Port x reset IO pin y
0x42021428 C   FIELD 08w01 BR8: Port x reset IO pin y
0x42021428 C   FIELD 09w01 BR9: Port x reset IO pin y
0x42021428 C   FIELD 10w01 BR10: Port x reset IO pin y
0x42021428 C   FIELD 11w01 BR11: Port x reset IO pin y
0x42021428 C   FIELD 12w01 BR12: Port x reset IO pin y
0x42021428 C   FIELD 13w01 BR13: Port x reset IO pin y
0x42021428 C   FIELD 14w01 BR14: Port x reset IO pin y
0x42021428 C   FIELD 15w01 BR15: Port x reset IO pin y
0x4202142C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x4202142C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202142C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021430 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42021430 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x42021430 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x42021800 A PERIPHERAL GPIOG
0x42021800 B  REGISTER MODER (rw): GPIO port mode register
0x42021800 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42021800 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42021804 B  REGISTER OTYPER (rw): GPIO port output type register
0x42021804 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42021804 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42021808 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42021808 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x42021808 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x4202180C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x4202180C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x4202180C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x42021810 B  REGISTER IDR (ro): GPIO port input data register
0x42021810 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x42021810 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x42021810 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x42021810 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x42021810 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x42021810 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x42021810 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x42021810 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x42021810 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x42021810 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x42021810 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x42021810 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x42021810 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x42021810 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x42021810 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x42021810 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x42021814 B  REGISTER ODR (rw): GPIO port output data register
0x42021814 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x42021814 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x42021814 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x42021814 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x42021814 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x42021814 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x42021814 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x42021814 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x42021814 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x42021814 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x42021814 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x42021814 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x42021814 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x42021814 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x42021814 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x42021814 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x42021818 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42021818 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x42021818 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x42021818 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x4202181C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x4202181C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x4202181C C   FIELD 16w01 LCKK: Lock key
0x42021820 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42021820 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42021820 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42021820 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42021820 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42021820 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42021820 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42021820 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42021820 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42021824 B  REGISTER AFRH (rw): GPIO alternate function high register
0x42021824 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x42021824 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x42021824 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x42021824 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x42021824 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x42021824 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x42021824 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x42021824 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x42021828 B  REGISTER BRR (wo): GPIO port bit reset register
0x42021828 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42021828 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42021828 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42021828 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42021828 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42021828 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42021828 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42021828 C   FIELD 07w01 BR7: Port x reset IO pin y
0x42021828 C   FIELD 08w01 BR8: Port x reset IO pin y
0x42021828 C   FIELD 09w01 BR9: Port x reset IO pin y
0x42021828 C   FIELD 10w01 BR10: Port x reset IO pin y
0x42021828 C   FIELD 11w01 BR11: Port x reset IO pin y
0x42021828 C   FIELD 12w01 BR12: Port x reset IO pin y
0x42021828 C   FIELD 13w01 BR13: Port x reset IO pin y
0x42021828 C   FIELD 14w01 BR14: Port x reset IO pin y
0x42021828 C   FIELD 15w01 BR15: Port x reset IO pin y
0x4202182C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x4202182C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x4202182C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021830 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42021830 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x42021830 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x42021C00 A PERIPHERAL GPIOH
0x42021C00 B  REGISTER MODER (rw): GPIO port mode register
0x42021C00 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42021C00 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42021C04 B  REGISTER OTYPER (rw): GPIO port output type register
0x42021C04 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42021C04 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42021C08 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42021C08 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x42021C08 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x42021C0C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x42021C0C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x42021C0C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x42021C10 B  REGISTER IDR (ro): GPIO port input data register
0x42021C10 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x42021C10 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x42021C10 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x42021C10 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x42021C10 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x42021C10 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x42021C10 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x42021C10 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x42021C10 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x42021C10 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x42021C10 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x42021C10 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x42021C10 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x42021C10 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x42021C10 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x42021C10 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x42021C14 B  REGISTER ODR (rw): GPIO port output data register
0x42021C14 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x42021C14 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x42021C14 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x42021C14 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x42021C14 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x42021C14 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x42021C14 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x42021C14 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x42021C14 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x42021C14 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x42021C14 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x42021C14 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x42021C14 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x42021C14 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x42021C14 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x42021C14 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x42021C18 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42021C18 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x42021C18 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x42021C18 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x42021C1C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x42021C1C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x42021C1C C   FIELD 16w01 LCKK: Lock key
0x42021C20 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42021C20 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42021C20 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42021C20 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42021C20 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42021C20 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42021C20 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42021C20 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42021C20 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42021C24 B  REGISTER AFRH (rw): GPIO alternate function high register
0x42021C24 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x42021C24 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x42021C24 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x42021C24 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x42021C24 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x42021C24 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x42021C24 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x42021C24 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x42021C28 B  REGISTER BRR (wo): GPIO port bit reset register
0x42021C28 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42021C28 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42021C28 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42021C28 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42021C28 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42021C28 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42021C28 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42021C28 C   FIELD 07w01 BR7: Port x reset IO pin y
0x42021C28 C   FIELD 08w01 BR8: Port x reset IO pin y
0x42021C28 C   FIELD 09w01 BR9: Port x reset IO pin y
0x42021C28 C   FIELD 10w01 BR10: Port x reset IO pin y
0x42021C28 C   FIELD 11w01 BR11: Port x reset IO pin y
0x42021C28 C   FIELD 12w01 BR12: Port x reset IO pin y
0x42021C28 C   FIELD 13w01 BR13: Port x reset IO pin y
0x42021C28 C   FIELD 14w01 BR14: Port x reset IO pin y
0x42021C28 C   FIELD 15w01 BR15: Port x reset IO pin y
0x42021C2C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x42021C2C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C2C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x42021C30 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42021C30 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x42021C30 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x42022000 A PERIPHERAL GPIOI
0x42022000 B  REGISTER MODER (rw): GPIO port mode register
0x42022000 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x42022000 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x42022004 B  REGISTER OTYPER (rw): GPIO port output type register
0x42022004 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x42022004 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x42022008 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x42022008 C   FIELD 00w02 OSPEED0: Port x configuration bits (y =7 .. 0)
0x42022008 C   FIELD 02w02 OSPEED1: Port x configuration bits (y =7 .. 0)
0x42022008 C   FIELD 04w02 OSPEED2: Port x configuration bits (y =7 .. 0)
0x42022008 C   FIELD 06w02 OSPEED3: Port x configuration bits (y =7 .. 0)
0x42022008 C   FIELD 08w02 OSPEED4: Port x configuration bits (y =7 .. 0)
0x42022008 C   FIELD 10w02 OSPEED5: Port x configuration bits (y =7 .. 0)
0x42022008 C   FIELD 12w02 OSPEED6: Port x configuration bits (y =7 .. 0)
0x42022008 C   FIELD 14w02 OSPEED7: Port x configuration bits (y =7 .. 0)
0x4202200C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x4202200C C   FIELD 00w02 PUPD0: Port x configuration bits (y =7 .. 0)
0x4202200C C   FIELD 02w02 PUPD1: Port x configuration bits (y =7 .. 0)
0x4202200C C   FIELD 04w02 PUPD2: Port x configuration bits (y =7 .. 0)
0x4202200C C   FIELD 06w02 PUPD3: Port x configuration bits (y =7 .. 0)
0x4202200C C   FIELD 08w02 PUPD4: Port x configuration bits (y =7 .. 0)
0x4202200C C   FIELD 10w02 PUPD5: Port x configuration bits (y =7 .. 0)
0x4202200C C   FIELD 12w02 PUPD6: Port x configuration bits (y =7 .. 0)
0x4202200C C   FIELD 14w02 PUPD7: Port x configuration bits (y =7 .. 0)
0x42022010 B  REGISTER IDR (ro): GPIO port input data register
0x42022010 C   FIELD 00w01 ID0: Port input data (y = 0..7)
0x42022010 C   FIELD 01w01 ID1: Port input data (y = 0..7)
0x42022010 C   FIELD 02w01 ID2: Port input data (y = 0..7)
0x42022010 C   FIELD 03w01 ID3: Port input data (y = 0..7)
0x42022010 C   FIELD 04w01 ID4: Port input data (y = 0..7)
0x42022010 C   FIELD 05w01 ID5: Port input data (y = 0..7)
0x42022010 C   FIELD 06w01 ID6: Port input data (y = 0..7)
0x42022010 C   FIELD 07w01 ID7: Port input data (y = 0..7)
0x42022014 B  REGISTER ODR (rw): GPIO port output data register
0x42022014 C   FIELD 00w01 OD0: Port output data (y = 0..7)
0x42022014 C   FIELD 01w01 OD1: Port output data (y = 0..7)
0x42022014 C   FIELD 02w01 OD2: Port output data (y = 0..7)
0x42022014 C   FIELD 03w01 OD3: Port output data (y = 0..7)
0x42022014 C   FIELD 04w01 OD4: Port output data (y = 0..7)
0x42022014 C   FIELD 05w01 OD5: Port output data (y = 0..7)
0x42022014 C   FIELD 06w01 OD6: Port output data (y = 0..7)
0x42022014 C   FIELD 07w01 OD7: Port output data (y = 0..7)
0x42022018 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x42022018 C   FIELD 00w01 BS0: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 01w01 BS1: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 02w01 BS2: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 03w01 BS3: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 04w01 BS4: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 05w01 BS5: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 06w01 BS6: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 07w01 BS7: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 16w01 BR0: Port x set bit y (y= 0..7)
0x42022018 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..7)
0x42022018 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..7)
0x42022018 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..7)
0x42022018 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..7)
0x42022018 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..7)
0x42022018 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..7)
0x42022018 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..7)
0x4202201C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x4202201C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x4202201C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x4202201C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x4202201C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x4202201C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x4202201C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x4202201C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x4202201C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x4202201C C   FIELD 16w01 LCKK: Lock key
0x42022020 B  REGISTER AFRL (rw): GPIO alternate function low register
0x42022020 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x42022020 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x42022020 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x42022020 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x42022020 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x42022020 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x42022020 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x42022020 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x42022028 B  REGISTER BRR (wo): GPIO port bit reset register
0x42022028 C   FIELD 00w01 BR0: Port x reset IO pin y
0x42022028 C   FIELD 01w01 BR1: Port x reset IO pin y
0x42022028 C   FIELD 02w01 BR2: Port x reset IO pin y
0x42022028 C   FIELD 03w01 BR3: Port x reset IO pin y
0x42022028 C   FIELD 04w01 BR4: Port x reset IO pin y
0x42022028 C   FIELD 05w01 BR5: Port x reset IO pin y
0x42022028 C   FIELD 06w01 BR6: Port x reset IO pin y
0x42022028 C   FIELD 07w01 BR7: Port x reset IO pin y
0x4202202C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x4202202C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 7 to 0)
0x4202202C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 7 to 0)
0x4202202C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 7 to 0)
0x4202202C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 7 to 0)
0x4202202C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 7 to 0)
0x4202202C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 7 to 0)
0x4202202C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 7 to 0)
0x4202202C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 7 to 0)
0x42022030 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x42022030 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x42022030 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x42022030 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x42022030 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x42022030 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x42022030 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x42022030 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x42022030 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x42028000 A PERIPHERAL ADC1
0x42028000 B  REGISTER ADC_ISR: ADC interrupt and status register
0x42028000 C   FIELD 00w01 ADRDY (rw): ADC ready This bit is set by hardware after the ADC has been enabled (bit ADEN = 1) and when the ADC reaches a state where it is ready to accept conversion requests. It is cleared by software writing 1 to it.
0x42028000 C   FIELD 01w01 EOSMP (rw): End of sampling flag This bit is set by hardware during the conversion of any channel (only for regular channels), at the end of the sampling phase.
0x42028000 C   FIELD 02w01 EOC (rw): End of conversion flag This bit is set by hardware at the end of each regular conversion of a channel when a new data is available in the ADC_DR register. It is cleared by software writing 1 to it or by reading the ADC_DR register
0x42028000 C   FIELD 03w01 EOS (rw): End of regular sequence flag This bit is set by hardware at the end of the conversions of a regular sequence of channels. It is cleared by software writing 1 to it.
0x42028000 C   FIELD 04w01 OVR (rw): ADC overrun This bit is set by hardware when an overrun occurs on a regular channel, meaning that a new conversion has completed while the EOC flag was already set. It is cleared by software writing 1 to it.
0x42028000 C   FIELD 05w01 JEOC (rw): Injected channel end of conversion flag This bit is set by hardware at the end of each injected conversion of a channel when a new data is available in the corresponding ADC_JDRy register. It is cleared by software writing 1 to it or by reading the corresponding ADC_JDRy register
0x42028000 C   FIELD 06w01 JEOS (rw): Injected channel end of sequence flag This bit is set by hardware at the end of the conversions of all injected channels in the group. It is cleared by software writing 1 to it.
0x42028000 C   FIELD 07w01 AWD1 (rw): Analog watchdog 1 flag This bit is set by hardware when the converted voltage crosses the values programmed in the fields LT1[11:0] and HT1[11:0] of ADC_LTR1, & ADC_HTR1 register. It is cleared by software. writing 1 to it.
0x42028000 C   FIELD 08w01 AWD2 (rw): Analog watchdog 2 flag This bit is set by hardware when the converted voltage crosses the values programmed in the fields LT2[7:0] and HT2[7:0] of ADC_LTR2 & ADC_HTR2 register. It is cleared by software writing 1 to it.
0x42028000 C   FIELD 09w01 AWD3 (rw): Analog watchdog 3 flag This bit is set by hardware when the converted voltage crosses the values programmed in the fields LT3[7:0] and HT3[7:0] of ADC_LTR3 & ADC_HTR3 register. It is cleared by software writing 1 to it.
0x42028000 C   FIELD 12w01 LDORDY (ro): ADC voltage regulator ready This bit is set by hardware. It indicates that the ADC internal supply is ready. The ADC is available after tADCVREG_SETUP time.
0x42028004 B  REGISTER ADC_IER: ADC interrupt enable register
0x42028004 C   FIELD 00w01 ADRDYIE (rw): ADC ready interrupt enable This bit is set and cleared by software to enable/disable the ADC Ready interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028004 C   FIELD 01w01 EOSMPIE (rw): End of sampling flag interrupt enable for regular conversions This bit is set and cleared by software to enable/disable the end of the sampling phase interrupt for regular conversions. Note: Software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028004 C   FIELD 02w01 EOCIE (rw): End of regular conversion interrupt enable This bit is set and cleared by software to enable/disable the end of a regular conversion interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028004 C   FIELD 03w01 EOSIE (rw): End of regular sequence of conversions interrupt enable This bit is set and cleared by software to enable/disable the end of regular sequence of conversions interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028004 C   FIELD 04w01 OVRIE (rw): Overrun interrupt enable This bit is set and cleared by software to enable/disable the Overrun interrupt of a regular conversion. Note: Software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028004 C   FIELD 05w01 JEOCIE (rw): End of injected conversion interrupt enable This bit is set and cleared by software to enable/disable the end of an injected conversion interrupt. Note: Software is allowed to write this bit only when JADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028004 C   FIELD 06w01 JEOSIE (rw): End of injected sequence of conversions interrupt enable This bit is set and cleared by software to enable/disable the end of injected sequence of conversions interrupt. Note: Software is allowed to write this bit only when JADSTART = 0 (which ensures that no injected conversion is ongoing).
0x42028004 C   FIELD 07w01 AWD1IE (rw): Analog watchdog 1 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog 1 interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028004 C   FIELD 08w01 AWD2IE (rw): Analog watchdog 2 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog 2 interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028004 C   FIELD 09w01 AWD3IE (rw): Analog watchdog 3 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog 2 interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028008 B  REGISTER ADC_CR: ADC control register
0x42028008 C   FIELD 00w01 ADEN (rw): ADC enable control This bit is set by software to enable the ADC. The ADC is effectively ready to operate once the flag ADRDY has been set. It is cleared by hardware when the ADC is disabled, after the execution of the ADDIS command. Note: The software is allowed to set ADEN only when all bits of ADC_CR registers are 0 (ADCAL = 0, JADSTART = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0) except for bit ADVREGEN which must be 1 (and the software must have wait for the startup time of the voltage regulator)
0x42028008 C   FIELD 01w01 ADDIS (rw): ADC disable command This bit is set by software to disable the ADC (ADDIS command) and put it into power-down state (OFF state). It is cleared by hardware once the ADC is effectively disabled (ADEN is also cleared by hardware at this time). Note: The software is allowed to set ADDIS only when ADEN = 1 and both ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing)
0x42028008 C   FIELD 02w01 ADSTART (rw): ADC start of regular conversion This bit is set by software to start ADC conversion of regular channels. Depending on the configuration bits EXTEN[1:0], a conversion starts immediately (software trigger configuration) or once a regular hardware trigger event occurs (hardware trigger configuration). It is cleared by hardware: in Single conversion mode (CONT = 0, DISCEN = 0) when software trigger is selected (EXTEN[1:0] = 0x0): at the assertion of the end of regular conversion sequence (EOS) flag. In Discontinuous conversion mode (CONT = 0, DISCEN = 1), when the software trigger is selected (EXTEN[1:0] = 0x0): at the end of conversion (EOC) flag. in all other cases: after the execution of the ADSTP command, at the same time that ADSTP is cleared by hardware. Note: The software is allowed to set ADSTART only when ADEN = 1 and ADDIS = 0 (ADC is enabled and there is no pending request to disable the ADC) In Auto-injection mode (JAUTO = 1), regular and auto-injected conversions are started by setting bit ADSTART (JADSTART must be kept cleared)
0x42028008 C   FIELD 03w01 JADSTART (rw): ADC start of injected conversion This bit is set by software to start ADC conversion of injected channels. Depending on the configuration bits JEXTEN[1:0], a conversion starts immediately (software trigger configuration) or once an injected hardware trigger event occurs (hardware trigger configuration). It is cleared by hardware: in Single conversion mode when software trigger is selected (JEXTSEL = 0x0): at the assertion of the end of injected conversion sequence (JEOS) flag. in all cases: after the execution of the JADSTP command, at the same time as JADSTP is cleared by hardware. Note: The software is allowed to set JADSTART only when ADEN = 1 and ADDIS = 0 (ADC is enabled and there is no pending request to disable the ADC). In Auto-injection mode (JAUTO = 1), regular and auto-injected conversions are started by setting bit ADSTART (JADSTART must be kept cleared)
0x42028008 C   FIELD 04w01 ADSTP (rw): ADC stop of regular conversion command This bit is set by software to stop and discard an ongoing regular conversion (ADSTP Command). It is cleared by hardware when the conversion is effectively discarded and the ADC regular sequence and triggers can be re-configured. The ADC is then ready to accept a new start of regular conversions (ADSTART command). Note: The software is allowed to set ADSTP only when ADSTART = 1 and ADDIS = 0 (ADC is enabled and eventually converting a regular conversion and there is no pending request to disable the ADC). In Auto-injection mode (JAUTO = 1), setting ADSTP bit aborts both regular and injected conversions (do not use JADSTP).
0x42028008 C   FIELD 05w01 JADSTP (rw): ADC stop of injected conversion command This bit is set by software to stop and discard an ongoing injected conversion (JADSTP Command). It is cleared by hardware when the conversion is effectively discarded and the ADC injected sequence and triggers can be re-configured. The ADC is then ready to accept a new start of injected conversions (JADSTART command). Note: The software is allowed to set JADSTP only when JADSTART = 1 and ADDIS = 0 (ADC is enabled and eventually converting an injected conversion and there is no pending request to disable the ADC). In Auto-injection mode (JAUTO = 1), setting ADSTP bit aborts both regular and injected conversions (do not use JADSTP)
0x42028008 C   FIELD 16w01 ADCALLIN (rw): Linearity calibration This bit is set and cleared by software to enable the linearity calibration. Note: The software is allowed to write this bit only when the ADC is disabled and is not calibrating (ADCAL = 0, JADSTART = 0, JADSTP = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).
0x42028008 C   FIELD 24w04 CALINDEX (rw): Calibration factor This bitfield controls the calibration factor to be read or written. Calibration index 0 is dedicated to single-ended and differential offsets, calibration index 1 to 7 to the linearity calibration factors, and index 8 to the internal offset: Others: Reserved, must not be used Note: ADC_CALFACT2[31:0] correspond to the location of CALINDEX[3:0] calibration factor data (see for details).
0x42028008 C   FIELD 28w01 ADVREGEN (rw): ADC voltage regulator enable This bits is set by software to enable the ADC voltage regulator. Before performing any operation such as launching a calibration or enabling the ADC, the ADC voltage regulator must first be enabled and the software must wait for the regulator start-up time. For more details about the ADC voltage regulator enable and disable sequences, refer to (ADVREGEN). The software can program this bit field only when the ADC is disabled (ADCAL = 0, JADSTART = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).
0x42028008 C   FIELD 29w01 DEEPPWD (rw): Deep-power-down enable This bit is set and cleared by software to put the ADC in Deep-power-down mode. Note: The software is allowed to write this bit only when the ADC is disabled (ADCAL = 0, JADSTART = 0, JADSTP = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).
0x42028008 C   FIELD 31w01 ADCAL (rw): ADC calibration This bit is set by software to start the ADC calibration. It is cleared by hardware after calibration is complete. Note: The software is allowed to launch a calibration by setting ADCAL only when ADEN = 0.
0x4202800C B  REGISTER ADC_CFGR1: ADC configuration register
0x4202800C C   FIELD 00w02 DMNGT (rw): Data management configuration This bit is set and cleared by software to select how the ADC interface output data are managed. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202800C C   FIELD 02w02 RES (rw): Data resolution These bits are written by software to select the resolution of the conversion. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202800C C   FIELD 05w05 EXTSEL (rw): External trigger selection for regular group These bits select the external event used to trigger the start of conversion of a regular group: ... Refer to the ADC external trigger for regular channels in signals for details on trigger mapping. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202800C C   FIELD 10w02 EXTEN (rw): External trigger enable and polarity selection for regular channels These bits are set and cleared by software to select the external trigger polarity and enable the trigger of a regular group. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202800C C   FIELD 12w01 OVRMOD (rw): Overrun Mode This bit is set and cleared by software and configure the way data overrun is managed. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202800C C   FIELD 13w01 CONT (rw): Single / continuous conversion mode for regular conversions This bit is set and cleared by software. If it is set, regular conversion takes place continuously until it is cleared. Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both DISCEN = 1 and CONT = 1. The software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202800C C   FIELD 14w01 AUTDLY (rw): Delayed conversion mode This bit is set and cleared by software to enable/disable the Auto Delayed Conversion mode.. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202800C C   FIELD 16w01 DISCEN (rw): Discontinuous mode for regular channels This bit is set and cleared by software to enable/disable Discontinuous mode for regular channels. Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both DISCEN = 1 and CONT = 1. It is not possible to use both auto-injected mode and discontinuous mode simultaneously: the bits DISCEN and JDISCEN must be kept cleared by software when JAUTO is set. The software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202800C C   FIELD 17w03 DISCNUM (rw): Discontinuous mode channel count These bits are written by software to define the number of regular channels to be converted in discontinuous mode, after receiving an external trigger. ... Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202800C C   FIELD 20w01 JDISCEN (rw): Discontinuous mode on injected channels This bit is set and cleared by software to enable/disable discontinuous mode on the injected channels of a group. Note: The software is allowed to write this bit only when JADSTART = 0 (which ensures that no injected conversion is ongoing). It is not possible to use both auto-injected mode and discontinuous mode simultaneously: the bits DISCEN and JDISCEN must be kept cleared by software when JAUTO is set.
0x4202800C C   FIELD 22w01 AWD1SGL (rw): Enable the watchdog 1 on a single channel or on all channels This bit is set and cleared by software to enable the analog watchdog on the channel identified by the AWD1CH[4:0] bits or on all the channels Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202800C C   FIELD 23w01 AWD1EN (rw): Analog watchdog 1 enable on regular channels This bit is set and cleared by software Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202800C C   FIELD 24w01 JAWD1EN (rw): Analog watchdog 1 enable on injected channels This bit is set and cleared by software Note: The software is allowed to write this bit only when JADSTART = 0 (which ensures that no injected conversion is ongoing).
0x4202800C C   FIELD 25w01 JAUTO (rw): Automatic injected group conversion This bit is set and cleared by software to enable/disable automatic injected group conversion after regular group conversion. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no regular nor injected conversion is ongoing).
0x4202800C C   FIELD 26w05 AWD1CH (rw): Analog watchdog 1 channel selection These bits are set and cleared by software. They select the input channel to be guarded by the analog watchdog. ..... Others: Reserved, must not be used Note: The channel selected by AWD1CH must be also selected into the SQRi or JSQRi registers. Software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 B  REGISTER ADC_CFGR2: ADC configuration register 2
0x42028010 C   FIELD 00w01 ROVSE (rw): Regular Oversampling Enable This bit is set and cleared by software to enable regular oversampling. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing)
0x42028010 C   FIELD 01w01 JOVSE (rw): Injected Oversampling Enable This bit is set and cleared by software to enable injected oversampling. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing)
0x42028010 C   FIELD 05w04 OVSS (rw): Oversampling right shift This bit field is set and cleared by software to define the right shifting applied to the raw oversampling result. Others: Reserved, must not be used. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 C   FIELD 09w01 TROVS (rw): Triggered Regular Oversampling This bit is set and cleared by software to enable triggered oversampling Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 C   FIELD 10w01 ROVSM (rw): Regular Oversampling mode This bit is set and cleared by software to select the regular oversampling mode. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 C   FIELD 13w01 BULB (rw): Bulb sampling mode This bit is set and cleared by software to select the bulb sampling mode. SMPTRIG bit must not be set when the BULB bit is set. The very first ADC conversion is performed with the sampling time specified in SMPx bits. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 C   FIELD 14w01 SWTRIG (rw): Software trigger bit for sampling time control trigger mode This bit is set and cleared by software to enable the bulb sampling mode. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 C   FIELD 15w01 SMPTRIG (rw): Sampling time control trigger mode This bit is set and cleared by software to enable the sampling time control trigger mode. The sampling time starts on the trigger rising edge, and the conversion on the trigger falling edge. EXTEN[1:0] bits must be set to 01. BULB bit must not be set when the SMPTRIG bit is set. When EXTEN[1:0] bits is set to 00, set SWTRIG to start the sampling and clear SWTRIG bit to start the conversion. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 C   FIELD 16w10 OSR (rw): Oversampling ratio This bitfield is set and cleared by software to define the oversampling ratio. 2: 3x ... 1023: 1024x Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 C   FIELD 27w01 LFTRIG (rw): Low-frequency trigger This bit is set and cleared by software Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028010 C   FIELD 28w04 LSHIFT (rw): Left shift factor This bitfield is set and cleared by software to define the left shifting applied to the final result with or without oversampling. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 B  REGISTER ADC_SMPR1: ADC sample time register 1
0x42028014 C   FIELD 00w03 SMP0 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 03w03 SMP1 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 06w03 SMP2 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 09w03 SMP3 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 12w03 SMP4 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 15w03 SMP5 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 18w03 SMP6 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 21w03 SMP7 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 24w03 SMP8 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028014 C   FIELD 27w03 SMP9 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 B  REGISTER ADC_SMPR2: ADC sample time register 2
0x42028018 C   FIELD 00w03 SMP10 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 03w03 SMP11 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 06w03 SMP12 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 09w03 SMP13 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 12w03 SMP14 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 15w03 SMP15 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 18w03 SMP16 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 21w03 SMP17 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 24w03 SMP18 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028018 C   FIELD 27w03 SMP19 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C B  REGISTER ADC_PCSEL: ADC channel preselection register
0x4202801C C   FIELD 00w01 PCSEL0 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 01w01 PCSEL1 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 02w01 PCSEL2 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 03w01 PCSEL3 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 04w01 PCSEL4 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 05w01 PCSEL5 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 06w01 PCSEL6 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 07w01 PCSEL7 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 08w01 PCSEL8 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 09w01 PCSEL9 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 10w01 PCSEL10 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 11w01 PCSEL11 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 12w01 PCSEL12 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 13w01 PCSEL13 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 14w01 PCSEL14 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 15w01 PCSEL15 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 16w01 PCSEL16 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 17w01 PCSEL17 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 18w01 PCSEL18 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202801C C   FIELD 19w01 PCSEL19 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028030 B  REGISTER ADC_SQR1: ADC regular sequence register 1
0x42028030 C   FIELD 00w04 L (rw): Regular channel sequence length These bits are written by software to define the total number of conversions in the regular channel conversion sequence. ... Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028030 C   FIELD 06w05 SQ1 (rw): 1st conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 1st in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028030 C   FIELD 12w05 SQ2 (rw): 2nd conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 2nd in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028030 C   FIELD 18w05 SQ3 (rw): 3rd conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 3rd in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028030 C   FIELD 24w05 SQ4 (rw): 4th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 4th in the regular conversion sequence.
0x42028034 B  REGISTER ADC_SQR2: ADC regular sequence register 2
0x42028034 C   FIELD 00w05 SQ5 (rw): 5th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 5th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028034 C   FIELD 06w05 SQ6 (rw): 6th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 6th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028034 C   FIELD 12w05 SQ7 (rw): 7th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 7th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028034 C   FIELD 18w05 SQ8 (rw): 8th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 8th in the regular conversion sequence Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028034 C   FIELD 24w05 SQ9 (rw): 9th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 9th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028038 B  REGISTER ADC_SQR3: ADC regular sequence register 3
0x42028038 C   FIELD 00w05 SQ10 (rw): 10th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 10th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028038 C   FIELD 06w05 SQ11 (rw): 11th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 11th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028038 C   FIELD 12w05 SQ12 (rw): 12th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 12th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028038 C   FIELD 18w05 SQ13 (rw): 13th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 13th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028038 C   FIELD 24w05 SQ14 (rw): 14th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 14th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202803C B  REGISTER ADC_SQR4: ADC regular sequence register 4
0x4202803C C   FIELD 00w05 SQ15 (rw): 15th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 15th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x4202803C C   FIELD 06w05 SQ16 (rw): 16th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 16th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x42028040 B  REGISTER ADC_DR: ADC regular Data Register
0x42028040 C   FIELD 00w32 RDATA (ro): Regular data converted These bits are read-only. They contain the conversion result from the last converted regular channel. The data are left- or right-aligned as described in .
0x4202804C B  REGISTER ADC_JSQR: ADC injected sequence register
0x4202804C C   FIELD 00w02 JL (rw): Injected channel sequence length These bits are written by software to define the total number of conversions in the injected channel conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x4202804C C   FIELD 02w05 JEXTSEL (rw): External trigger selection for injected group These bits select the external event used to trigger the start of conversion of an injected group: ... Refer to the ADC external trigger for injected channels in internal signals for details on trigger mapping. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x4202804C C   FIELD 07w02 JEXTEN (rw): External trigger enable and polarity selection for injected channels These bits are set and cleared by software to select the external trigger polarity and enable the trigger of an injected group. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x4202804C C   FIELD 09w05 JSQ1 (rw): 1st conversion in the injected sequence These bits are written by software with the channel number (0..19) assigned as the 1st in the injected conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x4202804C C   FIELD 15w05 JSQ2 (rw): 2nd conversion in the injected sequence These bits are written by software with the channel number (0..19) assigned as the 2nd in the injected conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x4202804C C   FIELD 21w05 JSQ3 (rw): 3rd conversion in the injected sequence These bits are written by software with the channel number (0..19) assigned as the 3rd in the injected conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x4202804C C   FIELD 27w05 JSQ4 (rw): 4th conversion in the injected sequence These bits are written by software with the channel number (0..19) assigned as the 4th in the injected conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x42028060 B  REGISTER ADC_OFR1: ADC offset register
0x42028060 C   FIELD 00w24 OFFSET (rw): Data offset y for the channel programmed into OFFSETy_CH[4:0] bits These bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion). When OFFSETy[21:0] bitfield is reset, the offset compensation is disabled. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction. For example, if OFFSET1_CH[4:0] = 4 and OFFSET2_CH[4:0] = 4, this is OFFSET1[25:0] that is subtracted when converting channel 4.
0x42028060 C   FIELD 24w01 POSOFF (rw): offset sign This bit is set and cleared by software to enable the positive offset. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028060 C   FIELD 25w01 USAT (rw): Unsigned saturation enable This bit is written by software to enable or disable the unsigned saturation feature. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028060 C   FIELD 26w01 SSAT (rw): Signed saturation enable This bit is written by software to enable or disable the Signed saturation feature. (see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details). Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028060 C   FIELD 27w05 OFFSET_CH (rw): Channel selection for the data offset y These bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.
0x42028064 B  REGISTER ADC_OFR2: ADC offset register
0x42028064 C   FIELD 00w24 OFFSET (rw): Data offset y for the channel programmed into OFFSETy_CH[4:0] bits These bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion). When OFFSETy[21:0] bitfield is reset, the offset compensation is disabled. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction. For example, if OFFSET1_CH[4:0] = 4 and OFFSET2_CH[4:0] = 4, this is OFFSET1[25:0] that is subtracted when converting channel 4.
0x42028064 C   FIELD 24w01 POSOFF (rw): offset sign This bit is set and cleared by software to enable the positive offset. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028064 C   FIELD 25w01 USAT (rw): Unsigned saturation enable This bit is written by software to enable or disable the unsigned saturation feature. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028064 C   FIELD 26w01 SSAT (rw): Signed saturation enable This bit is written by software to enable or disable the Signed saturation feature. (see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details). Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028064 C   FIELD 27w05 OFFSET_CH (rw): Channel selection for the data offset y These bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.
0x42028068 B  REGISTER ADC_OFR3: ADC offset register
0x42028068 C   FIELD 00w24 OFFSET (rw): Data offset y for the channel programmed into OFFSETy_CH[4:0] bits These bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion). When OFFSETy[21:0] bitfield is reset, the offset compensation is disabled. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction. For example, if OFFSET1_CH[4:0] = 4 and OFFSET2_CH[4:0] = 4, this is OFFSET1[25:0] that is subtracted when converting channel 4.
0x42028068 C   FIELD 24w01 POSOFF (rw): offset sign This bit is set and cleared by software to enable the positive offset. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028068 C   FIELD 25w01 USAT (rw): Unsigned saturation enable This bit is written by software to enable or disable the unsigned saturation feature. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028068 C   FIELD 26w01 SSAT (rw): Signed saturation enable This bit is written by software to enable or disable the Signed saturation feature. (see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details). Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x42028068 C   FIELD 27w05 OFFSET_CH (rw): Channel selection for the data offset y These bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.
0x4202806C B  REGISTER ADC_OFR4: ADC offset register
0x4202806C C   FIELD 00w24 OFFSET (rw): Data offset y for the channel programmed into OFFSETy_CH[4:0] bits These bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion). When OFFSETy[21:0] bitfield is reset, the offset compensation is disabled. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction. For example, if OFFSET1_CH[4:0] = 4 and OFFSET2_CH[4:0] = 4, this is OFFSET1[25:0] that is subtracted when converting channel 4.
0x4202806C C   FIELD 24w01 POSOFF (rw): offset sign This bit is set and cleared by software to enable the positive offset. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202806C C   FIELD 25w01 USAT (rw): Unsigned saturation enable This bit is written by software to enable or disable the unsigned saturation feature. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202806C C   FIELD 26w01 SSAT (rw): Signed saturation enable This bit is written by software to enable or disable the Signed saturation feature. (see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details). Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x4202806C C   FIELD 27w05 OFFSET_CH (rw): Channel selection for the data offset y These bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.
0x42028070 B  REGISTER ADC_GCOMP: ADC gain compensation register
0x42028070 C   FIELD 00w14 GCOMPCOEFF (rw): Gain compensation coefficient These bits are set and cleared by software to program the gain compensation coefficient. ... ... The coefficient is divided by 4096 to get the gain factor ranging from 0 to 3.999756. Note: This gain compensation is only applied when GCOMP bit of ADCx_CFGR2 register is 1.
0x42028070 C   FIELD 31w01 GCOMP (rw): Gain compensation mode This bit is set and cleared by software to enable the gain compensation mode. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x42028080 B  REGISTER ADC_JDR1: ADC injected data register
0x42028080 C   FIELD 00w32 JDATA (ro): Injected data These bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .
0x42028084 B  REGISTER ADC_JDR2: ADC injected data register
0x42028084 C   FIELD 00w32 JDATA (ro): Injected data These bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .
0x42028088 B  REGISTER ADC_JDR3: ADC injected data register
0x42028088 C   FIELD 00w32 JDATA (ro): Injected data These bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .
0x4202808C B  REGISTER ADC_JDR4: ADC injected data register
0x4202808C C   FIELD 00w32 JDATA (ro): Injected data These bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .
0x420280A0 B  REGISTER ADC_AWD2CR: ADC analog watchdog 2 configuration register
0x420280A0 C   FIELD 00w20 AWD2CH (rw): Analog watchdog 2 channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by the analog watchdog 2. AWD2CH[i] = 0: ADC analog input channel-i is not monitored by AWD2 AWD2CH[i] = 1: ADC analog input channel-i is monitored by AWD2 When AWD2CH[19:0] = 000..0, the analog Watchdog 2 is disabled Note: The channels selected by AWD2CH must be also selected into the SQRi or JSQRi registers. Software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x420280A4 B  REGISTER ADC_AWD3CR: ADC analog watchdog 3 configuration register
0x420280A4 C   FIELD 00w20 AWD3CH (rw): Analog watchdog 3 channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by the analog watchdog 3. AWD3CH[i] = 0: ADC analog input channel-i is not monitored by AWD3 AWD3CH[i] = 1: ADC analog input channel-i is monitored by AWD3 When AWD3CH[19:0] = 000..0, the analog Watchdog 3 is disabled Note: The channels selected by AWD3CH must be also selected into the SQRi or JSQRi registers. The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x420280A8 B  REGISTER ADC_LTR1: ADC watchdog threshold register 1
0x420280A8 C   FIELD 00w25 LTR1 (rw): Analog watchdog 1 lower threshold These bits are written by software to define the lower threshold for the analog watchdog 1. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x420280AC B  REGISTER ADC_HTR1: ADC watchdog threshold register 1
0x420280AC C   FIELD 00w25 HTR1 (rw): Analog watchdog 1 higher threshold These bits are written by software to define the higher threshold for the analog watchdog 1. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x420280AC C   FIELD 29w03 AWDFILT1 (rw): Analog watchdog filtering parameter This bit is set and cleared by software. ... Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x420280B0 B  REGISTER ADC_LTR2: ADC watchdog lower threshold register 2
0x420280B0 C   FIELD 00w25 LTR2 (rw): Analog watchdog 2 lower threshold These bits are written by software to define the lower threshold for the analog watchdog 2. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x420280B4 B  REGISTER ADC_HTR2: ADC watchdog higher threshold register 2
0x420280B4 C   FIELD 00w25 HTR2 (rw): Analog watchdog 2 higher threshold These bits are written by software to define the higher threshold for the analog watchdog 2. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x420280B8 B  REGISTER ADC_LTR3: ADC watchdog lower threshold register 3
0x420280B8 C   FIELD 00w25 LTR3 (rw): Analog watchdog 3 lower threshold These bits are written by software to define the lower threshold for the analog watchdog 3. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x420280BC B  REGISTER ADC_HTR3: ADC watchdog higher threshold register 3
0x420280BC C   FIELD 00w25 HTR3 (rw): Analog watchdog 3 higher threshold These bits are written by software to define the higher threshold for the analog watchdog 3. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x420280C0 B  REGISTER ADC_DIFSEL: ADC differential mode selection register
0x420280C0 C   FIELD 00w20 DIFSEL (rw): Differential mode for channels 19 to 0 These bits are set and cleared by software. They allow selecting if a channel is configured as single ended or differential mode. DIFSEL[i] = 0: ADC analog input channel-i is configured in single ended mode DIFSEL[i] = 1: ADC analog input channel-i is configured in differential mode Note: The software is allowed to write these bits only when the ADC is disabled (ADCAL = 0, JADSTART = 0, JADSTP = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).
0x420280C4 B  REGISTER ADC_CALFACT: ADC user control register
0x420280C4 C   FIELD 00w08 I_APB_ADDR (ro): Delayed write access address This bitfield contains the address that is being written during delayed write accesses.
0x420280C4 C   FIELD 08w08 I_APB_DATA (ro): Delayed write access data This bitfield contains the data that are being written during delayed write accesses.
0x420280C4 C   FIELD 16w01 VALIDITY (ro): Delayed write access status bit This bit indicates the communication status between the ADC digital and analog blocks.
0x420280C4 C   FIELD 24w01 LATCH_COEF (rw): Calibration factor latch enable bit This bit latches the calibration factor in the CALFACT[31:0] bits.
0x420280C4 C   FIELD 25w01 CAPTURE_COEF (rw): Calibration factor capture enable bit This bit enables the internal calibration factor capture.
0x420280C8 B  REGISTER ADC_CALFACT2: ADC calibration factor register
0x420280C8 C   FIELD 00w32 CALFACT (rw): Linearity or offset calibration factor These bits can be written either by hardware or by software. They contain the 32-bit offset or linearity calibration factor. When CAPTURE_COEF is set to 1, the calibration factor of the analog block is read back and stored in CALFACT[31:0], indexed by CALINDEX[3:0] bits. When LATCH_COEF is set to 1, the calibration factor of the analog block is updated with the value programmed in CALFACT[31:0], indexed by CALINDEX[3:0] bits. To read all calibration factors, perform nine accesses to the ADC_CALFACT2 register. To write all calibration factors, perform eight accesses to the ADC_CALFACT2 register. Note: The software is allowed to write these bits only when ADEN = 1, ADSTART = 0 and JADSTART = 0 (ADC is enabled and no calibration is ongoing and no conversion is ongoing).
0x4202C000 A PERIPHERAL DCMI
0x4202C000 B  REGISTER CR (rw): control register
0x4202C000 C   FIELD 00w01 CAPTURE: Capture enable
0x4202C000 C   FIELD 01w01 CM: Capture mode
0x4202C000 C   FIELD 02w01 CROP: Crop feature
0x4202C000 C   FIELD 03w01 JPEG: JPEG format
0x4202C000 C   FIELD 04w01 ESS: Embedded synchronization select
0x4202C000 C   FIELD 05w01 PCKPOL: Pixel clock polarity
0x4202C000 C   FIELD 06w01 HSPOL: Horizontal synchronization polarity
0x4202C000 C   FIELD 07w01 VSPOL: Vertical synchronization polarity
0x4202C000 C   FIELD 08w02 FCRC: Frame capture rate control
0x4202C000 C   FIELD 10w02 EDM: Extended data mode
0x4202C000 C   FIELD 14w01 ENABLE: DCMI enable
0x4202C000 C   FIELD 16w02 BSM: Byte Select mode
0x4202C000 C   FIELD 18w01 OEBS: Odd/Even Byte Select (Byte Select Start)
0x4202C000 C   FIELD 19w01 LSM: Line Select mode
0x4202C000 C   FIELD 20w01 OELS: Odd/Even Line Select (Line Select Start)
0x4202C004 B  REGISTER SR (ro): status register
0x4202C004 C   FIELD 00w01 HSYNC: Horizontal synchronization
0x4202C004 C   FIELD 01w01 VSYNC: Vertical synchronization
0x4202C004 C   FIELD 02w01 FNE: FIFO not empty
0x4202C008 B  REGISTER RIS (ro): raw interrupt status register
0x4202C008 C   FIELD 00w01 FRAME_RIS: Capture complete raw interrupt status
0x4202C008 C   FIELD 01w01 OVR_RIS: Overrun raw interrupt status
0x4202C008 C   FIELD 02w01 ERR_RIS: Synchronization error raw interrupt status
0x4202C008 C   FIELD 03w01 VSYNC_RIS: DCMI_VSYNC raw interrupt status
0x4202C008 C   FIELD 04w01 LINE_RIS: Line raw interrupt status
0x4202C00C B  REGISTER IER (rw): interrupt enable register
0x4202C00C C   FIELD 00w01 FRAME_IE: Capture complete interrupt enable
0x4202C00C C   FIELD 01w01 OVR_IE: Overrun interrupt enable
0x4202C00C C   FIELD 02w01 ERR_IE: Synchronization error interrupt enable
0x4202C00C C   FIELD 03w01 VSYNC_IE: DCMI_VSYNC interrupt enable
0x4202C00C C   FIELD 04w01 LINE_IE: Line interrupt enable
0x4202C010 B  REGISTER MIS (ro): masked interrupt status register
0x4202C010 C   FIELD 00w01 FRAME_MIS: Capture complete masked interrupt status
0x4202C010 C   FIELD 01w01 OVR_MIS: Overrun masked interrupt status
0x4202C010 C   FIELD 02w01 ERR_MIS: Synchronization error masked interrupt status
0x4202C010 C   FIELD 03w01 VSYNC_MIS: VSYNC masked interrupt status
0x4202C010 C   FIELD 04w01 LINE_MIS: Line masked interrupt status
0x4202C014 B  REGISTER ICR (wo): interrupt clear register
0x4202C014 C   FIELD 00w01 FRAME_ISC: Capture complete interrupt status clear
0x4202C014 C   FIELD 01w01 OVR_ISC: Overrun interrupt status clear
0x4202C014 C   FIELD 02w01 ERR_ISC: Synchronization error interrupt status clear
0x4202C014 C   FIELD 03w01 VSYNC_ISC: Vertical Synchronization interrupt status clear
0x4202C014 C   FIELD 04w01 LINE_ISC: line interrupt status clear
0x4202C018 B  REGISTER ESCR (rw): background offset register
0x4202C018 C   FIELD 00w08 FSC: Frame start delimiter code
0x4202C018 C   FIELD 08w08 LSC: Line start delimiter code
0x4202C018 C   FIELD 16w08 LEC: Line end delimiter code
0x4202C018 C   FIELD 24w08 FEC: Frame end delimiter code
0x4202C01C B  REGISTER ESUR (rw): embedded synchronization unmask register
0x4202C01C C   FIELD 00w08 FSU: Frame start delimiter unmask
0x4202C01C C   FIELD 08w08 LSU: Line start delimiter unmask
0x4202C01C C   FIELD 16w08 LEU: Line end delimiter unmask
0x4202C01C C   FIELD 24w08 FEU: Frame end delimiter unmask
0x4202C020 B  REGISTER CWSTRT (rw): crop window start
0x4202C020 C   FIELD 00w14 HOFFCNT: Horizontal offset count
0x4202C020 C   FIELD 16w13 VST: Vertical start line count
0x4202C024 B  REGISTER CWSIZE (rw): crop window size
0x4202C024 C   FIELD 00w14 CAPCNT: Capture count
0x4202C024 C   FIELD 16w14 VLINE: Vertical line count
0x4202C028 B  REGISTER DR (ro): data register
0x4202C028 C   FIELD 00w08 BYTE0: Data byte 0
0x4202C028 C   FIELD 08w08 BYTE1: Data byte 1
0x4202C028 C   FIELD 16w08 BYTE2: Data byte 2
0x4202C028 C   FIELD 24w08 BYTE3: Data byte 3
0x4202C400 A PERIPHERAL PSSI
0x4202C400 B  REGISTER CR (rw): PSSI control register
0x4202C400 C   FIELD 05w01 CKPOL: Parallel data clock polarity This bit configures the capture edge of the parallel clock or the edge used for driving outputs, depending on OUTEN.
0x4202C400 C   FIELD 06w01 DEPOL: Data enable (PSSI_DE) polarity This bit indicates the level on the PSSI_DE pin when the data are not valid on the parallel interface.
0x4202C400 C   FIELD 08w01 RDYPOL: Ready (PSSI_RDY) polarity This bit indicates the level on the PSSI_RDY pin when the data are not valid on the parallel interface.
0x4202C400 C   FIELD 10w02 EDM: Extended data mode
0x4202C400 C   FIELD 14w01 ENABLE: PSSI enable The contents of the FIFO are flushed when ENABLE is cleared to 0. Note: When ENABLE=1, the content of PSSI_CR must not be changed, except for the ENABLE bit itself. All configuration bits can change as soon as ENABLE changes from 0 to 1. The DMA controller and all PSSI configuration registers must be programmed correctly before setting the ENABLE bit to 1. The ENABLE bit and the DCMI ENABLE bit (bit 15 of DCMI_CR) must not be set to 1 at the same time.
0x4202C400 C   FIELD 18w03 DERDYCFG: Data enable and ready configuration When the PSSI_RDY function is mapped to the PSSI_DE pin (settings 101 or 111), it is still the RDYPOL bit which determines its polarity. Similarly, when the PSSI_DE function is mapped to the PSSI_RDY pin (settings 110 or 111), it is still the DEPOL bit which determines its polarity.
0x4202C400 C   FIELD 30w01 DMAEN: DMA enable bit
0x4202C400 C   FIELD 31w01 OUTEN: Data direction selection bit
0x4202C404 B  REGISTER SR (ro): PSSI status register
0x4202C404 C   FIELD 02w01 RTT4B: RTT4B
0x4202C404 C   FIELD 03w01 RTT1B: RTT1B
0x4202C408 B  REGISTER RIS (ro): PSSI raw interrupt status register
0x4202C408 C   FIELD 01w01 OVR_RIS: OVR_RIS
0x4202C40C B  REGISTER IER (rw): PSSI interrupt enable register
0x4202C40C C   FIELD 01w01 OVR_IE: OVR_IE
0x4202C410 B  REGISTER MIS (ro): PSSI masked interrupt status register
0x4202C410 C   FIELD 01w01 OVR_MIS: OVR_MIS
0x4202C414 B  REGISTER ICR (wo): PSSI interrupt clear register
0x4202C414 C   FIELD 01w01 OVR_ISC: OVR_ISC
0x4202C428 B  REGISTER DR (rw): PSSI data register
0x4202C428 C   FIELD 00w08 BYTE0: Data byte 0
0x4202C428 C   FIELD 08w08 BYTE1: Data byte 1
0x4202C428 C   FIELD 16w08 BYTE2: Data byte 2
0x4202C428 C   FIELD 24w08 BYTE3: Data byte 3
0x42038000 A PERIPHERAL OTG_FS
0x42038000 B  REGISTER GOTGCTL: The GOTGCTL register controls the behavior and reflects the status of the OTG function of the core.
0x42038000 C   FIELD 00w01 SRQSCS (ro): SRQSCS
0x42038000 C   FIELD 01w01 SRQ (rw): SRQ
0x42038000 C   FIELD 02w01 VBVALOEN (rw): VBVALOEN
0x42038000 C   FIELD 03w01 VBVALOVAL (rw): VBVALOVAL
0x42038000 C   FIELD 04w01 AVALOEN (rw): AVALOEN
0x42038000 C   FIELD 05w01 AVALOVAL (rw): AVALOVAL
0x42038000 C   FIELD 06w01 BVALOEN (rw): BVALOEN
0x42038000 C   FIELD 07w01 BVALOVAL (rw): BVALOVAL
0x42038000 C   FIELD 08w01 HNGSCS (ro): HNGSCS
0x42038000 C   FIELD 09w01 HNPRQ (rw): HNPRQ
0x42038000 C   FIELD 10w01 HSHNPEN (rw): HSHNPEN
0x42038000 C   FIELD 11w01 DHNPEN (rw): DHNPEN
0x42038000 C   FIELD 12w01 EHEN (rw): EHEN
0x42038000 C   FIELD 16w01 CIDSTS (ro): CIDSTS
0x42038000 C   FIELD 17w01 DBCT (ro): DBCT
0x42038000 C   FIELD 18w01 ASVLD (ro): ASVLD
0x42038000 C   FIELD 19w01 BSVLD (ro): BSVLD
0x42038000 C   FIELD 20w01 OTGVER (rw): OTGVER
0x42038000 C   FIELD 21w01 CURMOD (ro): CURMOD
0x42038004 B  REGISTER GOTGINT (rw): The application reads this register whenever there is an OTG interrupt and clears the bits in this register to clear the OTG interrupt.
0x42038004 C   FIELD 02w01 SEDET: SEDET
0x42038004 C   FIELD 08w01 SRSSCHG: SRSSCHG
0x42038004 C   FIELD 09w01 HNSSCHG: HNSSCHG
0x42038004 C   FIELD 17w01 HNGDET: HNGDET
0x42038004 C   FIELD 18w01 ADTOCHG: ADTOCHG
0x42038004 C   FIELD 19w01 DBCDNE: DBCDNE
0x42038008 B  REGISTER GAHBCFG (rw): This register can be used to configure the core after power-on or a change in mode. This register mainly contains AHB system-related configuration parameters. Do not change this register after the initial programming. The application must program this register before starting any transactions on either the AHB or the USB.
0x42038008 C   FIELD 00w01 GINTMSK: GINTMSK
0x42038008 C   FIELD 07w01 TXFELVL: TXFELVL
0x42038008 C   FIELD 08w01 PTXFELVL: PTXFELVL
0x4203800C B  REGISTER GUSBCFG: This register can be used to configure the core after power-on or a changing to host mode or device mode. It contains USB and USB-PHY related configuration parameters. The application must program this register before starting any transactions on either the AHB or the USB. Do not make changes to this register after the initial programming.
0x4203800C C   FIELD 00w03 TOCAL (rw): TOCAL
0x4203800C C   FIELD 06w01 PHYSEL (ro): PHYSEL
0x4203800C C   FIELD 08w01 SRPCAP (rw): SRPCAP
0x4203800C C   FIELD 09w01 HNPCAP (rw): HNPCAP
0x4203800C C   FIELD 10w04 TRDT (rw): TRDT
0x4203800C C   FIELD 29w01 FHMOD (rw): FHMOD
0x4203800C C   FIELD 30w01 FDMOD (rw): FDMOD
0x42038010 B  REGISTER GRSTCTL: The application uses this register to reset various hardware features inside the core.
0x42038010 C   FIELD 00w01 CSRST (ro): CSRST
0x42038010 C   FIELD 01w01 PSRST (rw): PSRST
0x42038010 C   FIELD 02w01 FSRST (rw): FSRST
0x42038010 C   FIELD 04w01 RXFFLSH (rw): RXFFLSH
0x42038010 C   FIELD 05w01 TXFFLSH (rw): TXFFLSH
0x42038010 C   FIELD 06w05 TXFNUM (rw): TXFNUM
0x42038010 C   FIELD 31w01 AHBIDL (ro): AHBIDL
0x42038014 B  REGISTER GINTSTS: This register interrupts the application for system-level events in the current mode (device mode or host mode). Some of the bits in this register are valid only in host mode, while others are valid in device mode only. This register also indicates the current mode. To clear the interrupt status bits of the rc_w1 type, the application must write 1 into the bit. The FIFO status interrupts are read-only; once software reads from or writes to the FIFO while servicing these interrupts, FIFO interrupt conditions are cleared automatically. The application must clear the GINTSTS register at initialization before unmasking the interrupt bit to avoid any interrupts generated prior to initialization.
0x42038014 C   FIELD 00w01 CMOD (ro): CMOD
0x42038014 C   FIELD 01w01 MMIS (rw): MMIS
0x42038014 C   FIELD 02w01 OTGINT (ro): OTGINT
0x42038014 C   FIELD 03w01 SOF (rw): SOF
0x42038014 C   FIELD 04w01 RXFLVL (ro): RXFLVL
0x42038014 C   FIELD 05w01 NPTXFE (ro): NPTXFE
0x42038014 C   FIELD 06w01 GINAKEFF (ro): GINAKEFF
0x42038014 C   FIELD 07w01 GONAKEFF (ro): GONAKEFF
0x42038014 C   FIELD 10w01 ESUSP (rw): ESUSP
0x42038014 C   FIELD 11w01 USBSUSP (rw): USBSUSP
0x42038014 C   FIELD 12w01 USBRST (rw): USBRST
0x42038014 C   FIELD 13w01 ENUMDNE (rw): ENUMDNE
0x42038014 C   FIELD 14w01 ISOODRP (rw): ISOODRP
0x42038014 C   FIELD 15w01 EOPF (rw): EOPF
0x42038014 C   FIELD 18w01 IEPINT (ro): IEPINT
0x42038014 C   FIELD 19w01 OEPINT (ro): OEPINT
0x42038014 C   FIELD 20w01 IISOIXFR (rw): IISOIXFR
0x42038014 C   FIELD 21w01 IPXFR (rw): IPXFR
0x42038014 C   FIELD 23w01 RSTDET (rw): RSTDET
0x42038014 C   FIELD 24w01 HPRTINT (ro): HPRTINT
0x42038014 C   FIELD 25w01 HCINT (ro): HCINT
0x42038014 C   FIELD 26w01 PTXFE (ro): PTXFE
0x42038014 C   FIELD 27w01 LPMINT (rw): LPMINT
0x42038014 C   FIELD 28w01 CIDSCHG (rw): CIDSCHG
0x42038014 C   FIELD 29w01 DISCINT (rw): DISCINT
0x42038014 C   FIELD 30w01 SRQINT (rw): SRQINT
0x42038014 C   FIELD 31w01 WKUPINT (rw): WKUPINT
0x42038018 B  REGISTER GINTMSK: This register works with the core interrupt register to interrupt the application. When an interrupt bit is masked, the interrupt associated with that bit is not generated. However, the core interrupt (GINTSTS) register bit corresponding to that interrupt is still set.
0x42038018 C   FIELD 01w01 MMISM (rw): MMISM
0x42038018 C   FIELD 02w01 OTGINT (rw): OTGINT
0x42038018 C   FIELD 03w01 SOFM (rw): SOFM
0x42038018 C   FIELD 04w01 RXFLVLM (rw): RXFLVLM
0x42038018 C   FIELD 05w01 NPTXFEM (rw): NPTXFEM
0x42038018 C   FIELD 06w01 GINAKEFFM (rw): GINAKEFFM
0x42038018 C   FIELD 07w01 GONAKEFFM (rw): GONAKEFFM
0x42038018 C   FIELD 10w01 ESUSPM (rw): ESUSPM
0x42038018 C   FIELD 11w01 USBSUSPM (rw): USBSUSPM
0x42038018 C   FIELD 12w01 USBRST (rw): USBRST
0x42038018 C   FIELD 13w01 ENUMDNEM (rw): ENUMDNEM
0x42038018 C   FIELD 14w01 ISOODRPM (rw): ISOODRPM
0x42038018 C   FIELD 15w01 EOPFM (rw): EOPFM
0x42038018 C   FIELD 18w01 IEPINT (rw): IEPINT
0x42038018 C   FIELD 19w01 OEPINT (rw): OEPINT
0x42038018 C   FIELD 20w01 IISOIXFRM (rw): IISOIXFRM
0x42038018 C   FIELD 21w01 IPXFRM (rw): IPXFRM
0x42038018 C   FIELD 23w01 RSTDETM (rw): RSTDETM
0x42038018 C   FIELD 24w01 PRTIM (rw): PRTIM
0x42038018 C   FIELD 25w01 HCIM (rw): HCIM
0x42038018 C   FIELD 26w01 PTXFEM (rw): PTXFEM
0x42038018 C   FIELD 27w01 LPMINTM (rw): LPMINTM
0x42038018 C   FIELD 28w01 CIDSCHGM (rw): CIDSCHGM
0x42038018 C   FIELD 29w01 DISCINT (rw): DISCINT
0x42038018 C   FIELD 30w01 SRQIM (rw): SRQIM
0x42038018 C   FIELD 31w01 WUIM (rw): WUIM
0x4203801C B  REGISTER GRXSTSR_DEVICE (ro): This description is for register GRXSTSR in Device mode. A read to the receive status debug read register returns the contents of the top of the receive FIFO. The core ignores the receive status read when the receive FIFO is empty and returns a value of 0x00000000.
0x4203801C B  REGISTER GRXSTSR_HOST (ro): This description is for register GRXSTSR in Host mode
0x4203801C C   FIELD 00w04 CHNUM: CHNUM
0x4203801C C   FIELD 00w04 EPNUM: EPNUM
0x4203801C C   FIELD 04w11 BCNT: BCNT
0x4203801C C   FIELD 04w11 BCNT: BCNT
0x4203801C C   FIELD 15w02 DPID: DPID
0x4203801C C   FIELD 15w02 DPID: DPID
0x4203801C C   FIELD 17w04 PKTSTS: PKTSTS
0x4203801C C   FIELD 17w04 PKTSTS: PKTSTS
0x4203801C C   FIELD 21w04 FRMNUM: FRMNUM
0x4203801C C   FIELD 27w01 STSPHST: STSPHST
0x42038020 B  REGISTER GRXSTSP_DEVICE (ro): This description is for register GRXSTSP in Device mode. Similarly to GRXSTSR (receive status debug read register) where a read returns the contents of the top of the receive FIFO, a read to GRXSTSP (receive status read and pop register) additionally pops the top data entry out of the Rx FIFO. The core ignores the receive status pop/read when the receive FIFO is empty and returns a value of 0x00000000. The application must only pop the receive status FIFO when the receive FIFO non-empty bit of the core interrupt register (RXFLVL bit in GINTSTS) is asserted.
0x42038020 B  REGISTER GRXSTSP_HOST (ro): This description is for register GRXSTSP in HOST mode
0x42038020 C   FIELD 00w04 CHNUM: CHNUM
0x42038020 C   FIELD 00w04 EPNUM: EPNUM
0x42038020 C   FIELD 04w11 BCNT: BCNT
0x42038020 C   FIELD 04w11 BCNT: BCNT
0x42038020 C   FIELD 15w02 DPID: DPID
0x42038020 C   FIELD 15w02 DPID: DPID
0x42038020 C   FIELD 17w04 PKTSTS: PKTSTS
0x42038020 C   FIELD 17w04 PKTSTS: PKTSTS
0x42038020 C   FIELD 21w04 FRMNUM: FRMNUM
0x42038020 C   FIELD 27w01 STSPHST: STSPHST
0x42038024 B  REGISTER GRXFSIZ (rw): The application can program the RAM size that must be allocated to the Rx FIFO.
0x42038024 C   FIELD 00w16 RXFD: RXFD
0x42038028 B  REGISTER HNPTXFSIZ (rw): Host mode
0x42038028 C   FIELD 00w16 NPTXFSA: NPTXFSA
0x42038028 C   FIELD 16w16 NPTXFD: NPTXFD
0x4203802C B  REGISTER HNPTXSTS (ro): In device mode, this register is not valid. This read-only register contains the free space information for the non-periodic Tx FIFO and the non-periodic transmit request queue.
0x4203802C C   FIELD 00w16 NPTXFSAV: NPTXFSAV
0x4203802C C   FIELD 16w08 NPTQXSAV: NPTQXSAV
0x4203802C C   FIELD 24w07 NPTXQTOP: NPTXQTOP
0x42038038 B  REGISTER GCCFG: OTG general core configuration register
0x42038038 C   FIELD 00w01 DCDET (ro): DCDET
0x42038038 C   FIELD 01w01 PDET (ro): PDET
0x42038038 C   FIELD 02w01 SDET (ro): SDET
0x42038038 C   FIELD 03w01 PS2DET (ro): PS2DET
0x42038038 C   FIELD 16w01 PWRDWN (rw): PWRDWN
0x42038038 C   FIELD 17w01 BCDEN (rw): BCDEN
0x42038038 C   FIELD 18w01 DCDEN (rw): DCDEN
0x42038038 C   FIELD 19w01 PDEN (rw): PDEN
0x42038038 C   FIELD 20w01 SDEN (rw): SDEN
0x42038038 C   FIELD 21w01 VBDEN (rw): VBDEN
0x4203803C B  REGISTER CID (rw): This is a register containing the Product ID as reset value.
0x4203803C C   FIELD 00w32 PRODUCT_ID: PRODUCT_ID
0x42038054 B  REGISTER GLPMCFG: OTG core LPM configuration register
0x42038054 C   FIELD 00w01 LPMEN (rw): LPMEN
0x42038054 C   FIELD 01w01 LPMACK (rw): LPMACK
0x42038054 C   FIELD 02w04 BESL (rw): BESL
0x42038054 C   FIELD 06w01 REMWAKE (rw): REMWAKE
0x42038054 C   FIELD 07w01 L1SSEN (rw): L1SSEN
0x42038054 C   FIELD 08w04 BESLTHRS (rw): BESLTHRS
0x42038054 C   FIELD 12w01 L1DSEN (rw): L1DSEN
0x42038054 C   FIELD 13w02 LPMRSP (ro): LPMRSP
0x42038054 C   FIELD 15w01 SLPSTS (ro): SLPSTS
0x42038054 C   FIELD 16w01 L1RSMOK (ro): L1RSMOK
0x42038054 C   FIELD 17w04 LPMCHIDX (rw): LPMCHIDX
0x42038054 C   FIELD 21w03 LPMRCNT (rw): LPMRCNT
0x42038054 C   FIELD 24w01 SNDLPM (rw): SNDLPM
0x42038054 C   FIELD 25w03 LPMRCNTSTS (ro): LPMRCNTSTS
0x42038054 C   FIELD 28w01 ENBESL (rw): ENBESL
0x42038100 B  REGISTER HPTXFSIZ (rw): OTG host periodic transmit FIFO size register
0x42038100 C   FIELD 00w16 PTXSA: PTXSA
0x42038100 C   FIELD 16w16 PTXFSIZ: PTXFSIZ
0x42038104 B  REGISTER DIEPTXF1 (rw): OTG device IN endpoint transmit FIFO 1 size register
0x42038104 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x42038104 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x42038108 B  REGISTER DIEPTXF2 (rw): OTG device IN endpoint transmit FIFO 2 size register
0x42038108 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x42038108 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x4203810C B  REGISTER DIEPTXF3 (rw): OTG device IN endpoint transmit FIFO 3 size register
0x4203810C C   FIELD 00w16 INEPTXSA: INEPTXSA
0x4203810C C   FIELD 16w16 INEPTXFD: INEPTXFD
0x42038110 B  REGISTER DIEPTXF4 (rw): OTG device IN endpoint transmit FIFO 4 size register
0x42038110 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x42038110 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x42038114 B  REGISTER DIEPTXF5 (rw): OTG device IN endpoint transmit FIFO 5 size register
0x42038114 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x42038114 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x42038400 B  REGISTER HCFG: This register configures the core after power-on. Do not make changes to this register after initializing the host.
0x42038400 C   FIELD 00w02 FSLSPCS (rw): FSLSPCS
0x42038400 C   FIELD 02w01 FSLSS (ro): FSLSS
0x42038404 B  REGISTER HFIR (rw): This register stores the frame interval information for the current speed to which the OTG controller has enumerated.
0x42038404 C   FIELD 00w16 FRIVL: FRIVL
0x42038404 C   FIELD 16w01 RLDCTRL: RLDCTRL
0x42038408 B  REGISTER HFNUM (ro): This register indicates the current frame number. It also indicates the time remaining (in terms of the number of PHY clocks) in the current frame.
0x42038408 C   FIELD 00w16 FRNUM: FRNUM
0x42038408 C   FIELD 16w16 FTREM: FTREM
0x42038410 B  REGISTER HPTXSTS (ro): This read-only register contains the free space information for the periodic Tx FIFO and the periodic transmit request queue.
0x42038410 C   FIELD 00w16 PTXFSAVL: PTXFSAVL
0x42038410 C   FIELD 16w08 PTXQSAV: PTXQSAV
0x42038410 C   FIELD 24w08 PTXQTOP: PTXQTOP
0x42038414 B  REGISTER HAINT (ro): When a significant event occurs on a channel, the host all channels interrupt register interrupts the application using the host channels interrupt bit of the core interrupt register (HCINT bit in GINTSTS). This is shown in Figure724. There is one interrupt bit per channel, up to a maximum of 16 bits. Bits in this register are set and cleared when the application sets and clears bits in the corresponding host channel-x interrupt register.
0x42038414 C   FIELD 00w16 HAINT: HAINT
0x42038418 B  REGISTER HAINTMSK (rw): The host all channel interrupt mask register works with the host all channel interrupt register to interrupt the application when an event occurs on a channel. There is one interrupt mask bit per channel, up to a maximum of 16 bits.
0x42038418 C   FIELD 00w16 HAINTM: HAINTM
0x42038440 B  REGISTER HPRT: This register is available only in host mode. Currently, the OTG host supports only one port. A single register holds USB port-related information such as USB reset, enable, suspend, resume, connect status, and test mode for each port. It is shown in Figure724. The rc_w1 bits in this register can trigger an interrupt to the application through the host port interrupt bit of the core interrupt register (HPRTINT bit in GINTSTS). On a port interrupt, the application must read this register and clear the bit that caused the interrupt. For the rc_w1 bits, the application must write a 1 to the bit to clear the interrupt.
0x42038440 C   FIELD 00w01 PCSTS (ro): PCSTS
0x42038440 C   FIELD 01w01 PCDET (rw): PCDET
0x42038440 C   FIELD 02w01 PENA (rw): PENA
0x42038440 C   FIELD 03w01 PENCHNG (rw): PENCHNG
0x42038440 C   FIELD 04w01 POCA (ro): POCA
0x42038440 C   FIELD 05w01 POCCHNG (rw): POCCHNG
0x42038440 C   FIELD 06w01 PRES (rw): PRES
0x42038440 C   FIELD 07w01 PSUSP (rw): PSUSP
0x42038440 C   FIELD 08w01 PRST (rw): PRST
0x42038440 C   FIELD 10w02 PLSTS (ro): PLSTS
0x42038440 C   FIELD 12w01 PPWR (rw): PPWR
0x42038440 C   FIELD 13w04 PTCTL (rw): PTCTL
0x42038440 C   FIELD 17w02 PSPD (ro): PSPD
0x42038500 B  REGISTER HCCHAR0 (rw): OTG host channel 0 characteristics register
0x42038500 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038500 C   FIELD 11w04 EPNUM: EPNUM
0x42038500 C   FIELD 15w01 EPDIR: EPDIR
0x42038500 C   FIELD 17w01 LSDEV: LSDEV
0x42038500 C   FIELD 18w02 EPTYP: EPTYP
0x42038500 C   FIELD 20w02 MCNT: MCNT
0x42038500 C   FIELD 22w07 DAD: DAD
0x42038500 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038500 C   FIELD 30w01 CHDIS: CHDIS
0x42038500 C   FIELD 31w01 CHENA: CHENA
0x42038508 B  REGISTER HCINT0 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038508 C   FIELD 00w01 XFRC: XFRC
0x42038508 C   FIELD 01w01 CHH: CHH
0x42038508 C   FIELD 03w01 STALL: STALL
0x42038508 C   FIELD 04w01 NAK: NAK
0x42038508 C   FIELD 05w01 ACK: ACK
0x42038508 C   FIELD 07w01 TXERR: TXERR
0x42038508 C   FIELD 08w01 BBERR: BBERR
0x42038508 C   FIELD 09w01 FRMOR: FRMOR
0x42038508 C   FIELD 10w01 DTERR: DTERR
0x4203850C B  REGISTER HCINTMSK0 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203850C C   FIELD 00w01 XFRCM: XFRCM
0x4203850C C   FIELD 01w01 CHHM: CHHM
0x4203850C C   FIELD 03w01 STALLM: STALLM
0x4203850C C   FIELD 04w01 NAKM: NAKM
0x4203850C C   FIELD 05w01 ACKM: ACKM
0x4203850C C   FIELD 07w01 TXERRM: TXERRM
0x4203850C C   FIELD 08w01 BBERRM: BBERRM
0x4203850C C   FIELD 09w01 FRMORM: FRMORM
0x4203850C C   FIELD 10w01 DTERRM: DTERRM
0x42038510 B  REGISTER HCTSIZ0 (rw): OTG host channel 0 transfer size register
0x42038510 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038510 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038510 C   FIELD 29w02 DPID: DPID
0x42038510 C   FIELD 31w01 DOPNG: DOPNG
0x42038520 B  REGISTER HCCHAR1 (rw): OTG host channel 1 characteristics register
0x42038520 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038520 C   FIELD 11w04 EPNUM: EPNUM
0x42038520 C   FIELD 15w01 EPDIR: EPDIR
0x42038520 C   FIELD 17w01 LSDEV: LSDEV
0x42038520 C   FIELD 18w02 EPTYP: EPTYP
0x42038520 C   FIELD 20w02 MCNT: MCNT
0x42038520 C   FIELD 22w07 DAD: DAD
0x42038520 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038520 C   FIELD 30w01 CHDIS: CHDIS
0x42038520 C   FIELD 31w01 CHENA: CHENA
0x42038528 B  REGISTER HCINT1_DEVICE (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038528 C   FIELD 00w01 XFRC: XFRC
0x42038528 C   FIELD 01w01 CHH: CHH
0x42038528 C   FIELD 03w01 STALL: STALL
0x42038528 C   FIELD 04w01 NAK: NAK
0x42038528 C   FIELD 05w01 ACK: ACK
0x42038528 C   FIELD 07w01 TXERR: TXERR
0x42038528 C   FIELD 08w01 BBERR: BBERR
0x42038528 C   FIELD 09w01 FRMOR: FRMOR
0x42038528 C   FIELD 10w01 DTERR: DTERR
0x4203852C B  REGISTER HCINTMSK1 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203852C C   FIELD 00w01 XFRCM: XFRCM
0x4203852C C   FIELD 01w01 CHHM: CHHM
0x4203852C C   FIELD 03w01 STALLM: STALLM
0x4203852C C   FIELD 04w01 NAKM: NAKM
0x4203852C C   FIELD 05w01 ACKM: ACKM
0x4203852C C   FIELD 07w01 TXERRM: TXERRM
0x4203852C C   FIELD 08w01 BBERRM: BBERRM
0x4203852C C   FIELD 09w01 FRMORM: FRMORM
0x4203852C C   FIELD 10w01 DTERRM: DTERRM
0x42038530 B  REGISTER HCTSIZ1 (rw): OTG host channel 1 transfer size register
0x42038530 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038530 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038530 C   FIELD 29w02 DPID: DPID
0x42038530 C   FIELD 31w01 DOPNG: DOPNG
0x42038540 B  REGISTER HCCHAR2 (rw): OTG host channel 2 characteristics register
0x42038540 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038540 C   FIELD 11w04 EPNUM: EPNUM
0x42038540 C   FIELD 15w01 EPDIR: EPDIR
0x42038540 C   FIELD 17w01 LSDEV: LSDEV
0x42038540 C   FIELD 18w02 EPTYP: EPTYP
0x42038540 C   FIELD 20w02 MCNT: MCNT
0x42038540 C   FIELD 22w07 DAD: DAD
0x42038540 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038540 C   FIELD 30w01 CHDIS: CHDIS
0x42038540 C   FIELD 31w01 CHENA: CHENA
0x42038548 B  REGISTER HCINT2 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038548 C   FIELD 00w01 XFRC: XFRC
0x42038548 C   FIELD 01w01 CHH: CHH
0x42038548 C   FIELD 03w01 STALL: STALL
0x42038548 C   FIELD 04w01 NAK: NAK
0x42038548 C   FIELD 05w01 ACK: ACK
0x42038548 C   FIELD 07w01 TXERR: TXERR
0x42038548 C   FIELD 08w01 BBERR: BBERR
0x42038548 C   FIELD 09w01 FRMOR: FRMOR
0x42038548 C   FIELD 10w01 DTERR: DTERR
0x4203854C B  REGISTER HCINTMSK2 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203854C C   FIELD 00w01 XFRCM: XFRCM
0x4203854C C   FIELD 01w01 CHHM: CHHM
0x4203854C C   FIELD 03w01 STALLM: STALLM
0x4203854C C   FIELD 04w01 NAKM: NAKM
0x4203854C C   FIELD 05w01 ACKM: ACKM
0x4203854C C   FIELD 07w01 TXERRM: TXERRM
0x4203854C C   FIELD 08w01 BBERRM: BBERRM
0x4203854C C   FIELD 09w01 FRMORM: FRMORM
0x4203854C C   FIELD 10w01 DTERRM: DTERRM
0x42038550 B  REGISTER HCTSIZ2 (rw): OTG host channel 2 transfer size register
0x42038550 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038550 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038550 C   FIELD 29w02 DPID: DPID
0x42038550 C   FIELD 31w01 DOPNG: DOPNG
0x42038560 B  REGISTER HCCHAR3 (rw): OTG host channel 3 characteristics register
0x42038560 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038560 C   FIELD 11w04 EPNUM: EPNUM
0x42038560 C   FIELD 15w01 EPDIR: EPDIR
0x42038560 C   FIELD 17w01 LSDEV: LSDEV
0x42038560 C   FIELD 18w02 EPTYP: EPTYP
0x42038560 C   FIELD 20w02 MCNT: MCNT
0x42038560 C   FIELD 22w07 DAD: DAD
0x42038560 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038560 C   FIELD 30w01 CHDIS: CHDIS
0x42038560 C   FIELD 31w01 CHENA: CHENA
0x42038568 B  REGISTER HCINT3 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038568 C   FIELD 00w01 XFRC: XFRC
0x42038568 C   FIELD 01w01 CHH: CHH
0x42038568 C   FIELD 03w01 STALL: STALL
0x42038568 C   FIELD 04w01 NAK: NAK
0x42038568 C   FIELD 05w01 ACK: ACK
0x42038568 C   FIELD 07w01 TXERR: TXERR
0x42038568 C   FIELD 08w01 BBERR: BBERR
0x42038568 C   FIELD 09w01 FRMOR: FRMOR
0x42038568 C   FIELD 10w01 DTERR: DTERR
0x4203856C B  REGISTER HCINTMSK3 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203856C C   FIELD 00w01 XFRCM: XFRCM
0x4203856C C   FIELD 01w01 CHHM: CHHM
0x4203856C C   FIELD 03w01 STALLM: STALLM
0x4203856C C   FIELD 04w01 NAKM: NAKM
0x4203856C C   FIELD 05w01 ACKM: ACKM
0x4203856C C   FIELD 07w01 TXERRM: TXERRM
0x4203856C C   FIELD 08w01 BBERRM: BBERRM
0x4203856C C   FIELD 09w01 FRMORM: FRMORM
0x4203856C C   FIELD 10w01 DTERRM: DTERRM
0x42038570 B  REGISTER HCTSIZ3 (rw): OTG host channel 3 transfer size register
0x42038570 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038570 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038570 C   FIELD 29w02 DPID: DPID
0x42038570 C   FIELD 31w01 DOPNG: DOPNG
0x42038580 B  REGISTER HCCHAR4 (rw): OTG host channel 4 characteristics register
0x42038580 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038580 C   FIELD 11w04 EPNUM: EPNUM
0x42038580 C   FIELD 15w01 EPDIR: EPDIR
0x42038580 C   FIELD 17w01 LSDEV: LSDEV
0x42038580 C   FIELD 18w02 EPTYP: EPTYP
0x42038580 C   FIELD 20w02 MCNT: MCNT
0x42038580 C   FIELD 22w07 DAD: DAD
0x42038580 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038580 C   FIELD 30w01 CHDIS: CHDIS
0x42038580 C   FIELD 31w01 CHENA: CHENA
0x42038588 B  REGISTER HCINT4 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038588 C   FIELD 00w01 XFRC: XFRC
0x42038588 C   FIELD 01w01 CHH: CHH
0x42038588 C   FIELD 03w01 STALL: STALL
0x42038588 C   FIELD 04w01 NAK: NAK
0x42038588 C   FIELD 05w01 ACK: ACK
0x42038588 C   FIELD 07w01 TXERR: TXERR
0x42038588 C   FIELD 08w01 BBERR: BBERR
0x42038588 C   FIELD 09w01 FRMOR: FRMOR
0x42038588 C   FIELD 10w01 DTERR: DTERR
0x4203858C B  REGISTER HCINTMSK4 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203858C C   FIELD 00w01 XFRCM: XFRCM
0x4203858C C   FIELD 01w01 CHHM: CHHM
0x4203858C C   FIELD 03w01 STALLM: STALLM
0x4203858C C   FIELD 04w01 NAKM: NAKM
0x4203858C C   FIELD 05w01 ACKM: ACKM
0x4203858C C   FIELD 07w01 TXERRM: TXERRM
0x4203858C C   FIELD 08w01 BBERRM: BBERRM
0x4203858C C   FIELD 09w01 FRMORM: FRMORM
0x4203858C C   FIELD 10w01 DTERRM: DTERRM
0x42038590 B  REGISTER HCTSIZ4 (rw): OTG host channel 4 transfer size register
0x42038590 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038590 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038590 C   FIELD 29w02 DPID: DPID
0x42038590 C   FIELD 31w01 DOPNG: DOPNG
0x420385A0 B  REGISTER HCCHAR5 (rw): OTG host channel 5 characteristics register
0x420385A0 C   FIELD 00w11 MPSIZ: MPSIZ
0x420385A0 C   FIELD 11w04 EPNUM: EPNUM
0x420385A0 C   FIELD 15w01 EPDIR: EPDIR
0x420385A0 C   FIELD 17w01 LSDEV: LSDEV
0x420385A0 C   FIELD 18w02 EPTYP: EPTYP
0x420385A0 C   FIELD 20w02 MCNT: MCNT
0x420385A0 C   FIELD 22w07 DAD: DAD
0x420385A0 C   FIELD 29w01 ODDFRM: ODDFRM
0x420385A0 C   FIELD 30w01 CHDIS: CHDIS
0x420385A0 C   FIELD 31w01 CHENA: CHENA
0x420385A8 B  REGISTER HCINT5 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x420385A8 C   FIELD 00w01 XFRC: XFRC
0x420385A8 C   FIELD 01w01 CHH: CHH
0x420385A8 C   FIELD 03w01 STALL: STALL
0x420385A8 C   FIELD 04w01 NAK: NAK
0x420385A8 C   FIELD 05w01 ACK: ACK
0x420385A8 C   FIELD 07w01 TXERR: TXERR
0x420385A8 C   FIELD 08w01 BBERR: BBERR
0x420385A8 C   FIELD 09w01 FRMOR: FRMOR
0x420385A8 C   FIELD 10w01 DTERR: DTERR
0x420385AC B  REGISTER HCINTMSK5 (rw): This register reflects the mask for each channel status described in the previous section.
0x420385AC C   FIELD 00w01 XFRCM: XFRCM
0x420385AC C   FIELD 01w01 CHHM: CHHM
0x420385AC C   FIELD 03w01 STALLM: STALLM
0x420385AC C   FIELD 04w01 NAKM: NAKM
0x420385AC C   FIELD 05w01 ACKM: ACKM
0x420385AC C   FIELD 07w01 TXERRM: TXERRM
0x420385AC C   FIELD 08w01 BBERRM: BBERRM
0x420385AC C   FIELD 09w01 FRMORM: FRMORM
0x420385AC C   FIELD 10w01 DTERRM: DTERRM
0x420385B0 B  REGISTER HCTSIZ5 (rw): OTG host channel 5 transfer size register
0x420385B0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x420385B0 C   FIELD 19w10 PKTCNT: PKTCNT
0x420385B0 C   FIELD 29w02 DPID: DPID
0x420385B0 C   FIELD 31w01 DOPNG: DOPNG
0x420385C0 B  REGISTER HCCHAR6 (rw): OTG host channel 6 characteristics register
0x420385C0 C   FIELD 00w11 MPSIZ: MPSIZ
0x420385C0 C   FIELD 11w04 EPNUM: EPNUM
0x420385C0 C   FIELD 15w01 EPDIR: EPDIR
0x420385C0 C   FIELD 17w01 LSDEV: LSDEV
0x420385C0 C   FIELD 18w02 EPTYP: EPTYP
0x420385C0 C   FIELD 20w02 MCNT: MCNT
0x420385C0 C   FIELD 22w07 DAD: DAD
0x420385C0 C   FIELD 29w01 ODDFRM: ODDFRM
0x420385C0 C   FIELD 30w01 CHDIS: CHDIS
0x420385C0 C   FIELD 31w01 CHENA: CHENA
0x420385C8 B  REGISTER HCINT6 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x420385C8 C   FIELD 00w01 XFRC: XFRC
0x420385C8 C   FIELD 01w01 CHH: CHH
0x420385C8 C   FIELD 03w01 STALL: STALL
0x420385C8 C   FIELD 04w01 NAK: NAK
0x420385C8 C   FIELD 05w01 ACK: ACK
0x420385C8 C   FIELD 07w01 TXERR: TXERR
0x420385C8 C   FIELD 08w01 BBERR: BBERR
0x420385C8 C   FIELD 09w01 FRMOR: FRMOR
0x420385C8 C   FIELD 10w01 DTERR: DTERR
0x420385CC B  REGISTER HCINTMSK6 (rw): This register reflects the mask for each channel status described in the previous section.
0x420385CC C   FIELD 00w01 XFRCM: XFRCM
0x420385CC C   FIELD 01w01 CHHM: CHHM
0x420385CC C   FIELD 03w01 STALLM: STALLM
0x420385CC C   FIELD 04w01 NAKM: NAKM
0x420385CC C   FIELD 05w01 ACKM: ACKM
0x420385CC C   FIELD 07w01 TXERRM: TXERRM
0x420385CC C   FIELD 08w01 BBERRM: BBERRM
0x420385CC C   FIELD 09w01 FRMORM: FRMORM
0x420385CC C   FIELD 10w01 DTERRM: DTERRM
0x420385D0 B  REGISTER HCTSIZ6 (rw): OTG host channel 6 transfer size register
0x420385D0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x420385D0 C   FIELD 19w10 PKTCNT: PKTCNT
0x420385D0 C   FIELD 29w02 DPID: DPID
0x420385D0 C   FIELD 31w01 DOPNG: DOPNG
0x420385E0 B  REGISTER HCCHAR7 (rw): OTG host channel 7 characteristics register
0x420385E0 C   FIELD 00w11 MPSIZ: MPSIZ
0x420385E0 C   FIELD 11w04 EPNUM: EPNUM
0x420385E0 C   FIELD 15w01 EPDIR: EPDIR
0x420385E0 C   FIELD 17w01 LSDEV: LSDEV
0x420385E0 C   FIELD 18w02 EPTYP: EPTYP
0x420385E0 C   FIELD 20w02 MCNT: MCNT
0x420385E0 C   FIELD 22w07 DAD: DAD
0x420385E0 C   FIELD 29w01 ODDFRM: ODDFRM
0x420385E0 C   FIELD 30w01 CHDIS: CHDIS
0x420385E0 C   FIELD 31w01 CHENA: CHENA
0x420385E8 B  REGISTER HCINT7 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x420385E8 C   FIELD 00w01 XFRC: XFRC
0x420385E8 C   FIELD 01w01 CHH: CHH
0x420385E8 C   FIELD 03w01 STALL: STALL
0x420385E8 C   FIELD 04w01 NAK: NAK
0x420385E8 C   FIELD 05w01 ACK: ACK
0x420385E8 C   FIELD 07w01 TXERR: TXERR
0x420385E8 C   FIELD 08w01 BBERR: BBERR
0x420385E8 C   FIELD 09w01 FRMOR: FRMOR
0x420385E8 C   FIELD 10w01 DTERR: DTERR
0x420385EC B  REGISTER HCINTMSK7 (rw): This register reflects the mask for each channel status described in the previous section.
0x420385EC C   FIELD 00w01 XFRCM: XFRCM
0x420385EC C   FIELD 01w01 CHHM: CHHM
0x420385EC C   FIELD 03w01 STALLM: STALLM
0x420385EC C   FIELD 04w01 NAKM: NAKM
0x420385EC C   FIELD 05w01 ACKM: ACKM
0x420385EC C   FIELD 07w01 TXERRM: TXERRM
0x420385EC C   FIELD 08w01 BBERRM: BBERRM
0x420385EC C   FIELD 09w01 FRMORM: FRMORM
0x420385EC C   FIELD 10w01 DTERRM: DTERRM
0x420385F0 B  REGISTER HCTSIZ7 (rw): OTG host channel 7 transfer size register
0x420385F0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x420385F0 C   FIELD 19w10 PKTCNT: PKTCNT
0x420385F0 C   FIELD 29w02 DPID: DPID
0x420385F0 C   FIELD 31w01 DOPNG: DOPNG
0x42038600 B  REGISTER HCCHAR8 (rw): OTG host channel 8 characteristics register
0x42038600 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038600 C   FIELD 11w04 EPNUM: EPNUM
0x42038600 C   FIELD 15w01 EPDIR: EPDIR
0x42038600 C   FIELD 17w01 LSDEV: LSDEV
0x42038600 C   FIELD 18w02 EPTYP: EPTYP
0x42038600 C   FIELD 20w02 MCNT: MCNT
0x42038600 C   FIELD 22w07 DAD: DAD
0x42038600 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038600 C   FIELD 30w01 CHDIS: CHDIS
0x42038600 C   FIELD 31w01 CHENA: CHENA
0x42038608 B  REGISTER HCINT8 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038608 C   FIELD 00w01 XFRC: XFRC
0x42038608 C   FIELD 01w01 CHH: CHH
0x42038608 C   FIELD 03w01 STALL: STALL
0x42038608 C   FIELD 04w01 NAK: NAK
0x42038608 C   FIELD 05w01 ACK: ACK
0x42038608 C   FIELD 07w01 TXERR: TXERR
0x42038608 C   FIELD 08w01 BBERR: BBERR
0x42038608 C   FIELD 09w01 FRMOR: FRMOR
0x42038608 C   FIELD 10w01 DTERR: DTERR
0x4203860C B  REGISTER HCINTMSK8 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203860C C   FIELD 00w01 XFRCM: XFRCM
0x4203860C C   FIELD 01w01 CHHM: CHHM
0x4203860C C   FIELD 03w01 STALLM: STALLM
0x4203860C C   FIELD 04w01 NAKM: NAKM
0x4203860C C   FIELD 05w01 ACKM: ACKM
0x4203860C C   FIELD 07w01 TXERRM: TXERRM
0x4203860C C   FIELD 08w01 BBERRM: BBERRM
0x4203860C C   FIELD 09w01 FRMORM: FRMORM
0x4203860C C   FIELD 10w01 DTERRM: DTERRM
0x42038610 B  REGISTER HCTSIZ8 (rw): OTG host channel 8 transfer size register
0x42038610 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038610 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038610 C   FIELD 29w02 DPID: DPID
0x42038610 C   FIELD 31w01 DOPNG: DOPNG
0x42038620 B  REGISTER HCCHAR9 (rw): OTG host channel 9 characteristics register
0x42038620 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038620 C   FIELD 11w04 EPNUM: EPNUM
0x42038620 C   FIELD 15w01 EPDIR: EPDIR
0x42038620 C   FIELD 17w01 LSDEV: LSDEV
0x42038620 C   FIELD 18w02 EPTYP: EPTYP
0x42038620 C   FIELD 20w02 MCNT: MCNT
0x42038620 C   FIELD 22w07 DAD: DAD
0x42038620 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038620 C   FIELD 30w01 CHDIS: CHDIS
0x42038620 C   FIELD 31w01 CHENA: CHENA
0x42038628 B  REGISTER HCINT9 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038628 C   FIELD 00w01 XFRC: XFRC
0x42038628 C   FIELD 01w01 CHH: CHH
0x42038628 C   FIELD 03w01 STALL: STALL
0x42038628 C   FIELD 04w01 NAK: NAK
0x42038628 C   FIELD 05w01 ACK: ACK
0x42038628 C   FIELD 07w01 TXERR: TXERR
0x42038628 C   FIELD 08w01 BBERR: BBERR
0x42038628 C   FIELD 09w01 FRMOR: FRMOR
0x42038628 C   FIELD 10w01 DTERR: DTERR
0x4203862C B  REGISTER HCINTMSK9 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203862C C   FIELD 00w01 XFRCM: XFRCM
0x4203862C C   FIELD 01w01 CHHM: CHHM
0x4203862C C   FIELD 03w01 STALLM: STALLM
0x4203862C C   FIELD 04w01 NAKM: NAKM
0x4203862C C   FIELD 05w01 ACKM: ACKM
0x4203862C C   FIELD 07w01 TXERRM: TXERRM
0x4203862C C   FIELD 08w01 BBERRM: BBERRM
0x4203862C C   FIELD 09w01 FRMORM: FRMORM
0x4203862C C   FIELD 10w01 DTERRM: DTERRM
0x42038630 B  REGISTER HCTSIZ9 (rw): OTG host channel 9 transfer size register
0x42038630 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038630 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038630 C   FIELD 29w02 DPID: DPID
0x42038630 C   FIELD 31w01 DOPNG: DOPNG
0x42038640 B  REGISTER HCCHAR10 (rw): OTG host channel 10 characteristics register
0x42038640 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038640 C   FIELD 11w04 EPNUM: EPNUM
0x42038640 C   FIELD 15w01 EPDIR: EPDIR
0x42038640 C   FIELD 17w01 LSDEV: LSDEV
0x42038640 C   FIELD 18w02 EPTYP: EPTYP
0x42038640 C   FIELD 20w02 MCNT: MCNT
0x42038640 C   FIELD 22w07 DAD: DAD
0x42038640 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038640 C   FIELD 30w01 CHDIS: CHDIS
0x42038640 C   FIELD 31w01 CHENA: CHENA
0x42038648 B  REGISTER HCINT10 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038648 C   FIELD 00w01 XFRC: XFRC
0x42038648 C   FIELD 01w01 CHH: CHH
0x42038648 C   FIELD 03w01 STALL: STALL
0x42038648 C   FIELD 04w01 NAK: NAK
0x42038648 C   FIELD 05w01 ACK: ACK
0x42038648 C   FIELD 07w01 TXERR: TXERR
0x42038648 C   FIELD 08w01 BBERR: BBERR
0x42038648 C   FIELD 09w01 FRMOR: FRMOR
0x42038648 C   FIELD 10w01 DTERR: DTERR
0x4203864C B  REGISTER HCINTMSK10 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203864C C   FIELD 00w01 XFRCM: XFRCM
0x4203864C C   FIELD 01w01 CHHM: CHHM
0x4203864C C   FIELD 03w01 STALLM: STALLM
0x4203864C C   FIELD 04w01 NAKM: NAKM
0x4203864C C   FIELD 05w01 ACKM: ACKM
0x4203864C C   FIELD 07w01 TXERRM: TXERRM
0x4203864C C   FIELD 08w01 BBERRM: BBERRM
0x4203864C C   FIELD 09w01 FRMORM: FRMORM
0x4203864C C   FIELD 10w01 DTERRM: DTERRM
0x42038650 B  REGISTER HCTSIZ10 (rw): OTG host channel 10 transfer size register
0x42038650 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038650 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038650 C   FIELD 29w02 DPID: DPID
0x42038650 C   FIELD 31w01 DOPNG: DOPNG
0x42038660 B  REGISTER HCCHAR11 (rw): OTG host channel 11 characteristics register
0x42038660 C   FIELD 00w11 MPSIZ: MPSIZ
0x42038660 C   FIELD 11w04 EPNUM: EPNUM
0x42038660 C   FIELD 15w01 EPDIR: EPDIR
0x42038660 C   FIELD 17w01 LSDEV: LSDEV
0x42038660 C   FIELD 18w02 EPTYP: EPTYP
0x42038660 C   FIELD 20w02 MCNT: MCNT
0x42038660 C   FIELD 22w07 DAD: DAD
0x42038660 C   FIELD 29w01 ODDFRM: ODDFRM
0x42038660 C   FIELD 30w01 CHDIS: CHDIS
0x42038660 C   FIELD 31w01 CHENA: CHENA
0x42038668 B  REGISTER HCINT11 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x42038668 C   FIELD 00w01 XFRC: XFRC
0x42038668 C   FIELD 01w01 CHH: CHH
0x42038668 C   FIELD 03w01 STALL: STALL
0x42038668 C   FIELD 04w01 NAK: NAK
0x42038668 C   FIELD 05w01 ACK: ACK
0x42038668 C   FIELD 07w01 TXERR: TXERR
0x42038668 C   FIELD 08w01 BBERR: BBERR
0x42038668 C   FIELD 09w01 FRMOR: FRMOR
0x42038668 C   FIELD 10w01 DTERR: DTERR
0x4203866C B  REGISTER HCINTMSK11 (rw): This register reflects the mask for each channel status described in the previous section.
0x4203866C C   FIELD 00w01 XFRCM: XFRCM
0x4203866C C   FIELD 01w01 CHHM: CHHM
0x4203866C C   FIELD 03w01 STALLM: STALLM
0x4203866C C   FIELD 04w01 NAKM: NAKM
0x4203866C C   FIELD 05w01 ACKM: ACKM
0x4203866C C   FIELD 07w01 TXERRM: TXERRM
0x4203866C C   FIELD 08w01 BBERRM: BBERRM
0x4203866C C   FIELD 09w01 FRMORM: FRMORM
0x4203866C C   FIELD 10w01 DTERRM: DTERRM
0x42038670 B  REGISTER HCTSIZ11 (rw): OTG host channel 11 transfer size register
0x42038670 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038670 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038670 C   FIELD 29w02 DPID: DPID
0x42038670 C   FIELD 31w01 DOPNG: DOPNG
0x42038800 B  REGISTER DCFG (rw): This register configures the core in device mode after power-on or after certain control commands or enumeration. Do not make changes to this register after initial programming.
0x42038800 C   FIELD 00w02 DSPD: DSPD
0x42038800 C   FIELD 02w01 NZLSOHSK: NZLSOHSK
0x42038800 C   FIELD 04w07 DAD: DAD
0x42038800 C   FIELD 11w02 PFIVL: PFIVL
0x42038800 C   FIELD 15w01 ERRATIM: ERRATIM
0x42038804 B  REGISTER DCTL: OTG device control register
0x42038804 C   FIELD 00w01 RWUSIG (rw): RWUSIG
0x42038804 C   FIELD 01w01 SDIS (rw): SDIS
0x42038804 C   FIELD 02w01 GINSTS (ro): GINSTS
0x42038804 C   FIELD 03w01 GONSTS (ro): GONSTS
0x42038804 C   FIELD 04w03 TCTL (rw): TCTL
0x42038804 C   FIELD 07w01 SGINAK (wo): SGINAK
0x42038804 C   FIELD 08w01 CGINAK (wo): CGINAK
0x42038804 C   FIELD 09w01 SGONAK (wo): SGONAK
0x42038804 C   FIELD 10w01 CGONAK (wo): CGONAK
0x42038804 C   FIELD 11w01 POPRGDNE (rw): POPRGDNE
0x42038804 C   FIELD 18w01 DSBESLRJCT (rw): DSBESLRJCT
0x42038808 B  REGISTER DSTS (ro): This register indicates the status of the core with respect to USB-related events. It must be read on interrupts from the device all interrupts (DAINT) register.
0x42038808 C   FIELD 00w01 SUSPSTS: SUSPSTS
0x42038808 C   FIELD 01w02 ENUMSPD: ENUMSPD
0x42038808 C   FIELD 03w01 EERR: EERR
0x42038808 C   FIELD 08w14 FNSOF: FNSOF
0x42038808 C   FIELD 22w02 DEVLNSTS: DEVLNSTS
0x42038810 B  REGISTER DIEPMSK (rw): This register works with each of the DIEPINTx registers for all endpoints to generate an interrupt per IN endpoint. The IN endpoint interrupt for a specific status in the DIEPINTx register can be masked by writing to the corresponding bit in this register. Status bits are masked by default.
0x42038810 C   FIELD 00w01 XFRCM: XFRCM
0x42038810 C   FIELD 01w01 EPDM: EPDM
0x42038810 C   FIELD 03w01 TOM: TOM
0x42038810 C   FIELD 04w01 ITTXFEMSK: ITTXFEMSK
0x42038810 C   FIELD 05w01 INEPNMM: INEPNMM
0x42038810 C   FIELD 06w01 INEPNEM: INEPNEM
0x42038810 C   FIELD 13w01 NAKM: NAKM
0x42038814 B  REGISTER DOEPMSK (rw): This register works with each of the DOEPINTx registers for all endpoints to generate an interrupt per OUT endpoint. The OUT endpoint interrupt for a specific status in the DOEPINTx register can be masked by writing into the corresponding bit in this register. Status bits are masked by default.
0x42038814 C   FIELD 00w01 XFRCM: XFRCM
0x42038814 C   FIELD 01w01 EPDM: EPDM
0x42038814 C   FIELD 03w01 STUPM: STUPM
0x42038814 C   FIELD 04w01 OTEPDM: OTEPDM
0x42038814 C   FIELD 05w01 STSPHSRXM: STSPHSRXM
0x42038814 C   FIELD 08w01 OUTPKTERRM: OUTPKTERRM
0x42038814 C   FIELD 12w01 BERRM: BERRM
0x42038814 C   FIELD 13w01 NAKMSK: NAKMSK
0x42038818 B  REGISTER DAINT (ro): When a significant event occurs on an endpoint, a DAINT register interrupts the application using the device OUT endpoints interrupt bit or device IN endpoints interrupt bit of the GINTSTS register (OEPINT or IEPINT in GINTSTS, respectively). There is one interrupt bit per endpoint, up to a maximum of 16 bits for OUT endpoints and 16 bits for IN endpoints. For a bidirectional endpoint, the corresponding IN and OUT interrupt bits are used. Bits in this register are set and cleared when the application sets and clears bits in the corresponding device endpoint-x interrupt register (DIEPINTx/DOEPINTx).
0x42038818 C   FIELD 00w16 IEPINT: IEPINT
0x42038818 C   FIELD 16w16 OEPINT: OEPINT
0x4203881C B  REGISTER DAINTMSK (rw): The DAINTMSK register works with the device endpoint interrupt register to interrupt the application when an event occurs on a device endpoint. However, the DAINT register bit corresponding to that interrupt is still set.
0x4203881C C   FIELD 00w16 IEPM: IEPM
0x4203881C C   FIELD 16w16 OEPM: OEPM
0x42038828 B  REGISTER DVBUSDIS (rw): This register specifies the VBUS discharge time after VBUS pulsing during SRP.
0x42038828 C   FIELD 00w16 VBUSDT: VBUSDT
0x4203882C B  REGISTER DVBUSPULSE (rw): This register specifies the VBUS pulsing time during SRP.
0x4203882C C   FIELD 00w16 DVBUSP: DVBUSP
0x42038834 B  REGISTER DIEPEMPMSK (rw): This register is used to control the IN endpoint FIFO empty interrupt generation (TXFE_DIEPINTx).
0x42038834 C   FIELD 00w16 INEPTXFEM: INEPTXFEM
0x42038900 B  REGISTER DIEPCTL0: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038900 C   FIELD 00w02 MPSIZ (rw): MPSIZ
0x42038900 C   FIELD 15w01 USBAEP (ro): USBAEP
0x42038900 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038900 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038900 C   FIELD 21w01 STALL (rw): STALL
0x42038900 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x42038900 C   FIELD 26w01 CNAK (wo): CNAK
0x42038900 C   FIELD 27w01 SNAK (wo): SNAK
0x42038900 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038900 C   FIELD 31w01 EPENA (rw): EPENA
0x42038908 B  REGISTER DIEPINT0: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038908 C   FIELD 00w01 XFRC (rw): XFRC
0x42038908 C   FIELD 01w01 EPDISD (rw): EPDISD
0x42038908 C   FIELD 03w01 TOC (rw): TOC
0x42038908 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x42038908 C   FIELD 05w01 INEPNM (rw): INEPNM
0x42038908 C   FIELD 06w01 INEPNE (ro): INEPNE
0x42038908 C   FIELD 07w01 TXFE (ro): TXFE
0x42038908 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x42038908 C   FIELD 13w01 NAK (rw): NAK
0x42038910 B  REGISTER DIEPTSIZ0 (rw): The application must modify this register before enabling endpoint 0.
0x42038910 C   FIELD 00w07 XFRSIZ: XFRSIZ
0x42038910 C   FIELD 19w02 PKTCNT: PKTCNT
0x42038918 B  REGISTER DTXFSTS0 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x42038918 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x42038920 B  REGISTER DIEPCTL1: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038920 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038920 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038920 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038920 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038920 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038920 C   FIELD 21w01 STALL (rw): STALL
0x42038920 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x42038920 C   FIELD 26w01 CNAK (wo): CNAK
0x42038920 C   FIELD 27w01 SNAK (wo): SNAK
0x42038920 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038920 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x42038920 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038920 C   FIELD 31w01 EPENA (rw): EPENA
0x42038928 B  REGISTER DIEPINT1: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038928 C   FIELD 00w01 XFRC (rw): XFRC
0x42038928 C   FIELD 01w01 EPDISD (rw): EPDISD
0x42038928 C   FIELD 03w01 TOC (rw): TOC
0x42038928 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x42038928 C   FIELD 05w01 INEPNM (rw): INEPNM
0x42038928 C   FIELD 06w01 INEPNE (ro): INEPNE
0x42038928 C   FIELD 07w01 TXFE (ro): TXFE
0x42038928 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x42038928 C   FIELD 13w01 NAK (rw): NAK
0x42038930 B  REGISTER DIEPTSIZ1 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038930 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038930 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038930 C   FIELD 29w02 MCNT: MCNT
0x42038934 B  REGISTER DIEPDMA1 (rw): OTG device IN endpoint 1 DMA address register
0x42038934 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038938 B  REGISTER DTXFSTS1 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x42038938 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x42038940 B  REGISTER DIEPCTL2: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038940 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038940 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038940 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038940 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038940 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038940 C   FIELD 21w01 STALL (rw): STALL
0x42038940 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x42038940 C   FIELD 26w01 CNAK (wo): CNAK
0x42038940 C   FIELD 27w01 SNAK (wo): SNAK
0x42038940 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038940 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x42038940 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038940 C   FIELD 31w01 EPENA (rw): EPENA
0x42038948 B  REGISTER DIEPINT2: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038948 C   FIELD 00w01 XFRC (rw): XFRC
0x42038948 C   FIELD 01w01 EPDISD (rw): EPDISD
0x42038948 C   FIELD 03w01 TOC (rw): TOC
0x42038948 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x42038948 C   FIELD 05w01 INEPNM (rw): INEPNM
0x42038948 C   FIELD 06w01 INEPNE (ro): INEPNE
0x42038948 C   FIELD 07w01 TXFE (ro): TXFE
0x42038948 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x42038948 C   FIELD 13w01 NAK (rw): NAK
0x42038950 B  REGISTER DIEPTSIZ2 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038950 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038950 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038950 C   FIELD 29w02 MCNT: MCNT
0x42038954 B  REGISTER DIEPDMA2 (rw): OTG device IN endpoint 2 DMA address register
0x42038954 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038958 B  REGISTER DTXFSTS2 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x42038958 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x42038960 B  REGISTER DIEPCTL3: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038960 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038960 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038960 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038960 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038960 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038960 C   FIELD 21w01 STALL (rw): STALL
0x42038960 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x42038960 C   FIELD 26w01 CNAK (wo): CNAK
0x42038960 C   FIELD 27w01 SNAK (wo): SNAK
0x42038960 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038960 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x42038960 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038960 C   FIELD 31w01 EPENA (rw): EPENA
0x42038968 B  REGISTER DIEPINT3: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038968 C   FIELD 00w01 XFRC (rw): XFRC
0x42038968 C   FIELD 01w01 EPDISD (rw): EPDISD
0x42038968 C   FIELD 03w01 TOC (rw): TOC
0x42038968 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x42038968 C   FIELD 05w01 INEPNM (rw): INEPNM
0x42038968 C   FIELD 06w01 INEPNE (ro): INEPNE
0x42038968 C   FIELD 07w01 TXFE (ro): TXFE
0x42038968 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x42038968 C   FIELD 13w01 NAK (rw): NAK
0x42038970 B  REGISTER DIEPTSIZ3 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038970 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038970 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038970 C   FIELD 29w02 MCNT: MCNT
0x42038974 B  REGISTER DIEPDMA3 (rw): OTG device IN endpoint 3 DMA address register
0x42038974 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038978 B  REGISTER DTXFSTS3 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x42038978 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x42038980 B  REGISTER DIEPCTL4: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038980 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038980 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038980 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038980 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038980 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038980 C   FIELD 21w01 STALL (rw): STALL
0x42038980 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x42038980 C   FIELD 26w01 CNAK (wo): CNAK
0x42038980 C   FIELD 27w01 SNAK (wo): SNAK
0x42038980 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038980 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x42038980 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038980 C   FIELD 31w01 EPENA (rw): EPENA
0x42038988 B  REGISTER DIEPINT4: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038988 C   FIELD 00w01 XFRC (rw): XFRC
0x42038988 C   FIELD 01w01 EPDISD (rw): EPDISD
0x42038988 C   FIELD 03w01 TOC (rw): TOC
0x42038988 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x42038988 C   FIELD 05w01 INEPNM (rw): INEPNM
0x42038988 C   FIELD 06w01 INEPNE (ro): INEPNE
0x42038988 C   FIELD 07w01 TXFE (ro): TXFE
0x42038988 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x42038988 C   FIELD 13w01 NAK (rw): NAK
0x42038990 B  REGISTER DIEPTSIZ4 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038990 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038990 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038990 C   FIELD 29w02 MCNT: MCNT
0x42038994 B  REGISTER DIEPDMA4 (rw): OTG device IN endpoint 4 DMA address register
0x42038994 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038998 B  REGISTER DTXFSTS4 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x42038998 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x420389A0 B  REGISTER DIEPCTL5: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x420389A0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x420389A0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x420389A0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x420389A0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x420389A0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x420389A0 C   FIELD 21w01 STALL (rw): STALL
0x420389A0 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x420389A0 C   FIELD 26w01 CNAK (wo): CNAK
0x420389A0 C   FIELD 27w01 SNAK (wo): SNAK
0x420389A0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x420389A0 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x420389A0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x420389A0 C   FIELD 31w01 EPENA (rw): EPENA
0x420389A8 B  REGISTER DIEPINT5: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x420389A8 C   FIELD 00w01 XFRC (rw): XFRC
0x420389A8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x420389A8 C   FIELD 03w01 TOC (rw): TOC
0x420389A8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x420389A8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x420389A8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x420389A8 C   FIELD 07w01 TXFE (ro): TXFE
0x420389A8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x420389A8 C   FIELD 13w01 NAK (rw): NAK
0x420389B0 B  REGISTER DIEPTSIZ5 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x420389B0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x420389B0 C   FIELD 19w10 PKTCNT: PKTCNT
0x420389B0 C   FIELD 29w02 MCNT: MCNT
0x420389B4 B  REGISTER DIEPDMA5 (rw): OTG device IN endpoint 5 DMA address register
0x420389B4 C   FIELD 00w32 DMAADDR: DMAADDR
0x420389B8 B  REGISTER DTXFSTS5 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x420389B8 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x420389C8 B  REGISTER DIEPINT6: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x420389C8 C   FIELD 00w01 XFRC (rw): XFRC
0x420389C8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x420389C8 C   FIELD 02w01 AHBERR (rw): AHBERR
0x420389C8 C   FIELD 03w01 TOC (rw): TOC
0x420389C8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x420389C8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x420389C8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x420389C8 C   FIELD 07w01 TXFE (ro): TXFE
0x420389C8 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x420389C8 C   FIELD 09w01 BNA (rw): BNA
0x420389C8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x420389C8 C   FIELD 13w01 NAK (rw): NAK
0x420389D0 B  REGISTER DIEPTSIZ6 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x420389D0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x420389D0 C   FIELD 19w10 PKTCNT: PKTCNT
0x420389D0 C   FIELD 29w02 MCNT: MCNT
0x420389D4 B  REGISTER DIEPDMA6 (rw): OTG device IN endpoint 6 DMA address register
0x420389D4 C   FIELD 00w32 DMAADDR: DMAADDR
0x420389E8 B  REGISTER DIEPINT7: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x420389E8 C   FIELD 00w01 XFRC (rw): XFRC
0x420389E8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x420389E8 C   FIELD 02w01 AHBERR (rw): AHBERR
0x420389E8 C   FIELD 03w01 TOC (rw): TOC
0x420389E8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x420389E8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x420389E8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x420389E8 C   FIELD 07w01 TXFE (ro): TXFE
0x420389E8 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x420389E8 C   FIELD 09w01 BNA (rw): BNA
0x420389E8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x420389E8 C   FIELD 13w01 NAK (rw): NAK
0x420389F0 B  REGISTER DIEPTSIZ7 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x420389F0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x420389F0 C   FIELD 19w10 PKTCNT: PKTCNT
0x420389F0 C   FIELD 29w02 MCNT: MCNT
0x420389F4 B  REGISTER DIEPDMA7 (rw): OTG device IN endpoint 7 DMA address register
0x420389F4 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038A08 B  REGISTER DIEPINT8: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038A08 C   FIELD 00w01 XFRC (rw): XFRC
0x42038A08 C   FIELD 01w01 EPDISD (rw): EPDISD
0x42038A08 C   FIELD 02w01 AHBERR (rw): AHBERR
0x42038A08 C   FIELD 03w01 TOC (rw): TOC
0x42038A08 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x42038A08 C   FIELD 05w01 INEPNM (rw): INEPNM
0x42038A08 C   FIELD 06w01 INEPNE (ro): INEPNE
0x42038A08 C   FIELD 07w01 TXFE (ro): TXFE
0x42038A08 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x42038A08 C   FIELD 09w01 BNA (rw): BNA
0x42038A08 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x42038A08 C   FIELD 13w01 NAK (rw): NAK
0x42038A10 B  REGISTER DIEPTSIZ8 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038A10 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038A10 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038A10 C   FIELD 29w02 MCNT: MCNT
0x42038A14 B  REGISTER DIEPDMA8 (rw): OTG device IN endpoint 8 DMA address register
0x42038A14 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038B00 B  REGISTER DOEPCTL0: This section describes the DOEPCTL0 register.
0x42038B00 C   FIELD 00w02 MPSIZ (ro): MPSIZ
0x42038B00 C   FIELD 15w01 USBAEP (ro): USBAEP
0x42038B00 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038B00 C   FIELD 18w02 EPTYP (ro): EPTYP
0x42038B00 C   FIELD 20w01 SNPM (rw): SNPM
0x42038B00 C   FIELD 21w01 STALL (rw): STALL
0x42038B00 C   FIELD 26w01 CNAK (wo): CNAK
0x42038B00 C   FIELD 27w01 SNAK (wo): SNAK
0x42038B00 C   FIELD 30w01 EPDIS (ro): EPDIS
0x42038B00 C   FIELD 31w01 EPENA (wo): EPENA
0x42038B08 B  REGISTER DOEPINT0 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038B08 C   FIELD 00w01 XFRC: XFRC
0x42038B08 C   FIELD 01w01 EPDISD: EPDISD
0x42038B08 C   FIELD 02w01 AHBERR: AHBERR
0x42038B08 C   FIELD 03w01 STUP: STUP
0x42038B08 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038B08 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038B08 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038B08 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038B08 C   FIELD 09w01 BNA: BNA
0x42038B08 C   FIELD 12w01 BERR: BERR
0x42038B08 C   FIELD 13w01 NAK: NAK
0x42038B08 C   FIELD 14w01 NYET: NYET
0x42038B08 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038B10 B  REGISTER DOEPTSIZ0 (rw): The application must modify this register before enabling endpoint 0.
0x42038B10 C   FIELD 00w07 XFRSIZ: XFRSIZ
0x42038B10 C   FIELD 19w01 PKTCNT: PKTCNT
0x42038B10 C   FIELD 29w02 STUPCNT: STUPCNT
0x42038B14 B  REGISTER DOEPDMA0 (rw): OTG device OUT endpoint 0 DMA address register
0x42038B14 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038B20 B  REGISTER DOEPCTL1: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038B20 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038B20 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038B20 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038B20 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038B20 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038B20 C   FIELD 20w01 SNPM (rw): SNPM
0x42038B20 C   FIELD 21w01 STALL (rw): STALL
0x42038B20 C   FIELD 26w01 CNAK (wo): CNAK
0x42038B20 C   FIELD 27w01 SNAK (wo): SNAK
0x42038B20 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038B20 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x42038B20 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038B20 C   FIELD 31w01 EPENA (rw): EPENA
0x42038B28 B  REGISTER DOEPINT1 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038B28 C   FIELD 00w01 XFRC: XFRC
0x42038B28 C   FIELD 01w01 EPDISD: EPDISD
0x42038B28 C   FIELD 02w01 AHBERR: AHBERR
0x42038B28 C   FIELD 03w01 STUP: STUP
0x42038B28 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038B28 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038B28 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038B28 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038B28 C   FIELD 09w01 BNA: BNA
0x42038B28 C   FIELD 12w01 BERR: BERR
0x42038B28 C   FIELD 13w01 NAK: NAK
0x42038B28 C   FIELD 14w01 NYET: NYET
0x42038B28 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038B30 B  REGISTER DOEPTSIZ1 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038B30 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038B30 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038B30 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x42038B34 B  REGISTER DOEPDMA1 (rw): OTG device OUT endpoint 1 DMA address register
0x42038B34 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038B40 B  REGISTER DOEPCTL2: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038B40 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038B40 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038B40 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038B40 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038B40 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038B40 C   FIELD 20w01 SNPM (rw): SNPM
0x42038B40 C   FIELD 21w01 STALL (rw): STALL
0x42038B40 C   FIELD 26w01 CNAK (wo): CNAK
0x42038B40 C   FIELD 27w01 SNAK (wo): SNAK
0x42038B40 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038B40 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x42038B40 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038B40 C   FIELD 31w01 EPENA (rw): EPENA
0x42038B48 B  REGISTER DOEPINT2 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038B48 C   FIELD 00w01 XFRC: XFRC
0x42038B48 C   FIELD 01w01 EPDISD: EPDISD
0x42038B48 C   FIELD 02w01 AHBERR: AHBERR
0x42038B48 C   FIELD 03w01 STUP: STUP
0x42038B48 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038B48 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038B48 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038B48 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038B48 C   FIELD 09w01 BNA: BNA
0x42038B48 C   FIELD 12w01 BERR: BERR
0x42038B48 C   FIELD 13w01 NAK: NAK
0x42038B48 C   FIELD 14w01 NYET: NYET
0x42038B48 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038B50 B  REGISTER DOEPTSIZ2 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038B50 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038B50 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038B50 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x42038B54 B  REGISTER DOEPDMA2 (rw): OTG device OUT endpoint 2 DMA address register
0x42038B54 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038B60 B  REGISTER DOEPCTL3: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038B60 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038B60 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038B60 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038B60 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038B60 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038B60 C   FIELD 20w01 SNPM (rw): SNPM
0x42038B60 C   FIELD 21w01 STALL (rw): STALL
0x42038B60 C   FIELD 26w01 CNAK (wo): CNAK
0x42038B60 C   FIELD 27w01 SNAK (wo): SNAK
0x42038B60 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038B60 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x42038B60 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038B60 C   FIELD 31w01 EPENA (rw): EPENA
0x42038B68 B  REGISTER DOEPINT3 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038B68 C   FIELD 00w01 XFRC: XFRC
0x42038B68 C   FIELD 01w01 EPDISD: EPDISD
0x42038B68 C   FIELD 02w01 AHBERR: AHBERR
0x42038B68 C   FIELD 03w01 STUP: STUP
0x42038B68 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038B68 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038B68 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038B68 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038B68 C   FIELD 09w01 BNA: BNA
0x42038B68 C   FIELD 12w01 BERR: BERR
0x42038B68 C   FIELD 13w01 NAK: NAK
0x42038B68 C   FIELD 14w01 NYET: NYET
0x42038B68 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038B70 B  REGISTER DOEPTSIZ3 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038B70 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038B70 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038B70 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x42038B74 B  REGISTER DOEPDMA3 (rw): OTG device OUT endpoint 3 DMA address register
0x42038B74 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038B80 B  REGISTER DOEPCTL4: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038B80 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038B80 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038B80 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038B80 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038B80 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038B80 C   FIELD 20w01 SNPM (rw): SNPM
0x42038B80 C   FIELD 21w01 STALL (rw): STALL
0x42038B80 C   FIELD 26w01 CNAK (wo): CNAK
0x42038B80 C   FIELD 27w01 SNAK (wo): SNAK
0x42038B80 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038B80 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x42038B80 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038B80 C   FIELD 31w01 EPENA (rw): EPENA
0x42038B88 B  REGISTER DOEPINT4 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038B88 C   FIELD 00w01 XFRC: XFRC
0x42038B88 C   FIELD 01w01 EPDISD: EPDISD
0x42038B88 C   FIELD 02w01 AHBERR: AHBERR
0x42038B88 C   FIELD 03w01 STUP: STUP
0x42038B88 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038B88 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038B88 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038B88 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038B88 C   FIELD 09w01 BNA: BNA
0x42038B88 C   FIELD 12w01 BERR: BERR
0x42038B88 C   FIELD 13w01 NAK: NAK
0x42038B88 C   FIELD 14w01 NYET: NYET
0x42038B88 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038B90 B  REGISTER DOEPTSIZ4 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038B90 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038B90 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038B90 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x42038B94 B  REGISTER DOEPDMA4 (rw): OTG device OUT endpoint 4 DMA address register
0x42038B94 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038BA0 B  REGISTER DOEPCTL5: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038BA0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038BA0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038BA0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038BA0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038BA0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038BA0 C   FIELD 20w01 SNPM (rw): SNPM
0x42038BA0 C   FIELD 21w01 STALL (rw): STALL
0x42038BA0 C   FIELD 26w01 CNAK (wo): CNAK
0x42038BA0 C   FIELD 27w01 SNAK (wo): SNAK
0x42038BA0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038BA0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x42038BA0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038BA0 C   FIELD 31w01 EPENA (rw): EPENA
0x42038BA8 B  REGISTER DOEPINT5 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038BA8 C   FIELD 00w01 XFRC: XFRC
0x42038BA8 C   FIELD 01w01 EPDISD: EPDISD
0x42038BA8 C   FIELD 02w01 AHBERR: AHBERR
0x42038BA8 C   FIELD 03w01 STUP: STUP
0x42038BA8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038BA8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038BA8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038BA8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038BA8 C   FIELD 09w01 BNA: BNA
0x42038BA8 C   FIELD 12w01 BERR: BERR
0x42038BA8 C   FIELD 13w01 NAK: NAK
0x42038BA8 C   FIELD 14w01 NYET: NYET
0x42038BA8 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038BB0 B  REGISTER DOEPTSIZ5 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038BB0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038BB0 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038BB0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x42038BB4 B  REGISTER DOEPDMA5 (rw): OTG device OUT endpoint 5 DMA address register
0x42038BB4 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038BC0 B  REGISTER DOEPCTL6: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038BC0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038BC0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038BC0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038BC0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038BC0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038BC0 C   FIELD 20w01 SNPM (rw): SNPM
0x42038BC0 C   FIELD 21w01 STALL (rw): STALL
0x42038BC0 C   FIELD 26w01 CNAK (wo): CNAK
0x42038BC0 C   FIELD 27w01 SNAK (wo): SNAK
0x42038BC0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038BC0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x42038BC0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038BC0 C   FIELD 31w01 EPENA (rw): EPENA
0x42038BC8 B  REGISTER DOEPINT6 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038BC8 C   FIELD 00w01 XFRC: XFRC
0x42038BC8 C   FIELD 01w01 EPDISD: EPDISD
0x42038BC8 C   FIELD 02w01 AHBERR: AHBERR
0x42038BC8 C   FIELD 03w01 STUP: STUP
0x42038BC8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038BC8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038BC8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038BC8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038BC8 C   FIELD 09w01 BNA: BNA
0x42038BC8 C   FIELD 12w01 BERR: BERR
0x42038BC8 C   FIELD 13w01 NAK: NAK
0x42038BC8 C   FIELD 14w01 NYET: NYET
0x42038BC8 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038BD0 B  REGISTER DOEPTSIZ6 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038BD0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038BD0 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038BD0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x42038BD4 B  REGISTER DOEPDMA6 (rw): OTG device OUT endpoint 6 DMA address register
0x42038BD4 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038BE0 B  REGISTER DOEPCTL7: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038BE0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038BE0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038BE0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038BE0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038BE0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038BE0 C   FIELD 20w01 SNPM (rw): SNPM
0x42038BE0 C   FIELD 21w01 STALL (rw): STALL
0x42038BE0 C   FIELD 26w01 CNAK (wo): CNAK
0x42038BE0 C   FIELD 27w01 SNAK (wo): SNAK
0x42038BE0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038BE0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x42038BE0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038BE0 C   FIELD 31w01 EPENA (rw): EPENA
0x42038BE8 B  REGISTER DOEPINT7 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038BE8 C   FIELD 00w01 XFRC: XFRC
0x42038BE8 C   FIELD 01w01 EPDISD: EPDISD
0x42038BE8 C   FIELD 02w01 AHBERR: AHBERR
0x42038BE8 C   FIELD 03w01 STUP: STUP
0x42038BE8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038BE8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038BE8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038BE8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038BE8 C   FIELD 09w01 BNA: BNA
0x42038BE8 C   FIELD 12w01 BERR: BERR
0x42038BE8 C   FIELD 13w01 NAK: NAK
0x42038BE8 C   FIELD 14w01 NYET: NYET
0x42038BE8 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038BF0 B  REGISTER DOEPTSIZ7 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038BF0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038BF0 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038BF0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x42038BF4 B  REGISTER DOEPDMA7 (rw): OTG device OUT endpoint 7 DMA address register
0x42038BF4 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038C00 B  REGISTER DOEPCTL8: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x42038C00 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x42038C00 C   FIELD 15w01 USBAEP (rw): USBAEP
0x42038C00 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x42038C00 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x42038C00 C   FIELD 18w02 EPTYP (rw): EPTYP
0x42038C00 C   FIELD 20w01 SNPM (rw): SNPM
0x42038C00 C   FIELD 21w01 STALL (rw): STALL
0x42038C00 C   FIELD 26w01 CNAK (wo): CNAK
0x42038C00 C   FIELD 27w01 SNAK (wo): SNAK
0x42038C00 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x42038C00 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x42038C00 C   FIELD 30w01 EPDIS (rw): EPDIS
0x42038C00 C   FIELD 31w01 EPENA (rw): EPENA
0x42038C08 B  REGISTER DOEPINT8 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x42038C08 C   FIELD 00w01 XFRC: XFRC
0x42038C08 C   FIELD 01w01 EPDISD: EPDISD
0x42038C08 C   FIELD 02w01 AHBERR: AHBERR
0x42038C08 C   FIELD 03w01 STUP: STUP
0x42038C08 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x42038C08 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x42038C08 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x42038C08 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x42038C08 C   FIELD 09w01 BNA: BNA
0x42038C08 C   FIELD 12w01 BERR: BERR
0x42038C08 C   FIELD 13w01 NAK: NAK
0x42038C08 C   FIELD 14w01 NYET: NYET
0x42038C08 C   FIELD 15w01 STPKTRX: STPKTRX
0x42038C10 B  REGISTER DOEPTSIZ8 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x42038C10 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x42038C10 C   FIELD 19w10 PKTCNT: PKTCNT
0x42038C10 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x42038C14 B  REGISTER DOEPDMA8 (rw): OTG device OUT endpoint 8 DMA address register
0x42038C14 C   FIELD 00w32 DMAADDR: DMAADDR
0x42038E00 B  REGISTER PCGCCTL: This register is available in host and device modes.
0x42038E00 C   FIELD 00w01 STPPCLK (rw): STPPCLK
0x42038E00 C   FIELD 01w01 GATEHCLK (rw): GATEHCLK
0x42038E00 C   FIELD 04w01 PHYSUSP (ro): PHYSUSP
0x42038E00 C   FIELD 05w01 ENL1GTG (rw): ENL1GTG
0x42038E00 C   FIELD 06w01 PHYSLEEP (ro): PHYSLEEP
0x42038E00 C   FIELD 07w01 SUSP (ro): SUSP
0x420C0000 A PERIPHERAL AES
0x420C0000 B  REGISTER CR (rw): control register
0x420C0000 C   FIELD 00w01 EN: AES enable
0x420C0000 C   FIELD 01w02 DATATYPE: Data type selection (for data in and data out to/from the cryptographic block)
0x420C0000 C   FIELD 03w02 MODE: AES operating mode
0x420C0000 C   FIELD 05w02 CHMOD: AES chaining mode
0x420C0000 C   FIELD 11w01 DMAINEN: Enable DMA management of data input phase
0x420C0000 C   FIELD 12w01 DMAOUTEN: Enable DMA management of data output phase
0x420C0000 C   FIELD 13w02 GCMPH: GCMPH
0x420C0000 C   FIELD 16w01 CHMOD_2: CHMOD_2
0x420C0000 C   FIELD 18w01 KEYSIZE: KEYSIZE
0x420C0000 C   FIELD 20w04 NPBLB: NPBLB
0x420C0000 C   FIELD 24w02 KMOD: KMOD
0x420C0000 C   FIELD 31w01 IPRST: IPRST
0x420C0004 B  REGISTER SR (ro): status register
0x420C0004 C   FIELD 00w01 CCF: Computation complete flag
0x420C0004 C   FIELD 01w01 RDERR: Read error flag
0x420C0004 C   FIELD 02w01 WRERR: Write error flag
0x420C0004 C   FIELD 03w01 BUSY: BUSY
0x420C0004 C   FIELD 07w01 KEYVALID: Key Valid flag
0x420C0008 B  REGISTER DINR (wo): data input register
0x420C0008 C   FIELD 00w32 DIN: Input data word
0x420C000C B  REGISTER DOUTR (ro): data output register
0x420C000C C   FIELD 00w32 DOUT: Output data word
0x420C0010 B  REGISTER KEYR0 (wo): key register 0
0x420C0010 C   FIELD 00w32 KEY: Cryptographic key, bits [31:0]
0x420C0014 B  REGISTER KEYR1 (wo): key register 1
0x420C0014 C   FIELD 00w32 KEY: Cryptographic key, bits [63:32]
0x420C0018 B  REGISTER KEYR2 (wo): key register 2
0x420C0018 C   FIELD 00w32 KEYR: Cryptographic key, bits [95:64]
0x420C001C B  REGISTER KEYR3 (wo): key register 3
0x420C001C C   FIELD 00w32 AES_KEYR3: Cryptographic key, bits [127:96]
0x420C0020 B  REGISTER IVR0 (rw): initialization vector register 0
0x420C0020 C   FIELD 00w32 IVI: Initialization vector input, bits [31:0]
0x420C0024 B  REGISTER IVR1 (rw): initialization vector register 1
0x420C0024 C   FIELD 00w32 IVI: Initialization vector input, bits [63:32]
0x420C0028 B  REGISTER IVR2 (rw): initialization vector register 2
0x420C0028 C   FIELD 00w32 IVI: Initialization vector input, bits [95:64]
0x420C002C B  REGISTER IVR3 (rw): initialization vector register 3
0x420C002C C   FIELD 00w32 IVI: Initialization vector input, bits [127:96]
0x420C0030 B  REGISTER KEYR4 (wo): key register 4
0x420C0030 C   FIELD 00w32 KEY: Cryptographic key, bits [159:128]
0x420C0034 B  REGISTER KEYR5 (wo): key register 5
0x420C0034 C   FIELD 00w32 KEY: Cryptographic key, bits [191:160]
0x420C0038 B  REGISTER KEYR6 (wo): key register 6
0x420C0038 C   FIELD 00w32 KEY: Cryptographic key, bits [223:192]
0x420C003C B  REGISTER KEYR7 (wo): key register 7
0x420C003C C   FIELD 00w32 KEY: Cryptographic key, bits [255:224]
0x420C0040 B  REGISTER SUSP0R (wo): suspend registers
0x420C0040 C   FIELD 00w32 SUSP0: AES suspend
0x420C0044 B  REGISTER SUSP1R (wo): suspend registers
0x420C0044 C   FIELD 00w32 SUSP1: AES suspend
0x420C0048 B  REGISTER SUSP2R (wo): suspend registers
0x420C0048 C   FIELD 00w32 SUSP2: AES suspend
0x420C004C B  REGISTER SUSP3R (wo): suspend registers
0x420C004C C   FIELD 00w32 SUSP3: AES suspend
0x420C0050 B  REGISTER SUSP4R (wo): suspend registers
0x420C0050 C   FIELD 00w32 SUSP4: AES suspend
0x420C0054 B  REGISTER SUSP5R (wo): suspend registers
0x420C0054 C   FIELD 00w32 SUSP5: AES suspend
0x420C0058 B  REGISTER SUSP6R (wo): suspend registers
0x420C0058 C   FIELD 00w32 SUSP6: AES suspend
0x420C005C B  REGISTER SUSP7R (wo): suspend registers
0x420C005C C   FIELD 00w32 SUSP7: AES suspend
0x420C0300 B  REGISTER IER (rw): interrupt enable register
0x420C0300 C   FIELD 00w01 CCFIE: Computation complete flag
0x420C0300 C   FIELD 01w01 RWEIE: Read or write error interrupt flag
0x420C0300 C   FIELD 02w01 KEIE: Key error interrupt flag
0x420C0300 C   FIELD 03w01 RNGEIE: Key error interrupt flag
0x420C0304 B  REGISTER ISR (ro): interrupt status register
0x420C0304 C   FIELD 00w01 CCF: Computation complete flag
0x420C0304 C   FIELD 01w01 RWEIF: Read or write error interrupt flag
0x420C0304 C   FIELD 02w01 KEIF: Key error interrupt flag
0x420C0304 C   FIELD 03w01 RNGEIF: Key error interrupt flag
0x420C0308 B  REGISTER ICR (wo): interrupt clear register
0x420C0308 C   FIELD 00w01 CCF: Computation complete flag clear
0x420C0308 C   FIELD 01w01 RWEIF: Read or write error interrupt flag clear
0x420C0308 C   FIELD 02w01 KEIF: Key error interrupt flag clear
0x420C0400 A PERIPHERAL HASH
0x420C0400 B  REGISTER CR: control register
0x420C0400 C   FIELD 02w01 INIT (wo): Initialize message digest calculation
0x420C0400 C   FIELD 03w01 DMAE (rw): DMA enable
0x420C0400 C   FIELD 04w02 DATATYPE (rw): Data type selection
0x420C0400 C   FIELD 06w01 MODE (rw): Mode selection
0x420C0400 C   FIELD 08w04 NBW (ro): Number of words already pushed
0x420C0400 C   FIELD 12w01 DINNE (ro): DIN not empty
0x420C0400 C   FIELD 13w01 MDMAT (rw): Multiple DMA Transfers
0x420C0400 C   FIELD 16w01 LKEY (rw): Long key selection
0x420C0400 C   FIELD 17w02 ALGO (rw): Algorithm selection
0x420C0404 B  REGISTER DIN (wo): data input register
0x420C0404 C   FIELD 00w32 DATAIN: Data input
0x420C0408 B  REGISTER STR: start register
0x420C0408 C   FIELD 00w05 NBLW (rw): Number of valid bits in the last word of the message
0x420C0408 C   FIELD 08w01 DCAL (wo): Digest calculation
0x420C040C B  REGISTER HRA0 (ro): HASH aliased digest register 0
0x420C040C C   FIELD 00w32 H0: H0
0x420C0410 B  REGISTER HRA1 (ro): HASH aliased digest register 1
0x420C0410 C   FIELD 00w32 H1: H1
0x420C0414 B  REGISTER HRA2 (ro): HASH aliased digest register 2
0x420C0414 C   FIELD 00w32 H2: H2
0x420C0418 B  REGISTER HRA3 (ro): HASH aliased digest register 3
0x420C0418 C   FIELD 00w32 H3: H3
0x420C041C B  REGISTER HRA4 (ro): HASH aliased digest register 4
0x420C041C C   FIELD 00w32 H4: H4
0x420C0420 B  REGISTER IMR (rw): interrupt enable register
0x420C0420 C   FIELD 00w01 DINIE: Data input interrupt enable
0x420C0420 C   FIELD 01w01 DCIE: Digest calculation completion interrupt enable
0x420C0424 B  REGISTER SR: status register
0x420C0424 C   FIELD 00w01 DINIS (rw): Data input interrupt status
0x420C0424 C   FIELD 01w01 DCIS (rw): Digest calculation completion interrupt status
0x420C0424 C   FIELD 02w01 DMAS (ro): DMA Status
0x420C0424 C   FIELD 03w01 BUSY (ro): Busy bit
0x420C0424 C   FIELD 09w05 NBWP (ro): Number of words already pushed
0x420C0424 C   FIELD 15w01 DINNE (ro): DIN not empty
0x420C0424 C   FIELD 16w05 NBWE (ro): Number of words expected
0x420C04F8 B  REGISTER CSR0 (rw): context swap registers
0x420C04F8 C   FIELD 00w32 CSR0: CSR0
0x420C04FC B  REGISTER CSR1 (rw): context swap registers
0x420C04FC C   FIELD 00w32 CSR1: CSR1
0x420C0500 B  REGISTER CSR2 (rw): context swap registers
0x420C0500 C   FIELD 00w32 CSR2: CSR2
0x420C0504 B  REGISTER CSR3 (rw): context swap registers
0x420C0504 C   FIELD 00w32 CSR3: CSR3
0x420C0508 B  REGISTER CSR4 (rw): context swap registers
0x420C0508 C   FIELD 00w32 CSR4: CSR4
0x420C050C B  REGISTER CSR5 (rw): context swap registers
0x420C050C C   FIELD 00w32 CSR5: CSR5
0x420C0510 B  REGISTER CSR6 (rw): context swap registers
0x420C0510 C   FIELD 00w32 CSR6: CSR6
0x420C0514 B  REGISTER CSR7 (rw): context swap registers
0x420C0514 C   FIELD 00w32 CSR7: CSR7
0x420C0518 B  REGISTER CSR8 (rw): context swap registers
0x420C0518 C   FIELD 00w32 CSR8: CSR8
0x420C051C B  REGISTER CSR9 (rw): context swap registers
0x420C051C C   FIELD 00w32 CSR9: CSR9
0x420C0520 B  REGISTER CSR10 (rw): context swap registers
0x420C0520 C   FIELD 00w32 CSR10: CSR10
0x420C0524 B  REGISTER CSR11 (rw): context swap registers
0x420C0524 C   FIELD 00w32 CSR11: CSR11
0x420C0528 B  REGISTER CSR12 (rw): context swap registers
0x420C0528 C   FIELD 00w32 CSR12: CSR12
0x420C052C B  REGISTER CSR13 (rw): context swap registers
0x420C052C C   FIELD 00w32 CSR13: CSR13
0x420C0530 B  REGISTER CSR14 (rw): context swap registers
0x420C0530 C   FIELD 00w32 CSR14: CSR14
0x420C0534 B  REGISTER CSR15 (rw): context swap registers
0x420C0534 C   FIELD 00w32 CSR15: CSR15
0x420C0538 B  REGISTER CSR16 (rw): context swap registers
0x420C0538 C   FIELD 00w32 CSR16: CSR16
0x420C053C B  REGISTER CSR17 (rw): context swap registers
0x420C053C C   FIELD 00w32 CSR17: CSR17
0x420C0540 B  REGISTER CSR18 (rw): context swap registers
0x420C0540 C   FIELD 00w32 CSR18: CSR18
0x420C0544 B  REGISTER CSR19 (rw): context swap registers
0x420C0544 C   FIELD 00w32 CSR19: CSR19
0x420C0548 B  REGISTER CSR20 (rw): context swap registers
0x420C0548 C   FIELD 00w32 CSR20: CSR20
0x420C054C B  REGISTER CSR21 (rw): context swap registers
0x420C054C C   FIELD 00w32 CSR21: CSR21
0x420C0550 B  REGISTER CSR22 (rw): context swap registers
0x420C0550 C   FIELD 00w32 CSR22: CSR22
0x420C0554 B  REGISTER CSR23 (rw): context swap registers
0x420C0554 C   FIELD 00w32 CSR23: CSR23
0x420C0558 B  REGISTER CSR24 (rw): context swap registers
0x420C0558 C   FIELD 00w32 CSR24: CSR24
0x420C055C B  REGISTER CSR25 (rw): context swap registers
0x420C055C C   FIELD 00w32 CSR25: CSR25
0x420C0560 B  REGISTER CSR26 (rw): context swap registers
0x420C0560 C   FIELD 00w32 CSR26: CSR26
0x420C0564 B  REGISTER CSR27 (rw): context swap registers
0x420C0564 C   FIELD 00w32 CSR27: CSR27
0x420C0568 B  REGISTER CSR28 (rw): context swap registers
0x420C0568 C   FIELD 00w32 CSR28: CSR28
0x420C056C B  REGISTER CSR29 (rw): context swap registers
0x420C056C C   FIELD 00w32 CSR29: CSR29
0x420C0570 B  REGISTER CSR30 (rw): context swap registers
0x420C0570 C   FIELD 00w32 CSR30: CSR30
0x420C0574 B  REGISTER CSR31 (rw): context swap registers
0x420C0574 C   FIELD 00w32 CSR31: CSR31
0x420C0578 B  REGISTER CSR32 (rw): context swap registers
0x420C0578 C   FIELD 00w32 CSR32: CSR32
0x420C057C B  REGISTER CSR33 (rw): context swap registers
0x420C057C C   FIELD 00w32 CSR33: CSR33
0x420C0580 B  REGISTER CSR34 (rw): context swap registers
0x420C0580 C   FIELD 00w32 CSR34: CSR34
0x420C0584 B  REGISTER CSR35 (rw): context swap registers
0x420C0584 C   FIELD 00w32 CSR35: CSR35
0x420C0588 B  REGISTER CSR36 (rw): context swap registers
0x420C0588 C   FIELD 00w32 CSR36: CSR36
0x420C058C B  REGISTER CSR37 (rw): context swap registers
0x420C058C C   FIELD 00w32 CSR37: CSR37
0x420C0590 B  REGISTER CSR38 (rw): context swap registers
0x420C0590 C   FIELD 00w32 CSR38: CSR38
0x420C0594 B  REGISTER CSR39 (rw): context swap registers
0x420C0594 C   FIELD 00w32 CSR39: CSR39
0x420C0598 B  REGISTER CSR40 (rw): context swap registers
0x420C0598 C   FIELD 00w32 CSR40: CSR40
0x420C059C B  REGISTER CSR41 (rw): context swap registers
0x420C059C C   FIELD 00w32 CSR41: CSR41
0x420C05A0 B  REGISTER CSR42 (rw): context swap registers
0x420C05A0 C   FIELD 00w32 CSR42: CSR42
0x420C05A4 B  REGISTER CSR43 (rw): context swap registers
0x420C05A4 C   FIELD 00w32 CSR43: CSR43
0x420C05A8 B  REGISTER CSR44 (rw): context swap registers
0x420C05A8 C   FIELD 00w32 CSR44: CSR44
0x420C05AC B  REGISTER CSR45 (rw): context swap registers
0x420C05AC C   FIELD 00w32 CSR45: CSR45
0x420C05B0 B  REGISTER CSR46 (rw): context swap registers
0x420C05B0 C   FIELD 00w32 CSR46: CSR46
0x420C05B4 B  REGISTER CSR47 (rw): context swap registers
0x420C05B4 C   FIELD 00w32 CSR47: CSR47
0x420C05B8 B  REGISTER CSR48 (rw): context swap registers
0x420C05B8 C   FIELD 00w32 CSR48: CSR48
0x420C05BC B  REGISTER CSR49 (rw): context swap registers
0x420C05BC C   FIELD 00w32 CSR49: CSR49
0x420C05C0 B  REGISTER CSR50 (rw): context swap registers
0x420C05C0 C   FIELD 00w32 CSR50: CSR50
0x420C05C4 B  REGISTER CSR51 (rw): context swap registers
0x420C05C4 C   FIELD 00w32 CSR51: CSR51
0x420C05C8 B  REGISTER CSR52 (rw): context swap registers
0x420C05C8 C   FIELD 00w32 CSR52: CSR52
0x420C05CC B  REGISTER CSR53 (rw): context swap registers
0x420C05CC C   FIELD 00w32 CSR53: CSR53
0x420C0710 B  REGISTER HR0 (ro): digest register 0
0x420C0710 C   FIELD 00w32 H0: H0
0x420C0714 B  REGISTER HR1 (ro): digest register 1
0x420C0714 C   FIELD 00w32 H1: H1
0x420C0718 B  REGISTER HR2 (ro): digest register 4
0x420C0718 C   FIELD 00w32 H2: H2
0x420C071C B  REGISTER HR3 (ro): digest register 3
0x420C071C C   FIELD 00w32 H3: H3
0x420C0720 B  REGISTER HR4 (ro): digest register 4
0x420C0720 C   FIELD 00w32 H4: H4
0x420C0724 B  REGISTER HR5 (ro): supplementary digest register 5
0x420C0724 C   FIELD 00w32 H5: H5
0x420C0728 B  REGISTER HR6 (ro): supplementary digest register 6
0x420C0728 C   FIELD 00w32 H6: H6
0x420C072C B  REGISTER HR7 (ro): supplementary digest register 7
0x420C072C C   FIELD 00w32 H7: H7
0x420C0800 A PERIPHERAL RNG
0x420C0800 B  REGISTER CR (rw): control register
0x420C0800 C   FIELD 02w01 RNGEN: True random number generator enable
0x420C0800 C   FIELD 03w01 IE: Interrupt Enable
0x420C0800 C   FIELD 05w01 CED: Clock error detection
0x420C0800 C   FIELD 07w01 ARDIS: Auto reset disable
0x420C0800 C   FIELD 08w04 RNG_CONFIG3: RNG configuration 3
0x420C0800 C   FIELD 12w01 NISTC: Non NIST compliant
0x420C0800 C   FIELD 13w03 RNG_CONFIG2: RNG configuration 2
0x420C0800 C   FIELD 16w04 CLKDIV: Clock divider factor
0x420C0800 C   FIELD 20w06 RNG_CONFIG1: RNG configuration 1
0x420C0800 C   FIELD 30w01 CONDRST: Conditioning soft reset
0x420C0800 C   FIELD 31w01 CONFIGLOCK: RNG Config Lock
0x420C0804 B  REGISTER SR: status register
0x420C0804 C   FIELD 00w01 DRDY (ro): Data ready
0x420C0804 C   FIELD 01w01 CECS (ro): Clock error current status
0x420C0804 C   FIELD 02w01 SECS (ro): Seed error current status
0x420C0804 C   FIELD 05w01 CEIS (rw): Clock error interrupt status
0x420C0804 C   FIELD 06w01 SEIS (rw): Seed error interrupt status
0x420C0808 B  REGISTER DR (ro): data register
0x420C0808 C   FIELD 00w32 RNDATA: Random data
0x420C0810 B  REGISTER HTCR (rw): health test control register
0x420C0810 C   FIELD 00w32 HTCFG: health test configuration
0x420C0C00 A PERIPHERAL SAES
0x420C0C00 B  REGISTER CR (rw): control register
0x420C0C00 C   FIELD 00w01 EN: SAES enable
0x420C0C00 C   FIELD 01w02 DATATYPE: DATATYPE
0x420C0C00 C   FIELD 03w02 MODE: MODE
0x420C0C00 C   FIELD 05w02 CHMOD: CHMOD
0x420C0C00 C   FIELD 11w01 DMAINEN: DMAINEN
0x420C0C00 C   FIELD 12w01 DMAOUTEN: DMAOUTEN
0x420C0C00 C   FIELD 18w01 KEYSIZE: KEYSIZE
0x420C0C00 C   FIELD 19w01 KEYPROT: KEYPROT
0x420C0C00 C   FIELD 24w02 KMOD: KMOD
0x420C0C00 C   FIELD 26w02 KSHAREID: KSHAREID
0x420C0C00 C   FIELD 28w03 KEYSEL: KEYSEL
0x420C0C00 C   FIELD 31w01 IPRST: IPRST
0x420C0C04 B  REGISTER SR (ro): status register
0x420C0C04 C   FIELD 00w01 CCF: Computation complete flag
0x420C0C04 C   FIELD 01w01 RDERR: Read error flag
0x420C0C04 C   FIELD 02w01 WRERR: Write error flag
0x420C0C04 C   FIELD 03w01 BUSY: BUSY
0x420C0C04 C   FIELD 07w01 KEYVALID: Key Valid flag
0x420C0C08 B  REGISTER DINR (wo): data input register
0x420C0C08 C   FIELD 00w32 DIN: Input data word
0x420C0C0C B  REGISTER DOUTR (ro): data output register
0x420C0C0C C   FIELD 00w32 DOUT: Output data word
0x420C0C10 B  REGISTER KEYR0 (wo): key register 0
0x420C0C10 C   FIELD 00w32 KEY: Cryptographic key, bits [31:0]
0x420C0C14 B  REGISTER KEYR1 (wo): key register 1
0x420C0C14 C   FIELD 00w32 KEY: Cryptographic key, bits [63:32]
0x420C0C18 B  REGISTER KEYR2 (wo): key register 2
0x420C0C18 C   FIELD 00w32 KEYR: Cryptographic key, bits [95:64]
0x420C0C1C B  REGISTER KEYR3 (wo): key register 3
0x420C0C1C C   FIELD 00w32 SAES_KEYR3: Cryptographic key, bits [127:96]
0x420C0C20 B  REGISTER IVR0 (rw): initialization vector register 0
0x420C0C20 C   FIELD 00w32 IVI: Initialization vector input, bits [31:0]
0x420C0C24 B  REGISTER IVR1 (rw): initialization vector register 1
0x420C0C24 C   FIELD 00w32 IVI: Initialization vector input, bits [63:32]
0x420C0C28 B  REGISTER IVR2 (rw): initialization vector register 2
0x420C0C28 C   FIELD 00w32 IVI: Initialization vector input, bits [95:64]
0x420C0C2C B  REGISTER IVR3 (rw): initialization vector register 3
0x420C0C2C C   FIELD 00w32 IVI: Initialization vector input, bits [127:96]
0x420C0C30 B  REGISTER KEYR4 (wo): key register 4
0x420C0C30 C   FIELD 00w32 KEY: Cryptographic key, bits [159:128]
0x420C0C34 B  REGISTER KEYR5 (wo): key register 5
0x420C0C34 C   FIELD 00w32 KEY: Cryptographic key, bits [191:160]
0x420C0C38 B  REGISTER KEYR6 (wo): key register 6
0x420C0C38 C   FIELD 00w32 KEY: Cryptographic key, bits [223:192]
0x420C0C3C B  REGISTER KEYR7 (wo): key register 7
0x420C0C3C C   FIELD 00w32 KEY: Cryptographic key, bits [255:224]
0x420C0D00 B  REGISTER DPACFGR: configuration register
0x420C0D00 C   FIELD 01w01 REDCFG (rw): REDCFG
0x420C0D00 C   FIELD 02w01 RESEED (rw): RESEED
0x420C0D00 C   FIELD 03w02 TRIMCFG (rw): TRIMCFG
0x420C0D00 C   FIELD 31w01 CONFIGLOCK (ro): CONFIGLOCK
0x420C0F00 B  REGISTER IER (rw): interrupt enable register
0x420C0F00 C   FIELD 00w01 CCFIE: Computation complete flag interrupt enable
0x420C0F00 C   FIELD 01w01 RWEIE: Read or write error interrupt enable
0x420C0F00 C   FIELD 02w01 KEIE: Key error interrupt enable
0x420C0F00 C   FIELD 03w01 RNGEIE: RNGEIE
0x420C0F04 B  REGISTER ISR (ro): interrupt status register
0x420C0F04 C   FIELD 00w01 CCF: Computation complete flag
0x420C0F04 C   FIELD 01w01 RWEIF: Read or write error interrupt flag
0x420C0F04 C   FIELD 02w01 KEIF: Key error interrupt flag
0x420C0F04 C   FIELD 03w01 RNGEIF: RNGEIF
0x420C0F08 B  REGISTER ICR (wo): interrupt clear register
0x420C0F08 C   FIELD 00w01 CCF: Computation complete flag clear
0x420C0F08 C   FIELD 01w01 RWEIF: Read or write error interrupt flag clear
0x420C0F08 C   FIELD 02w01 KEIF: Key error interrupt flag clear
0x420C0F08 C   FIELD 03w01 RNGEIF: RNGEIF
0x420C2000 A PERIPHERAL PKA
0x420C2000 B  REGISTER CR (rw): Control register
0x420C2000 C   FIELD 00w01 EN: Peripheral Enable
0x420C2000 C   FIELD 01w01 START: Start the operation
0x420C2000 C   FIELD 08w06 MODE: PKA Operation Mode
0x420C2000 C   FIELD 17w01 PROCENDIE: End of operation interrupt enable
0x420C2000 C   FIELD 19w01 RAMERRIE: RAM error interrupt enable
0x420C2000 C   FIELD 20w01 ADDRERRIE: Address error interrupt enable
0x420C2000 C   FIELD 21w01 OPERRIE: Operation error interrupt enable
0x420C2004 B  REGISTER SR (ro): PKA status register
0x420C2004 C   FIELD 00w01 INITOK: INITOK
0x420C2004 C   FIELD 16w01 BUSY: PKA operation is in progress
0x420C2004 C   FIELD 17w01 PROCENDF: PKA End of Operation flag
0x420C2004 C   FIELD 19w01 RAMERRF: RAMERRF
0x420C2004 C   FIELD 20w01 ADDRERRF: ADDRERRF
0x420C2004 C   FIELD 21w01 OPERRF: OPERRF
0x420C2008 B  REGISTER CLRFR (wo): PKA clear flag register
0x420C2008 C   FIELD 17w01 PROCENDFC: Clear PKA End of Operation flag
0x420C2008 C   FIELD 19w01 RAMERRFC: RAMERRFC
0x420C2008 C   FIELD 20w01 ADDRERRFC: ADDRERRFC
0x420C2008 C   FIELD 21w01 OPERRFC: OPERRFC
0x420C4000 A PERIPHERAL OCTOSPIM
0x420C4000 B  REGISTER CR (rw): control register
0x420C4000 C   FIELD 00w01 MUXEN: Multiplexed mode enable
0x420C4000 C   FIELD 16w08 REQ2ACK_TIME: REQ to ACK time
0x420C4004 B  REGISTER P1CR (rw): OCTOSPI I/O manager Port 1 configuration register
0x420C4004 C   FIELD 00w01 CLKEN: CLKEN
0x420C4004 C   FIELD 01w01 CLKSRC: CLKSRC
0x420C4004 C   FIELD 04w01 DQSEN: DQSEN
0x420C4004 C   FIELD 05w01 DQSSRC: DQSSRC
0x420C4004 C   FIELD 08w01 NCSEN: NCSEN
0x420C4004 C   FIELD 09w01 NCSSRC: NCSSRC
0x420C4004 C   FIELD 16w01 IOLEN: IOLEN
0x420C4004 C   FIELD 17w02 IOLSRC: IOLSRC
0x420C4004 C   FIELD 24w01 IOHEN: IOHEN
0x420C4004 C   FIELD 25w02 IOHSRC: IOHSR
0x420C4008 B  REGISTER P2CR (rw): OCTOSPI I/O manager Port 2 configuration register
0x420C4008 C   FIELD 00w01 CLKEN: CLKEN
0x420C4008 C   FIELD 01w01 CLKSRC: CLKSRC
0x420C4008 C   FIELD 04w01 DQSEN: DQSEN
0x420C4008 C   FIELD 05w01 DQSSRC: DQSSRC
0x420C4008 C   FIELD 08w01 NCSEN: NCSEN
0x420C4008 C   FIELD 09w01 NCSSRC: NCSSRC
0x420C4008 C   FIELD 16w01 IOLEN: IOLEN
0x420C4008 C   FIELD 17w02 IOLSRC: IOLSRC
0x420C4008 C   FIELD 24w01 IOHEN: IOHEN
0x420C4008 C   FIELD 25w02 IOHSRC: IOHSR
0x420C5000 A PERIPHERAL OTFDEC1
0x420C5000 B  REGISTER CR (rw): OTFDEC control register
0x420C5000 C   FIELD 00w01 ENC: Encryption mode bit
0x420C5010 B  REGISTER PRIVCFGR (rw): OTFDEC privileged access control configuration register
0x420C5010 C   FIELD 00w01 PRIV: Encryption mode bit
0x420C5020 B  REGISTER R1CFGR: OTFDEC region x configuration register
0x420C5020 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x420C5020 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x420C5020 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x420C5020 C   FIELD 04w02 MODE (rw): operating mode
0x420C5020 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x420C5020 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x420C5024 B  REGISTER R1STARTADDR (rw): OTFDEC region x start address register
0x420C5024 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x420C5028 B  REGISTER R1ENDADDR (rw): OTFDEC region x end address register
0x420C5028 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x420C502C B  REGISTER R1NONCER0 (rw): OTFDEC region x nonce register 0
0x420C502C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C5030 B  REGISTER R1NONCER1 (rw): OTFDEC region x nonce register 1
0x420C5030 C   FIELD 00w32 REGx_NONCE: Region nonce
0x420C5034 B  REGISTER R1KEYR0 (wo): OTFDEC region x key register 0
0x420C5034 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5038 B  REGISTER R1KEYR1 (wo): OTFDEC region x key register 1
0x420C5038 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C503C B  REGISTER R1KEYR2 (wo): OTFDEC region x key register 2
0x420C503C C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5040 B  REGISTER R1KEYR3 (wo): OTFDEC region x key register 3
0x420C5040 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5050 B  REGISTER R2CFGR: OTFDEC region x configuration register
0x420C5050 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x420C5050 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x420C5050 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x420C5050 C   FIELD 04w02 MODE (rw): operating mode
0x420C5050 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x420C5050 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x420C5054 B  REGISTER R2STARTADDR (rw): OTFDEC region x start address register
0x420C5054 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x420C5058 B  REGISTER R2ENDADDR (rw): OTFDEC region x end address register
0x420C5058 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x420C505C B  REGISTER R2NONCER0 (rw): OTFDEC region x nonce register 0
0x420C505C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C5060 B  REGISTER R2NONCER1 (rw): OTFDEC region x nonce register 1
0x420C5060 C   FIELD 00w32 REGx_NONCE: Region nonce, bits [63:32]REGx_NONCE[63:32]
0x420C5064 B  REGISTER R2KEYR0 (wo): OTFDEC region x key register 0
0x420C5064 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5068 B  REGISTER R2KEYR1 (wo): OTFDEC region x key register 1
0x420C5068 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C506C B  REGISTER R2KEYR2 (wo): OTFDEC region x key register 2
0x420C506C C   FIELD 00w32 REGx_KEY_: REGx_KEY
0x420C5070 B  REGISTER R2KEYR3 (wo): OTFDEC region x key register 3
0x420C5070 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5080 B  REGISTER R3CFGR: OTFDEC region x configuration register
0x420C5080 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x420C5080 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x420C5080 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x420C5080 C   FIELD 04w02 MODE (rw): operating mode
0x420C5080 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x420C5080 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x420C5084 B  REGISTER R3STARTADDR (rw): OTFDEC region x start address register
0x420C5084 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x420C5088 B  REGISTER R3ENDADDR (rw): OTFDEC region x end address register
0x420C5088 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x420C508C B  REGISTER R3NONCER0 (rw): OTFDEC region x nonce register 0
0x420C508C B  REGISTER R4ENDADDR (rw): OTFDEC region x end address register
0x420C508C C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x420C508C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C5090 B  REGISTER R3NONCER1 (rw): OTFDEC region x nonce register 1
0x420C5090 C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C5094 B  REGISTER R3KEYR0 (wo): OTFDEC region x key register 0
0x420C5094 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5098 B  REGISTER R3KEYR1 (wo): OTFDEC region x key register 1
0x420C5098 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C509C B  REGISTER R3KEYR2 (wo): OTFDEC region x key register 2
0x420C509C C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C50A0 B  REGISTER R3KEYR3 (wo): OTFDEC region x key register 3
0x420C50A0 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C50B0 B  REGISTER R4CFGR: OTFDEC region x configuration register
0x420C50B0 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x420C50B0 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x420C50B0 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x420C50B0 C   FIELD 04w02 MODE (rw): operating mode
0x420C50B0 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x420C50B0 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x420C50B4 B  REGISTER R4STARTADDR (rw): OTFDEC region x start address register
0x420C50B4 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x420C50BC B  REGISTER R4NONCER0 (rw): OTFDEC region x nonce register 0
0x420C50BC C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C50C0 B  REGISTER R4NONCER1 (rw): OTFDEC region x nonce register 1
0x420C50C0 C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C50C4 B  REGISTER R4KEYR0 (wo): OTFDEC region x key register 0
0x420C50C4 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C50C8 B  REGISTER R4KEYR1 (wo): OTFDEC region x key register 1
0x420C50C8 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C50CC B  REGISTER R4KEYR2 (wo): OTFDEC region x key register 2
0x420C50CC C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C50D0 B  REGISTER R4KEYR3 (wo): OTFDEC region x key register 3
0x420C50D0 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5300 B  REGISTER ISR (ro): OTFDEC interrupt status register
0x420C5300 C   FIELD 00w01 SEIF: Security Error Interrupt Flag status
0x420C5300 C   FIELD 01w01 XONEIF: Execute-only execute-Never Error Interrupt Flag status
0x420C5300 C   FIELD 02w01 KEIF: Key Error Interrupt Flag status
0x420C5304 B  REGISTER ICR (ro): OTFDEC interrupt clear register
0x420C5304 C   FIELD 00w01 SEIF: SEIF
0x420C5304 C   FIELD 01w01 XONEIF: Execute-only execute-Never Error Interrupt Flag clear
0x420C5304 C   FIELD 02w01 KEIF: KEIF
0x420C5308 B  REGISTER IER (rw): OTFDEC interrupt enable register
0x420C5308 C   FIELD 00w01 SEIE: Security Error Interrupt Enable
0x420C5308 C   FIELD 01w01 XONEIE: XONEIE
0x420C5308 C   FIELD 02w01 KEIE: KEIE
0x420C5400 A PERIPHERAL OTFDEC2
0x420C5400 B  REGISTER CR (rw): OTFDEC control register
0x420C5400 C   FIELD 00w01 ENC: Encryption mode bit
0x420C5410 B  REGISTER PRIVCFGR (rw): OTFDEC privileged access control configuration register
0x420C5410 C   FIELD 00w01 PRIV: Encryption mode bit
0x420C5420 B  REGISTER R1CFGR: OTFDEC region x configuration register
0x420C5420 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x420C5420 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x420C5420 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x420C5420 C   FIELD 04w02 MODE (rw): operating mode
0x420C5420 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x420C5420 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x420C5424 B  REGISTER R1STARTADDR (rw): OTFDEC region x start address register
0x420C5424 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x420C5428 B  REGISTER R1ENDADDR (rw): OTFDEC region x end address register
0x420C5428 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x420C542C B  REGISTER R1NONCER0 (rw): OTFDEC region x nonce register 0
0x420C542C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C5430 B  REGISTER R1NONCER1 (rw): OTFDEC region x nonce register 1
0x420C5430 C   FIELD 00w32 REGx_NONCE: Region nonce
0x420C5434 B  REGISTER R1KEYR0 (wo): OTFDEC region x key register 0
0x420C5434 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5438 B  REGISTER R1KEYR1 (wo): OTFDEC region x key register 1
0x420C5438 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C543C B  REGISTER R1KEYR2 (wo): OTFDEC region x key register 2
0x420C543C C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5440 B  REGISTER R1KEYR3 (wo): OTFDEC region x key register 3
0x420C5440 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5450 B  REGISTER R2CFGR: OTFDEC region x configuration register
0x420C5450 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x420C5450 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x420C5450 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x420C5450 C   FIELD 04w02 MODE (rw): operating mode
0x420C5450 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x420C5450 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x420C5454 B  REGISTER R2STARTADDR (rw): OTFDEC region x start address register
0x420C5454 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x420C5458 B  REGISTER R2ENDADDR (rw): OTFDEC region x end address register
0x420C5458 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x420C545C B  REGISTER R2NONCER0 (rw): OTFDEC region x nonce register 0
0x420C545C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C5460 B  REGISTER R2NONCER1 (rw): OTFDEC region x nonce register 1
0x420C5460 C   FIELD 00w32 REGx_NONCE: Region nonce, bits [63:32]REGx_NONCE[63:32]
0x420C5464 B  REGISTER R2KEYR0 (wo): OTFDEC region x key register 0
0x420C5464 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5468 B  REGISTER R2KEYR1 (wo): OTFDEC region x key register 1
0x420C5468 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C546C B  REGISTER R2KEYR2 (wo): OTFDEC region x key register 2
0x420C546C C   FIELD 00w32 REGx_KEY_: REGx_KEY
0x420C5470 B  REGISTER R2KEYR3 (wo): OTFDEC region x key register 3
0x420C5470 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5480 B  REGISTER R3CFGR: OTFDEC region x configuration register
0x420C5480 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x420C5480 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x420C5480 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x420C5480 C   FIELD 04w02 MODE (rw): operating mode
0x420C5480 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x420C5480 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x420C5484 B  REGISTER R3STARTADDR (rw): OTFDEC region x start address register
0x420C5484 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x420C5488 B  REGISTER R3ENDADDR (rw): OTFDEC region x end address register
0x420C5488 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x420C548C B  REGISTER R3NONCER0 (rw): OTFDEC region x nonce register 0
0x420C548C B  REGISTER R4ENDADDR (rw): OTFDEC region x end address register
0x420C548C C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x420C548C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C5490 B  REGISTER R3NONCER1 (rw): OTFDEC region x nonce register 1
0x420C5490 C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C5494 B  REGISTER R3KEYR0 (wo): OTFDEC region x key register 0
0x420C5494 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5498 B  REGISTER R3KEYR1 (wo): OTFDEC region x key register 1
0x420C5498 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C549C B  REGISTER R3KEYR2 (wo): OTFDEC region x key register 2
0x420C549C C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C54A0 B  REGISTER R3KEYR3 (wo): OTFDEC region x key register 3
0x420C54A0 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C54B0 B  REGISTER R4CFGR: OTFDEC region x configuration register
0x420C54B0 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x420C54B0 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x420C54B0 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x420C54B0 C   FIELD 04w02 MODE (rw): operating mode
0x420C54B0 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x420C54B0 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x420C54B4 B  REGISTER R4STARTADDR (rw): OTFDEC region x start address register
0x420C54B4 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x420C54BC B  REGISTER R4NONCER0 (rw): OTFDEC region x nonce register 0
0x420C54BC C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C54C0 B  REGISTER R4NONCER1 (rw): OTFDEC region x nonce register 1
0x420C54C0 C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x420C54C4 B  REGISTER R4KEYR0 (wo): OTFDEC region x key register 0
0x420C54C4 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C54C8 B  REGISTER R4KEYR1 (wo): OTFDEC region x key register 1
0x420C54C8 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C54CC B  REGISTER R4KEYR2 (wo): OTFDEC region x key register 2
0x420C54CC C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C54D0 B  REGISTER R4KEYR3 (wo): OTFDEC region x key register 3
0x420C54D0 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x420C5700 B  REGISTER ISR (ro): OTFDEC interrupt status register
0x420C5700 C   FIELD 00w01 SEIF: Security Error Interrupt Flag status
0x420C5700 C   FIELD 01w01 XONEIF: Execute-only execute-Never Error Interrupt Flag status
0x420C5700 C   FIELD 02w01 KEIF: Key Error Interrupt Flag status
0x420C5704 B  REGISTER ICR (ro): OTFDEC interrupt clear register
0x420C5704 C   FIELD 00w01 SEIF: SEIF
0x420C5704 C   FIELD 01w01 XONEIF: Execute-only execute-Never Error Interrupt Flag clear
0x420C5704 C   FIELD 02w01 KEIF: KEIF
0x420C5708 B  REGISTER IER (rw): OTFDEC interrupt enable register
0x420C5708 C   FIELD 00w01 SEIE: Security Error Interrupt Enable
0x420C5708 C   FIELD 01w01 XONEIE: XONEIE
0x420C5708 C   FIELD 02w01 KEIE: KEIE
0x420C8000 A PERIPHERAL SDMMC1
0x420C8000 B  REGISTER POWER (rw): power control register
0x420C8000 C   FIELD 00w02 PWRCTRL: SDMMC state control bits
0x420C8000 C   FIELD 02w01 VSWITCH: Voltage switch sequence start
0x420C8000 C   FIELD 03w01 VSWITCHEN: Voltage switch procedure enable
0x420C8000 C   FIELD 04w01 DIRPOL: Data and command direction signals polarity selection
0x420C8004 B  REGISTER CLKCR (rw): clock control register
0x420C8004 C   FIELD 00w10 CLKDIV: Clock divide factor
0x420C8004 C   FIELD 12w01 PWRSAV: Power saving configuration bit
0x420C8004 C   FIELD 14w02 WIDBUS: Wide bus mode enable bit
0x420C8004 C   FIELD 16w01 NEGEDGE: SDIO_CK dephasing selection bit
0x420C8004 C   FIELD 17w01 HWFC_EN: HW Flow Control enable
0x420C8004 C   FIELD 18w01 DDR: Data rate signaling selection
0x420C8004 C   FIELD 19w01 BUSSPEED: Bus speed mode selection between DS, HS, SDR12, SDR25 and SDR50,DDR50, SDR104
0x420C8004 C   FIELD 20w02 SELCLKRX: Receive clock selection
0x420C8008 B  REGISTER ARGR (rw): argument register
0x420C8008 C   FIELD 00w32 CMDARG: Command argument
0x420C800C B  REGISTER CMDR (rw): command register
0x420C800C C   FIELD 00w06 CMDINDEX: Command index
0x420C800C C   FIELD 06w01 CMDTRANS: The CPSM treats the command as a data transfer command, stops the interrupt period, and signals DataEnable to the DPSM
0x420C800C C   FIELD 07w01 CMDSTOP: The CPSM treats the command as a Stop Transmission command and signals Abort to the DPSM
0x420C800C C   FIELD 08w02 WAITRESP: Wait for response bits
0x420C800C C   FIELD 10w01 WAITINT: CPSM waits for interrupt request
0x420C800C C   FIELD 11w01 WAITPEND: CPSM Waits for ends of data transfer (CmdPend internal signal) from DPSM
0x420C800C C   FIELD 12w01 CPSMEN: Command path state machine (CPSM) Enable bit
0x420C800C C   FIELD 13w01 DTHOLD: Hold new data block transmission and reception in the DPSM
0x420C800C C   FIELD 14w01 BOOTMODE: Select the boot mode procedure to be used
0x420C800C C   FIELD 15w01 BOOTEN: Enable boot mode procedure
0x420C800C C   FIELD 16w01 CMDSUSPEND: The CPSM treats the command as a Suspend or Resume command and signals interrupt period start/end
0x420C8010 B  REGISTER RESPCMDR (ro): command response register
0x420C8010 C   FIELD 00w06 RESPCMD: Response command index
0x420C8014 B  REGISTER RESP1 (ro): response 1 register
0x420C8014 C   FIELD 00w32 CARDSTATUS1: CARDSTATUS1
0x420C8018 B  REGISTER RESP2 (ro): response 2 register
0x420C8018 C   FIELD 00w32 CARDSTATUS2: CARDSTATUS2
0x420C801C B  REGISTER RESP3 (ro): response 3 register
0x420C801C C   FIELD 00w32 CARDSTATUS3: CARDSTATUS3
0x420C8020 B  REGISTER RESP4 (ro): response 4 register
0x420C8020 C   FIELD 00w32 CARDSTATUS4: CARDSTATUS4
0x420C8024 B  REGISTER DTIMER (rw): data timer register
0x420C8024 C   FIELD 00w32 DATATIME: Data and R1b busy timeout period
0x420C8028 B  REGISTER DLENR (rw): data length register
0x420C8028 C   FIELD 00w25 DATALENGTH: Data length value
0x420C802C B  REGISTER DCTRL (rw): data control register
0x420C802C C   FIELD 00w01 DTEN: DTEN
0x420C802C C   FIELD 01w01 DTDIR: Data transfer direction selection
0x420C802C C   FIELD 02w02 DTMODE: Data transfer mode selection
0x420C802C C   FIELD 04w04 DBLOCKSIZE: Data block size
0x420C802C C   FIELD 08w01 RWSTART: Read wait start
0x420C802C C   FIELD 09w01 RWSTOP: Read wait stop
0x420C802C C   FIELD 10w01 RWMOD: Read wait mode
0x420C802C C   FIELD 11w01 SDIOEN: SD I/O enable functions
0x420C802C C   FIELD 12w01 BOOTACKEN: Enable the reception of the boot acknowledgment
0x420C802C C   FIELD 13w01 FIFORST: FIFO reset, will flush any remaining data
0x420C8030 B  REGISTER DCNTR (ro): data counter register
0x420C8030 C   FIELD 00w25 DATACOUNT: Data count value
0x420C8034 B  REGISTER STAR (ro): status register
0x420C8034 C   FIELD 00w01 CCRCFAIL: Command response received (CRC check failed)
0x420C8034 C   FIELD 01w01 DCRCFAIL: Data block sent/received (CRC check failed)
0x420C8034 C   FIELD 02w01 CTIMEOUT: Command response timeout
0x420C8034 C   FIELD 03w01 DTIMEOUT: Data timeout
0x420C8034 C   FIELD 04w01 TXUNDERR: Transmit FIFO underrun error (masked by hardware when IDMA is enabled)
0x420C8034 C   FIELD 05w01 RXOVERR: Received FIFO overrun error (masked by hardware when IDMA is enabled)
0x420C8034 C   FIELD 06w01 CMDREND: Command response received (CRC check passed, or no CRC)
0x420C8034 C   FIELD 07w01 CMDSENT: Command sent (no response required)
0x420C8034 C   FIELD 08w01 DATAEND: Data transfer ended correctly
0x420C8034 C   FIELD 09w01 DHOLD: Data transfer Hold
0x420C8034 C   FIELD 10w01 DBCKEND: Data block sent/received
0x420C8034 C   FIELD 11w01 DABORT: Data transfer aborted by CMD12
0x420C8034 C   FIELD 12w01 DPSMACT: Data path state machine active, i.e. not in Idle state
0x420C8034 C   FIELD 13w01 CPSMACT: Command path state machine active, i.e. not in Idle state
0x420C8034 C   FIELD 14w01 TXFIFOHE: Transmit FIFO half empty
0x420C8034 C   FIELD 15w01 RXFIFOHF: Receive FIFO half full
0x420C8034 C   FIELD 16w01 TXFIFOF: Transmit FIFO full
0x420C8034 C   FIELD 17w01 RXFIFOF: Receive FIFO full
0x420C8034 C   FIELD 18w01 TXFIFOE: Transmit FIFO empty
0x420C8034 C   FIELD 19w01 RXFIFOE: Receive FIFO empty
0x420C8034 C   FIELD 20w01 BUSYD0: Inverted value of SDMMC_D0 line (Busy), sampled at the end of a CMD response and a second time 2 SDMMC_CK cycles after the CMD response
0x420C8034 C   FIELD 21w01 BUSYD0END: end of SDMMC_D0 Busy following a CMD response detected
0x420C8034 C   FIELD 22w01 SDIOIT: SDIO interrupt received
0x420C8034 C   FIELD 23w01 ACKFAIL: Boot acknowledgment received (boot acknowledgment check fail)
0x420C8034 C   FIELD 24w01 ACKTIMEOUT: Boot acknowledgment timeout
0x420C8034 C   FIELD 25w01 VSWEND: Voltage switch critical timing section completion
0x420C8034 C   FIELD 26w01 CKSTOP: SDMMC_CK stopped in Voltage switch procedure
0x420C8034 C   FIELD 27w01 IDMATE: IDMA transfer error
0x420C8034 C   FIELD 28w01 IDMABTC: IDMA buffer transfer complete
0x420C8038 B  REGISTER ICR (rw): interrupt clear register
0x420C8038 C   FIELD 00w01 CCRCFAILC: CCRCFAIL flag clear bit
0x420C8038 C   FIELD 01w01 DCRCFAILC: DCRCFAIL flag clear bit
0x420C8038 C   FIELD 02w01 CTIMEOUTC: CTIMEOUT flag clear bit
0x420C8038 C   FIELD 03w01 DTIMEOUTC: DTIMEOUT flag clear bit
0x420C8038 C   FIELD 04w01 TXUNDERRC: TXUNDERR flag clear bit
0x420C8038 C   FIELD 05w01 RXOVERRC: RXOVERR flag clear bit
0x420C8038 C   FIELD 06w01 CMDRENDC: CMDREND flag clear bit
0x420C8038 C   FIELD 07w01 CMDSENTC: CMDSENT flag clear bit
0x420C8038 C   FIELD 08w01 DATAENDC: DATAEND flag clear bit
0x420C8038 C   FIELD 09w01 DHOLDC: DHOLD flag clear bit
0x420C8038 C   FIELD 10w01 DBCKENDC: DBCKEND flag clear bit
0x420C8038 C   FIELD 11w01 DABORTC: DABORT flag clear bit
0x420C8038 C   FIELD 21w01 BUSYD0ENDC: BUSYD0END flag clear bit
0x420C8038 C   FIELD 22w01 SDIOITC: SDIOIT flag clear bit
0x420C8038 C   FIELD 23w01 ACKFAILC: ACKFAIL flag clear bit
0x420C8038 C   FIELD 24w01 ACKTIMEOUTC: ACKTIMEOUT flag clear bit
0x420C8038 C   FIELD 25w01 VSWENDC: VSWEND flag clear bit
0x420C8038 C   FIELD 26w01 CKSTOPC: CKSTOP flag clear bit
0x420C8038 C   FIELD 27w01 IDMATEC: IDMA transfer error clear bit
0x420C8038 C   FIELD 28w01 IDMABTCC: IDMA buffer transfer complete clear bit
0x420C803C B  REGISTER MASKR (rw): mask register
0x420C803C C   FIELD 00w01 CCRCFAILIE: Command CRC fail interrupt enable
0x420C803C C   FIELD 01w01 DCRCFAILIE: Data CRC fail interrupt enable
0x420C803C C   FIELD 02w01 CTIMEOUTIE: Command timeout interrupt enable
0x420C803C C   FIELD 03w01 DTIMEOUTIE: Data timeout interrupt enable
0x420C803C C   FIELD 04w01 TXUNDERRIE: Tx FIFO underrun error interrupt enable
0x420C803C C   FIELD 05w01 RXOVERRIE: Rx FIFO overrun error interrupt enable
0x420C803C C   FIELD 06w01 CMDRENDIE: Command response received interrupt enable
0x420C803C C   FIELD 07w01 CMDSENTIE: Command sent interrupt enable
0x420C803C C   FIELD 08w01 DATAENDIE: Data end interrupt enable
0x420C803C C   FIELD 09w01 DHOLDIE: Data hold interrupt enable
0x420C803C C   FIELD 10w01 DBCKENDIE: Data block end interrupt enable
0x420C803C C   FIELD 11w01 DABORTIE: Data transfer aborted interrupt enable
0x420C803C C   FIELD 14w01 TXFIFOHEIE: Tx FIFO half empty interrupt enable
0x420C803C C   FIELD 15w01 RXFIFOHFIE: Rx FIFO half full interrupt enable
0x420C803C C   FIELD 17w01 RXFIFOFIE: Rx FIFO full interrupt enable
0x420C803C C   FIELD 18w01 TXFIFOEIE: Tx FIFO empty interrupt enable
0x420C803C C   FIELD 21w01 BUSYD0ENDIE: BUSYD0END interrupt enable
0x420C803C C   FIELD 22w01 SDIOITIE: SDIO mode interrupt received interrupt enable
0x420C803C C   FIELD 23w01 ACKFAILIE: Acknowledgment Fail interrupt enable
0x420C803C C   FIELD 24w01 ACKTIMEOUTIE: Acknowledgment timeout interrupt enable
0x420C803C C   FIELD 25w01 VSWENDIE: Voltage switch critical timing section completion interrupt enable
0x420C803C C   FIELD 26w01 CKSTOPIE: Voltage Switch clock stopped interrupt enable
0x420C803C C   FIELD 28w01 IDMABTCIE: IDMA buffer transfer complete interrupt enable
0x420C8040 B  REGISTER ACKTIMER (rw): acknowledgment timer register
0x420C8040 C   FIELD 00w25 ACKTIME: Boot acknowledgment timeout period
0x420C8050 B  REGISTER SDMMC_IDMACTRLR (rw): DMA control register
0x420C8050 C   FIELD 00w01 IDMAEN: IDMA enable This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0).
0x420C8050 C   FIELD 01w01 IDMABMODE: Buffer mode selection. This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0).
0x420C8054 B  REGISTER SDMMC_IDMABSIZER (rw): buffer size register
0x420C8054 C   FIELD 05w12 IDMABNDT: Number of bytes per buffer
0x420C8058 B  REGISTER SDMMC_IDMABASER (rw): buffer base address register
0x420C8058 C   FIELD 00w32 IDMABASE: Buffer memory base address bits [31:2], shall be word aligned (bit [1:0] are always 0 and read only)
0x420C8064 B  REGISTER SDMMC_IDMALAR (rw): linked list address register
0x420C8064 C   FIELD 02w14 IDMALA: Acknowledge linked list buffer ready
0x420C8064 C   FIELD 29w01 ABR: Acknowledge linked list buffer ready
0x420C8064 C   FIELD 30w01 ULS: Update SDMMC_IDMABSIZE from the next linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode and ULA = 1)
0x420C8064 C   FIELD 31w01 ULA: Update SDMMC_IDMALAR from linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode)
0x420C8068 B  REGISTER SDMMC_IDMABAR (rw): linked list memory base register
0x420C8068 C   FIELD 02w30 IDMABA: Word aligned Linked list memory base address
0x420C8080 B  REGISTER FIFOR0 (rw): data FIFO register 0
0x420C8080 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8084 B  REGISTER FIFOR1 (rw): data FIFO register 1
0x420C8084 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8088 B  REGISTER FIFOR2 (rw): data FIFO register 2
0x420C8088 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C808C B  REGISTER FIFOR3 (rw): data FIFO register 3
0x420C808C C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8090 B  REGISTER FIFOR4 (rw): data FIFO register 4
0x420C8090 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8094 B  REGISTER FIFOR5 (rw): data FIFO register 5
0x420C8094 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8098 B  REGISTER FIFOR6 (rw): data FIFO register 6
0x420C8098 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C809C B  REGISTER FIFOR7 (rw): data FIFO register 7
0x420C809C C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C80A0 B  REGISTER FIFOR8 (rw): data FIFO register 8
0x420C80A0 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C80A4 B  REGISTER FIFOR9 (rw): data FIFO register 9
0x420C80A4 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C80A8 B  REGISTER FIFOR10 (rw): data FIFO register 10
0x420C80A8 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C80AC B  REGISTER FIFOR11 (rw): data FIFO register 11
0x420C80AC C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C80B0 B  REGISTER FIFOR12 (rw): data FIFO register 12
0x420C80B0 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C80B4 B  REGISTER FIFOR13 (rw): data FIFO register 13
0x420C80B4 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C80B8 B  REGISTER FIFOR14 (rw): data FIFO register 14
0x420C80B8 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C80BC B  REGISTER FIFOR15 (rw): data FIFO register 15
0x420C80BC C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8400 A PERIPHERAL DLYBSD1
0x420C8400 B  REGISTER DLYB_CR (rw): control register
0x420C8400 C   FIELD 00w01 DEN: Operational amplifier Enable
0x420C8400 C   FIELD 01w01 SEN: OPALPM
0x420C8404 B  REGISTER DLYB_CFGR: configuration register
0x420C8404 C   FIELD 00w04 SEL (rw): SEL
0x420C8404 C   FIELD 08w07 UNIT (rw): UNIT
0x420C8404 C   FIELD 16w12 LNG (ro): LNG
0x420C8404 C   FIELD 31w01 LNGF (ro): LNGF
0x420C8800 A PERIPHERAL DLYBSD2
0x420C8800 B  REGISTER DLYB_CR (rw): control register
0x420C8800 C   FIELD 00w01 DEN: Operational amplifier Enable
0x420C8800 C   FIELD 01w01 SEN: OPALPM
0x420C8804 B  REGISTER DLYB_CFGR: configuration register
0x420C8804 C   FIELD 00w04 SEL (rw): SEL
0x420C8804 C   FIELD 08w07 UNIT (rw): UNIT
0x420C8804 C   FIELD 16w12 LNG (ro): LNG
0x420C8804 C   FIELD 31w01 LNGF (ro): LNGF
0x420C8C00 A PERIPHERAL SDMMC2
0x420C8C00 B  REGISTER POWER (rw): power control register
0x420C8C00 C   FIELD 00w02 PWRCTRL: SDMMC state control bits
0x420C8C00 C   FIELD 02w01 VSWITCH: Voltage switch sequence start
0x420C8C00 C   FIELD 03w01 VSWITCHEN: Voltage switch procedure enable
0x420C8C00 C   FIELD 04w01 DIRPOL: Data and command direction signals polarity selection
0x420C8C04 B  REGISTER CLKCR (rw): clock control register
0x420C8C04 C   FIELD 00w10 CLKDIV: Clock divide factor
0x420C8C04 C   FIELD 12w01 PWRSAV: Power saving configuration bit
0x420C8C04 C   FIELD 14w02 WIDBUS: Wide bus mode enable bit
0x420C8C04 C   FIELD 16w01 NEGEDGE: SDIO_CK dephasing selection bit
0x420C8C04 C   FIELD 17w01 HWFC_EN: HW Flow Control enable
0x420C8C04 C   FIELD 18w01 DDR: Data rate signaling selection
0x420C8C04 C   FIELD 19w01 BUSSPEED: Bus speed mode selection between DS, HS, SDR12, SDR25 and SDR50,DDR50, SDR104
0x420C8C04 C   FIELD 20w02 SELCLKRX: Receive clock selection
0x420C8C08 B  REGISTER ARGR (rw): argument register
0x420C8C08 C   FIELD 00w32 CMDARG: Command argument
0x420C8C0C B  REGISTER CMDR (rw): command register
0x420C8C0C C   FIELD 00w06 CMDINDEX: Command index
0x420C8C0C C   FIELD 06w01 CMDTRANS: The CPSM treats the command as a data transfer command, stops the interrupt period, and signals DataEnable to the DPSM
0x420C8C0C C   FIELD 07w01 CMDSTOP: The CPSM treats the command as a Stop Transmission command and signals Abort to the DPSM
0x420C8C0C C   FIELD 08w02 WAITRESP: Wait for response bits
0x420C8C0C C   FIELD 10w01 WAITINT: CPSM waits for interrupt request
0x420C8C0C C   FIELD 11w01 WAITPEND: CPSM Waits for ends of data transfer (CmdPend internal signal) from DPSM
0x420C8C0C C   FIELD 12w01 CPSMEN: Command path state machine (CPSM) Enable bit
0x420C8C0C C   FIELD 13w01 DTHOLD: Hold new data block transmission and reception in the DPSM
0x420C8C0C C   FIELD 14w01 BOOTMODE: Select the boot mode procedure to be used
0x420C8C0C C   FIELD 15w01 BOOTEN: Enable boot mode procedure
0x420C8C0C C   FIELD 16w01 CMDSUSPEND: The CPSM treats the command as a Suspend or Resume command and signals interrupt period start/end
0x420C8C10 B  REGISTER RESPCMDR (ro): command response register
0x420C8C10 C   FIELD 00w06 RESPCMD: Response command index
0x420C8C14 B  REGISTER RESP1 (ro): response 1 register
0x420C8C14 C   FIELD 00w32 CARDSTATUS1: CARDSTATUS1
0x420C8C18 B  REGISTER RESP2 (ro): response 2 register
0x420C8C18 C   FIELD 00w32 CARDSTATUS2: CARDSTATUS2
0x420C8C1C B  REGISTER RESP3 (ro): response 3 register
0x420C8C1C C   FIELD 00w32 CARDSTATUS3: CARDSTATUS3
0x420C8C20 B  REGISTER RESP4 (ro): response 4 register
0x420C8C20 C   FIELD 00w32 CARDSTATUS4: CARDSTATUS4
0x420C8C24 B  REGISTER DTIMER (rw): data timer register
0x420C8C24 C   FIELD 00w32 DATATIME: Data and R1b busy timeout period
0x420C8C28 B  REGISTER DLENR (rw): data length register
0x420C8C28 C   FIELD 00w25 DATALENGTH: Data length value
0x420C8C2C B  REGISTER DCTRL (rw): data control register
0x420C8C2C C   FIELD 00w01 DTEN: DTEN
0x420C8C2C C   FIELD 01w01 DTDIR: Data transfer direction selection
0x420C8C2C C   FIELD 02w02 DTMODE: Data transfer mode selection
0x420C8C2C C   FIELD 04w04 DBLOCKSIZE: Data block size
0x420C8C2C C   FIELD 08w01 RWSTART: Read wait start
0x420C8C2C C   FIELD 09w01 RWSTOP: Read wait stop
0x420C8C2C C   FIELD 10w01 RWMOD: Read wait mode
0x420C8C2C C   FIELD 11w01 SDIOEN: SD I/O enable functions
0x420C8C2C C   FIELD 12w01 BOOTACKEN: Enable the reception of the boot acknowledgment
0x420C8C2C C   FIELD 13w01 FIFORST: FIFO reset, will flush any remaining data
0x420C8C30 B  REGISTER DCNTR (ro): data counter register
0x420C8C30 C   FIELD 00w25 DATACOUNT: Data count value
0x420C8C34 B  REGISTER STAR (ro): status register
0x420C8C34 C   FIELD 00w01 CCRCFAIL: Command response received (CRC check failed)
0x420C8C34 C   FIELD 01w01 DCRCFAIL: Data block sent/received (CRC check failed)
0x420C8C34 C   FIELD 02w01 CTIMEOUT: Command response timeout
0x420C8C34 C   FIELD 03w01 DTIMEOUT: Data timeout
0x420C8C34 C   FIELD 04w01 TXUNDERR: Transmit FIFO underrun error (masked by hardware when IDMA is enabled)
0x420C8C34 C   FIELD 05w01 RXOVERR: Received FIFO overrun error (masked by hardware when IDMA is enabled)
0x420C8C34 C   FIELD 06w01 CMDREND: Command response received (CRC check passed, or no CRC)
0x420C8C34 C   FIELD 07w01 CMDSENT: Command sent (no response required)
0x420C8C34 C   FIELD 08w01 DATAEND: Data transfer ended correctly
0x420C8C34 C   FIELD 09w01 DHOLD: Data transfer Hold
0x420C8C34 C   FIELD 10w01 DBCKEND: Data block sent/received
0x420C8C34 C   FIELD 11w01 DABORT: Data transfer aborted by CMD12
0x420C8C34 C   FIELD 12w01 DPSMACT: Data path state machine active, i.e. not in Idle state
0x420C8C34 C   FIELD 13w01 CPSMACT: Command path state machine active, i.e. not in Idle state
0x420C8C34 C   FIELD 14w01 TXFIFOHE: Transmit FIFO half empty
0x420C8C34 C   FIELD 15w01 RXFIFOHF: Receive FIFO half full
0x420C8C34 C   FIELD 16w01 TXFIFOF: Transmit FIFO full
0x420C8C34 C   FIELD 17w01 RXFIFOF: Receive FIFO full
0x420C8C34 C   FIELD 18w01 TXFIFOE: Transmit FIFO empty
0x420C8C34 C   FIELD 19w01 RXFIFOE: Receive FIFO empty
0x420C8C34 C   FIELD 20w01 BUSYD0: Inverted value of SDMMC_D0 line (Busy), sampled at the end of a CMD response and a second time 2 SDMMC_CK cycles after the CMD response
0x420C8C34 C   FIELD 21w01 BUSYD0END: end of SDMMC_D0 Busy following a CMD response detected
0x420C8C34 C   FIELD 22w01 SDIOIT: SDIO interrupt received
0x420C8C34 C   FIELD 23w01 ACKFAIL: Boot acknowledgment received (boot acknowledgment check fail)
0x420C8C34 C   FIELD 24w01 ACKTIMEOUT: Boot acknowledgment timeout
0x420C8C34 C   FIELD 25w01 VSWEND: Voltage switch critical timing section completion
0x420C8C34 C   FIELD 26w01 CKSTOP: SDMMC_CK stopped in Voltage switch procedure
0x420C8C34 C   FIELD 27w01 IDMATE: IDMA transfer error
0x420C8C34 C   FIELD 28w01 IDMABTC: IDMA buffer transfer complete
0x420C8C38 B  REGISTER ICR (rw): interrupt clear register
0x420C8C38 C   FIELD 00w01 CCRCFAILC: CCRCFAIL flag clear bit
0x420C8C38 C   FIELD 01w01 DCRCFAILC: DCRCFAIL flag clear bit
0x420C8C38 C   FIELD 02w01 CTIMEOUTC: CTIMEOUT flag clear bit
0x420C8C38 C   FIELD 03w01 DTIMEOUTC: DTIMEOUT flag clear bit
0x420C8C38 C   FIELD 04w01 TXUNDERRC: TXUNDERR flag clear bit
0x420C8C38 C   FIELD 05w01 RXOVERRC: RXOVERR flag clear bit
0x420C8C38 C   FIELD 06w01 CMDRENDC: CMDREND flag clear bit
0x420C8C38 C   FIELD 07w01 CMDSENTC: CMDSENT flag clear bit
0x420C8C38 C   FIELD 08w01 DATAENDC: DATAEND flag clear bit
0x420C8C38 C   FIELD 09w01 DHOLDC: DHOLD flag clear bit
0x420C8C38 C   FIELD 10w01 DBCKENDC: DBCKEND flag clear bit
0x420C8C38 C   FIELD 11w01 DABORTC: DABORT flag clear bit
0x420C8C38 C   FIELD 21w01 BUSYD0ENDC: BUSYD0END flag clear bit
0x420C8C38 C   FIELD 22w01 SDIOITC: SDIOIT flag clear bit
0x420C8C38 C   FIELD 23w01 ACKFAILC: ACKFAIL flag clear bit
0x420C8C38 C   FIELD 24w01 ACKTIMEOUTC: ACKTIMEOUT flag clear bit
0x420C8C38 C   FIELD 25w01 VSWENDC: VSWEND flag clear bit
0x420C8C38 C   FIELD 26w01 CKSTOPC: CKSTOP flag clear bit
0x420C8C38 C   FIELD 27w01 IDMATEC: IDMA transfer error clear bit
0x420C8C38 C   FIELD 28w01 IDMABTCC: IDMA buffer transfer complete clear bit
0x420C8C3C B  REGISTER MASKR (rw): mask register
0x420C8C3C C   FIELD 00w01 CCRCFAILIE: Command CRC fail interrupt enable
0x420C8C3C C   FIELD 01w01 DCRCFAILIE: Data CRC fail interrupt enable
0x420C8C3C C   FIELD 02w01 CTIMEOUTIE: Command timeout interrupt enable
0x420C8C3C C   FIELD 03w01 DTIMEOUTIE: Data timeout interrupt enable
0x420C8C3C C   FIELD 04w01 TXUNDERRIE: Tx FIFO underrun error interrupt enable
0x420C8C3C C   FIELD 05w01 RXOVERRIE: Rx FIFO overrun error interrupt enable
0x420C8C3C C   FIELD 06w01 CMDRENDIE: Command response received interrupt enable
0x420C8C3C C   FIELD 07w01 CMDSENTIE: Command sent interrupt enable
0x420C8C3C C   FIELD 08w01 DATAENDIE: Data end interrupt enable
0x420C8C3C C   FIELD 09w01 DHOLDIE: Data hold interrupt enable
0x420C8C3C C   FIELD 10w01 DBCKENDIE: Data block end interrupt enable
0x420C8C3C C   FIELD 11w01 DABORTIE: Data transfer aborted interrupt enable
0x420C8C3C C   FIELD 14w01 TXFIFOHEIE: Tx FIFO half empty interrupt enable
0x420C8C3C C   FIELD 15w01 RXFIFOHFIE: Rx FIFO half full interrupt enable
0x420C8C3C C   FIELD 17w01 RXFIFOFIE: Rx FIFO full interrupt enable
0x420C8C3C C   FIELD 18w01 TXFIFOEIE: Tx FIFO empty interrupt enable
0x420C8C3C C   FIELD 21w01 BUSYD0ENDIE: BUSYD0END interrupt enable
0x420C8C3C C   FIELD 22w01 SDIOITIE: SDIO mode interrupt received interrupt enable
0x420C8C3C C   FIELD 23w01 ACKFAILIE: Acknowledgment Fail interrupt enable
0x420C8C3C C   FIELD 24w01 ACKTIMEOUTIE: Acknowledgment timeout interrupt enable
0x420C8C3C C   FIELD 25w01 VSWENDIE: Voltage switch critical timing section completion interrupt enable
0x420C8C3C C   FIELD 26w01 CKSTOPIE: Voltage Switch clock stopped interrupt enable
0x420C8C3C C   FIELD 28w01 IDMABTCIE: IDMA buffer transfer complete interrupt enable
0x420C8C40 B  REGISTER ACKTIMER (rw): acknowledgment timer register
0x420C8C40 C   FIELD 00w25 ACKTIME: Boot acknowledgment timeout period
0x420C8C50 B  REGISTER SDMMC_IDMACTRLR (rw): DMA control register
0x420C8C50 C   FIELD 00w01 IDMAEN: IDMA enable This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0).
0x420C8C50 C   FIELD 01w01 IDMABMODE: Buffer mode selection. This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0).
0x420C8C54 B  REGISTER SDMMC_IDMABSIZER (rw): buffer size register
0x420C8C54 C   FIELD 05w12 IDMABNDT: Number of bytes per buffer
0x420C8C58 B  REGISTER SDMMC_IDMABASER (rw): buffer base address register
0x420C8C58 C   FIELD 00w32 IDMABASE: Buffer memory base address bits [31:2], shall be word aligned (bit [1:0] are always 0 and read only)
0x420C8C64 B  REGISTER SDMMC_IDMALAR (rw): linked list address register
0x420C8C64 C   FIELD 02w14 IDMALA: Acknowledge linked list buffer ready
0x420C8C64 C   FIELD 29w01 ABR: Acknowledge linked list buffer ready
0x420C8C64 C   FIELD 30w01 ULS: Update SDMMC_IDMABSIZE from the next linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode and ULA = 1)
0x420C8C64 C   FIELD 31w01 ULA: Update SDMMC_IDMALAR from linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode)
0x420C8C68 B  REGISTER SDMMC_IDMABAR (rw): linked list memory base register
0x420C8C68 C   FIELD 02w30 IDMABA: Word aligned Linked list memory base address
0x420C8C80 B  REGISTER FIFOR0 (rw): data FIFO register 0
0x420C8C80 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8C84 B  REGISTER FIFOR1 (rw): data FIFO register 1
0x420C8C84 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8C88 B  REGISTER FIFOR2 (rw): data FIFO register 2
0x420C8C88 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8C8C B  REGISTER FIFOR3 (rw): data FIFO register 3
0x420C8C8C C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8C90 B  REGISTER FIFOR4 (rw): data FIFO register 4
0x420C8C90 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8C94 B  REGISTER FIFOR5 (rw): data FIFO register 5
0x420C8C94 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8C98 B  REGISTER FIFOR6 (rw): data FIFO register 6
0x420C8C98 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8C9C B  REGISTER FIFOR7 (rw): data FIFO register 7
0x420C8C9C C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8CA0 B  REGISTER FIFOR8 (rw): data FIFO register 8
0x420C8CA0 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8CA4 B  REGISTER FIFOR9 (rw): data FIFO register 9
0x420C8CA4 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8CA8 B  REGISTER FIFOR10 (rw): data FIFO register 10
0x420C8CA8 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8CAC B  REGISTER FIFOR11 (rw): data FIFO register 11
0x420C8CAC C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8CB0 B  REGISTER FIFOR12 (rw): data FIFO register 12
0x420C8CB0 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8CB4 B  REGISTER FIFOR13 (rw): data FIFO register 13
0x420C8CB4 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8CB8 B  REGISTER FIFOR14 (rw): data FIFO register 14
0x420C8CB8 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420C8CBC B  REGISTER FIFOR15 (rw): data FIFO register 15
0x420C8CBC C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x420CF000 A PERIPHERAL DLYBOS1
0x420CF000 B  REGISTER DLYB_CR (rw): control register
0x420CF000 C   FIELD 00w01 DEN: Operational amplifier Enable
0x420CF000 C   FIELD 01w01 SEN: OPALPM
0x420CF004 B  REGISTER DLYB_CFGR: configuration register
0x420CF004 C   FIELD 00w04 SEL (rw): SEL
0x420CF004 C   FIELD 08w07 UNIT (rw): UNIT
0x420CF004 C   FIELD 16w12 LNG (ro): LNG
0x420CF004 C   FIELD 31w01 LNGF (ro): LNGF
0x420CF400 A PERIPHERAL DLYBOS2
0x420CF400 B  REGISTER DLYB_CR (rw): control register
0x420CF400 C   FIELD 00w01 DEN: Operational amplifier Enable
0x420CF400 C   FIELD 01w01 SEN: OPALPM
0x420CF404 B  REGISTER DLYB_CFGR: configuration register
0x420CF404 C   FIELD 00w04 SEL (rw): SEL
0x420CF404 C   FIELD 08w07 UNIT (rw): UNIT
0x420CF404 C   FIELD 16w12 LNG (ro): LNG
0x420CF404 C   FIELD 31w01 LNGF (ro): LNGF
0x420D0400 A PERIPHERAL FMC
0x420D0400 B  REGISTER BCR1 (rw): SRAM/NOR-Flash chip-select control register for bank 1
0x420D0400 C   FIELD 00w01 MBKEN: Memory bank enable bit
0x420D0400 C   FIELD 01w01 MUXEN: Address/data multiplexing enable bit
0x420D0400 C   FIELD 02w02 MTYP: Memory type
0x420D0400 C   FIELD 04w02 MWID: Memory data bus width
0x420D0400 C   FIELD 06w01 FACCEN: Flash access enable
0x420D0400 C   FIELD 08w01 BURSTEN: Burst enable bit
0x420D0400 C   FIELD 09w01 WAITPOL: Wait signal polarity bit
0x420D0400 C   FIELD 11w01 WAITCFG: Wait timing configuration
0x420D0400 C   FIELD 12w01 WREN: Write enable bit
0x420D0400 C   FIELD 13w01 WAITEN: Wait enable bit
0x420D0400 C   FIELD 14w01 EXTMOD: Extended mode enable
0x420D0400 C   FIELD 15w01 ASYNCWAIT: Wait signal during asynchronous transfers
0x420D0400 C   FIELD 16w03 CPSIZE: CRAM Page Size
0x420D0400 C   FIELD 19w01 CBURSTRW: Write burst enable
0x420D0400 C   FIELD 20w01 CCLKEN: Continuous clock enable
0x420D0400 C   FIELD 21w01 WFDIS: Write FIFO disable
0x420D0400 C   FIELD 22w02 NBLSET: Byte lane (NBL) setup
0x420D0400 C   FIELD 31w01 FMCEN: FMC controller enable
0x420D0404 B  REGISTER BTR1 (rw): SRAM/NOR-Flash chip-select timing register for bank 1
0x420D0404 C   FIELD 00w04 ADDSET: Address setup phase duration
0x420D0404 C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x420D0404 C   FIELD 08w08 DATAST: Data-phase duration
0x420D0404 C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x420D0404 C   FIELD 20w04 CLKDIV: Clock divide ratio (for FMC_CLK signal)
0x420D0404 C   FIELD 24w04 DATLAT: Data latency for synchronous memory
0x420D0404 C   FIELD 28w02 ACCMOD: Access mode
0x420D0404 C   FIELD 30w02 DATAHLD: Data hold phase duration
0x420D0408 B  REGISTER BCR2 (rw): SRAM/NOR-Flash chip-select control register for bank 2
0x420D0408 C   FIELD 00w01 MBKEN: Memory bank enable bit
0x420D0408 C   FIELD 01w01 MUXEN: Address/data multiplexing enable bit
0x420D0408 C   FIELD 02w02 MTYP: Memory type
0x420D0408 C   FIELD 04w02 MWID: Memory data bus width
0x420D0408 C   FIELD 06w01 FACCEN: Flash access enable
0x420D0408 C   FIELD 08w01 BURSTEN: Burst enable bit
0x420D0408 C   FIELD 09w01 WAITPOL: Wait signal polarity bit
0x420D0408 C   FIELD 11w01 WAITCFG: Wait timing configuration
0x420D0408 C   FIELD 12w01 WREN: Write enable bit
0x420D0408 C   FIELD 13w01 WAITEN: Wait enable bit
0x420D0408 C   FIELD 14w01 EXTMOD: Extended mode enable
0x420D0408 C   FIELD 15w01 ASYNCWAIT: Wait signal during asynchronous transfers
0x420D0408 C   FIELD 16w03 CPSIZE: CRAM Page Size
0x420D0408 C   FIELD 19w01 CBURSTRW: Write burst enable
0x420D0408 C   FIELD 20w01 CCLKEN: Continuous clock enable
0x420D0408 C   FIELD 21w01 WFDIS: Write FIFO disable
0x420D0408 C   FIELD 22w02 NBLSET: Byte lane (NBL) setup
0x420D0408 C   FIELD 31w01 FMCEN: FMC controller enable
0x420D040C B  REGISTER BTR2 (rw): SRAM/NOR-Flash chip-select timing register for bank 2
0x420D040C C   FIELD 00w04 ADDSET: Address setup phase duration
0x420D040C C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x420D040C C   FIELD 08w08 DATAST: Data-phase duration
0x420D040C C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x420D040C C   FIELD 20w04 CLKDIV: Clock divide ratio (for FMC_CLK signal)
0x420D040C C   FIELD 24w04 DATLAT: Data latency for synchronous memory
0x420D040C C   FIELD 28w02 ACCMOD: Access mode
0x420D040C C   FIELD 30w02 DATAHLD: Data hold phase duration
0x420D0410 B  REGISTER BCR3 (rw): SRAM/NOR-Flash chip-select control register for bank 3
0x420D0410 C   FIELD 00w01 MBKEN: Memory bank enable bit
0x420D0410 C   FIELD 01w01 MUXEN: Address/data multiplexing enable bit
0x420D0410 C   FIELD 02w02 MTYP: Memory type
0x420D0410 C   FIELD 04w02 MWID: Memory data bus width
0x420D0410 C   FIELD 06w01 FACCEN: Flash access enable
0x420D0410 C   FIELD 08w01 BURSTEN: Burst enable bit
0x420D0410 C   FIELD 09w01 WAITPOL: Wait signal polarity bit
0x420D0410 C   FIELD 11w01 WAITCFG: Wait timing configuration
0x420D0410 C   FIELD 12w01 WREN: Write enable bit
0x420D0410 C   FIELD 13w01 WAITEN: Wait enable bit
0x420D0410 C   FIELD 14w01 EXTMOD: Extended mode enable
0x420D0410 C   FIELD 15w01 ASYNCWAIT: Wait signal during asynchronous transfers
0x420D0410 C   FIELD 16w03 CPSIZE: CRAM Page Size
0x420D0410 C   FIELD 19w01 CBURSTRW: Write burst enable
0x420D0410 C   FIELD 20w01 CCLKEN: Continuous clock enable
0x420D0410 C   FIELD 21w01 WFDIS: Write FIFO disable
0x420D0410 C   FIELD 22w02 NBLSET: Byte lane (NBL) setup
0x420D0410 C   FIELD 31w01 FMCEN: FMC controller enable
0x420D0414 B  REGISTER BTR3 (rw): SRAM/NOR-Flash chip-select timing register for bank 3
0x420D0414 C   FIELD 00w04 ADDSET: Address setup phase duration
0x420D0414 C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x420D0414 C   FIELD 08w08 DATAST: Data-phase duration
0x420D0414 C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x420D0414 C   FIELD 20w04 CLKDIV: Clock divide ratio (for FMC_CLK signal)
0x420D0414 C   FIELD 24w04 DATLAT: Data latency for synchronous memory
0x420D0414 C   FIELD 28w02 ACCMOD: Access mode
0x420D0414 C   FIELD 30w02 DATAHLD: Data hold phase duration
0x420D0418 B  REGISTER BCR4 (rw): SRAM/NOR-Flash chip-select control register for bank 4
0x420D0418 C   FIELD 00w01 MBKEN: Memory bank enable bit
0x420D0418 C   FIELD 01w01 MUXEN: Address/data multiplexing enable bit
0x420D0418 C   FIELD 02w02 MTYP: Memory type
0x420D0418 C   FIELD 04w02 MWID: Memory data bus width
0x420D0418 C   FIELD 06w01 FACCEN: Flash access enable
0x420D0418 C   FIELD 08w01 BURSTEN: Burst enable bit
0x420D0418 C   FIELD 09w01 WAITPOL: Wait signal polarity bit
0x420D0418 C   FIELD 11w01 WAITCFG: Wait timing configuration
0x420D0418 C   FIELD 12w01 WREN: Write enable bit
0x420D0418 C   FIELD 13w01 WAITEN: Wait enable bit
0x420D0418 C   FIELD 14w01 EXTMOD: Extended mode enable
0x420D0418 C   FIELD 15w01 ASYNCWAIT: Wait signal during asynchronous transfers
0x420D0418 C   FIELD 16w03 CPSIZE: CRAM Page Size
0x420D0418 C   FIELD 19w01 CBURSTRW: Write burst enable
0x420D0418 C   FIELD 20w01 CCLKEN: Continuous clock enable
0x420D0418 C   FIELD 21w01 WFDIS: Write FIFO disable
0x420D0418 C   FIELD 22w02 NBLSET: Byte lane (NBL) setup
0x420D0418 C   FIELD 31w01 FMCEN: FMC controller enable
0x420D041C B  REGISTER BTR4 (rw): SRAM/NOR-Flash chip-select timing register for bank 4
0x420D041C C   FIELD 00w04 ADDSET: Address setup phase duration
0x420D041C C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x420D041C C   FIELD 08w08 DATAST: Data-phase duration
0x420D041C C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x420D041C C   FIELD 20w04 CLKDIV: Clock divide ratio (for FMC_CLK signal)
0x420D041C C   FIELD 24w04 DATLAT: Data latency for synchronous memory
0x420D041C C   FIELD 28w02 ACCMOD: Access mode
0x420D041C C   FIELD 30w02 DATAHLD: Data hold phase duration
0x420D0420 B  REGISTER PCSCNTR (rw): PSRAM chip select counter register
0x420D0420 C   FIELD 00w16 CSCOUNT: Chip select counter
0x420D0420 C   FIELD 16w01 CNTB1EN: Counter Bank 1 enable
0x420D0420 C   FIELD 17w01 CNTB2EN: Counter Bank 2 enable
0x420D0420 C   FIELD 18w01 CNTB3EN: Counter Bank 3 enable
0x420D0420 C   FIELD 19w01 CNTB4EN: Counter Bank 4 enable
0x420D0480 B  REGISTER PCR (rw): NAND Flash control registers
0x420D0480 C   FIELD 01w01 PWAITEN: Wait feature enable bit
0x420D0480 C   FIELD 02w01 PBKEN: NAND Flash memory bank enable bit
0x420D0480 C   FIELD 03w01 PTYP: Memory type
0x420D0480 C   FIELD 04w02 PWID: Data bus width
0x420D0480 C   FIELD 06w01 ECCEN: ECC computation logic enable bit
0x420D0480 C   FIELD 09w04 TCLR: CLE to RE delay
0x420D0480 C   FIELD 13w03 TAR: ALE to RE delay
0x420D0480 C   FIELD 17w03 ECCPS: ECC page size
0x420D0484 B  REGISTER SR: status and interrupt register
0x420D0484 C   FIELD 00w01 IRS (rw): Interrupt rising edge status The flag is set by hardware and reset by software. Note: If this bit is written by software to 1 it will be set.
0x420D0484 C   FIELD 01w01 ILS (rw): Interrupt high-level status The flag is set by hardware and reset by software.
0x420D0484 C   FIELD 02w01 IFS (rw): Interrupt falling edge status The flag is set by hardware and reset by software. Note: If this bit is written by software to 1 it will be set.
0x420D0484 C   FIELD 03w01 IREN (rw): Interrupt rising edge detection enable bit
0x420D0484 C   FIELD 04w01 ILEN (rw): Interrupt high-level detection enable bit
0x420D0484 C   FIELD 05w01 IFEN (rw): Interrupt falling edge detection enable bit
0x420D0484 C   FIELD 06w01 FEMPT (ro): FIFO empty. Read-only bit that provides the status of the FIFO
0x420D0488 B  REGISTER PMEM (rw): Common memory space timing register
0x420D0488 C   FIELD 00w08 MEMSET: Common memory x setup time These bits define the number of KCK_FMC (+1) clock cycles to set up the address before the command assertion (NWE, NOE), for NAND Flash read or write access to common memory space:
0x420D0488 C   FIELD 08w08 MEMWAIT: Common memory wait time These bits define the minimum number of KCK_FMC (+1) clock cycles to assert the command (NWE, NOE), for NAND Flash read or write access to common memory space. The duration of command assertion is extended if the wait signal (NWAIT) is active (low) at the end of the programmed value of KCK_FMC:
0x420D0488 C   FIELD 16w08 MEMHOLD: Common memory hold time These bits define the number of KCK_FMC clock cycles for write accesses and KCK_FMC+1 clock cycles for read accesses during which the address is held (and data for write accesses) after the command is de-asserted (NWE, NOE), for NAND Flash read or write access to common memory space:
0x420D0488 C   FIELD 24w08 MEMHIZ: Common memory x data bus Hi-Z time These bits define the number of KCK_FMC clock cycles during which the data bus is kept Hi-Z after the start of a NAND Flash write access to common memory space. This is only valid for write transactions:
0x420D048C B  REGISTER PATT (rw): The FMC_PATT read/write register contains the timing information for NAND Flash memory bank. It is used for 8-bit accesses to the attribute memory space of the NAND Flash for the last address write access if the timing must differ from that of previous accesses (for Ready/Busy management, refer to Section20.8.5: NAND Flash prewait feature).
0x420D048C C   FIELD 00w08 ATTSET: Attribute memory setup time These bits define the number of KCK_FMC (+1) clock cycles to set up address before the command assertion (NWE, NOE), for NAND Flash read or write access to attribute memory space:
0x420D048C C   FIELD 08w08 ATTWAIT: Attribute memory wait time These bits define the minimum number of x KCK_FMC (+1) clock cycles to assert the command (NWE, NOE), for NAND Flash read or write access to attribute memory space. The duration for command assertion is extended if the wait signal (NWAIT) is active (low) at the end of the programmed value of KCK_FMC:
0x420D048C C   FIELD 16w08 ATTHOLD: Attribute memory hold time These bits define the number of KCK_FMC clock cycles during which the address is held (and data for write access) after the command de-assertion (NWE, NOE), for NAND Flash read or write access to attribute memory space:
0x420D048C C   FIELD 24w08 ATTHIZ: Attribute memory data bus Hi-Z time These bits define the number of KCK_FMC clock cycles during which the data bus is kept in Hi-Z after the start of a NAND Flash write access to attribute memory space on socket. Only valid for writ transaction:
0x420D0494 B  REGISTER ECCR (ro): This register contain the current error correction code value computed by the ECC computation modules of the FMC NAND controller. When the CPU reads/writes the data from a NAND Flash memory page at the correct address (refer to Section20.8.6: Computation of the error correction code (ECC) in NAND Flash memory), the data read/written from/to the NAND Flash memory are processed automatically by the ECC computation module. When X bytes have been read (according to the ECCPS field in the FMC_PCR registers), the CPU must read the computed ECC value from the FMC_ECC registers. It then verifies if these computed parity data are the same as the parity value recorded in the spare area, to determine whether a page is valid, and, to correct it otherwise. The FMC_ECCR register should be cleared after being read by setting the ECCEN bit to 0. To compute a new data block, the ECCEN bit must be set to 1.
0x420D0494 C   FIELD 00w32 ECC: ECC result This field contains the value computed by the ECC computation logic. Table167 describes the contents of these bit fields.
0x420D0504 B  REGISTER BWTR1 (rw): SRAM/NOR-Flash write timing registers 1
0x420D0504 C   FIELD 00w04 ADDSET: Address setup phase duration
0x420D0504 C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x420D0504 C   FIELD 08w08 DATAST: Data-phase duration
0x420D0504 C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x420D0504 C   FIELD 28w02 ACCMOD: Access mode
0x420D0504 C   FIELD 30w02 DATAHLD: Data hold phase duration
0x420D050C B  REGISTER BWTR2 (rw): SRAM/NOR-Flash write timing registers 2
0x420D050C C   FIELD 00w04 ADDSET: Address setup phase duration
0x420D050C C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x420D050C C   FIELD 08w08 DATAST: Data-phase duration
0x420D050C C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x420D050C C   FIELD 28w02 ACCMOD: Access mode
0x420D050C C   FIELD 30w02 DATAHLD: Data hold phase duration
0x420D0514 B  REGISTER BWTR3 (rw): SRAM/NOR-Flash write timing registers 3
0x420D0514 C   FIELD 00w04 ADDSET: Address setup phase duration
0x420D0514 C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x420D0514 C   FIELD 08w08 DATAST: Data-phase duration
0x420D0514 C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x420D0514 C   FIELD 28w02 ACCMOD: Access mode
0x420D0514 C   FIELD 30w02 DATAHLD: Data hold phase duration
0x420D051C B  REGISTER BWTR4 (rw): SRAM/NOR-Flash write timing registers 4
0x420D051C C   FIELD 00w04 ADDSET: Address setup phase duration
0x420D051C C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x420D051C C   FIELD 08w08 DATAST: Data-phase duration
0x420D051C C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x420D051C C   FIELD 28w02 ACCMOD: Access mode
0x420D051C C   FIELD 30w02 DATAHLD: Data hold phase duration
0x420D1400 A PERIPHERAL OCTOSPI1
0x420D1400 B  REGISTER CR (rw): control register
0x420D1400 C   FIELD 00w01 EN: Enable
0x420D1400 C   FIELD 01w01 ABORT: Abort request
0x420D1400 C   FIELD 02w01 DMAEN: DMA enable
0x420D1400 C   FIELD 03w01 TCEN: Timeout counter enable
0x420D1400 C   FIELD 06w01 DQM: Dual-quad mode
0x420D1400 C   FIELD 07w01 FSEL: FLASH memory selection
0x420D1400 C   FIELD 08w05 FTHRES: IFO threshold level
0x420D1400 C   FIELD 16w01 TEIE: Transfer error interrupt enable
0x420D1400 C   FIELD 17w01 TCIE: Transfer complete interrupt enable
0x420D1400 C   FIELD 18w01 FTIE: FIFO threshold interrupt enable
0x420D1400 C   FIELD 19w01 SMIE: Status match interrupt enable
0x420D1400 C   FIELD 20w01 TOIE: TimeOut interrupt enable
0x420D1400 C   FIELD 22w01 APMS: Automatic poll mode stop
0x420D1400 C   FIELD 23w01 PMM: Polling match mode
0x420D1400 C   FIELD 28w02 FMODE: Functional mode
0x420D1408 B  REGISTER DCR1 (rw): device configuration register 1
0x420D1408 C   FIELD 00w01 CKMODE: Mode 0 / mode 3
0x420D1408 C   FIELD 01w01 FRCK: Free running clock
0x420D1408 C   FIELD 03w01 DLYBYP: Delay block bypass
0x420D1408 C   FIELD 08w06 CSHT: Chip-select high time
0x420D1408 C   FIELD 16w05 DEVSIZE: Device size
0x420D1408 C   FIELD 24w03 MTYP: Memory type
0x420D140C B  REGISTER DCR2 (rw): device configuration register 2
0x420D140C C   FIELD 00w08 PRESCALER: Clock prescaler
0x420D140C C   FIELD 16w03 WRAPSIZE: Wrap size
0x420D1410 B  REGISTER DCR3 (rw): device configuration register 3
0x420D1410 C   FIELD 00w08 MAXTRAN: Maximum transfer
0x420D1410 C   FIELD 16w05 CSBOUND: CS boundary
0x420D1414 B  REGISTER DCR4 (rw): DCR4
0x420D1414 C   FIELD 00w32 REFRESH: Refresh rate
0x420D1420 B  REGISTER SR (ro): status register
0x420D1420 C   FIELD 00w01 TEF: Transfer error flag
0x420D1420 C   FIELD 01w01 TCF: transfer complete flag
0x420D1420 C   FIELD 02w01 FTF: FIFO threshold flag
0x420D1420 C   FIELD 03w01 SMF: status match flag
0x420D1420 C   FIELD 04w01 TOF: timeout flag
0x420D1420 C   FIELD 05w01 BUSY: BUSY
0x420D1420 C   FIELD 08w06 FLEVEL: FIFO level
0x420D1424 B  REGISTER FCR (wo): flag clear register
0x420D1424 C   FIELD 00w01 CTEF: Clear Transfer error flag
0x420D1424 C   FIELD 01w01 CTCF: Clear transfer complete flag
0x420D1424 C   FIELD 03w01 CSMF: Clear status match flag
0x420D1424 C   FIELD 04w01 CTOF: Clear timeout flag
0x420D1440 B  REGISTER DLR (rw): data length register
0x420D1440 C   FIELD 00w32 DL: Data length
0x420D1448 B  REGISTER AR (rw): address register
0x420D1448 C   FIELD 00w32 ADDRESS: ADDRESS
0x420D1450 B  REGISTER DR (rw): data register
0x420D1450 C   FIELD 00w32 DATA: DATA
0x420D1480 B  REGISTER PSMKR (rw): polling status mask register
0x420D1480 C   FIELD 00w32 MASK: Status MASK
0x420D1488 B  REGISTER PSMAR (rw): polling status match register
0x420D1488 C   FIELD 00w32 MATCH: Status match
0x420D1490 B  REGISTER PIR (rw): polling interval register
0x420D1490 C   FIELD 00w16 INTERVAL: polling interval
0x420D1500 B  REGISTER CCR (rw): communication configuration register
0x420D1500 C   FIELD 00w03 IMODE: Instruction mode
0x420D1500 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x420D1500 C   FIELD 04w02 ISIZE: Instruction size
0x420D1500 C   FIELD 08w03 ADMODE: Address mode
0x420D1500 C   FIELD 11w01 ADDTR: Address double transfer rate
0x420D1500 C   FIELD 12w02 ADSIZE: Address size
0x420D1500 C   FIELD 16w03 ABMODE: Alternate byte mode
0x420D1500 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x420D1500 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x420D1500 C   FIELD 24w03 DMODE: Data mode
0x420D1500 C   FIELD 27w01 DDTR: Alternate bytes double transfer rate
0x420D1500 C   FIELD 29w01 DQSE: DQS enable
0x420D1500 C   FIELD 31w01 SIOO: Send instruction only once mode
0x420D1508 B  REGISTER TCR (rw): timing configuration register
0x420D1508 C   FIELD 00w05 DCYC: Number of dummy cycles
0x420D1508 C   FIELD 28w01 DHQC: Delay hold quarter cycle
0x420D1508 C   FIELD 30w01 SSHIFT: Sample shift
0x420D1510 B  REGISTER IR (rw): instruction register
0x420D1510 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x420D1520 B  REGISTER ABR (rw): alternate bytes register
0x420D1520 C   FIELD 00w32 ALTERNATE: Alternate bytes
0x420D1530 B  REGISTER LPTR (rw): low-power timeout register
0x420D1530 C   FIELD 00w16 TIMEOUT: Timeout period
0x420D1540 B  REGISTER WPCCR (rw): wrap communication configuration register
0x420D1540 C   FIELD 00w03 IMODE: Instruction mode
0x420D1540 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x420D1540 C   FIELD 04w02 ISIZE: Instruction size
0x420D1540 C   FIELD 08w03 ADMODE: Address mode
0x420D1540 C   FIELD 11w01 ADDTR: Address double transfer rate
0x420D1540 C   FIELD 12w02 ADSIZE: Address size
0x420D1540 C   FIELD 16w03 ABMODE: Alternate byte mode
0x420D1540 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x420D1540 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x420D1540 C   FIELD 24w03 DMODE: Data mode
0x420D1540 C   FIELD 27w01 DDTR: alternate bytes double transfer rate
0x420D1540 C   FIELD 29w01 DQSE: DQS enable
0x420D1548 B  REGISTER WPTCR (rw): wrap timing configuration register
0x420D1548 C   FIELD 00w05 DCYC: Number of dummy cycles
0x420D1548 C   FIELD 28w01 DHQC: Delay hold quarter cycle
0x420D1548 C   FIELD 30w01 SSHIFT: Sample shift
0x420D1550 B  REGISTER WPIR (rw): wrap instruction register
0x420D1550 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x420D1560 B  REGISTER WPABR (rw): wrap alternate bytes register
0x420D1560 C   FIELD 00w32 ALTERNATE: Alternate bytes
0x420D1580 B  REGISTER WCCR (rw): write communication configuration register
0x420D1580 C   FIELD 00w03 IMODE: Instruction mode
0x420D1580 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x420D1580 C   FIELD 04w02 ISIZE: Instruction size
0x420D1580 C   FIELD 08w03 ADMODE: Address mode
0x420D1580 C   FIELD 11w01 ADDTR: Address double transfer rate
0x420D1580 C   FIELD 12w02 ADSIZE: Address size
0x420D1580 C   FIELD 16w03 ABMODE: Alternate byte mode
0x420D1580 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x420D1580 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x420D1580 C   FIELD 24w03 DMODE: Data mode
0x420D1580 C   FIELD 27w01 DDTR: alternate bytes double transfer rate
0x420D1580 C   FIELD 29w01 DQSE: DQS enable
0x420D1588 B  REGISTER WTCR (rw): write timing configuration register
0x420D1588 C   FIELD 00w05 DCYC: Number of dummy cycles
0x420D1590 B  REGISTER WIR (rw): write instruction register
0x420D1590 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x420D15A0 B  REGISTER WABR (rw): write alternate bytes register
0x420D15A0 C   FIELD 00w32 ALTERNATE: ALTERNATE
0x420D1600 B  REGISTER HLCR (rw): HyperBus latency configuration register
0x420D1600 C   FIELD 00w01 LM: Latency mode
0x420D1600 C   FIELD 01w01 WZL: Write zero latency
0x420D1600 C   FIELD 08w08 TACC: Access time
0x420D1600 C   FIELD 16w08 TRWR: Read write recovery time
0x420D2400 A PERIPHERAL OCTOSPI2
0x420D2400 B  REGISTER CR (rw): control register
0x420D2400 C   FIELD 00w01 EN: Enable
0x420D2400 C   FIELD 01w01 ABORT: Abort request
0x420D2400 C   FIELD 02w01 DMAEN: DMA enable
0x420D2400 C   FIELD 03w01 TCEN: Timeout counter enable
0x420D2400 C   FIELD 06w01 DQM: Dual-quad mode
0x420D2400 C   FIELD 07w01 FSEL: FLASH memory selection
0x420D2400 C   FIELD 08w05 FTHRES: IFO threshold level
0x420D2400 C   FIELD 16w01 TEIE: Transfer error interrupt enable
0x420D2400 C   FIELD 17w01 TCIE: Transfer complete interrupt enable
0x420D2400 C   FIELD 18w01 FTIE: FIFO threshold interrupt enable
0x420D2400 C   FIELD 19w01 SMIE: Status match interrupt enable
0x420D2400 C   FIELD 20w01 TOIE: TimeOut interrupt enable
0x420D2400 C   FIELD 22w01 APMS: Automatic poll mode stop
0x420D2400 C   FIELD 23w01 PMM: Polling match mode
0x420D2400 C   FIELD 28w02 FMODE: Functional mode
0x420D2408 B  REGISTER DCR1 (rw): device configuration register 1
0x420D2408 C   FIELD 00w01 CKMODE: Mode 0 / mode 3
0x420D2408 C   FIELD 01w01 FRCK: Free running clock
0x420D2408 C   FIELD 03w01 DLYBYP: Delay block bypass
0x420D2408 C   FIELD 08w06 CSHT: Chip-select high time
0x420D2408 C   FIELD 16w05 DEVSIZE: Device size
0x420D2408 C   FIELD 24w03 MTYP: Memory type
0x420D240C B  REGISTER DCR2 (rw): device configuration register 2
0x420D240C C   FIELD 00w08 PRESCALER: Clock prescaler
0x420D240C C   FIELD 16w03 WRAPSIZE: Wrap size
0x420D2410 B  REGISTER DCR3 (rw): device configuration register 3
0x420D2410 C   FIELD 00w08 MAXTRAN: Maximum transfer
0x420D2410 C   FIELD 16w05 CSBOUND: CS boundary
0x420D2414 B  REGISTER DCR4 (rw): DCR4
0x420D2414 C   FIELD 00w32 REFRESH: Refresh rate
0x420D2420 B  REGISTER SR (ro): status register
0x420D2420 C   FIELD 00w01 TEF: Transfer error flag
0x420D2420 C   FIELD 01w01 TCF: transfer complete flag
0x420D2420 C   FIELD 02w01 FTF: FIFO threshold flag
0x420D2420 C   FIELD 03w01 SMF: status match flag
0x420D2420 C   FIELD 04w01 TOF: timeout flag
0x420D2420 C   FIELD 05w01 BUSY: BUSY
0x420D2420 C   FIELD 08w06 FLEVEL: FIFO level
0x420D2424 B  REGISTER FCR (wo): flag clear register
0x420D2424 C   FIELD 00w01 CTEF: Clear Transfer error flag
0x420D2424 C   FIELD 01w01 CTCF: Clear transfer complete flag
0x420D2424 C   FIELD 03w01 CSMF: Clear status match flag
0x420D2424 C   FIELD 04w01 CTOF: Clear timeout flag
0x420D2440 B  REGISTER DLR (rw): data length register
0x420D2440 C   FIELD 00w32 DL: Data length
0x420D2448 B  REGISTER AR (rw): address register
0x420D2448 C   FIELD 00w32 ADDRESS: ADDRESS
0x420D2450 B  REGISTER DR (rw): data register
0x420D2450 C   FIELD 00w32 DATA: DATA
0x420D2480 B  REGISTER PSMKR (rw): polling status mask register
0x420D2480 C   FIELD 00w32 MASK: Status MASK
0x420D2488 B  REGISTER PSMAR (rw): polling status match register
0x420D2488 C   FIELD 00w32 MATCH: Status match
0x420D2490 B  REGISTER PIR (rw): polling interval register
0x420D2490 C   FIELD 00w16 INTERVAL: polling interval
0x420D2500 B  REGISTER CCR (rw): communication configuration register
0x420D2500 C   FIELD 00w03 IMODE: Instruction mode
0x420D2500 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x420D2500 C   FIELD 04w02 ISIZE: Instruction size
0x420D2500 C   FIELD 08w03 ADMODE: Address mode
0x420D2500 C   FIELD 11w01 ADDTR: Address double transfer rate
0x420D2500 C   FIELD 12w02 ADSIZE: Address size
0x420D2500 C   FIELD 16w03 ABMODE: Alternate byte mode
0x420D2500 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x420D2500 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x420D2500 C   FIELD 24w03 DMODE: Data mode
0x420D2500 C   FIELD 27w01 DDTR: Alternate bytes double transfer rate
0x420D2500 C   FIELD 29w01 DQSE: DQS enable
0x420D2500 C   FIELD 31w01 SIOO: Send instruction only once mode
0x420D2508 B  REGISTER TCR (rw): timing configuration register
0x420D2508 C   FIELD 00w05 DCYC: Number of dummy cycles
0x420D2508 C   FIELD 28w01 DHQC: Delay hold quarter cycle
0x420D2508 C   FIELD 30w01 SSHIFT: Sample shift
0x420D2510 B  REGISTER IR (rw): instruction register
0x420D2510 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x420D2520 B  REGISTER ABR (rw): alternate bytes register
0x420D2520 C   FIELD 00w32 ALTERNATE: Alternate bytes
0x420D2530 B  REGISTER LPTR (rw): low-power timeout register
0x420D2530 C   FIELD 00w16 TIMEOUT: Timeout period
0x420D2540 B  REGISTER WPCCR (rw): wrap communication configuration register
0x420D2540 C   FIELD 00w03 IMODE: Instruction mode
0x420D2540 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x420D2540 C   FIELD 04w02 ISIZE: Instruction size
0x420D2540 C   FIELD 08w03 ADMODE: Address mode
0x420D2540 C   FIELD 11w01 ADDTR: Address double transfer rate
0x420D2540 C   FIELD 12w02 ADSIZE: Address size
0x420D2540 C   FIELD 16w03 ABMODE: Alternate byte mode
0x420D2540 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x420D2540 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x420D2540 C   FIELD 24w03 DMODE: Data mode
0x420D2540 C   FIELD 27w01 DDTR: alternate bytes double transfer rate
0x420D2540 C   FIELD 29w01 DQSE: DQS enable
0x420D2548 B  REGISTER WPTCR (rw): wrap timing configuration register
0x420D2548 C   FIELD 00w05 DCYC: Number of dummy cycles
0x420D2548 C   FIELD 28w01 DHQC: Delay hold quarter cycle
0x420D2548 C   FIELD 30w01 SSHIFT: Sample shift
0x420D2550 B  REGISTER WPIR (rw): wrap instruction register
0x420D2550 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x420D2560 B  REGISTER WPABR (rw): wrap alternate bytes register
0x420D2560 C   FIELD 00w32 ALTERNATE: Alternate bytes
0x420D2580 B  REGISTER WCCR (rw): write communication configuration register
0x420D2580 C   FIELD 00w03 IMODE: Instruction mode
0x420D2580 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x420D2580 C   FIELD 04w02 ISIZE: Instruction size
0x420D2580 C   FIELD 08w03 ADMODE: Address mode
0x420D2580 C   FIELD 11w01 ADDTR: Address double transfer rate
0x420D2580 C   FIELD 12w02 ADSIZE: Address size
0x420D2580 C   FIELD 16w03 ABMODE: Alternate byte mode
0x420D2580 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x420D2580 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x420D2580 C   FIELD 24w03 DMODE: Data mode
0x420D2580 C   FIELD 27w01 DDTR: alternate bytes double transfer rate
0x420D2580 C   FIELD 29w01 DQSE: DQS enable
0x420D2588 B  REGISTER WTCR (rw): write timing configuration register
0x420D2588 C   FIELD 00w05 DCYC: Number of dummy cycles
0x420D2590 B  REGISTER WIR (rw): write instruction register
0x420D2590 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x420D25A0 B  REGISTER WABR (rw): write alternate bytes register
0x420D25A0 C   FIELD 00w32 ALTERNATE: ALTERNATE
0x420D2600 B  REGISTER HLCR (rw): HyperBus latency configuration register
0x420D2600 C   FIELD 00w01 LM: Latency mode
0x420D2600 C   FIELD 01w01 WZL: Write zero latency
0x420D2600 C   FIELD 08w08 TACC: Access time
0x420D2600 C   FIELD 16w08 TRWR: Read write recovery time
0x46000400 A PERIPHERAL SYSCFG
0x46000400 B  REGISTER SECCFGR (rw): SYSCFG secure configuration register
0x46000400 C   FIELD 00w01 SYSCFGSEC: SYSCFG clock control security
0x46000400 C   FIELD 01w01 CLASSBSEC: CLASSBSEC
0x46000400 C   FIELD 03w01 FPUSEC: FPUSEC
0x46000404 B  REGISTER CFGR1 (rw): configuration register 1
0x46000404 C   FIELD 08w01 BOOSTEN: I/O analog switch voltage booster enable
0x46000404 C   FIELD 09w01 ANASWVDD: GPIO analog switch control voltage selection
0x46000404 C   FIELD 16w01 PB6_FMP: PB6_FMP
0x46000404 C   FIELD 17w01 PB7_FMP: PB7_FMP
0x46000404 C   FIELD 18w01 PB8_FMP: PB8_FMP
0x46000404 C   FIELD 19w01 PB9_FMP: PB9_FMP
0x46000408 B  REGISTER FPUIMR (rw): FPU interrupt mask register
0x46000408 C   FIELD 00w06 FPU_IE: Floating point unit interrupts enable bits
0x4600040C B  REGISTER CNSLCKR (rw): SYSCFG CPU non-secure lock register
0x4600040C C   FIELD 00w01 LOCKNSVTOR: VTOR_NS register lock
0x4600040C C   FIELD 01w01 LOCKNSMPU: Non-secure MPU registers lock
0x46000410 B  REGISTER CSLOCKR (rw): SYSCFG CPU secure lock register
0x46000410 C   FIELD 00w01 LOCKSVTAIRCR: LOCKSVTAIRCR
0x46000410 C   FIELD 01w01 LOCKSMPU: LOCKSMPU
0x46000410 C   FIELD 02w01 LOCKSAU: LOCKSAU
0x46000414 B  REGISTER CFGR2 (rw): configuration register 2
0x46000414 C   FIELD 00w01 CLL: LOCKUP (hardfault) output enable bit
0x46000414 C   FIELD 01w01 SPL: SRAM ECC lock bit
0x46000414 C   FIELD 02w01 PVDL: PVD lock enable bit
0x46000414 C   FIELD 03w01 ECCL: ECC Lock
0x46000418 B  REGISTER MESR (rw): memory erase status register
0x46000418 C   FIELD 00w01 MCLR: MCLR
0x46000418 C   FIELD 16w01 IPMEE: IPMEE
0x4600041C B  REGISTER CCCSR: compensation cell control/status register
0x4600041C C   FIELD 00w01 EN1 (rw): EN1
0x4600041C C   FIELD 01w01 CS1 (rw): CS1
0x4600041C C   FIELD 02w01 EN2 (rw): EN2
0x4600041C C   FIELD 03w01 CS2 (rw): CS2
0x4600041C C   FIELD 08w01 RDY1 (ro): RDY1
0x4600041C C   FIELD 09w01 RDY2 (ro): RDY2
0x46000420 B  REGISTER CCVR (ro): compensation cell value register
0x46000420 C   FIELD 00w04 NCV1: NCV1
0x46000420 C   FIELD 04w04 PCV1: PCV1
0x46000420 C   FIELD 08w04 NCV2: NCV2
0x46000420 C   FIELD 12w04 PCV2: PCV2
0x46000424 B  REGISTER CCCR (rw): compensation cell code register
0x46000424 C   FIELD 00w04 NCC1: NCC1
0x46000424 C   FIELD 04w04 PCC1: PCC1
0x46000424 C   FIELD 08w04 NCC2: NCC2
0x46000424 C   FIELD 12w04 PCC2: PCC2
0x4600042C B  REGISTER RSSCMDR (rw): RSS command register
0x4600042C C   FIELD 00w16 RSSCMD: RSS commands
0x46000470 B  REGISTER UCPDR (rw): USB Type C and Power Delivery register
0x46000470 C   FIELD 00w01 CC1ENRXFILTER: CC1ENRXFILTER
0x46000470 C   FIELD 01w01 CC2ENRXFILTER: CC2ENRXFILTER
0x46002000 A PERIPHERAL SPI3
0x46002000 B  REGISTER SPI_CR1: 
0x46002000 C   FIELD 00w01 SPE (rw): serial peripheral enable This bit is set by and cleared by software. When SPE=1, SPI data transfer is enabled, SPI_CFG1 and SPI_CFG2 configuration registers, CRCPOLY, UDRDR, part of SPI_AUTOCR register and IOLOCK bit in the SPI_CR1 register are write protected. They can be changed only when SPE=0. When SPE=0 any SPI operation is stopped and disabled, all the pending requests of the events with enabled interrupt are blocked except the MODF interrupt request (but their pending still propagates the request of the spi_plck clock), the SS output is deactivated at master, the RDY signal keeps not ready status at slave, the internal state machine is reseted, all the FIFOs content is flushed, CRC calculation initialized, receive data register is read zero. SPE is cleared and cannot be set when MODF error flag is active.
0x46002000 C   FIELD 08w01 MASRX (rw): master automatic suspension in Receive mode This bit is set and cleared by software to control continuous SPI transfer in master receiver mode and automatic management in order to avoid overrun condition. When SPI communication is suspended by hardware automatically, it could happen that few bits of next frame are already clocked out due to internal synchronization delay. This is why, the automatic suspension is not quite reliable when size of data drops below 8 bits. In this case, a safe suspension can be achieved by combination with delay inserted between data frames applied when MIDI parameter keeps a non zero value; sum of data size and the interleaved SPI cycles should always produce interval at length of 8 SPI clock periods at minimum. After software clearing of the SUSP bit, the communication resumes and continues by subsequent bits transaction without any next constraint. Prior the SUSP bit is cleared, the user must release the RxFIFO space as much as possible by reading out all the data packets available at RxFIFO based on the RXP flag indication to prevent any subsequent suspension.
0x46002000 C   FIELD 09w01 CSTART (rw): master transfer start This bit can be set by software if SPI is enabled only to start an SPI communication. it is cleared by hardware when end of transfer (EOT) flag is set or when a transaction suspend request is accepted. In SPI mode, the bit is taken into account at master mode only. If transmission is enabled, communication starts or continues only if any data is available in the transmission FIFO.
0x46002000 C   FIELD 10w01 CSUSP (wo): master SUSPend request This bit reads as zero. In Master mode, when this bit is set by software, the CSTART bit is reset at the end of the current frame and SPI communication is suspended. The user has to check SUSP flag to check end of the frame transaction. The Master mode communication must be suspended (using this bit or keeping TXDR empty) before disabling the SPI or going to Low-power mode. After software suspension, SUSP flag has to be cleared and SPI disabled and re-enabled before the next transaction starts.
0x46002000 C   FIELD 11w01 HDDIR (rw): Rx/Tx direction at Half-duplex mode In Half-Duplex configuration the HDDIR bit establishes the Rx/Tx direction of the data transfer. This bit is ignored in Full-Duplex or any Simplex configuration.
0x46002000 C   FIELD 12w01 SSI (rw): internal SS signal input level This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the peripheral SS input internally and the I/O value of the SS pin is ignored.
0x46002000 C   FIELD 13w01 CRC33_17 (rw): 32-bit CRC polynomial configuration
0x46002000 C   FIELD 14w01 RCRCINI (rw): CRC calculation initialization pattern control for receiver
0x46002000 C   FIELD 15w01 TCRCINI (rw): CRC calculation initialization pattern control for transmitter
0x46002000 C   FIELD 16w01 IOLOCK (rw): locking the AF configuration of associated IOs This bit is set by software and cleared by hardware whenever the SPE bit is changed from 1 to 0. When this bit is set, SPI_CFG2 register content cannot be modified. This bit can be set when SPI is disabled only else it is write protected. It is cleared and cannot be set when MODF bit is set.
0x46002004 B  REGISTER SPI_CR2: 
0x46002004 C   FIELD 00w16 TSIZE (rw): number of data at current transfer When these bits are changed by software, the SPI has to be disabled. Endless transaction is initialized when CSTART is set while zero value is stored at TSIZE. TSIZE cannot be set to 0xFFFF respective 0x3FFF value when CRC is enabled. Note: TSIZE[15:10] bits are reserved at limited feature set instances and must be kept at reset value.
0x46002008 B  REGISTER SPI_CFG1: SPI configuration register 1
0x46002008 C   FIELD 00w05 DSIZE (rw): number of bits in at single SPI data frame ..... Note: Maximum data size can be limited up to 16-bits at some instances. At instances with limited set of features, DSIZE2:0] bits are reserved and must be kept at reset state. DSIZE[4:3] bits then control next settings of data size: 00xxx: 8-bits 01xxx: 16-bits 10xxx: 24-bits 11xxx: 32-bits.
0x46002008 C   FIELD 05w04 FTHLV (rw): FIFO threshold level Defines number of data frames at single data packet. Size of the packet should not exceed 1/2 of FIFO space. SPI interface is more efficient if configured packet sizes are aligned with data register access parallelism: If SPI data register is accessed as a 16-bit register and DSIZE ¤ 8 bit, better to select FTHLV = 2, 4, 6. If SPI data register is accessed as a 32-bit register and DSIZE> 8 bit, better to select FTHLV = 2, 4, 6, while if DSIZE ¤ 8bit, better to select FTHLV = 4, 8, 12. Note: FTHLV[3:2] bits are reserved at instances with limited set of features
0x46002008 C   FIELD 09w01 UDRCFG (rw): behavior of slave transmitter at underrun condition For more details see underrun condition.
0x46002008 C   FIELD 14w01 RXDMAEN (rw): Rx DMA stream enable
0x46002008 C   FIELD 15w01 TXDMAEN (rw): Tx DMA stream enable
0x46002008 C   FIELD 16w05 CRCSIZE (rw): length of CRC frame to be transacted and compared Most significant bits are taken into account from polynomial calculation when CRC result is transacted or compared. The length of the polynomial is not affected by this setting. ..... The value must be set equal or multiply of data size (DSIZE[4:0]). Its maximum size corresponds to DSIZE maximum at the instance. Note: The most significant bit at CRCSIZE bit field is reserved at the peripheral instances where data size is limited to 16-bit.
0x46002008 C   FIELD 22w01 CRCEN (rw): hardware CRC computation enable
0x46002008 C   FIELD 28w03 MBR (rw): master baud rate prescaler setting Note: MBR setting is considered at slave working at TI mode, too (see mode).
0x46002008 C   FIELD 31w01 BPASS (rw): bypass of the prescaler at master baud rate clock generator
0x4600200C B  REGISTER SPI_CFG2: SPI configuration register 2
0x4600200C C   FIELD 00w04 MSSI (rw): Master SS Idleness Specifies an extra delay, expressed in number of SPI clock cycle periods, inserted additionally between active edge of SS opening a session and the beginning of the first data frame of the session in Master mode when SSOE is enabled. ... Note: This feature is not supported in TI mode. To include the delay, the SPI must be disabled and re-enabled between sessions.
0x4600200C C   FIELD 04w04 MIDI (rw): master Inter-Data Idleness Specifies minimum time delay (expressed in SPI clock cycles periods) inserted between two consecutive data frames in Master mode. ... Note: This feature is not supported in TI mode.
0x4600200C C   FIELD 13w01 RDIOM (rw): RDY signal input/output management Note: When DSIZE at the SPI_CFG1 register is configured shorter than 8-bit, the RDIOM bit has to be kept at zero.
0x4600200C C   FIELD 14w01 RDIOP (rw): RDY signal input/output polarity
0x4600200C C   FIELD 15w01 IOSWP (rw): swap functionality of MISO and MOSI pins When this bit is set, the function of MISO and MOSI pins alternate functions are inverted. Original MISO pin becomes MOSI and original MOSI pin becomes MISO.
0x4600200C C   FIELD 17w02 COMM (rw): SPI Communication Mode
0x4600200C C   FIELD 19w03 SP (rw): serial protocol others: reserved, must not be used
0x4600200C C   FIELD 22w01 MASTER (rw): SPI Master
0x4600200C C   FIELD 23w01 LSBFRST (rw): data frame format
0x4600200C C   FIELD 24w01 CPHA (rw): clock phase
0x4600200C C   FIELD 25w01 CPOL (rw): clock polarity
0x4600200C C   FIELD 26w01 SSM (rw): software management of SS signal input When master uses hardware SS output (SSM=0 and SSOE=1) the SS signal input is forced to not active state internally to prevent master mode fault error.
0x4600200C C   FIELD 28w01 SSIOP (rw): SS input/output polarity
0x4600200C C   FIELD 29w01 SSOE (rw): SS output enable This bit is taken into account in Master mode only
0x4600200C C   FIELD 30w01 SSOM (rw): SS output management in Master mode This bit is taken into account in Master mode when SSOE is enabled. It allows the SS output to be configured between two consecutive data transfers.
0x4600200C C   FIELD 31w01 AFCNTR (rw): alternate function GPIOs control This bit is taken into account when SPE=0 only When SPI has to be disabled temporary for a specific configuration reason (e.g. CRC reset, CPHA or HDDIR change) setting this bit prevents any glitches on the associated outputs configured at alternate function mode by keeping them forced at state corresponding the current SPI configuration.
0x46002010 B  REGISTER SPI_IER: 
0x46002010 C   FIELD 00w01 RXPIE (rw): RXP interrupt enable
0x46002010 C   FIELD 01w01 TXPIE (rw): TXP interrupt enable TXPIE is set by software and cleared by TXTF flag set event.
0x46002010 C   FIELD 02w01 DXPIE (rw): DXP interrupt enabled DXPIE is set by software and cleared by TXTF flag set event.
0x46002010 C   FIELD 03w01 EOTIE (rw): EOT, SUSP and TXC interrupt enable
0x46002010 C   FIELD 04w01 TXTFIE (rw): TXTFIE interrupt enable
0x46002010 C   FIELD 05w01 UDRIE (rw): UDR interrupt enable
0x46002010 C   FIELD 06w01 OVRIE (rw): OVR interrupt enable
0x46002010 C   FIELD 07w01 CRCEIE (rw): CRC error interrupt enable
0x46002010 C   FIELD 08w01 TIFREIE (rw): TIFRE interrupt enable
0x46002010 C   FIELD 09w01 MODFIE (rw): mode Fault interrupt enable
0x46002014 B  REGISTER SPI_SR: 
0x46002014 C   FIELD 00w01 RXP (ro): Rx-Packet available RXP flag is changed by hardware. It monitors number of overall data currently available at RxFIFO if SPI is enabled. It has to be checked once a data packet is completely read out from RxFIFO.
0x46002014 C   FIELD 01w01 TXP (ro): Tx-Packet space available TXP flag is changed by hardware. It monitors overall space currently available at TxFIFO no matter if SPI is enabled or not. It has to be checked once a complete data packet is stored at TxFIFO.
0x46002014 C   FIELD 02w01 DXP (ro): duplex packet DXP flag is set whenever both TXP and RXP flags are set regardless SPI mode.
0x46002014 C   FIELD 03w01 EOT (ro): end of transfer EOT is set by hardware as soon as a full transfer is complete, that is when TSIZE number of data have been transmitted and/or received on the SPI. EOT is cleared by software write 1 to EOTC bit at SPI_IFCR. EOT flag triggers an interrupt if EOTIE bit is set. If DXP flag is used until TXTF flag is set and DXPIE is cleared, EOT can be used to download the last packets contained into RxFIFO in one-shot. In master, EOT event terminates the data transaction and handles SS output optionally. When CRC is applied, the EOT event is extended over the CRC frame transaction. To restart the internal state machine properly, SPI is strongly suggested to be disabled and re-enabled before next transaction starts despite its setting is not changed.
0x46002014 C   FIELD 04w01 TXTF (ro): transmission transfer filled TXTF is set by hardware as soon as all of the data packets in a transfer have been submitted for transmission by application software or DMA, that is when TSIZE number of data have been pushed into the TxFIFO. This bit is cleared by software write 1 to TXTFC bit at SPI_IFCR TXTF flag triggers an interrupt if TXTFIE bit is set. TXTF setting clears the TXPIE and DXPIE masks so to off-load application software from calculating when to disable TXP and DXP interrupts.
0x46002014 C   FIELD 05w01 UDR (ro): underrun at slave transmission mode This bit is cleared by writing 1 to UDRC bit at SPI_IFCR Note: UDR flag applies to Slave mode only
0x46002014 C   FIELD 06w01 OVR (ro): overrun This bit is cleared by writing 1 to OVRC bit at SPI_IFCR
0x46002014 C   FIELD 07w01 CRCE (ro): CRC error This bit is cleared by writing 1 to CRCEC bit at SPI_IFCR
0x46002014 C   FIELD 08w01 TIFRE (ro): TI frame format error This bit is cleared by writing 1 to TIFREC bit at SPI_IFCR
0x46002014 C   FIELD 09w01 MODF (ro): mode fault This bit is cleared by writing 1 to MODFC bit at SPI_IFCR
0x46002014 C   FIELD 11w01 SUSP (ro): suspension status In Master mode, SUSP is set by hardware either as soon as the current frame is completed after CSUSP request is done or at master automatic suspend receive mode (MASRX bit is set at SPI_CR1 register) on RxFIFO full condition. SUSP generates an interrupt when EOTIE is set. This bit has to be cleared prior SPI is disabled by writing 1 to SUSPC bit at SPI_IFCR.
0x46002014 C   FIELD 12w01 TXC (ro): TxFIFO transmission complete The flag behavior depends on TSIZE setting. When TSIZE=0 the TXC is changed by hardware exclusively and it raises each time the TxFIFO becomes empty and there is no activity on the bus. If TSIZE <>0 there is no specific reason to monitor TXC as it just copies the EOT flag value including its software clearing. The TXC generates an interrupt when EOTIE is set.
0x46002014 C   FIELD 13w02 RXPLVL (ro): RxFIFO packing level When RXWNE=0 and data size is set up to 16-bit, the value gives number of remaining data frames persisting at RxFIFO. Note: (*): Optional value when data size is set up to 8-bit only. When data size is greater than 16-bit, these bits are always read as 00. In that consequence, the single data frame received at the FIFO cannot be detected neither by RWNE nor by RXPLVL bits if data size is set from 17 to 24 bits. The user then must apply other methods like TSIZE>0 or FTHLV=0.
0x46002014 C   FIELD 15w01 RXWNE (ro): RxFIFO word not empty Note: This bit value does not depend on DSIZE setting and keeps together with RXPLVL[1:0] information about RxFIFO occupancy by residual data.
0x46002014 C   FIELD 16w16 CTSIZE (ro): number of data frames remaining in current TSIZE session The value is not quite reliable when traffic is ongoing on bus or during autonomous operation at low-power mode. Note: CTSIZE[15:0] bits are not available at instances with limited set of features
0x46002018 B  REGISTER SPI_IFCR: 
0x46002018 C   FIELD 03w01 EOTC (wo): end of transfer flag clear Writing a 1 into this bit clears EOT flag in the SPI_SR register
0x46002018 C   FIELD 04w01 TXTFC (wo): transmission transfer filled flag clear Writing a 1 into this bit clears TXTF flag in the SPI_SR register
0x46002018 C   FIELD 05w01 UDRC (wo): underrun flag clear Writing a 1 into this bit clears UDR flag in the SPI_SR register
0x46002018 C   FIELD 06w01 OVRC (wo): overrun flag clear Writing a 1 into this bit clears OVR flag in the SPI_SR register
0x46002018 C   FIELD 07w01 CRCEC (wo): CRC error flag clear Writing a 1 into this bit clears CRCE flag in the SPI_SR register
0x46002018 C   FIELD 08w01 TIFREC (wo): TI frame format error flag clear Writing a 1 into this bit clears TIFRE flag in the SPI_SR register
0x46002018 C   FIELD 09w01 MODFC (wo): mode fault flag clear Writing a 1 into this bit clears MODF flag in the SPI_SR register
0x46002018 C   FIELD 11w01 SUSPC (wo): SUSPend flag clear Writing a 1 into this bit clears SUSP flag in the SPI_SR register
0x4600201C B  REGISTER SPI_AUTOCR: 
0x4600201C C   FIELD 16w04 TRIGSEL (rw): trigger selection (refer ). ... Note: these bits can be written only when SPE = 0.
0x4600201C C   FIELD 20w01 TRIGPOL (rw): trigger polarity Note: This bit can be written only when SPE = 0.
0x4600201C C   FIELD 21w01 TRIGEN (rw): trigger of CSTART control enable Note: if user can't prevent trigger event during write, the TRIGEN has to be changed when SPI is disabled
0x46002020 B  REGISTER SPI_TXDR: 
0x46002020 C   FIELD 00w32 TXDR (wo): transmit data register The register serves as an interface with TxFIFO. A write to it accesses TxFIFO. Note: data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is written by single access. halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be written by single access. word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be written by single access. Write access of this register less than the configured data size is forbidden.
0x46002030 B  REGISTER SPI_RXDR: 
0x46002030 C   FIELD 00w32 RXDR (ro): receive data register The register serves as an interface with RxFIFO. When it is read, RxFIFO is accessed. Note: data is always right-aligned. Unused bits are read as zero when the register is read. Writing to the register is ignored. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is read by single access halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be read by single access word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be read by single access. Read access of this register less than the configured data size is forbidden.
0x46002040 B  REGISTER SPI_CRCPOLY: SPI polynomial register
0x46002040 C   FIELD 00w32 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The default 9-bit polynomial setting 0x107 corresponds to default 8-bit setting of DSIZE. It is compatible with setting 0x07 used at some other ST products with fixed length of the polynomial string where the most significant bit of the string is always kept hidden. Length of the polynomial is given by the most significant bit of the value stored at this register. It has to be set greater than DSIZE. CRC33_17 bit has to be set additionally with CRCPOLY register when DSIZE is configured to maximum 32-bit or 16-bit size and CRC is enabled (to keep polynomial length grater than data size). Note: CRCPOLY[31:16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x46002044 B  REGISTER SPI_TXCRC: 
0x46002044 C   FIELD 00w32 TXCRC (ro): CRC register for transmitter When CRC calculation is enabled, the TXCRC[31:0] bits contain the computed CRC value of the subsequently transmitted bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. Note: TXCRC[31-16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x46002048 B  REGISTER SPI_RXCRC: 
0x46002048 C   FIELD 00w32 RXCRC (ro): CRC register for receiver When CRC calculation is enabled, the RXCRC[31:0] bits contain the computed CRC value of the subsequently received bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. RXCRC[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x4600204C B  REGISTER SPI_UDRDR: SPI underrun data register
0x4600204C C   FIELD 00w32 UDRDR (rw): data at slave underrun condition The register is taken into account in Slave mode and at underrun condition only. The number of bits considered depends on DSIZE bit settings of the SPI_CFG1 register. Underrun condition handling depends on setting UDRCFG bit at SPI_CFG1 register. Note: UDRDR[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constraint when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x46002400 A PERIPHERAL LPUART1
0x46002400 B  REGISTER CR1 (rw): Control register 1
0x46002400 C   FIELD 00w01 UE: USART enable
0x46002400 C   FIELD 01w01 UESM: USART enable in Stop mode
0x46002400 C   FIELD 02w01 RE: Receiver enable
0x46002400 C   FIELD 03w01 TE: Transmitter enable
0x46002400 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x46002400 C   FIELD 05w01 RXFNEIE: RXFNEIE
0x46002400 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x46002400 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x46002400 C   FIELD 08w01 PEIE: PE interrupt enable
0x46002400 C   FIELD 09w01 PS: Parity selection
0x46002400 C   FIELD 10w01 PCE: Parity control enable
0x46002400 C   FIELD 11w01 WAKE: Receiver wakeup method
0x46002400 C   FIELD 12w01 M0: Word length
0x46002400 C   FIELD 13w01 MME: Mute mode enable
0x46002400 C   FIELD 14w01 CMIE: Character match interrupt enable
0x46002400 C   FIELD 16w05 DEDT: DEDT
0x46002400 C   FIELD 21w05 DEAT: DEAT
0x46002400 C   FIELD 28w01 M1: Word length
0x46002400 C   FIELD 29w01 FIFOEN: FIFOEN
0x46002400 C   FIELD 30w01 TXFEIE: TXFEIE
0x46002400 C   FIELD 31w01 RXFFIE: RXFFIE
0x46002404 B  REGISTER CR2 (rw): Control register 2
0x46002404 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x46002404 C   FIELD 12w02 STOP: STOP bits
0x46002404 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x46002404 C   FIELD 16w01 RXINV: RX pin active level inversion
0x46002404 C   FIELD 17w01 TXINV: TX pin active level inversion
0x46002404 C   FIELD 18w01 DATAINV: Binary data inversion
0x46002404 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x46002404 C   FIELD 24w08 ADD: Address of the LPUART node
0x46002408 B  REGISTER CR3 (rw): Control register 3
0x46002408 C   FIELD 00w01 EIE: Error interrupt enable
0x46002408 C   FIELD 03w01 HDSEL: Half-duplex selection
0x46002408 C   FIELD 06w01 DMAR: DMA enable receiver
0x46002408 C   FIELD 07w01 DMAT: DMA enable transmitter
0x46002408 C   FIELD 08w01 RTSE: RTS enable
0x46002408 C   FIELD 09w01 CTSE: CTS enable
0x46002408 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x46002408 C   FIELD 12w01 OVRDIS: Overrun Disable
0x46002408 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x46002408 C   FIELD 14w01 DEM: Driver enable mode
0x46002408 C   FIELD 15w01 DEP: Driver enable polarity selection
0x46002408 C   FIELD 23w01 TXFTIE: TXFTIE
0x46002408 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x46002408 C   FIELD 28w01 RXFTIE: RXFTIE
0x46002408 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x4600240C B  REGISTER BRR (rw): Baud rate register
0x4600240C C   FIELD 00w20 BRR: BRR
0x46002418 B  REGISTER RQR (wo): Request register
0x46002418 C   FIELD 01w01 SBKRQ: Send break request
0x46002418 C   FIELD 02w01 MMRQ: Mute mode request
0x46002418 C   FIELD 03w01 RXFRQ: Receive data flush request
0x46002418 C   FIELD 04w01 TXFRQ: TXFRQ
0x4600241C B  REGISTER ISR (ro): Interrupt and status register
0x4600241C C   FIELD 00w01 PE: PE
0x4600241C C   FIELD 01w01 FE: FE
0x4600241C C   FIELD 02w01 NE: NE
0x4600241C C   FIELD 03w01 ORE: ORE
0x4600241C C   FIELD 04w01 IDLE: IDLE
0x4600241C C   FIELD 05w01 RXFNE: RXFNE
0x4600241C C   FIELD 06w01 TC: TC
0x4600241C C   FIELD 07w01 TXFNF: TXFNF
0x4600241C C   FIELD 09w01 CTSIF: CTSIF
0x4600241C C   FIELD 10w01 CTS: CTS
0x4600241C C   FIELD 16w01 BUSY: BUSY
0x4600241C C   FIELD 17w01 CMF: CMF
0x4600241C C   FIELD 18w01 SBKF: SBKF
0x4600241C C   FIELD 19w01 RWU: RWU
0x4600241C C   FIELD 21w01 TEACK: TEACK
0x4600241C C   FIELD 22w01 REACK: REACK
0x4600241C C   FIELD 23w01 TXFE: TXFE
0x4600241C C   FIELD 24w01 RXFF: RXFF
0x4600241C C   FIELD 26w01 RXFT: RXFT
0x4600241C C   FIELD 27w01 TXFT: TXFT
0x46002420 B  REGISTER ICR (wo): Interrupt flag clear register
0x46002420 C   FIELD 00w01 PECF: Parity error clear flag
0x46002420 C   FIELD 01w01 FECF: Framing error clear flag
0x46002420 C   FIELD 02w01 NECF: Noise detected clear flag
0x46002420 C   FIELD 03w01 ORECF: Overrun error clear flag
0x46002420 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x46002420 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x46002420 C   FIELD 09w01 CTSCF: CTS clear flag
0x46002420 C   FIELD 17w01 CMCF: Character match clear flag
0x46002424 B  REGISTER RDR (ro): Receive data register
0x46002424 C   FIELD 00w09 RDR: Receive data value
0x46002428 B  REGISTER TDR (rw): Transmit data register
0x46002428 C   FIELD 00w09 TDR: Transmit data value
0x4600242C B  REGISTER PRESC (rw): prescaler register
0x4600242C C   FIELD 00w04 PRESCALER: PRESCALER
0x46002430 B  REGISTER AUTOCR (rw): Autonomous mode control register
0x46002430 C   FIELD 00w16 TDN: TDN
0x46002430 C   FIELD 16w01 TRIGPOL: TRIGPOL
0x46002430 C   FIELD 17w01 TRIGEN: TRIGEN
0x46002430 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x46002430 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x46002430 C   FIELD 31w01 TECLREN: TECLREN
0x46002800 A PERIPHERAL I2C3
0x46002800 B  REGISTER CR1 (rw): Control register 1
0x46002800 C   FIELD 00w01 PE: Peripheral enable
0x46002800 C   FIELD 01w01 TXIE: TX Interrupt enable
0x46002800 C   FIELD 02w01 RXIE: RX Interrupt enable
0x46002800 C   FIELD 03w01 ADDRIE: Address match interrupt enable (slave only)
0x46002800 C   FIELD 04w01 NACKIE: Not acknowledge received interrupt enable
0x46002800 C   FIELD 05w01 STOPIE: STOP detection Interrupt enable
0x46002800 C   FIELD 06w01 TCIE: Transfer Complete interrupt enable
0x46002800 C   FIELD 07w01 ERRIE: Error interrupts enable
0x46002800 C   FIELD 08w04 DNF: Digital noise filter
0x46002800 C   FIELD 12w01 ANFOFF: Analog noise filter OFF
0x46002800 C   FIELD 14w01 TXDMAEN: DMA transmission requests enable
0x46002800 C   FIELD 15w01 RXDMAEN: DMA reception requests enable
0x46002800 C   FIELD 16w01 SBC: Slave byte control
0x46002800 C   FIELD 17w01 NOSTRETCH: Clock stretching disable
0x46002800 C   FIELD 18w01 WUPEN: Wakeup from STOP enable
0x46002800 C   FIELD 19w01 GCEN: General call enable
0x46002800 C   FIELD 20w01 SMBHEN: SMBus Host address enable
0x46002800 C   FIELD 21w01 SMBDEN: SMBus Device Default address enable
0x46002800 C   FIELD 22w01 ALERTEN: SMBUS alert enable
0x46002800 C   FIELD 23w01 PECEN: PEC enable
0x46002800 C   FIELD 24w01 FMP: Fast-mode Plus 20 mA drive enable
0x46002800 C   FIELD 30w01 ADDRACLR: Address match flag (ADDR) automatic clear
0x46002800 C   FIELD 31w01 STOPFACLR: STOP detection flag (STOPF) automatic clear
0x46002804 B  REGISTER CR2 (rw): Control register 2
0x46002804 C   FIELD 00w10 SADD: Slave address bit (master mode)
0x46002804 C   FIELD 10w01 RD_WRN: Transfer direction (master mode)
0x46002804 C   FIELD 11w01 ADD10: 10-bit addressing mode (master mode)
0x46002804 C   FIELD 12w01 HEAD10R: 10-bit address header only read direction (master receiver mode)
0x46002804 C   FIELD 13w01 START: Start generation
0x46002804 C   FIELD 14w01 STOP: Stop generation (master mode)
0x46002804 C   FIELD 15w01 NACK: NACK generation (slave mode)
0x46002804 C   FIELD 16w08 NBYTES: Number of bytes
0x46002804 C   FIELD 24w01 RELOAD: NBYTES reload mode
0x46002804 C   FIELD 25w01 AUTOEND: Automatic end mode (master mode)
0x46002804 C   FIELD 26w01 PECBYTE: Packet error checking byte
0x46002808 B  REGISTER OAR1 (rw): Own address register 1
0x46002808 C   FIELD 00w10 OA1: Interface address
0x46002808 C   FIELD 10w01 OA1MODE: Own Address 1 10-bit mode
0x46002808 C   FIELD 15w01 OA1EN: Own Address 1 enable
0x4600280C B  REGISTER OAR2 (rw): Own address register 2
0x4600280C C   FIELD 01w07 OA2: Interface address
0x4600280C C   FIELD 08w03 OA2MSK: Own Address 2 masks
0x4600280C C   FIELD 15w01 OA2EN: Own Address 2 enable
0x46002810 B  REGISTER TIMINGR (rw): Timing register
0x46002810 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x46002810 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x46002810 C   FIELD 16w04 SDADEL: Data hold time
0x46002810 C   FIELD 20w04 SCLDEL: Data setup time
0x46002810 C   FIELD 28w04 PRESC: Timing prescaler
0x46002814 B  REGISTER TIMEOUTR (rw): Status register 1
0x46002814 C   FIELD 00w12 TIMEOUTA: Bus timeout A
0x46002814 C   FIELD 12w01 TIDLE: Idle clock timeout detection
0x46002814 C   FIELD 15w01 TIMOUTEN: Clock timeout enable
0x46002814 C   FIELD 16w12 TIMEOUTB: Bus timeout B
0x46002814 C   FIELD 31w01 TEXTEN: Extended clock timeout enable
0x46002818 B  REGISTER ISR: Interrupt and Status register
0x46002818 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x46002818 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x46002818 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x46002818 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x46002818 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x46002818 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x46002818 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x46002818 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x46002818 C   FIELD 08w01 BERR (ro): Bus error
0x46002818 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x46002818 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x46002818 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x46002818 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x46002818 C   FIELD 13w01 ALERT (ro): SMBus alert
0x46002818 C   FIELD 15w01 BUSY (ro): Bus busy
0x46002818 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode)
0x46002818 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x4600281C B  REGISTER ICR (wo): Interrupt clear register
0x4600281C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x4600281C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x4600281C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x4600281C C   FIELD 08w01 BERRCF: Bus error flag clear
0x4600281C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x4600281C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x4600281C C   FIELD 11w01 PECCF: PEC Error flag clear
0x4600281C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x4600281C C   FIELD 13w01 ALERTCF: Alert flag clear
0x46002820 B  REGISTER PECR (ro): PEC register
0x46002820 C   FIELD 00w08 PEC: Packet error checking register
0x46002824 B  REGISTER RXDR (ro): Receive data register
0x46002824 C   FIELD 00w08 RXDATA: 8-bit receive data
0x46002828 B  REGISTER TXDR (rw): Transmit data register
0x46002828 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x4600282C B  REGISTER I2C_AUTOCR (rw): I2C Autonomous mode control register
0x4600282C C   FIELD 06w01 TCDMAEN: DMA request enable on Transfer Complete event
0x4600282C C   FIELD 07w01 TCRDMAEN: DMA request enable on Transfer Complete Reload event
0x4600282C C   FIELD 16w04 TRIGSEL: Trigger selection
0x4600282C C   FIELD 20w01 TRIGPOL: Trigger polarity
0x4600282C C   FIELD 21w01 TRIGEN: Trigger enable
0x46004400 A PERIPHERAL LPTIM1
0x46004400 B  REGISTER ISR_intput (ro): Interrupt and Status Register (intput mode)
0x46004400 B  REGISTER ISR_output (ro): Interrupt and Status Register (output mode)
0x46004400 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x46004400 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x46004400 C   FIELD 01w01 ARRM: Autoreload match
0x46004400 C   FIELD 01w01 ARRM: Autoreload match
0x46004400 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x46004400 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x46004400 C   FIELD 03w01 CMP1OK: Compare register 1 update OK
0x46004400 C   FIELD 04w01 ARROK: Autoreload register update OK
0x46004400 C   FIELD 04w01 ARROK: Autoreload register update OK
0x46004400 C   FIELD 05w01 UP: Counter direction change down to up
0x46004400 C   FIELD 05w01 UP: Counter direction change down to up
0x46004400 C   FIELD 06w01 DOWN: Counter direction change up to down
0x46004400 C   FIELD 06w01 DOWN: Counter direction change up to down
0x46004400 C   FIELD 07w01 UE: LPTIM update event occurred
0x46004400 C   FIELD 07w01 UE: LPTIM update event occurred
0x46004400 C   FIELD 08w01 REPOK: Repetition register update Ok
0x46004400 C   FIELD 08w01 REPOK: Repetition register update Ok
0x46004400 C   FIELD 09w01 CC2IF: Capture 2 interrupt flag
0x46004400 C   FIELD 09w01 CC2IF: Compare 2 interrupt flag
0x46004400 C   FIELD 12w01 CC1OF: Capture 1 over-capture flag
0x46004400 C   FIELD 13w01 CC2OF: Capture 2 over-capture flag
0x46004400 C   FIELD 19w01 CMP2OK: Compare register 2 update OK
0x46004400 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x46004400 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x46004404 B  REGISTER ICR_intput (wo): Interrupt Clear Register (intput mode)
0x46004404 B  REGISTER ICR_output (wo): Interrupt Clear Register (output mode)
0x46004404 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004404 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004404 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x46004404 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x46004404 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x46004404 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x46004404 C   FIELD 03w01 CMP1OKCF: Compare register 1 update OK Clear Flag
0x46004404 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x46004404 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x46004404 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x46004404 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x46004404 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x46004404 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x46004404 C   FIELD 07w01 UECF: Update event clear flag
0x46004404 C   FIELD 07w01 UECF: Update event clear flag
0x46004404 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x46004404 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x46004404 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x46004404 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x46004404 C   FIELD 12w01 CC1OCF: Capture/compare 1 over-capture clear flag
0x46004404 C   FIELD 13w01 CC2OCF: Capture/compare 2 over-capture clear flag
0x46004404 C   FIELD 19w01 CMP2OKCF: Compare register 2 update OK clear flag
0x46004404 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x46004404 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x46004408 B  REGISTER DIER_intput (rw): LPTIM interrupt Enable Register (intput mode)
0x46004408 B  REGISTER DIER_output (rw): LPTIM interrupt Enable Register (output mode)
0x46004408 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004408 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004408 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x46004408 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x46004408 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x46004408 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x46004408 C   FIELD 03w01 CMP1OKIE: Compare register 1 update OK Interrupt Enable
0x46004408 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x46004408 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x46004408 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x46004408 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x46004408 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x46004408 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x46004408 C   FIELD 07w01 UEIE: Update event interrupt enable
0x46004408 C   FIELD 07w01 UEIE: Update event interrupt enable
0x46004408 C   FIELD 08w01 REPOKIE: REPOKIE
0x46004408 C   FIELD 08w01 REPOKIE: REPOKIE
0x46004408 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x46004408 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x46004408 C   FIELD 12w01 CC1OIE: Capture/compare 1 over-capture interrupt enable
0x46004408 C   FIELD 13w01 CC2OIE: Capture/compare 2 over-capture interrupt enable
0x46004408 C   FIELD 16w01 CC1DE: Capture/compare 1 DMA request enable
0x46004408 C   FIELD 19w01 CMP2OKIE: Compare register 2 update OK interrupt enable
0x46004408 C   FIELD 23w01 UEDE: Update event DMA request enable
0x46004408 C   FIELD 25w01 CC2DE: Capture/compare 2 DMA request enable
0x4600440C B  REGISTER CFGR (rw): Configuration Register
0x4600440C C   FIELD 00w01 CKSEL: Clock selector
0x4600440C C   FIELD 01w02 CKPOL: Clock Polarity
0x4600440C C   FIELD 03w02 CKFLT: Configurable digital filter for external clock
0x4600440C C   FIELD 06w02 TRGFLT: Configurable digital filter for trigger
0x4600440C C   FIELD 09w03 PRESC: Clock prescaler
0x4600440C C   FIELD 13w03 TRIGSEL: Trigger selector
0x4600440C C   FIELD 17w02 TRIGEN: Trigger enable and polarity
0x4600440C C   FIELD 19w01 TIMOUT: Timeout enable
0x4600440C C   FIELD 20w01 WAVE: Waveform shape
0x4600440C C   FIELD 21w01 WAVPOL: Waveform shape polarity
0x4600440C C   FIELD 22w01 PRELOAD: Registers update mode
0x4600440C C   FIELD 23w01 COUNTMODE: counter mode enabled
0x4600440C C   FIELD 24w01 ENC: Encoder mode enable
0x46004410 B  REGISTER CR (rw): Control Register
0x46004410 C   FIELD 00w01 ENABLE: LPTIM Enable
0x46004410 C   FIELD 01w01 SNGSTRT: LPTIM start in single mode
0x46004410 C   FIELD 02w01 CNTSTRT: Timer start in continuous mode
0x46004410 C   FIELD 03w01 COUNTRST: Counter reset
0x46004410 C   FIELD 04w01 RSTARE: Reset after read enable
0x46004414 B  REGISTER CCR1 (rw): Compare Register
0x46004414 C   FIELD 00w16 CCR1: Capture/compare 1 value
0x46004418 B  REGISTER ARR (rw): Autoreload Register
0x46004418 C   FIELD 00w16 ARR: Auto reload value
0x4600441C B  REGISTER CNT (ro): Counter Register
0x4600441C C   FIELD 00w16 CNT: Counter value
0x46004424 B  REGISTER CFGR2 (rw): LPTIM configuration register 2
0x46004424 C   FIELD 00w02 IN1SEL: LPTIM input 1 selection
0x46004424 C   FIELD 04w02 IN2SEL: LPTIM input 2 selection
0x46004424 C   FIELD 16w02 IC1SEL: LPTIM input capture 1 selection
0x46004424 C   FIELD 20w02 IC2SEL: LPTIM input capture 2 selection
0x46004428 B  REGISTER RCR (rw): LPTIM repetition register
0x46004428 C   FIELD 00w08 REP: Repetition register value
0x4600442C B  REGISTER CCMR1 (rw): LPTIM capture/compare mode register 1
0x4600442C C   FIELD 00w01 CC1SEL: Capture/compare 1 selection
0x4600442C C   FIELD 01w01 CC1E: Capture/compare 1 output enable
0x4600442C C   FIELD 02w02 CC1P: Capture/compare 1 output polarity
0x4600442C C   FIELD 08w02 IC1PSC: Input capture 1 prescaler
0x4600442C C   FIELD 12w02 IC1F: Input capture 1 filter
0x4600442C C   FIELD 16w01 CC2SEL: Capture/compare 2 selection
0x4600442C C   FIELD 17w01 CC2E: Capture/compare 2 output enable
0x4600442C C   FIELD 18w02 CC2P: Capture/compare 2 output polarity
0x4600442C C   FIELD 24w02 IC2PSC: Input capture 2 prescaler
0x4600442C C   FIELD 28w02 IC2F: Input capture 2 filter
0x46004434 B  REGISTER CCR2 (rw): LPTIM Compare Register 2
0x46004434 C   FIELD 00w16 CCR2: Capture/compare 2 value
0x460047EC B  REGISTER HWCFGR2 (ro): LPTIM peripheral hardware configuration register 2
0x460047EC C   FIELD 00w04 CFG1: peripheral hardware configuration 1
0x460047EC C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x460047EC C   FIELD 16w01 CFG3: peripheral hardware configuration 3
0x460047F0 B  REGISTER HWCFGR1 (ro): LPTIM peripheral hardware configuration register 1
0x460047F0 C   FIELD 00w08 CFG1: peripheral hardware configuration 1
0x460047F0 C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x460047F0 C   FIELD 16w04 CFG3: peripheral hardware configuration 3
0x460047F0 C   FIELD 24w08 CFG4: peripheral hardware configuration 4
0x46004800 A PERIPHERAL LPTIM3
0x46004800 B  REGISTER ISR_intput (ro): Interrupt and Status Register (intput mode)
0x46004800 B  REGISTER ISR_output (ro): Interrupt and Status Register (output mode)
0x46004800 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x46004800 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x46004800 C   FIELD 01w01 ARRM: Autoreload match
0x46004800 C   FIELD 01w01 ARRM: Autoreload match
0x46004800 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x46004800 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x46004800 C   FIELD 03w01 CMP1OK: Compare register 1 update OK
0x46004800 C   FIELD 04w01 ARROK: Autoreload register update OK
0x46004800 C   FIELD 04w01 ARROK: Autoreload register update OK
0x46004800 C   FIELD 05w01 UP: Counter direction change down to up
0x46004800 C   FIELD 05w01 UP: Counter direction change down to up
0x46004800 C   FIELD 06w01 DOWN: Counter direction change up to down
0x46004800 C   FIELD 06w01 DOWN: Counter direction change up to down
0x46004800 C   FIELD 07w01 UE: LPTIM update event occurred
0x46004800 C   FIELD 07w01 UE: LPTIM update event occurred
0x46004800 C   FIELD 08w01 REPOK: Repetition register update Ok
0x46004800 C   FIELD 08w01 REPOK: Repetition register update Ok
0x46004800 C   FIELD 09w01 CC2IF: Capture 2 interrupt flag
0x46004800 C   FIELD 09w01 CC2IF: Compare 2 interrupt flag
0x46004800 C   FIELD 12w01 CC1OF: Capture 1 over-capture flag
0x46004800 C   FIELD 13w01 CC2OF: Capture 2 over-capture flag
0x46004800 C   FIELD 19w01 CMP2OK: Compare register 2 update OK
0x46004800 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x46004800 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x46004804 B  REGISTER ICR_intput (wo): Interrupt Clear Register (intput mode)
0x46004804 B  REGISTER ICR_output (wo): Interrupt Clear Register (output mode)
0x46004804 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004804 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004804 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x46004804 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x46004804 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x46004804 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x46004804 C   FIELD 03w01 CMP1OKCF: Compare register 1 update OK Clear Flag
0x46004804 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x46004804 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x46004804 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x46004804 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x46004804 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x46004804 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x46004804 C   FIELD 07w01 UECF: Update event clear flag
0x46004804 C   FIELD 07w01 UECF: Update event clear flag
0x46004804 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x46004804 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x46004804 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x46004804 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x46004804 C   FIELD 12w01 CC1OCF: Capture/compare 1 over-capture clear flag
0x46004804 C   FIELD 13w01 CC2OCF: Capture/compare 2 over-capture clear flag
0x46004804 C   FIELD 19w01 CMP2OKCF: Compare register 2 update OK clear flag
0x46004804 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x46004804 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x46004808 B  REGISTER DIER_intput (rw): LPTIM interrupt Enable Register (intput mode)
0x46004808 B  REGISTER DIER_output (rw): LPTIM interrupt Enable Register (output mode)
0x46004808 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004808 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004808 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x46004808 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x46004808 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x46004808 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x46004808 C   FIELD 03w01 CMP1OKIE: Compare register 1 update OK Interrupt Enable
0x46004808 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x46004808 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x46004808 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x46004808 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x46004808 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x46004808 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x46004808 C   FIELD 07w01 UEIE: Update event interrupt enable
0x46004808 C   FIELD 07w01 UEIE: Update event interrupt enable
0x46004808 C   FIELD 08w01 REPOKIE: REPOKIE
0x46004808 C   FIELD 08w01 REPOKIE: REPOKIE
0x46004808 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x46004808 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x46004808 C   FIELD 12w01 CC1OIE: Capture/compare 1 over-capture interrupt enable
0x46004808 C   FIELD 13w01 CC2OIE: Capture/compare 2 over-capture interrupt enable
0x46004808 C   FIELD 16w01 CC1DE: Capture/compare 1 DMA request enable
0x46004808 C   FIELD 19w01 CMP2OKIE: Compare register 2 update OK interrupt enable
0x46004808 C   FIELD 23w01 UEDE: Update event DMA request enable
0x46004808 C   FIELD 25w01 CC2DE: Capture/compare 2 DMA request enable
0x4600480C B  REGISTER CFGR (rw): Configuration Register
0x4600480C C   FIELD 00w01 CKSEL: Clock selector
0x4600480C C   FIELD 01w02 CKPOL: Clock Polarity
0x4600480C C   FIELD 03w02 CKFLT: Configurable digital filter for external clock
0x4600480C C   FIELD 06w02 TRGFLT: Configurable digital filter for trigger
0x4600480C C   FIELD 09w03 PRESC: Clock prescaler
0x4600480C C   FIELD 13w03 TRIGSEL: Trigger selector
0x4600480C C   FIELD 17w02 TRIGEN: Trigger enable and polarity
0x4600480C C   FIELD 19w01 TIMOUT: Timeout enable
0x4600480C C   FIELD 20w01 WAVE: Waveform shape
0x4600480C C   FIELD 21w01 WAVPOL: Waveform shape polarity
0x4600480C C   FIELD 22w01 PRELOAD: Registers update mode
0x4600480C C   FIELD 23w01 COUNTMODE: counter mode enabled
0x4600480C C   FIELD 24w01 ENC: Encoder mode enable
0x46004810 B  REGISTER CR (rw): Control Register
0x46004810 C   FIELD 00w01 ENABLE: LPTIM Enable
0x46004810 C   FIELD 01w01 SNGSTRT: LPTIM start in single mode
0x46004810 C   FIELD 02w01 CNTSTRT: Timer start in continuous mode
0x46004810 C   FIELD 03w01 COUNTRST: Counter reset
0x46004810 C   FIELD 04w01 RSTARE: Reset after read enable
0x46004814 B  REGISTER CCR1 (rw): Compare Register
0x46004814 C   FIELD 00w16 CCR1: Capture/compare 1 value
0x46004818 B  REGISTER ARR (rw): Autoreload Register
0x46004818 C   FIELD 00w16 ARR: Auto reload value
0x4600481C B  REGISTER CNT (ro): Counter Register
0x4600481C C   FIELD 00w16 CNT: Counter value
0x46004824 B  REGISTER CFGR2 (rw): LPTIM configuration register 2
0x46004824 C   FIELD 00w02 IN1SEL: LPTIM input 1 selection
0x46004824 C   FIELD 04w02 IN2SEL: LPTIM input 2 selection
0x46004824 C   FIELD 16w02 IC1SEL: LPTIM input capture 1 selection
0x46004824 C   FIELD 20w02 IC2SEL: LPTIM input capture 2 selection
0x46004828 B  REGISTER RCR (rw): LPTIM repetition register
0x46004828 C   FIELD 00w08 REP: Repetition register value
0x4600482C B  REGISTER CCMR1 (rw): LPTIM capture/compare mode register 1
0x4600482C C   FIELD 00w01 CC1SEL: Capture/compare 1 selection
0x4600482C C   FIELD 01w01 CC1E: Capture/compare 1 output enable
0x4600482C C   FIELD 02w02 CC1P: Capture/compare 1 output polarity
0x4600482C C   FIELD 08w02 IC1PSC: Input capture 1 prescaler
0x4600482C C   FIELD 12w02 IC1F: Input capture 1 filter
0x4600482C C   FIELD 16w01 CC2SEL: Capture/compare 2 selection
0x4600482C C   FIELD 17w01 CC2E: Capture/compare 2 output enable
0x4600482C C   FIELD 18w02 CC2P: Capture/compare 2 output polarity
0x4600482C C   FIELD 24w02 IC2PSC: Input capture 2 prescaler
0x4600482C C   FIELD 28w02 IC2F: Input capture 2 filter
0x46004834 B  REGISTER CCR2 (rw): LPTIM Compare Register 2
0x46004834 C   FIELD 00w16 CCR2: Capture/compare 2 value
0x46004BEC B  REGISTER HWCFGR2 (ro): LPTIM peripheral hardware configuration register 2
0x46004BEC C   FIELD 00w04 CFG1: peripheral hardware configuration 1
0x46004BEC C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x46004BEC C   FIELD 16w01 CFG3: peripheral hardware configuration 3
0x46004BF0 B  REGISTER HWCFGR1 (ro): LPTIM peripheral hardware configuration register 1
0x46004BF0 C   FIELD 00w08 CFG1: peripheral hardware configuration 1
0x46004BF0 C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x46004BF0 C   FIELD 16w04 CFG3: peripheral hardware configuration 3
0x46004BF0 C   FIELD 24w08 CFG4: peripheral hardware configuration 4
0x46004C00 A PERIPHERAL LPTIM4
0x46004C00 B  REGISTER ISR (ro): Interrupt and Status Register
0x46004C00 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x46004C00 C   FIELD 01w01 ARRM: Autoreload match
0x46004C00 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x46004C00 C   FIELD 03w01 CMP1OK: Compare register 1 update OK
0x46004C00 C   FIELD 04w01 ARROK: Autoreload register update OK
0x46004C00 C   FIELD 05w01 UP: Counter direction change down to up
0x46004C00 C   FIELD 06w01 DOWN: Counter direction change up to down
0x46004C00 C   FIELD 07w01 UE: LPTIM update event occurred
0x46004C00 C   FIELD 08w01 REPOK: Repetition register update Ok
0x46004C00 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x46004C04 B  REGISTER ICR (wo): Interrupt Clear Register
0x46004C04 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004C04 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x46004C04 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x46004C04 C   FIELD 03w01 CMP1OKCF: Compare register 1 update OK Clear Flag
0x46004C04 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x46004C04 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x46004C04 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x46004C04 C   FIELD 07w01 UECF: Update event clear flag
0x46004C04 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x46004C04 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x46004C08 B  REGISTER DIER (rw): LPTIM interrupt Enable Register
0x46004C08 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x46004C08 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x46004C08 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x46004C08 C   FIELD 03w01 CMP1OKIE: Compare register 1 update OK Interrupt Enable
0x46004C08 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x46004C08 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x46004C08 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x46004C08 C   FIELD 07w01 UEIE: Update event interrupt enable
0x46004C08 C   FIELD 08w01 REPOKIE: REPOKIE
0x46004C0C B  REGISTER CFGR (rw): Configuration Register
0x46004C0C C   FIELD 00w01 CKSEL: Clock selector
0x46004C0C C   FIELD 01w02 CKPOL: Clock Polarity
0x46004C0C C   FIELD 03w02 CKFLT: Configurable digital filter for external clock
0x46004C0C C   FIELD 06w02 TRGFLT: Configurable digital filter for trigger
0x46004C0C C   FIELD 09w03 PRESC: Clock prescaler
0x46004C0C C   FIELD 13w03 TRIGSEL: Trigger selector
0x46004C0C C   FIELD 17w02 TRIGEN: Trigger enable and polarity
0x46004C0C C   FIELD 19w01 TIMOUT: Timeout enable
0x46004C0C C   FIELD 20w01 WAVE: Waveform shape
0x46004C0C C   FIELD 21w01 WAVPOL: Waveform shape polarity
0x46004C0C C   FIELD 22w01 PRELOAD: Registers update mode
0x46004C0C C   FIELD 23w01 COUNTMODE: counter mode enabled
0x46004C0C C   FIELD 24w01 ENC: Encoder mode enable
0x46004C10 B  REGISTER CR (rw): Control Register
0x46004C10 C   FIELD 00w01 ENABLE: LPTIM Enable
0x46004C10 C   FIELD 01w01 SNGSTRT: LPTIM start in single mode
0x46004C10 C   FIELD 02w01 CNTSTRT: Timer start in continuous mode
0x46004C10 C   FIELD 03w01 COUNTRST: Counter reset
0x46004C10 C   FIELD 04w01 RSTARE: Reset after read enable
0x46004C14 B  REGISTER CCR1 (rw): Compare Register
0x46004C14 C   FIELD 00w16 CCR1: Capture/compare 1 value
0x46004C18 B  REGISTER ARR (rw): Autoreload Register
0x46004C18 C   FIELD 00w16 ARR: Auto reload value
0x46004C1C B  REGISTER CNT (ro): Counter Register
0x46004C1C C   FIELD 00w16 CNT: Counter value
0x46004C24 B  REGISTER CFGR2 (rw): LPTIM configuration register 2
0x46004C24 C   FIELD 00w02 IN1SEL: LPTIM input 1 selection
0x46004C24 C   FIELD 04w02 IN2SEL: LPTIM input 2 selection
0x46004C24 C   FIELD 16w02 IC1SEL: LPTIM input capture 1 selection
0x46004C24 C   FIELD 20w02 IC2SEL: LPTIM input capture 2 selection
0x46004C28 B  REGISTER RCR (rw): LPTIM repetition register
0x46004C28 C   FIELD 00w08 REP: Repetition register value
0x46004C2C B  REGISTER CCMR1 (rw): LPTIM capture/compare mode register 1
0x46004C2C C   FIELD 00w01 CC1SEL: Capture/compare 1 selection
0x46004C2C C   FIELD 01w01 CC1E: Capture/compare 1 output enable
0x46004C2C C   FIELD 02w02 CC1P: Capture/compare 1 output polarity
0x46004C2C C   FIELD 08w02 IC1PSC: Input capture 1 prescaler
0x46004C2C C   FIELD 12w02 IC1F: Input capture 1 filter
0x46004C2C C   FIELD 16w01 CC2SEL: Capture/compare 2 selection
0x46004C2C C   FIELD 17w01 CC2E: Capture/compare 2 output enable
0x46004C2C C   FIELD 18w02 CC2P: Capture/compare 2 output polarity
0x46004C2C C   FIELD 24w02 IC2PSC: Input capture 2 prescaler
0x46004C2C C   FIELD 28w02 IC2F: Input capture 2 filter
0x46004C34 B  REGISTER CCR2 (rw): LPTIM Compare Register 2
0x46004C34 C   FIELD 00w16 CCR2: Capture/compare 2 value
0x46004FEC B  REGISTER HWCFGR2 (ro): LPTIM peripheral hardware configuration register 2
0x46004FEC C   FIELD 00w04 CFG1: peripheral hardware configuration 1
0x46004FEC C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x46004FEC C   FIELD 16w01 CFG3: peripheral hardware configuration 3
0x46004FF0 B  REGISTER HWCFGR1 (ro): LPTIM peripheral hardware configuration register 1
0x46004FF0 C   FIELD 00w08 CFG1: peripheral hardware configuration 1
0x46004FF0 C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x46004FF0 C   FIELD 16w04 CFG3: peripheral hardware configuration 3
0x46004FF0 C   FIELD 24w08 CFG4: peripheral hardware configuration 4
0x46005000 A PERIPHERAL OPAMP
0x46005000 B  REGISTER OPAMP1_CSR (rw): OPAMP1 control/status register
0x46005000 C   FIELD 00w01 OPAEN: Operational amplifier Enable
0x46005000 C   FIELD 01w01 OPALPM: OPALPM
0x46005000 C   FIELD 02w02 OPAMODE: OPAMODE
0x46005000 C   FIELD 04w02 PGA_GAIN: USERTRIM
0x46005000 C   FIELD 08w02 VM_SEL: VM_SEL
0x46005000 C   FIELD 10w01 VP_SEL: VP_SEL
0x46005000 C   FIELD 12w01 CALON: CALON
0x46005000 C   FIELD 13w01 CALSEL: CALSEL
0x46005000 C   FIELD 14w01 USERTRIM: USERTRIM
0x46005000 C   FIELD 15w01 CALOUT: CALOUT
0x46005000 C   FIELD 30w01 OPAHSM: OPAHSM
0x46005004 B  REGISTER OPAMP1_OTR (rw): offset trimming register in normal mode
0x46005004 C   FIELD 00w05 TRIMOFFSETN: TRIMOFFSETN
0x46005004 C   FIELD 08w05 TRIMOFFSETP: TRIMOFFSETP
0x46005008 B  REGISTER OPAMP1_LPOTR (rw): offset trimming register in low-power mode
0x46005008 C   FIELD 00w05 TRIMLPOFFSETN: TRIMLPOFFSETN
0x46005008 C   FIELD 08w05 TRIMLPOFFSETP: TRIMLPOFFSETP
0x46005010 B  REGISTER OPAMP2_CRS: control/status register
0x46005010 C   FIELD 00w01 OPAEN (rw): OPAEN
0x46005010 C   FIELD 01w01 OPALPM (rw): OPALPM
0x46005010 C   FIELD 02w02 OPAMODE (rw): OPAMODE
0x46005010 C   FIELD 04w02 PGA_GAIN (rw): PGA_GAIN
0x46005010 C   FIELD 08w02 VM_SEL (rw): VM_SEL
0x46005010 C   FIELD 10w01 VP_SEL (rw): VP_SEL
0x46005010 C   FIELD 12w01 CALON (rw): CALON
0x46005010 C   FIELD 13w01 CALSEL (rw): CALSEL
0x46005010 C   FIELD 14w01 USERTRIM (rw): USERTRIM
0x46005010 C   FIELD 15w01 CALOUT (ro): CALOUT
0x46005010 C   FIELD 30w01 OPAHSM (rw): OPAHSM
0x46005014 B  REGISTER OPAMP2_OTR (rw): offset trimming register in normal mode
0x46005014 C   FIELD 00w05 TRIMOFFSETN: TRIMOFFSETN
0x46005014 C   FIELD 08w05 TRIMOFFSETP: TRIMOFFSETP
0x46005018 B  REGISTER OPAMP2_LPOTR (rw): offset trimming register in low-power mode
0x46005018 C   FIELD 00w05 TRIMLPOFFSETN: TRIMLPOFFSETN
0x46005018 C   FIELD 08w05 TRIMLPOFFSETP: TRIMLPOFFSETP
0x46005400 A PERIPHERAL COMP
0x46005400 B  REGISTER COMP1_CSR: Comparator 1 control and status register
0x46005400 C   FIELD 00w01 COMP1_EN (rw): Comparator 1 enable bit
0x46005400 C   FIELD 04w04 COMP1_INMSEL (rw): Comparator 1 Input Minus connection configuration bit
0x46005400 C   FIELD 08w02 COMP1_INPSEL (rw): Comparator1 input plus selection bit
0x46005400 C   FIELD 11w01 COMP1_WINMODE (rw): COMP1_WINMODE
0x46005400 C   FIELD 14w01 COMP1_WINOUT (rw): COMP1_WINOUT
0x46005400 C   FIELD 15w01 COMP1_POLARITY (rw): Comparator 1 polarity selection bit
0x46005400 C   FIELD 16w02 COMP1_HYST (rw): Comparator 1 hysteresis selection bits
0x46005400 C   FIELD 18w02 COMP1_PWRMODE (rw): COMP1_PWRMODE
0x46005400 C   FIELD 20w05 COMP1_BLANKSEL (rw): COMP1_BLANKSEL
0x46005400 C   FIELD 30w01 COMP1_VALUE (ro): Comparator 1 output status bit
0x46005400 C   FIELD 31w01 COMP1_LOCK (rw): COMP1_CSR register lock bit
0x46005404 B  REGISTER COMP2_CSR: Comparator 2 control and status register
0x46005404 C   FIELD 00w01 COM2_EN (rw): Comparator 2 enable bit
0x46005404 C   FIELD 04w04 COM2_INMSEL (rw): Comparator 2 Input Minus connection configuration bit
0x46005404 C   FIELD 08w02 COM2_INPSEL (rw): Comparator 2 input plus selection bit
0x46005404 C   FIELD 11w01 COM2_WINMODE (rw): COM2_WINMODE
0x46005404 C   FIELD 14w01 COM2_WINOUT (rw): COM2_WINOUT
0x46005404 C   FIELD 15w01 COM2_POLARITY (rw): Comparator 2 polarity selection bit
0x46005404 C   FIELD 16w02 COM2_HYST (rw): Comparator 2 hysteresis selection bits
0x46005404 C   FIELD 18w02 COM2_PWRMODE (rw): COM2_PWRMODE
0x46005404 C   FIELD 20w05 COM2_BLANKSEL (rw): COM2_BLANKSEL
0x46005404 C   FIELD 30w01 COM2_VALUE (ro): Comparator 2 output status bit
0x46005404 C   FIELD 31w01 COM2_LOCK (rw): COMP2_CSR register lock bit
0x46007400 A PERIPHERAL VREFBUF
0x46007400 B  REGISTER VREFBUF_CSR: VREFBUF control and status register
0x46007400 C   FIELD 00w01 ENVR (rw): ENVR
0x46007400 C   FIELD 01w01 HIZ (rw): HIZ
0x46007400 C   FIELD 03w01 VRR (ro): VRR
0x46007400 C   FIELD 04w03 VRS (rw): VRS
0x46007404 B  REGISTER VREFBUF_CCR (rw): VREFBUF calibration control register
0x46007404 C   FIELD 00w06 TRIM: TRIM
0x46007800 A PERIPHERAL RTC
0x46007800 B  REGISTER TR (rw): time register
0x46007800 C   FIELD 00w04 SU: Second units in BCD format
0x46007800 C   FIELD 04w03 ST: Second tens in BCD format
0x46007800 C   FIELD 08w04 MNU: Minute units in BCD format
0x46007800 C   FIELD 12w03 MNT: Minute tens in BCD format
0x46007800 C   FIELD 16w04 HU: Hour units in BCD format
0x46007800 C   FIELD 20w02 HT: Hour tens in BCD format
0x46007800 C   FIELD 22w01 PM: AM/PM notation
0x46007804 B  REGISTER DR (rw): date register
0x46007804 C   FIELD 00w04 DU: Date units in BCD format
0x46007804 C   FIELD 04w02 DT: Date tens in BCD format
0x46007804 C   FIELD 08w04 MU: Month units in BCD format
0x46007804 C   FIELD 12w01 MT: Month tens in BCD format
0x46007804 C   FIELD 13w03 WDU: Week day units
0x46007804 C   FIELD 16w04 YU: Year units in BCD format
0x46007804 C   FIELD 20w04 YT: Year tens in BCD format
0x46007808 B  REGISTER SSR (ro): RTC sub second register
0x46007808 C   FIELD 00w32 SS: SS
0x4600780C B  REGISTER ICSR: RTC initialization control and status register
0x4600780C C   FIELD 02w01 WUTWF (ro): Wakeup timer write flag
0x4600780C C   FIELD 03w01 SHPF (ro): Shift operation pending
0x4600780C C   FIELD 04w01 INITS (ro): Initialization status flag
0x4600780C C   FIELD 05w01 RSF (rw): Registers synchronization flag
0x4600780C C   FIELD 06w01 INITF (ro): Initialization flag
0x4600780C C   FIELD 07w01 INIT (rw): Initialization mode
0x4600780C C   FIELD 08w02 BIN (rw): BIN
0x4600780C C   FIELD 10w03 BCDU (rw): BCDU
0x4600780C C   FIELD 16w01 RECALPF (ro): Recalibration pending Flag
0x46007810 B  REGISTER PRER (rw): prescaler register
0x46007810 C   FIELD 00w15 PREDIV_S: Synchronous prescaler factor
0x46007810 C   FIELD 16w07 PREDIV_A: Asynchronous prescaler factor
0x46007814 B  REGISTER WUTR (rw): wakeup timer register
0x46007814 C   FIELD 00w16 WUT: Wakeup auto-reload value bits
0x46007814 C   FIELD 16w16 WUTOCLR: WUTOCLR
0x46007818 B  REGISTER CR: RTC control register
0x46007818 C   FIELD 00w03 WUCKSEL (rw): WUCKSEL
0x46007818 C   FIELD 03w01 TSEDGE (rw): TSEDGE
0x46007818 C   FIELD 04w01 REFCKON (rw): REFCKON
0x46007818 C   FIELD 05w01 BYPSHAD (rw): BYPSHAD
0x46007818 C   FIELD 06w01 FMT (rw): FMT
0x46007818 C   FIELD 07w01 SSRUIE (rw): SSRUIE
0x46007818 C   FIELD 08w01 ALRAE (rw): ALRAE
0x46007818 C   FIELD 09w01 ALRBE (rw): ALRBE
0x46007818 C   FIELD 10w01 WUTE (rw): WUTE
0x46007818 C   FIELD 11w01 TSE (rw): TSE
0x46007818 C   FIELD 12w01 ALRAIE (rw): ALRAIE
0x46007818 C   FIELD 13w01 ALRBIE (rw): ALRBIE
0x46007818 C   FIELD 14w01 WUTIE (rw): WUTIE
0x46007818 C   FIELD 15w01 TSIE (rw): TSIE
0x46007818 C   FIELD 16w01 ADD1H (wo): ADD1H
0x46007818 C   FIELD 17w01 SUB1H (wo): SUB1H
0x46007818 C   FIELD 18w01 BKP (rw): BKP
0x46007818 C   FIELD 19w01 COSEL (rw): COSEL
0x46007818 C   FIELD 20w01 POL (rw): POL
0x46007818 C   FIELD 21w02 OSEL (rw): OSEL
0x46007818 C   FIELD 23w01 COE (rw): COE
0x46007818 C   FIELD 24w01 ITSE (rw): ITSE
0x46007818 C   FIELD 25w01 TAMPTS (rw): TAMPTS
0x46007818 C   FIELD 26w01 TAMPOE (rw): TAMPOE
0x46007818 C   FIELD 27w01 ALRAFCLR (rw): ALRAFCLR
0x46007818 C   FIELD 28w01 ALRBFCLR (rw): ALRBFCLR
0x46007818 C   FIELD 29w01 TAMPALRM_PU (rw): TAMPALRM_PU
0x46007818 C   FIELD 30w01 TAMPALRM_TYPE (rw): TAMPALRM_TYPE
0x46007818 C   FIELD 31w01 OUT2EN (rw): OUT2EN
0x4600781C B  REGISTER PRIVCR (rw): RTC privilege mode control register
0x4600781C C   FIELD 00w01 ALRAPRIV: ALRAPRIV
0x4600781C C   FIELD 01w01 ALRBPRIV: ALRBPRIV
0x4600781C C   FIELD 02w01 WUTPRIV: WUTPRIV
0x4600781C C   FIELD 03w01 TSPRIV: TSPRIV
0x4600781C C   FIELD 13w01 CALPRIV: CALPRIV
0x4600781C C   FIELD 14w01 INITPRIV: INITPRIV
0x4600781C C   FIELD 15w01 PRIV: PRIV
0x46007820 B  REGISTER SECCFGR (rw): RTC secure mode control register
0x46007820 C   FIELD 00w01 ALRASEC: ALRASEC
0x46007820 C   FIELD 01w01 ALRBSEC: ALRBSEC
0x46007820 C   FIELD 02w01 WUTSEC: WUTSEC
0x46007820 C   FIELD 03w01 TSSEC: TSSEC
0x46007820 C   FIELD 13w01 CALSEC: CALSEC
0x46007820 C   FIELD 14w01 INITSEC: INITSEC
0x46007820 C   FIELD 15w01 SEC: SEC
0x46007824 B  REGISTER WPR (wo): write protection register
0x46007824 C   FIELD 00w08 KEY: Write protection key
0x46007828 B  REGISTER CALR (rw): calibration register
0x46007828 C   FIELD 00w09 CALM: Calibration minus
0x46007828 C   FIELD 12w01 LPCAL: LPCAL
0x46007828 C   FIELD 13w01 CALW16: Use a 16-second calibration cycle period
0x46007828 C   FIELD 14w01 CALW8: Use an 8-second calibration cycle period
0x46007828 C   FIELD 15w01 CALP: Increase frequency of RTC by 488.5 ppm
0x4600782C B  REGISTER SHIFTR (wo): shift control register
0x4600782C C   FIELD 00w15 SUBFS: Subtract a fraction of a second
0x4600782C C   FIELD 31w01 ADD1S: Add one second
0x46007830 B  REGISTER TSTR (ro): time stamp time register
0x46007830 C   FIELD 00w04 SU: Second units in BCD format
0x46007830 C   FIELD 04w03 ST: Second tens in BCD format
0x46007830 C   FIELD 08w04 MNU: Minute units in BCD format
0x46007830 C   FIELD 12w03 MNT: Minute tens in BCD format
0x46007830 C   FIELD 16w04 HU: Hour units in BCD format
0x46007830 C   FIELD 20w02 HT: Hour tens in BCD format
0x46007830 C   FIELD 22w01 PM: AM/PM notation
0x46007834 B  REGISTER TSDR (ro): time stamp date register
0x46007834 C   FIELD 00w04 DU: Date units in BCD format
0x46007834 C   FIELD 04w02 DT: Date tens in BCD format
0x46007834 C   FIELD 08w04 MU: Month units in BCD format
0x46007834 C   FIELD 12w01 MT: Month tens in BCD format
0x46007834 C   FIELD 13w03 WDU: Week day units
0x46007838 B  REGISTER TSSSR (ro): timestamp sub second register
0x46007838 C   FIELD 00w32 SS: Sub second value
0x46007840 B  REGISTER ALRMAR (rw): alarm A register
0x46007840 C   FIELD 00w04 SU: Second units in BCD format
0x46007840 C   FIELD 04w03 ST: Second tens in BCD format
0x46007840 C   FIELD 07w01 MSK1: Alarm A seconds mask
0x46007840 C   FIELD 08w04 MNU: Minute units in BCD format
0x46007840 C   FIELD 12w03 MNT: Minute tens in BCD format
0x46007840 C   FIELD 15w01 MSK2: Alarm A minutes mask
0x46007840 C   FIELD 16w04 HU: Hour units in BCD format
0x46007840 C   FIELD 20w02 HT: Hour tens in BCD format
0x46007840 C   FIELD 22w01 PM: AM/PM notation
0x46007840 C   FIELD 23w01 MSK3: Alarm A hours mask
0x46007840 C   FIELD 24w04 DU: Date units or day in BCD format
0x46007840 C   FIELD 28w02 DT: Date tens in BCD format
0x46007840 C   FIELD 30w01 WDSEL: Week day selection
0x46007840 C   FIELD 31w01 MSK4: Alarm A date mask
0x46007844 B  REGISTER ALRMASSR (rw): alarm A sub second register
0x46007844 C   FIELD 00w15 SS: Sub seconds value
0x46007844 C   FIELD 24w06 MASKSS: Mask the most-significant bits starting at this bit
0x46007844 C   FIELD 31w01 SSCLR: SSCLR
0x46007848 B  REGISTER ALRMBR (rw): alarm B register
0x46007848 C   FIELD 00w04 SU: Second units in BCD format
0x46007848 C   FIELD 04w03 ST: Second tens in BCD format
0x46007848 C   FIELD 07w01 MSK1: Alarm B seconds mask
0x46007848 C   FIELD 08w04 MNU: Minute units in BCD format
0x46007848 C   FIELD 12w03 MNT: Minute tens in BCD format
0x46007848 C   FIELD 15w01 MSK2: Alarm B minutes mask
0x46007848 C   FIELD 16w04 HU: Hour units in BCD format
0x46007848 C   FIELD 20w02 HT: Hour tens in BCD format
0x46007848 C   FIELD 22w01 PM: AM/PM notation
0x46007848 C   FIELD 23w01 MSK3: Alarm B hours mask
0x46007848 C   FIELD 24w04 DU: Date units or day in BCD format
0x46007848 C   FIELD 28w02 DT: Date tens in BCD format
0x46007848 C   FIELD 30w01 WDSEL: Week day selection
0x46007848 C   FIELD 31w01 MSK4: Alarm B date mask
0x4600784C B  REGISTER ALRMBSSR (rw): alarm B sub second register
0x4600784C C   FIELD 00w15 SS: Sub seconds value
0x4600784C C   FIELD 24w06 MASKSS: Mask the most-significant bits starting at this bit
0x4600784C C   FIELD 31w01 SSCLR: SSCLR
0x46007850 B  REGISTER SR (ro): RTC status register
0x46007850 C   FIELD 00w01 ALRAF: ALRAF
0x46007850 C   FIELD 01w01 ALRBF: ALRBF
0x46007850 C   FIELD 02w01 WUTF: WUTF
0x46007850 C   FIELD 03w01 TSF: TSF
0x46007850 C   FIELD 04w01 TSOVF: TSOVF
0x46007850 C   FIELD 05w01 ITSF: ITSF
0x46007850 C   FIELD 06w01 SSRUF: SSRUF
0x46007854 B  REGISTER MISR (ro): RTC non-secure masked interrupt status register
0x46007854 C   FIELD 00w01 ALRAMF: ALRAMF
0x46007854 C   FIELD 01w01 ALRBMF: ALRBMF
0x46007854 C   FIELD 02w01 WUTMF: WUTMF
0x46007854 C   FIELD 03w01 TSMF: TSMF
0x46007854 C   FIELD 04w01 TSOVMF: TSOVMF
0x46007854 C   FIELD 05w01 ITSMF: ITSMF
0x46007854 C   FIELD 06w01 SSRUMF: SSRUMF
0x46007858 B  REGISTER SMISR (ro): RTC secure masked interrupt status register
0x46007858 C   FIELD 00w01 ALRAMF: ALRAMF
0x46007858 C   FIELD 01w01 ALRBMF: ALRBMF
0x46007858 C   FIELD 02w01 WUTMF: WUTMF
0x46007858 C   FIELD 03w01 TSMF: TSMF
0x46007858 C   FIELD 04w01 TSOVMF: TSOVMF
0x46007858 C   FIELD 05w01 ITSMF: ITSMF
0x46007858 C   FIELD 06w01 SSRUMF: SSRUMF
0x4600785C B  REGISTER SCR (wo): RTC status clear register
0x4600785C C   FIELD 00w01 CALRAF: CALRAF
0x4600785C C   FIELD 01w01 CALRBF: CALRBF
0x4600785C C   FIELD 02w01 CWUTF: CWUTF
0x4600785C C   FIELD 03w01 CTSF: CTSF
0x4600785C C   FIELD 04w01 CTSOVF: CTSOVF
0x4600785C C   FIELD 05w01 CITSF: CITSF
0x4600785C C   FIELD 06w01 CSSRUF: CSSRUF
0x46007870 B  REGISTER ALRABINR (rw): RTC alarm A binary mode register
0x46007870 C   FIELD 00w32 SS: Synchronous counter alarm value in Binary mode
0x46007874 B  REGISTER ALRBBINR (rw): RTC alarm B binary mode register
0x46007874 C   FIELD 00w32 SS: Synchronous counter alarm value in Binary mode
0x46007C00 A PERIPHERAL TAMP
0x46007C00 B  REGISTER TAMP_CR1: TAMP control register 1
0x46007C00 C   FIELD 00w01 TAMP1E (rw): Tamper detection on TAMP_IN1 enable
0x46007C00 C   FIELD 01w01 TAMP2E (rw): Tamper detection on TAMP_IN2 enable
0x46007C00 C   FIELD 02w01 TAMP3E (rw): Tamper detection on TAMP_IN3 enable
0x46007C00 C   FIELD 03w01 TAMP4E (rw): Tamper detection on TAMP_IN4 enable
0x46007C00 C   FIELD 04w01 TAMP5E (rw): Tamper detection on TAMP_IN5 enable
0x46007C00 C   FIELD 05w01 TAMP6E (rw): Tamper detection on TAMP_IN6 enable
0x46007C00 C   FIELD 06w01 TAMP7E (rw): Tamper detection on TAMP_IN7 enable
0x46007C00 C   FIELD 07w01 TAMP8E (rw): Tamper detection on TAMP_IN8 enable
0x46007C00 C   FIELD 16w01 ITAMP1E (rw): Internal tamper 1 enable
0x46007C00 C   FIELD 17w01 ITAMP2E (rw): Internal tamper 2 enable
0x46007C00 C   FIELD 18w01 ITAMP3E (rw): Internal tamper 3 enable
0x46007C00 C   FIELD 20w01 ITAMP5E (rw): Internal tamper 5 enable
0x46007C00 C   FIELD 21w01 ITAMP6E (rw): Internal tamper 6 enable
0x46007C00 C   FIELD 22w01 ITAMP7E (rw): Internal tamper 7 enable
0x46007C00 C   FIELD 23w01 ITAMP8E (rw): Internal tamper 8 enable
0x46007C00 C   FIELD 24w01 ITAMP9E (rw): Internal tamper 9 enable
0x46007C00 C   FIELD 26w01 ITAMP11E (rw): Internal tamper 11 enable
0x46007C00 C   FIELD 27w01 ITAMP12E (rw): Internal tamper 12 enable
0x46007C00 C   FIELD 28w01 ITAMP13E (rw): Internal tamper 13 enable
0x46007C04 B  REGISTER TAMP_CR2: TAMP control register 2
0x46007C04 C   FIELD 00w01 TAMP1NOER (rw): Tamper 1 no erase
0x46007C04 C   FIELD 01w01 TAMP2NOER (rw): Tamper 2 no erase
0x46007C04 C   FIELD 02w01 TAMP3NOER (rw): Tamper 3 no erase
0x46007C04 C   FIELD 03w01 TAMP4NOER (rw): Tamper 4 no erase
0x46007C04 C   FIELD 04w01 TAMP5NOER (rw): Tamper 5 no erase
0x46007C04 C   FIELD 05w01 TAMP6NOER (rw): Tamper 6 no erase
0x46007C04 C   FIELD 06w01 TAMP7NOER (rw): Tamper 7 no erase
0x46007C04 C   FIELD 07w01 TAMP8NOER (rw): Tamper 8 no erase
0x46007C04 C   FIELD 16w01 TAMP1MSK (rw): Tamper 1 mask The tamper 1 interrupt must not be enabled when TAMP1MSK is set.
0x46007C04 C   FIELD 17w01 TAMP2MSK (rw): Tamper 2 mask The tamper 2 interrupt must not be enabled when TAMP2MSK is set.
0x46007C04 C   FIELD 18w01 TAMP3MSK (rw): Tamper 3 mask The tamper 3 interrupt must not be enabled when TAMP3MSK is set.
0x46007C04 C   FIELD 22w01 BKBLOCK (rw): Backup registers and device secrets access blocked
0x46007C04 C   FIELD 23w01 BKERASE (wo): Backup registers and device secrets erase Writing '1 to this bit reset the backup registers and device secrets(1). Writing 0 has no effect. This bit is always read as 0.
0x46007C04 C   FIELD 24w01 TAMP1TRG (rw): Active level for tamper 1 input If TAMPFLT = 00 Tamper 1 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 1 input falling edge and low level triggers a tamper detection event.
0x46007C04 C   FIELD 25w01 TAMP2TRG (rw): Active level for tamper 2 input If TAMPFLT = 00 Tamper 2 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 2 input falling edge and low level triggers a tamper detection event.
0x46007C04 C   FIELD 26w01 TAMP3TRG (rw): Active level for tamper 3 input If TAMPFLT = 00 Tamper 3 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 3 input falling edge and low level triggers a tamper detection event.
0x46007C04 C   FIELD 27w01 TAMP4TRG (rw): Active level for tamper 4 input (active mode disabled) If TAMPFLT = 00 Tamper 4 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 4 input falling edge and low level triggers a tamper detection event.
0x46007C04 C   FIELD 28w01 TAMP5TRG (rw): Active level for tamper 5 input (active mode disabled) If TAMPFLT = 00 Tamper 5 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 5 input falling edge and low level triggers a tamper detection event.
0x46007C04 C   FIELD 29w01 TAMP6TRG (rw): Active level for tamper 6 input (active mode disabled) If TAMPFLT = 00 Tamper 6 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 6 input falling edge and low level triggers a tamper detection event.
0x46007C04 C   FIELD 30w01 TAMP7TRG (rw): Active level for tamper 7 input (active mode disabled) If TAMPFLT = 00 Tamper 7 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 7 input falling edge and low level triggers a tamper detection event.
0x46007C04 C   FIELD 31w01 TAMP8TRG (rw): Active level for tamper 8 input (active mode disabled) If TAMPFLT = 00 Tamper 8 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 8 input falling edge and low level triggers a tamper detection event.
0x46007C08 B  REGISTER TAMP_CR3: TAMP control register 3
0x46007C08 C   FIELD 00w01 ITAMP1NOER (rw): Internal Tamper 1 no erase
0x46007C08 C   FIELD 01w01 ITAMP2NOER (rw): Internal Tamper 2 no erase
0x46007C08 C   FIELD 02w01 ITAMP3NOER (rw): Internal Tamper 3 no erase
0x46007C08 C   FIELD 04w01 ITAMP5NOER (rw): Internal Tamper 5 no erase
0x46007C08 C   FIELD 05w01 ITAMP6NOER (rw): Internal Tamper 6 no erase
0x46007C08 C   FIELD 06w01 ITAMP7NOER (rw): Internal Tamper 7 no erase
0x46007C08 C   FIELD 07w01 ITAMP8NOER (rw): Internal Tamper 8 no erase
0x46007C08 C   FIELD 08w01 ITAMP9NOER (rw): Internal Tamper 9 no erase
0x46007C08 C   FIELD 10w01 ITAMP11NOER (rw): Internal Tamper 11 no erase
0x46007C08 C   FIELD 11w01 ITAMP12NOER (rw): Internal Tamper 12 no erase
0x46007C08 C   FIELD 12w01 ITAMP13NOER (rw): Internal Tamper 13 no erase
0x46007C0C B  REGISTER TAMP_FLTCR: TAMP filter control register
0x46007C0C C   FIELD 00w03 TAMPFREQ (rw): Tamper sampling frequency Determines the frequency at which each of the TAMP_INx inputs are sampled.
0x46007C0C C   FIELD 03w02 TAMPFLT (rw): TAMP_INx filter count These bits determines the number of consecutive samples at the specified level (TAMP*TRG) needed to activate a tamper event. TAMPFLT is valid for each of the TAMP_INx inputs.
0x46007C0C C   FIELD 05w02 TAMPPRCH (rw): TAMP_INx precharge duration These bit determines the duration of time during which the pull-up/is activated before each sample. TAMPPRCH is valid for each of the TAMP_INx inputs.
0x46007C0C C   FIELD 07w01 TAMPPUDIS (rw): TAMP_INx pull-up disable This bit determines if each of the TAMPx pins are precharged before each sample.
0x46007C10 B  REGISTER TAMP_ATCR1: TAMP active tamper control register 1
0x46007C10 C   FIELD 00w01 TAMP1AM (rw): Tamper 1 active mode
0x46007C10 C   FIELD 01w01 TAMP2AM (rw): Tamper 2 active mode
0x46007C10 C   FIELD 02w01 TAMP3AM (rw): Tamper 3 active mode
0x46007C10 C   FIELD 03w01 TAMP4AM (rw): Tamper 4 active mode
0x46007C10 C   FIELD 04w01 TAMP5AM (rw): Tamper 5 active mode
0x46007C10 C   FIELD 05w01 TAMP6AM (rw): Tamper 6 active mode
0x46007C10 C   FIELD 06w01 TAMP7AM (rw): Tamper 7 active mode
0x46007C10 C   FIELD 07w01 TAMP8AM (rw): Tamper 8 active mode
0x46007C10 C   FIELD 08w02 ATOSEL1 (rw): Active tamper shared output 1 selection The selected output must be available in the package pinout
0x46007C10 C   FIELD 10w02 ATOSEL2 (rw): Active tamper shared output 2 selection The selected output must be available in the package pinout
0x46007C10 C   FIELD 12w02 ATOSEL3 (rw): Active tamper shared output 3 selection The selected output must be available in the package pinout
0x46007C10 C   FIELD 14w02 ATOSEL4 (rw): Active tamper shared output 4 selection The selected output must be available in the package pinout.
0x46007C10 C   FIELD 16w03 ATCKSEL (rw): Active tamper RTC asynchronous prescaler clock selection These bits selects the RTC asynchronous prescaler stage output.The selected clock is CK_ATPRE. fCK_ATPRE = fRTCCLK / 2ATCKSEL when (PREDIV_A+1) = 128. ... These bits can be written only when all active tampers are disabled. The write protection remains for up to 1.5 ck_atpre cycles after all the active tampers are disable.
0x46007C10 C   FIELD 24w03 ATPER (rw): Active tamper output change period The tamper output is changed every CK_ATPER = (2ATPER x CK_ATPRE) cycles. Refer to .
0x46007C10 C   FIELD 30w01 ATOSHARE (rw): Active tamper output sharing TAMP_IN1 is compared with TAMPOUTSEL1 TAMP_IN2 is compared with TAMPOUTSEL2 TAMP_IN3 is compared with TAMPOUTSEL3 TAMP_IN4 is compared with TAMPOUTSEL4 TAMP_IN5 is compared with TAMPOUTSEL5 TAMP_IN6 is compared with TAMPOUTSEL6 TAMP_IN7 is compared with TAMPOUTSEL7 TAMP_IN8 is compared with TAMPOUTSEL8
0x46007C10 C   FIELD 31w01 FLTEN (rw): Active tamper filter enable
0x46007C14 B  REGISTER TAMP_ATSEEDR: TAMP active tamper seed register
0x46007C14 C   FIELD 00w32 SEED (wo): Pseudo-random generator seed value This register must be written four times with 32-bit values to provide the 128-bit seed to the PRNG. Writing to this register automatically sends the seed value to the PRNG.
0x46007C18 B  REGISTER TAMP_ATOR: TAMP active tamper output register
0x46007C18 C   FIELD 00w08 PRNG (ro): Pseudo-random generator value This field provides the values of the PRNG output. Because of potential inconsistencies due to synchronization delays, PRNG must be read at least twice. The read value is correct if it is equal to previous read value. This field can only be read when the APB is in secure mode.
0x46007C18 C   FIELD 14w01 SEEDF (ro): Seed running flag This flag is set by hardware when a new seed is written in the TAMP_ATSEEDR. It is cleared by hardware when the PRNG has absorbed this new seed, and by system reset. The TAMP APB cock must not be switched off as long as SEEDF is set.
0x46007C18 C   FIELD 15w01 INITS (ro): Active tamper initialization status This flag is set by hardware when the PRNG has absorbed the first 128-bit seed, meaning that the enabled active tampers are functional. This flag is cleared when the active tampers are disabled.
0x46007C1C B  REGISTER TAMP_ATCR2: TAMP active tamper control register 2
0x46007C1C C   FIELD 08w03 ATOSEL1 (rw): Active tamper shared output 1 selection The selected output must be available in the package pinout. Bits 9:8 are the mirror of ATOSEL1[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.
0x46007C1C C   FIELD 11w03 ATOSEL2 (rw): Active tamper shared output 2 selection The selected output must be available in the package pinout. Bits 12:11 are the mirror of ATOSEL2[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.
0x46007C1C C   FIELD 14w03 ATOSEL3 (rw): Active tamper shared output 3 selection The selected output must be available in the package pinout. Bits 15:14 are the mirror of ATOSEL3[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.
0x46007C1C C   FIELD 17w03 ATOSEL4 (rw): Active tamper shared output 4 selection The selected output must be available in the package pinout. Bits 18:17 are the mirror of ATOSEL2[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.
0x46007C1C C   FIELD 20w03 ATOSEL5 (rw): Active tamper shared output 5 selection The selected output must be available in the package pinout.
0x46007C1C C   FIELD 23w03 ATOSEL6 (rw): Active tamper shared output 6 selection The selected output must be available in the package pinout.
0x46007C1C C   FIELD 26w03 ATOSEL7 (rw): Active tamper shared output 7 selection The selected output must be available in the package pinout.
0x46007C1C C   FIELD 29w03 ATOSEL8 (rw): Active tamper shared output 8 selection The selected output must be available in the package pinout.
0x46007C20 B  REGISTER TAMP_SECCFGR: TAMP secure mode register
0x46007C20 C   FIELD 00w08 BKPRWSEC (rw): Backup registers read/write protection offset Protection zone 1 is defined for backup registers from TAMP_BKP0R to TAMP_BKPxR (x = BKPRWSEC-1, from 0 to 128). if TZEN=1, these backup registers can be read and written only with secure access. If TZEN=0: the protection zone 1 can be read and written with non-secure access. If BKPRWSEC = 0: there is no protection zone 1. If BKPRWPRIV is set, BKPRWSEC[7:0] can be written only in privileged mode.
0x46007C20 C   FIELD 15w01 CNT1SEC (rw): Monotonic counter 1 secure protection
0x46007C20 C   FIELD 16w08 BKPWSEC (rw): Backup registers write protection offset Protection zone 2 is defined for backup registers from TAMP_BKPyR (y = BKPRWSEC, from 0 to 128) to TAMP_BKPzR (z = BKPWSEC-1, from 0 to 128, BKPWSEC ¥ BKPRWSEC): if TZEN=1, these backup registers can be written only with secure access. They can be read with secure or non-secure access. Protection zone 3 defined for backup registers from TAMP_BKPtR (t = BKPWSEC, from 0 to 127). They can be read or written with secure or non-secure access. If TZEN=0: the protection zone 2 can be read and written with non-secure access. If BKPWSEC = 0 or if BKPWSEC ¤ BKPRWSEC: there is no protection zone 2. If BKPWPRIV is set, BKPRWSEC[7:0] can be written only in privileged mode.
0x46007C20 C   FIELD 30w01 BHKLOCK (rw): Boot hardware key lock This bit can be read and can only be written to 1 by software. It is cleared by hardware together with the backup registers following a tamper detection event or when the readout protection (RDP) is disabled.
0x46007C20 C   FIELD 31w01 TAMPSEC (rw): Tamper protection (excluding monotonic counters and backup registers) Note: Refer to for details on the read protection.
0x46007C24 B  REGISTER TAMP_PRIVCR: TAMP privilege mode control register
0x46007C24 C   FIELD 15w01 CNT1PRIV (rw): Monotonic counter 1 privilege protection
0x46007C24 C   FIELD 29w01 BKPRWPRIV (rw): Backup registers zone 1 privilege protection
0x46007C24 C   FIELD 30w01 BKPWPRIV (rw): Backup registers zone 2 privilege protection
0x46007C24 C   FIELD 31w01 TAMPPRIV (rw): Tamper privilege protection (excluding backup registers) Note: Refer to for details on the read protection.
0x46007C2C B  REGISTER TAMP_IER: TAMP interrupt enable register
0x46007C2C C   FIELD 00w01 TAMP1IE (rw): Tamper 1 interrupt enable
0x46007C2C C   FIELD 01w01 TAMP2IE (rw): Tamper 2 interrupt enable
0x46007C2C C   FIELD 02w01 TAMP3IE (rw): Tamper 3 interrupt enable
0x46007C2C C   FIELD 03w01 TAMP4IE (rw): Tamper 4 interrupt enable
0x46007C2C C   FIELD 04w01 TAMP5IE (rw): Tamper 5 interrupt enable
0x46007C2C C   FIELD 05w01 TAMP6IE (rw): Tamper 6 interrupt enable
0x46007C2C C   FIELD 06w01 TAMP7IE (rw): Tamper 7interrupt enable
0x46007C2C C   FIELD 07w01 TAMP8IE (rw): Tamper 8 interrupt enable
0x46007C2C C   FIELD 16w01 ITAMP1IE (rw): Internal tamper 1 interrupt enable
0x46007C2C C   FIELD 17w01 ITAMP2IE (rw): Internal tamper 2 interrupt enable
0x46007C2C C   FIELD 18w01 ITAMP3IE (rw): Internal tamper 3 interrupt enable
0x46007C2C C   FIELD 20w01 ITAMP5IE (rw): Internal tamper 5 interrupt enable
0x46007C2C C   FIELD 21w01 ITAMP6IE (rw): Internal tamper 6 interrupt enable
0x46007C2C C   FIELD 22w01 ITAMP7IE (rw): Internal tamper 7 interrupt enable
0x46007C2C C   FIELD 23w01 ITAMP8IE (rw): Internal tamper 8 interrupt enable
0x46007C2C C   FIELD 24w01 ITAMP9IE (rw): Internal tamper 9 interrupt enable
0x46007C2C C   FIELD 26w01 ITAMP11IE (rw): Internal tamper 11 interrupt enable
0x46007C2C C   FIELD 27w01 ITAMP12IE (rw): Internal tamper 12 interrupt enable
0x46007C2C C   FIELD 28w01 ITAMP13IE (rw): Internal tamper 13 interrupt enable
0x46007C30 B  REGISTER TAMP_SR: TAMP status register
0x46007C30 C   FIELD 00w01 TAMP1F (ro): TAMP1 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP1 input.
0x46007C30 C   FIELD 01w01 TAMP2F (ro): TAMP2 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP2 input.
0x46007C30 C   FIELD 02w01 TAMP3F (ro): TAMP3 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP3 input.
0x46007C30 C   FIELD 03w01 TAMP4F (ro): TAMP4 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP4 input.
0x46007C30 C   FIELD 04w01 TAMP5F (ro): TAMP5 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP5 input.
0x46007C30 C   FIELD 05w01 TAMP6F (ro): TAMP6 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP6 input.
0x46007C30 C   FIELD 06w01 TAMP7F (ro): TAMP7 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP7 input.
0x46007C30 C   FIELD 07w01 TAMP8F (ro): TAMP8 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP8 input
0x46007C30 C   FIELD 16w01 ITAMP1F (ro): Internal tamper 1 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 1.
0x46007C30 C   FIELD 17w01 ITAMP2F (ro): Internal tamper 2 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 2.
0x46007C30 C   FIELD 18w01 ITAMP3F (ro): Internal tamper 3 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 3.
0x46007C30 C   FIELD 20w01 ITAMP5F (ro): Internal tamper 5 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 5.
0x46007C30 C   FIELD 21w01 ITAMP6F (ro): Internal tamper 6 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 6.
0x46007C30 C   FIELD 22w01 ITAMP7F (ro): Internal tamper 7 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 7.
0x46007C30 C   FIELD 23w01 ITAMP8F (ro): Internal tamper 8 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 8.
0x46007C30 C   FIELD 24w01 ITAMP9F (ro): Internal tamper 9 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 9.
0x46007C30 C   FIELD 26w01 ITAMP11F (ro): Internal tamper 11 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 11.
0x46007C30 C   FIELD 27w01 ITAMP12F (ro): Internal tamper 12 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 12.
0x46007C30 C   FIELD 28w01 ITAMP13F (ro): Internal tamper 13 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 13.
0x46007C34 B  REGISTER TAMP_MISR: TAMP non-secure masked interrupt status register
0x46007C34 C   FIELD 00w01 TAMP1MF (ro): TAMP1 non-secure interrupt masked flag This flag is set by hardware when the tamper 1 non-secure interrupt is raised.
0x46007C34 C   FIELD 01w01 TAMP2MF (ro): TAMP2 non-secure interrupt masked flag This flag is set by hardware when the tamper 2 non-secure interrupt is raised.
0x46007C34 C   FIELD 02w01 TAMP3MF (ro): TAMP3 non-secure interrupt masked flag This flag is set by hardware when the tamper 3 non-secure interrupt is raised.
0x46007C34 C   FIELD 03w01 TAMP4MF (ro): TAMP4 non-secure interrupt masked flag This flag is set by hardware when the tamper 4 non-secure interrupt is raised.
0x46007C34 C   FIELD 04w01 TAMP5MF (ro): TAMP5 non-secure interrupt masked flag This flag is set by hardware when the tamper 5 non-secure interrupt is raised.
0x46007C34 C   FIELD 05w01 TAMP6MF (ro): TAMP6 non-secure interrupt masked flag This flag is set by hardware when the tamper 6 non-secure interrupt is raised.
0x46007C34 C   FIELD 06w01 TAMP7MF (ro): TAMP7 non-secure interrupt masked flag This flag is set by hardware when the tamper 7 non-secure interrupt is raised.
0x46007C34 C   FIELD 07w01 TAMP8MF (ro): TAMP8 non-secure interrupt masked flag This flag is set by hardware when the tamper 8 non-secure interrupt is raised.
0x46007C34 C   FIELD 16w01 ITAMP1MF (ro): Internal tamper 1 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 1 non-secure interrupt is raised.
0x46007C34 C   FIELD 17w01 ITAMP2MF (ro): Internal tamper 2 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 2 non-secure interrupt is raised.
0x46007C34 C   FIELD 18w01 ITAMP3MF (ro): Internal tamper 3 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 3 non-secure interrupt is raised.
0x46007C34 C   FIELD 20w01 ITAMP5MF (ro): Internal tamper 5 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 5 non-secure interrupt is raised.
0x46007C34 C   FIELD 21w01 ITAMP6MF (ro): Internal tamper 6 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 6 non-secure interrupt is raised.
0x46007C34 C   FIELD 22w01 ITAMP7MF (ro): VCORE monitoring tamper non-secure interrupt masked flag This flag is set by hardware when the internal tamper 7 non-secure interrupt is raised.
0x46007C34 C   FIELD 23w01 ITAMP8MF (ro): Internal tamper 8 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 8 non-secure interrupt is raised.
0x46007C34 C   FIELD 24w01 ITAMP9MF (ro): internal tamper 9 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 9 non-secure interrupt is raised.
0x46007C34 C   FIELD 26w01 ITAMP11MF (ro): internal tamper 11 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 11 non-secure interrupt is raised.
0x46007C34 C   FIELD 27w01 ITAMP12MF (ro): internal tamper 12 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 12 non-secure interrupt is raised.
0x46007C34 C   FIELD 28w01 ITAMP13MF (ro): internal tamper 13 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 13 non-secure interrupt is raised.
0x46007C38 B  REGISTER TAMP_SMISR: TAMP secure masked interrupt status register
0x46007C38 C   FIELD 00w01 TAMP1MF (ro): TAMP1 secure interrupt masked flag This flag is set by hardware when the tamper 1 secure interrupt is raised.
0x46007C38 C   FIELD 01w01 TAMP2MF (ro): TAMP2 secure interrupt masked flag This flag is set by hardware when the tamper 2 secure interrupt is raised.
0x46007C38 C   FIELD 02w01 TAMP3MF (ro): TAMP3 secure interrupt masked flag This flag is set by hardware when the tamper 3 secure interrupt is raised.
0x46007C38 C   FIELD 03w01 TAMP4MF (ro): TAMP4 secure interrupt masked flag This flag is set by hardware when the tamper 4 secure interrupt is raised.
0x46007C38 C   FIELD 04w01 TAMP5MF (ro): TAMP5 secure interrupt masked flag This flag is set by hardware when the tamper 5 secure interrupt is raised.
0x46007C38 C   FIELD 05w01 TAMP6MF (ro): TAMP6 secure interrupt masked flag This flag is set by hardware when the tamper 6 secure interrupt is raised.
0x46007C38 C   FIELD 06w01 TAMP7MF (ro): TAMP7 secure interrupt masked flag This flag is set by hardware when the tamper 7 secure interrupt is raised.
0x46007C38 C   FIELD 07w01 TAMP8MF (ro): TAMP8 secure interrupt masked flag This flag is set by hardware when the tamper 8 secure interrupt is raised.
0x46007C38 C   FIELD 16w01 ITAMP1MF (ro): Internal tamper 1 secure interrupt masked flag This flag is set by hardware when the internal tamper 1 secure interrupt is raised.
0x46007C38 C   FIELD 17w01 ITAMP2MF (ro): Internal tamper 2 secure interrupt masked flag This flag is set by hardware when the internal tamper 2 secure interrupt is raised.
0x46007C38 C   FIELD 18w01 ITAMP3MF (ro): Internal tamper 3 secure interrupt masked flag This flag is set by hardware when the internal tamper 3 secure interrupt is raised.
0x46007C38 C   FIELD 20w01 ITAMP5MF (ro): Internal tamper 5 secure interrupt masked flag This flag is set by hardware when the internal tamper 5 secure interrupt is raised.
0x46007C38 C   FIELD 21w01 ITAMP6MF (ro): Internal tamper 6 secure interrupt masked flag This flag is set by hardware when the internal tamper 6 secure interrupt is raised.
0x46007C38 C   FIELD 22w01 ITAMP7MF (ro): VCORE monitoring tamper secure interrupt masked flag This flag is set by hardware when the internal tamper 7 secure interrupt is raised.
0x46007C38 C   FIELD 23w01 ITAMP8MF (ro): Internal tamper 8 secure interrupt masked flag This flag is set by hardware when the internal tamper 8 secure interrupt is raised.
0x46007C38 C   FIELD 24w01 ITAMP9MF (ro): internal tamper 9 secure interrupt masked flag This flag is set by hardware when the internal tamper 9 secure interrupt is raised.
0x46007C38 C   FIELD 26w01 ITAMP11MF (ro): internal tamper 11 secure interrupt masked flag This flag is set by hardware when the internal tamper 11 secure interrupt is raised.
0x46007C38 C   FIELD 27w01 ITAMP12MF (ro): internal tamper 12 secure interrupt masked flag This flag is set by hardware when the internal tamper 12 secure interrupt is raised.
0x46007C38 C   FIELD 28w01 ITAMP13MF (ro): internal tamper 13 secure interrupt masked flag This flag is set by hardware when the internal tamper 13 secure interrupt is raised.
0x46007C3C B  REGISTER TAMP_SCR: TAMP status clear register
0x46007C3C C   FIELD 00w01 CTAMP1F (wo): Clear TAMP1 detection flag Writing 1 in this bit clears the TAMP1F bit in the TAMP_SR register.
0x46007C3C C   FIELD 01w01 CTAMP2F (wo): Clear TAMP2 detection flag Writing 1 in this bit clears the TAMP2F bit in the TAMP_SR register.
0x46007C3C C   FIELD 02w01 CTAMP3F (wo): Clear TAMP3 detection flag Writing 1 in this bit clears the TAMP3F bit in the TAMP_SR register.
0x46007C3C C   FIELD 03w01 CTAMP4F (wo): Clear TAMP4 detection flag Writing 1 in this bit clears the TAMP4F bit in the TAMP_SR register.
0x46007C3C C   FIELD 04w01 CTAMP5F (wo): Clear TAMP5 detection flag Writing 1 in this bit clears the TAMP5F bit in the TAMP_SR register.
0x46007C3C C   FIELD 05w01 CTAMP6F (wo): Clear TAMP6 detection flag Writing 1 in this bit clears the TAMP6F bit in the TAMP_SR register.
0x46007C3C C   FIELD 06w01 CTAMP7F (wo): Clear TAMP7 detection flag Writing 1 in this bit clears the TAMP7F bit in the TAMP_SR register.
0x46007C3C C   FIELD 07w01 CTAMP8F (wo): Clear TAMP8 detection flag Writing 1 in this bit clears the TAMP8F bit in the TAMP_SR register.
0x46007C3C C   FIELD 16w01 CITAMP1F (wo): Clear ITAMP1 detection flag Writing 1 in this bit clears the ITAMP1F bit in the TAMP_SR register.
0x46007C3C C   FIELD 17w01 CITAMP2F (wo): Clear ITAMP2 detection flag Writing 1 in this bit clears the ITAMP2F bit in the TAMP_SR register.
0x46007C3C C   FIELD 18w01 CITAMP3F (wo): Clear ITAMP3 detection flag Writing 1 in this bit clears the ITAMP3F bit in the TAMP_SR register.
0x46007C3C C   FIELD 20w01 CITAMP5F (wo): Clear ITAMP5 detection flag Writing 1 in this bit clears the ITAMP5F bit in the TAMP_SR register.
0x46007C3C C   FIELD 21w01 CITAMP6F (wo): Clear ITAMP6 detection flag Writing 1 in this bit clears the ITAMP6F bit in the TAMP_SR register.
0x46007C3C C   FIELD 22w01 CITAMP7F (wo): Clear ITAMP7 detection flag Writing 1 in this bit clears the ITAMP7F bit in the TAMP_SR register.
0x46007C3C C   FIELD 23w01 CITAMP8F (wo): Clear ITAMP8 detection flag Writing 1 in this bit clears the ITAMP8F bit in the TAMP_SR register.
0x46007C3C C   FIELD 24w01 CITAMP9F (wo): Clear ITAMP9 detection flag Writing 1 in this bit clears the ITAMP9F bit in the TAMP_SR register.
0x46007C3C C   FIELD 26w01 CITAMP11F (wo): Clear ITAMP11 detection flag Writing 1 in this bit clears the ITAMP11F bit in the TAMP_SR register.
0x46007C3C C   FIELD 27w01 CITAMP12F (wo): Clear ITAMP12 detection flag Writing 1 in this bit clears the ITAMP12F bit in the TAMP_SR register.
0x46007C3C C   FIELD 28w01 CITAMP13F (wo): Clear ITAMP13 detection flag Writing 1 in this bit clears the ITAMP13F bit in the TAMP_SR register.
0x46007C40 B  REGISTER TAMP_COUNT1R: TAMP monotonic counter 1 register
0x46007C40 C   FIELD 00w32 COUNT (ro): This register is read-only only and is incremented by one when a write access is done to this register. This register cannot roll-over and is frozen when reaching the maximum value.
0x46007C54 B  REGISTER TAMP_ERCFGR: TAMP erase configuration register
0x46007C54 C   FIELD 00w01 ERCFG0 (rw): Configurable device secrets configuration
0x46007D00 B  REGISTER TAMP_BKP0R: TAMP backup 0 register
0x46007D00 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D04 B  REGISTER TAMP_BKP1R: TAMP backup 1 register
0x46007D04 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D08 B  REGISTER TAMP_BKP2R: TAMP backup 2 register
0x46007D08 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D0C B  REGISTER TAMP_BKP3R: TAMP backup 3 register
0x46007D0C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D10 B  REGISTER TAMP_BKP4R: TAMP backup 4 register
0x46007D10 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D14 B  REGISTER TAMP_BKP5R: TAMP backup 5 register
0x46007D14 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D18 B  REGISTER TAMP_BKP6R: TAMP backup 6 register
0x46007D18 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D1C B  REGISTER TAMP_BKP7R: TAMP backup 7 register
0x46007D1C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D20 B  REGISTER TAMP_BKP8R: TAMP backup 8 register
0x46007D20 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D24 B  REGISTER TAMP_BKP9R: TAMP backup 9 register
0x46007D24 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D28 B  REGISTER TAMP_BKP10R: TAMP backup 10 register
0x46007D28 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D2C B  REGISTER TAMP_BKP11R: TAMP backup 11 register
0x46007D2C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D30 B  REGISTER TAMP_BKP12R: TAMP backup 12 register
0x46007D30 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D34 B  REGISTER TAMP_BKP13R: TAMP backup 13 register
0x46007D34 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D38 B  REGISTER TAMP_BKP14R: TAMP backup 14 register
0x46007D38 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D3C B  REGISTER TAMP_BKP15R: TAMP backup 15 register
0x46007D3C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D40 B  REGISTER TAMP_BKP16R: TAMP backup 16 register
0x46007D40 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D44 B  REGISTER TAMP_BKP17R: TAMP backup 17 register
0x46007D44 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D48 B  REGISTER TAMP_BKP18R: TAMP backup 18 register
0x46007D48 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D4C B  REGISTER TAMP_BKP19R: TAMP backup 19 register
0x46007D4C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D50 B  REGISTER TAMP_BKP20R: TAMP backup 20 register
0x46007D50 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D54 B  REGISTER TAMP_BKP21R: TAMP backup 21 register
0x46007D54 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D58 B  REGISTER TAMP_BKP22R: TAMP backup 22 register
0x46007D58 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D5C B  REGISTER TAMP_BKP23R: TAMP backup 23 register
0x46007D5C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D60 B  REGISTER TAMP_BKP24R: TAMP backup 24 register
0x46007D60 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D64 B  REGISTER TAMP_BKP25R: TAMP backup 25 register
0x46007D64 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D68 B  REGISTER TAMP_BKP26R: TAMP backup 26 register
0x46007D68 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D6C B  REGISTER TAMP_BKP27R: TAMP backup 27 register
0x46007D6C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D70 B  REGISTER TAMP_BKP28R: TAMP backup 28 register
0x46007D70 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D74 B  REGISTER TAMP_BKP29R: TAMP backup 29 register
0x46007D74 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D78 B  REGISTER TAMP_BKP30R: TAMP backup 30 register
0x46007D78 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46007D7C B  REGISTER TAMP_BKP31R: TAMP backup 31 register
0x46007D7C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x46020000 A PERIPHERAL LPGPIO1
0x46020000 B  REGISTER LPGPIO_MODER (rw): LPGPIO port mode register
0x46020000 C   FIELD 00w01 MODE0: MODE0
0x46020000 C   FIELD 01w01 MODE1: MODE1
0x46020000 C   FIELD 02w01 MODE2: MODE2
0x46020000 C   FIELD 03w01 MODE3: MODE3
0x46020000 C   FIELD 04w01 MODE4: MODE4
0x46020000 C   FIELD 05w01 MODE5: MODE5
0x46020000 C   FIELD 06w01 MODE6: MODE6
0x46020000 C   FIELD 07w01 MODE7: MODE7
0x46020000 C   FIELD 08w01 MODE8: MODE8
0x46020000 C   FIELD 09w01 MODE9: MODE9
0x46020000 C   FIELD 10w01 MODE10: MODE10
0x46020000 C   FIELD 11w01 MODE11: MODE11
0x46020000 C   FIELD 12w01 MODE12: MODE12
0x46020000 C   FIELD 13w01 MODE13: MODE13
0x46020000 C   FIELD 14w01 MODE14: MODE14
0x46020000 C   FIELD 15w01 MODE15: MODE15
0x46020010 B  REGISTER LPGPIO_IDR (ro): LPGPIO port input data register
0x46020010 C   FIELD 00w16 IDy: IDy
0x46020014 B  REGISTER LPGPIO_ODR (rw): LPGPIO port output data register
0x46020014 C   FIELD 00w01 ODy0: ODy0
0x46020014 C   FIELD 01w01 ODy1: ODy1
0x46020014 C   FIELD 02w01 ODy2: ODy2
0x46020014 C   FIELD 03w01 ODy3: ODy3
0x46020014 C   FIELD 04w01 ODy4: ODy4
0x46020014 C   FIELD 05w01 ODy5: ODy5
0x46020014 C   FIELD 06w01 ODy6: ODy6
0x46020014 C   FIELD 07w01 ODy7: ODy7
0x46020014 C   FIELD 08w01 ODy8: ODy8
0x46020014 C   FIELD 09w01 ODy9: ODy9
0x46020014 C   FIELD 10w01 ODy10: ODy10
0x46020014 C   FIELD 11w01 ODy11: ODy11
0x46020014 C   FIELD 12w01 ODy12: ODy12
0x46020014 C   FIELD 13w01 ODy13: ODy13
0x46020014 C   FIELD 14w01 ODy14: ODy14
0x46020014 C   FIELD 15w01 ODy15: ODy15
0x46020018 B  REGISTER LPGPIO_BSRR (wo): LPGPIO port bit set/reset register
0x46020018 C   FIELD 00w01 BSy0: BSy0
0x46020018 C   FIELD 01w01 BSy1: BSy1
0x46020018 C   FIELD 02w01 BSy2: BSy2
0x46020018 C   FIELD 03w01 BSy3: BSy3
0x46020018 C   FIELD 04w01 BSy4: BSy4
0x46020018 C   FIELD 05w01 BSy5: BSy5
0x46020018 C   FIELD 06w01 BSy6: BSy6
0x46020018 C   FIELD 07w01 BSy7: BSy7
0x46020018 C   FIELD 08w01 BSy8: BSy8
0x46020018 C   FIELD 09w01 BSy9: BSy9
0x46020018 C   FIELD 10w01 BSy10: BSy10
0x46020018 C   FIELD 11w01 BSy11: BSy11
0x46020018 C   FIELD 12w01 BSy12: BSy12
0x46020018 C   FIELD 13w01 BSy13: BSy13
0x46020018 C   FIELD 14w01 BSy14: BSy14
0x46020018 C   FIELD 15w01 BSy15: BSy15
0x46020018 C   FIELD 16w01 BRy16: BRy16
0x46020018 C   FIELD 17w01 BRy17: BRy17
0x46020018 C   FIELD 18w01 BRy18: BRy18
0x46020018 C   FIELD 19w01 BRy19: BRy19
0x46020018 C   FIELD 20w01 BRy20: BRy20
0x46020018 C   FIELD 21w01 BRy21: BRy21
0x46020018 C   FIELD 22w01 BRy22: BRy22
0x46020018 C   FIELD 23w01 BRy23: BRy23
0x46020018 C   FIELD 24w01 BRy24: BRy24
0x46020018 C   FIELD 25w01 BRy25: BRy25
0x46020018 C   FIELD 26w01 BRy26: BRy26
0x46020018 C   FIELD 27w01 BRy27: BRy27
0x46020018 C   FIELD 28w01 BRy28: BRy28
0x46020018 C   FIELD 29w01 BRy29: BRy29
0x46020018 C   FIELD 30w01 BRy30: BRy30
0x46020018 C   FIELD 31w01 BRy31: BRy31
0x46020028 B  REGISTER LPGPIO_BRR (ro): LPGPIO port bit reset register
0x46020028 C   FIELD 00w01 BRy0: BRy0
0x46020028 C   FIELD 01w01 BRy1: BRy1
0x46020028 C   FIELD 02w01 BRy2: BRy2
0x46020028 C   FIELD 03w01 BRy3: BRy3
0x46020028 C   FIELD 04w01 BRy4: BRy4
0x46020028 C   FIELD 05w01 BRy5: BRy5
0x46020028 C   FIELD 06w01 BRy6: BRy6
0x46020028 C   FIELD 07w01 BRy7: BRy7
0x46020028 C   FIELD 08w01 BRy8: BRy8
0x46020028 C   FIELD 09w01 BRy9: BRy9
0x46020028 C   FIELD 10w01 BRy10: BRy10
0x46020028 C   FIELD 11w01 BRy11: BRy11
0x46020028 C   FIELD 12w01 BRy12: BRy12
0x46020028 C   FIELD 13w01 BRy13: BRy13
0x46020028 C   FIELD 14w01 BRy14: BRy14
0x46020028 C   FIELD 15w01 BRy15: BRy15
0x46020800 A PERIPHERAL PWR
0x46020800 B  REGISTER PWR_CR1: PWR control register 1
0x46020800 C   FIELD 00w03 LPMS (rw): Low-power mode selection These bits select the low-power mode entered when the CPU enters the Deepsleep mode. 10x: Standby mode (Standby mode also entered if LPMS = 11X in PWR_CR1 with BREN = 1 in PWR_BDCR1) 11x: Shutdown mode if BREN = 0 in PWR_BDCR1
0x46020800 C   FIELD 05w01 RRSB1 (rw): SRAM2 page 1 retention in Stop 3 and Standby modes This bit is used to keep the SRAM2 page 1 content in Stop 3 and Standby modes. The SRAM2 page 1 corresponds to the first 8 Kbytes of the SRAM2 (from SRAM2 base address to SRAM2 base address + 0x1FFF). Note: This bit has no effect in Shutdown mode.
0x46020800 C   FIELD 06w01 RRSB2 (rw): SRAM2 page 2 retention in Stop 3 and Standby modes This bit is used to keep the SRAM2 page 2 content in Stop 3 and Standby modes. The SRAM2 page 2 corresponds to the last 56 Kbytes of the SRAM2 (from SRAM2 base address + 0x2000 to SRAM2 base address + 0xFFFF). Note: This bit has no effect in Shutdown mode.
0x46020800 C   FIELD 07w01 ULPMEN (rw): BOR ultra-low power mode This bit is used to reduce the consumption by configuring the BOR in discontinuous mode. This bit must be set to reach the lowest power consumption in the low-power modes.
0x46020800 C   FIELD 08w01 SRAM1PD (rw): SRAM1 power down This bit is used to reduce the consumption by powering off the SRAM1.
0x46020800 C   FIELD 09w01 SRAM2PD (rw): SRAM2 power down This bit is used to reduce the consumption by powering off the SRAM2.
0x46020800 C   FIELD 10w01 SRAM3PD (rw): SRAM3 power down This bit is used to reduce the consumption by powering off the SRAM3.
0x46020800 C   FIELD 11w01 SRAM4PD (rw): SRAM4 power down This bit is used to reduce the consumption by powering off the SRAM4.
0x46020804 B  REGISTER PWR_CR2: PWR control register 2
0x46020804 C   FIELD 00w01 SRAM1PDS1 (rw): SRAM1 page 1 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 01w01 SRAM1PDS2 (rw): SRAM1 page 2 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 02w01 SRAM1PDS3 (rw): SRAM1 page 3 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 04w01 SRAM2PDS1 (rw): SRAM2 page 1 (8 Kbytes) power-down in Stop modes (Stop 0, 1, 2) Note: The SRAM2 page 1 retention in Stop 3 is controlled by RRSB1 bit in PWR_CR1.
0x46020804 C   FIELD 05w01 SRAM2PDS2 (rw): SRAM2 page 2 (56 Kbytes) power-down in Stop modes (Stop 0, 1, 2) Note: The SRAM2 page 2 retention in Stop 3 is controlled by RRSB2 bit in PWR_CR1.
0x46020804 C   FIELD 06w01 SRAM4PDS (rw): SRAM4 power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 08w01 ICRAMPDS (rw): ICACHE SRAM power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 09w01 DC1RAMPDS (rw): DCACHE1 SRAM power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 10w01 DMA2DRAMPDS (rw): DMA2D SRAM power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 11w01 PRAMPDS (rw): FMAC, FDCAN and USB peripherals SRAM power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 12w01 PKARAMPDS (rw): PKA SRAM power-down
0x46020804 C   FIELD 13w01 SRAM4FWU (rw): SRAM4 fast wakeup from Stop 0, Stop 1 and Stop 2 modes This bit is used to obtain the best trade-off between low-power consumption and wakeup time. SRAM4 wakeup time increases the wakeup time when exiting Stop 0, 1 and 2 modes, and also increases the LPDMA access time to SRAM4 during Stop modes.
0x46020804 C   FIELD 14w01 FLASHFWU (rw): Flash memory fast wakeup from Stop 0 and Stop 1 modes This bit is used to obtain the best trade-off between low-power consumption and wakeup time when exiting the Stop 0 or Stop 1 modes. When this bit is set, the Flash memory remains in normal mode in Stop 0 and Stop 1 modes, which offers a faster startup time with higher consumption.
0x46020804 C   FIELD 16w01 SRAM3PDS1 (rw): SRAM3 page 1 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 17w01 SRAM3PDS2 (rw): SRAM3 page 2 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 18w01 SRAM3PDS3 (rw): SRAM3 page 3 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 19w01 SRAM3PDS4 (rw): SRAM3 page 4 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 20w01 SRAM3PDS5 (rw): SRAM3 page 5 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 21w01 SRAM3PDS6 (rw): SRAM3 page 6 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 22w01 SRAM3PDS7 (rw): SRAM3 page 7 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 23w01 SRAM3PDS8 (rw): SRAM3 page 8 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x46020804 C   FIELD 31w01 SRDRUN (rw): SmartRun domain in Run mode
0x46020808 B  REGISTER PWR_CR3: PWR control register 3
0x46020808 C   FIELD 01w01 REGSEL (rw): Regulator selection Note: REGSEL is reserved and must be kept at reset value in packages without SMPS.
0x46020808 C   FIELD 02w01 FSTEN (rw): Fast soft start
0x4602080C B  REGISTER PWR_VOSR: PWR voltage scaling register
0x4602080C C   FIELD 14w01 BOOSTRDY (ro): EPOD booster ready This bit is set to 1 by hardware when the power booster startup time is reached. The system clock frequency can be switched higher than 50 MHz only after this bit is set.
0x4602080C C   FIELD 15w01 VOSRDY (ro): Ready bit for VCORE voltage scaling output selection
0x4602080C C   FIELD 16w02 VOS (rw): Voltage scaling range selection This field is protected against non-secure access when SYSCLKSEC = 1 in RCC_SECCFGR. It is protected against unprivileged access when SYSCLKSEC = 1 in RCC_SECCFGR and SPRIV = 1 in PWR_PRIVCFGR, or when SYSCLKSEC = 0 and NSPRIV = 1.
0x4602080C C   FIELD 18w01 BOOSTEN (rw): EPOD booster enable
0x46020810 B  REGISTER PWR_SVMCR: PWR supply voltage monitoring control register
0x46020810 C   FIELD 04w01 PVDE (rw): Power voltage detector enable
0x46020810 C   FIELD 05w03 PVDLS (rw): Power voltage detector level selection These bits select the voltage threshold detected by the power voltage detector:
0x46020810 C   FIELD 24w01 UVMEN (rw): VDDUSB independent USB voltage monitor enable
0x46020810 C   FIELD 25w01 IO2VMEN (rw): VDDIO2 independent I/Os voltage monitor enable
0x46020810 C   FIELD 26w01 AVM1EN (rw): VDDA independent analog supply voltage monitor 1 enable (1.6 V threshold)
0x46020810 C   FIELD 27w01 AVM2EN (rw): VDDA independent analog supply voltage monitor 2 enable (1.8 V threshold)
0x46020810 C   FIELD 28w01 USV (rw): VDDUSB independent USB supply valid
0x46020810 C   FIELD 29w01 IO2SV (rw): VDDIO2 independent I/Os supply valid This bit is used to validate the VDDIO2 supply for electrical and logical isolation purpose. Setting this bit is mandatory to use PG[15:2]. If VDDIO2 is not always present in the application, the VDDIO2 voltage monitor can be used to determine whether this supply is ready or not.
0x46020810 C   FIELD 30w01 ASV (rw): VDDA independent analog supply valid
0x46020814 B  REGISTER PWR_WUCR1: PWR wakeup control register 1
0x46020814 C   FIELD 00w01 WUPEN1 (rw): Wakeup pin WKUP1 enable
0x46020814 C   FIELD 01w01 WUPEN2 (rw): Wakeup pin WKUP2 enable
0x46020814 C   FIELD 02w01 WUPEN3 (rw): Wakeup pin WKUP3 enable
0x46020814 C   FIELD 03w01 WUPEN4 (rw): Wakeup pin WKUP4 enable
0x46020814 C   FIELD 04w01 WUPEN5 (rw): Wakeup pin WKUP5 enable
0x46020814 C   FIELD 05w01 WUPEN6 (rw): Wakeup pin WKUP6 enable
0x46020814 C   FIELD 06w01 WUPEN7 (rw): Wakeup pin WKUP7 enable
0x46020814 C   FIELD 07w01 WUPEN8 (rw): Wakeup pin WKUP8 enable
0x46020818 B  REGISTER PWR_WUCR2: PWR wakeup control register 2
0x46020818 C   FIELD 00w01 WUPP1 (rw): Wakeup pin WKUP1 polarity. This bit must be configured when WUPEN1 = 0.
0x46020818 C   FIELD 01w01 WUPP2 (rw): Wakeup pin WKUP2 polarity This bit must be configured when WUPEN2 = 0.
0x46020818 C   FIELD 02w01 WUPP3 (rw): Wakeup pin WKUP3 polarity This bit must be configured when WUPEN3 = 0.
0x46020818 C   FIELD 03w01 WUPP4 (rw): Wakeup pin WKUP4 polarity This bit must be configured when WUPEN4 = 0.
0x46020818 C   FIELD 04w01 WUPP5 (rw): Wakeup pin WKUP5 polarity This bit must be configured when WUPEN5 = 0.
0x46020818 C   FIELD 05w01 WUPP6 (rw): Wakeup pin WKUP6 polarity This bit must be configured when WUPEN6 = 0.
0x46020818 C   FIELD 06w01 WUPP7 (rw): Wakeup pin WKUP7 polarity This bit must be configured when WUPEN7 = 0.
0x46020818 C   FIELD 07w01 WUPP8 (rw): Wakeup pin WKUP8 polarity This bit must be configured when WUPEN8 = 0.
0x4602081C B  REGISTER PWR_WUCR3: PWR wakeup control register 3
0x4602081C C   FIELD 00w02 WUSEL1 (rw): Wakeup pin WKUP1 selection This field must be configured when WUPEN1 = 0.
0x4602081C C   FIELD 02w02 WUSEL2 (rw): Wakeup pin WKUP2 selection This field must be configured when WUPEN2 = 0.
0x4602081C C   FIELD 04w02 WUSEL3 (rw): Wakeup pin WKUP3 selection This field must be configured when WUPEN3 = 0.
0x4602081C C   FIELD 06w02 WUSEL4 (rw): Wakeup pin WKUP4 selection This field must be configured when WUPEN4 = 0.
0x4602081C C   FIELD 08w02 WUSEL5 (rw): Wakeup pin WKUP5 selection This field must be configured when WUPEN5 = 0.
0x4602081C C   FIELD 10w02 WUSEL6 (rw): Wakeup pin WKUP6 selection This field must be configured when WUPEN6 = 0.
0x4602081C C   FIELD 12w02 WUSEL7 (rw): Wakeup pin WKUP7 selection This field must be configured when WUPEN7 = 0.
0x4602081C C   FIELD 14w02 WUSEL8 (rw): Wakeup pin WKUP8 selection This field must be configured when WUPEN8 = 0.
0x46020820 B  REGISTER PWR_BDCR1: PWR Backup domain control register 1
0x46020820 C   FIELD 00w01 BREN (rw): Backup RAM retention in Standby and VBAT modes When this bit is set, the backup RAM content is kept in Standby and VBAT modes. If BREN is reset, the backup RAM can still be used in Run, Sleep and Stop modes. However, its content is lost in Standby, Shutdown and VBAT modes. This bit can be written only when the regulator is LDO, which must be configured before switching to SMPS. Note: Backup RAM cannot be preserved in Shutdown mode.
0x46020820 C   FIELD 04w01 MONEN (rw): Backup domain voltage and temperature monitoring enable
0x46020824 B  REGISTER PWR_BDCR2: PWR Backup domain control register 2
0x46020824 C   FIELD 00w01 VBE (rw): VBAT charging enable
0x46020824 C   FIELD 01w01 VBRS (rw): VBAT charging resistor selection
0x46020828 B  REGISTER PWR_DBPR: PWR disable Backup domain register
0x46020828 C   FIELD 00w01 DBP (rw): Disable Backup domain write protection In reset state, all registers and SRAM in Backup domain are protected against parasitic write access. This bit must be set to enable the write access to these registers.
0x4602082C B  REGISTER PWR_UCPDR: PWR USB Type-C™ and Power Delivery register
0x4602082C C   FIELD 00w01 UCPD_DBDIS (rw): UCPD dead battery disable After exiting reset, the USB Type-C “dead battery” behavior is enabled, which may have a pull-down effect on CC1 and CC2 pins. It is recommended to disable it in all cases, either to stop this pull-down or to handover control to the UCPD (the UCPD must be initialized before doing the disable).
0x4602082C C   FIELD 01w01 UCPD_STBY (rw): UCPD Standby mode When set, this bit is used to memorize the UCPD configuration in Standby mode. This bit must be written to 1 just before entering Standby mode when using UCPD. It must be written to 0 after exiting the Standby mode and before writing any UCPD registers.
0x46020830 B  REGISTER PWR_SECCFGR: PWR security configuration register
0x46020830 C   FIELD 00w01 WUP1SEC (rw): WUP1 secure protection
0x46020830 C   FIELD 01w01 WUP2SEC (rw): WUP2 secure protection
0x46020830 C   FIELD 02w01 WUP3SEC (rw): WUP3 secure protection
0x46020830 C   FIELD 03w01 WUP4SEC (rw): WUP4 secure protection
0x46020830 C   FIELD 04w01 WUP5SEC (rw): WUP5 secure protection
0x46020830 C   FIELD 05w01 WUP6SEC (rw): WUP6 secure protection
0x46020830 C   FIELD 06w01 WUP7SEC (rw): WUP7 secure protection
0x46020830 C   FIELD 07w01 WUP8SEC (rw): WUP8 secure protection
0x46020830 C   FIELD 12w01 LPMSEC (rw): Low-power modes secure protection
0x46020830 C   FIELD 13w01 VDMSEC (rw): Voltage detection and monitoring secure protection
0x46020830 C   FIELD 14w01 VBSEC (rw): Backup domain secure protection
0x46020830 C   FIELD 15w01 APCSEC (rw): Pull-up/pull-down secure protection
0x46020834 B  REGISTER PWR_PRIVCFGR: PWR privilege control register
0x46020834 C   FIELD 00w01 SPRIV (rw): PWR secure functions privilege configuration This bit is set and reset by software. It can be written only by a secure privileged access.
0x46020834 C   FIELD 01w01 NSPRIV (rw): PWR non-secure functions privilege configuration This bit is set and reset by software. It can be written only by privileged access, secure or non-secure.
0x46020838 B  REGISTER PWR_SR: PWR status register
0x46020838 C   FIELD 00w01 CSSF (wo): Clear Stop and Standby flags This bit is protected against non-secure access when LPMSEC = 1 in PWR_SECCFGR. This bit is protected against unprivileged access when LPMSEC = 1 and SPRIV = 1 in PWR_PRIVCFGR, or when LPMSEC = 0 and NSPRIV = 1. Writing 1 to this bit clears the STOPF and SBF flags.
0x46020838 C   FIELD 01w01 STOPF (ro): Stop flag This bit is set by hardware when the device enters a Stop mode, and is cleared by software by writing 1 to the CSSF bit.
0x46020838 C   FIELD 02w01 SBF (ro): Standby flag This bit is set by hardware when the device enters the Standby mode, and is cleared by writing 1 to the CSSF bit, or by a power-on reset. It is not cleared by the system reset.
0x4602083C B  REGISTER PWR_SVMSR: 
0x4602083C C   FIELD 01w01 REGS (ro): Regulator selection
0x4602083C C   FIELD 04w01 PVDO (ro): VDD voltage detector output
0x4602083C C   FIELD 15w01 ACTVOSRDY (ro): Voltage level ready for currently used VOS
0x4602083C C   FIELD 16w02 ACTVOS (ro): VOS currently applied to VCORE This field provides the last VOS value.
0x4602083C C   FIELD 24w01 VDDUSBRDY (ro): VDDUSB ready
0x4602083C C   FIELD 25w01 VDDIO2RDY (ro): VDDIO2 ready
0x4602083C C   FIELD 26w01 VDDA1RDY (ro): VDDA ready versus 1.6V voltage monitor
0x4602083C C   FIELD 27w01 VDDA2RDY (ro): VDDA ready versus 1.8 V voltage monitor
0x46020840 B  REGISTER PWR_BDSR: PWR Backup domain status register
0x46020840 C   FIELD 01w01 VBATH (ro): Backup domain voltage level monitoring versus high threshold
0x46020840 C   FIELD 02w01 TEMPL (ro): Temperature level monitoring versus low threshold
0x46020840 C   FIELD 03w01 TEMPH (ro): Temperature level monitoring versus high threshold
0x46020844 B  REGISTER PWR_WUSR: PWR wakeup status register
0x46020844 C   FIELD 00w01 WUF1 (ro): Wakeup flag 1 This bit is set when a wakeup event is detected on WKUP1 pin. This bit is cleared by writing 1 in the CWUF1 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN1 = 0.
0x46020844 C   FIELD 01w01 WUF2 (ro): Wakeup flag 2 This bit is set when a wakeup event is detected on WKUP2 pin. This bit is cleared by writing 1 in the CWUF2 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN2 = 0.
0x46020844 C   FIELD 02w01 WUF3 (ro): Wakeup flag 3 This bit is set when a wakeup event is detected on WKUP3 pin. This bit is cleared by writing 1 in the CWUF3 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN3 = 0.
0x46020844 C   FIELD 03w01 WUF4 (ro): Wakeup flag 4 This bit is set when a wakeup event is detected on WKUP4 pin. This bit is cleared by writing 1 in the CWUF4 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN4 = 0.
0x46020844 C   FIELD 04w01 WUF5 (ro): Wakeup flag 5 This bit is set when a wakeup event is detected on WKUP5 pin. This bit is cleared by writing 1 in the CWUF5 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN5 = 0.
0x46020844 C   FIELD 05w01 WUF6 (ro): Wakeup flag 6 This bit is set when a wakeup event is detected on WKUP6 pin. This bit is cleared by writing 1 in the CWUF6 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN6 = 0. If WUSEL = 11, this bit is cleared by hardware when all internal wakeup source are cleared.
0x46020844 C   FIELD 06w01 WUF7 (ro): Wakeup flag 7 This bit is set when a wakeup event is detected on WKUP7 pin. This bit is cleared by writing 1 in the CWUF7 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN7 = 0. If WUSEL = 11, this bit is cleared by hardware when all internal wakeup source are cleared.
0x46020844 C   FIELD 07w01 WUF8 (ro): Wakeup flag 8 This bit is set when a wakeup event is detected on WKUP8 pin. This bit is cleared by writing 1 in the CWUF8 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN8 = 0. If WUSEL = 11, this bit is cleared by hardware when all internal wakeup source are cleared.
0x46020848 B  REGISTER PWR_WUSCR: PWR wakeup status clear register
0x46020848 C   FIELD 00w01 CWUF1 (wo): Wakeup flag 1 Writing 1 to this bit clears the WUF1 flag in PWR_WUSR.
0x46020848 C   FIELD 01w01 CWUF2 (wo): Wakeup flag 2 Writing 1 to this bit clears the WUF2 flag in PWR_WUSR.
0x46020848 C   FIELD 02w01 CWUF3 (wo): Wakeup flag 3 Writing 1 to this bit clears the WUF3 flag in PWR_WUSR.
0x46020848 C   FIELD 03w01 CWUF4 (wo): Wakeup flag 4 Writing 1 to this bit clears the WUF4 flag in PWR_WUSR.
0x46020848 C   FIELD 04w01 CWUF5 (wo): Wakeup flag 5 Writing 1 to this bit clears the WUF5 flag in PWR_WUSR.
0x46020848 C   FIELD 05w01 CWUF6 (wo): Wakeup flag 6 Writing 1 to this bit clears the WUF6 flag in PWR_WUSR.
0x46020848 C   FIELD 06w01 CWUF7 (wo): Wakeup flag 7 Writing 1 to this bit clears the WUF7 flag in PWR_WUSR.
0x46020848 C   FIELD 07w01 CWUF8 (wo): Wakeup flag 8 Writing 1 to this bit clears the WUF8 flag in PWR_WUSR.
0x4602084C B  REGISTER PWR_APCR: PWR apply pull configuration register
0x4602084C C   FIELD 00w01 APC (rw): Apply pull-up and pull-down configuration When this bit is set, the I/O pull-up and pull-down configurations defined in PWR_PUCRx and PWR_PDCRx are applied. When this bit is cleared, PWR_PUCRx and PWR_PDCRx are not applied to the I/Os.
0x46020850 B  REGISTER PWR_PUCRA: PWR port A pull-up control register
0x46020850 C   FIELD 00w01 PU0 (rw): Port A pull-up bit
0x46020850 C   FIELD 01w01 PU1 (rw): Port A pull-up bit
0x46020850 C   FIELD 02w01 PU2 (rw): Port A pull-up bit
0x46020850 C   FIELD 03w01 PU3 (rw): Port A pull-up bit
0x46020850 C   FIELD 04w01 PU4 (rw): Port A pull-up bit
0x46020850 C   FIELD 05w01 PU5 (rw): Port A pull-up bit
0x46020850 C   FIELD 06w01 PU6 (rw): Port A pull-up bit
0x46020850 C   FIELD 07w01 PU7 (rw): Port A pull-up bit
0x46020850 C   FIELD 08w01 PU8 (rw): Port A pull-up bit
0x46020850 C   FIELD 09w01 PU9 (rw): Port A pull-up bit
0x46020850 C   FIELD 10w01 PU10 (rw): Port A pull-up bit
0x46020850 C   FIELD 11w01 PU11 (rw): Port A pull-up bit
0x46020850 C   FIELD 12w01 PU12 (rw): Port A pull-up bit
0x46020850 C   FIELD 13w01 PU13 (rw): Port A pull-up bit
0x46020850 C   FIELD 15w01 PU15 (rw): Port A pull-up bit 15 When set, this bit activates the pull-up on PA15 when the APC bit is set in PWR_APCR. The pull-up is not activated if the corresponding PD15 bit is also set.
0x46020854 B  REGISTER PWR_PDCRA: PWR port A pull-down control register
0x46020854 C   FIELD 00w01 PD0 (rw): Port A pull-down bit
0x46020854 C   FIELD 01w01 PD1 (rw): Port A pull-down bit
0x46020854 C   FIELD 02w01 PD2 (rw): Port A pull-down bit
0x46020854 C   FIELD 03w01 PD3 (rw): Port A pull-down bit
0x46020854 C   FIELD 04w01 PD4 (rw): Port A pull-down bit
0x46020854 C   FIELD 05w01 PD5 (rw): Port A pull-down bit
0x46020854 C   FIELD 06w01 PD6 (rw): Port A pull-down bit
0x46020854 C   FIELD 07w01 PD7 (rw): Port A pull-down bit
0x46020854 C   FIELD 08w01 PD8 (rw): Port A pull-down bit
0x46020854 C   FIELD 09w01 PD9 (rw): Port A pull-down bit
0x46020854 C   FIELD 10w01 PD10 (rw): Port A pull-down bit
0x46020854 C   FIELD 11w01 PD11 (rw): Port A pull-down bit
0x46020854 C   FIELD 12w01 PD12 (rw): Port A pull-down bit
0x46020854 C   FIELD 14w01 PD14 (rw): Port A pull-down bit
0x46020858 B  REGISTER PWR_PUCRB: PWR port B pull-up control register
0x46020858 C   FIELD 00w01 PU0 (rw): Port B pull-up bit
0x46020858 C   FIELD 01w01 PU1 (rw): Port B pull-up bit
0x46020858 C   FIELD 02w01 PU2 (rw): Port B pull-up bit
0x46020858 C   FIELD 03w01 PU3 (rw): Port B pull-up bit
0x46020858 C   FIELD 04w01 PU4 (rw): Port B pull-up bit
0x46020858 C   FIELD 05w01 PU5 (rw): Port B pull-up bit
0x46020858 C   FIELD 06w01 PU6 (rw): Port B pull-up bit
0x46020858 C   FIELD 07w01 PU7 (rw): Port B pull-up bit
0x46020858 C   FIELD 08w01 PU8 (rw): Port B pull-up bit
0x46020858 C   FIELD 09w01 PU9 (rw): Port B pull-up bit
0x46020858 C   FIELD 10w01 PU10 (rw): Port B pull-up bit
0x46020858 C   FIELD 11w01 PU11 (rw): Port B pull-up bit
0x46020858 C   FIELD 12w01 PU12 (rw): Port B pull-up bit
0x46020858 C   FIELD 13w01 PU13 (rw): Port B pull-up bit
0x46020858 C   FIELD 14w01 PU14 (rw): Port B pull-up bit
0x46020858 C   FIELD 15w01 PU15 (rw): Port B pull-up bit
0x4602085C B  REGISTER PWR_PDCRB: PWR port B pull-down control register
0x4602085C C   FIELD 00w01 PD0 (rw): Port B pull-down bit
0x4602085C C   FIELD 01w01 PD1 (rw): Port B pull-down bit
0x4602085C C   FIELD 02w01 PD2 (rw): Port B pull-down bit
0x4602085C C   FIELD 03w01 PD3 (rw): Port B pull-down bit
0x4602085C C   FIELD 05w01 PD5 (rw): Port B pull-down bit
0x4602085C C   FIELD 06w01 PD6 (rw): Port B pull-down bit
0x4602085C C   FIELD 07w01 PD7 (rw): Port B pull-down bit
0x4602085C C   FIELD 08w01 PD8 (rw): Port B pull-down bit
0x4602085C C   FIELD 09w01 PD9 (rw): Port B pull-down bit
0x4602085C C   FIELD 10w01 PD10 (rw): Port B pull-down bit
0x4602085C C   FIELD 11w01 PD11 (rw): Port B pull-down bit
0x4602085C C   FIELD 12w01 PD12 (rw): Port B pull-down bit
0x4602085C C   FIELD 13w01 PD13 (rw): Port B pull-down bit
0x4602085C C   FIELD 14w01 PD14 (rw): Port B pull-down bit
0x4602085C C   FIELD 15w01 PD15 (rw): Port B pull-down bit
0x46020860 B  REGISTER PWR_PUCRC: PWR port C pull-up control register
0x46020860 C   FIELD 00w01 PU0 (rw): Port C pull-up bit
0x46020860 C   FIELD 01w01 PU1 (rw): Port C pull-up bit
0x46020860 C   FIELD 02w01 PU2 (rw): Port C pull-up bit
0x46020860 C   FIELD 03w01 PU3 (rw): Port C pull-up bit
0x46020860 C   FIELD 04w01 PU4 (rw): Port C pull-up bit
0x46020860 C   FIELD 05w01 PU5 (rw): Port C pull-up bit
0x46020860 C   FIELD 06w01 PU6 (rw): Port C pull-up bit
0x46020860 C   FIELD 07w01 PU7 (rw): Port C pull-up bit
0x46020860 C   FIELD 08w01 PU8 (rw): Port C pull-up bit
0x46020860 C   FIELD 09w01 PU9 (rw): Port C pull-up bit
0x46020860 C   FIELD 10w01 PU10 (rw): Port C pull-up bit
0x46020860 C   FIELD 11w01 PU11 (rw): Port C pull-up bit
0x46020860 C   FIELD 12w01 PU12 (rw): Port C pull-up bit
0x46020860 C   FIELD 13w01 PU13 (rw): Port C pull-up bit
0x46020860 C   FIELD 14w01 PU14 (rw): Port C pull-up bit
0x46020860 C   FIELD 15w01 PU15 (rw): Port C pull-up bit
0x46020864 B  REGISTER PWR_PDCRC: PWR port C pull-down control register
0x46020864 C   FIELD 00w01 PD0 (rw): Port C pull-down bit
0x46020864 C   FIELD 01w01 PD1 (rw): Port C pull-down bit
0x46020864 C   FIELD 02w01 PD2 (rw): Port C pull-down bit
0x46020864 C   FIELD 03w01 PD3 (rw): Port C pull-down bit
0x46020864 C   FIELD 04w01 PD4 (rw): Port C pull-down bit
0x46020864 C   FIELD 05w01 PD5 (rw): Port C pull-down bit
0x46020864 C   FIELD 06w01 PD6 (rw): Port C pull-down bit
0x46020864 C   FIELD 07w01 PD7 (rw): Port C pull-down bit
0x46020864 C   FIELD 08w01 PD8 (rw): Port C pull-down bit
0x46020864 C   FIELD 09w01 PD9 (rw): Port C pull-down bit
0x46020864 C   FIELD 10w01 PD10 (rw): Port C pull-down bit
0x46020864 C   FIELD 11w01 PD11 (rw): Port C pull-down bit
0x46020864 C   FIELD 12w01 PD12 (rw): Port C pull-down bit
0x46020864 C   FIELD 13w01 PD13 (rw): Port C pull-down bit
0x46020864 C   FIELD 14w01 PD14 (rw): Port C pull-down bit
0x46020864 C   FIELD 15w01 PD15 (rw): Port C pull-down bit
0x46020868 B  REGISTER PWR_PUCRD: PWR port D pull-up control register
0x46020868 C   FIELD 00w01 PU0 (rw): Port D pull-up bit
0x46020868 C   FIELD 01w01 PU1 (rw): Port D pull-up bit
0x46020868 C   FIELD 02w01 PU2 (rw): Port D pull-up bit
0x46020868 C   FIELD 03w01 PU3 (rw): Port D pull-up bit
0x46020868 C   FIELD 04w01 PU4 (rw): Port D pull-up bit
0x46020868 C   FIELD 05w01 PU5 (rw): Port D pull-up bit
0x46020868 C   FIELD 06w01 PU6 (rw): Port D pull-up bit
0x46020868 C   FIELD 07w01 PU7 (rw): Port D pull-up bit
0x46020868 C   FIELD 08w01 PU8 (rw): Port D pull-up bit
0x46020868 C   FIELD 09w01 PU9 (rw): Port D pull-up bit
0x46020868 C   FIELD 10w01 PU10 (rw): Port D pull-up bit
0x46020868 C   FIELD 11w01 PU11 (rw): Port D pull-up bit
0x46020868 C   FIELD 12w01 PU12 (rw): Port D pull-up bit
0x46020868 C   FIELD 13w01 PU13 (rw): Port D pull-up bit
0x46020868 C   FIELD 14w01 PU14 (rw): Port D pull-up bit
0x46020868 C   FIELD 15w01 PU15 (rw): Port D pull-up bit
0x4602086C B  REGISTER PWR_PDCRD: PWR port D pull-down control register
0x4602086C C   FIELD 00w01 PD0 (rw): Port D pull-down bit
0x4602086C C   FIELD 01w01 PD1 (rw): Port D pull-down bit
0x4602086C C   FIELD 02w01 PD2 (rw): Port D pull-down bit
0x4602086C C   FIELD 03w01 PD3 (rw): Port D pull-down bit
0x4602086C C   FIELD 04w01 PD4 (rw): Port D pull-down bit
0x4602086C C   FIELD 05w01 PD5 (rw): Port D pull-down bit
0x4602086C C   FIELD 06w01 PD6 (rw): Port D pull-down bit
0x4602086C C   FIELD 07w01 PD7 (rw): Port D pull-down bit
0x4602086C C   FIELD 08w01 PD8 (rw): Port D pull-down bit
0x4602086C C   FIELD 09w01 PD9 (rw): Port D pull-down bit
0x4602086C C   FIELD 10w01 PD10 (rw): Port D pull-down bit
0x4602086C C   FIELD 11w01 PD11 (rw): Port D pull-down bit
0x4602086C C   FIELD 12w01 PD12 (rw): Port D pull-down bit
0x4602086C C   FIELD 13w01 PD13 (rw): Port D pull-down bit
0x4602086C C   FIELD 14w01 PD14 (rw): Port D pull-down bit
0x4602086C C   FIELD 15w01 PD15 (rw): Port D pull-down bit
0x46020870 B  REGISTER PWR_PUCRE: PWR port E pull-up control register
0x46020870 C   FIELD 00w01 PU0 (rw): Port E pull-up bit
0x46020870 C   FIELD 01w01 PU1 (rw): Port E pull-up bit
0x46020870 C   FIELD 02w01 PU2 (rw): Port E pull-up bit
0x46020870 C   FIELD 03w01 PU3 (rw): Port E pull-up bit
0x46020870 C   FIELD 04w01 PU4 (rw): Port E pull-up bit
0x46020870 C   FIELD 05w01 PU5 (rw): Port E pull-up bit
0x46020870 C   FIELD 06w01 PU6 (rw): Port E pull-up bit
0x46020870 C   FIELD 07w01 PU7 (rw): Port E pull-up bit
0x46020870 C   FIELD 08w01 PU8 (rw): Port E pull-up bit
0x46020870 C   FIELD 09w01 PU9 (rw): Port E pull-up bit
0x46020870 C   FIELD 10w01 PU10 (rw): Port E pull-up bit
0x46020870 C   FIELD 11w01 PU11 (rw): Port E pull-up bit
0x46020870 C   FIELD 12w01 PU12 (rw): Port E pull-up bit
0x46020870 C   FIELD 13w01 PU13 (rw): Port E pull-up bit
0x46020870 C   FIELD 14w01 PU14 (rw): Port E pull-up bit
0x46020870 C   FIELD 15w01 PU15 (rw): Port E pull-up bit
0x46020874 B  REGISTER PWR_PDCRE: PWR port E pull-down control register
0x46020874 C   FIELD 00w01 PD0 (rw): Port E pull-down bit
0x46020874 C   FIELD 01w01 PD1 (rw): Port E pull-down bit
0x46020874 C   FIELD 02w01 PD2 (rw): Port E pull-down bit
0x46020874 C   FIELD 03w01 PD3 (rw): Port E pull-down bit
0x46020874 C   FIELD 04w01 PD4 (rw): Port E pull-down bit
0x46020874 C   FIELD 05w01 PD5 (rw): Port E pull-down bit
0x46020874 C   FIELD 06w01 PD6 (rw): Port E pull-down bit
0x46020874 C   FIELD 07w01 PD7 (rw): Port E pull-down bit
0x46020874 C   FIELD 08w01 PD8 (rw): Port E pull-down bit
0x46020874 C   FIELD 09w01 PD9 (rw): Port E pull-down bit
0x46020874 C   FIELD 10w01 PD10 (rw): Port E pull-down bit
0x46020874 C   FIELD 11w01 PD11 (rw): Port E pull-down bit
0x46020874 C   FIELD 12w01 PD12 (rw): Port E pull-down bit
0x46020874 C   FIELD 13w01 PD13 (rw): Port E pull-down bit
0x46020874 C   FIELD 14w01 PD14 (rw): Port E pull-down bit
0x46020874 C   FIELD 15w01 PD15 (rw): Port E pull-down bit
0x46020878 B  REGISTER PWR_PUCRF: PWR port F pull-up control register
0x46020878 C   FIELD 00w01 PU0 (rw): Port F pull-up bit
0x46020878 C   FIELD 01w01 PU1 (rw): Port F pull-up bit
0x46020878 C   FIELD 02w01 PU2 (rw): Port F pull-up bit
0x46020878 C   FIELD 03w01 PU3 (rw): Port F pull-up bit
0x46020878 C   FIELD 04w01 PU4 (rw): Port F pull-up bit
0x46020878 C   FIELD 05w01 PU5 (rw): Port F pull-up bit
0x46020878 C   FIELD 06w01 PU6 (rw): Port F pull-up bit
0x46020878 C   FIELD 07w01 PU7 (rw): Port F pull-up bit
0x46020878 C   FIELD 08w01 PU8 (rw): Port F pull-up bit
0x46020878 C   FIELD 09w01 PU9 (rw): Port F pull-up bit
0x46020878 C   FIELD 10w01 PU10 (rw): Port F pull-up bit
0x46020878 C   FIELD 11w01 PU11 (rw): Port F pull-up bit
0x46020878 C   FIELD 12w01 PU12 (rw): Port F pull-up bit
0x46020878 C   FIELD 13w01 PU13 (rw): Port F pull-up bit
0x46020878 C   FIELD 14w01 PU14 (rw): Port F pull-up bit
0x46020878 C   FIELD 15w01 PU15 (rw): Port F pull-up bit
0x4602087C B  REGISTER PWR_PDCRF: PWR port F pull-down control register
0x4602087C C   FIELD 00w01 PD0 (rw): Port F pull-down bit
0x4602087C C   FIELD 01w01 PD1 (rw): Port F pull-down bit
0x4602087C C   FIELD 02w01 PD2 (rw): Port F pull-down bit
0x4602087C C   FIELD 03w01 PD3 (rw): Port F pull-down bit
0x4602087C C   FIELD 04w01 PD4 (rw): Port F pull-down bit
0x4602087C C   FIELD 05w01 PD5 (rw): Port F pull-down bit
0x4602087C C   FIELD 06w01 PD6 (rw): Port F pull-down bit
0x4602087C C   FIELD 07w01 PD7 (rw): Port F pull-down bit
0x4602087C C   FIELD 08w01 PD8 (rw): Port F pull-down bit
0x4602087C C   FIELD 09w01 PD9 (rw): Port F pull-down bit
0x4602087C C   FIELD 10w01 PD10 (rw): Port F pull-down bit
0x4602087C C   FIELD 11w01 PD11 (rw): Port F pull-down bit
0x4602087C C   FIELD 12w01 PD12 (rw): Port F pull-down bit
0x4602087C C   FIELD 13w01 PD13 (rw): Port F pull-down bit
0x4602087C C   FIELD 14w01 PD14 (rw): Port F pull-down bit
0x4602087C C   FIELD 15w01 PD15 (rw): Port F pull-down bit
0x46020880 B  REGISTER PWR_PUCRG: PWR port G pull-up control register
0x46020880 C   FIELD 00w01 PU0 (rw): Port G pull-up bit
0x46020880 C   FIELD 01w01 PU1 (rw): Port G pull-up bit
0x46020880 C   FIELD 02w01 PU2 (rw): Port G pull-up bit
0x46020880 C   FIELD 03w01 PU3 (rw): Port G pull-up bit
0x46020880 C   FIELD 04w01 PU4 (rw): Port G pull-up bit
0x46020880 C   FIELD 05w01 PU5 (rw): Port G pull-up bit
0x46020880 C   FIELD 06w01 PU6 (rw): Port G pull-up bit
0x46020880 C   FIELD 07w01 PU7 (rw): Port G pull-up bit
0x46020880 C   FIELD 08w01 PU8 (rw): Port G pull-up bit
0x46020880 C   FIELD 09w01 PU9 (rw): Port G pull-up bit
0x46020880 C   FIELD 10w01 PU10 (rw): Port G pull-up bit
0x46020880 C   FIELD 11w01 PU11 (rw): Port G pull-up bit
0x46020880 C   FIELD 12w01 PU12 (rw): Port G pull-up bit
0x46020880 C   FIELD 13w01 PU13 (rw): Port G pull-up bit
0x46020880 C   FIELD 14w01 PU14 (rw): Port G pull-up bit
0x46020880 C   FIELD 15w01 PU15 (rw): Port G pull-up bit
0x46020884 B  REGISTER PWR_PDCRG: PWR port G pull-down control register
0x46020884 C   FIELD 00w01 PD0 (rw): Port G pull-down bit
0x46020884 C   FIELD 01w01 PD1 (rw): Port G pull-down bit
0x46020884 C   FIELD 02w01 PD2 (rw): Port G pull-down bit
0x46020884 C   FIELD 03w01 PD3 (rw): Port G pull-down bit
0x46020884 C   FIELD 04w01 PD4 (rw): Port G pull-down bit
0x46020884 C   FIELD 05w01 PD5 (rw): Port G pull-down bit
0x46020884 C   FIELD 06w01 PD6 (rw): Port G pull-down bit
0x46020884 C   FIELD 07w01 PD7 (rw): Port G pull-down bit
0x46020884 C   FIELD 08w01 PD8 (rw): Port G pull-down bit
0x46020884 C   FIELD 09w01 PD9 (rw): Port G pull-down bit
0x46020884 C   FIELD 10w01 PD10 (rw): Port G pull-down bit
0x46020884 C   FIELD 11w01 PD11 (rw): Port G pull-down bit
0x46020884 C   FIELD 12w01 PD12 (rw): Port G pull-down bit
0x46020884 C   FIELD 13w01 PD13 (rw): Port G pull-down bit
0x46020884 C   FIELD 14w01 PD14 (rw): Port G pull-down bit
0x46020884 C   FIELD 15w01 PD15 (rw): Port G pull-down bit
0x46020888 B  REGISTER PWR_PUCRH: PWR port H pull-up control register
0x46020888 C   FIELD 00w01 PU0 (rw): Port H pull-up bit
0x46020888 C   FIELD 01w01 PU1 (rw): Port H pull-up bit
0x46020888 C   FIELD 02w01 PU2 (rw): Port H pull-up bit
0x46020888 C   FIELD 03w01 PU3 (rw): Port H pull-up bit
0x46020888 C   FIELD 04w01 PU4 (rw): Port H pull-up bit
0x46020888 C   FIELD 05w01 PU5 (rw): Port H pull-up bit
0x46020888 C   FIELD 06w01 PU6 (rw): Port H pull-up bit
0x46020888 C   FIELD 07w01 PU7 (rw): Port H pull-up bit
0x46020888 C   FIELD 08w01 PU8 (rw): Port H pull-up bit
0x46020888 C   FIELD 09w01 PU9 (rw): Port H pull-up bit
0x46020888 C   FIELD 10w01 PU10 (rw): Port H pull-up bit
0x46020888 C   FIELD 11w01 PU11 (rw): Port H pull-up bit
0x46020888 C   FIELD 12w01 PU12 (rw): Port H pull-up bit
0x46020888 C   FIELD 13w01 PU13 (rw): Port H pull-up bit
0x46020888 C   FIELD 14w01 PU14 (rw): Port H pull-up bit
0x46020888 C   FIELD 15w01 PU15 (rw): Port H pull-up bit
0x4602088C B  REGISTER PWR_PDCRH: PWR port H pull-down control register
0x4602088C C   FIELD 00w01 PD0 (rw): Port H pull-down bit
0x4602088C C   FIELD 01w01 PD1 (rw): Port H pull-down bit
0x4602088C C   FIELD 02w01 PD2 (rw): Port H pull-down bit
0x4602088C C   FIELD 03w01 PD3 (rw): Port H pull-down bit
0x4602088C C   FIELD 04w01 PD4 (rw): Port H pull-down bit
0x4602088C C   FIELD 05w01 PD5 (rw): Port H pull-down bit
0x4602088C C   FIELD 06w01 PD6 (rw): Port H pull-down bit
0x4602088C C   FIELD 07w01 PD7 (rw): Port H pull-down bit
0x4602088C C   FIELD 08w01 PD8 (rw): Port H pull-down bit
0x4602088C C   FIELD 09w01 PD9 (rw): Port H pull-down bit
0x4602088C C   FIELD 10w01 PD10 (rw): Port H pull-down bit
0x4602088C C   FIELD 11w01 PD11 (rw): Port H pull-down bit
0x4602088C C   FIELD 12w01 PD12 (rw): Port H pull-down bit
0x4602088C C   FIELD 13w01 PD13 (rw): Port H pull-down bit
0x4602088C C   FIELD 14w01 PD14 (rw): Port H pull-down bit
0x4602088C C   FIELD 15w01 PD15 (rw): Port H pull-down bit
0x46020890 B  REGISTER PWR_PUCRI: PWR port I pull-up control register
0x46020890 C   FIELD 00w01 PU0 (rw): Port I pull-up bit
0x46020890 C   FIELD 01w01 PU1 (rw): Port I pull-up bit
0x46020890 C   FIELD 02w01 PU2 (rw): Port I pull-up bit
0x46020890 C   FIELD 03w01 PU3 (rw): Port I pull-up bit
0x46020890 C   FIELD 04w01 PU4 (rw): Port I pull-up bit
0x46020890 C   FIELD 05w01 PU5 (rw): Port I pull-up bit
0x46020890 C   FIELD 06w01 PU6 (rw): Port I pull-up bit
0x46020890 C   FIELD 07w01 PU7 (rw): Port I pull-up bit
0x46020894 B  REGISTER PWR_PDCRI: PWR port I pull-down control register
0x46020894 C   FIELD 00w01 PD0 (rw): Port I pull-down bit
0x46020894 C   FIELD 01w01 PD1 (rw): Port I pull-down bit
0x46020894 C   FIELD 02w01 PD2 (rw): Port I pull-down bit
0x46020894 C   FIELD 03w01 PD3 (rw): Port I pull-down bit
0x46020894 C   FIELD 04w01 PD4 (rw): Port I pull-down bit
0x46020894 C   FIELD 05w01 PD5 (rw): Port I pull-down bit
0x46020894 C   FIELD 06w01 PD6 (rw): Port I pull-down bit
0x46020894 C   FIELD 07w01 PD7 (rw): Port I pull-down bit
0x46020C00 A PERIPHERAL RCC
0x46020C00 B  REGISTER RCC_CR: RCC clock control register
0x46020C00 C   FIELD 00w01 MSISON (rw): MSIS clock enable Set and cleared by software. Cleared by hardware to stop the MSIS oscillator when entering Stop, Standby or Shutdown mode. Set by hardware to force the MSIS oscillator ON when exiting Standby or Shutdown mode. Set by hardware to force the MSIS oscillator ON when STOPWUCK = 0 when exiting Stop modes or in case of a failure of the HSE oscillator. Set by hardware when used directly or indirectly as system clock.
0x46020C00 C   FIELD 01w01 MSIKERON (rw): MSI enable for some peripheral kernels Set and cleared by software to force MSI ON even in Stop modes. Keeping the MSI ON in Stop mode allows the communication speed not to be reduced by the MSI startup time. This bit has no effect on MSISON and MSIKON values (see autonomous mode for more details). The MSIKERON must be configured at 0 before entering Stop 3 mode.
0x46020C00 C   FIELD 02w01 MSISRDY (ro): MSIS clock ready flag Set by hardware to indicate that the MSIS oscillator is stable. This bit is set only when MSIS is enabled by software by setting MSISON. Note: Once the MSISON bit is cleared, MSISRDY goes low after six MSIS clock cycles.
0x46020C00 C   FIELD 03w01 MSIPLLEN (rw): MSI clock PLL-mode enable Set and cleared by software to enable/disable the PLL part of the MSI clock source. MSIPLLEN must be enabled after LSE is enabled (LSEON enabled) and ready (LSERDY set by hardware). A hardware protection prevents from enabling MSIPLLEN if LSE is not ready. This bit is cleared by hardware when LSE is disabled (LSEON = 0) or when the CSS on LSE detects a LSE failure (see RCC_CSR).
0x46020C00 C   FIELD 04w01 MSIKON (rw): MSIK clock enable Set and cleared by software. Cleared by hardware to stop the MSIK when entering Stop, Standby or Shutdown mode. Set by hardware to force the MSIK oscillator ON when exiting Standby or Shutdown mode. Set by hardware to force the MSIK oscillator ON when STOPWUCK = 0 or STOPKERWUCK = 0 when exiting Stop modes or in case of a failure of the HSE oscillator.
0x46020C00 C   FIELD 05w01 MSIKRDY (ro): MSIK clock ready flag Set by hardware to indicate that the MSIK is stable. This bit is set only when MSI kernel oscillator is enabled by software by setting MSIKON. Note: Once the MSIKON bit is cleared, MSIKRDY goes low after six MSIK oscillator clock cycles.
0x46020C00 C   FIELD 06w01 MSIPLLSEL (rw): MSI clock with PLL mode selection Set and cleared by software to select which MSI output clock uses the PLL mode. This bit can be written only when the MSI PLL mode is disabled (MSIPLLEN = 0). Note: If the MSI kernel clock output uses the same oscillator source than the MSI system clock output, then the PLL mode is applied to the both clocks outputs.
0x46020C00 C   FIELD 07w01 MSIPLLFAST (rw): MSI PLL mode fast startup Set and reset by software to enable/disable the fast PLL mode start-up of the MSI clock source. This bit is used only if PLL mode is selected (MSIPLLEN = 1). The fast start-up feature is not active the first time the PLL mode is selected. The fast start-up is active when the MSI in PLL mode returns from switch off.
0x46020C00 C   FIELD 08w01 HSION (rw): HSI16 clock enable Set and cleared by software. Cleared by hardware to stop the HSI16 oscillator when entering Stop, Standby or Shutdown mode. Set by hardware to force the HSI16 oscillator ON when STOPWUCK = 1 when leaving Stop modes, or in case of failure of the HSE crystal oscillator. This bit is set by hardware if the HSI16 is used directly or indirectly as system clock.
0x46020C00 C   FIELD 09w01 HSIKERON (rw): HSI16 enable for some peripheral kernels Set and cleared by software to force HSI16 ON even in Stop modes. Keeping the HSI16 ON in Stop mode allows the communication speed not to be reduced by the HSI16 startup time. This bit has no effect on HSION value. Refer to for more details. The HSIKERON must be configured at 0 before entering Stop 3 mode.
0x46020C00 C   FIELD 10w01 HSIRDY (ro): HSI16 clock ready flag Set by hardware to indicate that HSI16 oscillator is stable. This bit is set only when HSI16 is enabled by software by setting HSION. Note: Once the HSION bit is cleared, HSIRDY goes low after six HSI16 clock cycles.
0x46020C00 C   FIELD 12w01 HSI48ON (rw): HSI48 clock enable Set and cleared by software. Cleared by hardware to stop the HSI48 when entering in Stop, Standby or Shutdown modes.
0x46020C00 C   FIELD 13w01 HSI48RDY (ro): HSI48 clock ready flag Set by hardware to indicate that HSI48 oscillator is stable. This bit is set only when HSI48 is enabled by software by setting HSI48ON.
0x46020C00 C   FIELD 14w01 SHSION (rw): SHSI clock enable Set and cleared by software. Cleared by hardware to stop the SHSI when entering in Stop, Standby or Shutdown modes.
0x46020C00 C   FIELD 15w01 SHSIRDY (ro): SHSI clock ready flag Set by hardware to indicate that the SHSI oscillator is stable. This bit is set only when SHSI is enabled by software by setting SHSION. Note: Once the SHSION bit is cleared, SHSIRDY goes low after six SHSI clock cycles.
0x46020C00 C   FIELD 16w01 HSEON (rw): HSE clock enable Set and cleared by software. Cleared by hardware to stop the HSE oscillator when entering Stop, Standby or Shutdown mode. This bit cannot be reset if the HSE oscillator is used directly or indirectly as the system clock.
0x46020C00 C   FIELD 17w01 HSERDY (ro): HSE clock ready flag Set by hardware to indicate that the HSE oscillator is stable. Note: Once the HSEON bit is cleared, HSERDY goes low after six HSE clock cycles.
0x46020C00 C   FIELD 18w01 HSEBYP (rw): HSE crystal oscillator bypass Set and cleared by software to bypass the oscillator with an external clock. The external clock must be enabled with the HSEON bit set, to be used by the device. The HSEBYP bit can be written only if the HSE oscillator is disabled.
0x46020C00 C   FIELD 19w01 CSSON (rw): Clock security system enable Set by software to enable the clock security system. When CSSON is set, the clock detector is enabled by hardware when the HSE oscillator is ready, and disabled by hardware if a HSE clock failure is detected. This bit is set only and is cleared by reset.
0x46020C00 C   FIELD 20w01 HSEEXT (rw): HSE external clock bypass mode Set and reset by software to select the external clock mode in bypass mode. External clock mode must be configured with HSEON bit to be used by the device. This bit can be written only if the HSE oscillator is disabled. This bit is active only if the HSE bypass mode is enabled.
0x46020C00 C   FIELD 24w01 PLL1ON (rw): PLL1 enable Set and cleared by software to enable the main PLL. Cleared by hardware when entering Stop, Standby or Shutdown mode. This bit cannot be reset if the PLL1 clock is used as the system clock.
0x46020C00 C   FIELD 25w01 PLL1RDY (ro): PLL1 clock ready flag Set by hardware to indicate that the PLL1 is locked.
0x46020C00 C   FIELD 26w01 PLL2ON (rw): PLL2 enable Set and cleared by software to enable PLL2. Cleared by hardware when entering Stop, Standby or Shutdown mode.
0x46020C00 C   FIELD 27w01 PLL2RDY (ro): PLL2 clock ready flag Set by hardware to indicate that the PLL2 is locked.
0x46020C00 C   FIELD 28w01 PLL3ON (rw): PLL3 enable Set and cleared by software to enable PLL3. Cleared by hardware when entering Stop, Standby or Shutdown mode.
0x46020C00 C   FIELD 29w01 PLL3RDY (ro): PLL3 clock ready flag Set by hardware to indicate that the PLL3 is locked.
0x46020C08 B  REGISTER RCC_ICSCR1: RCC internal clock sources calibration register 1
0x46020C08 C   FIELD 00w05 MSICAL3 (ro): MSIRC3 clock calibration for MSI ranges 12 to 15 These bits are initialized at startup with the factory-programmed MSIRC3 calibration trim value for ranges 12 to 15. When MSITRIM3 is written, MSICAL3 is updated with the sum of MSITRIM3[4:0] and the factory calibration trim value MSIRC2[4:0]. There is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.
0x46020C08 C   FIELD 05w05 MSICAL2 (ro): MSIRC2 clock calibration for MSI ranges 8 to 11 These bits are initialized at startup with the factory-programmed MSIRC2 calibration trim value for ranges 8 to 11. When MSITRIM2 is written, MSICAL2 is updated with the sum of MSITRIM2[4:0] and the factory calibration trim value MSIRC2[4:0]. There is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.
0x46020C08 C   FIELD 10w05 MSICAL1 (ro): MSIRC1 clock calibration for MSI ranges 4 to 7 These bits are initialized at startup with the factory-programmed MSIRC1 calibration trim value for ranges 4 to 7. When MSITRIM1 is written, MSICAL1 is updated with the sum of MSITRIM1[4:0] and the factory calibration trim value MSIRC1[4:0]. There is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.
0x46020C08 C   FIELD 15w05 MSICAL0 (ro): MSIRC0 clock calibration for MSI ranges 0 to 3 These bits are initialized at startup with the factory-programmed MSIRC0 calibration trim value for ranges 0 to 3. When MSITRIM0 is written, MSICAL0 is updated with the sum of MSITRIM0[4:0] and the factory-programmed calibration trim value MSIRC0[4:0].
0x46020C08 C   FIELD 22w01 MSIBIAS (rw): MSI bias mode selection Set by software to select the MSI bias mode. By default, the MSI bias is in continuous mode in order to maintain the output clocks accuracy. Setting this bit reduces the MSI consumption under range 4 but decrease its accuracy.
0x46020C08 C   FIELD 23w01 MSIRGSEL (rw): MSI clock range selection Set by software to select the MSIS and MSIK clocks range with MSISRANGE[3:0] and MSIKRANGE[3:0]. Write 0 has no effect. After exiting Standby or Shutdown mode, or after a reset, this bit is at 0 and the MSIS and MSIK ranges are provided by MSISSRANGE[3:0] and MSIKSRANGE[3:0] in RCC_CSR.
0x46020C08 C   FIELD 24w04 MSIKRANGE (rw): MSIK clock ranges These bits are configured by software to choose the frequency range of MSIK oscillator when MSIRGSEL is set. 16 frequency ranges are available: Note: MSIKRANGE can be modified when MSIK is OFF (MSISON = 0) or when MSIK is ready (MSIKRDY = 1). MSIKRANGE must NOT be modified when MSIK is ON and NOT ready (MSIKON = 1 and MSIKRDY = 0) MSIKRANGE is kept when the device wakes up from Stop mode, except when the MSIK range is above 24 MHz. In this case MSIKRANGE is changed by hardware into Range 2 (24 MHz).
0x46020C08 C   FIELD 28w04 MSISRANGE (rw): MSIS clock ranges These bits are configured by software to choose the frequency range of MSIS oscillator when MSIRGSEL is set. 16 frequency ranges are available: Note: MSISRANGE can be modified when MSIS is OFF (MSISON = 0) or when MSIS is ready (MSISRDY = 1). MSISRANGE must NOT be modified when MSIS is ON and NOT ready (MSISON = 1 and MSISRDY = 0) MSISRANGE is kept when the device wakes up from Stop mode, except when the MSIS range is above 24 MHz. In this case MSISRANGE is changed by hardware into Range 2 (24 MHz).
0x46020C0C B  REGISTER RCC_ICSCR2: RCC internal clock sources calibration register 2
0x46020C0C C   FIELD 00w05 MSITRIM3 (rw): MSI clock trimming for ranges 12 to 15 These bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC3[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.
0x46020C0C C   FIELD 05w05 MSITRIM2 (rw): MSI clock trimming for ranges 8 to 11 These bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC2[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.
0x46020C0C C   FIELD 10w05 MSITRIM1 (rw): MSI clock trimming for ranges 4 to 7 These bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC1[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.
0x46020C0C C   FIELD 15w05 MSITRIM0 (rw): MSI clock trimming for ranges 0 to 3 These bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC0[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.
0x46020C10 B  REGISTER RCC_ICSCR3: RCC internal clock sources calibration register 3
0x46020C10 C   FIELD 00w12 HSICAL (ro): HSI clock calibration These bits are initialized at startup with the factory-programmed HSI calibration trim value. When HSITRIM is written, HSICAL is updated with the sum of HSITRIM and the factory trim value.
0x46020C10 C   FIELD 16w05 HSITRIM (rw): HSI clock trimming These bits provide an additional user-programmable trimming value that is added to the HSICAL[11:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the HSI.
0x46020C14 B  REGISTER RCC_CRRCR: RCC clock recovery RC register
0x46020C14 C   FIELD 00w09 HSI48CAL (ro): HSI48 clock calibration These bits are initialized at startup with the factory-programmed HSI48 calibration trim value.
0x46020C1C B  REGISTER RCC_CFGR1: RCC clock configuration register 1
0x46020C1C C   FIELD 00w02 SW (rw): system clock switch Set and cleared by software to select system clock source (SYSCLK). Configured by hardware to force MSIS oscillator selection when exiting Standby or Shutdown mode. Configured by hardware to force MSIS or HSI16 oscillator selection when exiting Stop mode or in case of HSE oscillator failure, depending on STOPWUCK value.
0x46020C1C C   FIELD 02w02 SWS (ro): system clock switch status Set and cleared by hardware to indicate which clock source is used as system clock.
0x46020C1C C   FIELD 04w01 STOPWUCK (rw): wakeup from Stop and CSS backup clock selection Set and cleared by software to select the system clock used when exiting Stop mode. The selected clock is also used as emergency clock for the clock security system on HSE. Warning: STOPWUCK must not be modified when the CSS is enabled by HSECSSON bit in RCC_CR and the system clock is HSE (SWS = 10) or a switch on HSE is requested (SW = 10).
0x46020C1C C   FIELD 05w01 STOPKERWUCK (rw): wakeup from Stop kernel clock automatic enable selection Set and cleared by software to enable automatically another oscillator when exiting Stop mode. This oscillator can be used as independent kernel clock by peripherals.
0x46020C1C C   FIELD 24w04 MCOSEL (rw): microcontroller clock output Set and cleared by software. Others: reserved Note: This clock output may have some truncated cycles at startup or during MCO clock source switching.
0x46020C1C C   FIELD 28w03 MCOPRE (rw): microcontroller clock output prescaler Set and cleared by software. It is highly recommended to change this prescaler before MCO output is enabled. Others: not allowed
0x46020C20 B  REGISTER RCC_CFGR2: RCC clock configuration register 2
0x46020C20 C   FIELD 00w04 HPRE (rw): AHB prescaler Set and cleared by software to control the division factor of the AHB clock (HCLK). Depending on the device voltage range, the software must set these bits correctly to ensure that the system frequency does not exceed the maximum allowed frequency (for more details, refer to ). After a write operation to these bits and before decreasing the voltage range, this register must be read to be sure that the new value is taken into account. 0xxx: SYSCLK not divided
0x46020C20 C   FIELD 04w03 PPRE1 (rw): APB1 prescaler Set and cleared by software to control the division factor of the APB1 clock (PCLK1). 0xx: HCLK not divided
0x46020C20 C   FIELD 08w03 PPRE2 (rw): APB2 prescaler Set and cleared by software to control the division factor of the APB2 clock (PCLK2). 0xx: HCLK not divided
0x46020C20 C   FIELD 16w01 AHB1DIS (rw): AHB1 clock disable This bit can be set in order to further reduce power consumption, when none of the AHB1 peripherals (except those listed hereafter) are used and when their clocks are disabled in RCC_AHB1ENR. When this bit is set, all the AHB1 peripherals clocks are off, except for FLASH, BKPSRAM, ICACHE, DCACHE1 and SRAM1.
0x46020C20 C   FIELD 17w01 AHB2DIS1 (rw): AHB2_1 clock disable This bit can be set in order to further reduce power consumption, when none of the AHB2 peripherals from RCC_AHB2ENR1 (except SRAM2 and SRAM3) are used and when their clocks are disabled in RCC_AHB2ENR1. When this bit is set, all the AHB2 peripherals clocks from RCC_AHB2ENR1 are off, except for SRAM2 and SRAM3.
0x46020C20 C   FIELD 18w01 AHB2DIS2 (rw): AHB2_2 clock disable This bit can be set in order to further reduce power consumption, when none of the AHB2 peripherals from RCC_AHB2ENR2 are used and when their clocks are disabled in RCC_AHB2ENR2. When this bit is set, all the AHB2 peripherals clocks from RCC_AHB2EBNR2 are off.
0x46020C20 C   FIELD 19w01 APB1DIS (rw): APB1 clock disable This bit can be set in order to further reduce power consumption, when none of the APB1 peripherals (except IWDG) are used and when their clocks are disabled in RCC_APB1ENR. When this bit is set, all the APB1 peripherals clocks are off, except for IWDG.
0x46020C20 C   FIELD 20w01 APB2DIS (rw): APB2 clock disable This bit can be set in order to further reduce power consumption, when none of the APB2 peripherals are used and when their clocks are disabled in RCC_APB2ENR. When this bit is set, all the APB2 peripherals clocks are off.
0x46020C24 B  REGISTER RCC_CFGR3: RCC clock configuration register 3
0x46020C24 C   FIELD 04w03 PPRE3 (rw): APB3 prescaler Set and cleared by software to control the division factor of the APB3 clock (PCLK3). 0xx: HCLK not divided
0x46020C24 C   FIELD 16w01 AHB3DIS (rw): AHB3 clock disable This bit can be set in order to further reduce power consumption, when none of the AHB3 peripherals (except SRAM4) are used and when their clocks are disabled in RCC_AHB3ENR. When this bit is set, all the AHB3 peripherals clocks are off, except for SRAM4.
0x46020C24 C   FIELD 17w01 APB3DIS (rw): APB3 clock disable This bit can be set in order to further reduce power consumption, when none of the APB3 peripherals from RCC_APB3ENR are used and when their clocks are disabled in RCC_APB3ENR. When this bit is set, all the APB3 peripherals clocks are off.
0x46020C28 B  REGISTER RCC_PLL1CFGR: RCC PLL1 configuration register
0x46020C28 C   FIELD 00w02 PLL1SRC (rw): PLL1 entry clock source Set and cleared by software to select PLL1 clock source. These bits can be written only when the PLL1 is disabled. In order to save power, when no PLL1 is used, the value of PLL1SRC must be 0.
0x46020C28 C   FIELD 02w02 PLL1RGE (rw): PLL1 input frequency range Set and reset by software to select the proper reference frequency range used for PLL1. This bit must be written before enabling the PLL1. 00-01-10: PLL1 input (ref1_ck) clock range frequency between 4 and 8 MHz
0x46020C28 C   FIELD 04w01 PLL1FRACEN (rw): PLL1 fractional latch enable Set and reset by software to latch the content of PLL1FRACN into the Î£Î modulator. In order to latch the PLL1FRACN value into the Î£Î modulator, PLL1FRACEN must be set to 0, then set to 1: the transition 0 to 1 transfers the content of PLL1FRACN into the modulator (see for details).
0x46020C28 C   FIELD 08w04 PLL1M (rw): Prescaler for PLL1 Set and cleared by software to configure the prescaler of the PLL1. The VCO1 input frequency is PLL1 input clock frequency/PLL1M. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). ...
0x46020C28 C   FIELD 12w04 PLL1MBOOST (rw): Prescaler for EPOD booster input clock Set and cleared by software to configure the prescaler of the PLL1, used for the EPOD booster. The EPOD booster input frequency is PLL1 input clock frequency/PLL1MBOOST. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0) and EPOD Boost mode is disabled (see ). others: reserved
0x46020C28 C   FIELD 16w01 PLL1PEN (rw): PLL1 DIVP divider output enable Set and reset by software to enable the pll1_p_ck output of the PLL1. To save power, PLL1PEN and PLL1P bits must be set to 0 when the pll1_p_ck is not used. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0).
0x46020C28 C   FIELD 17w01 PLL1QEN (rw): PLL1 DIVQ divider output enable Set and reset by software to enable the pll1_q_ck output of the PLL1. To save power, PLL1QEN and PLL1Q bits must be set to 0 when the pll1_q_ck is not used. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0).
0x46020C28 C   FIELD 18w01 PLL1REN (rw): PLL1 DIVR divider output enable Set and reset by software to enable the pll1_r_ck output of the PLL1. To save power, PLL1RENPLL2REN and PLL1R bits must be set to 0 when the pll1_r_ck is not used. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0).
0x46020C2C B  REGISTER RCC_PLL2CFGR: RCC PLL2 configuration register
0x46020C2C C   FIELD 00w02 PLL2SRC (rw): PLL2 entry clock source Set and cleared by software to select PLL2 clock source. These bits can be written only when the PLL2 is disabled. In order to save power, when no PLL2 is used, the value of PLL2SRC must be 0.
0x46020C2C C   FIELD 02w02 PLL2RGE (rw): PLL2 input frequency range Set and reset by software to select the proper reference frequency range used for PLL2. This bit must be written before enabling the PLL2. 00-01-10: PLL2 input (ref2_ck) clock range frequency between 4 and 8 MHz
0x46020C2C C   FIELD 04w01 PLL2FRACEN (rw): PLL2 fractional latch enable Set and reset by software to latch the content of PLL2FRACN into the Î£Î modulator. In order to latch the PLL2FRACN value into the Î£Î modulator, PLL2FRACEN must be set to 0, then set to 1: the transition 0 to 1 transfers the content of PLL2FRACN into the modulator (see for details).
0x46020C2C C   FIELD 08w04 PLL2M (rw): Prescaler for PLL2 Set and cleared by software to configure the prescaler of the PLL2. The VCO2 input frequency is PLL2 input clock frequency/PLL2M. This bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). ...
0x46020C2C C   FIELD 16w01 PLL2PEN (rw): PLL2 DIVP divider output enable Set and reset by software to enable the pll2_p_ck output of the PLL2. To save power, PLL2PEN and PLL2P bits must be set to 0 when the pll2_p_ck is not used. This bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0).
0x46020C2C C   FIELD 17w01 PLL2QEN (rw): PLL2 DIVQ divider output enable Set and reset by software to enable the pll2_q_ck output of the PLL2. To save power, PLL2QEN and PLL2Q bits must be set to 0 when the pll2_q_ck is not used. This bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0.
0x46020C2C C   FIELD 18w01 PLL2REN (rw): PLL2 DIVR divider output enable Set and reset by software to enable the pll2_r_ck output of the PLL2. To save power, PLL2REN and PLL2R bits must be set to 0 when the pll2_r_ck is not used. This bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0).
0x46020C30 B  REGISTER RCC_PLL3CFGR: RCC PLL3 configuration register
0x46020C30 C   FIELD 00w02 PLL3SRC (rw): PLL3 entry clock source Set and cleared by software to select PLL3 clock source. These bits can be written only when the PLL3 is disabled. In order to save power, when no PLL3 is used, the value of PLL3SRC must be 00.
0x46020C30 C   FIELD 02w02 PLL3RGE (rw): PLL3 input frequency range Set and reset by software to select the proper reference frequency range used for PLL3. This bit must be written before enabling the PLL3. 00-01-10: PLL3 input (ref3_ck) clock range frequency between 4 and 8 MHz
0x46020C30 C   FIELD 04w01 PLL3FRACEN (rw): PLL3 fractional latch enable Set and reset by software to latch the content of PLL3FRACN into the Î£Î modulator. In order to latch the PLL3FRACN value into the Î£Î modulator, PLL3FRACEN must be set to 0, then set to 1: the transition 0 to 1 transfers the content of PLL3FRACN into the modulator (see for details).
0x46020C30 C   FIELD 08w04 PLL3M (rw): Prescaler for PLL3 Set and cleared by software to configure the prescaler of the PLL3. The VCO3 input frequency is PLL3 input clock frequency/PLL3M. This bit can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). ...
0x46020C30 C   FIELD 16w01 PLL3PEN (rw): PLL3 DIVP divider output enable Set and reset by software to enable the pll3_p_ck output of the PLL3. To save power, PLL3PEN and PLL3P bits must be set to 0 when the pll3_p_ck is not used. This bit can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).
0x46020C30 C   FIELD 17w01 PLL3QEN (rw): PLL3 DIVQ divider output enable Set and reset by software to enable the pll3_q_ck output of the PLL3. To save power, PLL3QEN and PLL3Q bits must be set to 0 when the pll3_q_ck is not used. This bit can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).
0x46020C30 C   FIELD 18w01 PLL3REN (rw): PLL3 DIVR divider output enable Set and reset by software to enable the pll3_r_ck output of the PLL3. To save power, PLL3REN and PLL3R bits must be set to 0 when the pll3_r_ck is not used. This bit can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).
0x46020C34 B  REGISTER RCC_PLL1DIVR: RCC PLL1 dividers register
0x46020C34 C   FIELD 00w09 PLL1N (rw): Multiplication factor for PLL1 VCO Set and reset by software to control the multiplication factor of the VCO. These bits can be written only when the PLL is disabled (PLL1ON = 0 and PLL1RDY = 0). ... ... Others: reserved VCO output frequency = Fref1_ck x PLL1N, when fractional value 0 has been loaded into PLL1FRACN, with: PLL1N between 4 and 512 input frequency Fref1_ck between 4 and 16 MHz
0x46020C34 C   FIELD 09w07 PLL1P (rw): PLL1 DIVP division factor Set and reset by software to control the frequency of the pll1_p_ck clock. These bits can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). Note that odd division factors are not allowed. ...
0x46020C34 C   FIELD 16w07 PLL1Q (rw): PLL1 DIVQ division factor Set and reset by software to control the frequency of the pll1_q_ck clock. These bits can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). ...
0x46020C34 C   FIELD 24w07 PLL1R (rw): PLL1 DIVR division factor Set and reset by software to control the frequency of the pll1_r_ck clock. These bits can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). ...
0x46020C38 B  REGISTER RCC_PLL1FRACR: RCC PLL1 fractional divider register
0x46020C38 C   FIELD 03w13 PLL1FRACN (rw): Fractional part of the multiplication factor for PLL1 VCO Set and reset by software to control the fractional part of the multiplication factor of the VCO. These bits can be written at any time, allowing dynamic fine-tuning of the PLL1 VCO. VCO output frequency = Fref1_ck x (PLL1N + (PLL1FRACN / 213)), with: PLL1N must be between 4 and 512. PLL1FRACN can be between 0 and 213- 1. The input frequency Fref1_ck must be between 4 and 16 MHz. To change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as follows: Set the bit PLL1FRACEN to 0. Write the new fractional value into PLL1FRACN. Set the bit PLL1FRACEN to 1.
0x46020C3C B  REGISTER RCC_PLL2DIVR: RCC PLL2 dividers configuration register
0x46020C3C C   FIELD 00w09 PLL2N (rw): Multiplication factor for PLL2 VCO Set and reset by software to control the multiplication factor of the VCO. These bits can be written only when the PLL is disabled (PLL2ON = 0 and PLL2RDY = 0). ... ... Others: reserved VCO output frequency = Fref2_ck x PLL2N, when fractional value 0 has been loaded into PLL2FRACN, with: PLL2N between 4 and 512 input frequency Fref2_ck between 1MHz and 16MHz
0x46020C3C C   FIELD 09w07 PLL2P (rw): PLL2 DIVP division factor Set and reset by software to control the frequency of the pll2_p_ck clock. These bits can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). ...
0x46020C3C C   FIELD 16w07 PLL2Q (rw): PLL2 DIVQ division factor Set and reset by software to control the frequency of the pll2_q_ck clock. These bits can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). ...
0x46020C3C C   FIELD 24w07 PLL2R (rw): PLL2 DIVR division factor Set and reset by software to control the frequency of the pll2_r_ck clock. These bits can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). ...
0x46020C40 B  REGISTER RCC_PLL2FRACR: RCC PLL2 fractional divider register
0x46020C40 C   FIELD 03w13 PLL2FRACN (rw): Fractional part of the multiplication factor for PLL2 VCO Set and reset by software to control the fractional part of the multiplication factor of the VCO. These bits can be written at any time, allowing dynamic fine-tuning of the PLL2 VCO. VCO output frequency = Fref2_ck x (PLL2N + (PLL2FRACN / 213)), with PLL2N must be between 4 and 512. PLL2FRACN can be between 0 and 213 - 1. The input frequency Fref2_ck must be between 4 and 16 MHz. In order to change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as follows: Set the bit PLL2FRACEN to 0. Write the new fractional value into PLL2FRACN. Set the bit PLL2FRACEN to 1.
0x46020C44 B  REGISTER RCC_PLL3DIVR: RCC PLL3 dividers configuration register
0x46020C44 C   FIELD 00w09 PLL3N (rw): Multiplication factor for PLL3 VCO Set and reset by software to control the multiplication factor of the VCO. These bits can be written only when the PLL is disabled (PLL3ON = 0 and PLL3RDY = 0). ... ... Others: reserved VCO output frequency = Fref3_ck x PLL3N, when fractional value 0 has been loaded into PLL3FRACN, with: PLL3N between 4 and 512 input frequency Fref3_ck between 4 and 16MHz
0x46020C44 C   FIELD 09w07 PLL3P (rw): PLL3 DIVP division factor Set and reset by software to control the frequency of the pll3_p_ck clock. These bits can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). ...
0x46020C44 C   FIELD 16w07 PLL3Q (rw): PLL3 DIVQ division factor Set and reset by software to control the frequency of the pll3_q_ck clock. These bits can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). ...
0x46020C44 C   FIELD 24w07 PLL3R (rw): PLL3 DIVR division factor Set and reset by software to control the frequency of the pll3_r_ck clock. These bits can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). ...
0x46020C48 B  REGISTER RCC_PLL3FRACR: RCC PLL3 fractional divider register
0x46020C48 C   FIELD 03w13 PLL3FRACN (rw): Fractional part of the multiplication factor for PLL3 VCO Set and reset by software to control the fractional part of the multiplication factor of the VCO. These bits can be written at any time, allowing dynamic fine-tuning of the PLL3 VCO. VCO output frequency = Fref3_ck x (PLL3N + (PLL3FRACN / 213)), with: PLL3N must be between 4 and 512. PLL3FRACN can be between 0 and 213 - 1. The input frequency Fref3_ck must be between 4 and 16 MHz. In order to change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as follows: Set the bit PLL3FRACEN to 0. Write the new fractional value into PLL3FRACN. Set the bit PLL3FRACEN to 1.
0x46020C50 B  REGISTER RCC_CIER: RCC clock interrupt enable register
0x46020C50 C   FIELD 00w01 LSIRDYIE (rw): LSI ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the LSI oscillator stabilization.
0x46020C50 C   FIELD 01w01 LSERDYIE (rw): LSE ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the LSE oscillator stabilization.
0x46020C50 C   FIELD 02w01 MSISRDYIE (rw): MSIS ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the MSIS oscillator stabilization.
0x46020C50 C   FIELD 03w01 HSIRDYIE (rw): HSI16 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the HSI16 oscillator stabilization.
0x46020C50 C   FIELD 04w01 HSERDYIE (rw): HSE ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the HSE oscillator stabilization.
0x46020C50 C   FIELD 05w01 HSI48RDYIE (rw): HSI48 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the HSI48 oscillator stabilization.
0x46020C50 C   FIELD 06w01 PLL1RDYIE (rw): PLL ready interrupt enable Set and cleared by software to enable/disable interrupt caused by PLL1 lock.
0x46020C50 C   FIELD 07w01 PLL2RDYIE (rw): PLL2 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by PLL2 lock.
0x46020C50 C   FIELD 08w01 PLL3RDYIE (rw): PLL3 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by PLL3 lock.
0x46020C50 C   FIELD 11w01 MSIKRDYIE (rw): MSIK ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the MSIK oscillator stabilization.
0x46020C50 C   FIELD 12w01 SHSIRDYIE (rw): SHSI ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the SHSI oscillator stabilization.
0x46020C54 B  REGISTER RCC_CIFR: RCC clock interrupt flag register
0x46020C54 C   FIELD 00w01 LSIRDYF (ro): LSI ready interrupt flag Set by hardware when the LSI clock becomes stable and LSIRDYIE is set. Cleared by software setting the LSIRDYC bit.
0x46020C54 C   FIELD 01w01 LSERDYF (ro): LSE ready interrupt flag Set by hardware when the LSE clock becomes stable and LSERDYIE is set. Cleared by software setting the LSERDYC bit.
0x46020C54 C   FIELD 02w01 MSISRDYF (ro): MSIS ready interrupt flag Set by hardware when the MSIS clock becomes stable and MSISRDYIE is set. Cleared by software setting the MSISRDYC bit.
0x46020C54 C   FIELD 03w01 HSIRDYF (ro): HSI16 ready interrupt flag Set by hardware when the HSI16 clock becomes stable and HSIRDYIE is set in a response to setting the HSION (see RCC_CR). When HSION is not set but the HSI16 oscillator is enabled by the peripheral through a clock request, this bit is not set and no interrupt is generated. Cleared by software setting the HSIRDYC bit.
0x46020C54 C   FIELD 04w01 HSERDYF (ro): HSE ready interrupt flag Set by hardware when the HSE clock becomes stable and HSERDYIE is set. Cleared by software setting the HSERDYC bit.
0x46020C54 C   FIELD 05w01 HSI48RDYF (ro): HSI48 ready interrupt flag Set by hardware when the HSI48 clock becomes stable and HSI48RDYIE is set. Cleared by software setting the HSI48RDYC bit.
0x46020C54 C   FIELD 06w01 PLL1RDYF (ro): PLL1 ready interrupt flag Set by hardware when the PLL1 locks and PLL1RDYIE is set. Cleared by software setting the PLL1RDYC bit.
0x46020C54 C   FIELD 07w01 PLL2RDYF (ro): PLL2 ready interrupt flag Set by hardware when the PLL2 locks and PLL2RDYIE is set. Cleared by software setting the PLL2RDYC bit.
0x46020C54 C   FIELD 08w01 PLL3RDYF (ro): PLL3 ready interrupt flag Set by hardware when the PLL3 locks and PLL3RDYIE is set. Cleared by software setting the PLL3RDYC bit.
0x46020C54 C   FIELD 10w01 CSSF (ro): Clock security system interrupt flag Set by hardware when a failure is detected in the HSE oscillator. Cleared by software setting the CSSC bit.
0x46020C54 C   FIELD 11w01 MSIKRDYF (ro): MSIK ready interrupt flag Set by hardware when the MSIK clock becomes stable and MSIKRDYIE is set. Cleared by software setting the MSIKRDYC bit.
0x46020C54 C   FIELD 12w01 SHSIRDYF (ro): SHSI ready interrupt flag Set by hardware when the SHSI clock becomes stable and SHSIRDYIE is set. Cleared by software setting the SHSIRDYC bit.
0x46020C58 B  REGISTER RCC_CICR: RCC clock interrupt clear register
0x46020C58 C   FIELD 00w01 LSIRDYC (wo): LSI ready interrupt clear Writing this bit to 1 clears the LSIRDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 01w01 LSERDYC (wo): LSE ready interrupt clear Writing this bit to 1 clears the LSERDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 02w01 MSISRDYC (wo): MSIS ready interrupt clear Writing this bit to 1 clears the MSISRDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 03w01 HSIRDYC (wo): HSI16 ready interrupt clear Writing this bit to 1 clears the HSIRDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 04w01 HSERDYC (wo): HSE ready interrupt clear Writing this bit to 1 clears the HSERDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 05w01 HSI48RDYC (wo): HSI48 ready interrupt clear Writing this bit to 1 clears the HSI48RDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 06w01 PLL1RDYC (wo): PLL1 ready interrupt clear Writing this bit to 1 clears the PLL1RDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 07w01 PLL2RDYC (wo): PLL2 ready interrupt clear Writing this bit to 1 clears the PLL2RDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 08w01 PLL3RDYC (wo): PLL3 ready interrupt clear Writing this bit to 1 clears the PLL3RDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 10w01 CSSC (wo): Clock security system interrupt clear Writing this bit to 1 clears the CSSF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 11w01 MSIKRDYC (wo): MSIK oscillator ready interrupt clear Writing this bit to 1 clears the MSIKRDYF flag. Writing 0 has no effect.
0x46020C58 C   FIELD 12w01 SHSIRDYC (wo): SHSI oscillator ready interrupt clear Writing this bit to 1 clears the SHSIRDYF flag. Writing 0 has no effect.
0x46020C60 B  REGISTER RCC_AHB1RSTR: RCC AHB1 peripheral reset register
0x46020C60 C   FIELD 00w01 GPDMA1RST (rw): GPDMA1 reset Set and cleared by software.
0x46020C60 C   FIELD 01w01 CORDICRST (rw): CORDIC reset Set and cleared by software.
0x46020C60 C   FIELD 02w01 FMACRST (rw): FMAC reset Set and cleared by software.
0x46020C60 C   FIELD 03w01 MDF1RST (rw): MDF1 reset Set and cleared by software.
0x46020C60 C   FIELD 12w01 CRCRST (rw): CRC reset Set and cleared by software.
0x46020C60 C   FIELD 16w01 TSCRST (rw): TSC reset Set and cleared by software.
0x46020C60 C   FIELD 17w01 RAMCFGRST (rw): RAMCFG reset Set and cleared by software.
0x46020C60 C   FIELD 18w01 DMA2DRST (rw): DMA2D reset Set and cleared by software.
0x46020C64 B  REGISTER RCC_AHB2RSTR1: RCC AHB2 peripheral reset register 1
0x46020C64 C   FIELD 00w01 GPIOARST (rw): IO port A reset Set and cleared by software.
0x46020C64 C   FIELD 01w01 GPIOBRST (rw): IO port B reset Set and cleared by software.
0x46020C64 C   FIELD 02w01 GPIOCRST (rw): IO port C reset Set and cleared by software.
0x46020C64 C   FIELD 03w01 GPIODRST (rw): IO port D reset Set and cleared by software.
0x46020C64 C   FIELD 04w01 GPIOERST (rw): IO port E reset Set and cleared by software.
0x46020C64 C   FIELD 05w01 GPIOFRST (rw): IO port F reset Set and cleared by software.
0x46020C64 C   FIELD 06w01 GPIOGRST (rw): IO port G reset Set and cleared by software.
0x46020C64 C   FIELD 07w01 GPIOHRST (rw): IO port H reset Set and cleared by software.
0x46020C64 C   FIELD 08w01 GPIOIRST (rw): IO port I reset Set and cleared by software.
0x46020C64 C   FIELD 10w01 ADC1RST (rw): ADC1 reset Set and cleared by software.
0x46020C64 C   FIELD 12w01 DCMI_PSSIRST (rw): DCMI and PSSI reset Set and cleared by software.
0x46020C64 C   FIELD 14w01 OTGRST (rw): OTG_FS reset Set and cleared by software.
0x46020C64 C   FIELD 16w01 AESRST (rw): AES hardware accelerator reset Set and cleared by software.
0x46020C64 C   FIELD 17w01 HASHRST (rw): Hash reset Set and cleared by software.
0x46020C64 C   FIELD 18w01 RNGRST (rw): Random number generator reset Set and cleared by software.
0x46020C64 C   FIELD 19w01 PKARST (rw): PKA reset Set and cleared by software.
0x46020C64 C   FIELD 20w01 SAESRST (rw): SAES hardware accelerator reset Set and cleared by software.
0x46020C64 C   FIELD 21w01 OCTOSPIMRST (rw): OCTOSPIM reset Set and cleared by software.
0x46020C64 C   FIELD 23w01 OTFDEC1RST (rw): OTFDEC1 reset Set and cleared by software.
0x46020C64 C   FIELD 24w01 OTFDEC2RST (rw): OTFDEC2 reset Set and cleared by software.
0x46020C64 C   FIELD 27w01 SDMMC1RST (rw): SDMMC1 reset Set and cleared by software.
0x46020C64 C   FIELD 28w01 SDMMC2RST (rw): SDMMC2 reset Set and cleared by software.
0x46020C68 B  REGISTER RCC_AHB2RSTR2: RCC AHB2 peripheral reset register 2
0x46020C68 C   FIELD 00w01 FSMCRST (rw): Flexible memory controller reset Set and cleared by software.
0x46020C68 C   FIELD 04w01 OCTOSPI1RST (rw): OCTOSPI1 reset Set and cleared by software.
0x46020C68 C   FIELD 08w01 OCTOSPI2RST (rw): OCTOSPI2 reset Set and cleared by software.
0x46020C6C B  REGISTER RCC_AHB3RSTR: RCC AHB3 peripheral reset register
0x46020C6C C   FIELD 00w01 LPGPIO1RST (rw): LPGPIO1 reset Set and cleared by software.
0x46020C6C C   FIELD 05w01 ADC4RST (rw): ADC4 reset Set and cleared by software.
0x46020C6C C   FIELD 06w01 DAC1RST (rw): DAC1 reset Set and cleared by software.
0x46020C6C C   FIELD 09w01 LPDMA1RST (rw): LPDMA1 reset Set and cleared by software.
0x46020C6C C   FIELD 10w01 ADF1RST (rw): ADF1 reset Set and cleared by software.
0x46020C74 B  REGISTER RCC_APB1RSTR1: RCC APB1 peripheral reset register 1
0x46020C74 C   FIELD 00w01 TIM2RST (rw): TIM2 reset Set and cleared by software.
0x46020C74 C   FIELD 01w01 TIM3RST (rw): TIM3 reset Set and cleared by software.
0x46020C74 C   FIELD 02w01 TIM4RST (rw): TIM4 reset Set and cleared by software.
0x46020C74 C   FIELD 03w01 TIM5RST (rw): TIM5 reset Set and cleared by software.
0x46020C74 C   FIELD 04w01 TIM6RST (rw): TIM6 reset Set and cleared by software.
0x46020C74 C   FIELD 05w01 TIM7RST (rw): TIM7 reset Set and cleared by software.
0x46020C74 C   FIELD 14w01 SPI2RST (rw): SPI2 reset Set and cleared by software.
0x46020C74 C   FIELD 17w01 USART2RST (rw): USART2 reset Set and cleared by software.
0x46020C74 C   FIELD 18w01 USART3RST (rw): USART3 reset Set and cleared by software.
0x46020C74 C   FIELD 19w01 UART4RST (rw): UART4 reset Set and cleared by software.
0x46020C74 C   FIELD 20w01 UART5RST (rw): UART5 reset Set and cleared by software.
0x46020C74 C   FIELD 21w01 I2C1RST (rw): I2C1 reset Set and cleared by software.
0x46020C74 C   FIELD 22w01 I2C2RST (rw): I2C2 reset Set and cleared by software.
0x46020C74 C   FIELD 24w01 CRSRST (rw): CRS reset Set and cleared by software.
0x46020C78 B  REGISTER RCC_APB1RSTR2: RCC APB1 peripheral reset register 2
0x46020C78 C   FIELD 01w01 I2C4RST (rw): I2C4 reset Set and cleared by software
0x46020C78 C   FIELD 05w01 LPTIM2RST (rw): LPTIM2 reset Set and cleared by software.
0x46020C78 C   FIELD 09w01 FDCAN1RST (rw): FDCAN1 reset Set and cleared by software.
0x46020C78 C   FIELD 23w01 UCPD1RST (rw): UCPD1 reset Set and cleared by software.
0x46020C7C B  REGISTER RCC_APB2RSTR: RCC APB2 peripheral reset register
0x46020C7C C   FIELD 11w01 TIM1RST (rw): TIM1 reset Set and cleared by software.
0x46020C7C C   FIELD 12w01 SPI1RST (rw): SPI1 reset Set and cleared by software.
0x46020C7C C   FIELD 13w01 TIM8RST (rw): TIM8 reset Set and cleared by software.
0x46020C7C C   FIELD 14w01 USART1RST (rw): USART1 reset Set and cleared by software.
0x46020C7C C   FIELD 16w01 TIM15RST (rw): TIM15 reset Set and cleared by software.
0x46020C7C C   FIELD 17w01 TIM16RST (rw): TIM16 reset Set and cleared by software.
0x46020C7C C   FIELD 18w01 TIM17RST (rw): TIM17 reset Set and cleared by software.
0x46020C7C C   FIELD 21w01 SAI1RST (rw): SAI1 reset Set and cleared by software.
0x46020C7C C   FIELD 22w01 SAI2RST (rw): SAI2 reset Set and cleared by software.
0x46020C80 B  REGISTER RCC_APB3RSTR: RCC APB3 peripheral reset register
0x46020C80 C   FIELD 01w01 SYSCFGRST (rw): SYSCFG reset Set and cleared by software.
0x46020C80 C   FIELD 05w01 SPI3RST (rw): SPI3 reset Set and cleared by software.
0x46020C80 C   FIELD 06w01 LPUART1RST (rw): LPUART1 reset Set and cleared by software.
0x46020C80 C   FIELD 07w01 I2C3RST (rw): I2C3 reset Set and cleared by software.
0x46020C80 C   FIELD 11w01 LPTIM1RST (rw): LPTIM1 reset Set and cleared by software.
0x46020C80 C   FIELD 12w01 LPTIM3RST (rw): LPTIM3 reset Set and cleared by software.
0x46020C80 C   FIELD 13w01 LPTIM4RST (rw): LPTIM4 reset Set and cleared by software.
0x46020C80 C   FIELD 14w01 OPAMPRST (rw): OPAMP reset Set and cleared by software.
0x46020C80 C   FIELD 15w01 COMPRST (rw): COMP reset Set and cleared by software.
0x46020C80 C   FIELD 20w01 VREFRST (rw): VREFBUF reset Set and cleared by software.
0x46020C88 B  REGISTER RCC_AHB1ENR: RCC AHB1 peripheral clock enable register
0x46020C88 C   FIELD 00w01 GPDMA1EN (rw): GPDMA1 clock enable Set and cleared by software.
0x46020C88 C   FIELD 01w01 CORDICEN (rw): CORDIC clock enable Set and cleared by software.
0x46020C88 C   FIELD 02w01 FMACEN (rw): FMAC clock enable Set and reset by software.
0x46020C88 C   FIELD 03w01 MDF1EN (rw): MDF1 clock enable Set and reset by software.
0x46020C88 C   FIELD 08w01 FLASHEN (rw): FLASH clock enable Set and cleared by software. This bit can be disabled only when the Flash memory is in power down mode.
0x46020C88 C   FIELD 12w01 CRCEN (rw): CRC clock enable Set and cleared by software.
0x46020C88 C   FIELD 16w01 TSCEN (rw): Touch sensing controller clock enable Set and cleared by software.
0x46020C88 C   FIELD 17w01 RAMCFGEN (rw): RAMCFG clock enable Set and cleared by software.
0x46020C88 C   FIELD 18w01 DMA2DEN (rw): DMA2D clock enable Set and cleared by software.
0x46020C88 C   FIELD 24w01 GTZC1EN (rw): GTZC1 clock enable Set and reset by software.
0x46020C88 C   FIELD 28w01 BKPSRAMEN (rw): BKPSRAM clock enable Set and reset by software.
0x46020C88 C   FIELD 30w01 DCACHE1EN (rw): DCACHE1 clock enable Set and reset by software. Note: DCACHE1 clock must be enabled when external memories are accessed through OCTOSPI1, OCTOSPI2 or FSMC, even if the DCACHE1 is bypassed.
0x46020C88 C   FIELD 31w01 SRAM1EN (rw): SRAM1 clock enable Set and reset by software.
0x46020C8C B  REGISTER RCC_AHB2ENR1: RCC AHB2 peripheral clock enable register 1
0x46020C8C C   FIELD 00w01 GPIOAEN (rw): IO port A clock enable Set and cleared by software.
0x46020C8C C   FIELD 01w01 GPIOBEN (rw): IO port B clock enable Set and cleared by software.
0x46020C8C C   FIELD 02w01 GPIOCEN (rw): IO port C clock enable Set and cleared by software.
0x46020C8C C   FIELD 03w01 GPIODEN (rw): IO port D clock enable Set and cleared by software.
0x46020C8C C   FIELD 04w01 GPIOEEN (rw): IO port E clock enable Set and cleared by software.
0x46020C8C C   FIELD 05w01 GPIOFEN (rw): IO port F clock enable Set and cleared by software.
0x46020C8C C   FIELD 06w01 GPIOGEN (rw): IO port G clock enable Set and cleared by software.
0x46020C8C C   FIELD 07w01 GPIOHEN (rw): IO port H clock enable Set and cleared by software.
0x46020C8C C   FIELD 08w01 GPIOIEN (rw): IO port I clock enable Set and cleared by software.
0x46020C8C C   FIELD 10w01 ADC1EN (rw): ADC1 clock enable Set and cleared by software.
0x46020C8C C   FIELD 12w01 DCMI_PSSIEN (rw): DCMI and PSSI clock enable Set and cleared by software.
0x46020C8C C   FIELD 14w01 OTGEN (rw): OTG_FS clock enable Set and cleared by software.
0x46020C8C C   FIELD 16w01 AESEN (rw): AES clock enable Set and cleared by software.
0x46020C8C C   FIELD 17w01 HASHEN (rw): HASH clock enable Set and cleared by software
0x46020C8C C   FIELD 18w01 RNGEN (rw): RNG clock enable Set and cleared by software.
0x46020C8C C   FIELD 19w01 PKAEN (rw): PKA clock enable Set and cleared by software.
0x46020C8C C   FIELD 20w01 SAESEN (rw): SAES clock enable Set and cleared by software.
0x46020C8C C   FIELD 21w01 OCTOSPIMEN (rw): OCTOSPIM clock enable Set and cleared by software.
0x46020C8C C   FIELD 23w01 OTFDEC1EN (rw): OTFDEC1 clock enable Set and cleared by software.
0x46020C8C C   FIELD 24w01 OTFDEC2EN (rw): OTFDEC2 clock enable Set and cleared by software.
0x46020C8C C   FIELD 27w01 SDMMC1EN (rw): SDMMC1 clock enable Set and cleared by software.
0x46020C8C C   FIELD 28w01 SDMMC2EN (rw): SDMMC2 clock enable Set and cleared by software.
0x46020C8C C   FIELD 30w01 SRAM2EN (rw): SRAM2 clock enable Set and reset by software.
0x46020C8C C   FIELD 31w01 SRAM3EN (rw): SRAM3 clock enable Set and reset by software.
0x46020C90 B  REGISTER RCC_AHB2ENR2: RCC AHB2 peripheral clock enable register 2
0x46020C90 C   FIELD 00w01 FSMCEN (rw): FSMC clock enable Set and cleared by software.
0x46020C90 C   FIELD 04w01 OCTOSPI1EN (rw): OCTOSPI1 clock enable Set and cleared by software.
0x46020C90 C   FIELD 08w01 OCTOSPI2EN (rw): OCTOSPI2 clock enable Set and cleared by software.
0x46020C94 B  REGISTER RCC_AHB3ENR: RCC AHB3 peripheral clock enable register
0x46020C94 C   FIELD 00w01 LPGPIO1EN (rw): LPGPIO1 enable Set and cleared by software.
0x46020C94 C   FIELD 02w01 PWREN (rw): PWR clock enable Set and cleared by software.
0x46020C94 C   FIELD 05w01 ADC4EN (rw): ADC4 clock enable Set and cleared by software.
0x46020C94 C   FIELD 06w01 DAC1EN (rw): DAC1 clock enable Set and cleared by software.
0x46020C94 C   FIELD 09w01 LPDMA1EN (rw): LPDMA1 clock enable Set and cleared by software.
0x46020C94 C   FIELD 10w01 ADF1EN (rw): ADF1 clock enable Set and cleared by software.
0x46020C94 C   FIELD 12w01 GTZC2EN (rw): GTZC2 clock enable Set and cleared by software.
0x46020C94 C   FIELD 31w01 SRAM4EN (rw): SRAM4 clock enable Set and reset by software.
0x46020C9C B  REGISTER RCC_APB1ENR1: RCC APB1 peripheral clock enable register 1
0x46020C9C C   FIELD 00w01 TIM2EN (rw): TIM2 clock enable Set and cleared by software.
0x46020C9C C   FIELD 01w01 TIM3EN (rw): TIM3 clock enable Set and cleared by software.
0x46020C9C C   FIELD 02w01 TIM4EN (rw): TIM4 clock enable Set and cleared by software.
0x46020C9C C   FIELD 03w01 TIM5EN (rw): TIM5 clock enable Set and cleared by software.
0x46020C9C C   FIELD 04w01 TIM6EN (rw): TIM6 clock enable Set and cleared by software.
0x46020C9C C   FIELD 05w01 TIM7EN (rw): TIM7 clock enable Set and cleared by software.
0x46020C9C C   FIELD 11w01 WWDGEN (rw): WWDG clock enable Set by software to enable the window watchdog clock. Reset by hardware system reset. This bit can also be set by hardware if the WWDG_SW option bit is reset.
0x46020C9C C   FIELD 14w01 SPI2EN (rw): SPI2 clock enable Set and cleared by software.
0x46020C9C C   FIELD 17w01 USART2EN (rw): USART2 clock enable Set and cleared by software.
0x46020C9C C   FIELD 18w01 USART3EN (rw): USART3 clock enable Set and cleared by software.
0x46020C9C C   FIELD 19w01 UART4EN (rw): UART4 clock enable Set and cleared by software.
0x46020C9C C   FIELD 20w01 UART5EN (rw): UART5 clock enable Set and cleared by software.
0x46020C9C C   FIELD 21w01 I2C1EN (rw): I2C1 clock enable Set and cleared by software.
0x46020C9C C   FIELD 22w01 I2C2EN (rw): I2C2 clock enable Set and cleared by software.
0x46020C9C C   FIELD 24w01 CRSEN (rw): CRS clock enable Set and cleared by software.
0x46020CA0 B  REGISTER RCC_APB1ENR2: RCC APB1 peripheral clock enable register 2
0x46020CA0 C   FIELD 01w01 I2C4EN (rw): I2C4 clock enable Set and cleared by software
0x46020CA0 C   FIELD 05w01 LPTIM2EN (rw): LPTIM2 clock enable Set and cleared by software.
0x46020CA0 C   FIELD 09w01 FDCAN1EN (rw): FDCAN1 clock enable Set and cleared by software.
0x46020CA0 C   FIELD 23w01 UCPD1EN (rw): UCPD1 clock enable Set and cleared by software.
0x46020CA4 B  REGISTER RCC_APB2ENR: RCC APB2 peripheral clock enable register
0x46020CA4 C   FIELD 11w01 TIM1EN (rw): TIM1 clock enable Set and cleared by software.
0x46020CA4 C   FIELD 12w01 SPI1EN (rw): SPI1 clock enable Set and cleared by software.
0x46020CA4 C   FIELD 13w01 TIM8EN (rw): TIM8 clock enable Set and cleared by software.
0x46020CA4 C   FIELD 14w01 USART1EN (rw): USART1clock enable Set and cleared by software.
0x46020CA4 C   FIELD 16w01 TIM15EN (rw): TIM15 clock enable Set and cleared by software.
0x46020CA4 C   FIELD 17w01 TIM16EN (rw): TIM16 clock enable Set and cleared by software.
0x46020CA4 C   FIELD 18w01 TIM17EN (rw): TIM17 clock enable Set and cleared by software.
0x46020CA4 C   FIELD 21w01 SAI1EN (rw): SAI1 clock enable Set and cleared by software.
0x46020CA4 C   FIELD 22w01 SAI2EN (rw): SAI2 clock enable Set and cleared by software.
0x46020CA8 B  REGISTER RCC_APB3ENR: RCC APB3 peripheral clock enable register
0x46020CA8 C   FIELD 01w01 SYSCFGEN (rw): SYSCFG clock enable Set and cleared by software.
0x46020CA8 C   FIELD 05w01 SPI3EN (rw): SPI3 clock enable Set and cleared by software.
0x46020CA8 C   FIELD 06w01 LPUART1EN (rw): LPUART1 clock enable Set and cleared by software.
0x46020CA8 C   FIELD 07w01 I2C3EN (rw): I2C3 clock enable Set and cleared by software.
0x46020CA8 C   FIELD 11w01 LPTIM1EN (rw): LPTIM1 clock enable Set and cleared by software.
0x46020CA8 C   FIELD 12w01 LPTIM3EN (rw): LPTIM3 clock enable Set and cleared by software.
0x46020CA8 C   FIELD 13w01 LPTIM4EN (rw): LPTIM4 clock enable Set and cleared by software.
0x46020CA8 C   FIELD 14w01 OPAMPEN (rw): OPAMP clock enable Set and cleared by software.
0x46020CA8 C   FIELD 15w01 COMPEN (rw): COMP clock enable Set and cleared by software.
0x46020CA8 C   FIELD 20w01 VREFEN (rw): VREFBUF clock enable Set and cleared by software.
0x46020CA8 C   FIELD 21w01 RTCAPBEN (rw): RTC and TAMP APB clock enable Set and cleared by software.
0x46020CB0 B  REGISTER RCC_AHB1SMENR: RCC AHB1 peripheral clocks enable in Sleep and Stop modes register
0x46020CB0 C   FIELD 00w01 GPDMA1SMEN (rw): GPDMA1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CB0 C   FIELD 01w01 CORDICSMEN (rw): CORDIC clocks enable during Sleep and Stop modes Set and cleared by software during Sleep mode.
0x46020CB0 C   FIELD 02w01 FMACSMEN (rw): FMAC clocks enable during Sleep and Stop modes. Set and cleared by software.
0x46020CB0 C   FIELD 03w01 MDF1SMEN (rw): MDF1 clocks enable during Sleep and Stop modes. Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CB0 C   FIELD 08w01 FLASHSMEN (rw): FLASH clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB0 C   FIELD 12w01 CRCSMEN (rw): CRC clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB0 C   FIELD 16w01 TSCSMEN (rw): TSC clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB0 C   FIELD 17w01 RAMCFGSMEN (rw): RAMCFG clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB0 C   FIELD 18w01 DMA2DSMEN (rw): DMA2D clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB0 C   FIELD 24w01 GTZC1SMEN (rw): GTZC1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB0 C   FIELD 28w01 BKPSRAMSMEN (rw): BKPSRAM clocks enable during Sleep and Stop modes Set and cleared by software
0x46020CB0 C   FIELD 29w01 ICACHESMEN (rw): ICACHE clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB0 C   FIELD 30w01 DCACHE1SMEN (rw): DCACHE1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB0 C   FIELD 31w01 SRAM1SMEN (rw): SRAM1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 B  REGISTER RCC_AHB2SMENR1: RCC AHB2 peripheral clocks enable in Sleep and Stop modes register 1
0x46020CB4 C   FIELD 00w01 GPIOASMEN (rw): IO port A clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 01w01 GPIOBSMEN (rw): IO port B clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 02w01 GPIOCSMEN (rw): IO port C clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 03w01 GPIODSMEN (rw): IO port D clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 04w01 GPIOESMEN (rw): IO port E clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 05w01 GPIOFSMEN (rw): IO port F clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 06w01 GPIOGSMEN (rw): IO port G clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 07w01 GPIOHSMEN (rw): IO port H clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 08w01 GPIOISMEN (rw): IO port I clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 10w01 ADC1SMEN (rw): ADC1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 12w01 DCMI_PSSISMEN (rw): DCMI and PSSI clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 14w01 OTGSMEN (rw): OTG_FS clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 16w01 AESSMEN (rw): AES clock enable during Sleep and Stop modes Set and cleared by software
0x46020CB4 C   FIELD 17w01 HASHSMEN (rw): HASH clock enable during Sleep and Stop modes Set and cleared by software
0x46020CB4 C   FIELD 18w01 RNGSMEN (rw): Random number generator (RNG) clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 19w01 PKASMEN (rw): PKA clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 20w01 SAESSMEN (rw): SAES accelerator clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 21w01 OCTOSPIMSMEN (rw): OCTOSPIM clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 23w01 OTFDEC1SMEN (rw): OTFDEC1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 24w01 OTFDEC2SMEN (rw): OTFDEC2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 27w01 SDMMC1SMEN (rw): SDMMC1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 28w01 SDMMC2SMEN (rw): SDMMC2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 30w01 SRAM2SMEN (rw): SRAM2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB4 C   FIELD 31w01 SRAM3SMEN (rw): SRAM3 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB8 B  REGISTER RCC_AHB2SMENR2: RCC AHB2 peripheral clocks enable in Sleep and Stop modes register 2
0x46020CB8 C   FIELD 00w01 FSMCSMEN (rw): FSMC clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB8 C   FIELD 04w01 OCTOSPI1SMEN (rw): OCTOSPI1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CB8 C   FIELD 08w01 OCTOSPI2SMEN (rw): OCTOSPI2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CBC B  REGISTER RCC_AHB3SMENR: RCC AHB3 peripheral clocks enable in Sleep and Stop modes register
0x46020CBC C   FIELD 00w01 LPGPIO1SMEN (rw): LPGPIO1 enable during Sleep and Stop modes Set and cleared by software.
0x46020CBC C   FIELD 02w01 PWRSMEN (rw): PWR clock enable during Sleep and Stop modes Set and cleared by software.
0x46020CBC C   FIELD 05w01 ADC4SMEN (rw): ADC4 clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CBC C   FIELD 06w01 DAC1SMEN (rw): DAC1 clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CBC C   FIELD 09w01 LPDMA1SMEN (rw): LPDMA1 clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CBC C   FIELD 10w01 ADF1SMEN (rw): ADF1 clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CBC C   FIELD 12w01 GTZC2SMEN (rw): GTZC2 clock enable during Sleep and Stop modes Set and cleared by software.
0x46020CBC C   FIELD 31w01 SRAM4SMEN (rw): SRAM4 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CC4 B  REGISTER RCC_APB1SMENR1: RCC APB1 peripheral clocks enable in Sleep and Stop modes register 1
0x46020CC4 C   FIELD 00w01 TIM2SMEN (rw): TIM2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CC4 C   FIELD 01w01 TIM3SMEN (rw): TIM3 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CC4 C   FIELD 02w01 TIM4SMEN (rw): TIM4 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CC4 C   FIELD 03w01 TIM5SMEN (rw): TIM5 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CC4 C   FIELD 04w01 TIM6SMEN (rw): TIM6 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CC4 C   FIELD 05w01 TIM7SMEN (rw): TIM7 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CC4 C   FIELD 11w01 WWDGSMEN (rw): Window watchdog clocks enable during Sleep and Stop modes Set and cleared by software. This bit is forced to 1 by hardware when the hardware WWDG option is activated.
0x46020CC4 C   FIELD 14w01 SPI2SMEN (rw): SPI2 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC4 C   FIELD 17w01 USART2SMEN (rw): USART2 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC4 C   FIELD 18w01 USART3SMEN (rw): USART3 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC4 C   FIELD 19w01 UART4SMEN (rw): UART4 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC4 C   FIELD 20w01 UART5SMEN (rw): UART5 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC4 C   FIELD 21w01 I2C1SMEN (rw): I2C1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC4 C   FIELD 22w01 I2C2SMEN (rw): I2C2 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC4 C   FIELD 24w01 CRSSMEN (rw): CRS clock enable during Sleep and Stop modes Set and cleared by software.
0x46020CC8 B  REGISTER RCC_APB1SMENR2: RCC APB1 peripheral clocks enable in Sleep and Stop modes register 2
0x46020CC8 C   FIELD 01w01 I2C4SMEN (rw): I2C4 clocks enable during Sleep and Stop modes Set and cleared by software Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC8 C   FIELD 05w01 LPTIM2SMEN (rw): LPTIM2 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CC8 C   FIELD 09w01 FDCAN1SMEN (rw): FDCAN1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CC8 C   FIELD 23w01 UCPD1SMEN (rw): UCPD1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CCC B  REGISTER RCC_APB2SMENR: RCC APB2 peripheral clocks enable in Sleep and Stop modes register
0x46020CCC C   FIELD 11w01 TIM1SMEN (rw): TIM1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CCC C   FIELD 12w01 SPI1SMEN (rw): SPI1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CCC C   FIELD 13w01 TIM8SMEN (rw): TIM8 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CCC C   FIELD 14w01 USART1SMEN (rw): USART1clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CCC C   FIELD 16w01 TIM15SMEN (rw): TIM15 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CCC C   FIELD 17w01 TIM16SMEN (rw): TIM16 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CCC C   FIELD 18w01 TIM17SMEN (rw): TIM17 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CCC C   FIELD 21w01 SAI1SMEN (rw): SAI1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CCC C   FIELD 22w01 SAI2SMEN (rw): SAI2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CD0 B  REGISTER RCC_APB3SMENR: RCC APB3 peripheral clock enable in Sleep and Stop modes register
0x46020CD0 C   FIELD 01w01 SYSCFGSMEN (rw): SYSCFG clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CD0 C   FIELD 05w01 SPI3SMEN (rw): SPI3 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD0 C   FIELD 06w01 LPUART1SMEN (rw): LPUART1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD0 C   FIELD 07w01 I2C3SMEN (rw): I2C3 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD0 C   FIELD 11w01 LPTIM1SMEN (rw): LPTIM1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD0 C   FIELD 12w01 LPTIM3SMEN (rw): LPTIM3 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD0 C   FIELD 13w01 LPTIM4SMEN (rw): LPTIM4 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD0 C   FIELD 14w01 OPAMPSMEN (rw): OPAMP clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CD0 C   FIELD 15w01 COMPSMEN (rw): COMP clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CD0 C   FIELD 20w01 VREFSMEN (rw): VREFBUF clocks enable during Sleep and Stop modes Set and cleared by software.
0x46020CD0 C   FIELD 21w01 RTCAPBSMEN (rw): RTC and TAMP APB clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 B  REGISTER RCC_SRDAMR: RCC SmartRun domain peripheral autonomous mode register
0x46020CD8 C   FIELD 05w01 SPI3AMEN (rw): SPI3 autonomous mode enable in Stop 0,1, 2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 06w01 LPUART1AMEN (rw): LPUART1 autonomous mode enable in Stop 0,1, 2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 07w01 I2C3AMEN (rw): I2C3 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 11w01 LPTIM1AMEN (rw): LPTIM1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 12w01 LPTIM3AMEN (rw): LPTIM3 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 13w01 LPTIM4AMEN (rw): LPTIM4 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 14w01 OPAMPAMEN (rw): OPAMP autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x46020CD8 C   FIELD 15w01 COMPAMEN (rw): COMP autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x46020CD8 C   FIELD 20w01 VREFAMEN (rw): VREFBUF autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x46020CD8 C   FIELD 21w01 RTCAPBAMEN (rw): RTC and TAMP autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 25w01 ADC4AMEN (rw): ADC4 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 26w01 LPGPIO1AMEN (rw): LPGPIO1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x46020CD8 C   FIELD 27w01 DAC1AMEN (rw): DAC1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 28w01 LPDMA1AMEN (rw): LPDMA1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 29w01 ADF1AMEN (rw): ADF1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x46020CD8 C   FIELD 31w01 SRAM4AMEN (rw): SRAM4 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x46020CE0 B  REGISTER RCC_CCIPR1: RCC peripherals independent clock configuration register 1
0x46020CE0 C   FIELD 00w02 USART1SEL (rw): USART1 kernel clock source selection This bits are used to select the USART1 kernel clock source. Note: The USART1 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x46020CE0 C   FIELD 02w02 USART2SEL (rw): USART2 kernel clock source selection This bits are used to select the USART2 kernel clock source. Note: The USART2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x46020CE0 C   FIELD 04w02 USART3SEL (rw): USART3 kernel clock source selection This bits are used to select the USART3 kernel clock source. Note: The USART3 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x46020CE0 C   FIELD 06w02 UART4SEL (rw): UART4 kernel clock source selection This bits are used to select the UART4 kernel clock source. Note: The UART4 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x46020CE0 C   FIELD 08w02 UART5SEL (rw): UART5 kernel clock source selection These bits are used to select the UART5 kernel clock source. Note: The UART5 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x46020CE0 C   FIELD 10w02 I2C1SEL (rw): I2C1 kernel clock source selection These bits are used to select the I2C1 kernel clock source. Note: The I2C1 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x46020CE0 C   FIELD 12w02 I2C2SEL (rw): I2C2 kernel clock source selection These bits are used to select the I2C2 kernel clock source. Note: The I2C2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x46020CE0 C   FIELD 14w02 I2C4SEL (rw): I2C4 kernel clock source selection These bits are used to select the I2C4 kernel clock source. Note: The I2C4 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x46020CE0 C   FIELD 16w02 SPI2SEL (rw): SPI2 kernel clock source selection These bits are used to select the SPI2 kernel clock source. Note: The SPI2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x46020CE0 C   FIELD 18w02 LPTIM2SEL (rw): Low-power timer 2 kernel clock source selection These bits are used to select the LPTIM2 kernel clock source. Note: The LPTIM2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is LSI, LSE or HSI16 if HSIKERON = 1.
0x46020CE0 C   FIELD 20w02 SPI1SEL (rw): SPI1 kernel clock source selection These bits are used to select the SPI1 kernel clock source. Note: The SPI1 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x46020CE0 C   FIELD 22w02 SYSTICKSEL (rw): SysTick clock source selection These bits are used to select the SysTick clock source. Note: When LSE or LSI is selected, the AHB frequency must be at least four times higher than the LSI or LSE frequency. In addition, a jitter up to one HCLK cycle is introduced, due to the LSE or LSI sampling with HCLK in the SysTick circuitry.
0x46020CE0 C   FIELD 24w02 FDCAN1SEL (rw): FDCAN1 kernel clock source selection These bits are used to select the FDCAN1 kernel clock source.
0x46020CE0 C   FIELD 26w02 ICLKSEL (rw): intermediate clock source selection These bits are used to select the clock source used by OTG_FS and SDMMC.
0x46020CE0 C   FIELD 29w03 TIMICSEL (rw): Clocks sources for TIM16,TIM17 and LPTIM2 internal input capture When the TIMICSEL2 bit is set, the TIM16, TIM17 and LPTIM2 internal input capture can be connected either to HSI/256, MSI/4 or MSI/1024. Depending on TIMICSEL[1:0] value, MSI is either MSIK or MSIS. When TIMICSEL2 is cleared, the HSI, MSIK and MSIS clock sources cannot be selected as TIM16, TIM17 or LPTIM2 internal input capture. 0xx: HSI, MSIK and MSIS dividers disabled Note: The clock division must be disabled (TIMICSEL configured to 0xx) before selecting or changing a clock sources division.
0x46020CE4 B  REGISTER RCC_CCIPR2: RCC peripherals independent clock configuration register 2
0x46020CE4 C   FIELD 00w03 MDF1SEL (rw): MDF1 kernel clock source selection These bits are used to select the MDF1 kernel clock source. others: reserved
0x46020CE4 C   FIELD 05w03 SAI1SEL (rw): SAI1 kernel clock source selection These bits are used to select the SAI1 kernel clock source. others: reserved Note: If the selected clock is the external clock and this clock is stopped, a switch to another clock is impossible.
0x46020CE4 C   FIELD 08w03 SAI2SEL (rw): SAI2 kernel clock source selection These bits are used to select the SAI2 kernel clock source. others: reserved Note: If the selected clock is the external clock and this clock is stopped, a switch to another clock is impossible.
0x46020CE4 C   FIELD 11w01 SAESSEL (rw): SAES kernel clock source selection This bit is used to select the SAES kernel clock source.
0x46020CE4 C   FIELD 12w02 RNGSEL (rw): RNGSEL kernel clock source selection These bits are used to select the RNG kernel clock source.
0x46020CE4 C   FIELD 14w01 SDMMCSEL (rw): SDMMC1 and SDMMC2 kernel clock source selection This bit is used to select the SDMMC kernel clock source. It is recommended to change this bit only after reset and before enabling the SDMMC.
0x46020CE4 C   FIELD 20w02 OCTOSPISEL (rw): OCTOSPI1 and OCTOSPI2 kernel clock source selection These bits are used to select the OCTOSPI1 and OCTOSPI2 kernel clock source.
0x46020CE8 B  REGISTER RCC_CCIPR3: RCC peripherals independent clock configuration register 3
0x46020CE8 C   FIELD 00w03 LPUART1SEL (rw): LPUART1 kernel clock source selection These bits are used to select the LPUART1 kernel clock source. others: reserved Note: The LPUART1 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is HSI16, LSE or MSIK.
0x46020CE8 C   FIELD 03w02 SPI3SEL (rw): SPI3 kernel clock source selection These bits are used to select the SPI3 kernel clock source. Note: The SPI3 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is HSI16 or MSIK.
0x46020CE8 C   FIELD 06w02 I2C3SEL (rw): I2C3 kernel clock source selection These bits are used to select the I2C3 kernel clock source. Note: The I2C3 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is HSI16 or MSIK.
0x46020CE8 C   FIELD 08w02 LPTIM34SEL (rw): LPTIM3 and LPTIM4 kernel clock source selection These bits are used to select the LPTIM3 and LPTIM4 kernel clock source. Note: The LPTIM3 and LPTIM4 are functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is LSI, LSE, HSI16 with HSIKERON = 1 or MSIK with MSIKERON = 1.
0x46020CE8 C   FIELD 10w02 LPTIM1SEL (rw): LPTIM1 kernel clock source selection These bits are used to select the LPTIM1 kernel clock source. Note: The LPTIM1 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is LSI, LSE, HSI16 with HSIKERON = 1 or MSIK with MSIKERON = 1.
0x46020CE8 C   FIELD 12w03 ADCDACSEL (rw): ADC1, ADC4 and DAC1 kernel clock source selection These bits are used to select the ADC1, ADC4 and DAC1 kernel clock source. others: reserved Note: The ADC1, ADC4 and DAC1 are functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is HSI16 or MSIK (only ADC4 and DAC1 are functional in Stop 2 mode).
0x46020CE8 C   FIELD 15w01 DAC1SEL (rw): DAC1 sample and hold clock source selection This bit is used to select the DAC1 sample and hold clock source.
0x46020CE8 C   FIELD 16w03 ADF1SEL (rw): ADF1 kernel clock source selection These bits are used to select the ADF1 kernel clock source. others: reserved Note: The ADF1 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is AUDIOCLK or MSIK.
0x46020CF0 B  REGISTER RCC_BDCR: RCC Backup domain control register
0x46020CF0 C   FIELD 00w01 LSEON (rw): LSE oscillator enable Set and cleared by software.
0x46020CF0 C   FIELD 01w01 LSERDY (ro): LSE oscillator ready Set and cleared by hardware to indicate when the external 32 kHz oscillator is stable. After the LSEON bit is cleared, LSERDY goes low after six external low-speed oscillator clock cycles.
0x46020CF0 C   FIELD 02w01 LSEBYP (rw): LSE oscillator bypass Set and cleared by software to bypass oscillator in debug mode. This bit can be written only when the external 32 kHz oscillator is disabled (LSEON = 0 and LSERDY = 0).
0x46020CF0 C   FIELD 03w02 LSEDRV (rw): LSE oscillator drive capability Set by software to modulate the drive capability of the LSE oscillator. This field can be written only when the external 32 kHz oscillator is disabled (LSEON = 0 and LSERDY = 0). Note: The oscillator is in 'Xtal mode when it is not in bypass mode.
0x46020CF0 C   FIELD 05w01 LSECSSON (rw): CSS on LSE enable Set by software to enable the CSS on LSE. LSECSSON must be enabled after the LSE oscillator is enabled (LSEON bit enabled) and ready (LSERDY flag set by hardware), and after the RTCSEL bit is selected. Once enabled, this bit cannot be disabled, except after a LSE failure detection (LSECSSD = 1). In that case, the software must disable the LSECSSON bit.
0x46020CF0 C   FIELD 06w01 LSECSSD (ro): CSS on LSE failure Detection Set by hardware to indicate when a failure is detected by the CCS on the external 32 kHz oscillator (LSE).
0x46020CF0 C   FIELD 07w01 LSESYSEN (rw): LSE system clock (LSESYS) enable Set by software to enable always the LSE system clock generated by RCC. This clock can be used by any peripheral when its source clock is the LSE or at system level in case of one of the LSCOSEL, MCO, MSI PLL mode or CSS on LSE is needed. The LSESYS clock can be generated even if LSESYSEN= 0 if the LSE clock is requested by the CSS on LSE, by a peripheral or any other source clock using LSE.
0x46020CF0 C   FIELD 08w02 RTCSEL (rw): RTC and TAMP clock source selection Set by software to select the clock source for the RTC and TAMP . Once the RTC and TAMP clock source has been selected, it cannot be changed anymore unless the Backup domain is reset, or unless a failure is detected on LSE (LSECSSD is set). The BDRST bit can be used to reset them.
0x46020CF0 C   FIELD 11w01 LSESYSRDY (ro): LSE system clock (LSESYS) ready Set and cleared by hardware to indicate when the LSE system clock is stable.When the LSESYSEN bit is set, the LSESYSRDY flag is set after two LSE clock cycles. The LSE clock must be already enabled and stable (LSEON and LSERDY are set). When the LSEON bit is cleared, LSERDY goes low after six external low-speed oscillator clock cycles.
0x46020CF0 C   FIELD 12w01 LSEGFON (rw): LSE clock glitch filter enable Set and cleared by hardware to enable the LSE glitch filter. This bit can be written only when the LSE is disabled (LSEON = 0 and LSERDY = 0)
0x46020CF0 C   FIELD 15w01 RTCEN (rw): RTC and TAMP clock enable Set and cleared by software.
0x46020CF0 C   FIELD 16w01 BDRST (rw): Backup domain software reset Set and cleared by software.
0x46020CF0 C   FIELD 24w01 LSCOEN (rw): Low-speed clock output (LSCO) enable Set and cleared by software.
0x46020CF0 C   FIELD 25w01 LSCOSEL (rw): Low-speed clock output selection Set and cleared by software.
0x46020CF0 C   FIELD 26w01 LSION (rw): LSI oscillator enable Set and cleared by software.
0x46020CF0 C   FIELD 27w01 LSIRDY (rw): LSI oscillator ready Set and cleared by hardware to indicate when the LSI oscillator is stable. After the LSION bit is cleared, LSIRDY goes low after three internal low-speed oscillator clock cycles. This bit is set when the LSI is used by IWDG or RTC, even if LSION = 0.
0x46020CF0 C   FIELD 28w01 LSIPREDIV (rw): Low-speed clock divider configuration Set and cleared by software to enable the LSI division. This bit can be written only when the LSI is disabled (LSION = 0 and LSIRDY = 0). If the LSI was previously enabled, it is necessary to wait for at least 60 Î¼s after clearing LSION bit (synchronization time for LSI to be really disabled), before writing LSIPREDIV. The LSIPREDIV cannot be changed if the LSI is used by the IWDG or by the RTC.
0x46020CF4 B  REGISTER RCC_CSR: RCC control/status register
0x46020CF4 C   FIELD 08w04 MSIKSRANGE (rw): MSIK range after Standby mode Set by software to chose the MSIK frequency at startup. This range is used after exiting Standby mode until MSIRGSEL is set. After a NRST pin or a power-on reset or when exiting Shutdown mode, the range is always 4 MHz. MSIKSRANGE can be written only when MSIRGSEL = 1. others: reserved Note: Changing the MSIKSRANGE does not change the current MSIK frequency.
0x46020CF4 C   FIELD 12w04 MSISSRANGE (rw): MSIS range after Standby mode Set by software to chose the MSIS frequency at startup. This range is used after exiting Standby mode until MSIRGSEL is set. After a NRST pin or a power-on reset or when exiting Shutdown mode, the range is always 4 MHz. MSISSRANGE can be written only when MSIRGSEL = 1. others: reserved Note: Changing the MSISSRANGE does not change the current MSIS frequency.
0x46020CF4 C   FIELD 23w01 RMVF (rw): Remove reset flag Set by software to clear the reset flags.
0x46020CF4 C   FIELD 25w01 OBLRSTF (ro): Option byte loader reset flag Set by hardware when a reset from the option byte loading occurs. Cleared by writing to the RMVF bit.
0x46020CF4 C   FIELD 26w01 PINRSTF (ro): NRST pin reset flag Set by hardware when a reset from the NRST pin occurs. Cleared by writing to the RMVF bit.
0x46020CF4 C   FIELD 27w01 BORRSTF (ro): BOR flag Set by hardware when a BOR occurs. Cleared by writing to the RMVF bit.
0x46020CF4 C   FIELD 28w01 SFTRSTF (ro): Software reset flag Set by hardware when a software reset occurs. Cleared by writing to the RMVF bit.
0x46020CF4 C   FIELD 29w01 IWDGRSTF (ro): Independent watchdog reset flag Set by hardware when an independent watchdog reset domain occurs. Cleared by writing to the RMVF bit.
0x46020CF4 C   FIELD 30w01 WWDGRSTF (ro): Window watchdog reset flag Set by hardware when a window watchdog reset occurs. Cleared by writing to the RMVF bit.
0x46020CF4 C   FIELD 31w01 LPWRRSTF (ro): Low-power reset flag Set by hardware when a reset occurs due to Stop, Standby or Shutdown mode entry, whereas the corresponding nRST_STOP, nRST_STBY or nRST_SHDW option bit is cleared. Cleared by writing to the RMVF bit.
0x46020D10 B  REGISTER RCC_SECCFGR: RCC secure configuration register
0x46020D10 C   FIELD 00w01 HSISEC (rw): HSI clock configuration and status bits security Set and reset by software.
0x46020D10 C   FIELD 01w01 HSESEC (rw): HSE clock configuration bits, status bits and HSE_CSS security Set and reset by software.
0x46020D10 C   FIELD 02w01 MSISEC (rw): MSI clock configuration and status bits security Set and reset by software.
0x46020D10 C   FIELD 03w01 LSISEC (rw): LSI clock configuration and status bits security Set and reset by software.
0x46020D10 C   FIELD 04w01 LSESEC (rw): LSE clock configuration and status bits security Set and reset by software.
0x46020D10 C   FIELD 05w01 SYSCLKSEC (rw): SYSCLK clock selection, STOPWUCK bit, clock output on MCO configuration security Set and reset by software.
0x46020D10 C   FIELD 06w01 PRESCSEC (rw): AHBx/APBx prescaler configuration bits security Set and reset by software.
0x46020D10 C   FIELD 07w01 PLL1SEC (rw): PLL1 clock configuration and status bits security Set and reset by software.
0x46020D10 C   FIELD 08w01 PLL2SEC (rw): PLL2 clock configuration and status bits security Set and reset by software.
0x46020D10 C   FIELD 09w01 PLL3SEC (rw): PLL3 clock configuration and status bits security Set and reset by software.
0x46020D10 C   FIELD 10w01 ICLKSEC (rw): intermediate clock source selection security Set and reset by software.
0x46020D10 C   FIELD 11w01 HSI48SEC (rw): HSI48 clock configuration and status bits security Set and reset by software.
0x46020D10 C   FIELD 12w01 RMVFSEC (rw): Remove reset flag security Set and reset by software.
0x46020D14 B  REGISTER RCC_PRIVCFGR: RCC privilege configuration register
0x46020D14 C   FIELD 00w01 SPRIV (rw): RCC secure functions privilege configuration Set and reset by software. This bit can be written only by a secure privileged access.
0x46020D14 C   FIELD 01w01 NSPRIV (rw): RCC non-secure functions privilege configuration Set and reset by software. This bit can be written only by privileged access, secure or non-secure.
0x46021000 A PERIPHERAL ADC4
0x46021000 B  REGISTER ADC_ISR (rw): ADC interrupt and status register
0x46021000 C   FIELD 00w01 ADRDY: ADRDY
0x46021000 C   FIELD 01w01 EOSMP: EOSMP
0x46021000 C   FIELD 02w01 EOC: EOC
0x46021000 C   FIELD 03w01 EOS: EOS
0x46021000 C   FIELD 04w01 OVR: OVR
0x46021000 C   FIELD 07w01 AWD1: AWD1
0x46021000 C   FIELD 08w01 AWD2: AWD2
0x46021000 C   FIELD 09w01 AWD3: AWD3
0x46021000 C   FIELD 11w01 EOCAL: EOCAL
0x46021000 C   FIELD 12w01 LDORDY: LDORDY
0x46021004 B  REGISTER ADC_IER (rw): ADC interrupt enable register
0x46021004 C   FIELD 00w01 ADRDYIE: ADRDYIE
0x46021004 C   FIELD 01w01 EOSMPIE: EOSMPIE
0x46021004 C   FIELD 02w01 EOCIE: EOCIE
0x46021004 C   FIELD 03w01 EOSIE: EOSIE
0x46021004 C   FIELD 04w01 OVRIE: OVRIE
0x46021004 C   FIELD 07w01 AWD1IE: AWD1IE
0x46021004 C   FIELD 08w01 AWD2IE: AWD2IE
0x46021004 C   FIELD 09w01 AWD3IE: AWD3IE
0x46021004 C   FIELD 11w01 EOCALIE: EOCALIE
0x46021004 C   FIELD 12w01 LDORDYIE: LDORDYIE
0x46021008 B  REGISTER ADC_CR: ADC control register
0x46021008 C   FIELD 00w01 ADEN (ro): ADEN
0x46021008 C   FIELD 01w01 ADDIS (ro): ADDIS
0x46021008 C   FIELD 02w01 ADSTART (ro): ADSTART
0x46021008 C   FIELD 04w01 ADSTP (ro): ADSTP
0x46021008 C   FIELD 28w01 ADVREGEN (rw): ADVREGEN
0x46021008 C   FIELD 31w01 ADCAL (ro): ADCAL
0x4602100C B  REGISTER ADC_CFGR1 (rw): ADC configuration register
0x4602100C C   FIELD 00w01 DMAEN: DMAEN
0x4602100C C   FIELD 01w01 DMACFG: DMACFG
0x4602100C C   FIELD 02w02 RES: RES
0x4602100C C   FIELD 04w01 SCANDIR: SCANDIR
0x4602100C C   FIELD 05w01 ALIGN: ALIGN
0x4602100C C   FIELD 06w03 EXTSEL: EXTSEL
0x4602100C C   FIELD 10w02 EXTEN: EXTEN
0x4602100C C   FIELD 12w01 OVRMOD: OVRMOD
0x4602100C C   FIELD 13w01 CONT: CONT
0x4602100C C   FIELD 14w01 WAIT: WAIT
0x4602100C C   FIELD 16w01 DISCEN: DISCEN
0x4602100C C   FIELD 21w01 CHSELRMOD: CHSELRMOD
0x4602100C C   FIELD 22w01 AWD1SGL: AWD1SGL
0x4602100C C   FIELD 23w01 AWD1EN: AWD1EN
0x4602100C C   FIELD 26w05 AWD1CH: AWD1CH
0x46021010 B  REGISTER ADC_CFGR2 (rw): ADC configuration register 2
0x46021010 C   FIELD 00w01 OVSE: OVSE
0x46021010 C   FIELD 02w03 OVSR: OVSR
0x46021010 C   FIELD 05w04 OVSS: OVSS
0x46021010 C   FIELD 09w01 TOVS: TOVS
0x46021010 C   FIELD 29w01 LFTRIG: LFTRIG
0x46021014 B  REGISTER ADC_SMPR (rw): ADC sample time register
0x46021014 C   FIELD 00w03 SMP1: SMP1
0x46021014 C   FIELD 04w03 SMP2: SMP2
0x46021014 C   FIELD 08w01 SMPSEL0: SMPSEL0
0x46021014 C   FIELD 09w01 SMPSEL1: SMPSEL1
0x46021014 C   FIELD 10w01 SMPSEL2: SMPSEL2
0x46021014 C   FIELD 11w01 SMPSEL3: SMPSEL3
0x46021014 C   FIELD 12w01 SMPSEL4: SMPSEL4
0x46021014 C   FIELD 13w01 SMPSEL5: SMPSEL5
0x46021014 C   FIELD 14w01 SMPSEL6: SMPSEL6
0x46021014 C   FIELD 15w01 SMPSEL7: SMPSEL7
0x46021014 C   FIELD 16w01 SMPSEL8: SMPSEL8
0x46021014 C   FIELD 17w01 SMPSEL9: SMPSEL9
0x46021014 C   FIELD 18w01 SMPSEL10: SMPSEL10
0x46021014 C   FIELD 19w01 SMPSEL11: SMPSEL11
0x46021014 C   FIELD 20w01 SMPSEL12: SMPSEL12
0x46021014 C   FIELD 21w01 SMPSEL13: SMPSEL13
0x46021014 C   FIELD 22w01 SMPSEL14: SMPSEL14
0x46021014 C   FIELD 23w01 SMPSEL15: SMPSEL15
0x46021014 C   FIELD 24w01 SMPSEL16: SMPSEL16
0x46021014 C   FIELD 25w01 SMPSEL17: SMPSEL17
0x46021014 C   FIELD 26w01 SMPSEL18: SMPSEL18
0x46021014 C   FIELD 27w01 SMPSEL19: SMPSEL19
0x46021014 C   FIELD 28w01 SMPSEL20: SMPSEL20
0x46021014 C   FIELD 29w01 SMPSEL21: SMPSEL21
0x46021014 C   FIELD 30w01 SMPSEL22: SMPSEL22
0x46021014 C   FIELD 31w01 SMPSEL23: SMPSEL23
0x46021020 B  REGISTER ADC_AWD1TR (rw): ADC watchdog threshold register
0x46021020 C   FIELD 00w12 LT1: LT1
0x46021020 C   FIELD 16w12 HT1: HT1
0x46021024 B  REGISTER ADC_AWD2TR (rw): ADC watchdog threshold register
0x46021024 C   FIELD 00w12 LT2: LT2
0x46021024 C   FIELD 16w12 HT2: HT2
0x46021028 B  REGISTER ADC_CHSELRMOD0 (rw): ADC channel selection register [alternate]
0x46021028 B  REGISTER ADC_CHSELRMOD1 (rw): ADC channel selection register [alternate]
0x46021028 C   FIELD 00w04 SQ1: SQ1
0x46021028 C   FIELD 00w24 CHSEL: CHSEL
0x46021028 C   FIELD 04w04 SQ2: SQ2
0x46021028 C   FIELD 08w04 SQ3: SQ3
0x46021028 C   FIELD 12w04 SQ4: SQ4
0x46021028 C   FIELD 16w04 SQ5: SQ5
0x46021028 C   FIELD 20w04 SQ6: SQ6
0x46021028 C   FIELD 24w04 SQ7: SQ7
0x46021028 C   FIELD 28w04 SQ8: SQ8
0x4602102C B  REGISTER ADC_AWD3TR (rw): ADC watchdog threshold register
0x4602102C C   FIELD 00w12 LT3: LT3
0x4602102C C   FIELD 16w12 HT3: HT3
0x46021040 B  REGISTER ADC_DR (ro): ADC data register
0x46021040 C   FIELD 00w16 DATA: DATA
0x46021044 B  REGISTER ADC_PWR (rw): ADC data register
0x46021044 C   FIELD 00w01 AUTOFF: AUTOFF
0x46021044 C   FIELD 01w01 DPD: DPD
0x46021044 C   FIELD 02w01 VREFPROT: VREFPROT
0x46021044 C   FIELD 03w01 VREFSECSMP: VREFSECSMP
0x460210A0 B  REGISTER ADC_AWD2CR (rw): ADC Analog Watchdog 2 Configuration register
0x460210A0 C   FIELD 00w01 AWD2CH0: AWD2CH0
0x460210A0 C   FIELD 01w01 AWD2CH1: AWD2CH1
0x460210A0 C   FIELD 02w01 AWD2CH2: AWD2CH2
0x460210A0 C   FIELD 03w01 AWD2CH3: AWD2CH3
0x460210A0 C   FIELD 04w01 AWD2CH4: AWD2CH4
0x460210A0 C   FIELD 05w01 AWD2CH5: AWD2CH5
0x460210A0 C   FIELD 06w01 AWD2CH6: AWD2CH6
0x460210A0 C   FIELD 07w01 AWD2CH7: AWD2CH7
0x460210A0 C   FIELD 08w01 AWD2CH8: AWD2CH8
0x460210A0 C   FIELD 09w01 AWD2CH9: AWD2CH9
0x460210A0 C   FIELD 10w01 AWD2CH10: AWD2CH10
0x460210A0 C   FIELD 11w01 AWD2CH11: AWD2CH11
0x460210A0 C   FIELD 12w01 AWD2CH12: AWD2CH12
0x460210A0 C   FIELD 13w01 AWD2CH13: AWD2CH13
0x460210A0 C   FIELD 14w01 AWD2CH14: AWD2CH14
0x460210A0 C   FIELD 15w01 AWD2CH15: AWD2CH15
0x460210A0 C   FIELD 16w01 AWD2CH16: AWD2CH16
0x460210A0 C   FIELD 17w01 AWD2CH17: AWD2CH17
0x460210A0 C   FIELD 18w01 AWD2CH18: AWD2CH18
0x460210A0 C   FIELD 19w01 AWD2CH19: AWD2CH19
0x460210A0 C   FIELD 20w01 AWD2CH20: AWD2CH20
0x460210A0 C   FIELD 21w01 AWD2CH21: AWD2CH21
0x460210A0 C   FIELD 22w01 AWD2CH22: AWD2CH22
0x460210A0 C   FIELD 23w01 AWD2CH23: AWD2CH23
0x460210A4 B  REGISTER ADC_AWD3CR (rw): ADC Analog Watchdog 3 Configuration register
0x460210A4 C   FIELD 00w01 AWD3CH0: AWD3CH0
0x460210A4 C   FIELD 01w01 AWD3CH1: AWD3CH1
0x460210A4 C   FIELD 02w01 AWD3CH2: AWD3CH2
0x460210A4 C   FIELD 03w01 AWD3CH3: AWD3CH3
0x460210A4 C   FIELD 04w01 AWD3CH4: AWD3CH4
0x460210A4 C   FIELD 05w01 AWD3CH5: AWD3CH5
0x460210A4 C   FIELD 06w01 AWD3CH6: AWD3CH6
0x460210A4 C   FIELD 07w01 AWD3CH7: AWD3CH7
0x460210A4 C   FIELD 08w01 AWD3CH8: AWD3CH8
0x460210A4 C   FIELD 09w01 AWD3CH9: AWD3CH9
0x460210A4 C   FIELD 10w01 AWD3CH10: AWD3CH10
0x460210A4 C   FIELD 11w01 AWD3CH11: AWD3CH11
0x460210A4 C   FIELD 12w01 AWD3CH12: AWD3CH12
0x460210A4 C   FIELD 13w01 AWD3CH13: AWD3CH13
0x460210A4 C   FIELD 14w01 AWD3CH14: AWD3CH14
0x460210A4 C   FIELD 15w01 AWD3CH15: AWD3CH15
0x460210A4 C   FIELD 16w01 AWD3CH16: AWD3CH16
0x460210A4 C   FIELD 17w01 AWD3CH17: AWD3CH17
0x460210A4 C   FIELD 18w01 AWD3CH18: AWD3CH18
0x460210A4 C   FIELD 19w01 AWD3CH19: AWD3CH19
0x460210A4 C   FIELD 20w01 AWD3CH20: AWD3CH20
0x460210A4 C   FIELD 21w01 AWD3CH21: AWD3CH21
0x460210A4 C   FIELD 22w01 AWD3CH22: AWD3CH22
0x460210A4 C   FIELD 23w01 AWD3CH23: AWD3CH23
0x460210C4 B  REGISTER ADC_CALFACT (rw): ADC Calibration factor
0x460210C4 C   FIELD 00w07 CALFACT: CALFACT
0x460210D0 B  REGISTER ADC_OR (rw): ADC option register
0x460210D0 C   FIELD 00w01 CHN21SEL: CHN21SEL
0x46021308 B  REGISTER ADC_CCR (rw): ADC common configuration register
0x46021308 C   FIELD 18w04 PRESC: PRESC
0x46021308 C   FIELD 22w01 VREFEN: VREFEN
0x46021308 C   FIELD 23w01 VSENSESEL: VSENSESEL
0x46021308 C   FIELD 24w01 VBATEN: VBATEN
0x46021800 A PERIPHERAL DAC1
0x46021800 B  REGISTER DAC_CR (rw): DAC control register
0x46021800 C   FIELD 00w01 EN1: DAC channel1 enable
0x46021800 C   FIELD 01w01 TEN1: DAC channel1 trigger enable
0x46021800 C   FIELD 02w04 TSEL1: DAC channel1 trigger selection
0x46021800 C   FIELD 06w02 WAVE1: DAC channel1 noise/triangle wave generation enable
0x46021800 C   FIELD 08w04 MAMP1: DAC channel1 mask/amplitude selector
0x46021800 C   FIELD 12w01 DMAEN1: DAC channel1 DMA enable
0x46021800 C   FIELD 13w01 DMAUDRIE1: DAC channel1 DMA Underrun Interrupt enable
0x46021800 C   FIELD 14w01 CEN1: DAC channel1 calibration enable
0x46021800 C   FIELD 16w01 EN2: DAC channel2 enable
0x46021800 C   FIELD 17w01 TEN2: DAC channel2 trigger enable
0x46021800 C   FIELD 18w04 TSEL2: DAC channel2 trigger selection
0x46021800 C   FIELD 22w02 WAVE2: DAC channel2 noise/triangle wave generation enable
0x46021800 C   FIELD 24w04 MAMP2: DAC channel2 mask/amplitude selector
0x46021800 C   FIELD 28w01 DMAEN2: DAC channel2 DMA enable
0x46021800 C   FIELD 29w01 DMAUDRIE2: DAC channel2 DMA underrun interrupt enable
0x46021800 C   FIELD 30w01 CEN2: DAC channel2 calibration enable
0x46021804 B  REGISTER DAC_SWTRGR (wo): DAC software trigger register
0x46021804 C   FIELD 00w01 SWTRIG1: DAC channel1 software trigger
0x46021804 C   FIELD 01w01 SWTRIG2: DAC channel2 software trigger
0x46021808 B  REGISTER DAC_DHR12R1 (rw): DAC channel1 12-bit right-aligned data holding register
0x46021808 C   FIELD 00w12 DACC1DHR: DAC channel1 12-bit right-aligned data
0x46021808 C   FIELD 16w12 DACC1DHRB: DAC channel1 12-bit right-aligned data B
0x4602180C B  REGISTER DAC_DHR12L1 (rw): DAC channel1 12-bit left aligned data holding register
0x4602180C C   FIELD 04w12 DACC1DHR: DAC channel1 12-bit left-aligned data
0x4602180C C   FIELD 20w12 DACC1DHRB: DAC channel1 12-bit left-aligned data B
0x46021810 B  REGISTER DAC_DHR8R1 (rw): DAC channel1 8-bit right aligned data holding register
0x46021810 C   FIELD 00w08 DACC1DHR: DAC channel1 8-bit right-aligned data
0x46021810 C   FIELD 08w08 DACC1DHRB: DAC channel1 8-bit right-aligned Sdata
0x46021814 B  REGISTER DAC_DHR12R2 (rw): DAC channel2 12-bit right aligned data holding register
0x46021814 C   FIELD 00w12 DACC2DHR: DAC channel2 12-bit right-aligned data
0x46021814 C   FIELD 16w12 DACC2DHRB: DAC channel2 12-bit right-aligned data
0x46021818 B  REGISTER DAC_DHR12L2 (rw): DAC channel2 12-bit left aligned data holding register
0x46021818 C   FIELD 04w12 DACC2DHR: DAC channel2 12-bit left-aligned data
0x46021818 C   FIELD 20w12 DACC2DHRB: DAC channel2 12-bit left-aligned data B
0x4602181C B  REGISTER DAC_DHR8R2 (rw): DAC channel2 8-bit right-aligned data holding register
0x4602181C C   FIELD 00w08 DACC2DHR: DAC channel2 8-bit right-aligned data
0x4602181C C   FIELD 08w08 DACC2DHRB: DAC channel2 8-bit right-aligned data
0x46021820 B  REGISTER DAC_DHR12RD (rw): Dual DAC 12-bit right-aligned data holding register
0x46021820 C   FIELD 00w12 DACC1DHR: DAC channel1 12-bit right-aligned data
0x46021820 C   FIELD 16w12 DACC2DHR: DAC channel2 12-bit right-aligned data
0x46021824 B  REGISTER DAC_DHR12LD (rw): DUAL DAC 12-bit left aligned data holding register
0x46021824 C   FIELD 04w12 DACC1DHR: DAC channel1 12-bit left-aligned data
0x46021824 C   FIELD 20w12 DACC2DHR: DAC channel2 12-bit left-aligned data
0x46021828 B  REGISTER DAC_DHR8RD (rw): DUAL DAC 8-bit right aligned data holding register
0x46021828 C   FIELD 00w08 DACC1DHR: DAC channel1 8-bit right-aligned data
0x46021828 C   FIELD 08w08 DACC2DHR: DAC channel2 8-bit right-aligned data
0x4602182C B  REGISTER DAC_DOR1 (ro): DAC channel1 data output register
0x4602182C C   FIELD 00w12 DACC1DOR: DAC channel1 data output
0x4602182C C   FIELD 16w12 DACC1DORB: DAC channel1 data output
0x46021830 B  REGISTER DAC_DOR2 (ro): DAC channel2 data output register
0x46021830 C   FIELD 00w12 DACC2DOR: DAC channel2 data output
0x46021830 C   FIELD 16w12 DACC2DORB: DAC channel2 data output
0x46021834 B  REGISTER DAC_SR: DAC status register
0x46021834 C   FIELD 11w01 DAC1RDY (ro): DAC channel1 ready status bit
0x46021834 C   FIELD 12w01 DORSTAT1 (ro): DAC channel1 output register status bit
0x46021834 C   FIELD 13w01 DMAUDR1 (rw): DAC channel1 DMA underrun flag
0x46021834 C   FIELD 14w01 CAL_FLAG1 (ro): DAC Channel 1 calibration offset status
0x46021834 C   FIELD 15w01 BWST1 (ro): DAC Channel 1 busy writing sample time flag
0x46021834 C   FIELD 27w01 DAC2RDY (ro): DAC channel 2 ready status bit
0x46021834 C   FIELD 28w01 DORSTAT2 (ro): DAC channel 2 output register status bit
0x46021834 C   FIELD 29w01 DMAUDR2 (rw): DAC channel2 DMA underrun flag
0x46021834 C   FIELD 30w01 CAL_FLAG2 (ro): DAC Channel 2 calibration offset status
0x46021834 C   FIELD 31w01 BWST2 (ro): DAC Channel 2 busy writing sample time flag
0x46021838 B  REGISTER DAC_CCR (rw): DAC calibration control register
0x46021838 C   FIELD 00w05 OTRIM1: DAC Channel 1 offset trimming value
0x46021838 C   FIELD 16w05 OTRIM2: DAC Channel 2 offset trimming value
0x4602183C B  REGISTER DAC_MCR (rw): DAC mode control register
0x4602183C C   FIELD 00w03 MODE1: DAC Channel 1 mode
0x4602183C C   FIELD 08w01 DMADOUBLE1: DAC Channel1 DMA double data mode
0x4602183C C   FIELD 09w01 SINFORMAT1: Enable signed format for DAC channel1
0x4602183C C   FIELD 14w02 HFSEL: High frequency interface mode selection
0x4602183C C   FIELD 16w03 MODE2: DAC Channel 2 mode
0x4602183C C   FIELD 24w01 DMADOUBLE2: DAC Channel2 DMA double data mode
0x4602183C C   FIELD 25w01 SINFORMAT2: Enable signed format for DAC channel2
0x46021840 B  REGISTER DAC_SHSR1 (rw): DAC Sample and Hold sample time register 1
0x46021840 C   FIELD 00w10 TSAMPLE1: DAC Channel 1 sample Time (only valid in sample &amp; hold mode)
0x46021844 B  REGISTER DAC_SHSR2 (rw): DAC channel2 sample and hold sample time register
0x46021844 C   FIELD 00w10 TSAMPLE2: DAC Channel 2 sample Time (only valid in sample and hold mode)
0x46021848 B  REGISTER DAC_SHHR (rw): DAC Sample and Hold hold time register
0x46021848 C   FIELD 00w10 THOLD1: DAC Channel 1 hold Time (only valid in sample and hold mode)
0x46021848 C   FIELD 16w10 THOLD2: DAC Channel 2 hold time (only valid in sample and hold mode)
0x4602184C B  REGISTER DAC_SHRR (rw): DAC Sample and Hold refresh time register
0x4602184C C   FIELD 00w08 TREFRESH1: DAC Channel 1 refresh Time (only valid in sample and hold mode)
0x4602184C C   FIELD 16w08 TREFRESH2: DAC Channel 2 refresh Time (only valid in sample and hold mode)
0x46021854 B  REGISTER DAC_AUTOCR (rw): Autonomous mode control register
0x46021854 C   FIELD 22w01 AUTOMODE: DAC Autonomous mode
0x46022000 A PERIPHERAL EXTI
0x46022000 B  REGISTER RTSR1 (rw): EXTI rising trigger selection register
0x46022000 C   FIELD 00w01 RT0: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 01w01 RT1: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 02w01 RT2: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 03w01 RT3: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 04w01 RT4: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 05w01 RT5: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 06w01 RT6: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 07w01 RT7: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 08w01 RT8: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 09w01 RT9: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 10w01 RT10: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 11w01 RT11: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 12w01 RT12: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 13w01 RT13: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 14w01 RT14: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 15w01 RT15: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 16w01 RT16: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 17w01 RT17: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 18w01 RT18: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 19w01 RT19: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 20w01 RT20: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 21w01 RT21: Rising trigger event configuration bit of configurable event input x
0x46022000 C   FIELD 22w01 RT22: Rising trigger event configuration bit of configurable event input x
0x46022004 B  REGISTER FTSR1 (rw): EXTI falling trigger selection register
0x46022004 C   FIELD 00w01 FT0: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 01w01 FT1: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 02w01 FT2: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 03w01 FT3: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 04w01 FT4: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 05w01 FT5: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 06w01 FT6: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 07w01 FT7: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 08w01 FT8: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 09w01 FT9: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 10w01 FT10: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 11w01 FT11: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 12w01 FT12: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 13w01 FT13: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 14w01 FT14: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 15w01 FT15: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 16w01 FT16: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 17w01 FT17: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 18w01 FT18: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 19w01 FT19: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 20w01 FT20: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 21w01 FT21: Falling trigger event configuration bit of configurable event input x
0x46022004 C   FIELD 22w01 FT22: Falling trigger event configuration bit of configurable event input x
0x46022008 B  REGISTER SWIER1 (rw): EXTI software interrupt event register
0x46022008 C   FIELD 00w01 SWI0: Software interrupt on event x
0x46022008 C   FIELD 01w01 SWI1: Software interrupt on event x
0x46022008 C   FIELD 02w01 SWI2: Software interrupt on event x
0x46022008 C   FIELD 03w01 SWI3: Software interrupt on event x
0x46022008 C   FIELD 04w01 SWI4: Software interrupt on event x
0x46022008 C   FIELD 05w01 SWI5: Software interrupt on event x
0x46022008 C   FIELD 06w01 SWI6: Software interrupt on event x
0x46022008 C   FIELD 07w01 SWI7: Software interrupt on event x
0x46022008 C   FIELD 08w01 SWI8: Software interrupt on event x
0x46022008 C   FIELD 09w01 SWI9: Software interrupt on event x
0x46022008 C   FIELD 10w01 SWI10: Software interrupt on event x
0x46022008 C   FIELD 11w01 SWI11: Software interrupt on event x
0x46022008 C   FIELD 12w01 SWI12: Software interrupt on event x
0x46022008 C   FIELD 13w01 SWI13: Software interrupt on event x
0x46022008 C   FIELD 14w01 SWI14: Software interrupt on event x
0x46022008 C   FIELD 15w01 SWI15: Software interrupt on event x
0x46022008 C   FIELD 16w01 SWI16: Software interrupt on event x
0x46022008 C   FIELD 17w01 SWI17: Software interrupt on event x
0x46022008 C   FIELD 18w01 SWI18: Software interrupt on event x
0x46022008 C   FIELD 19w01 SWI19: Software interrupt on event x
0x46022008 C   FIELD 20w01 SWI20: Software interrupt on event x
0x46022008 C   FIELD 21w01 SWI21: Software interrupt on event x
0x46022008 C   FIELD 22w01 SWI22: Software interrupt on event x
0x4602200C B  REGISTER RPR1 (rw): EXTI rising edge pending register
0x4602200C C   FIELD 00w01 RPIF0: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 01w01 RPIF1: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 02w01 RPIF2: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 03w01 RPIF3: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 04w01 RPIF4: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 05w01 RPIF5: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 06w01 RPIF6: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 07w01 RPIF7: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 08w01 RPIF8: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 09w01 RPIF9: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 10w01 RPIF10: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 11w01 RPIF11: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 12w01 RPIF12: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 13w01 RPIF13: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 14w01 RPIF14: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 15w01 RPIF15: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 16w01 RPIF16: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 17w01 RPIF17: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 18w01 RPIF18: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 19w01 RPIF19: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 20w01 RPIF20: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 21w01 RPIF21: configurable event inputs x rising edge pending bit
0x4602200C C   FIELD 22w01 RPIF22: configurable event inputs x rising edge pending bit
0x46022010 B  REGISTER FPR1 (rw): EXTI falling edge pending register
0x46022010 C   FIELD 00w01 FPIF0: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 01w01 FPIF1: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 02w01 FPIF2: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 03w01 FPIF3: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 04w01 FPIF4: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 05w01 FPIF5: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 06w01 FPIF6: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 07w01 FPIF7: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 08w01 FPIF8: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 09w01 FPIF9: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 10w01 FPIF10: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 11w01 FPIF11: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 12w01 FPIF12: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 13w01 FPIF13: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 14w01 FPIF14: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 15w01 FPIF15: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 16w01 FPIF16: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 17w01 FPIF17: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 18w01 FPIF18: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 19w01 FPIF19: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 20w01 FPIF20: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 21w01 FPIF21: configurable event inputs x falling edge pending bit.
0x46022010 C   FIELD 22w01 FPIF22: configurable event inputs x falling edge pending bit.
0x46022014 B  REGISTER SECCFGR1 (rw): EXTI security configuration register
0x46022014 C   FIELD 00w01 SEC0: Security enable on event input x
0x46022014 C   FIELD 01w01 SEC1: Security enable on event input x
0x46022014 C   FIELD 02w01 SEC2: Security enable on event input x
0x46022014 C   FIELD 03w01 SEC3: Security enable on event input x
0x46022014 C   FIELD 04w01 SEC4: Security enable on event input x
0x46022014 C   FIELD 05w01 SEC5: Security enable on event input x
0x46022014 C   FIELD 06w01 SEC6: Security enable on event input x
0x46022014 C   FIELD 07w01 SEC7: Security enable on event input x
0x46022014 C   FIELD 08w01 SEC8: Security enable on event input x
0x46022014 C   FIELD 09w01 SEC9: Security enable on event input x
0x46022014 C   FIELD 10w01 SEC10: Security enable on event input x
0x46022014 C   FIELD 11w01 SEC11: Security enable on event input x
0x46022014 C   FIELD 12w01 SEC12: Security enable on event input x
0x46022014 C   FIELD 13w01 SEC13: Security enable on event input x
0x46022014 C   FIELD 14w01 SEC14: Security enable on event input x
0x46022014 C   FIELD 15w01 SEC15: Security enable on event input x
0x46022014 C   FIELD 16w01 SEC16: Security enable on event input x
0x46022014 C   FIELD 17w01 SEC17: Security enable on event input x
0x46022014 C   FIELD 18w01 SEC18: Security enable on event input x
0x46022014 C   FIELD 19w01 SEC19: Security enable on event input x
0x46022014 C   FIELD 20w01 SEC20: Security enable on event input x
0x46022014 C   FIELD 21w01 SEC21: Security enable on event input x
0x46022014 C   FIELD 22w01 SEC22: Security enable on event input x
0x46022018 B  REGISTER PRIVCFGR1 (rw): EXTI privilege configuration register
0x46022018 C   FIELD 00w01 PRIV0: Security enable on event input x
0x46022018 C   FIELD 01w01 PRIV1: Security enable on event input x
0x46022018 C   FIELD 02w01 PRIV2: Security enable on event input x
0x46022018 C   FIELD 03w01 PRIV3: Security enable on event input x
0x46022018 C   FIELD 04w01 PRIV4: Security enable on event input x
0x46022018 C   FIELD 05w01 PRIV5: Security enable on event input x
0x46022018 C   FIELD 06w01 PRIV6: Security enable on event input x
0x46022018 C   FIELD 07w01 PRIV7: Security enable on event input x
0x46022018 C   FIELD 08w01 PRIV8: Security enable on event input x
0x46022018 C   FIELD 09w01 PRIV9: Security enable on event input x
0x46022018 C   FIELD 10w01 PRIV10: Security enable on event input x
0x46022018 C   FIELD 11w01 PRIV11: Security enable on event input x
0x46022018 C   FIELD 12w01 PRIV12: Security enable on event input x
0x46022018 C   FIELD 13w01 PRIV13: Security enable on event input x
0x46022018 C   FIELD 14w01 PRIV14: Security enable on event input x
0x46022018 C   FIELD 15w01 PRIV15: Security enable on event input x
0x46022018 C   FIELD 16w01 PRIV16: Security enable on event input x
0x46022018 C   FIELD 17w01 PRIV17: Security enable on event input x
0x46022018 C   FIELD 18w01 PRIV18: Security enable on event input x
0x46022018 C   FIELD 19w01 PRIV19: Security enable on event input x
0x46022018 C   FIELD 20w01 PRIV20: Security enable on event input x
0x46022018 C   FIELD 21w01 PRIV21: Security enable on event input x
0x46022018 C   FIELD 22w01 PRIV22: Security enable on event input x
0x46022060 B  REGISTER EXTICR1 (rw): EXTI external interrupt selection register
0x46022060 C   FIELD 00w08 EXTI0_7: EXTIm GPIO port selection
0x46022060 C   FIELD 08w08 EXTI8_15: EXTIm+1 GPIO port selection
0x46022060 C   FIELD 16w08 EXTI16_23: EXTIm+2 GPIO port selection
0x46022060 C   FIELD 24w08 EXTI24_31: EXTIm+3 GPIO port selection
0x46022064 B  REGISTER EXTICR2 (rw): EXTI external interrupt selection register
0x46022064 C   FIELD 00w08 EXTI0_7: EXTIm GPIO port selection
0x46022064 C   FIELD 08w08 EXTI8_15: EXTIm+1 GPIO port selection
0x46022064 C   FIELD 16w08 EXTI16_23: EXTIm+2 GPIO port selection
0x46022064 C   FIELD 24w08 EXTI24_31: EXTIm+3 GPIO port selection
0x46022068 B  REGISTER EXTICR3 (rw): EXTI external interrupt selection register
0x46022068 C   FIELD 00w08 EXTI0_7: EXTIm GPIO port selection
0x46022068 C   FIELD 08w08 EXTI8_15: EXTIm+1 GPIO port selection
0x46022068 C   FIELD 16w08 EXTI16_23: EXTIm+2 GPIO port selection
0x46022068 C   FIELD 24w08 EXTI24_31: EXTIm+3 GPIO port selection
0x4602206C B  REGISTER EXTICR4 (rw): EXTI external interrupt selection register
0x4602206C C   FIELD 00w08 EXTI0_7: EXTIm GPIO port selection
0x4602206C C   FIELD 08w08 EXTI8_15: EXTIm+1 GPIO port selection
0x4602206C C   FIELD 16w08 EXTI16_23: EXTIm+2 GPIO port selection
0x4602206C C   FIELD 24w08 EXTI24_31: EXTIm+3 GPIO port selection
0x46022070 B  REGISTER LOCKR (rw): EXTI lock register
0x46022070 C   FIELD 00w01 LOCK: LOCK
0x46022080 B  REGISTER IMR1 (rw): EXTI CPU wakeup with interrupt mask register
0x46022080 C   FIELD 00w01 IM0: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 01w01 IM1: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 02w01 IM2: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 03w01 IM3: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 04w01 IM4: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 05w01 IM5: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 06w01 IM6: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 07w01 IM7: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 08w01 IM8: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 09w01 IM9: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 10w01 IM10: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 11w01 IM11: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 12w01 IM12: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 13w01 IM13: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 14w01 IM14: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 15w01 IM15: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 16w01 IM16: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 17w01 IM17: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 18w01 IM18: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 19w01 IM19: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 20w01 IM20: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 21w01 IM21: CPU wakeup with interrupt mask on event input
0x46022080 C   FIELD 22w01 IM22: CPU wakeup with interrupt mask on event input
0x46022084 B  REGISTER EMR1 (rw): EXTI CPU wakeup with event mask register
0x46022084 C   FIELD 00w01 EM0: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 01w01 EM1: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 02w01 EM2: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 03w01 EM3: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 04w01 EM4: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 05w01 EM5: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 06w01 EM6: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 07w01 EM7: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 08w01 EM8: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 09w01 EM9: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 10w01 EM10: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 11w01 EM11: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 12w01 EM12: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 13w01 EM13: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 14w01 EM14: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 15w01 EM15: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 16w01 EM16: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 17w01 EM17: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 18w01 EM18: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 19w01 EM19: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 20w01 EM20: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 21w01 EM21: CPU wakeup with event generation mask on event input
0x46022084 C   FIELD 22w01 EM22: CPU wakeup with event generation mask on event input
0x46023000 A PERIPHERAL GTZC2_TZSC
0x46023000 B  REGISTER TZSC_CR (rw): TZSC control register
0x46023000 C   FIELD 00w01 LCK: lock the configuration of GTZC1_TZSC_SECCFGRx and GTZC1_TZSC_PRIVCFGRx registers until next reset
0x46023010 B  REGISTER TZSC_SECCFGR1 (rw): TZSC secure configuration register 1
0x46023010 C   FIELD 00w01 SPI3SEC: secure access mode for SPI3
0x46023010 C   FIELD 01w01 LPUART1SEC: secure access mode for LPUART1
0x46023010 C   FIELD 02w01 I2C3SEC: secure access mode for I2C3
0x46023010 C   FIELD 03w01 LPTIM1SEC: secure access mode for LPTIM1
0x46023010 C   FIELD 04w01 LPTIM3SEC: secure access mode for LPTIM3
0x46023010 C   FIELD 05w01 LPTIM4SEC: secure access mode for LPTIM4
0x46023010 C   FIELD 06w01 OPAMPSEC: secure access mode for OPAMP
0x46023010 C   FIELD 07w01 COMPSEC: secure access mode for COMP
0x46023010 C   FIELD 08w01 ADC4SEC: secure access mode for ADC4
0x46023010 C   FIELD 09w01 VREFBUFSEC: secure access mode for VREFBUF
0x46023010 C   FIELD 11w01 DAC1SEC: secure access mode for DAC1
0x46023010 C   FIELD 12w01 ADF1SEC: secure access mode for ADF1
0x46023020 B  REGISTER TZSC_PRIVCFGR1 (rw): TZSC privilege configuration register 1
0x46023020 C   FIELD 00w01 SPI3PRIV: privileged access mode for SPI3
0x46023020 C   FIELD 01w01 LPUART1PRIV: privileged access mode for LPUART1
0x46023020 C   FIELD 02w01 I2C3PRIV: privileged access mode for I2C3
0x46023020 C   FIELD 03w01 LPTIM1PRIV: privileged access mode for LPTIM1
0x46023020 C   FIELD 04w01 LPTIM3PRIV: privileged access mode for LPTIM3
0x46023020 C   FIELD 05w01 LPTIM4PRIV: privileged access mode for LPTIM4
0x46023020 C   FIELD 06w01 OPAMPPRIV: privileged access mode for OPAMP
0x46023020 C   FIELD 07w01 COMPPRIV: privileged access mode for COMP
0x46023020 C   FIELD 08w01 ADC4PRIV: privileged access mode for ADC4
0x46023020 C   FIELD 09w01 VREFBUFPRIV: privileged access mode for VREFBUF
0x46023020 C   FIELD 11w01 DAC1PRIV: privileged access mode for DAC1
0x46023020 C   FIELD 12w01 ADF1PRIV: privileged access mode for ADF1
0x46023400 A PERIPHERAL GTZC2_TZIC
0x46023400 B  REGISTER IER1 (rw): TZIC interrupt enable register 1
0x46023400 C   FIELD 00w01 SPI3IE: illegal access interrupt enable for SPI3
0x46023400 C   FIELD 01w01 LPUART1IE: illegal access interrupt enable for LPUART1
0x46023400 C   FIELD 02w01 I2C3IE: illegal access interrupt enable for I2C3
0x46023400 C   FIELD 03w01 LPTIM1IE: illegal access interrupt enable for LPTIM1
0x46023400 C   FIELD 04w01 LPTIM3IE: illegal access interrupt enable for LPTIM3
0x46023400 C   FIELD 05w01 LPTIM4IE: illegal access interrupt enable for LPTIM4
0x46023400 C   FIELD 06w01 OPAMPIE: illegal access interrupt enable for OPAMP
0x46023400 C   FIELD 07w01 COMPIE: illegal access interrupt enable for COMP
0x46023400 C   FIELD 08w01 ADC4IE: illegal access interrupt enable for ADC4
0x46023400 C   FIELD 09w01 VREFBUFIE: illegal access interrupt enable for VREFBUF
0x46023400 C   FIELD 11w01 DAC1IE: illegal access interrupt enable for DAC1
0x46023400 C   FIELD 12w01 ADF1IE: illegal access interrupt enable for ADF1
0x46023404 B  REGISTER IER2 (rw): TZIC interrupt enable register 2
0x46023404 C   FIELD 00w01 SYSCFGIE: illegal access interrupt enable for SYSCFG
0x46023404 C   FIELD 01w01 RTCIE: illegal access interrupt enable for RTC
0x46023404 C   FIELD 02w01 TAMPIE: illegal access interrupt enable for TAMP
0x46023404 C   FIELD 03w01 PWRIE: illegal access interrupt enable for PWR
0x46023404 C   FIELD 04w01 RCCIE: illegal access interrupt enable for RCC
0x46023404 C   FIELD 05w01 LPDMA1IE: illegal access interrupt enable for LPDMA
0x46023404 C   FIELD 06w01 EXTIIE: illegal access interrupt enable for EXTI
0x46023404 C   FIELD 14w01 TZSC2IE: illegal access interrupt enable for GTZC2 TZSC registers
0x46023404 C   FIELD 15w01 TZIC2IE: illegal access interrupt enable for GTZC2 TZIC registers
0x46023404 C   FIELD 24w01 SRAM4IE: illegal access interrupt enable for SRAM4
0x46023404 C   FIELD 25w01 MPCBB4_REGIE: illegal access interrupt enable for MPCBB4 registers
0x46023410 B  REGISTER SR1 (ro): TZIC status register 1
0x46023410 C   FIELD 00w01 SPI3F: illegal access flag for SPI3
0x46023410 C   FIELD 01w01 LPUART1F: illegal access flag for LPUART1
0x46023410 C   FIELD 02w01 I2C3F: illegal access flag for I2C3
0x46023410 C   FIELD 03w01 LPTIM1F: illegal access flag for LPTIM1
0x46023410 C   FIELD 04w01 LPTIM3F: illegal access flag for LPTIM3
0x46023410 C   FIELD 05w01 LPTIM4F: illegal access flag for LPTIM4
0x46023410 C   FIELD 06w01 OPAMPF: illegal access flag for OPAMP
0x46023410 C   FIELD 07w01 COMPF: illegal access flag for COMP
0x46023410 C   FIELD 08w01 ADC4F: illegal access flag for ADC4
0x46023410 C   FIELD 09w01 VREFBUFF: illegal access flag for VREFBUF
0x46023410 C   FIELD 11w01 DAC1F: illegal access flag for DAC1
0x46023410 C   FIELD 12w01 ADF1F: illegal access flag for ADF1
0x46023414 B  REGISTER SR2 (ro): TZIC status register 2
0x46023414 C   FIELD 00w01 SYSCFGF: illegal access flag for SYSCFG
0x46023414 C   FIELD 01w01 RTCF: illegal access flag for RTC
0x46023414 C   FIELD 02w01 TAMPF: illegal access flag for TAMP
0x46023414 C   FIELD 03w01 PWRF: illegal access flag for PWRUSART1F
0x46023414 C   FIELD 04w01 RCCF: illegal access flag for RCC
0x46023414 C   FIELD 05w01 LPDMA1F: illegal access flag for LPDMA
0x46023414 C   FIELD 06w01 EXTIF: illegal access flag for EXTI
0x46023414 C   FIELD 14w01 TZSC2F: illegal access flag for GTZC2 TZSC registers
0x46023414 C   FIELD 15w01 TZIC2F: illegal access flag for GTZC2 TZIC registers
0x46023414 C   FIELD 24w01 SRAM4F: illegal access flag for SRAM4
0x46023414 C   FIELD 25w01 MPCBB4_REGF: illegal access flag for MPCBB4 registers
0x46023420 B  REGISTER FCR1 (wo): TZIC flag clear register 1
0x46023420 C   FIELD 00w01 CSPI3F: clear the illegal access flag for SPI3
0x46023420 C   FIELD 01w01 CLPUART1F: clear the illegal access flag for LPUART1
0x46023420 C   FIELD 02w01 CI2C3F: clear the illegal access flag for I2C3
0x46023420 C   FIELD 03w01 CLPTIM1F: clear the illegal access flag for LPTIM1
0x46023420 C   FIELD 04w01 CLPTIM3F: clear the illegal access flag for LPTIM3
0x46023420 C   FIELD 05w01 CLPTIM4F: clear the illegal access flag for LPTIM4
0x46023420 C   FIELD 06w01 COPAMPF: clear the illegal access flag for OPAMP
0x46023420 C   FIELD 07w01 CCOMPF: clear the illegal access flag for COMP
0x46023420 C   FIELD 08w01 CADC4F: clear the illegal access flag for ADC4
0x46023420 C   FIELD 09w01 CVREFBUFF: clear the illegal access flag for VREFBUF
0x46023420 C   FIELD 11w01 CDAC1F: clear the illegal access flag for DAC1
0x46023420 C   FIELD 12w01 CADF1F: clear the illegal access flag for ADF1
0x46023424 B  REGISTER FCR2 (wo): TZIC flag clear register 2
0x46023424 C   FIELD 00w01 CSYSCFGF: clear the illegal access flag for SYSCFG
0x46023424 C   FIELD 01w01 CRTCF: clear the illegal access flag for RTC
0x46023424 C   FIELD 02w01 CTAMPF: clear the illegal access flag for TAMP
0x46023424 C   FIELD 03w01 CPWRF: clear the illegal access flag for PWR
0x46023424 C   FIELD 04w01 CRCCF: clear the illegal access flag for RCC
0x46023424 C   FIELD 05w01 CLPDMA1F: clear the illegal access flag for LPDMA
0x46023424 C   FIELD 06w01 CEXTIF: clear the illegal access flag for EXTI
0x46023424 C   FIELD 14w01 CTZSC2F: clear the illegal access flag for GTZC2 TZSC registers
0x46023424 C   FIELD 15w01 CTZIC2F: clear the illegal access flag for GTZC2 TZIC registers
0x46023424 C   FIELD 24w01 CSRAM4F: clear the illegal access flag for SRAM4
0x46023424 C   FIELD 25w01 CMPCBB4_REGF: clear the illegal access flag for MPCBB4 registers
0x46023800 A PERIPHERAL GTZC2_MPCBB4
0x46023800 B  REGISTER MPCBB4_CR (rw): MPCBB control register
0x46023800 C   FIELD 00w01 GLOCK: lock the control register of the MPCBB until next reset
0x46023800 C   FIELD 30w01 INVSECSTATE: SRAMx clocks security state
0x46023800 C   FIELD 31w01 SRWILADIS: secure read/write illegal access disable
0x46023810 B  REGISTER MPCBB4_CFGLOCK (rw): GTZC2 SRAM4 MPCBB configuration lock register
0x46023810 C   FIELD 00w01 SPLCK0: Security/privilege configuration lock for super-block 0
0x46023900 B  REGISTER MPCBB4_SECCFGR0 (rw): MPCBB security configuration for super-block 0 register
0x46023900 C   FIELD 00w01 SEC0: SEC0
0x46023900 C   FIELD 01w01 SEC1: SEC1
0x46023900 C   FIELD 02w01 SEC2: SEC2
0x46023900 C   FIELD 03w01 SEC3: SEC3
0x46023900 C   FIELD 04w01 SEC4: SEC4
0x46023900 C   FIELD 05w01 SEC5: SEC5
0x46023900 C   FIELD 06w01 SEC6: SEC6
0x46023900 C   FIELD 07w01 SEC7: SEC7
0x46023900 C   FIELD 08w01 SEC8: SEC8
0x46023900 C   FIELD 09w01 SEC9: SEC9
0x46023900 C   FIELD 10w01 SEC10: SEC10
0x46023900 C   FIELD 11w01 SEC11: SEC11
0x46023900 C   FIELD 12w01 SEC12: SEC12
0x46023900 C   FIELD 13w01 SEC13: SEC13
0x46023900 C   FIELD 14w01 SEC14: SEC14
0x46023900 C   FIELD 15w01 SEC15: SEC15
0x46023900 C   FIELD 16w01 SEC16: SEC16
0x46023900 C   FIELD 17w01 SEC17: SEC17
0x46023900 C   FIELD 18w01 SEC18: SEC18
0x46023900 C   FIELD 19w01 SEC19: SEC19
0x46023900 C   FIELD 20w01 SEC20: SEC20
0x46023900 C   FIELD 21w01 SEC21: SEC21
0x46023900 C   FIELD 22w01 SEC22: SEC22
0x46023900 C   FIELD 23w01 SEC23: SEC23
0x46023900 C   FIELD 24w01 SEC24: SEC24
0x46023900 C   FIELD 25w01 SEC25: SEC25
0x46023900 C   FIELD 26w01 SEC26: SEC26
0x46023900 C   FIELD 27w01 SEC27: SEC27
0x46023900 C   FIELD 28w01 SEC28: SEC28
0x46023900 C   FIELD 29w01 SEC29: SEC29
0x46023900 C   FIELD 30w01 SEC30: SEC30
0x46023900 C   FIELD 31w01 SEC31: SEC31
0x46023A00 B  REGISTER MPCBB4_PRIVCFGR0 (rw): MPCBB privileged configuration for super-block 0 register
0x46023A00 C   FIELD 00w01 PRIV0: PRIV0
0x46023A00 C   FIELD 01w01 PRIV1: PRIV1
0x46023A00 C   FIELD 02w01 PRIV2: PRIV2
0x46023A00 C   FIELD 03w01 PRIV3: PRIV3
0x46023A00 C   FIELD 04w01 PRIV4: PRIV4
0x46023A00 C   FIELD 05w01 PRIV5: PRIV5
0x46023A00 C   FIELD 06w01 PRIV6: PRIV6
0x46023A00 C   FIELD 07w01 PRIV7: PRIV7
0x46023A00 C   FIELD 08w01 PRIV8: PRIV8
0x46023A00 C   FIELD 09w01 PRIV9: PRIV9
0x46023A00 C   FIELD 10w01 PRIV10: PRIV10
0x46023A00 C   FIELD 11w01 PRIV11: PRIV11
0x46023A00 C   FIELD 12w01 PRIV12: PRIV12
0x46023A00 C   FIELD 13w01 PRIV13: PRIV13
0x46023A00 C   FIELD 14w01 PRIV14: PRIV14
0x46023A00 C   FIELD 15w01 PRIV15: PRIV15
0x46023A00 C   FIELD 16w01 PRIV16: PRIV16
0x46023A00 C   FIELD 17w01 PRIV17: PRIV17
0x46023A00 C   FIELD 18w01 PRIV18: PRIV18
0x46023A00 C   FIELD 19w01 PRIV19: PRIV19
0x46023A00 C   FIELD 20w01 PRIV20: PRIV20
0x46023A00 C   FIELD 21w01 PRIV21: PRIV21
0x46023A00 C   FIELD 22w01 PRIV22: PRIV22
0x46023A00 C   FIELD 23w01 PRIV23: PRIV23
0x46023A00 C   FIELD 24w01 PRIV24: PRIV24
0x46023A00 C   FIELD 25w01 PRIV25: PRIV25
0x46023A00 C   FIELD 26w01 PRIV26: PRIV26
0x46023A00 C   FIELD 27w01 PRIV27: PRIV27
0x46023A00 C   FIELD 28w01 PRIV28: PRIV28
0x46023A00 C   FIELD 29w01 PRIV29: PRIV29
0x46023A00 C   FIELD 30w01 PRIV30: PRIV30
0x46023A00 C   FIELD 31w01 PRIV31: PRIV31
0x46024000 A PERIPHERAL ADF1
0x46024000 B  REGISTER ADF_GCR (rw): ADF Global Control Register
0x46024000 C   FIELD 00w01 TRGO: Trigger output control Set by software and reset by
0x46024004 B  REGISTER ADF_CKGCR (rw): ADF clock generator control register
0x46024004 C   FIELD 00w01 CKGDEN: CKGEN dividers enable
0x46024004 C   FIELD 01w01 CCK0EN: ADF_CCK0 clock enable
0x46024004 C   FIELD 02w01 CCK1EN: ADF_CCK1 clock enable
0x46024004 C   FIELD 04w01 CKGMOD: Clock generator mode
0x46024004 C   FIELD 05w01 CCK0DIR: ADF_CCK0 direction
0x46024004 C   FIELD 06w01 CCK1DIR: ADF_CCK1 direction
0x46024004 C   FIELD 08w01 TRGSENS: CKGEN trigger sensitivity selection
0x46024004 C   FIELD 12w04 TRGSRC: Digital filter trigger signal selection
0x46024004 C   FIELD 16w04 CCKDIV: Divider to control the ADF_CCK clock
0x46024004 C   FIELD 24w07 PROCDIV: Divider to control the serial interface clock
0x46024004 C   FIELD 31w01 CKGACTIVE: Clock generator active flag
0x46024080 B  REGISTER ADF_SITF0CR (rw): ADF serial interface control register 0
0x46024080 C   FIELD 00w01 SITFEN: SITFEN
0x46024080 C   FIELD 01w02 SCKSRC: SCKSRC
0x46024080 C   FIELD 04w02 SITFMOD: SITFMOD
0x46024080 C   FIELD 08w05 STH: STH
0x46024080 C   FIELD 31w01 SITFACTIVE: SITFACTIVE
0x46024084 B  REGISTER ADF_BSMX0CR (rw): ADF bitstream matrix control register 0
0x46024084 C   FIELD 00w05 BSSEL: Bitstream selection
0x46024084 C   FIELD 31w01 BSMXACTIVE: BSMX active flag
0x46024088 B  REGISTER ADF_DFLT0CR (rw): ADF digital filter control register 0
0x46024088 C   FIELD 00w01 DFLTEN: DFLT0 enable
0x46024088 C   FIELD 01w01 DMAEN: DMA requests enable
0x46024088 C   FIELD 02w01 FTH: RXFIFO threshold selection
0x46024088 C   FIELD 04w03 ACQMOD: DFLT0 trigger mode
0x46024088 C   FIELD 12w04 TRGSRC: DFLT0 trigger signal selection
0x46024088 C   FIELD 20w08 NBDIS: Number of samples to be discarded
0x46024088 C   FIELD 30w01 DFLTRUN: DFLT0 run status flag
0x46024088 C   FIELD 31w01 DFLTACTIVE: DFLT0 active flag
0x4602408C B  REGISTER ADF_DFLT0CICR (rw): ADF digital filer configuration register 0
0x4602408C C   FIELD 00w02 DATSRC: Source data for the digital filter
0x4602408C C   FIELD 04w03 CICMOD: Select the CIC order
0x4602408C C   FIELD 08w09 MCICD: CIC decimation ratio selection
0x4602408C C   FIELD 20w06 SCALE: Scaling factor selection
0x46024090 B  REGISTER ADF_DFLT0RSFR (rw): ADF reshape filter configuration register 0
0x46024090 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass
0x46024090 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio
0x46024090 C   FIELD 07w01 HPFBYP: High-pass filter bypass
0x46024090 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency
0x460240A4 B  REGISTER ADF_DLY0CR (rw): ADF delay control register 0
0x460240A4 C   FIELD 00w07 SKPDLY: Delay to apply to a bitstream
0x460240A4 C   FIELD 31w01 SKPBF: Skip busy flag
0x460240AC B  REGISTER ADF_DFLT0IER (rw): ADF DFLT0 interrupt enable register
0x460240AC C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable
0x460240AC C   FIELD 01w01 DOVRIE: Data overflow interrupt enable
0x460240AC C   FIELD 09w01 SATIE: Saturation detection interrupt enable
0x460240AC C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable
0x460240AC C   FIELD 11w01 RFOVRIE: Reshape filter overrun interrupt enable
0x460240AC C   FIELD 12w01 SDDETIE: Sound activity detection interrupt enable
0x460240AC C   FIELD 13w01 SDLVLIE: SAD sound-level value ready enable
0x460240B0 B  REGISTER ADF_DFLT0ISR: ADF DFLT0 interrupt status register 0
0x460240B0 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag
0x460240B0 C   FIELD 01w01 DOVRF (rw): Data overflow flag
0x460240B0 C   FIELD 03w01 RXNEF (ro): RXFIFO not empty flag
0x460240B0 C   FIELD 09w01 SATF (rw): Saturation detection flag
0x460240B0 C   FIELD 10w01 CKABF (rw): Clock absence detection flag
0x460240B0 C   FIELD 11w01 RFOVRF (rw): Reshape filter overrun detection flag
0x460240B0 C   FIELD 12w01 SDDETF (rw): Sound activity detection flag
0x460240B0 C   FIELD 13w01 SDLVLF (rw): Sound level value ready flag
0x460240B8 B  REGISTER ADF_SADCR: ADF SAD control register
0x460240B8 C   FIELD 00w01 SADEN (rw): Sound activity detector enable
0x460240B8 C   FIELD 01w02 DATCAP (rw): Data capture mode
0x460240B8 C   FIELD 03w01 DETCFG (rw): Sound trigger event configuration
0x460240B8 C   FIELD 04w02 SADST (ro): SAD state
0x460240B8 C   FIELD 07w01 HYSTEN (rw): Hysteresis enable
0x460240B8 C   FIELD 08w03 FRSIZE (rw): Frame size
0x460240B8 C   FIELD 12w02 SADMOD (rw): SAD working mode
0x460240B8 C   FIELD 31w01 SADACTIVE (ro): SAD Active flag
0x460240BC B  REGISTER ADF_SADCFGR (rw): ADF SAD configuration register
0x460240BC C   FIELD 00w04 SNTHR: SNTHR
0x460240BC C   FIELD 04w03 ANSLP: ANSLP
0x460240BC C   FIELD 08w03 LFRNB: LFRNB
0x460240BC C   FIELD 12w03 HGOVR: Hangover time window
0x460240BC C   FIELD 16w13 ANMIN: ANMIN
0x460240C0 B  REGISTER ADF_SADSDLVR (ro): ADF SAD sound level register
0x460240C0 C   FIELD 00w15 SDLVL: SDLVL
0x460240C4 B  REGISTER ADF_SADANLVR (ro): ADF SAD ambient noise level register
0x460240C4 C   FIELD 00w15 ANLVL: ANLVL
0x460240F0 B  REGISTER ADF_DFLT0DR (ro): ADF digital filter data register 0
0x460240F0 C   FIELD 08w24 DR: DR
0x46025000 A PERIPHERAL LPDMA1
0x46025000 B  REGISTER LPDMA_SECCFGR: LPDMA secure configuration register
0x46025000 C   FIELD 00w01 SEC0 (rw): SEC0
0x46025000 C   FIELD 01w01 SEC1 (rw): SEC1
0x46025000 C   FIELD 02w01 SEC2 (rw): SEC2
0x46025000 C   FIELD 03w01 SEC3 (rw): SEC3
0x46025004 B  REGISTER LPDMA_PRIVCFGR: LPDMA privileged configuration register
0x46025004 C   FIELD 00w01 PRIV0 (rw): PRIV0
0x46025004 C   FIELD 01w01 PRIV1 (rw): PRIV1
0x46025004 C   FIELD 02w01 PRIV2 (rw): PRIV2
0x46025004 C   FIELD 03w01 PRIV3 (rw): PRIV3
0x46025008 B  REGISTER LPDMA_RCFGLOCKR: LPDMA configuration lock register
0x46025008 C   FIELD 00w01 LOCK0 (rw): LOCK0
0x46025008 C   FIELD 01w01 LOCK1 (rw): LOCK1
0x46025008 C   FIELD 02w01 LOCK2 (rw): LOCK2
0x46025008 C   FIELD 03w01 LOCK3 (rw): LOCK3
0x4602500C B  REGISTER LPDMA_MISR: LPDMA non-secure masked interrupt status register
0x4602500C C   FIELD 00w01 MIS0 (ro): MIS0
0x4602500C C   FIELD 01w01 MIS1 (ro): MIS1
0x4602500C C   FIELD 02w01 MIS2 (ro): MIS2
0x4602500C C   FIELD 03w01 MIS3 (ro): MIS3
0x46025010 B  REGISTER LPDMA_SMISR: LPDMA secure masked interrupt status register
0x46025010 C   FIELD 00w01 MIS0 (ro): MIS0
0x46025010 C   FIELD 01w01 MIS1 (ro): MIS1
0x46025010 C   FIELD 02w01 MIS2 (ro): MIS2
0x46025010 C   FIELD 03w01 MIS3 (ro): MIS3
0x46025050 B  REGISTER LPDMA_C0LBAR: LPDMA channel 0 linked-list base address register
0x46025050 C   FIELD 16w16 LBA (rw): linked-list base address of LPDMA channel x
0x4602505C B  REGISTER LPDMA_C0FCR: LPDMA channel 0 flag clear register
0x4602505C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4602505C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4602505C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4602505C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4602505C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4602505C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4602505C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x46025060 B  REGISTER LPDMA_C0SR: LPDMA channel 0 status register
0x46025060 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (LPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x46025060 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is a block transfer complete or a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode LPDMA_CxTR2.TCEM[1:0].
0x46025060 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is an half block transfer that occurs when half of the bytes of the source block size (rounded-up integer of LPDMA_CxBR1.BNDT[15:0] / 2) has been transferred to the destination.
0x46025060 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x46025060 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x46025060 C   FIELD 12w01 USEF (ro): user setting error flag
0x46025060 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x46025060 C   FIELD 14w01 TOF (ro): trigger overrun flag clear
0x46025064 B  REGISTER LPDMA_C0CR: LPDMA channel 0 control register
0x46025064 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x46025064 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (LPDMA_CxSR.SUSPF = 1 and LPDMA_CxSR.IDLEF = LPDMA_CxCR.EN = 1) - channel in disabled state (LPDMA_CxSR.IDLEF = 1 and LPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (LPDMA_CxBR1, LPDMA_CxSAR and LPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x46025064 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going DMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in sequence.
0x46025064 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x46025064 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x46025064 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x46025064 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x46025064 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x46025064 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x46025064 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x46025064 C   FIELD 16w01 LSM (rw): Link step mode First the block transfer is executed as defined by the current internal register file until LPDMA_CxBR1.BNDT[15:0 ] =0). Secondly the next linked-list data structure is conditionally uploaded from memory as defined by LPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x46025064 C   FIELD 22w02 PRIO (rw): priority level of the channel x LPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x46025090 B  REGISTER LPDMA_C0TR1: LPDMA channel 0 transfer register 1
0x46025090 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. a source block size must be a multiple of the source data width (LPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address LPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x46025090 C   FIELD 03w01 SINC (rw): source incrementing single The source address, pointed by LPDMA_CxSAR, is kept constant after a single transfer or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x46025090 C   FIELD 11w01 PAM (rw): padding/alignment mode If DDW_LOG2[1:0]=SDW_LOG2[1:0]: if the data width of a single destination transfer is equal to the data width of a single source transfer, this bit is ignored. Else: Case 1: If destination data width > source data width Case 2: If destination data width < source data width
0x46025090 C   FIELD 15w01 SSEC (rw): security attribute of the LPDMA transfer from the source If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx =1 . A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer from the source is non-secure.
0x46025090 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination single transfer must have an aligned address with its data width (start address LPDMA_CxDAR[2:0] versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and none transfer is issued.
0x46025090 C   FIELD 19w01 DINC (rw): destination incrementing single The destination address, pointed by LPDMA_CxDAR, is kept constant after a single transfer, or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x46025090 C   FIELD 31w01 DSEC (rw): security attribute of the LPDMA transfer to the destination If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx = 1. A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer to the destination is non-secure.
0x46025094 B  REGISTER LPDMA_C0TR2: LPDMA channel 0 transfer register 2
0x46025094 C   FIELD 00w05 REQSEL (rw): DMA hardware request selection These bits are ignored if channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per request. Note: The user must not assign a same input hardware request (same REQSEL[4:0] value) to different active DMA channels (LPDMA_CxCR.EN = 1 and LPDMA_CxTR2.SWREQ = 0 for these channels). DMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x46025094 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when LPDMA_CxCR.EN is asserted.
0x46025094 C   FIELD 11w01 BREQ (rw): block hardware request If the channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x46025094 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (LPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 0b00 or 0b11, these TRIGM[1:0] bits are ignored. Else, a DMA transfer is conditioned by at least one trigger hit: The LPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 0b01 or respectively TRIGPOL[1:0] = 0b10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[4:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the LPDMA_CxTR2 with a new value for any of TRIGSEL[4:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized, and a trigger overrun flag is reported (LPDMA_CxSR.TOF = 1), an interrupt is generated if enabled (LPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun.
0x46025094 C   FIELD 16w05 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the LPDMA transfer (as per Programmed LPDMA1 trigger), with an active trigger event if TRIGPOL[1:0] = 00.
0x46025094 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[4:0].
0x46025094 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x46025098 B  REGISTER LPDMA_C0BR1: LPDMA channel 0 block register 1
0x46025098 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if LPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if LPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all LPDMA_CxLLR.Uxx = 0 and if LPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if LPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.
0x4602509C B  REGISTER LPDMA_C0SAR: LPDMA channel 0 source address register
0x4602509C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (LPDMA_CxTR1.SINC), this field is either kept fixed or incremented by the data width (LPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by LPDMA from the memory, provided the LLI is set with LPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[32:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x460250A0 B  REGISTER LPDMA_C0DAR: LPDMA channel 0 destination address register
0x460250A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (LPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (LPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by DMA from the memory, provided the LLI is set with LPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination single (DA[2:0] versus LPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x460250CC B  REGISTER LPDMA_C0LLR: LPDMA channel 0 linked-list address register
0x460250CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list DMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list DMA internal register file (LPDMA_CxCTR1, LPDMA_CxTR2, LPDMA_CxBR1, LPDMA_CxSAR, LPDMA_CxDAR and LPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x460250CC C   FIELD 16w01 ULL (rw): Update LPDMA_CxLLR register from memory This bit is used to control the update of the LPDMA_CxLLR register from the memory during the link transfer.
0x460250CC C   FIELD 27w01 UDA (rw): Update LPDMA_CxDAR register from memory This bit is used to control the update of the LPDMA_CxDAR register from the memory during the link transfer.
0x460250CC C   FIELD 28w01 USA (rw): update LPDMA_CxSAR from memory This bit controls the update of the LPDMA_CxSAR register from the memory during the link transfer.
0x460250CC C   FIELD 29w01 UB1 (rw): Update LPDMA_CxBR1 from memory This bit controls the update of the LPDMA_CxBR1 register from the memory during the link transfer.
0x460250CC C   FIELD 30w01 UT2 (rw): Update LPDMA_CxTR2 from memory This bit controls the update of the LPDMA_CxTR2 register from the memory during the link transfer.
0x460250CC C   FIELD 31w01 UT1 (rw): Update LPDMA_CxTR1 from memory This bit controls the update of the LPDMA_CxTR1 register from the memory during the link transfer.
0x460250D0 B  REGISTER LPDMA_C1LBAR: LPDMA channel 1 linked-list base address register
0x460250D0 C   FIELD 16w16 LBA (rw): linked-list base address of LPDMA channel x
0x460250DC B  REGISTER LPDMA_C1FCR: LPDMA channel 1 flag clear register
0x460250DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x460250DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x460250DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x460250DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x460250DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x460250DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x460250DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x460250E0 B  REGISTER LPDMA_C1SR: LPDMA channel 1 status register
0x460250E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (LPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x460250E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is a block transfer complete or a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode LPDMA_CxTR2.TCEM[1:0].
0x460250E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is an half block transfer that occurs when half of the bytes of the source block size (rounded-up integer of LPDMA_CxBR1.BNDT[15:0] / 2) has been transferred to the destination.
0x460250E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x460250E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x460250E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x460250E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x460250E0 C   FIELD 14w01 TOF (ro): trigger overrun flag clear
0x460250E4 B  REGISTER LPDMA_C1CR: LPDMA channel 1 control register
0x460250E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x460250E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (LPDMA_CxSR.SUSPF = 1 and LPDMA_CxSR.IDLEF = LPDMA_CxCR.EN = 1) - channel in disabled state (LPDMA_CxSR.IDLEF = 1 and LPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (LPDMA_CxBR1, LPDMA_CxSAR and LPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x460250E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going DMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in sequence.
0x460250E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x460250E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x460250E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x460250E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x460250E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x460250E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x460250E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x460250E4 C   FIELD 16w01 LSM (rw): Link step mode First the block transfer is executed as defined by the current internal register file until LPDMA_CxBR1.BNDT[15:0 ] =0). Secondly the next linked-list data structure is conditionally uploaded from memory as defined by LPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x460250E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x LPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x46025110 B  REGISTER LPDMA_C1TR1: LPDMA channel 1 transfer register 1
0x46025110 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. a source block size must be a multiple of the source data width (LPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address LPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x46025110 C   FIELD 03w01 SINC (rw): source incrementing single The source address, pointed by LPDMA_CxSAR, is kept constant after a single transfer or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x46025110 C   FIELD 11w01 PAM (rw): padding/alignment mode If DDW_LOG2[1:0]=SDW_LOG2[1:0]: if the data width of a single destination transfer is equal to the data width of a single source transfer, this bit is ignored. Else: Case 1: If destination data width > source data width Case 2: If destination data width < source data width
0x46025110 C   FIELD 15w01 SSEC (rw): security attribute of the LPDMA transfer from the source If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx =1 . A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer from the source is non-secure.
0x46025110 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination single transfer must have an aligned address with its data width (start address LPDMA_CxDAR[2:0] versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and none transfer is issued.
0x46025110 C   FIELD 19w01 DINC (rw): destination incrementing single The destination address, pointed by LPDMA_CxDAR, is kept constant after a single transfer, or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x46025110 C   FIELD 31w01 DSEC (rw): security attribute of the LPDMA transfer to the destination If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx = 1. A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer to the destination is non-secure.
0x46025114 B  REGISTER LPDMA_C1TR2: LPDMA channel 1 transfer register 2
0x46025114 C   FIELD 00w05 REQSEL (rw): DMA hardware request selection These bits are ignored if channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per request. Note: The user must not assign a same input hardware request (same REQSEL[4:0] value) to different active DMA channels (LPDMA_CxCR.EN = 1 and LPDMA_CxTR2.SWREQ = 0 for these channels). DMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x46025114 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when LPDMA_CxCR.EN is asserted.
0x46025114 C   FIELD 11w01 BREQ (rw): block hardware request If the channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x46025114 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (LPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 0b00 or 0b11, these TRIGM[1:0] bits are ignored. Else, a DMA transfer is conditioned by at least one trigger hit: The LPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 0b01 or respectively TRIGPOL[1:0] = 0b10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[4:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the LPDMA_CxTR2 with a new value for any of TRIGSEL[4:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized, and a trigger overrun flag is reported (LPDMA_CxSR.TOF = 1), an interrupt is generated if enabled (LPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun.
0x46025114 C   FIELD 16w05 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the LPDMA transfer (as per Programmed LPDMA1 trigger), with an active trigger event if TRIGPOL[1:0] = 00.
0x46025114 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[4:0].
0x46025114 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x46025118 B  REGISTER LPDMA_C1BR1: LPDMA channel 1 block register 1
0x46025118 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if LPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if LPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all LPDMA_CxLLR.Uxx = 0 and if LPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if LPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.
0x4602511C B  REGISTER LPDMA_C1SAR: LPDMA channel 1 source address register
0x4602511C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (LPDMA_CxTR1.SINC), this field is either kept fixed or incremented by the data width (LPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by LPDMA from the memory, provided the LLI is set with LPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[32:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x46025120 B  REGISTER LPDMA_C1DAR: LPDMA channel 1 destination address register
0x46025120 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (LPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (LPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by DMA from the memory, provided the LLI is set with LPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination single (DA[2:0] versus LPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x4602514C B  REGISTER LPDMA_C1LLR: LPDMA channel 1 linked-list address register
0x4602514C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list DMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list DMA internal register file (LPDMA_CxCTR1, LPDMA_CxTR2, LPDMA_CxBR1, LPDMA_CxSAR, LPDMA_CxDAR and LPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4602514C C   FIELD 16w01 ULL (rw): Update LPDMA_CxLLR register from memory This bit is used to control the update of the LPDMA_CxLLR register from the memory during the link transfer.
0x4602514C C   FIELD 27w01 UDA (rw): Update LPDMA_CxDAR register from memory This bit is used to control the update of the LPDMA_CxDAR register from the memory during the link transfer.
0x4602514C C   FIELD 28w01 USA (rw): update LPDMA_CxSAR from memory This bit controls the update of the LPDMA_CxSAR register from the memory during the link transfer.
0x4602514C C   FIELD 29w01 UB1 (rw): Update LPDMA_CxBR1 from memory This bit controls the update of the LPDMA_CxBR1 register from the memory during the link transfer.
0x4602514C C   FIELD 30w01 UT2 (rw): Update LPDMA_CxTR2 from memory This bit controls the update of the LPDMA_CxTR2 register from the memory during the link transfer.
0x4602514C C   FIELD 31w01 UT1 (rw): Update LPDMA_CxTR1 from memory This bit controls the update of the LPDMA_CxTR1 register from the memory during the link transfer.
0x46025150 B  REGISTER LPDMA_C2LBAR: LPDMA channel 2 linked-list base address register
0x46025150 C   FIELD 16w16 LBA (rw): linked-list base address of LPDMA channel x
0x4602515C B  REGISTER LPDMA_C2FCR: LPDMA channel 2 flag clear register
0x4602515C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x4602515C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x4602515C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x4602515C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x4602515C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x4602515C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x4602515C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x46025160 B  REGISTER LPDMA_C2SR: LPDMA channel 2 status register
0x46025160 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (LPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x46025160 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is a block transfer complete or a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode LPDMA_CxTR2.TCEM[1:0].
0x46025160 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is an half block transfer that occurs when half of the bytes of the source block size (rounded-up integer of LPDMA_CxBR1.BNDT[15:0] / 2) has been transferred to the destination.
0x46025160 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x46025160 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x46025160 C   FIELD 12w01 USEF (ro): user setting error flag
0x46025160 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x46025160 C   FIELD 14w01 TOF (ro): trigger overrun flag clear
0x46025164 B  REGISTER LPDMA_C2CR: LPDMA channel 2 control register
0x46025164 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x46025164 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (LPDMA_CxSR.SUSPF = 1 and LPDMA_CxSR.IDLEF = LPDMA_CxCR.EN = 1) - channel in disabled state (LPDMA_CxSR.IDLEF = 1 and LPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (LPDMA_CxBR1, LPDMA_CxSAR and LPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x46025164 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going DMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in sequence.
0x46025164 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x46025164 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x46025164 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x46025164 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x46025164 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x46025164 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x46025164 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x46025164 C   FIELD 16w01 LSM (rw): Link step mode First the block transfer is executed as defined by the current internal register file until LPDMA_CxBR1.BNDT[15:0 ] =0). Secondly the next linked-list data structure is conditionally uploaded from memory as defined by LPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x46025164 C   FIELD 22w02 PRIO (rw): priority level of the channel x LPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x46025190 B  REGISTER LPDMA_C2TR1: LPDMA channel 2 transfer register 1
0x46025190 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. a source block size must be a multiple of the source data width (LPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address LPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x46025190 C   FIELD 03w01 SINC (rw): source incrementing single The source address, pointed by LPDMA_CxSAR, is kept constant after a single transfer or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x46025190 C   FIELD 11w01 PAM (rw): padding/alignment mode If DDW_LOG2[1:0]=SDW_LOG2[1:0]: if the data width of a single destination transfer is equal to the data width of a single source transfer, this bit is ignored. Else: Case 1: If destination data width > source data width Case 2: If destination data width < source data width
0x46025190 C   FIELD 15w01 SSEC (rw): security attribute of the LPDMA transfer from the source If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx =1 . A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer from the source is non-secure.
0x46025190 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination single transfer must have an aligned address with its data width (start address LPDMA_CxDAR[2:0] versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and none transfer is issued.
0x46025190 C   FIELD 19w01 DINC (rw): destination incrementing single The destination address, pointed by LPDMA_CxDAR, is kept constant after a single transfer, or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x46025190 C   FIELD 31w01 DSEC (rw): security attribute of the LPDMA transfer to the destination If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx = 1. A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer to the destination is non-secure.
0x46025194 B  REGISTER LPDMA_C2TR2: LPDMA channel 2 transfer register 2
0x46025194 C   FIELD 00w05 REQSEL (rw): DMA hardware request selection These bits are ignored if channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per request. Note: The user must not assign a same input hardware request (same REQSEL[4:0] value) to different active DMA channels (LPDMA_CxCR.EN = 1 and LPDMA_CxTR2.SWREQ = 0 for these channels). DMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x46025194 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when LPDMA_CxCR.EN is asserted.
0x46025194 C   FIELD 11w01 BREQ (rw): block hardware request If the channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x46025194 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (LPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 0b00 or 0b11, these TRIGM[1:0] bits are ignored. Else, a DMA transfer is conditioned by at least one trigger hit: The LPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 0b01 or respectively TRIGPOL[1:0] = 0b10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[4:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the LPDMA_CxTR2 with a new value for any of TRIGSEL[4:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized, and a trigger overrun flag is reported (LPDMA_CxSR.TOF = 1), an interrupt is generated if enabled (LPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun.
0x46025194 C   FIELD 16w05 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the LPDMA transfer (as per Programmed LPDMA1 trigger), with an active trigger event if TRIGPOL[1:0] = 00.
0x46025194 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[4:0].
0x46025194 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x46025198 B  REGISTER LPDMA_C2BR1: LPDMA channel 2 block register 1
0x46025198 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if LPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if LPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all LPDMA_CxLLR.Uxx = 0 and if LPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if LPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.
0x4602519C B  REGISTER LPDMA_C2SAR: LPDMA channel 2 source address register
0x4602519C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (LPDMA_CxTR1.SINC), this field is either kept fixed or incremented by the data width (LPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by LPDMA from the memory, provided the LLI is set with LPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[32:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x460251A0 B  REGISTER LPDMA_C2DAR: LPDMA channel 2 destination address register
0x460251A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (LPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (LPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by DMA from the memory, provided the LLI is set with LPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination single (DA[2:0] versus LPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x460251CC B  REGISTER LPDMA_C2LLR: LPDMA channel 2 linked-list address register
0x460251CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list DMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list DMA internal register file (LPDMA_CxCTR1, LPDMA_CxTR2, LPDMA_CxBR1, LPDMA_CxSAR, LPDMA_CxDAR and LPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x460251CC C   FIELD 16w01 ULL (rw): Update LPDMA_CxLLR register from memory This bit is used to control the update of the LPDMA_CxLLR register from the memory during the link transfer.
0x460251CC C   FIELD 27w01 UDA (rw): Update LPDMA_CxDAR register from memory This bit is used to control the update of the LPDMA_CxDAR register from the memory during the link transfer.
0x460251CC C   FIELD 28w01 USA (rw): update LPDMA_CxSAR from memory This bit controls the update of the LPDMA_CxSAR register from the memory during the link transfer.
0x460251CC C   FIELD 29w01 UB1 (rw): Update LPDMA_CxBR1 from memory This bit controls the update of the LPDMA_CxBR1 register from the memory during the link transfer.
0x460251CC C   FIELD 30w01 UT2 (rw): Update LPDMA_CxTR2 from memory This bit controls the update of the LPDMA_CxTR2 register from the memory during the link transfer.
0x460251CC C   FIELD 31w01 UT1 (rw): Update LPDMA_CxTR1 from memory This bit controls the update of the LPDMA_CxTR1 register from the memory during the link transfer.
0x460251D0 B  REGISTER LPDMA_C3LBAR: LPDMA channel 3 linked-list base address register
0x460251D0 C   FIELD 16w16 LBA (rw): linked-list base address of LPDMA channel x
0x460251DC B  REGISTER LPDMA_C3FCR: LPDMA channel 3 flag clear register
0x460251DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x460251DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x460251DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x460251DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x460251DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x460251DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x460251DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x460251E0 B  REGISTER LPDMA_C3SR: LPDMA channel 3 status register
0x460251E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (LPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x460251E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is a block transfer complete or a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode LPDMA_CxTR2.TCEM[1:0].
0x460251E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is an half block transfer that occurs when half of the bytes of the source block size (rounded-up integer of LPDMA_CxBR1.BNDT[15:0] / 2) has been transferred to the destination.
0x460251E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x460251E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x460251E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x460251E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x460251E0 C   FIELD 14w01 TOF (ro): trigger overrun flag clear
0x460251E4 B  REGISTER LPDMA_C3CR: LPDMA channel 3 control register
0x460251E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x460251E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (LPDMA_CxSR.SUSPF = 1 and LPDMA_CxSR.IDLEF = LPDMA_CxCR.EN = 1) - channel in disabled state (LPDMA_CxSR.IDLEF = 1 and LPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (LPDMA_CxBR1, LPDMA_CxSAR and LPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x460251E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going DMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in sequence.
0x460251E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x460251E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x460251E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x460251E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x460251E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x460251E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x460251E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x460251E4 C   FIELD 16w01 LSM (rw): Link step mode First the block transfer is executed as defined by the current internal register file until LPDMA_CxBR1.BNDT[15:0 ] =0). Secondly the next linked-list data structure is conditionally uploaded from memory as defined by LPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x460251E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x LPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x46025210 B  REGISTER LPDMA_C3TR1: LPDMA channel 3 transfer register 1
0x46025210 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. a source block size must be a multiple of the source data width (LPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address LPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x46025210 C   FIELD 03w01 SINC (rw): source incrementing single The source address, pointed by LPDMA_CxSAR, is kept constant after a single transfer or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x46025210 C   FIELD 11w01 PAM (rw): padding/alignment mode If DDW_LOG2[1:0]=SDW_LOG2[1:0]: if the data width of a single destination transfer is equal to the data width of a single source transfer, this bit is ignored. Else: Case 1: If destination data width > source data width Case 2: If destination data width < source data width
0x46025210 C   FIELD 15w01 SSEC (rw): security attribute of the LPDMA transfer from the source If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx =1 . A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer from the source is non-secure.
0x46025210 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination single transfer must have an aligned address with its data width (start address LPDMA_CxDAR[2:0] versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and none transfer is issued.
0x46025210 C   FIELD 19w01 DINC (rw): destination incrementing single The destination address, pointed by LPDMA_CxDAR, is kept constant after a single transfer, or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x46025210 C   FIELD 31w01 DSEC (rw): security attribute of the LPDMA transfer to the destination If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx = 1. A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer to the destination is non-secure.
0x46025214 B  REGISTER LPDMA_C3TR2: LPDMA channel 3 transfer register 2
0x46025214 C   FIELD 00w05 REQSEL (rw): DMA hardware request selection These bits are ignored if channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per request. Note: The user must not assign a same input hardware request (same REQSEL[4:0] value) to different active DMA channels (LPDMA_CxCR.EN = 1 and LPDMA_CxTR2.SWREQ = 0 for these channels). DMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x46025214 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when LPDMA_CxCR.EN is asserted.
0x46025214 C   FIELD 11w01 BREQ (rw): block hardware request If the channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x46025214 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (LPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 0b00 or 0b11, these TRIGM[1:0] bits are ignored. Else, a DMA transfer is conditioned by at least one trigger hit: The LPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 0b01 or respectively TRIGPOL[1:0] = 0b10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[4:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the LPDMA_CxTR2 with a new value for any of TRIGSEL[4:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized, and a trigger overrun flag is reported (LPDMA_CxSR.TOF = 1), an interrupt is generated if enabled (LPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun.
0x46025214 C   FIELD 16w05 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the LPDMA transfer (as per Programmed LPDMA1 trigger), with an active trigger event if TRIGPOL[1:0] = 00.
0x46025214 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[4:0].
0x46025214 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x46025218 B  REGISTER LPDMA_C3BR1: LPDMA channel 3 block register 1
0x46025218 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if LPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if LPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all LPDMA_CxLLR.Uxx = 0 and if LPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if LPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.
0x4602521C B  REGISTER LPDMA_C3SAR: LPDMA channel 3 source address register
0x4602521C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (LPDMA_CxTR1.SINC), this field is either kept fixed or incremented by the data width (LPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by LPDMA from the memory, provided the LLI is set with LPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[32:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x46025220 B  REGISTER LPDMA_C3DAR: LPDMA channel 3 destination address register
0x46025220 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (LPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (LPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by DMA from the memory, provided the LLI is set with LPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination single (DA[2:0] versus LPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x4602524C B  REGISTER LPDMA_C3LLR: LPDMA channel 3 linked-list address register
0x4602524C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list DMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list DMA internal register file (LPDMA_CxCTR1, LPDMA_CxTR2, LPDMA_CxBR1, LPDMA_CxSAR, LPDMA_CxDAR and LPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x4602524C C   FIELD 16w01 ULL (rw): Update LPDMA_CxLLR register from memory This bit is used to control the update of the LPDMA_CxLLR register from the memory during the link transfer.
0x4602524C C   FIELD 27w01 UDA (rw): Update LPDMA_CxDAR register from memory This bit is used to control the update of the LPDMA_CxDAR register from the memory during the link transfer.
0x4602524C C   FIELD 28w01 USA (rw): update LPDMA_CxSAR from memory This bit controls the update of the LPDMA_CxSAR register from the memory during the link transfer.
0x4602524C C   FIELD 29w01 UB1 (rw): Update LPDMA_CxBR1 from memory This bit controls the update of the LPDMA_CxBR1 register from the memory during the link transfer.
0x4602524C C   FIELD 30w01 UT2 (rw): Update LPDMA_CxTR2 from memory This bit controls the update of the LPDMA_CxTR2 register from the memory during the link transfer.
0x4602524C C   FIELD 31w01 UT1 (rw): Update LPDMA_CxTR1 from memory This bit controls the update of the LPDMA_CxTR1 register from the memory during the link transfer.
0x50000000 A PERIPHERAL SEC_TIM2
0x50000000 B  REGISTER CR1 (rw): control register 1
0x50000000 C   FIELD 00w01 CEN: Counter enable
0x50000000 C   FIELD 01w01 UDIS: Update disable
0x50000000 C   FIELD 02w01 URS: Update request source
0x50000000 C   FIELD 03w01 OPM: One-pulse mode
0x50000000 C   FIELD 04w01 DIR: Direction
0x50000000 C   FIELD 05w02 CMS: Center-aligned mode selection
0x50000000 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50000000 C   FIELD 08w02 CKD: Clock division
0x50000000 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50000000 C   FIELD 12w01 DITHEN: Dithering Enable
0x50000004 B  REGISTER CR2 (rw): control register 2
0x50000004 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50000004 C   FIELD 04w03 MMS: Master mode selection
0x50000004 C   FIELD 07w01 TI1S: TI1 selection
0x50000004 C   FIELD 25w01 MMS_3: Master mode selection
0x50000008 B  REGISTER SMCR (rw): slave mode control register
0x50000008 C   FIELD 00w03 SMS: Slave mode selection
0x50000008 C   FIELD 03w01 OCCS: OCREF clear selection
0x50000008 C   FIELD 04w03 TS_2_0: Trigger selection
0x50000008 C   FIELD 07w01 MSM: Master/Slave mode
0x50000008 C   FIELD 08w04 ETF: External trigger filter
0x50000008 C   FIELD 12w02 ETPS: External trigger prescaler
0x50000008 C   FIELD 14w01 ECE: External clock enable
0x50000008 C   FIELD 15w01 ETP: External trigger polarity
0x50000008 C   FIELD 16w01 SMS_bit3: Slave mode selection - bit 3
0x50000008 C   FIELD 20w02 TS_4_3: Trigger selection
0x50000008 C   FIELD 24w01 SMSPE: SMS preload enable
0x50000008 C   FIELD 25w01 SMSPS: SMS preload source
0x5000000C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x5000000C C   FIELD 00w01 UIE: Update interrupt enable
0x5000000C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x5000000C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x5000000C C   FIELD 03w01 CC3IE: Capture/Compare 3 interrupt enable
0x5000000C C   FIELD 04w01 CC4IE: Capture/Compare 4 interrupt enable
0x5000000C C   FIELD 06w01 TIE: Trigger interrupt enable
0x5000000C C   FIELD 08w01 UDE: Update DMA request enable
0x5000000C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x5000000C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x5000000C C   FIELD 11w01 CC3DE: Capture/Compare 3 DMA request enable
0x5000000C C   FIELD 12w01 CC4DE: Capture/Compare 4 DMA request enable
0x5000000C C   FIELD 14w01 TDE: Trigger DMA request enable
0x5000000C C   FIELD 20w01 IDXIE: Index interrupt enable
0x5000000C C   FIELD 21w01 DIRIE: Direction change interrupt enable
0x5000000C C   FIELD 22w01 IERRIE: Index error interrupt enable
0x5000000C C   FIELD 23w01 TERRIE: Transition error interrupt enable
0x50000010 B  REGISTER SR (rw): status register
0x50000010 C   FIELD 00w01 UIF: Update interrupt flag
0x50000010 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x50000010 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x50000010 C   FIELD 03w01 CC3IF: Capture/Compare 3 interrupt flag
0x50000010 C   FIELD 04w01 CC4IF: Capture/Compare 4 interrupt flag
0x50000010 C   FIELD 06w01 TIF: Trigger interrupt flag
0x50000010 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x50000010 C   FIELD 10w01 CC2OF: Capture/compare 2 overcapture flag
0x50000010 C   FIELD 11w01 CC3OF: Capture/Compare 3 overcapture flag
0x50000010 C   FIELD 12w01 CC4OF: Capture/Compare 4 overcapture flag
0x50000010 C   FIELD 20w01 IDXF: Index interrupt flag
0x50000010 C   FIELD 21w01 DIRF: Direction change interrupt flag
0x50000010 C   FIELD 22w01 IERRF: Index error interrupt flag
0x50000010 C   FIELD 23w01 TERRF: Transition error interrupt flag
0x50000014 B  REGISTER EGR (wo): event generation register
0x50000014 C   FIELD 00w01 UG: Update generation
0x50000014 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x50000014 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x50000014 C   FIELD 03w01 CC3G: Capture/compare 3 generation
0x50000014 C   FIELD 04w01 CC4G: Capture/compare 4 generation
0x50000014 C   FIELD 06w01 TG: Trigger generation
0x50000018 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x50000018 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x50000018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50000018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50000018 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x50000018 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x50000018 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x50000018 C   FIELD 04w03 OC1M: Output compare 1 mode
0x50000018 C   FIELD 04w04 IC1F: Input capture 1 filter
0x50000018 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x50000018 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x50000018 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x50000018 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x50000018 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x50000018 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x50000018 C   FIELD 12w03 OC2M: Output compare 2 mode
0x50000018 C   FIELD 12w04 IC2F: Input capture 2 filter
0x50000018 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x50000018 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x50000018 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x5000001C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x5000001C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x5000001C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x5000001C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x5000001C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x5000001C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x5000001C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x5000001C C   FIELD 04w03 OC3M: Output compare 3 mode
0x5000001C C   FIELD 04w04 IC3F: Input capture 3 filter
0x5000001C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x5000001C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x5000001C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x5000001C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x5000001C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x5000001C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x5000001C C   FIELD 12w03 OC4M: Output compare 4 mode
0x5000001C C   FIELD 12w04 IC4F: Input capture 4 filter
0x5000001C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x5000001C C   FIELD 16w01 OC3M_bit3: Output Compare 1 mode - bit 3
0x5000001C C   FIELD 24w01 OC4M_bit3: Output Compare 2 mode - bit 3
0x50000020 B  REGISTER CCER (rw): capture/compare enable register
0x50000020 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x50000020 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x50000020 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x50000020 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x50000020 C   FIELD 05w01 CC2P: Capture/Compare 2 output Polarity
0x50000020 C   FIELD 07w01 CC2NP: Capture/Compare 2 output Polarity
0x50000020 C   FIELD 08w01 CC3E: Capture/Compare 3 output enable
0x50000020 C   FIELD 09w01 CC3P: Capture/Compare 3 output Polarity
0x50000020 C   FIELD 11w01 CC3NP: Capture/Compare 3 output Polarity
0x50000020 C   FIELD 12w01 CC4E: Capture/Compare 4 output enable
0x50000020 C   FIELD 13w01 CC4P: Capture/Compare 3 output Polarity
0x50000020 C   FIELD 15w01 CC4NP: Capture/Compare 4 output Polarity
0x50000024 B  REGISTER CNT (rw): counter
0x50000024 C   FIELD 00w16 CNT_L: Least significant part of counter value
0x50000024 C   FIELD 16w15 CNT_H: Most significant part counter value (on TIM2 and TIM5)
0x50000024 C   FIELD 31w01 CNT_bit31: Most significant bit of counter value (on TIM2 and TIM5)
0x50000028 B  REGISTER PSC (rw): prescaler
0x50000028 C   FIELD 00w16 PSC: Prescaler value
0x5000002C B  REGISTER ARR (rw): auto-reload register
0x5000002C C   FIELD 00w16 ARR_L: Low Auto-reload value
0x5000002C C   FIELD 16w16 ARR_H: High Auto-reload value (TIM2 only)
0x50000034 B  REGISTER CCR1 (rw): capture/compare register 1
0x50000034 C   FIELD 00w16 CCR1_L: Low Capture/Compare 1 value
0x50000034 C   FIELD 16w16 CCR1_H: High Capture/Compare 1 value (TIM2 only)
0x50000038 B  REGISTER CCR2 (rw): capture/compare register 2
0x50000038 C   FIELD 00w16 CCR2_L: Low Capture/Compare 2 value
0x50000038 C   FIELD 16w16 CCR2_H: High Capture/Compare 2 value (TIM2 only)
0x5000003C B  REGISTER CCR3 (rw): capture/compare register 3
0x5000003C C   FIELD 00w16 CCR3_L: Low Capture/Compare value
0x5000003C C   FIELD 16w16 CCR3_H: High Capture/Compare value (TIM2 only)
0x50000040 B  REGISTER CCR4 (rw): capture/compare register 4
0x50000040 C   FIELD 00w16 CCR4_L: Low Capture/Compare value
0x50000040 C   FIELD 16w16 CCR4_H: High Capture/Compare value (TIM2 only)
0x50000058 B  REGISTER ECR (rw): encoder control register
0x50000058 C   FIELD 00w01 IE: Index enable
0x50000058 C   FIELD 01w02 IDIR: Index direction
0x50000058 C   FIELD 03w02 IBLK: Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x50000058 C   FIELD 05w01 FIDX: First index
0x50000058 C   FIELD 06w02 IPOS: Index positioning
0x50000058 C   FIELD 16w08 PW: Pulse width
0x50000058 C   FIELD 24w03 PWPRSC: Pulse width prescaler
0x5000005C B  REGISTER TISEL (rw): timer input selection register
0x5000005C C   FIELD 00w04 TI1SEL: Selects tim_ti1[0..15] input
0x5000005C C   FIELD 08w04 TI2SEL: Selects tim_ti2[0..15] input
0x5000005C C   FIELD 16w04 TI3SEL: Selects tim_ti3[0..15] input
0x5000005C C   FIELD 24w04 TI4SEL: Selects tim_ti4[0..15] input
0x50000060 B  REGISTER AF1 (rw): alternate function register 1
0x50000060 C   FIELD 14w04 ETRSEL: etr_in source selection
0x50000064 B  REGISTER AF2 (rw): alternate function register 2
0x50000064 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x500003DC B  REGISTER DCR (rw): DMA control register
0x500003DC C   FIELD 00w05 DBA: DMA base address
0x500003DC C   FIELD 08w05 DBL: DMA burst length
0x500003DC C   FIELD 16w04 DBSS: DMA burst source selection
0x500003E0 B  REGISTER DMAR (rw): DMA address for full transfer
0x500003E0 C   FIELD 00w32 ETRSEL: DMA register for burst accesses
0x50000400 A PERIPHERAL SEC_TIM3
0x50000400 B  REGISTER CR1 (rw): control register 1
0x50000400 C   FIELD 00w01 CEN: Counter enable
0x50000400 C   FIELD 01w01 UDIS: Update disable
0x50000400 C   FIELD 02w01 URS: Update request source
0x50000400 C   FIELD 03w01 OPM: One-pulse mode
0x50000400 C   FIELD 04w01 DIR: Direction
0x50000400 C   FIELD 05w02 CMS: Center-aligned mode selection
0x50000400 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50000400 C   FIELD 08w02 CKD: Clock division
0x50000400 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50000400 C   FIELD 12w01 DITHEN: Dithering Enable
0x50000404 B  REGISTER CR2 (rw): control register 2
0x50000404 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50000404 C   FIELD 04w03 MMS: Master mode selection
0x50000404 C   FIELD 07w01 TI1S: TI1 selection
0x50000404 C   FIELD 25w01 MMS_3: Master mode selection
0x50000408 B  REGISTER SMCR (rw): slave mode control register
0x50000408 C   FIELD 00w03 SMS: Slave mode selection
0x50000408 C   FIELD 03w01 OCCS: OCREF clear selection
0x50000408 C   FIELD 04w03 TS_2_0: Trigger selection
0x50000408 C   FIELD 07w01 MSM: Master/Slave mode
0x50000408 C   FIELD 08w04 ETF: External trigger filter
0x50000408 C   FIELD 12w02 ETPS: External trigger prescaler
0x50000408 C   FIELD 14w01 ECE: External clock enable
0x50000408 C   FIELD 15w01 ETP: External trigger polarity
0x50000408 C   FIELD 16w01 SMS_bit3: Slave mode selection - bit 3
0x50000408 C   FIELD 20w02 TS_4_3: Trigger selection
0x50000408 C   FIELD 24w01 SMSPE: SMS preload enable
0x50000408 C   FIELD 25w01 SMSPS: SMS preload source
0x5000040C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x5000040C C   FIELD 00w01 UIE: Update interrupt enable
0x5000040C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x5000040C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x5000040C C   FIELD 03w01 CC3IE: Capture/Compare 3 interrupt enable
0x5000040C C   FIELD 04w01 CC4IE: Capture/Compare 4 interrupt enable
0x5000040C C   FIELD 06w01 TIE: Trigger interrupt enable
0x5000040C C   FIELD 08w01 UDE: Update DMA request enable
0x5000040C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x5000040C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x5000040C C   FIELD 11w01 CC3DE: Capture/Compare 3 DMA request enable
0x5000040C C   FIELD 12w01 CC4DE: Capture/Compare 4 DMA request enable
0x5000040C C   FIELD 14w01 TDE: Trigger DMA request enable
0x5000040C C   FIELD 20w01 IDXIE: Index interrupt enable
0x5000040C C   FIELD 21w01 DIRIE: Direction change interrupt enable
0x5000040C C   FIELD 22w01 IERRIE: Index error interrupt enable
0x5000040C C   FIELD 23w01 TERRIE: Transition error interrupt enable
0x50000410 B  REGISTER SR (rw): status register
0x50000410 C   FIELD 00w01 UIF: Update interrupt flag
0x50000410 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x50000410 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x50000410 C   FIELD 03w01 CC3IF: Capture/Compare 3 interrupt flag
0x50000410 C   FIELD 04w01 CC4IF: Capture/Compare 4 interrupt flag
0x50000410 C   FIELD 06w01 TIF: Trigger interrupt flag
0x50000410 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x50000410 C   FIELD 10w01 CC2OF: Capture/compare 2 overcapture flag
0x50000410 C   FIELD 11w01 CC3OF: Capture/Compare 3 overcapture flag
0x50000410 C   FIELD 12w01 CC4OF: Capture/Compare 4 overcapture flag
0x50000410 C   FIELD 20w01 IDXF: Index interrupt flag
0x50000410 C   FIELD 21w01 DIRF: Direction change interrupt flag
0x50000410 C   FIELD 22w01 IERRF: Index error interrupt flag
0x50000410 C   FIELD 23w01 TERRF: Transition error interrupt flag
0x50000414 B  REGISTER EGR (wo): event generation register
0x50000414 C   FIELD 00w01 UG: Update generation
0x50000414 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x50000414 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x50000414 C   FIELD 03w01 CC3G: Capture/compare 3 generation
0x50000414 C   FIELD 04w01 CC4G: Capture/compare 4 generation
0x50000414 C   FIELD 06w01 TG: Trigger generation
0x50000418 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x50000418 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x50000418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50000418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50000418 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x50000418 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x50000418 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x50000418 C   FIELD 04w03 OC1M: Output compare 1 mode
0x50000418 C   FIELD 04w04 IC1F: Input capture 1 filter
0x50000418 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x50000418 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x50000418 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x50000418 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x50000418 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x50000418 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x50000418 C   FIELD 12w03 OC2M: Output compare 2 mode
0x50000418 C   FIELD 12w04 IC2F: Input capture 2 filter
0x50000418 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x50000418 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x50000418 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x5000041C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x5000041C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x5000041C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x5000041C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x5000041C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x5000041C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x5000041C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x5000041C C   FIELD 04w03 OC3M: Output compare 3 mode
0x5000041C C   FIELD 04w04 IC3F: Input capture 3 filter
0x5000041C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x5000041C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x5000041C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x5000041C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x5000041C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x5000041C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x5000041C C   FIELD 12w03 OC4M: Output compare 4 mode
0x5000041C C   FIELD 12w04 IC4F: Input capture 4 filter
0x5000041C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x5000041C C   FIELD 16w01 OC3M_bit3: Output Compare 1 mode - bit 3
0x5000041C C   FIELD 24w01 OC4M_bit3: Output Compare 2 mode - bit 3
0x50000420 B  REGISTER CCER (rw): capture/compare enable register
0x50000420 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x50000420 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x50000420 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x50000420 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x50000420 C   FIELD 05w01 CC2P: Capture/Compare 2 output Polarity
0x50000420 C   FIELD 07w01 CC2NP: Capture/Compare 2 output Polarity
0x50000420 C   FIELD 08w01 CC3E: Capture/Compare 3 output enable
0x50000420 C   FIELD 09w01 CC3P: Capture/Compare 3 output Polarity
0x50000420 C   FIELD 11w01 CC3NP: Capture/Compare 3 output Polarity
0x50000420 C   FIELD 12w01 CC4E: Capture/Compare 4 output enable
0x50000420 C   FIELD 13w01 CC4P: Capture/Compare 3 output Polarity
0x50000420 C   FIELD 15w01 CC4NP: Capture/Compare 4 output Polarity
0x50000424 B  REGISTER CNT (rw): counter
0x50000424 C   FIELD 00w16 CNT_L: Least significant part of counter value
0x50000424 C   FIELD 16w15 CNT_H: Most significant part counter value (on TIM2 and TIM5)
0x50000424 C   FIELD 31w01 CNT_bit31: Most significant bit of counter value (on TIM2 and TIM5)
0x50000428 B  REGISTER PSC (rw): prescaler
0x50000428 C   FIELD 00w16 PSC: Prescaler value
0x5000042C B  REGISTER ARR (rw): auto-reload register
0x5000042C C   FIELD 00w16 ARR_L: Low Auto-reload value
0x5000042C C   FIELD 16w16 ARR_H: High Auto-reload value (TIM2 only)
0x50000434 B  REGISTER CCR1 (rw): capture/compare register 1
0x50000434 C   FIELD 00w16 CCR1_L: Low Capture/Compare 1 value
0x50000434 C   FIELD 16w16 CCR1_H: High Capture/Compare 1 value (TIM2 only)
0x50000438 B  REGISTER CCR2 (rw): capture/compare register 2
0x50000438 C   FIELD 00w16 CCR2_L: Low Capture/Compare 2 value
0x50000438 C   FIELD 16w16 CCR2_H: High Capture/Compare 2 value (TIM2 only)
0x5000043C B  REGISTER CCR3 (rw): capture/compare register 3
0x5000043C C   FIELD 00w16 CCR3_L: Low Capture/Compare value
0x5000043C C   FIELD 16w16 CCR3_H: High Capture/Compare value (TIM2 only)
0x50000440 B  REGISTER CCR4 (rw): capture/compare register 4
0x50000440 C   FIELD 00w16 CCR4_L: Low Capture/Compare value
0x50000440 C   FIELD 16w16 CCR4_H: High Capture/Compare value (TIM2 only)
0x50000458 B  REGISTER ECR (rw): encoder control register
0x50000458 C   FIELD 00w01 IE: Index enable
0x50000458 C   FIELD 01w02 IDIR: Index direction
0x50000458 C   FIELD 03w02 IBLK: Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x50000458 C   FIELD 05w01 FIDX: First index
0x50000458 C   FIELD 06w02 IPOS: Index positioning
0x50000458 C   FIELD 16w08 PW: Pulse width
0x50000458 C   FIELD 24w03 PWPRSC: Pulse width prescaler
0x5000045C B  REGISTER TISEL (rw): timer input selection register
0x5000045C C   FIELD 00w04 TI1SEL: Selects tim_ti1[0..15] input
0x5000045C C   FIELD 08w04 TI2SEL: Selects tim_ti2[0..15] input
0x5000045C C   FIELD 16w04 TI3SEL: Selects tim_ti3[0..15] input
0x5000045C C   FIELD 24w04 TI4SEL: Selects tim_ti4[0..15] input
0x50000460 B  REGISTER AF1 (rw): alternate function register 1
0x50000460 C   FIELD 14w04 ETRSEL: etr_in source selection
0x50000464 B  REGISTER AF2 (rw): alternate function register 2
0x50000464 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x500007DC B  REGISTER DCR (rw): DMA control register
0x500007DC C   FIELD 00w05 DBA: DMA base address
0x500007DC C   FIELD 08w05 DBL: DMA burst length
0x500007DC C   FIELD 16w04 DBSS: DMA burst source selection
0x500007E0 B  REGISTER DMAR (rw): DMA address for full transfer
0x500007E0 C   FIELD 00w32 ETRSEL: DMA register for burst accesses
0x50000800 A PERIPHERAL SEC_TIM4
0x50000800 B  REGISTER CR1 (rw): control register 1
0x50000800 C   FIELD 00w01 CEN: Counter enable
0x50000800 C   FIELD 01w01 UDIS: Update disable
0x50000800 C   FIELD 02w01 URS: Update request source
0x50000800 C   FIELD 03w01 OPM: One-pulse mode
0x50000800 C   FIELD 04w01 DIR: Direction
0x50000800 C   FIELD 05w02 CMS: Center-aligned mode selection
0x50000800 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50000800 C   FIELD 08w02 CKD: Clock division
0x50000800 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50000800 C   FIELD 12w01 DITHEN: Dithering Enable
0x50000804 B  REGISTER CR2 (rw): control register 2
0x50000804 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50000804 C   FIELD 04w03 MMS: Master mode selection
0x50000804 C   FIELD 07w01 TI1S: TI1 selection
0x50000804 C   FIELD 25w01 MMS_3: Master mode selection
0x50000808 B  REGISTER SMCR (rw): slave mode control register
0x50000808 C   FIELD 00w03 SMS: Slave mode selection
0x50000808 C   FIELD 03w01 OCCS: OCREF clear selection
0x50000808 C   FIELD 04w03 TS_2_0: Trigger selection
0x50000808 C   FIELD 07w01 MSM: Master/Slave mode
0x50000808 C   FIELD 08w04 ETF: External trigger filter
0x50000808 C   FIELD 12w02 ETPS: External trigger prescaler
0x50000808 C   FIELD 14w01 ECE: External clock enable
0x50000808 C   FIELD 15w01 ETP: External trigger polarity
0x50000808 C   FIELD 16w01 SMS_bit3: Slave mode selection - bit 3
0x50000808 C   FIELD 20w02 TS_4_3: Trigger selection
0x50000808 C   FIELD 24w01 SMSPE: SMS preload enable
0x50000808 C   FIELD 25w01 SMSPS: SMS preload source
0x5000080C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x5000080C C   FIELD 00w01 UIE: Update interrupt enable
0x5000080C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x5000080C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x5000080C C   FIELD 03w01 CC3IE: Capture/Compare 3 interrupt enable
0x5000080C C   FIELD 04w01 CC4IE: Capture/Compare 4 interrupt enable
0x5000080C C   FIELD 06w01 TIE: Trigger interrupt enable
0x5000080C C   FIELD 08w01 UDE: Update DMA request enable
0x5000080C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x5000080C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x5000080C C   FIELD 11w01 CC3DE: Capture/Compare 3 DMA request enable
0x5000080C C   FIELD 12w01 CC4DE: Capture/Compare 4 DMA request enable
0x5000080C C   FIELD 14w01 TDE: Trigger DMA request enable
0x5000080C C   FIELD 20w01 IDXIE: Index interrupt enable
0x5000080C C   FIELD 21w01 DIRIE: Direction change interrupt enable
0x5000080C C   FIELD 22w01 IERRIE: Index error interrupt enable
0x5000080C C   FIELD 23w01 TERRIE: Transition error interrupt enable
0x50000810 B  REGISTER SR (rw): status register
0x50000810 C   FIELD 00w01 UIF: Update interrupt flag
0x50000810 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x50000810 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x50000810 C   FIELD 03w01 CC3IF: Capture/Compare 3 interrupt flag
0x50000810 C   FIELD 04w01 CC4IF: Capture/Compare 4 interrupt flag
0x50000810 C   FIELD 06w01 TIF: Trigger interrupt flag
0x50000810 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x50000810 C   FIELD 10w01 CC2OF: Capture/compare 2 overcapture flag
0x50000810 C   FIELD 11w01 CC3OF: Capture/Compare 3 overcapture flag
0x50000810 C   FIELD 12w01 CC4OF: Capture/Compare 4 overcapture flag
0x50000810 C   FIELD 20w01 IDXF: Index interrupt flag
0x50000810 C   FIELD 21w01 DIRF: Direction change interrupt flag
0x50000810 C   FIELD 22w01 IERRF: Index error interrupt flag
0x50000810 C   FIELD 23w01 TERRF: Transition error interrupt flag
0x50000814 B  REGISTER EGR (wo): event generation register
0x50000814 C   FIELD 00w01 UG: Update generation
0x50000814 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x50000814 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x50000814 C   FIELD 03w01 CC3G: Capture/compare 3 generation
0x50000814 C   FIELD 04w01 CC4G: Capture/compare 4 generation
0x50000814 C   FIELD 06w01 TG: Trigger generation
0x50000818 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x50000818 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x50000818 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50000818 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50000818 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x50000818 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x50000818 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x50000818 C   FIELD 04w03 OC1M: Output compare 1 mode
0x50000818 C   FIELD 04w04 IC1F: Input capture 1 filter
0x50000818 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x50000818 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x50000818 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x50000818 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x50000818 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x50000818 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x50000818 C   FIELD 12w03 OC2M: Output compare 2 mode
0x50000818 C   FIELD 12w04 IC2F: Input capture 2 filter
0x50000818 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x50000818 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x50000818 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x5000081C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x5000081C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x5000081C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x5000081C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x5000081C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x5000081C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x5000081C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x5000081C C   FIELD 04w03 OC3M: Output compare 3 mode
0x5000081C C   FIELD 04w04 IC3F: Input capture 3 filter
0x5000081C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x5000081C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x5000081C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x5000081C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x5000081C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x5000081C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x5000081C C   FIELD 12w03 OC4M: Output compare 4 mode
0x5000081C C   FIELD 12w04 IC4F: Input capture 4 filter
0x5000081C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x5000081C C   FIELD 16w01 OC3M_bit3: Output Compare 1 mode - bit 3
0x5000081C C   FIELD 24w01 OC4M_bit3: Output Compare 2 mode - bit 3
0x50000820 B  REGISTER CCER (rw): capture/compare enable register
0x50000820 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x50000820 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x50000820 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x50000820 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x50000820 C   FIELD 05w01 CC2P: Capture/Compare 2 output Polarity
0x50000820 C   FIELD 07w01 CC2NP: Capture/Compare 2 output Polarity
0x50000820 C   FIELD 08w01 CC3E: Capture/Compare 3 output enable
0x50000820 C   FIELD 09w01 CC3P: Capture/Compare 3 output Polarity
0x50000820 C   FIELD 11w01 CC3NP: Capture/Compare 3 output Polarity
0x50000820 C   FIELD 12w01 CC4E: Capture/Compare 4 output enable
0x50000820 C   FIELD 13w01 CC4P: Capture/Compare 3 output Polarity
0x50000820 C   FIELD 15w01 CC4NP: Capture/Compare 4 output Polarity
0x50000824 B  REGISTER CNT (rw): counter
0x50000824 C   FIELD 00w16 CNT_L: Least significant part of counter value
0x50000824 C   FIELD 16w15 CNT_H: Most significant part counter value (on TIM2 and TIM5)
0x50000824 C   FIELD 31w01 CNT_bit31: Most significant bit of counter value (on TIM2 and TIM5)
0x50000828 B  REGISTER PSC (rw): prescaler
0x50000828 C   FIELD 00w16 PSC: Prescaler value
0x5000082C B  REGISTER ARR (rw): auto-reload register
0x5000082C C   FIELD 00w16 ARR_L: Low Auto-reload value
0x5000082C C   FIELD 16w16 ARR_H: High Auto-reload value (TIM2 only)
0x50000834 B  REGISTER CCR1 (rw): capture/compare register 1
0x50000834 C   FIELD 00w16 CCR1_L: Low Capture/Compare 1 value
0x50000834 C   FIELD 16w16 CCR1_H: High Capture/Compare 1 value (TIM2 only)
0x50000838 B  REGISTER CCR2 (rw): capture/compare register 2
0x50000838 C   FIELD 00w16 CCR2_L: Low Capture/Compare 2 value
0x50000838 C   FIELD 16w16 CCR2_H: High Capture/Compare 2 value (TIM2 only)
0x5000083C B  REGISTER CCR3 (rw): capture/compare register 3
0x5000083C C   FIELD 00w16 CCR3_L: Low Capture/Compare value
0x5000083C C   FIELD 16w16 CCR3_H: High Capture/Compare value (TIM2 only)
0x50000840 B  REGISTER CCR4 (rw): capture/compare register 4
0x50000840 C   FIELD 00w16 CCR4_L: Low Capture/Compare value
0x50000840 C   FIELD 16w16 CCR4_H: High Capture/Compare value (TIM2 only)
0x50000858 B  REGISTER ECR (rw): encoder control register
0x50000858 C   FIELD 00w01 IE: Index enable
0x50000858 C   FIELD 01w02 IDIR: Index direction
0x50000858 C   FIELD 03w02 IBLK: Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x50000858 C   FIELD 05w01 FIDX: First index
0x50000858 C   FIELD 06w02 IPOS: Index positioning
0x50000858 C   FIELD 16w08 PW: Pulse width
0x50000858 C   FIELD 24w03 PWPRSC: Pulse width prescaler
0x5000085C B  REGISTER TISEL (rw): timer input selection register
0x5000085C C   FIELD 00w04 TI1SEL: Selects tim_ti1[0..15] input
0x5000085C C   FIELD 08w04 TI2SEL: Selects tim_ti2[0..15] input
0x5000085C C   FIELD 16w04 TI3SEL: Selects tim_ti3[0..15] input
0x5000085C C   FIELD 24w04 TI4SEL: Selects tim_ti4[0..15] input
0x50000860 B  REGISTER AF1 (rw): alternate function register 1
0x50000860 C   FIELD 14w04 ETRSEL: etr_in source selection
0x50000864 B  REGISTER AF2 (rw): alternate function register 2
0x50000864 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x50000BDC B  REGISTER DCR (rw): DMA control register
0x50000BDC C   FIELD 00w05 DBA: DMA base address
0x50000BDC C   FIELD 08w05 DBL: DMA burst length
0x50000BDC C   FIELD 16w04 DBSS: DMA burst source selection
0x50000BE0 B  REGISTER DMAR (rw): DMA address for full transfer
0x50000BE0 C   FIELD 00w32 ETRSEL: DMA register for burst accesses
0x50000C00 A PERIPHERAL SEC_TIM5
0x50000C00 B  REGISTER CR1 (rw): control register 1
0x50000C00 C   FIELD 00w01 CEN: Counter enable
0x50000C00 C   FIELD 01w01 UDIS: Update disable
0x50000C00 C   FIELD 02w01 URS: Update request source
0x50000C00 C   FIELD 03w01 OPM: One-pulse mode
0x50000C00 C   FIELD 04w01 DIR: Direction
0x50000C00 C   FIELD 05w02 CMS: Center-aligned mode selection
0x50000C00 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50000C00 C   FIELD 08w02 CKD: Clock division
0x50000C00 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50000C00 C   FIELD 12w01 DITHEN: Dithering Enable
0x50000C04 B  REGISTER CR2 (rw): control register 2
0x50000C04 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50000C04 C   FIELD 04w03 MMS: Master mode selection
0x50000C04 C   FIELD 07w01 TI1S: TI1 selection
0x50000C04 C   FIELD 25w01 MMS_3: Master mode selection
0x50000C08 B  REGISTER SMCR (rw): slave mode control register
0x50000C08 C   FIELD 00w03 SMS: Slave mode selection
0x50000C08 C   FIELD 03w01 OCCS: OCREF clear selection
0x50000C08 C   FIELD 04w03 TS_2_0: Trigger selection
0x50000C08 C   FIELD 07w01 MSM: Master/Slave mode
0x50000C08 C   FIELD 08w04 ETF: External trigger filter
0x50000C08 C   FIELD 12w02 ETPS: External trigger prescaler
0x50000C08 C   FIELD 14w01 ECE: External clock enable
0x50000C08 C   FIELD 15w01 ETP: External trigger polarity
0x50000C08 C   FIELD 16w01 SMS_bit3: Slave mode selection - bit 3
0x50000C08 C   FIELD 20w02 TS_4_3: Trigger selection
0x50000C08 C   FIELD 24w01 SMSPE: SMS preload enable
0x50000C08 C   FIELD 25w01 SMSPS: SMS preload source
0x50000C0C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x50000C0C C   FIELD 00w01 UIE: Update interrupt enable
0x50000C0C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x50000C0C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x50000C0C C   FIELD 03w01 CC3IE: Capture/Compare 3 interrupt enable
0x50000C0C C   FIELD 04w01 CC4IE: Capture/Compare 4 interrupt enable
0x50000C0C C   FIELD 06w01 TIE: Trigger interrupt enable
0x50000C0C C   FIELD 08w01 UDE: Update DMA request enable
0x50000C0C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x50000C0C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x50000C0C C   FIELD 11w01 CC3DE: Capture/Compare 3 DMA request enable
0x50000C0C C   FIELD 12w01 CC4DE: Capture/Compare 4 DMA request enable
0x50000C0C C   FIELD 14w01 TDE: Trigger DMA request enable
0x50000C0C C   FIELD 20w01 IDXIE: Index interrupt enable
0x50000C0C C   FIELD 21w01 DIRIE: Direction change interrupt enable
0x50000C0C C   FIELD 22w01 IERRIE: Index error interrupt enable
0x50000C0C C   FIELD 23w01 TERRIE: Transition error interrupt enable
0x50000C10 B  REGISTER SR (rw): status register
0x50000C10 C   FIELD 00w01 UIF: Update interrupt flag
0x50000C10 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x50000C10 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x50000C10 C   FIELD 03w01 CC3IF: Capture/Compare 3 interrupt flag
0x50000C10 C   FIELD 04w01 CC4IF: Capture/Compare 4 interrupt flag
0x50000C10 C   FIELD 06w01 TIF: Trigger interrupt flag
0x50000C10 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x50000C10 C   FIELD 10w01 CC2OF: Capture/compare 2 overcapture flag
0x50000C10 C   FIELD 11w01 CC3OF: Capture/Compare 3 overcapture flag
0x50000C10 C   FIELD 12w01 CC4OF: Capture/Compare 4 overcapture flag
0x50000C10 C   FIELD 20w01 IDXF: Index interrupt flag
0x50000C10 C   FIELD 21w01 DIRF: Direction change interrupt flag
0x50000C10 C   FIELD 22w01 IERRF: Index error interrupt flag
0x50000C10 C   FIELD 23w01 TERRF: Transition error interrupt flag
0x50000C14 B  REGISTER EGR (wo): event generation register
0x50000C14 C   FIELD 00w01 UG: Update generation
0x50000C14 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x50000C14 C   FIELD 02w01 CC2G: Capture/compare 2 generation
0x50000C14 C   FIELD 03w01 CC3G: Capture/compare 3 generation
0x50000C14 C   FIELD 04w01 CC4G: Capture/compare 4 generation
0x50000C14 C   FIELD 06w01 TG: Trigger generation
0x50000C18 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x50000C18 B  REGISTER CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x50000C18 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50000C18 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50000C18 C   FIELD 02w01 OC1FE: Output compare 1 fast enable
0x50000C18 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x50000C18 C   FIELD 03w01 OC1PE: Output compare 1 preload enable
0x50000C18 C   FIELD 04w03 OC1M: Output compare 1 mode
0x50000C18 C   FIELD 04w04 IC1F: Input capture 1 filter
0x50000C18 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x50000C18 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x50000C18 C   FIELD 08w02 CC2S: Capture/compare 2 selection
0x50000C18 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x50000C18 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x50000C18 C   FIELD 11w01 OC2PE: Output compare 2 preload enable
0x50000C18 C   FIELD 12w03 OC2M: Output compare 2 mode
0x50000C18 C   FIELD 12w04 IC2F: Input capture 2 filter
0x50000C18 C   FIELD 15w01 OC2CE: Output compare 2 clear enable
0x50000C18 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x50000C18 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x50000C1C B  REGISTER CCMR2_Input (rw): capture/compare mode register 2 (input mode)
0x50000C1C B  REGISTER CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x50000C1C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x50000C1C C   FIELD 00w02 CC3S: Capture/Compare 3 selection
0x50000C1C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x50000C1C C   FIELD 02w02 IC3PSC: Input capture 3 prescaler
0x50000C1C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x50000C1C C   FIELD 04w03 OC3M: Output compare 3 mode
0x50000C1C C   FIELD 04w04 IC3F: Input capture 3 filter
0x50000C1C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x50000C1C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x50000C1C C   FIELD 08w02 CC4S: Capture/Compare 4 selection
0x50000C1C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x50000C1C C   FIELD 10w02 IC4PSC: Input capture 4 prescaler
0x50000C1C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x50000C1C C   FIELD 12w03 OC4M: Output compare 4 mode
0x50000C1C C   FIELD 12w04 IC4F: Input capture 4 filter
0x50000C1C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x50000C1C C   FIELD 16w01 OC3M_bit3: Output Compare 1 mode - bit 3
0x50000C1C C   FIELD 24w01 OC4M_bit3: Output Compare 2 mode - bit 3
0x50000C20 B  REGISTER CCER (rw): capture/compare enable register
0x50000C20 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x50000C20 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x50000C20 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x50000C20 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x50000C20 C   FIELD 05w01 CC2P: Capture/Compare 2 output Polarity
0x50000C20 C   FIELD 07w01 CC2NP: Capture/Compare 2 output Polarity
0x50000C20 C   FIELD 08w01 CC3E: Capture/Compare 3 output enable
0x50000C20 C   FIELD 09w01 CC3P: Capture/Compare 3 output Polarity
0x50000C20 C   FIELD 11w01 CC3NP: Capture/Compare 3 output Polarity
0x50000C20 C   FIELD 12w01 CC4E: Capture/Compare 4 output enable
0x50000C20 C   FIELD 13w01 CC4P: Capture/Compare 3 output Polarity
0x50000C20 C   FIELD 15w01 CC4NP: Capture/Compare 4 output Polarity
0x50000C24 B  REGISTER CNT (rw): counter
0x50000C24 C   FIELD 00w16 CNT_L: Least significant part of counter value
0x50000C24 C   FIELD 16w15 CNT_H: Most significant part counter value (on TIM2 and TIM5)
0x50000C24 C   FIELD 31w01 CNT_bit31: Most significant bit of counter value (on TIM2 and TIM5)
0x50000C28 B  REGISTER PSC (rw): prescaler
0x50000C28 C   FIELD 00w16 PSC: Prescaler value
0x50000C2C B  REGISTER ARR (rw): auto-reload register
0x50000C2C C   FIELD 00w16 ARR_L: Low Auto-reload value
0x50000C2C C   FIELD 16w16 ARR_H: High Auto-reload value (TIM2 only)
0x50000C34 B  REGISTER CCR1 (rw): capture/compare register 1
0x50000C34 C   FIELD 00w16 CCR1_L: Low Capture/Compare 1 value
0x50000C34 C   FIELD 16w16 CCR1_H: High Capture/Compare 1 value (TIM2 only)
0x50000C38 B  REGISTER CCR2 (rw): capture/compare register 2
0x50000C38 C   FIELD 00w16 CCR2_L: Low Capture/Compare 2 value
0x50000C38 C   FIELD 16w16 CCR2_H: High Capture/Compare 2 value (TIM2 only)
0x50000C3C B  REGISTER CCR3 (rw): capture/compare register 3
0x50000C3C C   FIELD 00w16 CCR3_L: Low Capture/Compare value
0x50000C3C C   FIELD 16w16 CCR3_H: High Capture/Compare value (TIM2 only)
0x50000C40 B  REGISTER CCR4 (rw): capture/compare register 4
0x50000C40 C   FIELD 00w16 CCR4_L: Low Capture/Compare value
0x50000C40 C   FIELD 16w16 CCR4_H: High Capture/Compare value (TIM2 only)
0x50000C58 B  REGISTER ECR (rw): encoder control register
0x50000C58 C   FIELD 00w01 IE: Index enable
0x50000C58 C   FIELD 01w02 IDIR: Index direction
0x50000C58 C   FIELD 03w02 IBLK: Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x50000C58 C   FIELD 05w01 FIDX: First index
0x50000C58 C   FIELD 06w02 IPOS: Index positioning
0x50000C58 C   FIELD 16w08 PW: Pulse width
0x50000C58 C   FIELD 24w03 PWPRSC: Pulse width prescaler
0x50000C5C B  REGISTER TISEL (rw): timer input selection register
0x50000C5C C   FIELD 00w04 TI1SEL: Selects tim_ti1[0..15] input
0x50000C5C C   FIELD 08w04 TI2SEL: Selects tim_ti2[0..15] input
0x50000C5C C   FIELD 16w04 TI3SEL: Selects tim_ti3[0..15] input
0x50000C5C C   FIELD 24w04 TI4SEL: Selects tim_ti4[0..15] input
0x50000C60 B  REGISTER AF1 (rw): alternate function register 1
0x50000C60 C   FIELD 14w04 ETRSEL: etr_in source selection
0x50000C64 B  REGISTER AF2 (rw): alternate function register 2
0x50000C64 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x50000FDC B  REGISTER DCR (rw): DMA control register
0x50000FDC C   FIELD 00w05 DBA: DMA base address
0x50000FDC C   FIELD 08w05 DBL: DMA burst length
0x50000FDC C   FIELD 16w04 DBSS: DMA burst source selection
0x50000FE0 B  REGISTER DMAR (rw): DMA address for full transfer
0x50000FE0 C   FIELD 00w32 ETRSEL: DMA register for burst accesses
0x50001000 A PERIPHERAL SEC_TIM6
0x50001000 B  REGISTER CR1 (rw): control register 1
0x50001000 C   FIELD 00w01 CEN: Counter enable
0x50001000 C   FIELD 01w01 UDIS: Update disable
0x50001000 C   FIELD 02w01 URS: Update request source
0x50001000 C   FIELD 03w01 OPM: One-pulse mode
0x50001000 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50001000 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50001000 C   FIELD 12w01 DITHEN: Dithering Enable
0x50001004 B  REGISTER CR2 (rw): control register 2
0x50001004 C   FIELD 04w03 MMS: Master mode selection
0x5000100C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x5000100C C   FIELD 00w01 UIE: UIE
0x5000100C C   FIELD 08w01 UDE: UDE
0x50001010 B  REGISTER SR (rw): status register
0x50001010 C   FIELD 00w01 UIF: UIF
0x50001014 B  REGISTER EGR (wo): event generation register
0x50001014 C   FIELD 00w01 UG: UG
0x50001024 B  REGISTER CNT (rw): counter
0x50001024 C   FIELD 00w16 CNT: CNT
0x50001024 C   FIELD 31w01 UIFCPY: UIFCPY
0x50001028 B  REGISTER PSC (rw): prescaler
0x50001028 C   FIELD 00w16 PSC: PSC
0x5000102C B  REGISTER ARR (rw): auto-reload register
0x5000102C C   FIELD 00w19 ARR: ARR
0x50001400 A PERIPHERAL SEC_TIM7
0x50001400 B  REGISTER CR1 (rw): control register 1
0x50001400 C   FIELD 00w01 CEN: Counter enable
0x50001400 C   FIELD 01w01 UDIS: Update disable
0x50001400 C   FIELD 02w01 URS: Update request source
0x50001400 C   FIELD 03w01 OPM: One-pulse mode
0x50001400 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50001400 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50001400 C   FIELD 12w01 DITHEN: Dithering Enable
0x50001404 B  REGISTER CR2 (rw): control register 2
0x50001404 C   FIELD 04w03 MMS: Master mode selection
0x5000140C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x5000140C C   FIELD 00w01 UIE: UIE
0x5000140C C   FIELD 08w01 UDE: UDE
0x50001410 B  REGISTER SR (rw): status register
0x50001410 C   FIELD 00w01 UIF: UIF
0x50001414 B  REGISTER EGR (wo): event generation register
0x50001414 C   FIELD 00w01 UG: UG
0x50001424 B  REGISTER CNT (rw): counter
0x50001424 C   FIELD 00w16 CNT: CNT
0x50001424 C   FIELD 31w01 UIFCPY: UIFCPY
0x50001428 B  REGISTER PSC (rw): prescaler
0x50001428 C   FIELD 00w16 PSC: PSC
0x5000142C B  REGISTER ARR (rw): auto-reload register
0x5000142C C   FIELD 00w19 ARR: ARR
0x50002C00 A PERIPHERAL SEC_WWDG
0x50002C00 B  REGISTER CR (rw): Control register
0x50002C00 C   FIELD 00w07 T: 7-bit counter (MSB to LSB)
0x50002C00 C   FIELD 07w01 WDGA: Activation bit
0x50002C04 B  REGISTER CFR (rw): Configuration register
0x50002C04 C   FIELD 00w07 W: 7-bit window value
0x50002C04 C   FIELD 09w01 EWI: Early wakeup interrupt
0x50002C04 C   FIELD 11w03 WDGTB: Timer base
0x50002C08 B  REGISTER SR (rw): Status register
0x50002C08 C   FIELD 00w01 EWIF: Early wakeup interrupt flag
0x50003000 A PERIPHERAL SEC_IWDG
0x50003000 B  REGISTER KR (wo): Key register
0x50003000 C   FIELD 00w16 KEY: Key value (write only, read 0x0000)
0x50003004 B  REGISTER PR (rw): Prescaler register
0x50003004 C   FIELD 00w04 PR: Prescaler divider
0x50003008 B  REGISTER RLR (rw): Reload register
0x50003008 C   FIELD 00w12 RL: Watchdog counter reload value
0x5000300C B  REGISTER SR (ro): Status register
0x5000300C C   FIELD 00w01 PVU: Watchdog prescaler value update
0x5000300C C   FIELD 01w01 RVU: Watchdog counter reload value update
0x5000300C C   FIELD 02w01 WVU: Watchdog counter window value update
0x5000300C C   FIELD 03w01 EWU: Watchdog interrupt comparator value update
0x5000300C C   FIELD 14w01 EWIF: Watchdog Early interrupt flag
0x50003010 B  REGISTER WINR (rw): Window register
0x50003010 C   FIELD 00w12 WIN: Watchdog counter window value
0x50003014 B  REGISTER EWCR (rw): IWDG early wakeup interrupt register
0x50003014 C   FIELD 00w12 EWIT: Watchdog counter window value
0x50003014 C   FIELD 14w01 EWIC: Watchdog early interrupt acknowledge
0x50003014 C   FIELD 15w01 EWIE: Watchdog early interrupt enable
0x50003800 A PERIPHERAL SEC_SPI2
0x50003800 B  REGISTER SPI_CR1: 
0x50003800 C   FIELD 00w01 SPE (rw): serial peripheral enable This bit is set by and cleared by software. When SPE=1, SPI data transfer is enabled, SPI_CFG1 and SPI_CFG2 configuration registers, CRCPOLY, UDRDR, part of SPI_AUTOCR register and IOLOCK bit in the SPI_CR1 register are write protected. They can be changed only when SPE=0. When SPE=0 any SPI operation is stopped and disabled, all the pending requests of the events with enabled interrupt are blocked except the MODF interrupt request (but their pending still propagates the request of the spi_plck clock), the SS output is deactivated at master, the RDY signal keeps not ready status at slave, the internal state machine is reseted, all the FIFOs content is flushed, CRC calculation initialized, receive data register is read zero. SPE is cleared and cannot be set when MODF error flag is active.
0x50003800 C   FIELD 08w01 MASRX (rw): master automatic suspension in Receive mode This bit is set and cleared by software to control continuous SPI transfer in master receiver mode and automatic management in order to avoid overrun condition. When SPI communication is suspended by hardware automatically, it could happen that few bits of next frame are already clocked out due to internal synchronization delay. This is why, the automatic suspension is not quite reliable when size of data drops below 8 bits. In this case, a safe suspension can be achieved by combination with delay inserted between data frames applied when MIDI parameter keeps a non zero value; sum of data size and the interleaved SPI cycles should always produce interval at length of 8 SPI clock periods at minimum. After software clearing of the SUSP bit, the communication resumes and continues by subsequent bits transaction without any next constraint. Prior the SUSP bit is cleared, the user must release the RxFIFO space as much as possible by reading out all the data packets available at RxFIFO based on the RXP flag indication to prevent any subsequent suspension.
0x50003800 C   FIELD 09w01 CSTART (rw): master transfer start This bit can be set by software if SPI is enabled only to start an SPI communication. it is cleared by hardware when end of transfer (EOT) flag is set or when a transaction suspend request is accepted. In SPI mode, the bit is taken into account at master mode only. If transmission is enabled, communication starts or continues only if any data is available in the transmission FIFO.
0x50003800 C   FIELD 10w01 CSUSP (wo): master SUSPend request This bit reads as zero. In Master mode, when this bit is set by software, the CSTART bit is reset at the end of the current frame and SPI communication is suspended. The user has to check SUSP flag to check end of the frame transaction. The Master mode communication must be suspended (using this bit or keeping TXDR empty) before disabling the SPI or going to Low-power mode. After software suspension, SUSP flag has to be cleared and SPI disabled and re-enabled before the next transaction starts.
0x50003800 C   FIELD 11w01 HDDIR (rw): Rx/Tx direction at Half-duplex mode In Half-Duplex configuration the HDDIR bit establishes the Rx/Tx direction of the data transfer. This bit is ignored in Full-Duplex or any Simplex configuration.
0x50003800 C   FIELD 12w01 SSI (rw): internal SS signal input level This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the peripheral SS input internally and the I/O value of the SS pin is ignored.
0x50003800 C   FIELD 13w01 CRC33_17 (rw): 32-bit CRC polynomial configuration
0x50003800 C   FIELD 14w01 RCRCINI (rw): CRC calculation initialization pattern control for receiver
0x50003800 C   FIELD 15w01 TCRCINI (rw): CRC calculation initialization pattern control for transmitter
0x50003800 C   FIELD 16w01 IOLOCK (rw): locking the AF configuration of associated IOs This bit is set by software and cleared by hardware whenever the SPE bit is changed from 1 to 0. When this bit is set, SPI_CFG2 register content cannot be modified. This bit can be set when SPI is disabled only else it is write protected. It is cleared and cannot be set when MODF bit is set.
0x50003804 B  REGISTER SPI_CR2: 
0x50003804 C   FIELD 00w16 TSIZE (rw): number of data at current transfer When these bits are changed by software, the SPI has to be disabled. Endless transaction is initialized when CSTART is set while zero value is stored at TSIZE. TSIZE cannot be set to 0xFFFF respective 0x3FFF value when CRC is enabled. Note: TSIZE[15:10] bits are reserved at limited feature set instances and must be kept at reset value.
0x50003808 B  REGISTER SPI_CFG1: SPI configuration register 1
0x50003808 C   FIELD 00w05 DSIZE (rw): number of bits in at single SPI data frame ..... Note: Maximum data size can be limited up to 16-bits at some instances. At instances with limited set of features, DSIZE2:0] bits are reserved and must be kept at reset state. DSIZE[4:3] bits then control next settings of data size: 00xxx: 8-bits 01xxx: 16-bits 10xxx: 24-bits 11xxx: 32-bits.
0x50003808 C   FIELD 05w04 FTHLV (rw): FIFO threshold level Defines number of data frames at single data packet. Size of the packet should not exceed 1/2 of FIFO space. SPI interface is more efficient if configured packet sizes are aligned with data register access parallelism: If SPI data register is accessed as a 16-bit register and DSIZE ¤ 8 bit, better to select FTHLV = 2, 4, 6. If SPI data register is accessed as a 32-bit register and DSIZE> 8 bit, better to select FTHLV = 2, 4, 6, while if DSIZE ¤ 8bit, better to select FTHLV = 4, 8, 12. Note: FTHLV[3:2] bits are reserved at instances with limited set of features
0x50003808 C   FIELD 09w01 UDRCFG (rw): behavior of slave transmitter at underrun condition For more details see underrun condition.
0x50003808 C   FIELD 14w01 RXDMAEN (rw): Rx DMA stream enable
0x50003808 C   FIELD 15w01 TXDMAEN (rw): Tx DMA stream enable
0x50003808 C   FIELD 16w05 CRCSIZE (rw): length of CRC frame to be transacted and compared Most significant bits are taken into account from polynomial calculation when CRC result is transacted or compared. The length of the polynomial is not affected by this setting. ..... The value must be set equal or multiply of data size (DSIZE[4:0]). Its maximum size corresponds to DSIZE maximum at the instance. Note: The most significant bit at CRCSIZE bit field is reserved at the peripheral instances where data size is limited to 16-bit.
0x50003808 C   FIELD 22w01 CRCEN (rw): hardware CRC computation enable
0x50003808 C   FIELD 28w03 MBR (rw): master baud rate prescaler setting Note: MBR setting is considered at slave working at TI mode, too (see mode).
0x50003808 C   FIELD 31w01 BPASS (rw): bypass of the prescaler at master baud rate clock generator
0x5000380C B  REGISTER SPI_CFG2: SPI configuration register 2
0x5000380C C   FIELD 00w04 MSSI (rw): Master SS Idleness Specifies an extra delay, expressed in number of SPI clock cycle periods, inserted additionally between active edge of SS opening a session and the beginning of the first data frame of the session in Master mode when SSOE is enabled. ... Note: This feature is not supported in TI mode. To include the delay, the SPI must be disabled and re-enabled between sessions.
0x5000380C C   FIELD 04w04 MIDI (rw): master Inter-Data Idleness Specifies minimum time delay (expressed in SPI clock cycles periods) inserted between two consecutive data frames in Master mode. ... Note: This feature is not supported in TI mode.
0x5000380C C   FIELD 13w01 RDIOM (rw): RDY signal input/output management Note: When DSIZE at the SPI_CFG1 register is configured shorter than 8-bit, the RDIOM bit has to be kept at zero.
0x5000380C C   FIELD 14w01 RDIOP (rw): RDY signal input/output polarity
0x5000380C C   FIELD 15w01 IOSWP (rw): swap functionality of MISO and MOSI pins When this bit is set, the function of MISO and MOSI pins alternate functions are inverted. Original MISO pin becomes MOSI and original MOSI pin becomes MISO.
0x5000380C C   FIELD 17w02 COMM (rw): SPI Communication Mode
0x5000380C C   FIELD 19w03 SP (rw): serial protocol others: reserved, must not be used
0x5000380C C   FIELD 22w01 MASTER (rw): SPI Master
0x5000380C C   FIELD 23w01 LSBFRST (rw): data frame format
0x5000380C C   FIELD 24w01 CPHA (rw): clock phase
0x5000380C C   FIELD 25w01 CPOL (rw): clock polarity
0x5000380C C   FIELD 26w01 SSM (rw): software management of SS signal input When master uses hardware SS output (SSM=0 and SSOE=1) the SS signal input is forced to not active state internally to prevent master mode fault error.
0x5000380C C   FIELD 28w01 SSIOP (rw): SS input/output polarity
0x5000380C C   FIELD 29w01 SSOE (rw): SS output enable This bit is taken into account in Master mode only
0x5000380C C   FIELD 30w01 SSOM (rw): SS output management in Master mode This bit is taken into account in Master mode when SSOE is enabled. It allows the SS output to be configured between two consecutive data transfers.
0x5000380C C   FIELD 31w01 AFCNTR (rw): alternate function GPIOs control This bit is taken into account when SPE=0 only When SPI has to be disabled temporary for a specific configuration reason (e.g. CRC reset, CPHA or HDDIR change) setting this bit prevents any glitches on the associated outputs configured at alternate function mode by keeping them forced at state corresponding the current SPI configuration.
0x50003810 B  REGISTER SPI_IER: 
0x50003810 C   FIELD 00w01 RXPIE (rw): RXP interrupt enable
0x50003810 C   FIELD 01w01 TXPIE (rw): TXP interrupt enable TXPIE is set by software and cleared by TXTF flag set event.
0x50003810 C   FIELD 02w01 DXPIE (rw): DXP interrupt enabled DXPIE is set by software and cleared by TXTF flag set event.
0x50003810 C   FIELD 03w01 EOTIE (rw): EOT, SUSP and TXC interrupt enable
0x50003810 C   FIELD 04w01 TXTFIE (rw): TXTFIE interrupt enable
0x50003810 C   FIELD 05w01 UDRIE (rw): UDR interrupt enable
0x50003810 C   FIELD 06w01 OVRIE (rw): OVR interrupt enable
0x50003810 C   FIELD 07w01 CRCEIE (rw): CRC error interrupt enable
0x50003810 C   FIELD 08w01 TIFREIE (rw): TIFRE interrupt enable
0x50003810 C   FIELD 09w01 MODFIE (rw): mode Fault interrupt enable
0x50003814 B  REGISTER SPI_SR: 
0x50003814 C   FIELD 00w01 RXP (ro): Rx-Packet available RXP flag is changed by hardware. It monitors number of overall data currently available at RxFIFO if SPI is enabled. It has to be checked once a data packet is completely read out from RxFIFO.
0x50003814 C   FIELD 01w01 TXP (ro): Tx-Packet space available TXP flag is changed by hardware. It monitors overall space currently available at TxFIFO no matter if SPI is enabled or not. It has to be checked once a complete data packet is stored at TxFIFO.
0x50003814 C   FIELD 02w01 DXP (ro): duplex packet DXP flag is set whenever both TXP and RXP flags are set regardless SPI mode.
0x50003814 C   FIELD 03w01 EOT (ro): end of transfer EOT is set by hardware as soon as a full transfer is complete, that is when TSIZE number of data have been transmitted and/or received on the SPI. EOT is cleared by software write 1 to EOTC bit at SPI_IFCR. EOT flag triggers an interrupt if EOTIE bit is set. If DXP flag is used until TXTF flag is set and DXPIE is cleared, EOT can be used to download the last packets contained into RxFIFO in one-shot. In master, EOT event terminates the data transaction and handles SS output optionally. When CRC is applied, the EOT event is extended over the CRC frame transaction. To restart the internal state machine properly, SPI is strongly suggested to be disabled and re-enabled before next transaction starts despite its setting is not changed.
0x50003814 C   FIELD 04w01 TXTF (ro): transmission transfer filled TXTF is set by hardware as soon as all of the data packets in a transfer have been submitted for transmission by application software or DMA, that is when TSIZE number of data have been pushed into the TxFIFO. This bit is cleared by software write 1 to TXTFC bit at SPI_IFCR TXTF flag triggers an interrupt if TXTFIE bit is set. TXTF setting clears the TXPIE and DXPIE masks so to off-load application software from calculating when to disable TXP and DXP interrupts.
0x50003814 C   FIELD 05w01 UDR (ro): underrun at slave transmission mode This bit is cleared by writing 1 to UDRC bit at SPI_IFCR Note: UDR flag applies to Slave mode only
0x50003814 C   FIELD 06w01 OVR (ro): overrun This bit is cleared by writing 1 to OVRC bit at SPI_IFCR
0x50003814 C   FIELD 07w01 CRCE (ro): CRC error This bit is cleared by writing 1 to CRCEC bit at SPI_IFCR
0x50003814 C   FIELD 08w01 TIFRE (ro): TI frame format error This bit is cleared by writing 1 to TIFREC bit at SPI_IFCR
0x50003814 C   FIELD 09w01 MODF (ro): mode fault This bit is cleared by writing 1 to MODFC bit at SPI_IFCR
0x50003814 C   FIELD 11w01 SUSP (ro): suspension status In Master mode, SUSP is set by hardware either as soon as the current frame is completed after CSUSP request is done or at master automatic suspend receive mode (MASRX bit is set at SPI_CR1 register) on RxFIFO full condition. SUSP generates an interrupt when EOTIE is set. This bit has to be cleared prior SPI is disabled by writing 1 to SUSPC bit at SPI_IFCR.
0x50003814 C   FIELD 12w01 TXC (ro): TxFIFO transmission complete The flag behavior depends on TSIZE setting. When TSIZE=0 the TXC is changed by hardware exclusively and it raises each time the TxFIFO becomes empty and there is no activity on the bus. If TSIZE <>0 there is no specific reason to monitor TXC as it just copies the EOT flag value including its software clearing. The TXC generates an interrupt when EOTIE is set.
0x50003814 C   FIELD 13w02 RXPLVL (ro): RxFIFO packing level When RXWNE=0 and data size is set up to 16-bit, the value gives number of remaining data frames persisting at RxFIFO. Note: (*): Optional value when data size is set up to 8-bit only. When data size is greater than 16-bit, these bits are always read as 00. In that consequence, the single data frame received at the FIFO cannot be detected neither by RWNE nor by RXPLVL bits if data size is set from 17 to 24 bits. The user then must apply other methods like TSIZE>0 or FTHLV=0.
0x50003814 C   FIELD 15w01 RXWNE (ro): RxFIFO word not empty Note: This bit value does not depend on DSIZE setting and keeps together with RXPLVL[1:0] information about RxFIFO occupancy by residual data.
0x50003814 C   FIELD 16w16 CTSIZE (ro): number of data frames remaining in current TSIZE session The value is not quite reliable when traffic is ongoing on bus or during autonomous operation at low-power mode. Note: CTSIZE[15:0] bits are not available at instances with limited set of features
0x50003818 B  REGISTER SPI_IFCR: 
0x50003818 C   FIELD 03w01 EOTC (wo): end of transfer flag clear Writing a 1 into this bit clears EOT flag in the SPI_SR register
0x50003818 C   FIELD 04w01 TXTFC (wo): transmission transfer filled flag clear Writing a 1 into this bit clears TXTF flag in the SPI_SR register
0x50003818 C   FIELD 05w01 UDRC (wo): underrun flag clear Writing a 1 into this bit clears UDR flag in the SPI_SR register
0x50003818 C   FIELD 06w01 OVRC (wo): overrun flag clear Writing a 1 into this bit clears OVR flag in the SPI_SR register
0x50003818 C   FIELD 07w01 CRCEC (wo): CRC error flag clear Writing a 1 into this bit clears CRCE flag in the SPI_SR register
0x50003818 C   FIELD 08w01 TIFREC (wo): TI frame format error flag clear Writing a 1 into this bit clears TIFRE flag in the SPI_SR register
0x50003818 C   FIELD 09w01 MODFC (wo): mode fault flag clear Writing a 1 into this bit clears MODF flag in the SPI_SR register
0x50003818 C   FIELD 11w01 SUSPC (wo): SUSPend flag clear Writing a 1 into this bit clears SUSP flag in the SPI_SR register
0x5000381C B  REGISTER SPI_AUTOCR: 
0x5000381C C   FIELD 16w04 TRIGSEL (rw): trigger selection (refer ). ... Note: these bits can be written only when SPE = 0.
0x5000381C C   FIELD 20w01 TRIGPOL (rw): trigger polarity Note: This bit can be written only when SPE = 0.
0x5000381C C   FIELD 21w01 TRIGEN (rw): trigger of CSTART control enable Note: if user can't prevent trigger event during write, the TRIGEN has to be changed when SPI is disabled
0x50003820 B  REGISTER SPI_TXDR: 
0x50003820 C   FIELD 00w32 TXDR (wo): transmit data register The register serves as an interface with TxFIFO. A write to it accesses TxFIFO. Note: data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is written by single access. halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be written by single access. word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be written by single access. Write access of this register less than the configured data size is forbidden.
0x50003830 B  REGISTER SPI_RXDR: 
0x50003830 C   FIELD 00w32 RXDR (ro): receive data register The register serves as an interface with RxFIFO. When it is read, RxFIFO is accessed. Note: data is always right-aligned. Unused bits are read as zero when the register is read. Writing to the register is ignored. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is read by single access halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be read by single access word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be read by single access. Read access of this register less than the configured data size is forbidden.
0x50003840 B  REGISTER SPI_CRCPOLY: SPI polynomial register
0x50003840 C   FIELD 00w32 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The default 9-bit polynomial setting 0x107 corresponds to default 8-bit setting of DSIZE. It is compatible with setting 0x07 used at some other ST products with fixed length of the polynomial string where the most significant bit of the string is always kept hidden. Length of the polynomial is given by the most significant bit of the value stored at this register. It has to be set greater than DSIZE. CRC33_17 bit has to be set additionally with CRCPOLY register when DSIZE is configured to maximum 32-bit or 16-bit size and CRC is enabled (to keep polynomial length grater than data size). Note: CRCPOLY[31:16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x50003844 B  REGISTER SPI_TXCRC: 
0x50003844 C   FIELD 00w32 TXCRC (ro): CRC register for transmitter When CRC calculation is enabled, the TXCRC[31:0] bits contain the computed CRC value of the subsequently transmitted bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. Note: TXCRC[31-16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x50003848 B  REGISTER SPI_RXCRC: 
0x50003848 C   FIELD 00w32 RXCRC (ro): CRC register for receiver When CRC calculation is enabled, the RXCRC[31:0] bits contain the computed CRC value of the subsequently received bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. RXCRC[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x5000384C B  REGISTER SPI_UDRDR: SPI underrun data register
0x5000384C C   FIELD 00w32 UDRDR (rw): data at slave underrun condition The register is taken into account in Slave mode and at underrun condition only. The number of bits considered depends on DSIZE bit settings of the SPI_CFG1 register. Underrun condition handling depends on setting UDRCFG bit at SPI_CFG1 register. Note: UDRDR[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constraint when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x50004400 A PERIPHERAL SEC_USART2
0x50004400 B  REGISTER CR1_disabled (rw): Control register 1
0x50004400 B  REGISTER CR1_enabled (rw): Control register 1
0x50004400 C   FIELD 00w01 UE: USART enable
0x50004400 C   FIELD 00w01 UE: USART enable
0x50004400 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50004400 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50004400 C   FIELD 02w01 RE: Receiver enable
0x50004400 C   FIELD 02w01 RE: Receiver enable
0x50004400 C   FIELD 03w01 TE: Transmitter enable
0x50004400 C   FIELD 03w01 TE: Transmitter enable
0x50004400 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50004400 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50004400 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50004400 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50004400 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50004400 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50004400 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50004400 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50004400 C   FIELD 08w01 PEIE: PE interrupt enable
0x50004400 C   FIELD 08w01 PEIE: PE interrupt enable
0x50004400 C   FIELD 09w01 PS: Parity selection
0x50004400 C   FIELD 09w01 PS: Parity selection
0x50004400 C   FIELD 10w01 PCE: Parity control enable
0x50004400 C   FIELD 10w01 PCE: Parity control enable
0x50004400 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50004400 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50004400 C   FIELD 12w01 M0: Word length
0x50004400 C   FIELD 12w01 M0: Word length
0x50004400 C   FIELD 13w01 MME: Mute mode enable
0x50004400 C   FIELD 13w01 MME: Mute mode enable
0x50004400 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50004400 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50004400 C   FIELD 15w01 OVER8: Oversampling mode
0x50004400 C   FIELD 15w01 OVER8: Oversampling mode
0x50004400 C   FIELD 16w05 DEDT: DEDT
0x50004400 C   FIELD 16w05 DEDT: DEDT
0x50004400 C   FIELD 21w05 DEAT: DEAT
0x50004400 C   FIELD 21w05 DEAT: DEAT
0x50004400 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x50004400 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x50004400 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x50004400 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x50004400 C   FIELD 28w01 M1: Word length
0x50004400 C   FIELD 28w01 M1: Word length
0x50004400 C   FIELD 29w01 FIFOEN: FIFOEN
0x50004400 C   FIELD 29w01 FIFOEN: FIFOEN
0x50004400 C   FIELD 30w01 TXFEIE: TXFEIE
0x50004400 C   FIELD 31w01 RXFFIE: RXFFIE
0x50004404 B  REGISTER CR2 (rw): Control register 2
0x50004404 C   FIELD 00w01 SLVEN: SLVEN
0x50004404 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x50004404 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x50004404 C   FIELD 05w01 LBDL: LIN break detection length
0x50004404 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x50004404 C   FIELD 08w01 LBCL: Last bit clock pulse
0x50004404 C   FIELD 09w01 CPHA: Clock phase
0x50004404 C   FIELD 10w01 CPOL: Clock polarity
0x50004404 C   FIELD 11w01 CLKEN: Clock enable
0x50004404 C   FIELD 12w02 STOP: STOP bits
0x50004404 C   FIELD 14w01 LINEN: LIN mode enable
0x50004404 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x50004404 C   FIELD 16w01 RXINV: RX pin active level inversion
0x50004404 C   FIELD 17w01 TXINV: TX pin active level inversion
0x50004404 C   FIELD 18w01 DATAINV: Binary data inversion
0x50004404 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x50004404 C   FIELD 20w01 ABREN: Auto baud rate enable
0x50004404 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x50004404 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x50004404 C   FIELD 24w08 ADD: Address of the USART node
0x50004408 B  REGISTER CR3 (rw): Control register 3
0x50004408 C   FIELD 00w01 EIE: Error interrupt enable
0x50004408 C   FIELD 01w01 IREN: Ir mode enable
0x50004408 C   FIELD 02w01 IRLP: Ir low-power
0x50004408 C   FIELD 03w01 HDSEL: Half-duplex selection
0x50004408 C   FIELD 04w01 NACK: Smartcard NACK enable
0x50004408 C   FIELD 05w01 SCEN: Smartcard mode enable
0x50004408 C   FIELD 06w01 DMAR: DMA enable receiver
0x50004408 C   FIELD 07w01 DMAT: DMA enable transmitter
0x50004408 C   FIELD 08w01 RTSE: RTS enable
0x50004408 C   FIELD 09w01 CTSE: CTS enable
0x50004408 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x50004408 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x50004408 C   FIELD 12w01 OVRDIS: Overrun Disable
0x50004408 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x50004408 C   FIELD 14w01 DEM: Driver enable mode
0x50004408 C   FIELD 15w01 DEP: Driver enable polarity selection
0x50004408 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x50004408 C   FIELD 23w01 TXFTIE: TXFTIE
0x50004408 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x50004408 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x50004408 C   FIELD 28w01 RXFTIE: RXFTIE
0x50004408 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x5000440C B  REGISTER BRR (rw): Baud rate register
0x5000440C C   FIELD 00w16 BRR: BRR
0x50004410 B  REGISTER GTPR (rw): Guard time and prescaler register
0x50004410 C   FIELD 00w08 PSC: Prescaler value
0x50004410 C   FIELD 08w08 GT: Guard time value
0x50004414 B  REGISTER RTOR (rw): Receiver timeout register
0x50004414 C   FIELD 00w24 RTO: Receiver timeout value
0x50004414 C   FIELD 24w08 BLEN: Block Length
0x50004418 B  REGISTER RQR (wo): Request register
0x50004418 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x50004418 C   FIELD 01w01 SBKRQ: Send break request
0x50004418 C   FIELD 02w01 MMRQ: Mute mode request
0x50004418 C   FIELD 03w01 RXFRQ: Receive data flush request
0x50004418 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x5000441C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x5000441C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x5000441C C   FIELD 00w01 PE: PE
0x5000441C C   FIELD 00w01 PE: PE
0x5000441C C   FIELD 01w01 FE: FE
0x5000441C C   FIELD 01w01 FE: FE
0x5000441C C   FIELD 02w01 NE: NE
0x5000441C C   FIELD 02w01 NE: NE
0x5000441C C   FIELD 03w01 ORE: ORE
0x5000441C C   FIELD 03w01 ORE: ORE
0x5000441C C   FIELD 04w01 IDLE: IDLE
0x5000441C C   FIELD 04w01 IDLE: IDLE
0x5000441C C   FIELD 05w01 RXFNE: RXFNE
0x5000441C C   FIELD 05w01 RXFNE: RXFNE
0x5000441C C   FIELD 06w01 TC: TC
0x5000441C C   FIELD 06w01 TC: TC
0x5000441C C   FIELD 07w01 TXFNF: TXFNF
0x5000441C C   FIELD 07w01 TXFNF: TXFNF
0x5000441C C   FIELD 08w01 LBDF: LBDF
0x5000441C C   FIELD 08w01 LBDF: LBDF
0x5000441C C   FIELD 09w01 CTSIF: CTSIF
0x5000441C C   FIELD 09w01 CTSIF: CTSIF
0x5000441C C   FIELD 10w01 CTS: CTS
0x5000441C C   FIELD 10w01 CTS: CTS
0x5000441C C   FIELD 11w01 RTOF: RTOF
0x5000441C C   FIELD 11w01 RTOF: RTOF
0x5000441C C   FIELD 12w01 EOBF: EOBF
0x5000441C C   FIELD 12w01 EOBF: EOBF
0x5000441C C   FIELD 13w01 UDR: UDR
0x5000441C C   FIELD 14w01 ABRE: ABRE
0x5000441C C   FIELD 14w01 ABRE: ABRE
0x5000441C C   FIELD 15w01 ABRF: ABRF
0x5000441C C   FIELD 15w01 ABRF: ABRF
0x5000441C C   FIELD 16w01 BUSY: BUSY
0x5000441C C   FIELD 16w01 BUSY: BUSY
0x5000441C C   FIELD 17w01 CMF: CMF
0x5000441C C   FIELD 17w01 CMF: CMF
0x5000441C C   FIELD 18w01 SBKF: SBKF
0x5000441C C   FIELD 18w01 SBKF: SBKF
0x5000441C C   FIELD 19w01 RWU: RWU
0x5000441C C   FIELD 19w01 RWU: RWU
0x5000441C C   FIELD 21w01 TEACK: TEACK
0x5000441C C   FIELD 21w01 TEACK: TEACK
0x5000441C C   FIELD 22w01 REACK: REACK
0x5000441C C   FIELD 22w01 REACK: REACK
0x5000441C C   FIELD 23w01 TXFE: TXFE
0x5000441C C   FIELD 24w01 RXFF: RXFF
0x5000441C C   FIELD 25w01 TCBGT: TCBGT
0x5000441C C   FIELD 25w01 TCBGT: TCBGT
0x5000441C C   FIELD 26w01 RXFT: RXFT
0x5000441C C   FIELD 27w01 TXFT: TXFT
0x50004420 B  REGISTER ICR (wo): Interrupt flag clear register
0x50004420 C   FIELD 00w01 PECF: Parity error clear flag
0x50004420 C   FIELD 01w01 FECF: Framing error clear flag
0x50004420 C   FIELD 02w01 NECF: Noise detected clear flag
0x50004420 C   FIELD 03w01 ORECF: Overrun error clear flag
0x50004420 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x50004420 C   FIELD 05w01 TXFECF: TXFECF
0x50004420 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x50004420 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x50004420 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x50004420 C   FIELD 09w01 CTSCF: CTS clear flag
0x50004420 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x50004420 C   FIELD 12w01 EOBCF: End of block clear flag
0x50004420 C   FIELD 13w01 UDRCF: UDRCF
0x50004420 C   FIELD 17w01 CMCF: Character match clear flag
0x50004424 B  REGISTER RDR (ro): Receive data register
0x50004424 C   FIELD 00w09 RDR: Receive data value
0x50004428 B  REGISTER TDR (rw): Transmit data register
0x50004428 C   FIELD 00w09 TDR: Transmit data value
0x5000442C B  REGISTER PRESC (rw): PRESC
0x5000442C C   FIELD 00w04 PRESCALER: PRESCALER
0x50004430 B  REGISTER AUTOCR (rw): AUTOCR
0x50004430 C   FIELD 00w16 TDN: TDN
0x50004430 C   FIELD 16w01 TRIGPOL: TRIPOL
0x50004430 C   FIELD 17w01 TRIGEN: TRIGEN
0x50004430 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x50004430 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x50004430 C   FIELD 31w01 TECLREN: TECLREN
0x50004800 A PERIPHERAL SEC_USART3
0x50004800 B  REGISTER CR1_disabled (rw): Control register 1
0x50004800 B  REGISTER CR1_enabled (rw): Control register 1
0x50004800 C   FIELD 00w01 UE: USART enable
0x50004800 C   FIELD 00w01 UE: USART enable
0x50004800 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50004800 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50004800 C   FIELD 02w01 RE: Receiver enable
0x50004800 C   FIELD 02w01 RE: Receiver enable
0x50004800 C   FIELD 03w01 TE: Transmitter enable
0x50004800 C   FIELD 03w01 TE: Transmitter enable
0x50004800 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50004800 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50004800 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50004800 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50004800 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50004800 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50004800 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50004800 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50004800 C   FIELD 08w01 PEIE: PE interrupt enable
0x50004800 C   FIELD 08w01 PEIE: PE interrupt enable
0x50004800 C   FIELD 09w01 PS: Parity selection
0x50004800 C   FIELD 09w01 PS: Parity selection
0x50004800 C   FIELD 10w01 PCE: Parity control enable
0x50004800 C   FIELD 10w01 PCE: Parity control enable
0x50004800 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50004800 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50004800 C   FIELD 12w01 M0: Word length
0x50004800 C   FIELD 12w01 M0: Word length
0x50004800 C   FIELD 13w01 MME: Mute mode enable
0x50004800 C   FIELD 13w01 MME: Mute mode enable
0x50004800 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50004800 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50004800 C   FIELD 15w01 OVER8: Oversampling mode
0x50004800 C   FIELD 15w01 OVER8: Oversampling mode
0x50004800 C   FIELD 16w05 DEDT: DEDT
0x50004800 C   FIELD 16w05 DEDT: DEDT
0x50004800 C   FIELD 21w05 DEAT: DEAT
0x50004800 C   FIELD 21w05 DEAT: DEAT
0x50004800 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x50004800 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x50004800 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x50004800 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x50004800 C   FIELD 28w01 M1: Word length
0x50004800 C   FIELD 28w01 M1: Word length
0x50004800 C   FIELD 29w01 FIFOEN: FIFOEN
0x50004800 C   FIELD 29w01 FIFOEN: FIFOEN
0x50004800 C   FIELD 30w01 TXFEIE: TXFEIE
0x50004800 C   FIELD 31w01 RXFFIE: RXFFIE
0x50004804 B  REGISTER CR2 (rw): Control register 2
0x50004804 C   FIELD 00w01 SLVEN: SLVEN
0x50004804 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x50004804 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x50004804 C   FIELD 05w01 LBDL: LIN break detection length
0x50004804 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x50004804 C   FIELD 08w01 LBCL: Last bit clock pulse
0x50004804 C   FIELD 09w01 CPHA: Clock phase
0x50004804 C   FIELD 10w01 CPOL: Clock polarity
0x50004804 C   FIELD 11w01 CLKEN: Clock enable
0x50004804 C   FIELD 12w02 STOP: STOP bits
0x50004804 C   FIELD 14w01 LINEN: LIN mode enable
0x50004804 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x50004804 C   FIELD 16w01 RXINV: RX pin active level inversion
0x50004804 C   FIELD 17w01 TXINV: TX pin active level inversion
0x50004804 C   FIELD 18w01 DATAINV: Binary data inversion
0x50004804 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x50004804 C   FIELD 20w01 ABREN: Auto baud rate enable
0x50004804 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x50004804 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x50004804 C   FIELD 24w08 ADD: Address of the USART node
0x50004808 B  REGISTER CR3 (rw): Control register 3
0x50004808 C   FIELD 00w01 EIE: Error interrupt enable
0x50004808 C   FIELD 01w01 IREN: Ir mode enable
0x50004808 C   FIELD 02w01 IRLP: Ir low-power
0x50004808 C   FIELD 03w01 HDSEL: Half-duplex selection
0x50004808 C   FIELD 04w01 NACK: Smartcard NACK enable
0x50004808 C   FIELD 05w01 SCEN: Smartcard mode enable
0x50004808 C   FIELD 06w01 DMAR: DMA enable receiver
0x50004808 C   FIELD 07w01 DMAT: DMA enable transmitter
0x50004808 C   FIELD 08w01 RTSE: RTS enable
0x50004808 C   FIELD 09w01 CTSE: CTS enable
0x50004808 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x50004808 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x50004808 C   FIELD 12w01 OVRDIS: Overrun Disable
0x50004808 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x50004808 C   FIELD 14w01 DEM: Driver enable mode
0x50004808 C   FIELD 15w01 DEP: Driver enable polarity selection
0x50004808 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x50004808 C   FIELD 23w01 TXFTIE: TXFTIE
0x50004808 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x50004808 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x50004808 C   FIELD 28w01 RXFTIE: RXFTIE
0x50004808 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x5000480C B  REGISTER BRR (rw): Baud rate register
0x5000480C C   FIELD 00w16 BRR: BRR
0x50004810 B  REGISTER GTPR (rw): Guard time and prescaler register
0x50004810 C   FIELD 00w08 PSC: Prescaler value
0x50004810 C   FIELD 08w08 GT: Guard time value
0x50004814 B  REGISTER RTOR (rw): Receiver timeout register
0x50004814 C   FIELD 00w24 RTO: Receiver timeout value
0x50004814 C   FIELD 24w08 BLEN: Block Length
0x50004818 B  REGISTER RQR (wo): Request register
0x50004818 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x50004818 C   FIELD 01w01 SBKRQ: Send break request
0x50004818 C   FIELD 02w01 MMRQ: Mute mode request
0x50004818 C   FIELD 03w01 RXFRQ: Receive data flush request
0x50004818 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x5000481C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x5000481C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x5000481C C   FIELD 00w01 PE: PE
0x5000481C C   FIELD 00w01 PE: PE
0x5000481C C   FIELD 01w01 FE: FE
0x5000481C C   FIELD 01w01 FE: FE
0x5000481C C   FIELD 02w01 NE: NE
0x5000481C C   FIELD 02w01 NE: NE
0x5000481C C   FIELD 03w01 ORE: ORE
0x5000481C C   FIELD 03w01 ORE: ORE
0x5000481C C   FIELD 04w01 IDLE: IDLE
0x5000481C C   FIELD 04w01 IDLE: IDLE
0x5000481C C   FIELD 05w01 RXFNE: RXFNE
0x5000481C C   FIELD 05w01 RXFNE: RXFNE
0x5000481C C   FIELD 06w01 TC: TC
0x5000481C C   FIELD 06w01 TC: TC
0x5000481C C   FIELD 07w01 TXFNF: TXFNF
0x5000481C C   FIELD 07w01 TXFNF: TXFNF
0x5000481C C   FIELD 08w01 LBDF: LBDF
0x5000481C C   FIELD 08w01 LBDF: LBDF
0x5000481C C   FIELD 09w01 CTSIF: CTSIF
0x5000481C C   FIELD 09w01 CTSIF: CTSIF
0x5000481C C   FIELD 10w01 CTS: CTS
0x5000481C C   FIELD 10w01 CTS: CTS
0x5000481C C   FIELD 11w01 RTOF: RTOF
0x5000481C C   FIELD 11w01 RTOF: RTOF
0x5000481C C   FIELD 12w01 EOBF: EOBF
0x5000481C C   FIELD 12w01 EOBF: EOBF
0x5000481C C   FIELD 13w01 UDR: UDR
0x5000481C C   FIELD 14w01 ABRE: ABRE
0x5000481C C   FIELD 14w01 ABRE: ABRE
0x5000481C C   FIELD 15w01 ABRF: ABRF
0x5000481C C   FIELD 15w01 ABRF: ABRF
0x5000481C C   FIELD 16w01 BUSY: BUSY
0x5000481C C   FIELD 16w01 BUSY: BUSY
0x5000481C C   FIELD 17w01 CMF: CMF
0x5000481C C   FIELD 17w01 CMF: CMF
0x5000481C C   FIELD 18w01 SBKF: SBKF
0x5000481C C   FIELD 18w01 SBKF: SBKF
0x5000481C C   FIELD 19w01 RWU: RWU
0x5000481C C   FIELD 19w01 RWU: RWU
0x5000481C C   FIELD 21w01 TEACK: TEACK
0x5000481C C   FIELD 21w01 TEACK: TEACK
0x5000481C C   FIELD 22w01 REACK: REACK
0x5000481C C   FIELD 22w01 REACK: REACK
0x5000481C C   FIELD 23w01 TXFE: TXFE
0x5000481C C   FIELD 24w01 RXFF: RXFF
0x5000481C C   FIELD 25w01 TCBGT: TCBGT
0x5000481C C   FIELD 25w01 TCBGT: TCBGT
0x5000481C C   FIELD 26w01 RXFT: RXFT
0x5000481C C   FIELD 27w01 TXFT: TXFT
0x50004820 B  REGISTER ICR (wo): Interrupt flag clear register
0x50004820 C   FIELD 00w01 PECF: Parity error clear flag
0x50004820 C   FIELD 01w01 FECF: Framing error clear flag
0x50004820 C   FIELD 02w01 NECF: Noise detected clear flag
0x50004820 C   FIELD 03w01 ORECF: Overrun error clear flag
0x50004820 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x50004820 C   FIELD 05w01 TXFECF: TXFECF
0x50004820 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x50004820 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x50004820 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x50004820 C   FIELD 09w01 CTSCF: CTS clear flag
0x50004820 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x50004820 C   FIELD 12w01 EOBCF: End of block clear flag
0x50004820 C   FIELD 13w01 UDRCF: UDRCF
0x50004820 C   FIELD 17w01 CMCF: Character match clear flag
0x50004824 B  REGISTER RDR (ro): Receive data register
0x50004824 C   FIELD 00w09 RDR: Receive data value
0x50004828 B  REGISTER TDR (rw): Transmit data register
0x50004828 C   FIELD 00w09 TDR: Transmit data value
0x5000482C B  REGISTER PRESC (rw): PRESC
0x5000482C C   FIELD 00w04 PRESCALER: PRESCALER
0x50004830 B  REGISTER AUTOCR (rw): AUTOCR
0x50004830 C   FIELD 00w16 TDN: TDN
0x50004830 C   FIELD 16w01 TRIGPOL: TRIPOL
0x50004830 C   FIELD 17w01 TRIGEN: TRIGEN
0x50004830 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x50004830 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x50004830 C   FIELD 31w01 TECLREN: TECLREN
0x50004C00 A PERIPHERAL SEC_UART4
0x50004C00 B  REGISTER CR1_disabled (rw): Control register 1
0x50004C00 B  REGISTER CR1_enabled (rw): Control register 1
0x50004C00 C   FIELD 00w01 UE: USART enable
0x50004C00 C   FIELD 00w01 UE: USART enable
0x50004C00 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50004C00 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50004C00 C   FIELD 02w01 RE: Receiver enable
0x50004C00 C   FIELD 02w01 RE: Receiver enable
0x50004C00 C   FIELD 03w01 TE: Transmitter enable
0x50004C00 C   FIELD 03w01 TE: Transmitter enable
0x50004C00 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50004C00 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50004C00 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50004C00 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50004C00 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50004C00 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50004C00 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50004C00 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50004C00 C   FIELD 08w01 PEIE: PE interrupt enable
0x50004C00 C   FIELD 08w01 PEIE: PE interrupt enable
0x50004C00 C   FIELD 09w01 PS: Parity selection
0x50004C00 C   FIELD 09w01 PS: Parity selection
0x50004C00 C   FIELD 10w01 PCE: Parity control enable
0x50004C00 C   FIELD 10w01 PCE: Parity control enable
0x50004C00 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50004C00 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50004C00 C   FIELD 12w01 M0: Word length
0x50004C00 C   FIELD 12w01 M0: Word length
0x50004C00 C   FIELD 13w01 MME: Mute mode enable
0x50004C00 C   FIELD 13w01 MME: Mute mode enable
0x50004C00 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50004C00 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50004C00 C   FIELD 15w01 OVER8: Oversampling mode
0x50004C00 C   FIELD 15w01 OVER8: Oversampling mode
0x50004C00 C   FIELD 16w05 DEDT: DEDT
0x50004C00 C   FIELD 16w05 DEDT: DEDT
0x50004C00 C   FIELD 21w05 DEAT: DEAT
0x50004C00 C   FIELD 21w05 DEAT: DEAT
0x50004C00 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x50004C00 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x50004C00 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x50004C00 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x50004C00 C   FIELD 28w01 M1: Word length
0x50004C00 C   FIELD 28w01 M1: Word length
0x50004C00 C   FIELD 29w01 FIFOEN: FIFOEN
0x50004C00 C   FIELD 29w01 FIFOEN: FIFOEN
0x50004C00 C   FIELD 30w01 TXFEIE: TXFEIE
0x50004C00 C   FIELD 31w01 RXFFIE: RXFFIE
0x50004C04 B  REGISTER CR2 (rw): Control register 2
0x50004C04 C   FIELD 00w01 SLVEN: SLVEN
0x50004C04 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x50004C04 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x50004C04 C   FIELD 05w01 LBDL: LIN break detection length
0x50004C04 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x50004C04 C   FIELD 08w01 LBCL: Last bit clock pulse
0x50004C04 C   FIELD 09w01 CPHA: Clock phase
0x50004C04 C   FIELD 10w01 CPOL: Clock polarity
0x50004C04 C   FIELD 11w01 CLKEN: Clock enable
0x50004C04 C   FIELD 12w02 STOP: STOP bits
0x50004C04 C   FIELD 14w01 LINEN: LIN mode enable
0x50004C04 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x50004C04 C   FIELD 16w01 RXINV: RX pin active level inversion
0x50004C04 C   FIELD 17w01 TXINV: TX pin active level inversion
0x50004C04 C   FIELD 18w01 DATAINV: Binary data inversion
0x50004C04 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x50004C04 C   FIELD 20w01 ABREN: Auto baud rate enable
0x50004C04 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x50004C04 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x50004C04 C   FIELD 24w08 ADD: Address of the USART node
0x50004C08 B  REGISTER CR3 (rw): Control register 3
0x50004C08 C   FIELD 00w01 EIE: Error interrupt enable
0x50004C08 C   FIELD 01w01 IREN: Ir mode enable
0x50004C08 C   FIELD 02w01 IRLP: Ir low-power
0x50004C08 C   FIELD 03w01 HDSEL: Half-duplex selection
0x50004C08 C   FIELD 04w01 NACK: Smartcard NACK enable
0x50004C08 C   FIELD 05w01 SCEN: Smartcard mode enable
0x50004C08 C   FIELD 06w01 DMAR: DMA enable receiver
0x50004C08 C   FIELD 07w01 DMAT: DMA enable transmitter
0x50004C08 C   FIELD 08w01 RTSE: RTS enable
0x50004C08 C   FIELD 09w01 CTSE: CTS enable
0x50004C08 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x50004C08 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x50004C08 C   FIELD 12w01 OVRDIS: Overrun Disable
0x50004C08 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x50004C08 C   FIELD 14w01 DEM: Driver enable mode
0x50004C08 C   FIELD 15w01 DEP: Driver enable polarity selection
0x50004C08 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x50004C08 C   FIELD 23w01 TXFTIE: TXFTIE
0x50004C08 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x50004C08 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x50004C08 C   FIELD 28w01 RXFTIE: RXFTIE
0x50004C08 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x50004C0C B  REGISTER BRR (rw): Baud rate register
0x50004C0C C   FIELD 00w16 BRR: BRR
0x50004C10 B  REGISTER GTPR (rw): Guard time and prescaler register
0x50004C10 C   FIELD 00w08 PSC: Prescaler value
0x50004C10 C   FIELD 08w08 GT: Guard time value
0x50004C14 B  REGISTER RTOR (rw): Receiver timeout register
0x50004C14 C   FIELD 00w24 RTO: Receiver timeout value
0x50004C14 C   FIELD 24w08 BLEN: Block Length
0x50004C18 B  REGISTER RQR (wo): Request register
0x50004C18 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x50004C18 C   FIELD 01w01 SBKRQ: Send break request
0x50004C18 C   FIELD 02w01 MMRQ: Mute mode request
0x50004C18 C   FIELD 03w01 RXFRQ: Receive data flush request
0x50004C18 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x50004C1C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x50004C1C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x50004C1C C   FIELD 00w01 PE: PE
0x50004C1C C   FIELD 00w01 PE: PE
0x50004C1C C   FIELD 01w01 FE: FE
0x50004C1C C   FIELD 01w01 FE: FE
0x50004C1C C   FIELD 02w01 NE: NE
0x50004C1C C   FIELD 02w01 NE: NE
0x50004C1C C   FIELD 03w01 ORE: ORE
0x50004C1C C   FIELD 03w01 ORE: ORE
0x50004C1C C   FIELD 04w01 IDLE: IDLE
0x50004C1C C   FIELD 04w01 IDLE: IDLE
0x50004C1C C   FIELD 05w01 RXFNE: RXFNE
0x50004C1C C   FIELD 05w01 RXFNE: RXFNE
0x50004C1C C   FIELD 06w01 TC: TC
0x50004C1C C   FIELD 06w01 TC: TC
0x50004C1C C   FIELD 07w01 TXFNF: TXFNF
0x50004C1C C   FIELD 07w01 TXFNF: TXFNF
0x50004C1C C   FIELD 08w01 LBDF: LBDF
0x50004C1C C   FIELD 08w01 LBDF: LBDF
0x50004C1C C   FIELD 09w01 CTSIF: CTSIF
0x50004C1C C   FIELD 09w01 CTSIF: CTSIF
0x50004C1C C   FIELD 10w01 CTS: CTS
0x50004C1C C   FIELD 10w01 CTS: CTS
0x50004C1C C   FIELD 11w01 RTOF: RTOF
0x50004C1C C   FIELD 11w01 RTOF: RTOF
0x50004C1C C   FIELD 12w01 EOBF: EOBF
0x50004C1C C   FIELD 12w01 EOBF: EOBF
0x50004C1C C   FIELD 13w01 UDR: UDR
0x50004C1C C   FIELD 14w01 ABRE: ABRE
0x50004C1C C   FIELD 14w01 ABRE: ABRE
0x50004C1C C   FIELD 15w01 ABRF: ABRF
0x50004C1C C   FIELD 15w01 ABRF: ABRF
0x50004C1C C   FIELD 16w01 BUSY: BUSY
0x50004C1C C   FIELD 16w01 BUSY: BUSY
0x50004C1C C   FIELD 17w01 CMF: CMF
0x50004C1C C   FIELD 17w01 CMF: CMF
0x50004C1C C   FIELD 18w01 SBKF: SBKF
0x50004C1C C   FIELD 18w01 SBKF: SBKF
0x50004C1C C   FIELD 19w01 RWU: RWU
0x50004C1C C   FIELD 19w01 RWU: RWU
0x50004C1C C   FIELD 21w01 TEACK: TEACK
0x50004C1C C   FIELD 21w01 TEACK: TEACK
0x50004C1C C   FIELD 22w01 REACK: REACK
0x50004C1C C   FIELD 22w01 REACK: REACK
0x50004C1C C   FIELD 23w01 TXFE: TXFE
0x50004C1C C   FIELD 24w01 RXFF: RXFF
0x50004C1C C   FIELD 25w01 TCBGT: TCBGT
0x50004C1C C   FIELD 25w01 TCBGT: TCBGT
0x50004C1C C   FIELD 26w01 RXFT: RXFT
0x50004C1C C   FIELD 27w01 TXFT: TXFT
0x50004C20 B  REGISTER ICR (wo): Interrupt flag clear register
0x50004C20 C   FIELD 00w01 PECF: Parity error clear flag
0x50004C20 C   FIELD 01w01 FECF: Framing error clear flag
0x50004C20 C   FIELD 02w01 NECF: Noise detected clear flag
0x50004C20 C   FIELD 03w01 ORECF: Overrun error clear flag
0x50004C20 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x50004C20 C   FIELD 05w01 TXFECF: TXFECF
0x50004C20 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x50004C20 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x50004C20 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x50004C20 C   FIELD 09w01 CTSCF: CTS clear flag
0x50004C20 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x50004C20 C   FIELD 12w01 EOBCF: End of block clear flag
0x50004C20 C   FIELD 13w01 UDRCF: UDRCF
0x50004C20 C   FIELD 17w01 CMCF: Character match clear flag
0x50004C24 B  REGISTER RDR (ro): Receive data register
0x50004C24 C   FIELD 00w09 RDR: Receive data value
0x50004C28 B  REGISTER TDR (rw): Transmit data register
0x50004C28 C   FIELD 00w09 TDR: Transmit data value
0x50004C2C B  REGISTER PRESC (rw): PRESC
0x50004C2C C   FIELD 00w04 PRESCALER: PRESCALER
0x50004C30 B  REGISTER AUTOCR (rw): AUTOCR
0x50004C30 C   FIELD 00w16 TDN: TDN
0x50004C30 C   FIELD 16w01 TRIGPOL: TRIPOL
0x50004C30 C   FIELD 17w01 TRIGEN: TRIGEN
0x50004C30 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x50004C30 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x50004C30 C   FIELD 31w01 TECLREN: TECLREN
0x50005000 A PERIPHERAL SEC_UART5
0x50005000 B  REGISTER CR1_disabled (rw): Control register 1
0x50005000 B  REGISTER CR1_enabled (rw): Control register 1
0x50005000 C   FIELD 00w01 UE: USART enable
0x50005000 C   FIELD 00w01 UE: USART enable
0x50005000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50005000 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50005000 C   FIELD 02w01 RE: Receiver enable
0x50005000 C   FIELD 02w01 RE: Receiver enable
0x50005000 C   FIELD 03w01 TE: Transmitter enable
0x50005000 C   FIELD 03w01 TE: Transmitter enable
0x50005000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50005000 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50005000 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50005000 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50005000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50005000 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50005000 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50005000 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50005000 C   FIELD 08w01 PEIE: PE interrupt enable
0x50005000 C   FIELD 08w01 PEIE: PE interrupt enable
0x50005000 C   FIELD 09w01 PS: Parity selection
0x50005000 C   FIELD 09w01 PS: Parity selection
0x50005000 C   FIELD 10w01 PCE: Parity control enable
0x50005000 C   FIELD 10w01 PCE: Parity control enable
0x50005000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50005000 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50005000 C   FIELD 12w01 M0: Word length
0x50005000 C   FIELD 12w01 M0: Word length
0x50005000 C   FIELD 13w01 MME: Mute mode enable
0x50005000 C   FIELD 13w01 MME: Mute mode enable
0x50005000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50005000 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50005000 C   FIELD 15w01 OVER8: Oversampling mode
0x50005000 C   FIELD 15w01 OVER8: Oversampling mode
0x50005000 C   FIELD 16w05 DEDT: DEDT
0x50005000 C   FIELD 16w05 DEDT: DEDT
0x50005000 C   FIELD 21w05 DEAT: DEAT
0x50005000 C   FIELD 21w05 DEAT: DEAT
0x50005000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x50005000 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x50005000 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x50005000 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x50005000 C   FIELD 28w01 M1: Word length
0x50005000 C   FIELD 28w01 M1: Word length
0x50005000 C   FIELD 29w01 FIFOEN: FIFOEN
0x50005000 C   FIELD 29w01 FIFOEN: FIFOEN
0x50005000 C   FIELD 30w01 TXFEIE: TXFEIE
0x50005000 C   FIELD 31w01 RXFFIE: RXFFIE
0x50005004 B  REGISTER CR2 (rw): Control register 2
0x50005004 C   FIELD 00w01 SLVEN: SLVEN
0x50005004 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x50005004 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x50005004 C   FIELD 05w01 LBDL: LIN break detection length
0x50005004 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x50005004 C   FIELD 08w01 LBCL: Last bit clock pulse
0x50005004 C   FIELD 09w01 CPHA: Clock phase
0x50005004 C   FIELD 10w01 CPOL: Clock polarity
0x50005004 C   FIELD 11w01 CLKEN: Clock enable
0x50005004 C   FIELD 12w02 STOP: STOP bits
0x50005004 C   FIELD 14w01 LINEN: LIN mode enable
0x50005004 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x50005004 C   FIELD 16w01 RXINV: RX pin active level inversion
0x50005004 C   FIELD 17w01 TXINV: TX pin active level inversion
0x50005004 C   FIELD 18w01 DATAINV: Binary data inversion
0x50005004 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x50005004 C   FIELD 20w01 ABREN: Auto baud rate enable
0x50005004 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x50005004 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x50005004 C   FIELD 24w08 ADD: Address of the USART node
0x50005008 B  REGISTER CR3 (rw): Control register 3
0x50005008 C   FIELD 00w01 EIE: Error interrupt enable
0x50005008 C   FIELD 01w01 IREN: Ir mode enable
0x50005008 C   FIELD 02w01 IRLP: Ir low-power
0x50005008 C   FIELD 03w01 HDSEL: Half-duplex selection
0x50005008 C   FIELD 04w01 NACK: Smartcard NACK enable
0x50005008 C   FIELD 05w01 SCEN: Smartcard mode enable
0x50005008 C   FIELD 06w01 DMAR: DMA enable receiver
0x50005008 C   FIELD 07w01 DMAT: DMA enable transmitter
0x50005008 C   FIELD 08w01 RTSE: RTS enable
0x50005008 C   FIELD 09w01 CTSE: CTS enable
0x50005008 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x50005008 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x50005008 C   FIELD 12w01 OVRDIS: Overrun Disable
0x50005008 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x50005008 C   FIELD 14w01 DEM: Driver enable mode
0x50005008 C   FIELD 15w01 DEP: Driver enable polarity selection
0x50005008 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x50005008 C   FIELD 23w01 TXFTIE: TXFTIE
0x50005008 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x50005008 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x50005008 C   FIELD 28w01 RXFTIE: RXFTIE
0x50005008 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x5000500C B  REGISTER BRR (rw): Baud rate register
0x5000500C C   FIELD 00w16 BRR: BRR
0x50005010 B  REGISTER GTPR (rw): Guard time and prescaler register
0x50005010 C   FIELD 00w08 PSC: Prescaler value
0x50005010 C   FIELD 08w08 GT: Guard time value
0x50005014 B  REGISTER RTOR (rw): Receiver timeout register
0x50005014 C   FIELD 00w24 RTO: Receiver timeout value
0x50005014 C   FIELD 24w08 BLEN: Block Length
0x50005018 B  REGISTER RQR (wo): Request register
0x50005018 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x50005018 C   FIELD 01w01 SBKRQ: Send break request
0x50005018 C   FIELD 02w01 MMRQ: Mute mode request
0x50005018 C   FIELD 03w01 RXFRQ: Receive data flush request
0x50005018 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x5000501C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x5000501C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x5000501C C   FIELD 00w01 PE: PE
0x5000501C C   FIELD 00w01 PE: PE
0x5000501C C   FIELD 01w01 FE: FE
0x5000501C C   FIELD 01w01 FE: FE
0x5000501C C   FIELD 02w01 NE: NE
0x5000501C C   FIELD 02w01 NE: NE
0x5000501C C   FIELD 03w01 ORE: ORE
0x5000501C C   FIELD 03w01 ORE: ORE
0x5000501C C   FIELD 04w01 IDLE: IDLE
0x5000501C C   FIELD 04w01 IDLE: IDLE
0x5000501C C   FIELD 05w01 RXFNE: RXFNE
0x5000501C C   FIELD 05w01 RXFNE: RXFNE
0x5000501C C   FIELD 06w01 TC: TC
0x5000501C C   FIELD 06w01 TC: TC
0x5000501C C   FIELD 07w01 TXFNF: TXFNF
0x5000501C C   FIELD 07w01 TXFNF: TXFNF
0x5000501C C   FIELD 08w01 LBDF: LBDF
0x5000501C C   FIELD 08w01 LBDF: LBDF
0x5000501C C   FIELD 09w01 CTSIF: CTSIF
0x5000501C C   FIELD 09w01 CTSIF: CTSIF
0x5000501C C   FIELD 10w01 CTS: CTS
0x5000501C C   FIELD 10w01 CTS: CTS
0x5000501C C   FIELD 11w01 RTOF: RTOF
0x5000501C C   FIELD 11w01 RTOF: RTOF
0x5000501C C   FIELD 12w01 EOBF: EOBF
0x5000501C C   FIELD 12w01 EOBF: EOBF
0x5000501C C   FIELD 13w01 UDR: UDR
0x5000501C C   FIELD 14w01 ABRE: ABRE
0x5000501C C   FIELD 14w01 ABRE: ABRE
0x5000501C C   FIELD 15w01 ABRF: ABRF
0x5000501C C   FIELD 15w01 ABRF: ABRF
0x5000501C C   FIELD 16w01 BUSY: BUSY
0x5000501C C   FIELD 16w01 BUSY: BUSY
0x5000501C C   FIELD 17w01 CMF: CMF
0x5000501C C   FIELD 17w01 CMF: CMF
0x5000501C C   FIELD 18w01 SBKF: SBKF
0x5000501C C   FIELD 18w01 SBKF: SBKF
0x5000501C C   FIELD 19w01 RWU: RWU
0x5000501C C   FIELD 19w01 RWU: RWU
0x5000501C C   FIELD 21w01 TEACK: TEACK
0x5000501C C   FIELD 21w01 TEACK: TEACK
0x5000501C C   FIELD 22w01 REACK: REACK
0x5000501C C   FIELD 22w01 REACK: REACK
0x5000501C C   FIELD 23w01 TXFE: TXFE
0x5000501C C   FIELD 24w01 RXFF: RXFF
0x5000501C C   FIELD 25w01 TCBGT: TCBGT
0x5000501C C   FIELD 25w01 TCBGT: TCBGT
0x5000501C C   FIELD 26w01 RXFT: RXFT
0x5000501C C   FIELD 27w01 TXFT: TXFT
0x50005020 B  REGISTER ICR (wo): Interrupt flag clear register
0x50005020 C   FIELD 00w01 PECF: Parity error clear flag
0x50005020 C   FIELD 01w01 FECF: Framing error clear flag
0x50005020 C   FIELD 02w01 NECF: Noise detected clear flag
0x50005020 C   FIELD 03w01 ORECF: Overrun error clear flag
0x50005020 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x50005020 C   FIELD 05w01 TXFECF: TXFECF
0x50005020 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x50005020 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x50005020 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x50005020 C   FIELD 09w01 CTSCF: CTS clear flag
0x50005020 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x50005020 C   FIELD 12w01 EOBCF: End of block clear flag
0x50005020 C   FIELD 13w01 UDRCF: UDRCF
0x50005020 C   FIELD 17w01 CMCF: Character match clear flag
0x50005024 B  REGISTER RDR (ro): Receive data register
0x50005024 C   FIELD 00w09 RDR: Receive data value
0x50005028 B  REGISTER TDR (rw): Transmit data register
0x50005028 C   FIELD 00w09 TDR: Transmit data value
0x5000502C B  REGISTER PRESC (rw): PRESC
0x5000502C C   FIELD 00w04 PRESCALER: PRESCALER
0x50005030 B  REGISTER AUTOCR (rw): AUTOCR
0x50005030 C   FIELD 00w16 TDN: TDN
0x50005030 C   FIELD 16w01 TRIGPOL: TRIPOL
0x50005030 C   FIELD 17w01 TRIGEN: TRIGEN
0x50005030 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x50005030 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x50005030 C   FIELD 31w01 TECLREN: TECLREN
0x50005400 A PERIPHERAL SEC_I2C1
0x50005400 B  REGISTER CR1 (rw): Control register 1
0x50005400 C   FIELD 00w01 PE: Peripheral enable
0x50005400 C   FIELD 01w01 TXIE: TX Interrupt enable
0x50005400 C   FIELD 02w01 RXIE: RX Interrupt enable
0x50005400 C   FIELD 03w01 ADDRIE: Address match interrupt enable (slave only)
0x50005400 C   FIELD 04w01 NACKIE: Not acknowledge received interrupt enable
0x50005400 C   FIELD 05w01 STOPIE: STOP detection Interrupt enable
0x50005400 C   FIELD 06w01 TCIE: Transfer Complete interrupt enable
0x50005400 C   FIELD 07w01 ERRIE: Error interrupts enable
0x50005400 C   FIELD 08w04 DNF: Digital noise filter
0x50005400 C   FIELD 12w01 ANFOFF: Analog noise filter OFF
0x50005400 C   FIELD 14w01 TXDMAEN: DMA transmission requests enable
0x50005400 C   FIELD 15w01 RXDMAEN: DMA reception requests enable
0x50005400 C   FIELD 16w01 SBC: Slave byte control
0x50005400 C   FIELD 17w01 NOSTRETCH: Clock stretching disable
0x50005400 C   FIELD 18w01 WUPEN: Wakeup from STOP enable
0x50005400 C   FIELD 19w01 GCEN: General call enable
0x50005400 C   FIELD 20w01 SMBHEN: SMBus Host address enable
0x50005400 C   FIELD 21w01 SMBDEN: SMBus Device Default address enable
0x50005400 C   FIELD 22w01 ALERTEN: SMBUS alert enable
0x50005400 C   FIELD 23w01 PECEN: PEC enable
0x50005400 C   FIELD 24w01 FMP: Fast-mode Plus 20 mA drive enable
0x50005400 C   FIELD 30w01 ADDRACLR: Address match flag (ADDR) automatic clear
0x50005400 C   FIELD 31w01 STOPFACLR: STOP detection flag (STOPF) automatic clear
0x50005404 B  REGISTER CR2 (rw): Control register 2
0x50005404 C   FIELD 00w10 SADD: Slave address bit (master mode)
0x50005404 C   FIELD 10w01 RD_WRN: Transfer direction (master mode)
0x50005404 C   FIELD 11w01 ADD10: 10-bit addressing mode (master mode)
0x50005404 C   FIELD 12w01 HEAD10R: 10-bit address header only read direction (master receiver mode)
0x50005404 C   FIELD 13w01 START: Start generation
0x50005404 C   FIELD 14w01 STOP: Stop generation (master mode)
0x50005404 C   FIELD 15w01 NACK: NACK generation (slave mode)
0x50005404 C   FIELD 16w08 NBYTES: Number of bytes
0x50005404 C   FIELD 24w01 RELOAD: NBYTES reload mode
0x50005404 C   FIELD 25w01 AUTOEND: Automatic end mode (master mode)
0x50005404 C   FIELD 26w01 PECBYTE: Packet error checking byte
0x50005408 B  REGISTER OAR1 (rw): Own address register 1
0x50005408 C   FIELD 00w10 OA1: Interface address
0x50005408 C   FIELD 10w01 OA1MODE: Own Address 1 10-bit mode
0x50005408 C   FIELD 15w01 OA1EN: Own Address 1 enable
0x5000540C B  REGISTER OAR2 (rw): Own address register 2
0x5000540C C   FIELD 01w07 OA2: Interface address
0x5000540C C   FIELD 08w03 OA2MSK: Own Address 2 masks
0x5000540C C   FIELD 15w01 OA2EN: Own Address 2 enable
0x50005410 B  REGISTER TIMINGR (rw): Timing register
0x50005410 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x50005410 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x50005410 C   FIELD 16w04 SDADEL: Data hold time
0x50005410 C   FIELD 20w04 SCLDEL: Data setup time
0x50005410 C   FIELD 28w04 PRESC: Timing prescaler
0x50005414 B  REGISTER TIMEOUTR (rw): Status register 1
0x50005414 C   FIELD 00w12 TIMEOUTA: Bus timeout A
0x50005414 C   FIELD 12w01 TIDLE: Idle clock timeout detection
0x50005414 C   FIELD 15w01 TIMOUTEN: Clock timeout enable
0x50005414 C   FIELD 16w12 TIMEOUTB: Bus timeout B
0x50005414 C   FIELD 31w01 TEXTEN: Extended clock timeout enable
0x50005418 B  REGISTER ISR: Interrupt and Status register
0x50005418 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x50005418 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x50005418 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x50005418 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x50005418 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x50005418 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x50005418 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x50005418 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x50005418 C   FIELD 08w01 BERR (ro): Bus error
0x50005418 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x50005418 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x50005418 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x50005418 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x50005418 C   FIELD 13w01 ALERT (ro): SMBus alert
0x50005418 C   FIELD 15w01 BUSY (ro): Bus busy
0x50005418 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode)
0x50005418 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x5000541C B  REGISTER ICR (wo): Interrupt clear register
0x5000541C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x5000541C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x5000541C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x5000541C C   FIELD 08w01 BERRCF: Bus error flag clear
0x5000541C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x5000541C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x5000541C C   FIELD 11w01 PECCF: PEC Error flag clear
0x5000541C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x5000541C C   FIELD 13w01 ALERTCF: Alert flag clear
0x50005420 B  REGISTER PECR (ro): PEC register
0x50005420 C   FIELD 00w08 PEC: Packet error checking register
0x50005424 B  REGISTER RXDR (ro): Receive data register
0x50005424 C   FIELD 00w08 RXDATA: 8-bit receive data
0x50005428 B  REGISTER TXDR (rw): Transmit data register
0x50005428 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x5000542C B  REGISTER I2C_AUTOCR (rw): I2C Autonomous mode control register
0x5000542C C   FIELD 06w01 TCDMAEN: DMA request enable on Transfer Complete event
0x5000542C C   FIELD 07w01 TCRDMAEN: DMA request enable on Transfer Complete Reload event
0x5000542C C   FIELD 16w04 TRIGSEL: Trigger selection
0x5000542C C   FIELD 20w01 TRIGPOL: Trigger polarity
0x5000542C C   FIELD 21w01 TRIGEN: Trigger enable
0x50005800 A PERIPHERAL SEC_I2C2
0x50005800 B  REGISTER CR1 (rw): Control register 1
0x50005800 C   FIELD 00w01 PE: Peripheral enable
0x50005800 C   FIELD 01w01 TXIE: TX Interrupt enable
0x50005800 C   FIELD 02w01 RXIE: RX Interrupt enable
0x50005800 C   FIELD 03w01 ADDRIE: Address match interrupt enable (slave only)
0x50005800 C   FIELD 04w01 NACKIE: Not acknowledge received interrupt enable
0x50005800 C   FIELD 05w01 STOPIE: STOP detection Interrupt enable
0x50005800 C   FIELD 06w01 TCIE: Transfer Complete interrupt enable
0x50005800 C   FIELD 07w01 ERRIE: Error interrupts enable
0x50005800 C   FIELD 08w04 DNF: Digital noise filter
0x50005800 C   FIELD 12w01 ANFOFF: Analog noise filter OFF
0x50005800 C   FIELD 14w01 TXDMAEN: DMA transmission requests enable
0x50005800 C   FIELD 15w01 RXDMAEN: DMA reception requests enable
0x50005800 C   FIELD 16w01 SBC: Slave byte control
0x50005800 C   FIELD 17w01 NOSTRETCH: Clock stretching disable
0x50005800 C   FIELD 18w01 WUPEN: Wakeup from STOP enable
0x50005800 C   FIELD 19w01 GCEN: General call enable
0x50005800 C   FIELD 20w01 SMBHEN: SMBus Host address enable
0x50005800 C   FIELD 21w01 SMBDEN: SMBus Device Default address enable
0x50005800 C   FIELD 22w01 ALERTEN: SMBUS alert enable
0x50005800 C   FIELD 23w01 PECEN: PEC enable
0x50005800 C   FIELD 24w01 FMP: Fast-mode Plus 20 mA drive enable
0x50005800 C   FIELD 30w01 ADDRACLR: Address match flag (ADDR) automatic clear
0x50005800 C   FIELD 31w01 STOPFACLR: STOP detection flag (STOPF) automatic clear
0x50005804 B  REGISTER CR2 (rw): Control register 2
0x50005804 C   FIELD 00w10 SADD: Slave address bit (master mode)
0x50005804 C   FIELD 10w01 RD_WRN: Transfer direction (master mode)
0x50005804 C   FIELD 11w01 ADD10: 10-bit addressing mode (master mode)
0x50005804 C   FIELD 12w01 HEAD10R: 10-bit address header only read direction (master receiver mode)
0x50005804 C   FIELD 13w01 START: Start generation
0x50005804 C   FIELD 14w01 STOP: Stop generation (master mode)
0x50005804 C   FIELD 15w01 NACK: NACK generation (slave mode)
0x50005804 C   FIELD 16w08 NBYTES: Number of bytes
0x50005804 C   FIELD 24w01 RELOAD: NBYTES reload mode
0x50005804 C   FIELD 25w01 AUTOEND: Automatic end mode (master mode)
0x50005804 C   FIELD 26w01 PECBYTE: Packet error checking byte
0x50005808 B  REGISTER OAR1 (rw): Own address register 1
0x50005808 C   FIELD 00w10 OA1: Interface address
0x50005808 C   FIELD 10w01 OA1MODE: Own Address 1 10-bit mode
0x50005808 C   FIELD 15w01 OA1EN: Own Address 1 enable
0x5000580C B  REGISTER OAR2 (rw): Own address register 2
0x5000580C C   FIELD 01w07 OA2: Interface address
0x5000580C C   FIELD 08w03 OA2MSK: Own Address 2 masks
0x5000580C C   FIELD 15w01 OA2EN: Own Address 2 enable
0x50005810 B  REGISTER TIMINGR (rw): Timing register
0x50005810 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x50005810 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x50005810 C   FIELD 16w04 SDADEL: Data hold time
0x50005810 C   FIELD 20w04 SCLDEL: Data setup time
0x50005810 C   FIELD 28w04 PRESC: Timing prescaler
0x50005814 B  REGISTER TIMEOUTR (rw): Status register 1
0x50005814 C   FIELD 00w12 TIMEOUTA: Bus timeout A
0x50005814 C   FIELD 12w01 TIDLE: Idle clock timeout detection
0x50005814 C   FIELD 15w01 TIMOUTEN: Clock timeout enable
0x50005814 C   FIELD 16w12 TIMEOUTB: Bus timeout B
0x50005814 C   FIELD 31w01 TEXTEN: Extended clock timeout enable
0x50005818 B  REGISTER ISR: Interrupt and Status register
0x50005818 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x50005818 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x50005818 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x50005818 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x50005818 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x50005818 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x50005818 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x50005818 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x50005818 C   FIELD 08w01 BERR (ro): Bus error
0x50005818 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x50005818 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x50005818 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x50005818 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x50005818 C   FIELD 13w01 ALERT (ro): SMBus alert
0x50005818 C   FIELD 15w01 BUSY (ro): Bus busy
0x50005818 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode)
0x50005818 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x5000581C B  REGISTER ICR (wo): Interrupt clear register
0x5000581C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x5000581C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x5000581C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x5000581C C   FIELD 08w01 BERRCF: Bus error flag clear
0x5000581C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x5000581C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x5000581C C   FIELD 11w01 PECCF: PEC Error flag clear
0x5000581C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x5000581C C   FIELD 13w01 ALERTCF: Alert flag clear
0x50005820 B  REGISTER PECR (ro): PEC register
0x50005820 C   FIELD 00w08 PEC: Packet error checking register
0x50005824 B  REGISTER RXDR (ro): Receive data register
0x50005824 C   FIELD 00w08 RXDATA: 8-bit receive data
0x50005828 B  REGISTER TXDR (rw): Transmit data register
0x50005828 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x5000582C B  REGISTER I2C_AUTOCR (rw): I2C Autonomous mode control register
0x5000582C C   FIELD 06w01 TCDMAEN: DMA request enable on Transfer Complete event
0x5000582C C   FIELD 07w01 TCRDMAEN: DMA request enable on Transfer Complete Reload event
0x5000582C C   FIELD 16w04 TRIGSEL: Trigger selection
0x5000582C C   FIELD 20w01 TRIGPOL: Trigger polarity
0x5000582C C   FIELD 21w01 TRIGEN: Trigger enable
0x50006000 A PERIPHERAL SEC_CRS
0x50006000 B  REGISTER CR (rw): control register
0x50006000 C   FIELD 00w01 SYNCOKIE: SYNC event OK interrupt enable
0x50006000 C   FIELD 01w01 SYNCWARNIE: SYNC warning interrupt enable
0x50006000 C   FIELD 02w01 ERRIE: Synchronization or trimming error interrupt enable
0x50006000 C   FIELD 03w01 ESYNCIE: Expected SYNC interrupt enable
0x50006000 C   FIELD 05w01 CEN: Frequency error counter enable
0x50006000 C   FIELD 06w01 AUTOTRIMEN: Automatic trimming enable
0x50006000 C   FIELD 07w01 SWSYNC: Generate software SYNC event
0x50006000 C   FIELD 08w07 TRIM: HSI48 oscillator smooth trimming
0x50006004 B  REGISTER CFGR (rw): configuration register
0x50006004 C   FIELD 00w16 RELOAD: Counter reload value
0x50006004 C   FIELD 16w08 FELIM: Frequency error limit
0x50006004 C   FIELD 24w03 SYNCDIV: SYNC divider
0x50006004 C   FIELD 28w02 SYNCSRC: SYNC signal source selection
0x50006004 C   FIELD 31w01 SYNCPOL: SYNC polarity selection
0x50006008 B  REGISTER ISR (ro): interrupt and status register
0x50006008 C   FIELD 00w01 SYNCOKF: SYNC event OK flag
0x50006008 C   FIELD 01w01 SYNCWARNF: SYNC warning flag
0x50006008 C   FIELD 02w01 ERRF: Error flag
0x50006008 C   FIELD 03w01 ESYNCF: Expected SYNC flag
0x50006008 C   FIELD 08w01 SYNCERR: SYNC error
0x50006008 C   FIELD 09w01 SYNCMISS: SYNC missed
0x50006008 C   FIELD 10w01 TRIMOVF: Trimming overflow or underflow
0x50006008 C   FIELD 15w01 FEDIR: Frequency error direction
0x50006008 C   FIELD 16w16 FECAP: Frequency error capture
0x5000600C B  REGISTER ICR (rw): interrupt flag clear register
0x5000600C C   FIELD 00w01 SYNCOKC: SYNC event OK clear flag
0x5000600C C   FIELD 01w01 SYNCWARNC: SYNC warning clear flag
0x5000600C C   FIELD 02w01 ERRC: Error clear flag
0x5000600C C   FIELD 03w01 ESYNCC: Expected SYNC clear flag
0x50008400 A PERIPHERAL SEC_I2C4
0x50008400 B  REGISTER CR1 (rw): Control register 1
0x50008400 C   FIELD 00w01 PE: Peripheral enable
0x50008400 C   FIELD 01w01 TXIE: TX Interrupt enable
0x50008400 C   FIELD 02w01 RXIE: RX Interrupt enable
0x50008400 C   FIELD 03w01 ADDRIE: Address match interrupt enable (slave only)
0x50008400 C   FIELD 04w01 NACKIE: Not acknowledge received interrupt enable
0x50008400 C   FIELD 05w01 STOPIE: STOP detection Interrupt enable
0x50008400 C   FIELD 06w01 TCIE: Transfer Complete interrupt enable
0x50008400 C   FIELD 07w01 ERRIE: Error interrupts enable
0x50008400 C   FIELD 08w04 DNF: Digital noise filter
0x50008400 C   FIELD 12w01 ANFOFF: Analog noise filter OFF
0x50008400 C   FIELD 14w01 TXDMAEN: DMA transmission requests enable
0x50008400 C   FIELD 15w01 RXDMAEN: DMA reception requests enable
0x50008400 C   FIELD 16w01 SBC: Slave byte control
0x50008400 C   FIELD 17w01 NOSTRETCH: Clock stretching disable
0x50008400 C   FIELD 18w01 WUPEN: Wakeup from STOP enable
0x50008400 C   FIELD 19w01 GCEN: General call enable
0x50008400 C   FIELD 20w01 SMBHEN: SMBus Host address enable
0x50008400 C   FIELD 21w01 SMBDEN: SMBus Device Default address enable
0x50008400 C   FIELD 22w01 ALERTEN: SMBUS alert enable
0x50008400 C   FIELD 23w01 PECEN: PEC enable
0x50008400 C   FIELD 24w01 FMP: Fast-mode Plus 20 mA drive enable
0x50008400 C   FIELD 30w01 ADDRACLR: Address match flag (ADDR) automatic clear
0x50008400 C   FIELD 31w01 STOPFACLR: STOP detection flag (STOPF) automatic clear
0x50008404 B  REGISTER CR2 (rw): Control register 2
0x50008404 C   FIELD 00w10 SADD: Slave address bit (master mode)
0x50008404 C   FIELD 10w01 RD_WRN: Transfer direction (master mode)
0x50008404 C   FIELD 11w01 ADD10: 10-bit addressing mode (master mode)
0x50008404 C   FIELD 12w01 HEAD10R: 10-bit address header only read direction (master receiver mode)
0x50008404 C   FIELD 13w01 START: Start generation
0x50008404 C   FIELD 14w01 STOP: Stop generation (master mode)
0x50008404 C   FIELD 15w01 NACK: NACK generation (slave mode)
0x50008404 C   FIELD 16w08 NBYTES: Number of bytes
0x50008404 C   FIELD 24w01 RELOAD: NBYTES reload mode
0x50008404 C   FIELD 25w01 AUTOEND: Automatic end mode (master mode)
0x50008404 C   FIELD 26w01 PECBYTE: Packet error checking byte
0x50008408 B  REGISTER OAR1 (rw): Own address register 1
0x50008408 C   FIELD 00w10 OA1: Interface address
0x50008408 C   FIELD 10w01 OA1MODE: Own Address 1 10-bit mode
0x50008408 C   FIELD 15w01 OA1EN: Own Address 1 enable
0x5000840C B  REGISTER OAR2 (rw): Own address register 2
0x5000840C C   FIELD 01w07 OA2: Interface address
0x5000840C C   FIELD 08w03 OA2MSK: Own Address 2 masks
0x5000840C C   FIELD 15w01 OA2EN: Own Address 2 enable
0x50008410 B  REGISTER TIMINGR (rw): Timing register
0x50008410 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x50008410 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x50008410 C   FIELD 16w04 SDADEL: Data hold time
0x50008410 C   FIELD 20w04 SCLDEL: Data setup time
0x50008410 C   FIELD 28w04 PRESC: Timing prescaler
0x50008414 B  REGISTER TIMEOUTR (rw): Status register 1
0x50008414 C   FIELD 00w12 TIMEOUTA: Bus timeout A
0x50008414 C   FIELD 12w01 TIDLE: Idle clock timeout detection
0x50008414 C   FIELD 15w01 TIMOUTEN: Clock timeout enable
0x50008414 C   FIELD 16w12 TIMEOUTB: Bus timeout B
0x50008414 C   FIELD 31w01 TEXTEN: Extended clock timeout enable
0x50008418 B  REGISTER ISR: Interrupt and Status register
0x50008418 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x50008418 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x50008418 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x50008418 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x50008418 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x50008418 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x50008418 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x50008418 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x50008418 C   FIELD 08w01 BERR (ro): Bus error
0x50008418 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x50008418 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x50008418 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x50008418 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x50008418 C   FIELD 13w01 ALERT (ro): SMBus alert
0x50008418 C   FIELD 15w01 BUSY (ro): Bus busy
0x50008418 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode)
0x50008418 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x5000841C B  REGISTER ICR (wo): Interrupt clear register
0x5000841C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x5000841C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x5000841C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x5000841C C   FIELD 08w01 BERRCF: Bus error flag clear
0x5000841C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x5000841C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x5000841C C   FIELD 11w01 PECCF: PEC Error flag clear
0x5000841C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x5000841C C   FIELD 13w01 ALERTCF: Alert flag clear
0x50008420 B  REGISTER PECR (ro): PEC register
0x50008420 C   FIELD 00w08 PEC: Packet error checking register
0x50008424 B  REGISTER RXDR (ro): Receive data register
0x50008424 C   FIELD 00w08 RXDATA: 8-bit receive data
0x50008428 B  REGISTER TXDR (rw): Transmit data register
0x50008428 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x5000842C B  REGISTER I2C_AUTOCR (rw): I2C Autonomous mode control register
0x5000842C C   FIELD 06w01 TCDMAEN: DMA request enable on Transfer Complete event
0x5000842C C   FIELD 07w01 TCRDMAEN: DMA request enable on Transfer Complete Reload event
0x5000842C C   FIELD 16w04 TRIGSEL: Trigger selection
0x5000842C C   FIELD 20w01 TRIGPOL: Trigger polarity
0x5000842C C   FIELD 21w01 TRIGEN: Trigger enable
0x50009400 A PERIPHERAL SEC_LPTIM2
0x50009400 B  REGISTER ISR_intput (ro): Interrupt and Status Register (intput mode)
0x50009400 B  REGISTER ISR_output (ro): Interrupt and Status Register (output mode)
0x50009400 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x50009400 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x50009400 C   FIELD 01w01 ARRM: Autoreload match
0x50009400 C   FIELD 01w01 ARRM: Autoreload match
0x50009400 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x50009400 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x50009400 C   FIELD 03w01 CMP1OK: Compare register 1 update OK
0x50009400 C   FIELD 04w01 ARROK: Autoreload register update OK
0x50009400 C   FIELD 04w01 ARROK: Autoreload register update OK
0x50009400 C   FIELD 05w01 UP: Counter direction change down to up
0x50009400 C   FIELD 05w01 UP: Counter direction change down to up
0x50009400 C   FIELD 06w01 DOWN: Counter direction change up to down
0x50009400 C   FIELD 06w01 DOWN: Counter direction change up to down
0x50009400 C   FIELD 07w01 UE: LPTIM update event occurred
0x50009400 C   FIELD 07w01 UE: LPTIM update event occurred
0x50009400 C   FIELD 08w01 REPOK: Repetition register update Ok
0x50009400 C   FIELD 08w01 REPOK: Repetition register update Ok
0x50009400 C   FIELD 09w01 CC2IF: Capture 2 interrupt flag
0x50009400 C   FIELD 09w01 CC2IF: Compare 2 interrupt flag
0x50009400 C   FIELD 12w01 CC1OF: Capture 1 over-capture flag
0x50009400 C   FIELD 13w01 CC2OF: Capture 2 over-capture flag
0x50009400 C   FIELD 19w01 CMP2OK: Compare register 2 update OK
0x50009400 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x50009400 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x50009404 B  REGISTER ICR_intput (wo): Interrupt Clear Register (intput mode)
0x50009404 B  REGISTER ICR_output (wo): Interrupt Clear Register (output mode)
0x50009404 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x50009404 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x50009404 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x50009404 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x50009404 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x50009404 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x50009404 C   FIELD 03w01 CMP1OKCF: Compare register 1 update OK Clear Flag
0x50009404 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x50009404 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x50009404 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x50009404 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x50009404 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x50009404 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x50009404 C   FIELD 07w01 UECF: Update event clear flag
0x50009404 C   FIELD 07w01 UECF: Update event clear flag
0x50009404 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x50009404 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x50009404 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x50009404 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x50009404 C   FIELD 12w01 CC1OCF: Capture/compare 1 over-capture clear flag
0x50009404 C   FIELD 13w01 CC2OCF: Capture/compare 2 over-capture clear flag
0x50009404 C   FIELD 19w01 CMP2OKCF: Compare register 2 update OK clear flag
0x50009404 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x50009404 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x50009408 B  REGISTER DIER_intput (rw): LPTIM interrupt Enable Register (intput mode)
0x50009408 B  REGISTER DIER_output (rw): LPTIM interrupt Enable Register (output mode)
0x50009408 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x50009408 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x50009408 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x50009408 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x50009408 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x50009408 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x50009408 C   FIELD 03w01 CMP1OKIE: Compare register 1 update OK Interrupt Enable
0x50009408 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x50009408 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x50009408 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x50009408 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x50009408 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x50009408 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x50009408 C   FIELD 07w01 UEIE: Update event interrupt enable
0x50009408 C   FIELD 07w01 UEIE: Update event interrupt enable
0x50009408 C   FIELD 08w01 REPOKIE: REPOKIE
0x50009408 C   FIELD 08w01 REPOKIE: REPOKIE
0x50009408 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x50009408 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x50009408 C   FIELD 12w01 CC1OIE: Capture/compare 1 over-capture interrupt enable
0x50009408 C   FIELD 13w01 CC2OIE: Capture/compare 2 over-capture interrupt enable
0x50009408 C   FIELD 16w01 CC1DE: Capture/compare 1 DMA request enable
0x50009408 C   FIELD 19w01 CMP2OKIE: Compare register 2 update OK interrupt enable
0x50009408 C   FIELD 23w01 UEDE: Update event DMA request enable
0x50009408 C   FIELD 25w01 CC2DE: Capture/compare 2 DMA request enable
0x5000940C B  REGISTER CFGR (rw): Configuration Register
0x5000940C C   FIELD 00w01 CKSEL: Clock selector
0x5000940C C   FIELD 01w02 CKPOL: Clock Polarity
0x5000940C C   FIELD 03w02 CKFLT: Configurable digital filter for external clock
0x5000940C C   FIELD 06w02 TRGFLT: Configurable digital filter for trigger
0x5000940C C   FIELD 09w03 PRESC: Clock prescaler
0x5000940C C   FIELD 13w03 TRIGSEL: Trigger selector
0x5000940C C   FIELD 17w02 TRIGEN: Trigger enable and polarity
0x5000940C C   FIELD 19w01 TIMOUT: Timeout enable
0x5000940C C   FIELD 20w01 WAVE: Waveform shape
0x5000940C C   FIELD 21w01 WAVPOL: Waveform shape polarity
0x5000940C C   FIELD 22w01 PRELOAD: Registers update mode
0x5000940C C   FIELD 23w01 COUNTMODE: counter mode enabled
0x5000940C C   FIELD 24w01 ENC: Encoder mode enable
0x50009410 B  REGISTER CR (rw): Control Register
0x50009410 C   FIELD 00w01 ENABLE: LPTIM Enable
0x50009410 C   FIELD 01w01 SNGSTRT: LPTIM start in single mode
0x50009410 C   FIELD 02w01 CNTSTRT: Timer start in continuous mode
0x50009410 C   FIELD 03w01 COUNTRST: Counter reset
0x50009410 C   FIELD 04w01 RSTARE: Reset after read enable
0x50009414 B  REGISTER CCR1 (rw): Compare Register
0x50009414 C   FIELD 00w16 CCR1: Capture/compare 1 value
0x50009418 B  REGISTER ARR (rw): Autoreload Register
0x50009418 C   FIELD 00w16 ARR: Auto reload value
0x5000941C B  REGISTER CNT (ro): Counter Register
0x5000941C C   FIELD 00w16 CNT: Counter value
0x50009424 B  REGISTER CFGR2 (rw): LPTIM configuration register 2
0x50009424 C   FIELD 00w02 IN1SEL: LPTIM input 1 selection
0x50009424 C   FIELD 04w02 IN2SEL: LPTIM input 2 selection
0x50009424 C   FIELD 16w02 IC1SEL: LPTIM input capture 1 selection
0x50009424 C   FIELD 20w02 IC2SEL: LPTIM input capture 2 selection
0x50009428 B  REGISTER RCR (rw): LPTIM repetition register
0x50009428 C   FIELD 00w08 REP: Repetition register value
0x5000942C B  REGISTER CCMR1 (rw): LPTIM capture/compare mode register 1
0x5000942C C   FIELD 00w01 CC1SEL: Capture/compare 1 selection
0x5000942C C   FIELD 01w01 CC1E: Capture/compare 1 output enable
0x5000942C C   FIELD 02w02 CC1P: Capture/compare 1 output polarity
0x5000942C C   FIELD 08w02 IC1PSC: Input capture 1 prescaler
0x5000942C C   FIELD 12w02 IC1F: Input capture 1 filter
0x5000942C C   FIELD 16w01 CC2SEL: Capture/compare 2 selection
0x5000942C C   FIELD 17w01 CC2E: Capture/compare 2 output enable
0x5000942C C   FIELD 18w02 CC2P: Capture/compare 2 output polarity
0x5000942C C   FIELD 24w02 IC2PSC: Input capture 2 prescaler
0x5000942C C   FIELD 28w02 IC2F: Input capture 2 filter
0x50009434 B  REGISTER CCR2 (rw): LPTIM Compare Register 2
0x50009434 C   FIELD 00w16 CCR2: Capture/compare 2 value
0x500097EC B  REGISTER HWCFGR2 (ro): LPTIM peripheral hardware configuration register 2
0x500097EC C   FIELD 00w04 CFG1: peripheral hardware configuration 1
0x500097EC C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x500097EC C   FIELD 16w01 CFG3: peripheral hardware configuration 3
0x500097F0 B  REGISTER HWCFGR1 (ro): LPTIM peripheral hardware configuration register 1
0x500097F0 C   FIELD 00w08 CFG1: peripheral hardware configuration 1
0x500097F0 C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x500097F0 C   FIELD 16w04 CFG3: peripheral hardware configuration 3
0x500097F0 C   FIELD 24w08 CFG4: peripheral hardware configuration 4
0x5000A400 A PERIPHERAL SEC_FDCAN1
0x5000A400 B  REGISTER FDCAN_CREL (ro): FDCAN Core Release Register
0x5000A400 C   FIELD 00w08 DAY: Timestamp Day
0x5000A400 C   FIELD 08w08 MON: Timestamp Month
0x5000A400 C   FIELD 16w04 YEAR: Timestamp Year
0x5000A400 C   FIELD 20w04 SUBSTEP: Sub-step of Core release
0x5000A400 C   FIELD 24w04 STEP: Step of Core release
0x5000A400 C   FIELD 28w04 REL: Core release
0x5000A404 B  REGISTER FDCAN_ENDN (ro): FDCAN endian register
0x5000A404 C   FIELD 00w32 ETV: Endiannes Test Value
0x5000A40C B  REGISTER FDCAN_DBTP (rw): FDCAN Data Bit Timing and Prescaler Register
0x5000A40C C   FIELD 00w04 DSJW: Synchronization Jump Width
0x5000A40C C   FIELD 04w04 DTSEG2: Data time segment after sample point
0x5000A40C C   FIELD 08w05 DTSEG1: Data time segment after sample point
0x5000A40C C   FIELD 16w05 DBRP: Data BIt Rate Prescaler
0x5000A40C C   FIELD 23w01 TDC: Transceiver Delay Compensation
0x5000A410 B  REGISTER FDCAN_TEST: FDCAN Test Register
0x5000A410 C   FIELD 04w01 LBCK (rw): Loop Back mode
0x5000A410 C   FIELD 05w02 TX (rw): Loop Back mode
0x5000A410 C   FIELD 07w01 RX (ro): Control of Transmit Pin
0x5000A414 B  REGISTER FDCAN_RWD: FDCAN RAM Watchdog Register
0x5000A414 C   FIELD 00w08 WDC (rw): Watchdog configuration
0x5000A414 C   FIELD 08w08 WDV (ro): Watchdog value
0x5000A418 B  REGISTER FDCAN_CCCR (rw): FDCAN CC Control Register
0x5000A418 C   FIELD 00w01 INIT: Initialization
0x5000A418 C   FIELD 01w01 CCE: Configuration Change Enable
0x5000A418 C   FIELD 02w01 ASM: ASM Restricted Operation Mode
0x5000A418 C   FIELD 03w01 CSA: Clock Stop Acknowledge
0x5000A418 C   FIELD 04w01 CSR: Clock Stop Request
0x5000A418 C   FIELD 05w01 MON: Bus Monitoring Mode
0x5000A418 C   FIELD 06w01 DAR: Disable Automatic Retransmission
0x5000A418 C   FIELD 07w01 TEST: Test Mode Enable
0x5000A418 C   FIELD 08w01 FDOE: FD Operation Enable
0x5000A418 C   FIELD 09w01 BRSE: FDCAN Bit Rate Switching
0x5000A418 C   FIELD 12w01 PXHD: Protocol Exception Handling Disable
0x5000A418 C   FIELD 13w01 EFBI: Edge Filtering during Bus Integration
0x5000A418 C   FIELD 14w01 TXP: TXP
0x5000A418 C   FIELD 15w01 NISO: Non ISO Operation
0x5000A41C B  REGISTER FDCAN_NBTP (rw): FDCAN Nominal Bit Timing and Prescaler Register
0x5000A41C C   FIELD 00w07 NTSEG2: Nominal Time segment after sample point
0x5000A41C C   FIELD 08w08 NTSEG1: Nominal Time segment before sample point
0x5000A41C C   FIELD 16w09 NBRP: Bit Rate Prescaler
0x5000A41C C   FIELD 25w07 NSJW: Nominal (Re)Synchronization Jump Width
0x5000A420 B  REGISTER FDCAN_TSCC (rw): FDCAN Timestamp Counter Configuration Register
0x5000A420 C   FIELD 00w02 TSS: Timestamp Select
0x5000A420 C   FIELD 16w04 TCP: Timestamp Counter Prescaler
0x5000A424 B  REGISTER FDCAN_TSCV (rw): FDCAN Timestamp Counter Value Register
0x5000A424 C   FIELD 00w16 TSC: Timestamp Counter
0x5000A428 B  REGISTER FDCAN_TOCC (rw): FDCAN Timeout Counter Configuration Register
0x5000A428 C   FIELD 00w01 ETOC: Enable Timeout Counter
0x5000A428 C   FIELD 01w02 TOS: Timeout Select
0x5000A428 C   FIELD 16w16 TOP: Timeout Period
0x5000A42C B  REGISTER FDCAN_TOCV (rw): FDCAN Timeout Counter Value Register
0x5000A42C C   FIELD 00w16 TOC: Timeout Counter
0x5000A440 B  REGISTER FDCAN_ECR: FDCAN Error Counter Register
0x5000A440 C   FIELD 00w08 TEC (ro): Transmit Error Counter
0x5000A440 C   FIELD 08w07 REC (ro): Receive Error Counter
0x5000A440 C   FIELD 15w01 RP (ro): Receive Error Passive
0x5000A440 C   FIELD 16w08 CEL (rw): AN Error Logging
0x5000A444 B  REGISTER FDCAN_PSR: FDCAN Protocol Status Register
0x5000A444 C   FIELD 00w03 LEC (rw): Last Error Code
0x5000A444 C   FIELD 03w02 ACT (ro): Activity
0x5000A444 C   FIELD 05w01 EP (ro): Error Passive
0x5000A444 C   FIELD 06w01 EW (ro): Warning Status
0x5000A444 C   FIELD 07w01 BO (ro): Bus_Off Status
0x5000A444 C   FIELD 08w03 DLEC (rw): Data Last Error Code
0x5000A444 C   FIELD 11w01 RESI (rw): ESI flag of last received FDCAN Message
0x5000A444 C   FIELD 12w01 RBRS (rw): BRS flag of last received FDCAN Message
0x5000A444 C   FIELD 13w01 REDL (rw): Received FDCAN Message
0x5000A444 C   FIELD 14w01 PXE (rw): Protocol Exception Event
0x5000A444 C   FIELD 16w07 TDCV (ro): Transmitter Delay Compensation Value
0x5000A448 B  REGISTER FDCAN_TDCR (rw): FDCAN Transmitter Delay Compensation Register
0x5000A448 C   FIELD 00w07 TDCF: Transmitter Delay Compensation Filter Window Length
0x5000A448 C   FIELD 08w07 TDCO: Transmitter Delay Compensation Offset
0x5000A450 B  REGISTER FDCAN_IR (rw): FDCAN Interrupt Register
0x5000A450 C   FIELD 00w01 RF0N: RF0N
0x5000A450 C   FIELD 01w01 RF0F: RF0F
0x5000A450 C   FIELD 02w01 RF0L: RF0L
0x5000A450 C   FIELD 03w01 RF1N: RF1N
0x5000A450 C   FIELD 04w01 RF1F: RF1F
0x5000A450 C   FIELD 05w01 RF1L: RF1L
0x5000A450 C   FIELD 06w01 HPM: HPM
0x5000A450 C   FIELD 07w01 TC: TC
0x5000A450 C   FIELD 08w01 TCF: TCF
0x5000A450 C   FIELD 09w01 TFE: TFE
0x5000A450 C   FIELD 10w01 TEFN: TEFN
0x5000A450 C   FIELD 11w01 TEFF: TEFF
0x5000A450 C   FIELD 12w01 TEFL: TEFL
0x5000A450 C   FIELD 13w01 TSW: TSW
0x5000A450 C   FIELD 14w01 MRAF: MRAF
0x5000A450 C   FIELD 15w01 TOO: TOO
0x5000A450 C   FIELD 16w01 ELO: ELO
0x5000A450 C   FIELD 17w01 EP: EP
0x5000A450 C   FIELD 18w01 EW: EW
0x5000A450 C   FIELD 19w01 BO: BO
0x5000A450 C   FIELD 20w01 WDI: WDI
0x5000A450 C   FIELD 21w01 PEA: PEA
0x5000A450 C   FIELD 22w01 PED: PED
0x5000A450 C   FIELD 23w01 ARA: ARA
0x5000A454 B  REGISTER FDCAN_IE (rw): FDCAN Interrupt Enable Register
0x5000A454 C   FIELD 00w01 RF0NE: Rx FIFO 0 New Message Enable
0x5000A454 C   FIELD 01w01 RF0FE: Rx FIFO 0 Full Enable
0x5000A454 C   FIELD 02w01 RF0LE: Rx FIFO 0 Message Lost Enable
0x5000A454 C   FIELD 03w01 RF1NE: Rx FIFO 1 New Message Enable
0x5000A454 C   FIELD 04w01 RF1FE: Rx FIFO 1 Watermark Reached Enable
0x5000A454 C   FIELD 05w01 RF1LE: Rx FIFO 1 Message Lost Enable
0x5000A454 C   FIELD 06w01 HPME: High Priority Message Enable
0x5000A454 C   FIELD 07w01 TCE: Transmission Completed Enable
0x5000A454 C   FIELD 08w01 TCFE: Transmission Cancellation Finished Enable
0x5000A454 C   FIELD 09w01 TEFE: Tx FIFO Empty Enable
0x5000A454 C   FIELD 10w01 TEFNE: Tx Event FIFO New Entry Enable
0x5000A454 C   FIELD 11w01 TEFFE: Tx Event FIFO Full Enable
0x5000A454 C   FIELD 12w01 TEFLE: Tx Event FIFO Element Lost Enable
0x5000A454 C   FIELD 13w01 TSWE: TSWE
0x5000A454 C   FIELD 14w01 MRAFE: Message RAM Access Failure Enable
0x5000A454 C   FIELD 15w01 TOOE: Timeout Occurred Enable
0x5000A454 C   FIELD 16w01 ELOE: Error Logging Overflow Enable
0x5000A454 C   FIELD 17w01 EPE: Error Passive Enable
0x5000A454 C   FIELD 18w01 EWE: Warning Status Enable
0x5000A454 C   FIELD 19w01 BOE: Bus_Off Status Enable
0x5000A454 C   FIELD 20w01 WDIE: Watchdog Interrupt Enable
0x5000A454 C   FIELD 21w01 PEAE: Protocol Error in Arbitration Phase Enable
0x5000A454 C   FIELD 22w01 PEDE: Protocol Error in Data Phase Enable
0x5000A454 C   FIELD 23w01 ARAE: Access to Reserved Address Enable
0x5000A458 B  REGISTER FDCAN_ILS (rw): FDCAN Interrupt Line Select Register
0x5000A458 C   FIELD 00w01 RxFIFO0: RxFIFO0
0x5000A458 C   FIELD 01w01 RxFIFO1: RxFIFO1
0x5000A458 C   FIELD 02w01 SMSG: SMSG
0x5000A458 C   FIELD 03w01 TFERR: TFERR
0x5000A458 C   FIELD 04w01 MISC: MISC
0x5000A458 C   FIELD 05w01 BERR: BERR
0x5000A458 C   FIELD 06w01 PERR: PERR
0x5000A45C B  REGISTER FDCAN_ILE (rw): FDCAN Interrupt Line Enable Register
0x5000A45C C   FIELD 00w01 EINT0: Enable Interrupt Line 0
0x5000A45C C   FIELD 01w01 EINT1: Enable Interrupt Line 1
0x5000A480 B  REGISTER FDCAN_RXGFC (rw): FDCAN Global Filter Configuration Register
0x5000A480 C   FIELD 00w01 RRFE: Reject Remote Frames Extended
0x5000A480 C   FIELD 01w01 RRFS: Reject Remote Frames Standard
0x5000A480 C   FIELD 02w02 ANFE: Accept Non-matching Frames Extended
0x5000A480 C   FIELD 04w02 ANFS: Accept Non-matching Frames Standard
0x5000A480 C   FIELD 08w01 F1OM: F1OM
0x5000A480 C   FIELD 09w01 F0OM: F0OM
0x5000A480 C   FIELD 16w05 LSS: LSS
0x5000A480 C   FIELD 24w04 LSE: LSE
0x5000A484 B  REGISTER FDCAN_XIDAM (rw): FDCAN Extended ID and Mask Register
0x5000A484 C   FIELD 00w29 EIDM: Extended ID Mask
0x5000A488 B  REGISTER FDCAN_HPMS (ro): FDCAN High Priority Message Status Register
0x5000A488 C   FIELD 00w03 BIDX: Buffer Index
0x5000A488 C   FIELD 06w02 MSI: Message Storage Indicator
0x5000A488 C   FIELD 08w05 FIDX: Filter Index
0x5000A488 C   FIELD 15w01 FLST: Filter List
0x5000A490 B  REGISTER FDCAN_RXF0S (ro): FDCAN Rx FIFO 0 Status Register
0x5000A490 C   FIELD 00w04 F0FL: Rx FIFO 0 Fill Level
0x5000A490 C   FIELD 08w02 F0GI: Rx FIFO 0 Get Index
0x5000A490 C   FIELD 16w02 F0PI: Rx FIFO 0 Put Index
0x5000A490 C   FIELD 24w01 F0F: Rx FIFO 0 Full
0x5000A490 C   FIELD 25w01 RF0L: Rx FIFO 0 Message Lost
0x5000A494 B  REGISTER FDCAN_RXF0A (rw): CAN Rx FIFO 0 Acknowledge Register
0x5000A494 C   FIELD 00w03 F0AI: Rx FIFO 0 Acknowledge Index
0x5000A498 B  REGISTER FDCAN_RXF1S (ro): FDCAN Rx FIFO 1 Status Register
0x5000A498 C   FIELD 00w04 F1FL: Rx FIFO 1 Fill Level
0x5000A498 C   FIELD 08w02 F1GI: Rx FIFO 1 Get Index
0x5000A498 C   FIELD 16w02 F1PI: Rx FIFO 1 Put Index
0x5000A498 C   FIELD 24w01 F1F: Rx FIFO 1 Full
0x5000A498 C   FIELD 25w01 RF1L: Rx FIFO 1 Message Lost
0x5000A49C B  REGISTER FDCAN_RXF1A (rw): FDCAN Rx FIFO 1 Acknowledge Register
0x5000A49C C   FIELD 00w03 F1AI: Rx FIFO 1 Acknowledge Index
0x5000A4C0 B  REGISTER FDCAN_TXBC (rw): FDCAN Tx buffer configuration register
0x5000A4C0 C   FIELD 24w01 TFQM: Tx FIFO/Queue Mode
0x5000A4C4 B  REGISTER FDCAN_TXFQS (ro): FDCAN Tx FIFO/Queue Status Register
0x5000A4C4 C   FIELD 00w03 TFFL: Tx FIFO Free Level
0x5000A4C4 C   FIELD 08w02 TFGI: TFGI
0x5000A4C4 C   FIELD 16w02 TFQPI: Tx FIFO/Queue Put Index
0x5000A4C4 C   FIELD 21w01 TFQF: Tx FIFO/Queue Full
0x5000A4C8 B  REGISTER FDCAN_TXBRP (ro): FDCAN Tx Buffer Request Pending Register
0x5000A4C8 C   FIELD 00w03 TRP: Transmission Request Pending
0x5000A4CC B  REGISTER FDCAN_TXBAR (rw): FDCAN Tx Buffer Add Request Register
0x5000A4CC C   FIELD 00w03 AR: Add Request
0x5000A4D0 B  REGISTER FDCAN_TXBCR (rw): FDCAN Tx Buffer Cancellation Request Register
0x5000A4D0 C   FIELD 00w03 CR: Cancellation Request
0x5000A4D4 B  REGISTER FDCAN_TXBTO (ro): FDCAN Tx Buffer Transmission Occurred Register
0x5000A4D4 C   FIELD 00w03 TO: Transmission Occurred.
0x5000A4D8 B  REGISTER FDCAN_TXBCF (ro): FDCAN Tx Buffer Cancellation Finished Register
0x5000A4D8 C   FIELD 00w03 CF: Cancellation Finished
0x5000A4DC B  REGISTER FDCAN_TXBTIE (rw): FDCAN Tx Buffer Transmission Interrupt Enable Register
0x5000A4DC C   FIELD 00w03 TIE: Transmission Interrupt Enable
0x5000A4E0 B  REGISTER FDCAN_TXBCIE (rw): FDCAN Tx Buffer Cancellation Finished Interrupt Enable Register
0x5000A4E0 C   FIELD 00w03 CFIE: Cancellation Finished Interrupt Enable
0x5000A4E4 B  REGISTER FDCAN_TXEFS (ro): FDCAN Tx Event FIFO Status Register
0x5000A4E4 C   FIELD 00w03 EFFL: Event FIFO Fill Level
0x5000A4E4 C   FIELD 08w02 EFGI: Event FIFO Get Index.
0x5000A4E4 C   FIELD 16w02 EFPI: Event FIFO Put Index
0x5000A4E4 C   FIELD 24w01 EFF: Event FIFO Full.
0x5000A4E4 C   FIELD 25w01 TEFL: Tx Event FIFO Element Lost.
0x5000A4E8 B  REGISTER FDCAN_TXEFA (rw): FDCAN Tx Event FIFO Acknowledge Register
0x5000A4E8 C   FIELD 00w02 EFAI: Event FIFO Acknowledge Index
0x5000A500 B  REGISTER FDCAN_CKDIV (rw): FDCAN CFG clock divider register
0x5000A500 C   FIELD 00w04 PDIV: PDIV
0x5000AC00 A PERIPHERAL SEC_FDCAN1_RAM
0x5000AC00 B  REGISTER FDCAN_CREL (ro): FDCAN Core Release Register
0x5000AC00 C   FIELD 00w08 DAY: Timestamp Day
0x5000AC00 C   FIELD 08w08 MON: Timestamp Month
0x5000AC00 C   FIELD 16w04 YEAR: Timestamp Year
0x5000AC00 C   FIELD 20w04 SUBSTEP: Sub-step of Core release
0x5000AC00 C   FIELD 24w04 STEP: Step of Core release
0x5000AC00 C   FIELD 28w04 REL: Core release
0x5000AC04 B  REGISTER FDCAN_ENDN (ro): FDCAN endian register
0x5000AC04 C   FIELD 00w32 ETV: Endiannes Test Value
0x5000AC0C B  REGISTER FDCAN_DBTP (rw): FDCAN Data Bit Timing and Prescaler Register
0x5000AC0C C   FIELD 00w04 DSJW: Synchronization Jump Width
0x5000AC0C C   FIELD 04w04 DTSEG2: Data time segment after sample point
0x5000AC0C C   FIELD 08w05 DTSEG1: Data time segment after sample point
0x5000AC0C C   FIELD 16w05 DBRP: Data BIt Rate Prescaler
0x5000AC0C C   FIELD 23w01 TDC: Transceiver Delay Compensation
0x5000AC10 B  REGISTER FDCAN_TEST: FDCAN Test Register
0x5000AC10 C   FIELD 04w01 LBCK (rw): Loop Back mode
0x5000AC10 C   FIELD 05w02 TX (rw): Loop Back mode
0x5000AC10 C   FIELD 07w01 RX (ro): Control of Transmit Pin
0x5000AC14 B  REGISTER FDCAN_RWD: FDCAN RAM Watchdog Register
0x5000AC14 C   FIELD 00w08 WDC (rw): Watchdog configuration
0x5000AC14 C   FIELD 08w08 WDV (ro): Watchdog value
0x5000AC18 B  REGISTER FDCAN_CCCR (rw): FDCAN CC Control Register
0x5000AC18 C   FIELD 00w01 INIT: Initialization
0x5000AC18 C   FIELD 01w01 CCE: Configuration Change Enable
0x5000AC18 C   FIELD 02w01 ASM: ASM Restricted Operation Mode
0x5000AC18 C   FIELD 03w01 CSA: Clock Stop Acknowledge
0x5000AC18 C   FIELD 04w01 CSR: Clock Stop Request
0x5000AC18 C   FIELD 05w01 MON: Bus Monitoring Mode
0x5000AC18 C   FIELD 06w01 DAR: Disable Automatic Retransmission
0x5000AC18 C   FIELD 07w01 TEST: Test Mode Enable
0x5000AC18 C   FIELD 08w01 FDOE: FD Operation Enable
0x5000AC18 C   FIELD 09w01 BRSE: FDCAN Bit Rate Switching
0x5000AC18 C   FIELD 12w01 PXHD: Protocol Exception Handling Disable
0x5000AC18 C   FIELD 13w01 EFBI: Edge Filtering during Bus Integration
0x5000AC18 C   FIELD 14w01 TXP: TXP
0x5000AC18 C   FIELD 15w01 NISO: Non ISO Operation
0x5000AC1C B  REGISTER FDCAN_NBTP (rw): FDCAN Nominal Bit Timing and Prescaler Register
0x5000AC1C C   FIELD 00w07 NTSEG2: Nominal Time segment after sample point
0x5000AC1C C   FIELD 08w08 NTSEG1: Nominal Time segment before sample point
0x5000AC1C C   FIELD 16w09 NBRP: Bit Rate Prescaler
0x5000AC1C C   FIELD 25w07 NSJW: Nominal (Re)Synchronization Jump Width
0x5000AC20 B  REGISTER FDCAN_TSCC (rw): FDCAN Timestamp Counter Configuration Register
0x5000AC20 C   FIELD 00w02 TSS: Timestamp Select
0x5000AC20 C   FIELD 16w04 TCP: Timestamp Counter Prescaler
0x5000AC24 B  REGISTER FDCAN_TSCV (rw): FDCAN Timestamp Counter Value Register
0x5000AC24 C   FIELD 00w16 TSC: Timestamp Counter
0x5000AC28 B  REGISTER FDCAN_TOCC (rw): FDCAN Timeout Counter Configuration Register
0x5000AC28 C   FIELD 00w01 ETOC: Enable Timeout Counter
0x5000AC28 C   FIELD 01w02 TOS: Timeout Select
0x5000AC28 C   FIELD 16w16 TOP: Timeout Period
0x5000AC2C B  REGISTER FDCAN_TOCV (rw): FDCAN Timeout Counter Value Register
0x5000AC2C C   FIELD 00w16 TOC: Timeout Counter
0x5000AC40 B  REGISTER FDCAN_ECR: FDCAN Error Counter Register
0x5000AC40 C   FIELD 00w08 TEC (ro): Transmit Error Counter
0x5000AC40 C   FIELD 08w07 REC (ro): Receive Error Counter
0x5000AC40 C   FIELD 15w01 RP (ro): Receive Error Passive
0x5000AC40 C   FIELD 16w08 CEL (rw): AN Error Logging
0x5000AC44 B  REGISTER FDCAN_PSR: FDCAN Protocol Status Register
0x5000AC44 C   FIELD 00w03 LEC (rw): Last Error Code
0x5000AC44 C   FIELD 03w02 ACT (ro): Activity
0x5000AC44 C   FIELD 05w01 EP (ro): Error Passive
0x5000AC44 C   FIELD 06w01 EW (ro): Warning Status
0x5000AC44 C   FIELD 07w01 BO (ro): Bus_Off Status
0x5000AC44 C   FIELD 08w03 DLEC (rw): Data Last Error Code
0x5000AC44 C   FIELD 11w01 RESI (rw): ESI flag of last received FDCAN Message
0x5000AC44 C   FIELD 12w01 RBRS (rw): BRS flag of last received FDCAN Message
0x5000AC44 C   FIELD 13w01 REDL (rw): Received FDCAN Message
0x5000AC44 C   FIELD 14w01 PXE (rw): Protocol Exception Event
0x5000AC44 C   FIELD 16w07 TDCV (ro): Transmitter Delay Compensation Value
0x5000AC48 B  REGISTER FDCAN_TDCR (rw): FDCAN Transmitter Delay Compensation Register
0x5000AC48 C   FIELD 00w07 TDCF: Transmitter Delay Compensation Filter Window Length
0x5000AC48 C   FIELD 08w07 TDCO: Transmitter Delay Compensation Offset
0x5000AC50 B  REGISTER FDCAN_IR (rw): FDCAN Interrupt Register
0x5000AC50 C   FIELD 00w01 RF0N: RF0N
0x5000AC50 C   FIELD 01w01 RF0F: RF0F
0x5000AC50 C   FIELD 02w01 RF0L: RF0L
0x5000AC50 C   FIELD 03w01 RF1N: RF1N
0x5000AC50 C   FIELD 04w01 RF1F: RF1F
0x5000AC50 C   FIELD 05w01 RF1L: RF1L
0x5000AC50 C   FIELD 06w01 HPM: HPM
0x5000AC50 C   FIELD 07w01 TC: TC
0x5000AC50 C   FIELD 08w01 TCF: TCF
0x5000AC50 C   FIELD 09w01 TFE: TFE
0x5000AC50 C   FIELD 10w01 TEFN: TEFN
0x5000AC50 C   FIELD 11w01 TEFF: TEFF
0x5000AC50 C   FIELD 12w01 TEFL: TEFL
0x5000AC50 C   FIELD 13w01 TSW: TSW
0x5000AC50 C   FIELD 14w01 MRAF: MRAF
0x5000AC50 C   FIELD 15w01 TOO: TOO
0x5000AC50 C   FIELD 16w01 ELO: ELO
0x5000AC50 C   FIELD 17w01 EP: EP
0x5000AC50 C   FIELD 18w01 EW: EW
0x5000AC50 C   FIELD 19w01 BO: BO
0x5000AC50 C   FIELD 20w01 WDI: WDI
0x5000AC50 C   FIELD 21w01 PEA: PEA
0x5000AC50 C   FIELD 22w01 PED: PED
0x5000AC50 C   FIELD 23w01 ARA: ARA
0x5000AC54 B  REGISTER FDCAN_IE (rw): FDCAN Interrupt Enable Register
0x5000AC54 C   FIELD 00w01 RF0NE: Rx FIFO 0 New Message Enable
0x5000AC54 C   FIELD 01w01 RF0FE: Rx FIFO 0 Full Enable
0x5000AC54 C   FIELD 02w01 RF0LE: Rx FIFO 0 Message Lost Enable
0x5000AC54 C   FIELD 03w01 RF1NE: Rx FIFO 1 New Message Enable
0x5000AC54 C   FIELD 04w01 RF1FE: Rx FIFO 1 Watermark Reached Enable
0x5000AC54 C   FIELD 05w01 RF1LE: Rx FIFO 1 Message Lost Enable
0x5000AC54 C   FIELD 06w01 HPME: High Priority Message Enable
0x5000AC54 C   FIELD 07w01 TCE: Transmission Completed Enable
0x5000AC54 C   FIELD 08w01 TCFE: Transmission Cancellation Finished Enable
0x5000AC54 C   FIELD 09w01 TEFE: Tx FIFO Empty Enable
0x5000AC54 C   FIELD 10w01 TEFNE: Tx Event FIFO New Entry Enable
0x5000AC54 C   FIELD 11w01 TEFFE: Tx Event FIFO Full Enable
0x5000AC54 C   FIELD 12w01 TEFLE: Tx Event FIFO Element Lost Enable
0x5000AC54 C   FIELD 13w01 TSWE: TSWE
0x5000AC54 C   FIELD 14w01 MRAFE: Message RAM Access Failure Enable
0x5000AC54 C   FIELD 15w01 TOOE: Timeout Occurred Enable
0x5000AC54 C   FIELD 16w01 ELOE: Error Logging Overflow Enable
0x5000AC54 C   FIELD 17w01 EPE: Error Passive Enable
0x5000AC54 C   FIELD 18w01 EWE: Warning Status Enable
0x5000AC54 C   FIELD 19w01 BOE: Bus_Off Status Enable
0x5000AC54 C   FIELD 20w01 WDIE: Watchdog Interrupt Enable
0x5000AC54 C   FIELD 21w01 PEAE: Protocol Error in Arbitration Phase Enable
0x5000AC54 C   FIELD 22w01 PEDE: Protocol Error in Data Phase Enable
0x5000AC54 C   FIELD 23w01 ARAE: Access to Reserved Address Enable
0x5000AC58 B  REGISTER FDCAN_ILS (rw): FDCAN Interrupt Line Select Register
0x5000AC58 C   FIELD 00w01 RxFIFO0: RxFIFO0
0x5000AC58 C   FIELD 01w01 RxFIFO1: RxFIFO1
0x5000AC58 C   FIELD 02w01 SMSG: SMSG
0x5000AC58 C   FIELD 03w01 TFERR: TFERR
0x5000AC58 C   FIELD 04w01 MISC: MISC
0x5000AC58 C   FIELD 05w01 BERR: BERR
0x5000AC58 C   FIELD 06w01 PERR: PERR
0x5000AC5C B  REGISTER FDCAN_ILE (rw): FDCAN Interrupt Line Enable Register
0x5000AC5C C   FIELD 00w01 EINT0: Enable Interrupt Line 0
0x5000AC5C C   FIELD 01w01 EINT1: Enable Interrupt Line 1
0x5000AC80 B  REGISTER FDCAN_RXGFC (rw): FDCAN Global Filter Configuration Register
0x5000AC80 C   FIELD 00w01 RRFE: Reject Remote Frames Extended
0x5000AC80 C   FIELD 01w01 RRFS: Reject Remote Frames Standard
0x5000AC80 C   FIELD 02w02 ANFE: Accept Non-matching Frames Extended
0x5000AC80 C   FIELD 04w02 ANFS: Accept Non-matching Frames Standard
0x5000AC80 C   FIELD 08w01 F1OM: F1OM
0x5000AC80 C   FIELD 09w01 F0OM: F0OM
0x5000AC80 C   FIELD 16w05 LSS: LSS
0x5000AC80 C   FIELD 24w04 LSE: LSE
0x5000AC84 B  REGISTER FDCAN_XIDAM (rw): FDCAN Extended ID and Mask Register
0x5000AC84 C   FIELD 00w29 EIDM: Extended ID Mask
0x5000AC88 B  REGISTER FDCAN_HPMS (ro): FDCAN High Priority Message Status Register
0x5000AC88 C   FIELD 00w03 BIDX: Buffer Index
0x5000AC88 C   FIELD 06w02 MSI: Message Storage Indicator
0x5000AC88 C   FIELD 08w05 FIDX: Filter Index
0x5000AC88 C   FIELD 15w01 FLST: Filter List
0x5000AC90 B  REGISTER FDCAN_RXF0S (ro): FDCAN Rx FIFO 0 Status Register
0x5000AC90 C   FIELD 00w04 F0FL: Rx FIFO 0 Fill Level
0x5000AC90 C   FIELD 08w02 F0GI: Rx FIFO 0 Get Index
0x5000AC90 C   FIELD 16w02 F0PI: Rx FIFO 0 Put Index
0x5000AC90 C   FIELD 24w01 F0F: Rx FIFO 0 Full
0x5000AC90 C   FIELD 25w01 RF0L: Rx FIFO 0 Message Lost
0x5000AC94 B  REGISTER FDCAN_RXF0A (rw): CAN Rx FIFO 0 Acknowledge Register
0x5000AC94 C   FIELD 00w03 F0AI: Rx FIFO 0 Acknowledge Index
0x5000AC98 B  REGISTER FDCAN_RXF1S (ro): FDCAN Rx FIFO 1 Status Register
0x5000AC98 C   FIELD 00w04 F1FL: Rx FIFO 1 Fill Level
0x5000AC98 C   FIELD 08w02 F1GI: Rx FIFO 1 Get Index
0x5000AC98 C   FIELD 16w02 F1PI: Rx FIFO 1 Put Index
0x5000AC98 C   FIELD 24w01 F1F: Rx FIFO 1 Full
0x5000AC98 C   FIELD 25w01 RF1L: Rx FIFO 1 Message Lost
0x5000AC9C B  REGISTER FDCAN_RXF1A (rw): FDCAN Rx FIFO 1 Acknowledge Register
0x5000AC9C C   FIELD 00w03 F1AI: Rx FIFO 1 Acknowledge Index
0x5000ACC0 B  REGISTER FDCAN_TXBC (rw): FDCAN Tx buffer configuration register
0x5000ACC0 C   FIELD 24w01 TFQM: Tx FIFO/Queue Mode
0x5000ACC4 B  REGISTER FDCAN_TXFQS (ro): FDCAN Tx FIFO/Queue Status Register
0x5000ACC4 C   FIELD 00w03 TFFL: Tx FIFO Free Level
0x5000ACC4 C   FIELD 08w02 TFGI: TFGI
0x5000ACC4 C   FIELD 16w02 TFQPI: Tx FIFO/Queue Put Index
0x5000ACC4 C   FIELD 21w01 TFQF: Tx FIFO/Queue Full
0x5000ACC8 B  REGISTER FDCAN_TXBRP (ro): FDCAN Tx Buffer Request Pending Register
0x5000ACC8 C   FIELD 00w03 TRP: Transmission Request Pending
0x5000ACCC B  REGISTER FDCAN_TXBAR (rw): FDCAN Tx Buffer Add Request Register
0x5000ACCC C   FIELD 00w03 AR: Add Request
0x5000ACD0 B  REGISTER FDCAN_TXBCR (rw): FDCAN Tx Buffer Cancellation Request Register
0x5000ACD0 C   FIELD 00w03 CR: Cancellation Request
0x5000ACD4 B  REGISTER FDCAN_TXBTO (ro): FDCAN Tx Buffer Transmission Occurred Register
0x5000ACD4 C   FIELD 00w03 TO: Transmission Occurred.
0x5000ACD8 B  REGISTER FDCAN_TXBCF (ro): FDCAN Tx Buffer Cancellation Finished Register
0x5000ACD8 C   FIELD 00w03 CF: Cancellation Finished
0x5000ACDC B  REGISTER FDCAN_TXBTIE (rw): FDCAN Tx Buffer Transmission Interrupt Enable Register
0x5000ACDC C   FIELD 00w03 TIE: Transmission Interrupt Enable
0x5000ACE0 B  REGISTER FDCAN_TXBCIE (rw): FDCAN Tx Buffer Cancellation Finished Interrupt Enable Register
0x5000ACE0 C   FIELD 00w03 CFIE: Cancellation Finished Interrupt Enable
0x5000ACE4 B  REGISTER FDCAN_TXEFS (ro): FDCAN Tx Event FIFO Status Register
0x5000ACE4 C   FIELD 00w03 EFFL: Event FIFO Fill Level
0x5000ACE4 C   FIELD 08w02 EFGI: Event FIFO Get Index.
0x5000ACE4 C   FIELD 16w02 EFPI: Event FIFO Put Index
0x5000ACE4 C   FIELD 24w01 EFF: Event FIFO Full.
0x5000ACE4 C   FIELD 25w01 TEFL: Tx Event FIFO Element Lost.
0x5000ACE8 B  REGISTER FDCAN_TXEFA (rw): FDCAN Tx Event FIFO Acknowledge Register
0x5000ACE8 C   FIELD 00w02 EFAI: Event FIFO Acknowledge Index
0x5000AD00 B  REGISTER FDCAN_CKDIV (rw): FDCAN CFG clock divider register
0x5000AD00 C   FIELD 00w04 PDIV: PDIV
0x5000DC00 A PERIPHERAL SEC_UCPD1
0x5000DC00 B  REGISTER UCPD_CFGR1: UCPD configuration register 1
0x5000DC00 C   FIELD 00w06 HBITCLKDIV (rw): Division ratio for producing half-bit clock The bitfield determines the division ratio (the bitfield value plus one) of a ucpd_clk divider producing half-bit clock (hbit_clk).
0x5000DC00 C   FIELD 06w05 IFRGAP (rw): Division ratio for producing inter-frame gap timer clock The bitfield determines the division ratio (the bitfield value minus one) of a ucpd_clk divider producing inter-frame gap timer clock (tInterFrameGap). The division ratio 15 is to apply for Tx clock at the USB PD 2.0 specification nominal value. The division ratios below 15 are to apply for Tx clock below nominal, and the division ratios above 15 for Tx clock above nominal.
0x5000DC00 C   FIELD 11w05 TRANSWIN (rw): Transition window duration The bitfield determines the division ratio (the bitfield value minus one) of a hbit_clk divider producing tTransitionWindow interval. Set a value that produces an interval of 12 to 20 us, taking into account the ucpd_clk frequency and the HBITCLKDIV[5:0] bitfield setting.
0x5000DC00 C   FIELD 17w03 PSC_USBPDCLK (rw): Pre-scaler division ratio for generating ucpd_clk The bitfield determines the division ratio of a kernel clock pre-scaler producing UCPD peripheral clock (ucpd_clk). It is recommended to use the pre-scaler so as to set the ucpd_clk frequency in the range from 6 to 9 MHz.
0x5000DC00 C   FIELD 20w09 RXORDSETEN (rw): Receiver ordered set enable The bitfield determines the types of ordered sets that the receiver must detect. When set/cleared, each bit enables/disables a specific function: 0bxxxxxxxx1: SOP detect enabled 0bxxxxxxx1x: SOP' detect enabled 0bxxxxxx1xx: SOP'' detect enabled 0bxxxxx1xxx: Hard Reset detect enabled 0bxxxx1xxxx: Cable Detect reset enabled 0bxxx1xxxxx: SOP'_Debug enabled 0bxx1xxxxxx: SOP''_Debug enabled 0bx1xxxxxxx: SOP extension#1 enabled 0b1xxxxxxxx: SOP extension#2 enabled
0x5000DC00 C   FIELD 29w01 TXDMAEN (rw): Transmission DMA mode enable When set, the bit enables DMA mode for transmission.
0x5000DC00 C   FIELD 30w01 RXDMAEN (rw): Reception DMA mode enable When set, the bit enables DMA mode for reception.
0x5000DC00 C   FIELD 31w01 UCPDEN (rw): UCPD peripheral enable General enable of the UCPD peripheral. Upon disabling, the peripheral instantly quits any ongoing activity and all control bits and bitfields default to their reset values. They must be set to their desired values each time the peripheral transits from disabled to enabled state.
0x5000DC04 B  REGISTER UCPD_CFGR2: UCPD configuration register 2
0x5000DC04 C   FIELD 00w01 RXFILTDIS (rw): BMC decoder Rx pre-filter enable The sampling clock is that of the receiver (that is, after pre-scaler).
0x5000DC04 C   FIELD 01w01 RXFILT2N3 (rw): BMC decoder Rx pre-filter sampling method Number of consistent consecutive samples before confirming a new value.
0x5000DC04 C   FIELD 02w01 FORCECLK (rw): Force ClkReq clock request
0x5000DC04 C   FIELD 03w01 WUPEN (rw): Wakeup from Stop mode enable Setting the bit enables the UCPD_ASYNC_INT signal.
0x5000DC08 B  REGISTER UCPD_CFGR3: UCPD configuration register 3
0x5000DC08 C   FIELD 00w04 TRIM1_NG_CCRPD (rw): SW trim value for RPD resistors on the CC1 line
0x5000DC08 C   FIELD 09w04 TRIM1_NG_CC3A0 (rw): SW trim value for Iref on the CC1 line
0x5000DC08 C   FIELD 16w04 TRIM2_NG_CCRPD (rw): SW trim value for RPD resistors on the CC2 line
0x5000DC08 C   FIELD 25w04 TRIM2_NG_CC3A0 (rw): SW trim value for Iref on the CC2 line
0x5000DC0C B  REGISTER UCPD_CR: UCPD control register
0x5000DC0C C   FIELD 00w02 TXMODE (rw): Type of Tx packet Writing the bitfield triggers the action as follows, depending on the value: Others: invalid From V1.1 of the USB PD specification, there is a counter defined for the duration of the BIST Carrier Mode 2. To quit this mode correctly (after the "tBISTContMode" delay), disable the peripheral (UCPDEN = 0).
0x5000DC0C C   FIELD 02w01 TXSEND (rw): Command to send a Tx packet The bit is cleared by hardware as soon as the packet transmission begins or is discarded.
0x5000DC0C C   FIELD 03w01 TXHRST (rw): Command to send a Tx Hard Reset The bit is cleared by hardware as soon as the message transmission begins or is discarded.
0x5000DC0C C   FIELD 04w01 RXMODE (rw): Receiver mode Determines the mode of the receiver. When the bit is set, RXORDSET behaves normally, RXDR no longer receives bytes yet the CRC checking still proceeds as for a normal message.
0x5000DC0C C   FIELD 05w01 PHYRXEN (rw): USB Power Delivery receiver enable Both CC1 and CC2 receivers are disabled when the bit is cleared. Only the CC receiver selected via the PHYCCSEL bit is enabled when the bit is set.
0x5000DC0C C   FIELD 06w01 PHYCCSEL (rw): CC1/CC2 line selector for USB Power Delivery signaling The selection depends on the cable orientation as discovered at attach.
0x5000DC0C C   FIELD 07w02 ANASUBMODE (rw): Analog PHY sub-mode Refer to TYPEC_VSTATE_CCx for the effect of this bitfield.
0x5000DC0C C   FIELD 09w01 ANAMODE (rw): Analog PHY operating mode The use of CC1 and CC2 depends on CCENABLE. Refer to ANAMODE, ANASUBMODE and link with TYPEC_VSTATE_CCx for the effect of this bitfield in conjunction with ANASUBMODE[1:0].
0x5000DC0C C   FIELD 10w02 CCENABLE (rw): CC line enable This bitfield enables CC1 and CC2 line analog PHYs (pull-ups and pull-downs) according to ANAMODE and ANASUBMODE[1:0] setting. A single line PHY can be enabled when, for example, the other line is driven by VCONN via an external VCONN switch. Enabling both PHYs is the normal usage for sink/source.
0x5000DC0C C   FIELD 13w01 CC1VCONNEN (rw): VCONN switch enable for CC1
0x5000DC0C C   FIELD 14w01 CC2VCONNEN (rw): VCONN switch enable for CC2
0x5000DC0C C   FIELD 16w01 FRSRXEN (rw): FRS event detection enable Setting the bit enables FRS Rx event (FRSEVT) detection on the CC line selected through the PHYCCSEL bit. 0: Disable Clear the bit when the device is attached to an FRS-incapable source/sink.
0x5000DC0C C   FIELD 17w01 FRSTX (rw): FRS Tx signaling enable. Setting the bit enables FRS Tx signaling. The bit is cleared by hardware after a delay respecting the USB Power Delivery specification Revision 3.0.
0x5000DC0C C   FIELD 18w01 RDCH (rw): Rdch condition drive The bit drives Rdch condition on the CC line selected through the PHYCCSEL bit (thus associated with VCONN), by remaining set during the source-only UnattachedWait.SRC state, to respect the Type-C state. Refer to "USB Type-C ECN for Source VCONN Discharge". The CCENABLE[1:0] bitfield must be set accordingly, too.
0x5000DC0C C   FIELD 20w01 CC1TCDIS (rw): CC1 Type-C detector disable The bit disables the Type-C detector on the CC1 line. When enabled, the Type-C detector for CC1 is configured through ANAMODE and ANASUBMODE[1:0].
0x5000DC0C C   FIELD 21w01 CC2TCDIS (rw): CC2 Type-C detector disable The bit disables the Type-C detector on the CC2 line. When enabled, the Type-C detector for CC2 is configured through ANAMODE and ANASUBMODE[1:0].
0x5000DC10 B  REGISTER UCPD_IMR: UCPD interrupt mask register
0x5000DC10 C   FIELD 00w01 TXISIE (rw): TXIS interrupt enable
0x5000DC10 C   FIELD 01w01 TXMSGDISCIE (rw): TXMSGDISC interrupt enable
0x5000DC10 C   FIELD 02w01 TXMSGSENTIE (rw): TXMSGSENT interrupt enable
0x5000DC10 C   FIELD 03w01 TXMSGABTIE (rw): TXMSGABT interrupt enable
0x5000DC10 C   FIELD 04w01 HRSTDISCIE (rw): HRSTDISC interrupt enable
0x5000DC10 C   FIELD 05w01 HRSTSENTIE (rw): HRSTSENT interrupt enable
0x5000DC10 C   FIELD 06w01 TXUNDIE (rw): TXUND interrupt enable
0x5000DC10 C   FIELD 08w01 RXNEIE (rw): RXNE interrupt enable
0x5000DC10 C   FIELD 09w01 RXORDDETIE (rw): RXORDDET interrupt enable
0x5000DC10 C   FIELD 10w01 RXHRSTDETIE (rw): RXHRSTDET interrupt enable
0x5000DC10 C   FIELD 11w01 RXOVRIE (rw): RXOVR interrupt enable
0x5000DC10 C   FIELD 12w01 RXMSGENDIE (rw): RXMSGEND interrupt enable
0x5000DC10 C   FIELD 14w01 TYPECEVT1IE (rw): TYPECEVT1 interrupt enable
0x5000DC10 C   FIELD 15w01 TYPECEVT2IE (rw): TYPECEVT2 interrupt enable
0x5000DC10 C   FIELD 20w01 FRSEVTIE (ro): FRSEVT interrupt enable
0x5000DC14 B  REGISTER UCPD_SR: UCPD status register
0x5000DC14 C   FIELD 00w01 TXIS (ro): Transmit interrupt status The flag indicates that the UCPD_TXDR register is empty and new data write is required (as the amount of data sent has not reached the payload size defined in the TXPAYSZ bitfield). The flag is cleared with the data write into the UCPD_TXDR register.
0x5000DC14 C   FIELD 01w01 TXMSGDISC (ro): Message transmission discarded The flag indicates that a message transmission was dropped. The flag is cleared by setting the TXMSGDISCCF bit. Transmission of a message can be dropped if there is a concurrent receive in progress or at excessive noise on the line. After a Tx message is discarded, the flag is only raised when the CC line becomes idle.
0x5000DC14 C   FIELD 02w01 TXMSGSENT (ro): Message transmission completed The flag indicates the completion of packet transmission. It is cleared by setting the TXMSGSENTCF bit. In the event of a message transmission interrupted by a Hard Reset, the flag is not raised.
0x5000DC14 C   FIELD 03w01 TXMSGABT (ro): Transmit message abort The flag indicates that a Tx message is aborted due to a subsequent Hard Reset message send request taking priority during transmit. It is cleared by setting the TXMSGABTCF bit.
0x5000DC14 C   FIELD 04w01 HRSTDISC (ro): Hard Reset discarded The flag indicates that the Hard Reset message is discarded. The flag is cleared by setting the HRSTDISCCF bit.
0x5000DC14 C   FIELD 05w01 HRSTSENT (ro): Hard Reset message sent The flag indicates that the Hard Reset message is sent. The flag is cleared by setting the HRSTSENTCF bit.
0x5000DC14 C   FIELD 06w01 TXUND (ro): Tx data underrun detection The flag indicates that the Tx data register (UCPD_TXDR) was not written in time for a transmit message to execute normally. It is cleared by setting the TXUNDCF bit.
0x5000DC14 C   FIELD 08w01 RXNE (ro): Receive data register not empty detection The flag indicates that the UCPD_RXDR register is not empty. It is automatically cleared upon reading UCPD_RXDR.
0x5000DC14 C   FIELD 09w01 RXORDDET (ro): Rx ordered set (4 K-codes) detection The flag indicates the detection of an ordered set. The relevant information is stored in the RXORDSET[2:0] bitfield of the UCPD_RX_ORDSET register. It is cleared by setting the RXORDDETCF bit.
0x5000DC14 C   FIELD 10w01 RXHRSTDET (ro): Rx Hard Reset receipt detection The flag indicates the receipt of valid Hard Reset message. It is cleared by setting the RXHRSTDETCF bit.
0x5000DC14 C   FIELD 11w01 RXOVR (ro): Rx data overflow detection The flag indicates Rx data buffer overflow. It is cleared by setting the RXOVRCF bit. The buffer overflow can occur if the received data are not read fast enough.
0x5000DC14 C   FIELD 12w01 RXMSGEND (ro): Rx message received The flag indicates whether a message (except Hard Reset message) has been received, regardless the CRC value. The flag is cleared by setting the RXMSGENDCF bit. The RXERR flag set when the RXMSGEND flag goes high indicates errors in the last-received message.
0x5000DC14 C   FIELD 13w01 RXERR (ro): Receive message error The flag indicates errors of the last Rx message declared (via RXMSGEND), such as incorrect CRC or truncated message (a line becoming static before EOP is met). It is asserted whenever the RXMSGEND flag is set.
0x5000DC14 C   FIELD 14w01 TYPECEVT1 (ro): Type-C voltage level event on CC1 line The flag indicates a change of the TYPEC_VSTATE_CC1[1:0] bitfield value, which corresponds to a new Type-C event. It is cleared by setting the TYPECEVT2CF bit.
0x5000DC14 C   FIELD 15w01 TYPECEVT2 (ro): Type-C voltage level event on CC2 line The flag indicates a change of the TYPEC_VSTATE_CC2[1:0] bitfield value, which corresponds to a new Type-C event. It is cleared by setting the TYPECEVT2CF bit.
0x5000DC14 C   FIELD 16w02 TYPEC_VSTATE_CC1 (ro): The status bitfield indicates the voltage level on the CC1 line in its steady state. The voltage variation on the CC1 line during USB PD messages due to the BMC PHY modulation does not impact the bitfield value.
0x5000DC14 C   FIELD 18w02 TYPEC_VSTATE_CC2 (ro): CC2 line voltage level The status bitfield indicates the voltage level on the CC2 line in its steady state. The voltage variation on the CC2 line during USB PD messages due to the BMC PHY modulation does not impact the bitfield value.
0x5000DC14 C   FIELD 20w01 FRSEVT (ro): FRS detection event The flag is cleared by setting the FRSEVTCF bit.
0x5000DC18 B  REGISTER UCPD_ICR: UCPD interrupt clear register
0x5000DC18 C   FIELD 01w01 TXMSGDISCCF (wo): Tx message discard flag (TXMSGDISC) clear Setting the bit clears the TXMSGDISC flag in the UCPD_SR register.
0x5000DC18 C   FIELD 02w01 TXMSGSENTCF (wo): Tx message send flag (TXMSGSENT) clear Setting the bit clears the TXMSGSENT flag in the UCPD_SR register.
0x5000DC18 C   FIELD 03w01 TXMSGABTCF (wo): Tx message abort flag (TXMSGABT) clear Setting the bit clears the TXMSGABT flag in the UCPD_SR register.
0x5000DC18 C   FIELD 04w01 HRSTDISCCF (wo): Hard reset discard flag (HRSTDISC) clear Setting the bit clears the HRSTDISC flag in the UCPD_SR register.
0x5000DC18 C   FIELD 05w01 HRSTSENTCF (wo): Hard reset send flag (HRSTSENT) clear Setting the bit clears the HRSTSENT flag in the UCPD_SR register.
0x5000DC18 C   FIELD 06w01 TXUNDCF (wo): Tx underflow flag (TXUND) clear Setting the bit clears the TXUND flag in the UCPD_SR register.
0x5000DC18 C   FIELD 09w01 RXORDDETCF (wo): Rx ordered set detect flag (RXORDDET) clear Setting the bit clears the RXORDDET flag in the UCPD_SR register.
0x5000DC18 C   FIELD 10w01 RXHRSTDETCF (wo): Rx Hard Reset detect flag (RXHRSTDET) clear Setting the bit clears the RXHRSTDET flag in the UCPD_SR register.
0x5000DC18 C   FIELD 11w01 RXOVRCF (wo): Rx overflow flag (RXOVR) clear Setting the bit clears the RXOVR flag in the UCPD_SR register.
0x5000DC18 C   FIELD 12w01 RXMSGENDCF (wo): Rx message received flag (RXMSGEND) clear Setting the bit clears the RXMSGEND flag in the UCPD_SR register.
0x5000DC18 C   FIELD 14w01 TYPECEVT1CF (wo): Type-C CC1 event flag (TYPECEVT1) clear Setting the bit clears the TYPECEVT1 flag in the UCPD_SR register
0x5000DC18 C   FIELD 15w01 TYPECEVT2CF (wo): Type-C CC2 line event flag (TYPECEVT2) clear Setting the bit clears the TYPECEVT2 flag in the UCPD_SR register
0x5000DC18 C   FIELD 20w01 FRSEVTCF (wo): FRS event flag (FRSEVT) clear Setting the bit clears the FRSEVT flag in the UCPD_SR register.
0x5000DC1C B  REGISTER UCPD_TX_ORDSETR: UCPD Tx ordered set type register
0x5000DC1C C   FIELD 00w20 TXORDSET (rw): Ordered set to transmit The bitfield determines a full 20-bit sequence to transmit, consisting of four K-codes, each of five bits, defining the packet to transmit. The bit 0 (bit 0 of K-code1) is the first, the bit 19 (bit 4 of K‑code4) the last.
0x5000DC20 B  REGISTER UCPD_TX_PAYSZR: UCPD Tx payload size register
0x5000DC20 C   FIELD 00w10 TXPAYSZ (rw): Payload size yet to transmit The bitfield is modified by software and by hardware. It contains the number of bytes of a payload (including header but excluding CRC) yet to transmit: each time a data byte is written into the UCPD_TXDR register, the bitfield value decrements and the TXIS bit is set, except when the bitfield value reaches zero. The enumerated values are standard payload sizes before the start of transmission.
0x5000DC24 B  REGISTER UCPD_TXDR: UCPD Tx data register
0x5000DC24 C   FIELD 00w08 TXDATA (rw): Data byte to transmit
0x5000DC28 B  REGISTER UCPD_RX_ORDSETR: 
0x5000DC28 C   FIELD 00w03 RXORDSET (ro): Rx ordered set code detected
0x5000DC28 C   FIELD 03w01 RXSOP3OF4 (ro): The bit indicates the number of correct K‑codes. For debug purposes only.
0x5000DC28 C   FIELD 04w03 RXSOPKINVALID (ro): The bitfield is for debug purposes only. Others: Invalid
0x5000DC2C B  REGISTER UCPD_RX_PAYSZR: 
0x5000DC2C C   FIELD 00w10 RXPAYSZ (ro): Rx payload size received This bitfield contains the number of bytes of a payload (including header but excluding CRC) received: each time a new data byte is received in the UCPD_RXDR register, the bitfield value increments and the RXMSGEND flag is set (and an interrupt generated if enabled). The bitfield may return a spurious value when a byte reception is ongoing (the RXMSGEND flag is low).
0x5000DC30 B  REGISTER UCPD_RXDR: 
0x5000DC30 C   FIELD 00w08 RXDATA (ro): Data byte received
0x5000DC34 B  REGISTER UCPD_RX_ORDEXTR1: UCPD Rx ordered set extension register 1
0x5000DC34 C   FIELD 00w20 RXSOPX1 (rw): Ordered set 1 received The bitfield contains a full 20-bit sequence received, consisting of four K‑codes, each of five bits. The bit 0 (bit 0 of K‑code1) is receive first, the bit 19 (bit 4 of K‑code4) last.
0x5000DC38 B  REGISTER UCPD_RX_ORDEXTR2: UCPD Rx ordered set extension register 2
0x5000DC38 C   FIELD 00w20 RXSOPX2 (rw): Ordered set 2 received The bitfield contains a full 20-bit sequence received, consisting of four K‑codes, each of five bits. The bit 0 (bit 0 of K‑code1) is receive first, the bit 19 (bit 4 of K‑code4) last.
0x50012C00 A PERIPHERAL SEC_TIM1
0x50012C00 B  REGISTER TIM1_CR1: TIM1 control register 1
0x50012C00 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock, gated mode and encoder mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x50012C00 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x50012C00 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x50012C00 C   FIELD 03w01 OPM (rw): One pulse mode
0x50012C00 C   FIELD 04w01 DIR (rw): Direction Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder mode.
0x50012C00 C   FIELD 05w02 CMS (rw): Center-aligned mode selection Note: It is not allowed to switch from edge-aligned mode to center-aligned mode as long as the counter is enabled (CEN=1)
0x50012C00 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x50012C00 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (tim_ker_ck) frequency and the dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters (tim_etr_in, tim_tix),
0x50012C00 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x50012C00 C   FIELD 12w01 DITHEN (rw): Dithering enable Note: The DITHEN bit can only be modified when CEN bit is reset.
0x50012C04 B  REGISTER TIM1_CR2 (rw): control register 2
0x50012C04 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x50012C04 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x50012C04 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50012C04 C   FIELD 04w03 MMS0_2: Master mode selection
0x50012C04 C   FIELD 07w01 TI1S: TI1 selection
0x50012C04 C   FIELD 08w01 OIS1: Output Idle state 1
0x50012C04 C   FIELD 09w01 OIS1N: Output Idle state 1
0x50012C04 C   FIELD 10w01 OIS2: Output Idle state 2
0x50012C04 C   FIELD 11w01 OIS2N: Output Idle state 2
0x50012C04 C   FIELD 12w01 OIS3: Output Idle state 3
0x50012C04 C   FIELD 13w01 OIS3N: Output Idle state 3
0x50012C04 C   FIELD 14w01 OIS4: Output Idle state 4
0x50012C04 C   FIELD 15w01 OIS4N: Output Idle state 4 (OC5 output)
0x50012C04 C   FIELD 16w01 OIS5: Output Idle state 5
0x50012C04 C   FIELD 18w01 OIS6: Output Idle state 6
0x50012C04 C   FIELD 20w04 MMS2: Master mode selection 2
0x50012C04 C   FIELD 25w01 MMS_3: Master mode selection 2
0x50012C08 B  REGISTER TIM1_SMCR: TIM1 slave mode control register
0x50012C08 C   FIELD 00w03 SMS1 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (tim_trgi) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if tim_ti1f_ed is selected as the trigger input (TS=00100). Indeed, tim_ti1f_ed outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the tim_trgo or the tim_trgo2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x50012C08 C   FIELD 03w01 OCCS (rw): OCREF clear selection This bit is used to select the OCREF clear source.
0x50012C08 C   FIELD 04w03 TS1 (rw): Trigger selection - bit 4:3 Refer to TS[2:0] description - bits 6:4 null Trigger selection This bitfield is combined with TS[4:3] bits. This bit-field selects the trigger input to be used to synchronize the counter. others: Reserved See for more details on tim_itrx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x50012C08 C   FIELD 07w01 MSM (rw): Master/slave mode
0x50012C08 C   FIELD 08w04 ETF (rw): External trigger filter This bit-field then defines the frequency used to sample tim_etrp signal and the length of the digital filter applied to tim_etrp. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x50012C08 C   FIELD 12w02 ETPS (rw): External trigger prescaler External trigger signal tim_etrp frequency must be at most 1/4 of TIMxCLK frequency. A prescaler can be enabled to reduce tim_etrp frequency. It is useful when inputting fast external clocks on tim_etr_in.
0x50012C08 C   FIELD 14w01 ECE (rw): External clock enable This bit enables External clock mode 2. Note: Setting the ECE bit has the same effect as selecting external clock mode 1 with tim_trgi connected to tim_etrf (SMS=111 and TS=00111). It is possible to simultaneously use external clock mode 2 with the following slave modes: reset mode, gated mode and trigger mode. Nevertheless, tim_trgi must not be connected to tim_etrf in this case (TS bits must not be 00111). If external clock mode 1 and external clock mode 2 are enabled at the same time, the external clock input is tim_etrf.
0x50012C08 C   FIELD 15w01 ETP (rw): External trigger polarity This bit selects whether tim_etr_in or tim_etr_in is used for trigger operations
0x50012C08 C   FIELD 16w01 SMS2 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (tim_trgi) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if tim_ti1f_ed is selected as the trigger input (TS=00100). Indeed, tim_ti1f_ed outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the tim_trgo or the tim_trgo2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x50012C08 C   FIELD 20w02 TS2 (rw): Trigger selection - bit 4:3 Refer to TS[2:0] description - bits 6:4 null Trigger selection This bitfield is combined with TS[4:3] bits. This bit-field selects the trigger input to be used to synchronize the counter. others: Reserved See for more details on tim_itrx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x50012C08 C   FIELD 24w01 SMSPE (rw): SMS preload enable This bit selects whether the SMS[3:0] bitfield is preloaded
0x50012C08 C   FIELD 25w01 SMSPS (rw): SMS preload source This bit selects whether the events that triggers the SMS[3:0] bitfield transfer from preload to active
0x50012C0C B  REGISTER TIM1_DIER: TIM1 DMA/interrupt enable register
0x50012C0C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x50012C0C C   FIELD 01w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x50012C0C C   FIELD 02w01 CC2IE (rw): Capture/compare 2 interrupt enable
0x50012C0C C   FIELD 03w01 CC3IE (rw): Capture/compare 3 interrupt enable
0x50012C0C C   FIELD 04w01 CC4IE (rw): Capture/compare 4 interrupt enable
0x50012C0C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x50012C0C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x50012C0C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x50012C0C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x50012C0C C   FIELD 09w01 CC1DE (rw): Capture/compare 1 DMA request enable
0x50012C0C C   FIELD 10w01 CC2DE (rw): Capture/compare 2 DMA request enable
0x50012C0C C   FIELD 11w01 CC3DE (rw): Capture/compare 3 DMA request enable
0x50012C0C C   FIELD 12w01 CC4DE (rw): Capture/compare 4 DMA request enable
0x50012C0C C   FIELD 13w01 COMDE (rw): COM DMA request enable
0x50012C0C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x50012C0C C   FIELD 20w01 IDXIE (rw): Index interrupt enable
0x50012C0C C   FIELD 21w01 DIRIE (rw): Direction change interrupt enable
0x50012C0C C   FIELD 22w01 IERRIE (rw): Index error interrupt enable
0x50012C0C C   FIELD 23w01 TERRIE (rw): Transition error interrupt enable
0x50012C10 B  REGISTER TIM1_SR: TIM1 status register
0x50012C10 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to control register (TIMx_SMCR)(x = 1, 8)), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x50012C10 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in downcounting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x50012C10 C   FIELD 02w01 CC2IF (rw): Capture/compare 2 interrupt flag Refer to CC1IF description
0x50012C10 C   FIELD 03w01 CC3IF (rw): Capture/compare 3 interrupt flag Refer to CC1IF description
0x50012C10 C   FIELD 04w01 CC4IF (rw): Capture/compare 4 interrupt flag Refer to CC1IF description
0x50012C10 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on COM event (when capture/compare Control bits - CCxE, CCxNE, OCxM - have been updated). It is cleared by software.
0x50012C10 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on tim_trgi input when the slave mode controller is enabled in all modes but gated mode. It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x50012C10 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x50012C10 C   FIELD 08w01 B2IF (rw): Break 2 interrupt flag This flag is set by hardware as soon as the break 2 input goes active. It can be cleared by software if the break 2 input is not active.
0x50012C10 C   FIELD 09w01 CC1OF (rw): Capture/compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x50012C10 C   FIELD 10w01 CC2OF (rw): Capture/compare 2 overcapture flag Refer to CC1OF description
0x50012C10 C   FIELD 11w01 CC3OF (rw): Capture/compare 3 overcapture flag Refer to CC1OF description
0x50012C10 C   FIELD 12w01 CC4OF (rw): Capture/compare 4 overcapture flag Refer to CC1OF description
0x50012C10 C   FIELD 13w01 SBIF (rw): System break interrupt flag This flag is set by hardware as soon as the system break input goes active. It can be cleared by software if the system break input is not active. This flag must be reset to re-start PWM operation.
0x50012C10 C   FIELD 16w01 CC5IF (rw): Compare 5 interrupt flag Refer to CC1IF description Note: Channel 5 can only be configured as output.
0x50012C10 C   FIELD 17w01 CC6IF (rw): Compare 6 interrupt flag Refer to CC1IF description Note: Channel 6 can only be configured as output.
0x50012C10 C   FIELD 20w01 IDXF (rw): Index interrupt flag This flag is set by hardware when an index event is detected. It is cleared by software by writing it to '0â.
0x50012C10 C   FIELD 21w01 DIRF (rw): Direction change interrupt flag This flag is set by hardware when the direction changes in encoder mode (DIR bit value in TIMx_CR is changing). It is cleared by software by writing it to '0â.
0x50012C10 C   FIELD 22w01 IERRF (rw): Index error interrupt flag This flag is set by hardware when an index error is detected. It is cleared by software by writing it to '0â.
0x50012C10 C   FIELD 23w01 TERRF (rw): Transition error interrupt flag This flag is set by hardware when a transition error is detected in encoder mode. It is cleared by software by writing it to '0â.
0x50012C14 B  REGISTER TIM1_EGR: TIM1 event generation register
0x50012C14 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x50012C14 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x50012C14 C   FIELD 02w01 CC2G (wo): Capture/compare 2 generation Refer to CC1G description
0x50012C14 C   FIELD 03w01 CC3G (wo): Capture/compare 3 generation Refer to CC1G description
0x50012C14 C   FIELD 04w01 CC4G (wo): Capture/compare 4 generation Refer to CC1G description
0x50012C14 C   FIELD 05w01 COMG (wo): Capture/compare control update generation This bit can be set by software, it is automatically cleared by hardware Note: This bit acts only on channels having a complementary output.
0x50012C14 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x50012C14 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x50012C14 C   FIELD 08w01 B2G (wo): Break 2 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x50012C18 B  REGISTER TIM1_CCMR1_Input: TIM1 capture/compare mode register 1 [alternate]
0x50012C18 B  REGISTER TIM1_CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x50012C18 C   FIELD 00w02 CC1S (rw): Capture/compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x50012C18 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50012C18 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x50012C18 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (tim_ic1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x50012C18 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x50012C18 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x50012C18 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample tim_ti1 input and the length of the digital filter applied to tim_ti1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x50012C18 C   FIELD 07w01 OC1CE: Output Compare 1 clear enable
0x50012C18 C   FIELD 08w02 CC2S (rw): Capture/compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = '0â in TIMx_CCER).
0x50012C18 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x50012C18 C   FIELD 10w01 OC2FE: Output Compare 2 fast enable
0x50012C18 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler
0x50012C18 C   FIELD 11w01 OC2PE: Output Compare 2 preload enable
0x50012C18 C   FIELD 12w03 OC2M: Output Compare 2 mode
0x50012C18 C   FIELD 12w04 IC2F (rw): Input capture 2 filter
0x50012C18 C   FIELD 15w01 OC2CE: Output Compare 2 clear enable
0x50012C18 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x50012C18 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x50012C1C B  REGISTER TIM1_CCMR2_Input: TIM1 capture/compare mode register 2 [alternate]
0x50012C1C B  REGISTER TIM1_CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x50012C1C C   FIELD 00w02 CC3S (rw): Capture/compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = '0â in TIMx_CCER).
0x50012C1C C   FIELD 00w02 CC3S_1_0: Capture/Compare 3 selection
0x50012C1C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x50012C1C C   FIELD 02w02 IC3PSC (rw): Input capture 3 prescaler
0x50012C1C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x50012C1C C   FIELD 04w03 OC3M_2_0: Output compare 3 mode
0x50012C1C C   FIELD 04w04 IC3F (rw): Input capture 3 filter
0x50012C1C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x50012C1C C   FIELD 08w02 CC4S (rw): Capture/compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = '0â in TIMx_CCER).
0x50012C1C C   FIELD 08w02 CC4S_1_0: Capture/Compare 4 selection
0x50012C1C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x50012C1C C   FIELD 10w02 IC4PSC (rw): Input capture 4 prescaler
0x50012C1C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x50012C1C C   FIELD 12w03 OC4M_3_0: Output compare 4 mode
0x50012C1C C   FIELD 12w04 IC4F (rw): Input capture 4 filter
0x50012C1C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x50012C1C C   FIELD 16w01 OC3M_3: Output compare 3 mode
0x50012C1C C   FIELD 24w01 OC4M_bit3: Output Compare 4 mode - bit 3
0x50012C20 B  REGISTER TIM1_CCER: TIM1 capture/compare enable register
0x50012C20 C   FIELD 00w01 CC1E (rw): Capture/compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to for details. Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1E active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x50012C20 C   FIELD 01w01 CC1P (rw): Capture/compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: the configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x50012C20 C   FIELD 02w01 CC1NE (rw): Capture/compare 1 complementary output enable Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NE active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x50012C20 C   FIELD 03w01 CC1NP (rw): Capture/compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of tim_ti1fp1 and tim_ti2fp1. Refer to CC1P description. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (channel configured as output). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x50012C20 C   FIELD 04w01 CC2E (rw): Capture/compare 2 output enable Refer to CC1E description
0x50012C20 C   FIELD 05w01 CC2P (rw): Capture/compare 2 output polarity Refer to CC1P description
0x50012C20 C   FIELD 06w01 CC2NE (rw): Capture/compare 2 complementary output enable Refer to CC1NE description
0x50012C20 C   FIELD 07w01 CC2NP (rw): Capture/compare 2 complementary output polarity Refer to CC1NP description
0x50012C20 C   FIELD 08w01 CC3E (rw): Capture/compare 3 output enable Refer to CC1E description
0x50012C20 C   FIELD 09w01 CC3P (rw): Capture/compare 3 output polarity Refer to CC1P description
0x50012C20 C   FIELD 10w01 CC3NE (rw): Capture/compare 3 complementary output enable Refer to CC1NE description
0x50012C20 C   FIELD 11w01 CC3NP (rw): Capture/compare 3 complementary output polarity Refer to CC1NP description
0x50012C20 C   FIELD 12w01 CC4E (rw): Capture/compare 4 output enable Refer to CC1E description
0x50012C20 C   FIELD 13w01 CC4P (rw): Capture/compare 4 output polarity Refer to CC1P description
0x50012C20 C   FIELD 14w01 CC4NE (rw): Capture/compare 4 complementary output enable Refer to CC1NE description
0x50012C20 C   FIELD 15w01 CC4NP (rw): Capture/compare 4 complementary output polarity Refer to CC1NP description
0x50012C20 C   FIELD 16w01 CC5E (rw): Capture/compare 5 output enable Refer to CC1E description
0x50012C20 C   FIELD 17w01 CC5P (rw): Capture/compare 5 output polarity Refer to CC1P description
0x50012C20 C   FIELD 20w01 CC6E (rw): Capture/compare 6 output enable Refer to CC1E description
0x50012C20 C   FIELD 21w01 CC6P (rw): Capture/compare 6 output polarity Refer to CC1P description
0x50012C24 B  REGISTER TIM1_CNT: TIM1 counter
0x50012C24 C   FIELD 00w16 CNT (rw): Counter value Non-dithering mode (DITHEN = 0) The register holds the counter value. Dithering mode (DITHEN = 1) The register only holds the non-dithered part in CNT[15:0]. The fractional part is not available.
0x50012C24 C   FIELD 31w01 UIFCPY (ro): UIF copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in the TIMxCR1 is reset, bit 31 is reserved and read at 0.
0x50012C28 B  REGISTER TIM1_PSC: TIM1 prescaler
0x50012C28 C   FIELD 00w16 PSC (rw): Prescaler value The counter clock frequency (ftim_cnt_ck) is equal to ftim_psc_ck / (PSC[15:0] + 1). PSC contains the value to be loaded in the active prescaler register at each update event (including when the counter is cleared through UG bit of TIMx_EGR register or through trigger controller when configured in âreset modeâ).
0x50012C2C B  REGISTER TIM1_ARR: TIM1 auto-reload register
0x50012C2C C   FIELD 00w20 ARR (rw): Auto-reload value ARR is the value to be loaded in the actual auto-reload register. Refer to the for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null. Non-dithering mode (DITHEN = 0) The register holds the auto-reload value. Dithering mode (DITHEN = 1) The register holds the integer part in ARR[19:4]. The ARR[3:0] bitfield contains the dithered part.
0x50012C30 B  REGISTER TIM1_RCR: TIM1 repetition counter register
0x50012C30 C   FIELD 00w16 REP (rw): Repetition counter reload value This bitfield defines the update rate of the compare registers (i.e. periodic transfers from preload to active registers) when preload registers are enable. It also defines the update interrupt generation rate, if this interrupt is enable. When the repetition down-counter reaches zero, an update event is generated and it restarts counting from REP value. As the repetition counter is reloaded with REP value only at the repetition update event UEV, any write to the TIMx_RCR register is not taken in account until the next repetition update event. It means in PWM mode (REP+1) corresponds to: the number of PWM periods in edge-aligned mode the number of half PWM period in center-aligned mode.
0x50012C34 B  REGISTER TIM1_CCR1: TIM1 capture/compare register 1
0x50012C34 C   FIELD 00w20 CCR1 (rw): Capture/compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC1PE). Else the preload value is copied in the active capture/compare 1 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc1 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR1[15:0]. The CCR1[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR1[19:4]. The CCR1[3:0] bitfield contains the dithered part. If channel CC1 is configured as input: CR1 is the counter value transferred by the last input capture 1 event (tim_ic1). The TIMx_CCR1 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR1[15:0]. The CCR1[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR1[19:4]. The CCR1[3:0] bits are reset.
0x50012C38 B  REGISTER TIM1_CCR2: TIM1 capture/compare register 2
0x50012C38 C   FIELD 00w20 CCR2 (rw): Capture/compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC2PE). Else the preload value is copied in the active capture/compare 2 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc2 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR2[15:0]. The CCR2[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR2[19:4]. The CCR2[3:0] bitfield contains the dithered part. If channel CC2 is configured as input: CCR2 is the counter value transferred by the last input capture 2 event (tim_ic2). The TIMx_CCR2 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR2[15:0]. The CCR2[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR2[19:4]. The CCR2[3:0] bits are reset.
0x50012C3C B  REGISTER TIM1_CCR3: TIM1 capture/compare register 3
0x50012C3C C   FIELD 00w20 CCR3 (rw): Capture/compare value If channel CC3 is configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC3PE). Else the preload value is copied in the active capture/compare 3 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc3 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR3[15:0]. The CCR3[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR3[19:4]. The CCR3[3:0] bitfield contains the dithered part. If channel CC3 is configured as input: CCR3 is the counter value transferred by the last input capture 3 event (tim_ic3). The TIMx_CCR3 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR3[15:0]. The CCR3[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR3[19:4]. The CCR3[3:0] bits are reset.
0x50012C40 B  REGISTER TIM1_CCR4: TIM1 capture/compare register 4
0x50012C40 C   FIELD 00w20 CCR4 (rw): Capture/compare value If channel CC4 is configured as output: CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC4PE). Else the preload value is copied in the active capture/compare 4 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on tim_oc4 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR4[15:0]. The CCR4[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR4[19:4]. The CCR4[3:0] bitfield contains the dithered part. If channel CC4 is configured as input: CCR4 is the counter value transferred by the last input capture 4 event (tim_ic4). The TIMx_CCR4 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR4[15:0]. The CCR4[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR4[19:4]. The CCR4[3:0] bits are reset.
0x50012C44 B  REGISTER TIM1_BDTR: TIM1 break and dead-time register
0x50012C44 C   FIELD 00w08 DTG (rw): Dead-time generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration. DTG[7:5]=0xx => DT=DTG[7:0]x tdtg with tdtg=tDTS. DTG[7:5]=10x => DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS. DTG[7:5]=110 => DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS. DTG[7:5]=111 => DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS. Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 us to 31750 ns by 250 ns steps, 32 us to 63us by 1 us steps, 64 us to 126 us by 2 us steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C44 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x50012C44 C   FIELD 10w01 OSSI (rw): Off-state selection for idle mode This bit is used when MOE=0 due to a break event or by a software write, on channels configured as outputs. See OC/OCN enable description for more details (enable register (TIMx_CCER)(x = 1, 8)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C44 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels having a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (enable register (TIMx_CCER)(x = 1, 8)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C44 C   FIELD 12w01 BKE (rw): Break enable This bit enables the complete break protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50012C44 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50012C44 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C44 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as one of the break inputs is active (tim_brk or tim_brk2). It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. In response to a break event or if MOE is written to 0: OC and OCN outputs are disabled or forced to idle state depending on the OSSI bit. enable register (TIMx_CCER)(x = 1, 8)).
0x50012C44 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample tim_brk input and the length of the digital filter applied to tim_brk. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C44 C   FIELD 20w04 BK2F (rw): Break 2 filter This bit-field defines the frequency used to sample tim_brk2 input and the length of the digital filter applied to tim_brk2. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C44 C   FIELD 24w01 BK2E (rw): Break 2 enable This bit enables the complete break 2 protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: The BRKIN2 must only be used with OSSR = OSSI = 1. Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50012C44 C   FIELD 25w01 BK2P (rw): Break 2 polarity Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50012C44 C   FIELD 26w01 BKDSRM (rw): Break disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50012C44 C   FIELD 27w01 BK2DSRM (rw): Break2 disarm Refer to BKDSRM description
0x50012C44 C   FIELD 28w01 BKBID (rw): Break bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50012C44 C   FIELD 29w01 BK2BID (rw): Break2 bidirectional Refer to BKBID description
0x50012C48 B  REGISTER TIM1_CCR5: TIM1 capture/compare register 5
0x50012C48 C   FIELD 00w20 CCR5 (rw): Capture/compare 5 value CCR5 is the value to be loaded in the actual capture/compare 5 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC5PE). Else the preload value is copied in the active capture/compare 5 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc5 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR5[15:0]. The CCR5[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR5[19:4]. The CCR5[3:0] bitfield contains the dithered part.
0x50012C48 C   FIELD 29w01 GC5C1 (rw): Group channel 5 and channel 1 Distortion on channel 1 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x50012C48 C   FIELD 30w01 GC5C2 (rw): Group channel 5 and channel 2 Distortion on channel 2 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x50012C48 C   FIELD 31w01 GC5C3 (rw): Group channel 5 and channel 3 Distortion on channel 3 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR2). Note: it is also possible to apply this distortion on combined PWM signals.
0x50012C4C B  REGISTER TIM1_CCR6: TIM1 capture/compare register 6
0x50012C4C C   FIELD 00w20 CCR6 (rw): Capture/compare 6 value CCR6 is the value to be loaded in the actual capture/compare 6 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC6PE). Else the preload value is copied in the active capture/compare 6 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc6 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR6[15:0]. The CCR6[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR6[19:4]. The CCR6[3:0] bitfield contains the dithered part.
0x50012C50 B  REGISTER TIM1_CCMR3: TIM1 capture/compare mode register 3
0x50012C50 C   FIELD 02w01 OC5FE (rw): Output compare 5 fast enable
0x50012C50 C   FIELD 03w01 OC5PE (rw): Output compare 5 preload enable
0x50012C50 C   FIELD 04w03 OC5M1 (rw): Output compare 5 mode
0x50012C50 C   FIELD 07w01 OC5CE (rw): Output compare 5 clear enable
0x50012C50 C   FIELD 10w01 OC6FE (rw): Output compare 6 fast enable
0x50012C50 C   FIELD 11w01 OC6PE (rw): Output compare 6 preload enable
0x50012C50 C   FIELD 12w03 OC6M1 (rw): Output compare 6 mode
0x50012C50 C   FIELD 15w01 OC6CE (rw): Output compare 6 clear enable
0x50012C50 C   FIELD 16w01 OC5M2 (rw): Output compare 5 mode
0x50012C50 C   FIELD 24w01 OC6M2 (rw): Output compare 6 mode
0x50012C54 B  REGISTER TIM1_DTR2: TIM1 timer deadtime register 2
0x50012C54 C   FIELD 00w08 DTGF (rw): Dead-time falling edge generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs, on the falling edge. DTGF[7:5]=0xx => DTF=DTGF[7:0]x tdtg with tdtg=tDTS. DTGF[7:5]=10x => DTF=(64+DTGF[5:0])xtdtg with Tdtg=2xtDTS. DTGF[7:5]=110 => DTF=(32+DTGF[4:0])xtdtg with Tdtg=8xtDTS. DTGF[7:5]=111 => DTF=(32+DTGF[4:0])xtdtg with Tdtg=16xtDTS. Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 us to 31750 ns by 250 ns steps, 32 us to 63us by 1 us steps, 64 us to 126 us by 2 us steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C54 C   FIELD 16w01 DTAE (rw): Deadtime asymmetric enable Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C54 C   FIELD 17w01 DTPE (rw): Deadtime preload enable Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C58 B  REGISTER TIM1_ECR: TIM1 timer encoder control register
0x50012C58 C   FIELD 00w01 IE (rw): Index enable This bit indicates if the Index event resets the counter.
0x50012C58 C   FIELD 01w02 IDIR (rw): Index direction This bit indicates in which direction the Index event resets the counter. Note: The IDR[1:0] bitfield must be written when IE bit is reset (index disabled).
0x50012C58 C   FIELD 03w02 IBLK (rw): Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x50012C58 C   FIELD 05w01 FIDX (rw): First index This bit indicates if the first index only is taken into account
0x50012C58 C   FIELD 06w02 IPOS (rw): Index positioning In quadrature encoder mode (SMS[3:0] = 0001, 0010, 0011, 1110, 1111), this bit indicates in which AB input configuration the Index event resets the counter. In directional clock mode or clock plus direction mode (SMS[3:0] = 1010, 1011, 1100, 1101), these bits indicates on which level the Index event resets the counter. In bidirectional clock mode, this applies for both clock inputs. x0: Index resets the counter when clock is 0 x1: Index resets the counter when clock is 1 Note: IPOS[1]âbit is not significant
0x50012C58 C   FIELD 16w08 PW (rw): Pulse width This bitfield defines the pulse duration, as following: tPW = PW[7:0] x tPWG
0x50012C58 C   FIELD 24w03 PWPRSC (rw): Pulse width prescaler This bitfield sets the clock prescaler for the pulse generator, as following: tPWG = (2(PWPRSC[2:0])) x ttim_ker_ck
0x50012C5C B  REGISTER TIM1_TISEL: TIM1 timer input selection register
0x50012C5C C   FIELD 00w04 TI1SEL (rw): Selects tim_ti1[0..15] input ... Refer to for interconnects list.
0x50012C5C C   FIELD 08w04 TI2SEL (rw): Selects tim_ti2[0..15] input ... Refer to for interconnects list.
0x50012C5C C   FIELD 16w04 TI3SEL (rw): Selects tim_ti3[0..15] input ... Refer to for interconnects list.
0x50012C5C C   FIELD 24w04 TI4SEL (rw): Selects tim_ti4[0..15] input ... Refer to for interconnects list.
0x50012C60 B  REGISTER TIM1_AF1: TIM1 alternate function option register 1
0x50012C60 C   FIELD 00w01 BKINE (rw): TIMx_BKIN input enable This bit enables the TIMx_BKIN alternate function input for the timerâs tim_brk input. TIMx_BKIN input is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 01w01 BKCMP1E (rw): tim_brk_cmp1 enable This bit enables the tim_brk_cmp1 for the timerâs tim_brk input. tim_brk_cmp1 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 02w01 BKCMP2E (rw): tim_brk_cmp2 enable This bit enables the tim_brk_cmp2 for the timerâs tim_brk input. tim_brk_cmp2 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 03w01 BKCMP3E (rw): tim_brk_cmp3 enable This bit enables the tim_brk_cmp3 for the timerâs tim_brk input. tim_brk_cmp3 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 04w01 BKCMP4E (rw): tim_brk_cmp4 enable This bit enables the tim_brk_cmp4 for the timerâs tim_brk input. tim_brk_cmp4 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 05w01 BKCMP5E (rw): tim_brk_cmp5 enable This bit enables the tim_brk_cmp5 for the timerâs tim_brk input. tim_brk_cmp5 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 06w01 BKCMP6E (rw): tim_brk_cmp6 enable This bit enables the tim_brk_cmp6 for the timerâs tim_brk input. tim_brk_cmp6 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 07w01 BKCMP7E (rw): tim_brk_cmp7 enable This bit enables the tim_brk_cmp7 for the timerâs tim_brk input. tim_brk_cmp7 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 08w01 BKCMP8E (rw): tim_brk_cmp8 enable This bit enables the tim_brk_cmp8 for the timerâs tim_brk input. tim_brk_cmp8 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 09w01 BKINP (rw): TIMx_BKIN input polarity This bit selects the TIMx_BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 10w01 BKCMP1P (rw): tim_brk_cmp1 input polarity This bit selects the tim_brk_cmp1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 11w01 BKCMP2P (rw): tim_brk_cmp2 input polarity This bit selects the tim_brk_cmp2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 12w01 BKCMP3P (rw): tim_brk_cmp3 input polarity This bit selects the tim_brk_cmp3 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 13w01 BKCMP4P (rw): tim_brk_cmp4 input polarity This bit selects the tim_brk_cmp4 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C60 C   FIELD 14w04 ETRSEL (rw): etr_in source selection These bits select the etr_in input source. ... Refer to for product specific implementation. Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 B  REGISTER TIM1_AF2: TIM1 alternate function register 2
0x50012C64 C   FIELD 00w01 BK2INE (rw): TIMx_BKIN2 input enable This bit enables the TIMx_BKIN2 alternate function input for the timerâs tim_brk2 input. TIMx_BKIN2 input is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 01w01 BK2CMP1E (rw): tim_brk2_cmp1 enable This bit enables the tim_brk2_cmp1 for the timerâs tim_brk2 input. tim_brk2_cmp1 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 02w01 BK2CMP2E (rw): tim_brk2_cmp2 enable This bit enables the tim_brk2_cmp2 for the timerâs tim_brk2 input. tim_brk2_cmp2 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 03w01 BK2CMP3E (rw): tim_brk2_cmp3 enable This bit enables the tim_brk2_cmp3 for the timerâs tim_brk2 input. tim_brk2_cmp3 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 04w01 BK2CMP4E (rw): tim_brk2_cmp4 enable This bit enables the tim_brk2_cmp4 for the timerâs tim_brk2 input. tim_brk2_cmp4 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 05w01 BK2CMP5E (rw): tim_brk2_cmp5 enable This bit enables the tim_brk2_cmp5 for the timerâs tim_brk2 input. tim_brk2_cmp5 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 06w01 BK2CMP6E (rw): tim_brk2_cmp6 enable This bit enables the tim_brk2_cmp6 for the timerâs tim_brk2 input. tim_brk2_cmp6 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 07w01 BK2CMP7E (rw): tim_brk2_cmp7 enable This bit enables the tim_brk2_cmp7 for the timerâs tim_brk2 input. tim_brk2_cmp7 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 08w01 BK2CMP8E (rw): tim_brk2_cmp8 enable This bit enables the tim_brk2_cmp8 for the timerâs tim_brk2 input. tim_brk2_cmp8 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 09w01 BK2INP (rw): TIMx_BKIN2 input polarity This bit selects the TIMx_BKIN2 alternate function input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 10w01 BK2CMP1P (rw): tim_brk2_cmp1 input polarity This bit selects the tim_brk2_cmp1 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 11w01 BK2CMP2P (rw): tim_brk2_cmp2 input polarity This bit selects the tim_brk2_cmp2 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 12w01 BK2CMP3P (rw): tim_brk2_cmp3 input polarity This bit selects the tim_brk2_cmp3 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 13w01 BK2CMP4P (rw): tim_brk2_cmp4 input polarity This bit selects the tim_brk2_cmp4 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012C64 C   FIELD 16w03 OCRSEL (rw): ocref_clr source selection These bits select the ocref_clr input source. ... Refer to for product specific information. Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50012FDC B  REGISTER TIM1_DCR: TIM1 DMA control register
0x50012FDC C   FIELD 00w05 DBA (rw): DMA base address This 5-bits vector defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ...
0x50012FDC C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit vector defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers. Transfers can be in half-words or in bytes (see example below). ... Example: Let us consider the following transfer: DBL = 7 bytes & DBA = TIM2_CR1. If DBL = 7 bytes and DBA = TIM2_CR1 represents the address of the byte to be transferred, the address of the transfer should be given by the following equation: (TIMx_CR1 address) + DBA + (DMA index), where DMA index = DBL In this example, 7 bytes are added to (TIMx_CR1 address) + DBA, which gives us the address from/to which the data are copied. In this case, the transfer is done to 7 registers starting from the following address: (TIMx_CR1 address) + DBA According to the configuration of the DMA Data Size, several cases may occur: If the DMA Data Size is configured in half-words, 16-bit data are transferred to each of the 7 registers. If the DMA Data Size is configured in bytes, the data are also transferred to 7 registers: the first register contains the first MSB byte, the second register, the first LSB byte and so on. So with the transfer Timer, one also has to specify the size of data transferred by DMA.
0x50012FDC C   FIELD 16w04 DBSS (rw): DMA burst source selection This bitfield defines the interrupt source that triggers the DMA burst transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address). Others: reserved
0x50012FE0 B  REGISTER TIM1_DMAR: TIM1 DMA address for full transfer
0x50012FE0 C   FIELD 00w32 DMAB (rw): DMA register for burst accesses A read or write operation to the DMAR register accesses the register located at the address (TIMx_CR1 address) + (DBA + DMA index) x 4 where TIMx_CR1 address is the address of the control register 1, DBA is the DMA base address configured in TIMx_DCR register, DMA index is automatically controlled by the DMA transfer, and ranges from 0 to DBL (DBL configured in TIMx_DCR).
0x50013000 A PERIPHERAL SEC_SPI1
0x50013000 B  REGISTER SPI_CR1: 
0x50013000 C   FIELD 00w01 SPE (rw): serial peripheral enable This bit is set by and cleared by software. When SPE=1, SPI data transfer is enabled, SPI_CFG1 and SPI_CFG2 configuration registers, CRCPOLY, UDRDR, part of SPI_AUTOCR register and IOLOCK bit in the SPI_CR1 register are write protected. They can be changed only when SPE=0. When SPE=0 any SPI operation is stopped and disabled, all the pending requests of the events with enabled interrupt are blocked except the MODF interrupt request (but their pending still propagates the request of the spi_plck clock), the SS output is deactivated at master, the RDY signal keeps not ready status at slave, the internal state machine is reseted, all the FIFOs content is flushed, CRC calculation initialized, receive data register is read zero. SPE is cleared and cannot be set when MODF error flag is active.
0x50013000 C   FIELD 08w01 MASRX (rw): master automatic suspension in Receive mode This bit is set and cleared by software to control continuous SPI transfer in master receiver mode and automatic management in order to avoid overrun condition. When SPI communication is suspended by hardware automatically, it could happen that few bits of next frame are already clocked out due to internal synchronization delay. This is why, the automatic suspension is not quite reliable when size of data drops below 8 bits. In this case, a safe suspension can be achieved by combination with delay inserted between data frames applied when MIDI parameter keeps a non zero value; sum of data size and the interleaved SPI cycles should always produce interval at length of 8 SPI clock periods at minimum. After software clearing of the SUSP bit, the communication resumes and continues by subsequent bits transaction without any next constraint. Prior the SUSP bit is cleared, the user must release the RxFIFO space as much as possible by reading out all the data packets available at RxFIFO based on the RXP flag indication to prevent any subsequent suspension.
0x50013000 C   FIELD 09w01 CSTART (rw): master transfer start This bit can be set by software if SPI is enabled only to start an SPI communication. it is cleared by hardware when end of transfer (EOT) flag is set or when a transaction suspend request is accepted. In SPI mode, the bit is taken into account at master mode only. If transmission is enabled, communication starts or continues only if any data is available in the transmission FIFO.
0x50013000 C   FIELD 10w01 CSUSP (wo): master SUSPend request This bit reads as zero. In Master mode, when this bit is set by software, the CSTART bit is reset at the end of the current frame and SPI communication is suspended. The user has to check SUSP flag to check end of the frame transaction. The Master mode communication must be suspended (using this bit or keeping TXDR empty) before disabling the SPI or going to Low-power mode. After software suspension, SUSP flag has to be cleared and SPI disabled and re-enabled before the next transaction starts.
0x50013000 C   FIELD 11w01 HDDIR (rw): Rx/Tx direction at Half-duplex mode In Half-Duplex configuration the HDDIR bit establishes the Rx/Tx direction of the data transfer. This bit is ignored in Full-Duplex or any Simplex configuration.
0x50013000 C   FIELD 12w01 SSI (rw): internal SS signal input level This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the peripheral SS input internally and the I/O value of the SS pin is ignored.
0x50013000 C   FIELD 13w01 CRC33_17 (rw): 32-bit CRC polynomial configuration
0x50013000 C   FIELD 14w01 RCRCINI (rw): CRC calculation initialization pattern control for receiver
0x50013000 C   FIELD 15w01 TCRCINI (rw): CRC calculation initialization pattern control for transmitter
0x50013000 C   FIELD 16w01 IOLOCK (rw): locking the AF configuration of associated IOs This bit is set by software and cleared by hardware whenever the SPE bit is changed from 1 to 0. When this bit is set, SPI_CFG2 register content cannot be modified. This bit can be set when SPI is disabled only else it is write protected. It is cleared and cannot be set when MODF bit is set.
0x50013004 B  REGISTER SPI_CR2: 
0x50013004 C   FIELD 00w16 TSIZE (rw): number of data at current transfer When these bits are changed by software, the SPI has to be disabled. Endless transaction is initialized when CSTART is set while zero value is stored at TSIZE. TSIZE cannot be set to 0xFFFF respective 0x3FFF value when CRC is enabled. Note: TSIZE[15:10] bits are reserved at limited feature set instances and must be kept at reset value.
0x50013008 B  REGISTER SPI_CFG1: SPI configuration register 1
0x50013008 C   FIELD 00w05 DSIZE (rw): number of bits in at single SPI data frame ..... Note: Maximum data size can be limited up to 16-bits at some instances. At instances with limited set of features, DSIZE2:0] bits are reserved and must be kept at reset state. DSIZE[4:3] bits then control next settings of data size: 00xxx: 8-bits 01xxx: 16-bits 10xxx: 24-bits 11xxx: 32-bits.
0x50013008 C   FIELD 05w04 FTHLV (rw): FIFO threshold level Defines number of data frames at single data packet. Size of the packet should not exceed 1/2 of FIFO space. SPI interface is more efficient if configured packet sizes are aligned with data register access parallelism: If SPI data register is accessed as a 16-bit register and DSIZE ¤ 8 bit, better to select FTHLV = 2, 4, 6. If SPI data register is accessed as a 32-bit register and DSIZE> 8 bit, better to select FTHLV = 2, 4, 6, while if DSIZE ¤ 8bit, better to select FTHLV = 4, 8, 12. Note: FTHLV[3:2] bits are reserved at instances with limited set of features
0x50013008 C   FIELD 09w01 UDRCFG (rw): behavior of slave transmitter at underrun condition For more details see underrun condition.
0x50013008 C   FIELD 14w01 RXDMAEN (rw): Rx DMA stream enable
0x50013008 C   FIELD 15w01 TXDMAEN (rw): Tx DMA stream enable
0x50013008 C   FIELD 16w05 CRCSIZE (rw): length of CRC frame to be transacted and compared Most significant bits are taken into account from polynomial calculation when CRC result is transacted or compared. The length of the polynomial is not affected by this setting. ..... The value must be set equal or multiply of data size (DSIZE[4:0]). Its maximum size corresponds to DSIZE maximum at the instance. Note: The most significant bit at CRCSIZE bit field is reserved at the peripheral instances where data size is limited to 16-bit.
0x50013008 C   FIELD 22w01 CRCEN (rw): hardware CRC computation enable
0x50013008 C   FIELD 28w03 MBR (rw): master baud rate prescaler setting Note: MBR setting is considered at slave working at TI mode, too (see mode).
0x50013008 C   FIELD 31w01 BPASS (rw): bypass of the prescaler at master baud rate clock generator
0x5001300C B  REGISTER SPI_CFG2: SPI configuration register 2
0x5001300C C   FIELD 00w04 MSSI (rw): Master SS Idleness Specifies an extra delay, expressed in number of SPI clock cycle periods, inserted additionally between active edge of SS opening a session and the beginning of the first data frame of the session in Master mode when SSOE is enabled. ... Note: This feature is not supported in TI mode. To include the delay, the SPI must be disabled and re-enabled between sessions.
0x5001300C C   FIELD 04w04 MIDI (rw): master Inter-Data Idleness Specifies minimum time delay (expressed in SPI clock cycles periods) inserted between two consecutive data frames in Master mode. ... Note: This feature is not supported in TI mode.
0x5001300C C   FIELD 13w01 RDIOM (rw): RDY signal input/output management Note: When DSIZE at the SPI_CFG1 register is configured shorter than 8-bit, the RDIOM bit has to be kept at zero.
0x5001300C C   FIELD 14w01 RDIOP (rw): RDY signal input/output polarity
0x5001300C C   FIELD 15w01 IOSWP (rw): swap functionality of MISO and MOSI pins When this bit is set, the function of MISO and MOSI pins alternate functions are inverted. Original MISO pin becomes MOSI and original MOSI pin becomes MISO.
0x5001300C C   FIELD 17w02 COMM (rw): SPI Communication Mode
0x5001300C C   FIELD 19w03 SP (rw): serial protocol others: reserved, must not be used
0x5001300C C   FIELD 22w01 MASTER (rw): SPI Master
0x5001300C C   FIELD 23w01 LSBFRST (rw): data frame format
0x5001300C C   FIELD 24w01 CPHA (rw): clock phase
0x5001300C C   FIELD 25w01 CPOL (rw): clock polarity
0x5001300C C   FIELD 26w01 SSM (rw): software management of SS signal input When master uses hardware SS output (SSM=0 and SSOE=1) the SS signal input is forced to not active state internally to prevent master mode fault error.
0x5001300C C   FIELD 28w01 SSIOP (rw): SS input/output polarity
0x5001300C C   FIELD 29w01 SSOE (rw): SS output enable This bit is taken into account in Master mode only
0x5001300C C   FIELD 30w01 SSOM (rw): SS output management in Master mode This bit is taken into account in Master mode when SSOE is enabled. It allows the SS output to be configured between two consecutive data transfers.
0x5001300C C   FIELD 31w01 AFCNTR (rw): alternate function GPIOs control This bit is taken into account when SPE=0 only When SPI has to be disabled temporary for a specific configuration reason (e.g. CRC reset, CPHA or HDDIR change) setting this bit prevents any glitches on the associated outputs configured at alternate function mode by keeping them forced at state corresponding the current SPI configuration.
0x50013010 B  REGISTER SPI_IER: 
0x50013010 C   FIELD 00w01 RXPIE (rw): RXP interrupt enable
0x50013010 C   FIELD 01w01 TXPIE (rw): TXP interrupt enable TXPIE is set by software and cleared by TXTF flag set event.
0x50013010 C   FIELD 02w01 DXPIE (rw): DXP interrupt enabled DXPIE is set by software and cleared by TXTF flag set event.
0x50013010 C   FIELD 03w01 EOTIE (rw): EOT, SUSP and TXC interrupt enable
0x50013010 C   FIELD 04w01 TXTFIE (rw): TXTFIE interrupt enable
0x50013010 C   FIELD 05w01 UDRIE (rw): UDR interrupt enable
0x50013010 C   FIELD 06w01 OVRIE (rw): OVR interrupt enable
0x50013010 C   FIELD 07w01 CRCEIE (rw): CRC error interrupt enable
0x50013010 C   FIELD 08w01 TIFREIE (rw): TIFRE interrupt enable
0x50013010 C   FIELD 09w01 MODFIE (rw): mode Fault interrupt enable
0x50013014 B  REGISTER SPI_SR: 
0x50013014 C   FIELD 00w01 RXP (ro): Rx-Packet available RXP flag is changed by hardware. It monitors number of overall data currently available at RxFIFO if SPI is enabled. It has to be checked once a data packet is completely read out from RxFIFO.
0x50013014 C   FIELD 01w01 TXP (ro): Tx-Packet space available TXP flag is changed by hardware. It monitors overall space currently available at TxFIFO no matter if SPI is enabled or not. It has to be checked once a complete data packet is stored at TxFIFO.
0x50013014 C   FIELD 02w01 DXP (ro): duplex packet DXP flag is set whenever both TXP and RXP flags are set regardless SPI mode.
0x50013014 C   FIELD 03w01 EOT (ro): end of transfer EOT is set by hardware as soon as a full transfer is complete, that is when TSIZE number of data have been transmitted and/or received on the SPI. EOT is cleared by software write 1 to EOTC bit at SPI_IFCR. EOT flag triggers an interrupt if EOTIE bit is set. If DXP flag is used until TXTF flag is set and DXPIE is cleared, EOT can be used to download the last packets contained into RxFIFO in one-shot. In master, EOT event terminates the data transaction and handles SS output optionally. When CRC is applied, the EOT event is extended over the CRC frame transaction. To restart the internal state machine properly, SPI is strongly suggested to be disabled and re-enabled before next transaction starts despite its setting is not changed.
0x50013014 C   FIELD 04w01 TXTF (ro): transmission transfer filled TXTF is set by hardware as soon as all of the data packets in a transfer have been submitted for transmission by application software or DMA, that is when TSIZE number of data have been pushed into the TxFIFO. This bit is cleared by software write 1 to TXTFC bit at SPI_IFCR TXTF flag triggers an interrupt if TXTFIE bit is set. TXTF setting clears the TXPIE and DXPIE masks so to off-load application software from calculating when to disable TXP and DXP interrupts.
0x50013014 C   FIELD 05w01 UDR (ro): underrun at slave transmission mode This bit is cleared by writing 1 to UDRC bit at SPI_IFCR Note: UDR flag applies to Slave mode only
0x50013014 C   FIELD 06w01 OVR (ro): overrun This bit is cleared by writing 1 to OVRC bit at SPI_IFCR
0x50013014 C   FIELD 07w01 CRCE (ro): CRC error This bit is cleared by writing 1 to CRCEC bit at SPI_IFCR
0x50013014 C   FIELD 08w01 TIFRE (ro): TI frame format error This bit is cleared by writing 1 to TIFREC bit at SPI_IFCR
0x50013014 C   FIELD 09w01 MODF (ro): mode fault This bit is cleared by writing 1 to MODFC bit at SPI_IFCR
0x50013014 C   FIELD 11w01 SUSP (ro): suspension status In Master mode, SUSP is set by hardware either as soon as the current frame is completed after CSUSP request is done or at master automatic suspend receive mode (MASRX bit is set at SPI_CR1 register) on RxFIFO full condition. SUSP generates an interrupt when EOTIE is set. This bit has to be cleared prior SPI is disabled by writing 1 to SUSPC bit at SPI_IFCR.
0x50013014 C   FIELD 12w01 TXC (ro): TxFIFO transmission complete The flag behavior depends on TSIZE setting. When TSIZE=0 the TXC is changed by hardware exclusively and it raises each time the TxFIFO becomes empty and there is no activity on the bus. If TSIZE <>0 there is no specific reason to monitor TXC as it just copies the EOT flag value including its software clearing. The TXC generates an interrupt when EOTIE is set.
0x50013014 C   FIELD 13w02 RXPLVL (ro): RxFIFO packing level When RXWNE=0 and data size is set up to 16-bit, the value gives number of remaining data frames persisting at RxFIFO. Note: (*): Optional value when data size is set up to 8-bit only. When data size is greater than 16-bit, these bits are always read as 00. In that consequence, the single data frame received at the FIFO cannot be detected neither by RWNE nor by RXPLVL bits if data size is set from 17 to 24 bits. The user then must apply other methods like TSIZE>0 or FTHLV=0.
0x50013014 C   FIELD 15w01 RXWNE (ro): RxFIFO word not empty Note: This bit value does not depend on DSIZE setting and keeps together with RXPLVL[1:0] information about RxFIFO occupancy by residual data.
0x50013014 C   FIELD 16w16 CTSIZE (ro): number of data frames remaining in current TSIZE session The value is not quite reliable when traffic is ongoing on bus or during autonomous operation at low-power mode. Note: CTSIZE[15:0] bits are not available at instances with limited set of features
0x50013018 B  REGISTER SPI_IFCR: 
0x50013018 C   FIELD 03w01 EOTC (wo): end of transfer flag clear Writing a 1 into this bit clears EOT flag in the SPI_SR register
0x50013018 C   FIELD 04w01 TXTFC (wo): transmission transfer filled flag clear Writing a 1 into this bit clears TXTF flag in the SPI_SR register
0x50013018 C   FIELD 05w01 UDRC (wo): underrun flag clear Writing a 1 into this bit clears UDR flag in the SPI_SR register
0x50013018 C   FIELD 06w01 OVRC (wo): overrun flag clear Writing a 1 into this bit clears OVR flag in the SPI_SR register
0x50013018 C   FIELD 07w01 CRCEC (wo): CRC error flag clear Writing a 1 into this bit clears CRCE flag in the SPI_SR register
0x50013018 C   FIELD 08w01 TIFREC (wo): TI frame format error flag clear Writing a 1 into this bit clears TIFRE flag in the SPI_SR register
0x50013018 C   FIELD 09w01 MODFC (wo): mode fault flag clear Writing a 1 into this bit clears MODF flag in the SPI_SR register
0x50013018 C   FIELD 11w01 SUSPC (wo): SUSPend flag clear Writing a 1 into this bit clears SUSP flag in the SPI_SR register
0x5001301C B  REGISTER SPI_AUTOCR: 
0x5001301C C   FIELD 16w04 TRIGSEL (rw): trigger selection (refer ). ... Note: these bits can be written only when SPE = 0.
0x5001301C C   FIELD 20w01 TRIGPOL (rw): trigger polarity Note: This bit can be written only when SPE = 0.
0x5001301C C   FIELD 21w01 TRIGEN (rw): trigger of CSTART control enable Note: if user can't prevent trigger event during write, the TRIGEN has to be changed when SPI is disabled
0x50013020 B  REGISTER SPI_TXDR: 
0x50013020 C   FIELD 00w32 TXDR (wo): transmit data register The register serves as an interface with TxFIFO. A write to it accesses TxFIFO. Note: data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is written by single access. halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be written by single access. word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be written by single access. Write access of this register less than the configured data size is forbidden.
0x50013030 B  REGISTER SPI_RXDR: 
0x50013030 C   FIELD 00w32 RXDR (ro): receive data register The register serves as an interface with RxFIFO. When it is read, RxFIFO is accessed. Note: data is always right-aligned. Unused bits are read as zero when the register is read. Writing to the register is ignored. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is read by single access halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be read by single access word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be read by single access. Read access of this register less than the configured data size is forbidden.
0x50013040 B  REGISTER SPI_CRCPOLY: SPI polynomial register
0x50013040 C   FIELD 00w32 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The default 9-bit polynomial setting 0x107 corresponds to default 8-bit setting of DSIZE. It is compatible with setting 0x07 used at some other ST products with fixed length of the polynomial string where the most significant bit of the string is always kept hidden. Length of the polynomial is given by the most significant bit of the value stored at this register. It has to be set greater than DSIZE. CRC33_17 bit has to be set additionally with CRCPOLY register when DSIZE is configured to maximum 32-bit or 16-bit size and CRC is enabled (to keep polynomial length grater than data size). Note: CRCPOLY[31:16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x50013044 B  REGISTER SPI_TXCRC: 
0x50013044 C   FIELD 00w32 TXCRC (ro): CRC register for transmitter When CRC calculation is enabled, the TXCRC[31:0] bits contain the computed CRC value of the subsequently transmitted bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. Note: TXCRC[31-16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x50013048 B  REGISTER SPI_RXCRC: 
0x50013048 C   FIELD 00w32 RXCRC (ro): CRC register for receiver When CRC calculation is enabled, the RXCRC[31:0] bits contain the computed CRC value of the subsequently received bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. RXCRC[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x5001304C B  REGISTER SPI_UDRDR: SPI underrun data register
0x5001304C C   FIELD 00w32 UDRDR (rw): data at slave underrun condition The register is taken into account in Slave mode and at underrun condition only. The number of bits considered depends on DSIZE bit settings of the SPI_CFG1 register. Underrun condition handling depends on setting UDRCFG bit at SPI_CFG1 register. Note: UDRDR[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constraint when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x50013400 A PERIPHERAL SEC_TIM8
0x50013400 B  REGISTER TIM1_CR1: TIM1 control register 1
0x50013400 C   FIELD 00w01 CEN (rw): Counter enable Note: External clock, gated mode and encoder mode can work only if the CEN bit has been previously set by software. However trigger mode can set the CEN bit automatically by hardware.
0x50013400 C   FIELD 01w01 UDIS (rw): Update disable This bit is set and cleared by software to enable/disable UEV event generation. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller Buffered registers are then loaded with their preload values.
0x50013400 C   FIELD 02w01 URS (rw): Update request source This bit is set and cleared by software to select the UEV event sources. Counter overflow/underflow Setting the UG bit Update generation through the slave mode controller
0x50013400 C   FIELD 03w01 OPM (rw): One pulse mode
0x50013400 C   FIELD 04w01 DIR (rw): Direction Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder mode.
0x50013400 C   FIELD 05w02 CMS (rw): Center-aligned mode selection Note: It is not allowed to switch from edge-aligned mode to center-aligned mode as long as the counter is enabled (CEN=1)
0x50013400 C   FIELD 07w01 ARPE (rw): Auto-reload preload enable
0x50013400 C   FIELD 08w02 CKD (rw): Clock division This bit-field indicates the division ratio between the timer clock (tim_ker_ck) frequency and the dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters (tim_etr_in, tim_tix),
0x50013400 C   FIELD 11w01 UIFREMAP (rw): UIF status bit remapping
0x50013400 C   FIELD 12w01 DITHEN (rw): Dithering enable Note: The DITHEN bit can only be modified when CEN bit is reset.
0x50013404 B  REGISTER TIM1_CR2 (rw): control register 2
0x50013404 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x50013404 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x50013404 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50013404 C   FIELD 04w03 MMS0_2: Master mode selection
0x50013404 C   FIELD 07w01 TI1S: TI1 selection
0x50013404 C   FIELD 08w01 OIS1: Output Idle state 1
0x50013404 C   FIELD 09w01 OIS1N: Output Idle state 1
0x50013404 C   FIELD 10w01 OIS2: Output Idle state 2
0x50013404 C   FIELD 11w01 OIS2N: Output Idle state 2
0x50013404 C   FIELD 12w01 OIS3: Output Idle state 3
0x50013404 C   FIELD 13w01 OIS3N: Output Idle state 3
0x50013404 C   FIELD 14w01 OIS4: Output Idle state 4
0x50013404 C   FIELD 15w01 OIS4N: Output Idle state 4 (OC5 output)
0x50013404 C   FIELD 16w01 OIS5: Output Idle state 5
0x50013404 C   FIELD 18w01 OIS6: Output Idle state 6
0x50013404 C   FIELD 20w04 MMS2: Master mode selection 2
0x50013404 C   FIELD 25w01 MMS_3: Master mode selection 2
0x50013408 B  REGISTER TIM1_SMCR: TIM1 slave mode control register
0x50013408 C   FIELD 00w03 SMS1 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (tim_trgi) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if tim_ti1f_ed is selected as the trigger input (TS=00100). Indeed, tim_ti1f_ed outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the tim_trgo or the tim_trgo2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x50013408 C   FIELD 03w01 OCCS (rw): OCREF clear selection This bit is used to select the OCREF clear source.
0x50013408 C   FIELD 04w03 TS1 (rw): Trigger selection - bit 4:3 Refer to TS[2:0] description - bits 6:4 null Trigger selection This bitfield is combined with TS[4:3] bits. This bit-field selects the trigger input to be used to synchronize the counter. others: Reserved See for more details on tim_itrx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x50013408 C   FIELD 07w01 MSM (rw): Master/slave mode
0x50013408 C   FIELD 08w04 ETF (rw): External trigger filter This bit-field then defines the frequency used to sample tim_etrp signal and the length of the digital filter applied to tim_etrp. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x50013408 C   FIELD 12w02 ETPS (rw): External trigger prescaler External trigger signal tim_etrp frequency must be at most 1/4 of TIMxCLK frequency. A prescaler can be enabled to reduce tim_etrp frequency. It is useful when inputting fast external clocks on tim_etr_in.
0x50013408 C   FIELD 14w01 ECE (rw): External clock enable This bit enables External clock mode 2. Note: Setting the ECE bit has the same effect as selecting external clock mode 1 with tim_trgi connected to tim_etrf (SMS=111 and TS=00111). It is possible to simultaneously use external clock mode 2 with the following slave modes: reset mode, gated mode and trigger mode. Nevertheless, tim_trgi must not be connected to tim_etrf in this case (TS bits must not be 00111). If external clock mode 1 and external clock mode 2 are enabled at the same time, the external clock input is tim_etrf.
0x50013408 C   FIELD 15w01 ETP (rw): External trigger polarity This bit selects whether tim_etr_in or tim_etr_in is used for trigger operations
0x50013408 C   FIELD 16w01 SMS2 (rw): Slave mode selection When external signals are selected the active edge of the trigger signal (tim_trgi) is linked to the polarity selected on the external input (see Input Control register and Control Register description. Note: The gated mode must not be used if tim_ti1f_ed is selected as the trigger input (TS=00100). Indeed, tim_ti1f_ed outputs 1 pulse for each transition on TI1F, whereas the gated mode checks the level of the trigger signal. Note: The clock of the slave peripherals (timer, ADC, ...) receiving the tim_trgo or the tim_trgo2 signals must be enabled prior to receive events from the master timer, and the clock frequency (prescaler) must not be changed on-the-fly while triggers are received from the master timer.
0x50013408 C   FIELD 20w02 TS2 (rw): Trigger selection - bit 4:3 Refer to TS[2:0] description - bits 6:4 null Trigger selection This bitfield is combined with TS[4:3] bits. This bit-field selects the trigger input to be used to synchronize the counter. others: Reserved See for more details on tim_itrx meaning for each Timer. Note: These bits must be changed only when they are not used (e.g. when SMS=000) to avoid wrong edge detections at the transition.
0x50013408 C   FIELD 24w01 SMSPE (rw): SMS preload enable This bit selects whether the SMS[3:0] bitfield is preloaded
0x50013408 C   FIELD 25w01 SMSPS (rw): SMS preload source This bit selects whether the events that triggers the SMS[3:0] bitfield transfer from preload to active
0x5001340C B  REGISTER TIM1_DIER: TIM1 DMA/interrupt enable register
0x5001340C C   FIELD 00w01 UIE (rw): Update interrupt enable
0x5001340C C   FIELD 01w01 CC1IE (rw): Capture/compare 1 interrupt enable
0x5001340C C   FIELD 02w01 CC2IE (rw): Capture/compare 2 interrupt enable
0x5001340C C   FIELD 03w01 CC3IE (rw): Capture/compare 3 interrupt enable
0x5001340C C   FIELD 04w01 CC4IE (rw): Capture/compare 4 interrupt enable
0x5001340C C   FIELD 05w01 COMIE (rw): COM interrupt enable
0x5001340C C   FIELD 06w01 TIE (rw): Trigger interrupt enable
0x5001340C C   FIELD 07w01 BIE (rw): Break interrupt enable
0x5001340C C   FIELD 08w01 UDE (rw): Update DMA request enable
0x5001340C C   FIELD 09w01 CC1DE (rw): Capture/compare 1 DMA request enable
0x5001340C C   FIELD 10w01 CC2DE (rw): Capture/compare 2 DMA request enable
0x5001340C C   FIELD 11w01 CC3DE (rw): Capture/compare 3 DMA request enable
0x5001340C C   FIELD 12w01 CC4DE (rw): Capture/compare 4 DMA request enable
0x5001340C C   FIELD 13w01 COMDE (rw): COM DMA request enable
0x5001340C C   FIELD 14w01 TDE (rw): Trigger DMA request enable
0x5001340C C   FIELD 20w01 IDXIE (rw): Index interrupt enable
0x5001340C C   FIELD 21w01 DIRIE (rw): Direction change interrupt enable
0x5001340C C   FIELD 22w01 IERRIE (rw): Index error interrupt enable
0x5001340C C   FIELD 23w01 TERRIE (rw): Transition error interrupt enable
0x50013410 B  REGISTER TIM1_SR: TIM1 status register
0x50013410 C   FIELD 00w01 UIF (rw): Update interrupt flag This bit is set by hardware on an update event. It is cleared by software. At overflow or underflow regarding the repetition counter value (update if repetition counter = 0) and if the UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if URS=0 and UDIS=0 in the TIMx_CR1 register. When CNT is reinitialized by a trigger event (refer to control register (TIMx_SMCR)(x = 1, 8)), if URS=0 and UDIS=0 in the TIMx_CR1 register.
0x50013410 C   FIELD 01w01 CC1IF (rw): Capture/compare 1 interrupt flag This flag is set by hardware. It is cleared by software (input capture or output compare mode) or by reading the TIMx_CCR1 register (input capture mode only). If channel CC1 is configured as output: this flag is set when the content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register. When the content of TIMx_CCR1 is greater than the content of TIMx_ARR, the CC1IF bit goes high on the counter overflow (in up-counting and up/down-counting modes) or underflow (in downcounting mode). There are 3 possible options for flag setting in center-aligned mode, refer to the CMS bits in the TIMx_CR1 register for the full description. If channel CC1 is configured as input: this bit is set when counter value has been captured in TIMx_CCR1 register (an edge has been detected on IC1, as per the edge sensitivity defined with the CC1P and CC1NP bits setting, in TIMx_CCER).
0x50013410 C   FIELD 02w01 CC2IF (rw): Capture/compare 2 interrupt flag Refer to CC1IF description
0x50013410 C   FIELD 03w01 CC3IF (rw): Capture/compare 3 interrupt flag Refer to CC1IF description
0x50013410 C   FIELD 04w01 CC4IF (rw): Capture/compare 4 interrupt flag Refer to CC1IF description
0x50013410 C   FIELD 05w01 COMIF (rw): COM interrupt flag This flag is set by hardware on COM event (when capture/compare Control bits - CCxE, CCxNE, OCxM - have been updated). It is cleared by software.
0x50013410 C   FIELD 06w01 TIF (rw): Trigger interrupt flag This flag is set by hardware on the TRG trigger event (active edge detected on tim_trgi input when the slave mode controller is enabled in all modes but gated mode. It is set when the counter starts or stops when gated mode is selected. It is cleared by software.
0x50013410 C   FIELD 07w01 BIF (rw): Break interrupt flag This flag is set by hardware as soon as the break input goes active. It can be cleared by software if the break input is not active.
0x50013410 C   FIELD 08w01 B2IF (rw): Break 2 interrupt flag This flag is set by hardware as soon as the break 2 input goes active. It can be cleared by software if the break 2 input is not active.
0x50013410 C   FIELD 09w01 CC1OF (rw): Capture/compare 1 overcapture flag This flag is set by hardware only when the corresponding channel is configured in input capture mode. It is cleared by software by writing it to '0â.
0x50013410 C   FIELD 10w01 CC2OF (rw): Capture/compare 2 overcapture flag Refer to CC1OF description
0x50013410 C   FIELD 11w01 CC3OF (rw): Capture/compare 3 overcapture flag Refer to CC1OF description
0x50013410 C   FIELD 12w01 CC4OF (rw): Capture/compare 4 overcapture flag Refer to CC1OF description
0x50013410 C   FIELD 13w01 SBIF (rw): System break interrupt flag This flag is set by hardware as soon as the system break input goes active. It can be cleared by software if the system break input is not active. This flag must be reset to re-start PWM operation.
0x50013410 C   FIELD 16w01 CC5IF (rw): Compare 5 interrupt flag Refer to CC1IF description Note: Channel 5 can only be configured as output.
0x50013410 C   FIELD 17w01 CC6IF (rw): Compare 6 interrupt flag Refer to CC1IF description Note: Channel 6 can only be configured as output.
0x50013410 C   FIELD 20w01 IDXF (rw): Index interrupt flag This flag is set by hardware when an index event is detected. It is cleared by software by writing it to '0â.
0x50013410 C   FIELD 21w01 DIRF (rw): Direction change interrupt flag This flag is set by hardware when the direction changes in encoder mode (DIR bit value in TIMx_CR is changing). It is cleared by software by writing it to '0â.
0x50013410 C   FIELD 22w01 IERRF (rw): Index error interrupt flag This flag is set by hardware when an index error is detected. It is cleared by software by writing it to '0â.
0x50013410 C   FIELD 23w01 TERRF (rw): Transition error interrupt flag This flag is set by hardware when a transition error is detected in encoder mode. It is cleared by software by writing it to '0â.
0x50013414 B  REGISTER TIM1_EGR: TIM1 event generation register
0x50013414 C   FIELD 00w01 UG (wo): Update generation This bit can be set by software, it is automatically cleared by hardware.
0x50013414 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware. If channel CC1 is configured as output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If channel CC1 is configured as input: The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set, the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the CC1IF flag was already high.
0x50013414 C   FIELD 02w01 CC2G (wo): Capture/compare 2 generation Refer to CC1G description
0x50013414 C   FIELD 03w01 CC3G (wo): Capture/compare 3 generation Refer to CC1G description
0x50013414 C   FIELD 04w01 CC4G (wo): Capture/compare 4 generation Refer to CC1G description
0x50013414 C   FIELD 05w01 COMG (wo): Capture/compare control update generation This bit can be set by software, it is automatically cleared by hardware Note: This bit acts only on channels having a complementary output.
0x50013414 C   FIELD 06w01 TG (wo): Trigger generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x50013414 C   FIELD 07w01 BG (wo): Break generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x50013414 C   FIELD 08w01 B2G (wo): Break 2 generation This bit is set by software in order to generate an event, it is automatically cleared by hardware.
0x50013418 B  REGISTER TIM1_CCMR1_Input: TIM1 capture/compare mode register 1 [alternate]
0x50013418 B  REGISTER TIM1_CCMR1_Output (rw): capture/compare mode register 1 (output mode)
0x50013418 C   FIELD 00w02 CC1S (rw): Capture/compare 1 Selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC1S bits are writable only when the channel is OFF (CC1E = '0â in TIMx_CCER).
0x50013418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50013418 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x50013418 C   FIELD 02w02 IC1PSC (rw): Input capture 1 prescaler This bit-field defines the ratio of the prescaler acting on CC1 input (tim_ic1). The prescaler is reset as soon as CC1E=â0â (TIMx_CCER register).
0x50013418 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x50013418 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x50013418 C   FIELD 04w04 IC1F (rw): Input capture 1 filter This bit-field defines the frequency used to sample tim_ti1 input and the length of the digital filter applied to tim_ti1. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output:
0x50013418 C   FIELD 07w01 OC1CE: Output Compare 1 clear enable
0x50013418 C   FIELD 08w02 CC2S (rw): Capture/compare 2 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC2S bits are writable only when the channel is OFF (CC2E = '0â in TIMx_CCER).
0x50013418 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x50013418 C   FIELD 10w01 OC2FE: Output Compare 2 fast enable
0x50013418 C   FIELD 10w02 IC2PSC (rw): Input capture 2 prescaler
0x50013418 C   FIELD 11w01 OC2PE: Output Compare 2 preload enable
0x50013418 C   FIELD 12w03 OC2M: Output Compare 2 mode
0x50013418 C   FIELD 12w04 IC2F (rw): Input capture 2 filter
0x50013418 C   FIELD 15w01 OC2CE: Output Compare 2 clear enable
0x50013418 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode - bit 3
0x50013418 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x5001341C B  REGISTER TIM1_CCMR2_Input: TIM1 capture/compare mode register 2 [alternate]
0x5001341C B  REGISTER TIM1_CCMR2_Output (rw): capture/compare mode register 2 (output mode)
0x5001341C C   FIELD 00w02 CC3S (rw): Capture/compare 3 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC3S bits are writable only when the channel is OFF (CC3E = '0â in TIMx_CCER).
0x5001341C C   FIELD 00w02 CC3S_1_0: Capture/Compare 3 selection
0x5001341C C   FIELD 02w01 OC3FE: Output compare 3 fast enable
0x5001341C C   FIELD 02w02 IC3PSC (rw): Input capture 3 prescaler
0x5001341C C   FIELD 03w01 OC3PE: Output compare 3 preload enable
0x5001341C C   FIELD 04w03 OC3M_2_0: Output compare 3 mode
0x5001341C C   FIELD 04w04 IC3F (rw): Input capture 3 filter
0x5001341C C   FIELD 07w01 OC3CE: Output compare 3 clear enable
0x5001341C C   FIELD 08w02 CC4S (rw): Capture/compare 4 selection This bit-field defines the direction of the channel (input/output) as well as the used input. Note: CC4S bits are writable only when the channel is OFF (CC4E = '0â in TIMx_CCER).
0x5001341C C   FIELD 08w02 CC4S_1_0: Capture/Compare 4 selection
0x5001341C C   FIELD 10w01 OC4FE: Output compare 4 fast enable
0x5001341C C   FIELD 10w02 IC4PSC (rw): Input capture 4 prescaler
0x5001341C C   FIELD 11w01 OC4PE: Output compare 4 preload enable
0x5001341C C   FIELD 12w03 OC4M_3_0: Output compare 4 mode
0x5001341C C   FIELD 12w04 IC4F (rw): Input capture 4 filter
0x5001341C C   FIELD 15w01 OC4CE: Output compare 4 clear enable
0x5001341C C   FIELD 16w01 OC3M_3: Output compare 3 mode
0x5001341C C   FIELD 24w01 OC4M_bit3: Output Compare 4 mode - bit 3
0x50013420 B  REGISTER TIM1_CCER: TIM1 capture/compare enable register
0x50013420 C   FIELD 00w01 CC1E (rw): Capture/compare 1 output enable When CC1 channel is configured as output, the OC1 level depends on MOE, OSSI, OSSR, OIS1, OIS1N and CC1NE bits, regardless of the CC1E bits state. Refer to for details. Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1E active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x50013420 C   FIELD 01w01 CC1P (rw): Capture/compare 1 output polarity When CC1 channel is configured as input, both CC1NP/CC1P bits select the active polarity of TI1FP1 and TI2FP1 for trigger or capture operations. CC1NP=0, CC1P=0: non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger operation in gated mode or encoder mode). CC1NP=0, CC1P=1: inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in gated mode or encoder mode). CC1NP=1, CC1P=1: non-inverted/both edges/ The circuit is sensitive to both TIxFP1 rising and falling edges (capture or trigger operations in reset, external clock or trigger mode), TIxFP1is not inverted (trigger operation in gated mode). This configuration must not be used in encoder mode. CC1NP=1, CC1P=0: the configuration is reserved, it must not be used. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x50013420 C   FIELD 02w01 CC1NE (rw): Capture/compare 1 complementary output enable Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NE active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x50013420 C   FIELD 03w01 CC1NP (rw): Capture/compare 1 complementary output polarity CC1 channel configured as output: CC1 channel configured as input: This bit is used in conjunction with CC1P to define the polarity of tim_ti1fp1 and tim_ti2fp1. Refer to CC1P description. Note: This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register) and CC1S=â00â (channel configured as output). Note: On channels having a complementary output, this bit is preloaded. If the CCPC bit is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the preloaded bit only when a Commutation event is generated.
0x50013420 C   FIELD 04w01 CC2E (rw): Capture/compare 2 output enable Refer to CC1E description
0x50013420 C   FIELD 05w01 CC2P (rw): Capture/compare 2 output polarity Refer to CC1P description
0x50013420 C   FIELD 06w01 CC2NE (rw): Capture/compare 2 complementary output enable Refer to CC1NE description
0x50013420 C   FIELD 07w01 CC2NP (rw): Capture/compare 2 complementary output polarity Refer to CC1NP description
0x50013420 C   FIELD 08w01 CC3E (rw): Capture/compare 3 output enable Refer to CC1E description
0x50013420 C   FIELD 09w01 CC3P (rw): Capture/compare 3 output polarity Refer to CC1P description
0x50013420 C   FIELD 10w01 CC3NE (rw): Capture/compare 3 complementary output enable Refer to CC1NE description
0x50013420 C   FIELD 11w01 CC3NP (rw): Capture/compare 3 complementary output polarity Refer to CC1NP description
0x50013420 C   FIELD 12w01 CC4E (rw): Capture/compare 4 output enable Refer to CC1E description
0x50013420 C   FIELD 13w01 CC4P (rw): Capture/compare 4 output polarity Refer to CC1P description
0x50013420 C   FIELD 14w01 CC4NE (rw): Capture/compare 4 complementary output enable Refer to CC1NE description
0x50013420 C   FIELD 15w01 CC4NP (rw): Capture/compare 4 complementary output polarity Refer to CC1NP description
0x50013420 C   FIELD 16w01 CC5E (rw): Capture/compare 5 output enable Refer to CC1E description
0x50013420 C   FIELD 17w01 CC5P (rw): Capture/compare 5 output polarity Refer to CC1P description
0x50013420 C   FIELD 20w01 CC6E (rw): Capture/compare 6 output enable Refer to CC1E description
0x50013420 C   FIELD 21w01 CC6P (rw): Capture/compare 6 output polarity Refer to CC1P description
0x50013424 B  REGISTER TIM1_CNT: TIM1 counter
0x50013424 C   FIELD 00w16 CNT (rw): Counter value Non-dithering mode (DITHEN = 0) The register holds the counter value. Dithering mode (DITHEN = 1) The register only holds the non-dithered part in CNT[15:0]. The fractional part is not available.
0x50013424 C   FIELD 31w01 UIFCPY (ro): UIF copy This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in the TIMxCR1 is reset, bit 31 is reserved and read at 0.
0x50013428 B  REGISTER TIM1_PSC: TIM1 prescaler
0x50013428 C   FIELD 00w16 PSC (rw): Prescaler value The counter clock frequency (ftim_cnt_ck) is equal to ftim_psc_ck / (PSC[15:0] + 1). PSC contains the value to be loaded in the active prescaler register at each update event (including when the counter is cleared through UG bit of TIMx_EGR register or through trigger controller when configured in âreset modeâ).
0x5001342C B  REGISTER TIM1_ARR: TIM1 auto-reload register
0x5001342C C   FIELD 00w20 ARR (rw): Auto-reload value ARR is the value to be loaded in the actual auto-reload register. Refer to the for more details about ARR update and behavior. The counter is blocked while the auto-reload value is null. Non-dithering mode (DITHEN = 0) The register holds the auto-reload value. Dithering mode (DITHEN = 1) The register holds the integer part in ARR[19:4]. The ARR[3:0] bitfield contains the dithered part.
0x50013430 B  REGISTER TIM1_RCR: TIM1 repetition counter register
0x50013430 C   FIELD 00w16 REP (rw): Repetition counter reload value This bitfield defines the update rate of the compare registers (i.e. periodic transfers from preload to active registers) when preload registers are enable. It also defines the update interrupt generation rate, if this interrupt is enable. When the repetition down-counter reaches zero, an update event is generated and it restarts counting from REP value. As the repetition counter is reloaded with REP value only at the repetition update event UEV, any write to the TIMx_RCR register is not taken in account until the next repetition update event. It means in PWM mode (REP+1) corresponds to: the number of PWM periods in edge-aligned mode the number of half PWM period in center-aligned mode.
0x50013434 B  REGISTER TIM1_CCR1: TIM1 capture/compare register 1
0x50013434 C   FIELD 00w20 CCR1 (rw): Capture/compare 1 value If channel CC1 is configured as output: CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC1PE). Else the preload value is copied in the active capture/compare 1 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc1 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR1[15:0]. The CCR1[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR1[19:4]. The CCR1[3:0] bitfield contains the dithered part. If channel CC1 is configured as input: CR1 is the counter value transferred by the last input capture 1 event (tim_ic1). The TIMx_CCR1 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR1[15:0]. The CCR1[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR1[19:4]. The CCR1[3:0] bits are reset.
0x50013438 B  REGISTER TIM1_CCR2: TIM1 capture/compare register 2
0x50013438 C   FIELD 00w20 CCR2 (rw): Capture/compare 2 value If channel CC2 is configured as output: CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit OC2PE). Else the preload value is copied in the active capture/compare 2 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc2 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR2[15:0]. The CCR2[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR2[19:4]. The CCR2[3:0] bitfield contains the dithered part. If channel CC2 is configured as input: CCR2 is the counter value transferred by the last input capture 2 event (tim_ic2). The TIMx_CCR2 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR2[15:0]. The CCR2[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR2[19:4]. The CCR2[3:0] bits are reset.
0x5001343C B  REGISTER TIM1_CCR3: TIM1 capture/compare register 3
0x5001343C C   FIELD 00w20 CCR3 (rw): Capture/compare value If channel CC3 is configured as output: CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC3PE). Else the preload value is copied in the active capture/compare 3 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc3 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR3[15:0]. The CCR3[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR3[19:4]. The CCR3[3:0] bitfield contains the dithered part. If channel CC3 is configured as input: CCR3 is the counter value transferred by the last input capture 3 event (tim_ic3). The TIMx_CCR3 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR3[15:0]. The CCR3[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR3[19:4]. The CCR3[3:0] bits are reset.
0x50013440 B  REGISTER TIM1_CCR4: TIM1 capture/compare register 4
0x50013440 C   FIELD 00w20 CCR4 (rw): Capture/compare value If channel CC4 is configured as output: CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit OC4PE). Else the preload value is copied in the active capture/compare 4 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signalled on tim_oc4 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR4[15:0]. The CCR4[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR4[19:4]. The CCR4[3:0] bitfield contains the dithered part. If channel CC4 is configured as input: CCR4 is the counter value transferred by the last input capture 4 event (tim_ic4). The TIMx_CCR4 register is read-only and cannot be programmed. Non-dithering mode (DITHEN = 0) The register holds the capture value in CCR4[15:0]. The CCR4[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the capture in CCR4[19:4]. The CCR4[3:0] bits are reset.
0x50013444 B  REGISTER TIM1_BDTR: TIM1 break and dead-time register
0x50013444 C   FIELD 00w08 DTG (rw): Dead-time generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs. DT correspond to this duration. DTG[7:5]=0xx => DT=DTG[7:0]x tdtg with tdtg=tDTS. DTG[7:5]=10x => DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS. DTG[7:5]=110 => DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS. DTG[7:5]=111 => DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS. Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 us to 31750 ns by 250 ns steps, 32 us to 63us by 1 us steps, 64 us to 126 us by 2 us steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013444 C   FIELD 08w02 LOCK (rw): Lock configuration These bits offer a write protection against software errors. Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register has been written, their content is frozen until the next reset.
0x50013444 C   FIELD 10w01 OSSI (rw): Off-state selection for idle mode This bit is used when MOE=0 due to a break event or by a software write, on channels configured as outputs. See OC/OCN enable description for more details (enable register (TIMx_CCER)(x = 1, 8)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013444 C   FIELD 11w01 OSSR (rw): Off-state selection for Run mode This bit is used when MOE=1 on channels having a complementary output which are configured as outputs. OSSR is not implemented if no complementary output is implemented in the timer. See OC/OCN enable description for more details (enable register (TIMx_CCER)(x = 1, 8)). Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013444 C   FIELD 12w01 BKE (rw): Break enable This bit enables the complete break protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50013444 C   FIELD 13w01 BKP (rw): Break polarity Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50013444 C   FIELD 14w01 AOE (rw): Automatic output enable Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013444 C   FIELD 15w01 MOE (rw): Main output enable This bit is cleared asynchronously by hardware as soon as one of the break inputs is active (tim_brk or tim_brk2). It is set by software or automatically depending on the AOE bit. It is acting only on the channels which are configured in output. In response to a break event or if MOE is written to 0: OC and OCN outputs are disabled or forced to idle state depending on the OSSI bit. enable register (TIMx_CCER)(x = 1, 8)).
0x50013444 C   FIELD 16w04 BKF (rw): Break filter This bit-field defines the frequency used to sample tim_brk input and the length of the digital filter applied to tim_brk. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013444 C   FIELD 20w04 BK2F (rw): Break 2 filter This bit-field defines the frequency used to sample tim_brk2 input and the length of the digital filter applied to tim_brk2. The digital filter is made of an event counter in which N consecutive events are needed to validate a transition on the output: Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013444 C   FIELD 24w01 BK2E (rw): Break 2 enable This bit enables the complete break 2 protection (including all sources connected to bk_acth and BKIN sources, as per ). Note: The BRKIN2 must only be used with OSSR = OSSI = 1. Note: This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50013444 C   FIELD 25w01 BK2P (rw): Break 2 polarity Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50013444 C   FIELD 26w01 BKDSRM (rw): Break disarm This bit is cleared by hardware when no break source is active. The BKDSRM bit must be set by software to release the bidirectional output control (open-drain output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the fault condition has disappeared. Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50013444 C   FIELD 27w01 BK2DSRM (rw): Break2 disarm Refer to BKDSRM description
0x50013444 C   FIELD 28w01 BKBID (rw): Break bidirectional In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input mode and in open drain output mode. Any active break event asserts a low logic level on the Break input to indicate an internal break event to external devices. Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register). Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.
0x50013444 C   FIELD 29w01 BK2BID (rw): Break2 bidirectional Refer to BKBID description
0x50013448 B  REGISTER TIM1_CCR5: TIM1 capture/compare register 5
0x50013448 C   FIELD 00w20 CCR5 (rw): Capture/compare 5 value CCR5 is the value to be loaded in the actual capture/compare 5 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC5PE). Else the preload value is copied in the active capture/compare 5 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc5 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR5[15:0]. The CCR5[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR5[19:4]. The CCR5[3:0] bitfield contains the dithered part.
0x50013448 C   FIELD 29w01 GC5C1 (rw): Group channel 5 and channel 1 Distortion on channel 1 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x50013448 C   FIELD 30w01 GC5C2 (rw): Group channel 5 and channel 2 Distortion on channel 2 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR1). Note: it is also possible to apply this distortion on combined PWM signals.
0x50013448 C   FIELD 31w01 GC5C3 (rw): Group channel 5 and channel 3 Distortion on channel 3 output: This bit can either have immediate effect or be preloaded and taken into account after an update event (if preload feature is selected in TIMxCCMR2). Note: it is also possible to apply this distortion on combined PWM signals.
0x5001344C B  REGISTER TIM1_CCR6: TIM1 capture/compare register 6
0x5001344C C   FIELD 00w20 CCR6 (rw): Capture/compare 6 value CCR6 is the value to be loaded in the actual capture/compare 6 register (preload value). It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit OC6PE). Else the preload value is copied in the active capture/compare 6 register when an update event occurs. The active capture/compare register contains the value to be compared to the counter TIMx_CNT and signaled on tim_oc6 output. Non-dithering mode (DITHEN = 0) The register holds the compare value in CCR6[15:0]. The CCR6[19:16] bits are reset. Dithering mode (DITHEN = 1) The register holds the integer part in CCR6[19:4]. The CCR6[3:0] bitfield contains the dithered part.
0x50013450 B  REGISTER TIM1_CCMR3: TIM1 capture/compare mode register 3
0x50013450 C   FIELD 02w01 OC5FE (rw): Output compare 5 fast enable
0x50013450 C   FIELD 03w01 OC5PE (rw): Output compare 5 preload enable
0x50013450 C   FIELD 04w03 OC5M1 (rw): Output compare 5 mode
0x50013450 C   FIELD 07w01 OC5CE (rw): Output compare 5 clear enable
0x50013450 C   FIELD 10w01 OC6FE (rw): Output compare 6 fast enable
0x50013450 C   FIELD 11w01 OC6PE (rw): Output compare 6 preload enable
0x50013450 C   FIELD 12w03 OC6M1 (rw): Output compare 6 mode
0x50013450 C   FIELD 15w01 OC6CE (rw): Output compare 6 clear enable
0x50013450 C   FIELD 16w01 OC5M2 (rw): Output compare 5 mode
0x50013450 C   FIELD 24w01 OC6M2 (rw): Output compare 6 mode
0x50013454 B  REGISTER TIM1_DTR2: TIM1 timer deadtime register 2
0x50013454 C   FIELD 00w08 DTGF (rw): Dead-time falling edge generator setup This bit-field defines the duration of the dead-time inserted between the complementary outputs, on the falling edge. DTGF[7:5]=0xx => DTF=DTGF[7:0]x tdtg with tdtg=tDTS. DTGF[7:5]=10x => DTF=(64+DTGF[5:0])xtdtg with Tdtg=2xtDTS. DTGF[7:5]=110 => DTF=(32+DTGF[4:0])xtdtg with Tdtg=8xtDTS. DTGF[7:5]=111 => DTF=(32+DTGF[4:0])xtdtg with Tdtg=16xtDTS. Example if TDTS=125ns (8MHz), dead-time possible values are: 0 to 15875 ns by 125 ns steps, 16 us to 31750 ns by 250 ns steps, 32 us to 63us by 1 us steps, 64 us to 126 us by 2 us steps Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013454 C   FIELD 16w01 DTAE (rw): Deadtime asymmetric enable Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013454 C   FIELD 17w01 DTPE (rw): Deadtime preload enable Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013458 B  REGISTER TIM1_ECR: TIM1 timer encoder control register
0x50013458 C   FIELD 00w01 IE (rw): Index enable This bit indicates if the Index event resets the counter.
0x50013458 C   FIELD 01w02 IDIR (rw): Index direction This bit indicates in which direction the Index event resets the counter. Note: The IDR[1:0] bitfield must be written when IE bit is reset (index disabled).
0x50013458 C   FIELD 03w02 IBLK (rw): Index blanking This bit indicates if the Index event is conditioned by the tim_ti3 input
0x50013458 C   FIELD 05w01 FIDX (rw): First index This bit indicates if the first index only is taken into account
0x50013458 C   FIELD 06w02 IPOS (rw): Index positioning In quadrature encoder mode (SMS[3:0] = 0001, 0010, 0011, 1110, 1111), this bit indicates in which AB input configuration the Index event resets the counter. In directional clock mode or clock plus direction mode (SMS[3:0] = 1010, 1011, 1100, 1101), these bits indicates on which level the Index event resets the counter. In bidirectional clock mode, this applies for both clock inputs. x0: Index resets the counter when clock is 0 x1: Index resets the counter when clock is 1 Note: IPOS[1]âbit is not significant
0x50013458 C   FIELD 16w08 PW (rw): Pulse width This bitfield defines the pulse duration, as following: tPW = PW[7:0] x tPWG
0x50013458 C   FIELD 24w03 PWPRSC (rw): Pulse width prescaler This bitfield sets the clock prescaler for the pulse generator, as following: tPWG = (2(PWPRSC[2:0])) x ttim_ker_ck
0x5001345C B  REGISTER TIM1_TISEL: TIM1 timer input selection register
0x5001345C C   FIELD 00w04 TI1SEL (rw): Selects tim_ti1[0..15] input ... Refer to for interconnects list.
0x5001345C C   FIELD 08w04 TI2SEL (rw): Selects tim_ti2[0..15] input ... Refer to for interconnects list.
0x5001345C C   FIELD 16w04 TI3SEL (rw): Selects tim_ti3[0..15] input ... Refer to for interconnects list.
0x5001345C C   FIELD 24w04 TI4SEL (rw): Selects tim_ti4[0..15] input ... Refer to for interconnects list.
0x50013460 B  REGISTER TIM1_AF1: TIM1 alternate function option register 1
0x50013460 C   FIELD 00w01 BKINE (rw): TIMx_BKIN input enable This bit enables the TIMx_BKIN alternate function input for the timerâs tim_brk input. TIMx_BKIN input is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 01w01 BKCMP1E (rw): tim_brk_cmp1 enable This bit enables the tim_brk_cmp1 for the timerâs tim_brk input. tim_brk_cmp1 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 02w01 BKCMP2E (rw): tim_brk_cmp2 enable This bit enables the tim_brk_cmp2 for the timerâs tim_brk input. tim_brk_cmp2 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 03w01 BKCMP3E (rw): tim_brk_cmp3 enable This bit enables the tim_brk_cmp3 for the timerâs tim_brk input. tim_brk_cmp3 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 04w01 BKCMP4E (rw): tim_brk_cmp4 enable This bit enables the tim_brk_cmp4 for the timerâs tim_brk input. tim_brk_cmp4 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 05w01 BKCMP5E (rw): tim_brk_cmp5 enable This bit enables the tim_brk_cmp5 for the timerâs tim_brk input. tim_brk_cmp5 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 06w01 BKCMP6E (rw): tim_brk_cmp6 enable This bit enables the tim_brk_cmp6 for the timerâs tim_brk input. tim_brk_cmp6 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 07w01 BKCMP7E (rw): tim_brk_cmp7 enable This bit enables the tim_brk_cmp7 for the timerâs tim_brk input. tim_brk_cmp7 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 08w01 BKCMP8E (rw): tim_brk_cmp8 enable This bit enables the tim_brk_cmp8 for the timerâs tim_brk input. tim_brk_cmp8 output is 'ORedâ with the other tim_brk sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 09w01 BKINP (rw): TIMx_BKIN input polarity This bit selects the TIMx_BKIN alternate function input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 10w01 BKCMP1P (rw): tim_brk_cmp1 input polarity This bit selects the tim_brk_cmp1 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 11w01 BKCMP2P (rw): tim_brk_cmp2 input polarity This bit selects the tim_brk_cmp2 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 12w01 BKCMP3P (rw): tim_brk_cmp3 input polarity This bit selects the tim_brk_cmp3 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 13w01 BKCMP4P (rw): tim_brk_cmp4 input polarity This bit selects the tim_brk_cmp4 input sensitivity. It must be programmed together with the BKP polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013460 C   FIELD 14w04 ETRSEL (rw): etr_in source selection These bits select the etr_in input source. ... Refer to for product specific implementation. Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 B  REGISTER TIM1_AF2: TIM1 alternate function register 2
0x50013464 C   FIELD 00w01 BK2INE (rw): TIMx_BKIN2 input enable This bit enables the TIMx_BKIN2 alternate function input for the timerâs tim_brk2 input. TIMx_BKIN2 input is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 01w01 BK2CMP1E (rw): tim_brk2_cmp1 enable This bit enables the tim_brk2_cmp1 for the timerâs tim_brk2 input. tim_brk2_cmp1 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 02w01 BK2CMP2E (rw): tim_brk2_cmp2 enable This bit enables the tim_brk2_cmp2 for the timerâs tim_brk2 input. tim_brk2_cmp2 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 03w01 BK2CMP3E (rw): tim_brk2_cmp3 enable This bit enables the tim_brk2_cmp3 for the timerâs tim_brk2 input. tim_brk2_cmp3 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 04w01 BK2CMP4E (rw): tim_brk2_cmp4 enable This bit enables the tim_brk2_cmp4 for the timerâs tim_brk2 input. tim_brk2_cmp4 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 05w01 BK2CMP5E (rw): tim_brk2_cmp5 enable This bit enables the tim_brk2_cmp5 for the timerâs tim_brk2 input. tim_brk2_cmp5 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 06w01 BK2CMP6E (rw): tim_brk2_cmp6 enable This bit enables the tim_brk2_cmp6 for the timerâs tim_brk2 input. tim_brk2_cmp6 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 07w01 BK2CMP7E (rw): tim_brk2_cmp7 enable This bit enables the tim_brk2_cmp7 for the timerâs tim_brk2 input. tim_brk2_cmp7 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 08w01 BK2CMP8E (rw): tim_brk2_cmp8 enable This bit enables the tim_brk2_cmp8 for the timerâs tim_brk2 input. tim_brk2_cmp8 output is 'ORedâ with the other tim_brk2 sources. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 09w01 BK2INP (rw): TIMx_BKIN2 input polarity This bit selects the TIMx_BKIN2 alternate function input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 10w01 BK2CMP1P (rw): tim_brk2_cmp1 input polarity This bit selects the tim_brk2_cmp1 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 11w01 BK2CMP2P (rw): tim_brk2_cmp2 input polarity This bit selects the tim_brk2_cmp2 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 12w01 BK2CMP3P (rw): tim_brk2_cmp3 input polarity This bit selects the tim_brk2_cmp3 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 13w01 BK2CMP4P (rw): tim_brk2_cmp4 input polarity This bit selects the tim_brk2_cmp4 input sensitivity. It must be programmed together with the BK2P polarity bit. Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x50013464 C   FIELD 16w03 OCRSEL (rw): ocref_clr source selection These bits select the ocref_clr input source. ... Refer to for product specific information. Note: These bits can not be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register).
0x500137DC B  REGISTER TIM1_DCR: TIM1 DMA control register
0x500137DC C   FIELD 00w05 DBA (rw): DMA base address This 5-bits vector defines the base-address for DMA transfers (when read/write access are done through the TIMx_DMAR address). DBA is defined as an offset starting from the address of the TIMx_CR1 register. Example: ...
0x500137DC C   FIELD 08w05 DBL (rw): DMA burst length This 5-bit vector defines the length of DMA transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers. Transfers can be in half-words or in bytes (see example below). ... Example: Let us consider the following transfer: DBL = 7 bytes & DBA = TIM2_CR1. If DBL = 7 bytes and DBA = TIM2_CR1 represents the address of the byte to be transferred, the address of the transfer should be given by the following equation: (TIMx_CR1 address) + DBA + (DMA index), where DMA index = DBL In this example, 7 bytes are added to (TIMx_CR1 address) + DBA, which gives us the address from/to which the data are copied. In this case, the transfer is done to 7 registers starting from the following address: (TIMx_CR1 address) + DBA According to the configuration of the DMA Data Size, several cases may occur: If the DMA Data Size is configured in half-words, 16-bit data are transferred to each of the 7 registers. If the DMA Data Size is configured in bytes, the data are also transferred to 7 registers: the first register contains the first MSB byte, the second register, the first LSB byte and so on. So with the transfer Timer, one also has to specify the size of data transferred by DMA.
0x500137DC C   FIELD 16w04 DBSS (rw): DMA burst source selection This bitfield defines the interrupt source that triggers the DMA burst transfers (the timer recognizes a burst transfer when a read or a write access is done to the TIMx_DMAR address). Others: reserved
0x500137E0 B  REGISTER TIM1_DMAR: TIM1 DMA address for full transfer
0x500137E0 C   FIELD 00w32 DMAB (rw): DMA register for burst accesses A read or write operation to the DMAR register accesses the register located at the address (TIMx_CR1 address) + (DBA + DMA index) x 4 where TIMx_CR1 address is the address of the control register 1, DBA is the DMA base address configured in TIMx_DCR register, DMA index is automatically controlled by the DMA transfer, and ranges from 0 to DBL (DBL configured in TIMx_DCR).
0x50013800 A PERIPHERAL SEC_USART1
0x50013800 B  REGISTER CR1_disabled (rw): Control register 1
0x50013800 B  REGISTER CR1_enabled (rw): Control register 1
0x50013800 C   FIELD 00w01 UE: USART enable
0x50013800 C   FIELD 00w01 UE: USART enable
0x50013800 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50013800 C   FIELD 01w01 UESM: USART enable in Stop mode
0x50013800 C   FIELD 02w01 RE: Receiver enable
0x50013800 C   FIELD 02w01 RE: Receiver enable
0x50013800 C   FIELD 03w01 TE: Transmitter enable
0x50013800 C   FIELD 03w01 TE: Transmitter enable
0x50013800 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50013800 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x50013800 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50013800 C   FIELD 05w01 RXFNEIE: RXFIFO not empty interrupt enable
0x50013800 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50013800 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x50013800 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50013800 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x50013800 C   FIELD 08w01 PEIE: PE interrupt enable
0x50013800 C   FIELD 08w01 PEIE: PE interrupt enable
0x50013800 C   FIELD 09w01 PS: Parity selection
0x50013800 C   FIELD 09w01 PS: Parity selection
0x50013800 C   FIELD 10w01 PCE: Parity control enable
0x50013800 C   FIELD 10w01 PCE: Parity control enable
0x50013800 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50013800 C   FIELD 11w01 WAKE: Receiver wakeup method
0x50013800 C   FIELD 12w01 M0: Word length
0x50013800 C   FIELD 12w01 M0: Word length
0x50013800 C   FIELD 13w01 MME: Mute mode enable
0x50013800 C   FIELD 13w01 MME: Mute mode enable
0x50013800 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50013800 C   FIELD 14w01 CMIE: Character match interrupt enable
0x50013800 C   FIELD 15w01 OVER8: Oversampling mode
0x50013800 C   FIELD 15w01 OVER8: Oversampling mode
0x50013800 C   FIELD 16w05 DEDT: DEDT
0x50013800 C   FIELD 16w05 DEDT: DEDT
0x50013800 C   FIELD 21w05 DEAT: DEAT
0x50013800 C   FIELD 21w05 DEAT: DEAT
0x50013800 C   FIELD 26w01 RTOIE: Receiver timeout interrupt
0x50013800 C   FIELD 26w01 RTOIE: Receiver timeout interrupt enable
0x50013800 C   FIELD 27w01 EOBIE: End of Block interrupt enable
0x50013800 C   FIELD 27w01 EOBIE: End of Block interruptenable
0x50013800 C   FIELD 28w01 M1: Word length
0x50013800 C   FIELD 28w01 M1: Word length
0x50013800 C   FIELD 29w01 FIFOEN: FIFOEN
0x50013800 C   FIELD 29w01 FIFOEN: FIFOEN
0x50013800 C   FIELD 30w01 TXFEIE: TXFEIE
0x50013800 C   FIELD 31w01 RXFFIE: RXFFIE
0x50013804 B  REGISTER CR2 (rw): Control register 2
0x50013804 C   FIELD 00w01 SLVEN: SLVEN
0x50013804 C   FIELD 03w01 DIS_NSS: DIS_NSS
0x50013804 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x50013804 C   FIELD 05w01 LBDL: LIN break detection length
0x50013804 C   FIELD 06w01 LBDIE: LIN break detection interrupt enable
0x50013804 C   FIELD 08w01 LBCL: Last bit clock pulse
0x50013804 C   FIELD 09w01 CPHA: Clock phase
0x50013804 C   FIELD 10w01 CPOL: Clock polarity
0x50013804 C   FIELD 11w01 CLKEN: Clock enable
0x50013804 C   FIELD 12w02 STOP: STOP bits
0x50013804 C   FIELD 14w01 LINEN: LIN mode enable
0x50013804 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x50013804 C   FIELD 16w01 RXINV: RX pin active level inversion
0x50013804 C   FIELD 17w01 TXINV: TX pin active level inversion
0x50013804 C   FIELD 18w01 DATAINV: Binary data inversion
0x50013804 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x50013804 C   FIELD 20w01 ABREN: Auto baud rate enable
0x50013804 C   FIELD 21w02 ABRMOD: Auto baud rate mode
0x50013804 C   FIELD 23w01 RTOEN: Receiver timeout enable
0x50013804 C   FIELD 24w08 ADD: Address of the USART node
0x50013808 B  REGISTER CR3 (rw): Control register 3
0x50013808 C   FIELD 00w01 EIE: Error interrupt enable
0x50013808 C   FIELD 01w01 IREN: Ir mode enable
0x50013808 C   FIELD 02w01 IRLP: Ir low-power
0x50013808 C   FIELD 03w01 HDSEL: Half-duplex selection
0x50013808 C   FIELD 04w01 NACK: Smartcard NACK enable
0x50013808 C   FIELD 05w01 SCEN: Smartcard mode enable
0x50013808 C   FIELD 06w01 DMAR: DMA enable receiver
0x50013808 C   FIELD 07w01 DMAT: DMA enable transmitter
0x50013808 C   FIELD 08w01 RTSE: RTS enable
0x50013808 C   FIELD 09w01 CTSE: CTS enable
0x50013808 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x50013808 C   FIELD 11w01 ONEBIT: One sample bit method enable
0x50013808 C   FIELD 12w01 OVRDIS: Overrun Disable
0x50013808 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x50013808 C   FIELD 14w01 DEM: Driver enable mode
0x50013808 C   FIELD 15w01 DEP: Driver enable polarity selection
0x50013808 C   FIELD 17w03 SCARCNT: Smartcard auto-retry count
0x50013808 C   FIELD 23w01 TXFTIE: TXFTIE
0x50013808 C   FIELD 24w01 TCBGTIE: TCBGTIE
0x50013808 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x50013808 C   FIELD 28w01 RXFTIE: RXFTIE
0x50013808 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x5001380C B  REGISTER BRR (rw): Baud rate register
0x5001380C C   FIELD 00w16 BRR: BRR
0x50013810 B  REGISTER GTPR (rw): Guard time and prescaler register
0x50013810 C   FIELD 00w08 PSC: Prescaler value
0x50013810 C   FIELD 08w08 GT: Guard time value
0x50013814 B  REGISTER RTOR (rw): Receiver timeout register
0x50013814 C   FIELD 00w24 RTO: Receiver timeout value
0x50013814 C   FIELD 24w08 BLEN: Block Length
0x50013818 B  REGISTER RQR (wo): Request register
0x50013818 C   FIELD 00w01 ABRRQ: Auto baud rate request
0x50013818 C   FIELD 01w01 SBKRQ: Send break request
0x50013818 C   FIELD 02w01 MMRQ: Mute mode request
0x50013818 C   FIELD 03w01 RXFRQ: Receive data flush request
0x50013818 C   FIELD 04w01 TXFRQ: Transmit data flush request
0x5001381C B  REGISTER ISR_disabled (ro): Interrupt & status register
0x5001381C B  REGISTER ISR_enabled (ro): Interrupt & status register
0x5001381C C   FIELD 00w01 PE: PE
0x5001381C C   FIELD 00w01 PE: PE
0x5001381C C   FIELD 01w01 FE: FE
0x5001381C C   FIELD 01w01 FE: FE
0x5001381C C   FIELD 02w01 NE: NE
0x5001381C C   FIELD 02w01 NE: NE
0x5001381C C   FIELD 03w01 ORE: ORE
0x5001381C C   FIELD 03w01 ORE: ORE
0x5001381C C   FIELD 04w01 IDLE: IDLE
0x5001381C C   FIELD 04w01 IDLE: IDLE
0x5001381C C   FIELD 05w01 RXFNE: RXFNE
0x5001381C C   FIELD 05w01 RXFNE: RXFNE
0x5001381C C   FIELD 06w01 TC: TC
0x5001381C C   FIELD 06w01 TC: TC
0x5001381C C   FIELD 07w01 TXFNF: TXFNF
0x5001381C C   FIELD 07w01 TXFNF: TXFNF
0x5001381C C   FIELD 08w01 LBDF: LBDF
0x5001381C C   FIELD 08w01 LBDF: LBDF
0x5001381C C   FIELD 09w01 CTSIF: CTSIF
0x5001381C C   FIELD 09w01 CTSIF: CTSIF
0x5001381C C   FIELD 10w01 CTS: CTS
0x5001381C C   FIELD 10w01 CTS: CTS
0x5001381C C   FIELD 11w01 RTOF: RTOF
0x5001381C C   FIELD 11w01 RTOF: RTOF
0x5001381C C   FIELD 12w01 EOBF: EOBF
0x5001381C C   FIELD 12w01 EOBF: EOBF
0x5001381C C   FIELD 13w01 UDR: UDR
0x5001381C C   FIELD 14w01 ABRE: ABRE
0x5001381C C   FIELD 14w01 ABRE: ABRE
0x5001381C C   FIELD 15w01 ABRF: ABRF
0x5001381C C   FIELD 15w01 ABRF: ABRF
0x5001381C C   FIELD 16w01 BUSY: BUSY
0x5001381C C   FIELD 16w01 BUSY: BUSY
0x5001381C C   FIELD 17w01 CMF: CMF
0x5001381C C   FIELD 17w01 CMF: CMF
0x5001381C C   FIELD 18w01 SBKF: SBKF
0x5001381C C   FIELD 18w01 SBKF: SBKF
0x5001381C C   FIELD 19w01 RWU: RWU
0x5001381C C   FIELD 19w01 RWU: RWU
0x5001381C C   FIELD 21w01 TEACK: TEACK
0x5001381C C   FIELD 21w01 TEACK: TEACK
0x5001381C C   FIELD 22w01 REACK: REACK
0x5001381C C   FIELD 22w01 REACK: REACK
0x5001381C C   FIELD 23w01 TXFE: TXFE
0x5001381C C   FIELD 24w01 RXFF: RXFF
0x5001381C C   FIELD 25w01 TCBGT: TCBGT
0x5001381C C   FIELD 25w01 TCBGT: TCBGT
0x5001381C C   FIELD 26w01 RXFT: RXFT
0x5001381C C   FIELD 27w01 TXFT: TXFT
0x50013820 B  REGISTER ICR (wo): Interrupt flag clear register
0x50013820 C   FIELD 00w01 PECF: Parity error clear flag
0x50013820 C   FIELD 01w01 FECF: Framing error clear flag
0x50013820 C   FIELD 02w01 NECF: Noise detected clear flag
0x50013820 C   FIELD 03w01 ORECF: Overrun error clear flag
0x50013820 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x50013820 C   FIELD 05w01 TXFECF: TXFECF
0x50013820 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x50013820 C   FIELD 07w01 TCBGTCF: TCBGTCF
0x50013820 C   FIELD 08w01 LBDCF: LIN break detection clear flag
0x50013820 C   FIELD 09w01 CTSCF: CTS clear flag
0x50013820 C   FIELD 11w01 RTOCF: Receiver timeout clear flag
0x50013820 C   FIELD 12w01 EOBCF: End of block clear flag
0x50013820 C   FIELD 13w01 UDRCF: UDRCF
0x50013820 C   FIELD 17w01 CMCF: Character match clear flag
0x50013824 B  REGISTER RDR (ro): Receive data register
0x50013824 C   FIELD 00w09 RDR: Receive data value
0x50013828 B  REGISTER TDR (rw): Transmit data register
0x50013828 C   FIELD 00w09 TDR: Transmit data value
0x5001382C B  REGISTER PRESC (rw): PRESC
0x5001382C C   FIELD 00w04 PRESCALER: PRESCALER
0x50013830 B  REGISTER AUTOCR (rw): AUTOCR
0x50013830 C   FIELD 00w16 TDN: TDN
0x50013830 C   FIELD 16w01 TRIGPOL: TRIPOL
0x50013830 C   FIELD 17w01 TRIGEN: TRIGEN
0x50013830 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x50013830 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x50013830 C   FIELD 31w01 TECLREN: TECLREN
0x50014000 A PERIPHERAL SEC_TIM15
0x50014000 B  REGISTER CR1 (rw): control register 1
0x50014000 C   FIELD 00w01 CEN: Counter enable
0x50014000 C   FIELD 01w01 UDIS: Update disable
0x50014000 C   FIELD 02w01 URS: Update request source
0x50014000 C   FIELD 03w01 OPM: One-pulse mode
0x50014000 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50014000 C   FIELD 08w02 CKD: Clock division
0x50014000 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50014000 C   FIELD 12w01 DITHEN: Dithering enable
0x50014004 B  REGISTER CR2 (rw): control register 2
0x50014004 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x50014004 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x50014004 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50014004 C   FIELD 04w02 MMS: Master mode selection
0x50014004 C   FIELD 07w01 TI1S: TI1 selection
0x50014004 C   FIELD 08w01 OIS1: Output Idle state 1
0x50014004 C   FIELD 09w01 OIS1N: Output Idle state 1
0x50014004 C   FIELD 10w01 OIS2: Output idle state 2 (OC2 output)
0x50014008 B  REGISTER SMCR (rw): slave mode control register
0x50014008 C   FIELD 00w03 SMS: Slave mode selection
0x50014008 C   FIELD 04w03 TS_2_0: Trigger selection
0x50014008 C   FIELD 07w01 MSM: Master/slave mode
0x50014008 C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x50014008 C   FIELD 16w01 SMS_3: Slave mode selection
0x50014008 C   FIELD 20w02 TS_4_3: Trigger selection
0x5001400C B  REGISTER DIER (rw): DMA/Interrupt enable register
0x5001400C C   FIELD 00w01 UIE: Update interrupt enable
0x5001400C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x5001400C C   FIELD 02w01 CC2IE: Capture/Compare 2 interrupt enable
0x5001400C C   FIELD 05w01 COMIE: COM interrupt enable
0x5001400C C   FIELD 06w01 TIE: Trigger interrupt enable
0x5001400C C   FIELD 07w01 BIE: Break interrupt enable
0x5001400C C   FIELD 08w01 UDE: Update DMA request enable
0x5001400C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x5001400C C   FIELD 10w01 CC2DE: Capture/Compare 2 DMA request enable
0x5001400C C   FIELD 13w01 COMDE: COM DMA request enable
0x5001400C C   FIELD 14w01 TDE: Trigger DMA request enable
0x50014010 B  REGISTER SR (rw): status register
0x50014010 C   FIELD 00w01 UIF: Update interrupt flag
0x50014010 C   FIELD 01w01 CC1IF: Capture/compare 1 interrupt flag
0x50014010 C   FIELD 02w01 CC2IF: Capture/Compare 2 interrupt flag
0x50014010 C   FIELD 05w01 COMIF: COM interrupt flag
0x50014010 C   FIELD 06w01 TIF: Trigger interrupt flag
0x50014010 C   FIELD 07w01 BIF: Break interrupt flag
0x50014010 C   FIELD 09w01 CC1OF: Capture/Compare 1 overcapture flag
0x50014010 C   FIELD 10w01 CC2OF: Capture/Compare 2 overcapture flag
0x50014014 B  REGISTER EGR: event generation register
0x50014014 C   FIELD 00w01 UG (wo): Update generation
0x50014014 C   FIELD 01w01 CC1G (wo): Capture/compare 1 generation
0x50014014 C   FIELD 02w01 CC2G (wo): Capture/Compare 2 generation
0x50014014 C   FIELD 05w01 COMG (rw): Capture/Compare control update generation
0x50014014 C   FIELD 06w01 TG (wo): Trigger generation
0x50014014 C   FIELD 07w01 BG (wo): Break generation
0x50014018 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x50014018 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x50014018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50014018 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50014018 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x50014018 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x50014018 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x50014018 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x50014018 C   FIELD 04w04 IC1F: Input capture 1 filter
0x50014018 C   FIELD 07w01 OC1CE: Output compare 1 clear enable
0x50014018 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x50014018 C   FIELD 08w02 CC2S: Capture/Compare 2 selection
0x50014018 C   FIELD 10w01 OC2FE: Output compare 2 fast enable
0x50014018 C   FIELD 10w02 IC2PSC: Input capture 2 prescaler
0x50014018 C   FIELD 11w01 OC2PE: Output Compare 2 preload enable
0x50014018 C   FIELD 12w03 OC2M: Output Compare 2 mode
0x50014018 C   FIELD 12w04 IC2F: Input capture 2 filter
0x50014018 C   FIELD 16w01 OC1M_bit3: Output Compare 1 mode
0x50014018 C   FIELD 24w01 OC2M_bit3: Output Compare 2 mode - bit 3
0x50014020 B  REGISTER CCER (rw): capture/compare enable register
0x50014020 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x50014020 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x50014020 C   FIELD 02w01 CC1NE: Capture/Compare 1 complementary output enable
0x50014020 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x50014020 C   FIELD 04w01 CC2E: Capture/Compare 2 output enable
0x50014020 C   FIELD 05w01 CC2P: Capture/Compare 2 output polarity
0x50014020 C   FIELD 07w01 CC2NP: Capture/Compare 2 complementary output polarity
0x50014024 B  REGISTER CNT: counter
0x50014024 C   FIELD 00w16 CNT (rw): counter value
0x50014024 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x50014028 B  REGISTER PSC (rw): prescaler
0x50014028 C   FIELD 00w16 PSC: Prescaler value
0x5001402C B  REGISTER ARR (rw): auto-reload register
0x5001402C C   FIELD 00w20 ARR: Auto-reload value
0x50014030 B  REGISTER RCR (rw): repetition counter register
0x50014030 C   FIELD 00w08 REP: Repetition counter value
0x50014034 B  REGISTER CCR1 (rw): capture/compare register 1
0x50014034 C   FIELD 00w20 CCR1: Capture/Compare 1 value
0x50014038 B  REGISTER CCR2 (rw): capture/compare register 2
0x50014038 C   FIELD 00w20 CCR1: Capture/Compare 1 value
0x50014044 B  REGISTER BDTR (rw): break and dead-time register
0x50014044 C   FIELD 00w08 DTG: Dead-time generator setup
0x50014044 C   FIELD 08w02 LOCK: Lock configuration
0x50014044 C   FIELD 10w01 OSSI: Off-state selection for Idle mode
0x50014044 C   FIELD 11w01 OSSR: Off-state selection for Run mode
0x50014044 C   FIELD 12w01 BKE: Break enable
0x50014044 C   FIELD 13w01 BKP: Break polarity
0x50014044 C   FIELD 14w01 AOE: Automatic output enable
0x50014044 C   FIELD 15w01 MOE: Main output enable
0x50014044 C   FIELD 16w04 BKF: Break filter
0x50014044 C   FIELD 26w01 BKDSRM: Break Disarm
0x50014044 C   FIELD 28w01 BKBID: Break Bidirectional
0x50014054 B  REGISTER DTR2 (rw): timer deadtime register 2
0x50014054 C   FIELD 00w08 DTGF: Dead-time falling edge generator setup
0x50014054 C   FIELD 16w01 DTAE: Deadtime asymmetric enable
0x50014054 C   FIELD 17w01 DTPE: Deadtime preload enable
0x5001405C B  REGISTER TISEL (rw): input selection register
0x5001405C C   FIELD 00w04 TI1SEL: selects tim_ti1_in[0..15] input
0x5001405C C   FIELD 08w04 TI2SEL: selects tim_ti2_in[0..15] input
0x50014060 B  REGISTER AF1 (rw): alternate function register 1
0x50014060 C   FIELD 00w01 BKINE: TIMx_BKIN input enable
0x50014060 C   FIELD 01w01 BKCMP1E: tim_brk_cmp1 enable
0x50014060 C   FIELD 02w01 BKCMP2E: tim_brk_cmp2 enable
0x50014060 C   FIELD 03w01 BKCMP3E: tim_brk_cmp3 enable
0x50014060 C   FIELD 04w01 BKCMP4E: tim_brk_cmp4 enable
0x50014060 C   FIELD 05w01 BKCMP5E: tim_brk_cmp5 enable
0x50014060 C   FIELD 06w01 BKCMP6E: tim_brk_cmp6 enable
0x50014060 C   FIELD 07w01 BKCMP7E: tim_brk_cmp7 enable
0x50014060 C   FIELD 09w01 BKINP: TIMx_BKIN input polarity
0x50014060 C   FIELD 10w01 BKCMP1P: tim_brk_cmp1 input polarity
0x50014060 C   FIELD 11w01 BKCMP2P: tim_brk_cmp2 input polarity
0x50014060 C   FIELD 12w01 BKCMP3P: tim_brk_cmp3 input polarity
0x50014060 C   FIELD 13w01 BKCMP4P: tim_brk_cmp4 input polarity
0x50014064 B  REGISTER AF2 (rw): alternate function register 2
0x50014064 C   FIELD 16w03 OCRSEL: ocref_clr source selection
0x500143DC B  REGISTER DCR (rw): DMA control register
0x500143DC C   FIELD 00w05 DBA: DMA base address
0x500143DC C   FIELD 08w05 DBL: DMA burst length
0x500143DC C   FIELD 16w04 DBSS: DMA burst source selection
0x500143E0 B  REGISTER DMAR (rw): DMA address for full transfer
0x500143E0 C   FIELD 00w32 DMAB: DMA register for burst accesses
0x50014400 A PERIPHERAL SEC_TIM16
0x50014400 B  REGISTER CR1 (rw): control register 1
0x50014400 C   FIELD 00w01 CEN: Counter enable
0x50014400 C   FIELD 01w01 UDIS: Update disable
0x50014400 C   FIELD 02w01 URS: Update request source
0x50014400 C   FIELD 03w01 OPM: One pulse mode
0x50014400 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50014400 C   FIELD 08w02 CKD: Clock division
0x50014400 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50014404 B  REGISTER CR2 (rw): control register 2
0x50014404 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x50014404 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x50014404 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50014404 C   FIELD 08w01 OIS1: Output Idle state 1
0x50014404 C   FIELD 09w01 OIS1N: Output Idle state 1
0x5001440C B  REGISTER DIER (rw): DMA/interrupt enable register
0x5001440C C   FIELD 00w01 UIE: Update interrupt enable
0x5001440C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x5001440C C   FIELD 05w01 COMIE: COM interrupt enable
0x5001440C C   FIELD 07w01 BIE: Break interrupt enable
0x5001440C C   FIELD 08w01 UDE: Update DMA request enable
0x5001440C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x5001440C C   FIELD 13w01 COMDE: COM DMA request enable
0x50014410 B  REGISTER SR (rw): status register
0x50014410 C   FIELD 00w01 UIF: Update interrupt flag
0x50014410 C   FIELD 01w01 CC1IF: Capture/Compare 1 interrupt flag
0x50014410 C   FIELD 05w01 COMIF: COM interrupt flag
0x50014410 C   FIELD 07w01 BIF: Break interrupt flag
0x50014410 C   FIELD 09w01 CC1OF: CC1OF
0x50014414 B  REGISTER EGR (wo): event generation register
0x50014414 C   FIELD 00w01 UG: Update generation
0x50014414 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x50014414 C   FIELD 05w01 COMG: Capture/Compare control update generation
0x50014414 C   FIELD 07w01 BG: Break generation
0x50014418 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x50014418 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x50014418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50014418 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50014418 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x50014418 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x50014418 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x50014418 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x50014418 C   FIELD 04w04 IC1F: Input capture 1 filter
0x50014418 C   FIELD 07w01 OC1CE: Output Compare 1 clear enable
0x50014418 C   FIELD 16w01 OC1M_2: Output Compare 1 mode
0x50014420 B  REGISTER CCER (rw): capture/compare enable register
0x50014420 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x50014420 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x50014420 C   FIELD 02w01 CC1NE: Capture/Compare 1 complementary output enable
0x50014420 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x50014424 B  REGISTER CNT: counter
0x50014424 C   FIELD 00w16 CNT (rw): CNT
0x50014424 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x50014428 B  REGISTER PSC (rw): prescaler
0x50014428 C   FIELD 00w16 PSC: Prescaler value
0x5001442C B  REGISTER ARR (rw): auto-reload register
0x5001442C C   FIELD 00w20 ARR: Auto-reload value
0x50014430 B  REGISTER RCR (rw): repetition counter register
0x50014430 C   FIELD 00w08 REP: Repetition counter value
0x50014434 B  REGISTER CCR1 (rw): capture/compare register 1
0x50014434 C   FIELD 00w20 CCR1: Capture/Compare 1 value
0x50014444 B  REGISTER BDTR (rw): break and dead-time register
0x50014444 C   FIELD 00w08 DTG: Dead-time generator setup
0x50014444 C   FIELD 08w02 LOCK: Lock configuration
0x50014444 C   FIELD 10w01 OSSI: Off-state selection for Idle mode
0x50014444 C   FIELD 11w01 OSSR: Off-state selection for Run mode
0x50014444 C   FIELD 12w01 BKE: Break enable
0x50014444 C   FIELD 13w01 BKP: Break polarity
0x50014444 C   FIELD 14w01 AOE: Automatic output enable
0x50014444 C   FIELD 15w01 MOE: Main output enable
0x50014444 C   FIELD 26w01 BKDSRM: Break Disarm
0x50014444 C   FIELD 28w01 BKBID: Break Bidirectional
0x50014454 B  REGISTER DTR2 (rw): timer deadtime register 2
0x50014454 C   FIELD 00w08 DTGF: Deadtime asymmetric enable
0x50014454 C   FIELD 16w01 DTAE: Deadtime asymmetric enable
0x50014454 C   FIELD 17w01 DTPE: Deadtime preload enable
0x5001445C B  REGISTER TISEL (rw): TIM17 option register 1
0x5001445C C   FIELD 00w04 TI1SEL: selects tim_ti1_in[0..15] input
0x50014460 B  REGISTER AF1 (rw): alternate function register 1
0x50014460 C   FIELD 00w01 BKINE: TIMx_BKIN input enable
0x50014460 C   FIELD 01w01 BKCMP1E: tim_brk_cmp1 enable
0x50014460 C   FIELD 02w01 BKCMP2E: tim_brk_cmp2 enable
0x50014460 C   FIELD 03w01 BKCMP3E: tim_brk_cmp3 enable
0x50014460 C   FIELD 04w01 BKCMP4E: tim_brk_cmp4 enable
0x50014460 C   FIELD 05w01 BKCMP5E: tim_brk_cmp5 enable
0x50014460 C   FIELD 06w01 BKCMP6E: tim_brk_cmp6 enable
0x50014460 C   FIELD 07w01 BKCMP7E: tim_brk_cmp7 enable
0x50014460 C   FIELD 09w01 BKINP: TIMx_BKIN input polarity
0x50014460 C   FIELD 10w01 BKCMP1P: tim_brk_cmp1 input polarity
0x50014460 C   FIELD 11w01 BKCMP2P: tim_brk_cmp2 input polarity
0x50014460 C   FIELD 12w01 BKCMP3P: tim_brk_cmp3 input polarity
0x50014460 C   FIELD 13w01 BKCMP4P: tim_brk_cmp4 input polarity
0x50014464 B  REGISTER AF2 (rw): alternate function register 2
0x50014464 C   FIELD 16w03 OCRSEL: tim_ocref_clr source selection
0x500147DC B  REGISTER DCR (rw): DMA control register
0x500147DC C   FIELD 00w05 DBA: DMA base address
0x500147DC C   FIELD 08w05 DBL: DMA burst length
0x500147DC C   FIELD 16w04 DBSS: DMA burst source selection
0x500147E0 B  REGISTER DMAR (rw): TIM17 option register 1
0x500147E0 C   FIELD 00w32 DMAB: DMA register for burst accesses
0x50014800 A PERIPHERAL SEC_TIM17
0x50014800 B  REGISTER CR1 (rw): control register 1
0x50014800 C   FIELD 00w01 CEN: Counter enable
0x50014800 C   FIELD 01w01 UDIS: Update disable
0x50014800 C   FIELD 02w01 URS: Update request source
0x50014800 C   FIELD 03w01 OPM: One pulse mode
0x50014800 C   FIELD 07w01 ARPE: Auto-reload preload enable
0x50014800 C   FIELD 08w02 CKD: Clock division
0x50014800 C   FIELD 11w01 UIFREMAP: UIF status bit remapping
0x50014804 B  REGISTER CR2 (rw): control register 2
0x50014804 C   FIELD 00w01 CCPC: Capture/compare preloaded control
0x50014804 C   FIELD 02w01 CCUS: Capture/compare control update selection
0x50014804 C   FIELD 03w01 CCDS: Capture/compare DMA selection
0x50014804 C   FIELD 08w01 OIS1: Output Idle state 1
0x50014804 C   FIELD 09w01 OIS1N: Output Idle state 1
0x5001480C B  REGISTER DIER (rw): DMA/interrupt enable register
0x5001480C C   FIELD 00w01 UIE: Update interrupt enable
0x5001480C C   FIELD 01w01 CC1IE: Capture/Compare 1 interrupt enable
0x5001480C C   FIELD 05w01 COMIE: COM interrupt enable
0x5001480C C   FIELD 07w01 BIE: Break interrupt enable
0x5001480C C   FIELD 08w01 UDE: Update DMA request enable
0x5001480C C   FIELD 09w01 CC1DE: Capture/Compare 1 DMA request enable
0x5001480C C   FIELD 13w01 COMDE: COM DMA request enable
0x50014810 B  REGISTER SR (rw): status register
0x50014810 C   FIELD 00w01 UIF: Update interrupt flag
0x50014810 C   FIELD 01w01 CC1IF: Capture/Compare 1 interrupt flag
0x50014810 C   FIELD 05w01 COMIF: COM interrupt flag
0x50014810 C   FIELD 07w01 BIF: Break interrupt flag
0x50014810 C   FIELD 09w01 CC1OF: CC1OF
0x50014814 B  REGISTER EGR (wo): event generation register
0x50014814 C   FIELD 00w01 UG: Update generation
0x50014814 C   FIELD 01w01 CC1G: Capture/compare 1 generation
0x50014814 C   FIELD 05w01 COMG: Capture/Compare control update generation
0x50014814 C   FIELD 07w01 BG: Break generation
0x50014818 B  REGISTER CCMR1_Input (rw): capture/compare mode register 1 (input mode)
0x50014818 B  REGISTER CCMR1_Output (rw): capture/compare mode register (output mode)
0x50014818 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50014818 C   FIELD 00w02 CC1S: Capture/Compare 1 selection
0x50014818 C   FIELD 02w01 OC1FE: Output Compare 1 fast enable
0x50014818 C   FIELD 02w02 IC1PSC: Input capture 1 prescaler
0x50014818 C   FIELD 03w01 OC1PE: Output Compare 1 preload enable
0x50014818 C   FIELD 04w03 OC1M: Output Compare 1 mode
0x50014818 C   FIELD 04w04 IC1F: Input capture 1 filter
0x50014818 C   FIELD 07w01 OC1CE: Output Compare 1 clear enable
0x50014818 C   FIELD 16w01 OC1M_2: Output Compare 1 mode
0x50014820 B  REGISTER CCER (rw): capture/compare enable register
0x50014820 C   FIELD 00w01 CC1E: Capture/Compare 1 output enable
0x50014820 C   FIELD 01w01 CC1P: Capture/Compare 1 output Polarity
0x50014820 C   FIELD 02w01 CC1NE: Capture/Compare 1 complementary output enable
0x50014820 C   FIELD 03w01 CC1NP: Capture/Compare 1 output Polarity
0x50014824 B  REGISTER CNT: counter
0x50014824 C   FIELD 00w16 CNT (rw): CNT
0x50014824 C   FIELD 31w01 UIFCPY (ro): UIF Copy
0x50014828 B  REGISTER PSC (rw): prescaler
0x50014828 C   FIELD 00w16 PSC: Prescaler value
0x5001482C B  REGISTER ARR (rw): auto-reload register
0x5001482C C   FIELD 00w20 ARR: Auto-reload value
0x50014830 B  REGISTER RCR (rw): repetition counter register
0x50014830 C   FIELD 00w08 REP: Repetition counter value
0x50014834 B  REGISTER CCR1 (rw): capture/compare register 1
0x50014834 C   FIELD 00w20 CCR1: Capture/Compare 1 value
0x50014844 B  REGISTER BDTR (rw): break and dead-time register
0x50014844 C   FIELD 00w08 DTG: Dead-time generator setup
0x50014844 C   FIELD 08w02 LOCK: Lock configuration
0x50014844 C   FIELD 10w01 OSSI: Off-state selection for Idle mode
0x50014844 C   FIELD 11w01 OSSR: Off-state selection for Run mode
0x50014844 C   FIELD 12w01 BKE: Break enable
0x50014844 C   FIELD 13w01 BKP: Break polarity
0x50014844 C   FIELD 14w01 AOE: Automatic output enable
0x50014844 C   FIELD 15w01 MOE: Main output enable
0x50014844 C   FIELD 26w01 BKDSRM: Break Disarm
0x50014844 C   FIELD 28w01 BKBID: Break Bidirectional
0x50014854 B  REGISTER DTR2 (rw): timer deadtime register 2
0x50014854 C   FIELD 00w08 DTGF: Deadtime asymmetric enable
0x50014854 C   FIELD 16w01 DTAE: Deadtime asymmetric enable
0x50014854 C   FIELD 17w01 DTPE: Deadtime preload enable
0x5001485C B  REGISTER TISEL (rw): TIM17 option register 1
0x5001485C C   FIELD 00w04 TI1SEL: selects tim_ti1_in[0..15] input
0x50014860 B  REGISTER AF1 (rw): alternate function register 1
0x50014860 C   FIELD 00w01 BKINE: TIMx_BKIN input enable
0x50014860 C   FIELD 01w01 BKCMP1E: tim_brk_cmp1 enable
0x50014860 C   FIELD 02w01 BKCMP2E: tim_brk_cmp2 enable
0x50014860 C   FIELD 03w01 BKCMP3E: tim_brk_cmp3 enable
0x50014860 C   FIELD 04w01 BKCMP4E: tim_brk_cmp4 enable
0x50014860 C   FIELD 05w01 BKCMP5E: tim_brk_cmp5 enable
0x50014860 C   FIELD 06w01 BKCMP6E: tim_brk_cmp6 enable
0x50014860 C   FIELD 07w01 BKCMP7E: tim_brk_cmp7 enable
0x50014860 C   FIELD 09w01 BKINP: TIMx_BKIN input polarity
0x50014860 C   FIELD 10w01 BKCMP1P: tim_brk_cmp1 input polarity
0x50014860 C   FIELD 11w01 BKCMP2P: tim_brk_cmp2 input polarity
0x50014860 C   FIELD 12w01 BKCMP3P: tim_brk_cmp3 input polarity
0x50014860 C   FIELD 13w01 BKCMP4P: tim_brk_cmp4 input polarity
0x50014864 B  REGISTER AF2 (rw): alternate function register 2
0x50014864 C   FIELD 16w03 OCRSEL: tim_ocref_clr source selection
0x50014BDC B  REGISTER DCR (rw): DMA control register
0x50014BDC C   FIELD 00w05 DBA: DMA base address
0x50014BDC C   FIELD 08w05 DBL: DMA burst length
0x50014BDC C   FIELD 16w04 DBSS: DMA burst source selection
0x50014BE0 B  REGISTER DMAR (rw): TIM17 option register 1
0x50014BE0 C   FIELD 00w32 DMAB: DMA register for burst accesses
0x50015400 A PERIPHERAL SEC_SAI1
0x50015400 B  REGISTER GCR (rw): Global configuration register
0x50015400 C   FIELD 00w02 SYNCIN: Synchronization inputs
0x50015400 C   FIELD 04w02 SYNCOUT: Synchronization outputs
0x50015404 B  REGISTER ACR1 (rw): A Configuration register 1
0x50015404 C   FIELD 00w02 MODE: Audio block mode
0x50015404 C   FIELD 02w02 PRTCFG: Protocol configuration
0x50015404 C   FIELD 05w03 DS: Data size
0x50015404 C   FIELD 08w01 LSBFIRST: Least significant bit first
0x50015404 C   FIELD 09w01 CKSTR: Clock strobing edge
0x50015404 C   FIELD 10w02 SYNCEN: Synchronization enable
0x50015404 C   FIELD 12w01 MONO: Mono mode
0x50015404 C   FIELD 13w01 OUTDRIV: Output drive
0x50015404 C   FIELD 16w01 SAIAEN: Audio block A enable
0x50015404 C   FIELD 17w01 DMAEN: DMA enable
0x50015404 C   FIELD 19w01 NODIV: No divider
0x50015404 C   FIELD 20w06 MCKDIV: Master clock divider
0x50015404 C   FIELD 26w01 OSR: OSR
0x50015404 C   FIELD 27w01 MCKEN: MCKEN
0x50015408 B  REGISTER ACR2 (rw): A Configuration register 2
0x50015408 C   FIELD 00w03 FTH: FIFO threshold
0x50015408 C   FIELD 03w01 FFLUSH: FIFO flush
0x50015408 C   FIELD 04w01 TRIS: Tristate management on data line
0x50015408 C   FIELD 05w01 MUTE: Mute
0x50015408 C   FIELD 06w01 MUTEVAL: Mute value
0x50015408 C   FIELD 07w06 MUTECN: Mute counter
0x50015408 C   FIELD 13w01 CPL: Complement bit
0x50015408 C   FIELD 14w02 COMP: Companding mode
0x5001540C B  REGISTER AFRCR: A frame configuration register
0x5001540C C   FIELD 00w08 FRL (rw): Frame length
0x5001540C C   FIELD 08w07 FSALL (rw): Frame synchronization active level length
0x5001540C C   FIELD 16w01 FSDEF (ro): Frame synchronization definition
0x5001540C C   FIELD 17w01 FSPOL (rw): Frame synchronization polarity
0x5001540C C   FIELD 18w01 FSOFF (rw): Frame synchronization offset
0x50015410 B  REGISTER ASLOTR (rw): A Slot register
0x50015410 C   FIELD 00w05 FBOFF: First bit offset
0x50015410 C   FIELD 06w02 SLOTSZ: Slot size
0x50015410 C   FIELD 08w04 NBSLOT: Number of slots in an audio frame
0x50015410 C   FIELD 16w16 SLOTEN: Slot enable
0x50015414 B  REGISTER AIM (rw): A Interrupt mask register
0x50015414 C   FIELD 00w01 OVRUDRIE: Overrun/underrun interrupt enable
0x50015414 C   FIELD 01w01 MUTEDETIE: Mute detection interrupt enable
0x50015414 C   FIELD 02w01 WCKCFGIE: Wrong clock configuration interrupt enable
0x50015414 C   FIELD 03w01 FREQIE: FIFO request interrupt enable
0x50015414 C   FIELD 04w01 CNRDYIE: Codec not ready interrupt enable
0x50015414 C   FIELD 05w01 AFSDETIE: Anticipated frame synchronization detection interrupt enable
0x50015414 C   FIELD 06w01 LFSDETIE: Late frame synchronization detection interrupt enable
0x50015418 B  REGISTER ASR (ro): A Status register
0x50015418 C   FIELD 00w01 OVRUDR: Overrun / underrun
0x50015418 C   FIELD 01w01 MUTEDET: Mute detection
0x50015418 C   FIELD 02w01 WCKCFG: Wrong clock configuration flag. This bit is read only
0x50015418 C   FIELD 03w01 FREQ: FIFO request
0x50015418 C   FIELD 04w01 CNRDY: Codec not ready
0x50015418 C   FIELD 05w01 AFSDET: Anticipated frame synchronization detection
0x50015418 C   FIELD 06w01 LFSDET: Late frame synchronization detection
0x50015418 C   FIELD 16w03 FLVL: FIFO level threshold
0x5001541C B  REGISTER ACLRFR (wo): A Clear flag register
0x5001541C C   FIELD 00w01 COVRUDR: Clear overrun / underrun
0x5001541C C   FIELD 01w01 CMUTEDET: Mute detection flag
0x5001541C C   FIELD 02w01 CWCKCFG: Clear wrong clock configuration flag
0x5001541C C   FIELD 04w01 CCNRDY: Clear codec not ready flag
0x5001541C C   FIELD 05w01 CAFSDET: Clear anticipated frame synchronization detection flag
0x5001541C C   FIELD 06w01 CLFSDET: Clear late frame synchronization detection flag
0x50015420 B  REGISTER ADR (rw): A Data register
0x50015420 C   FIELD 00w32 DATA: Data
0x50015424 B  REGISTER BCR1 (rw): B Configuration register 1
0x50015424 C   FIELD 00w02 MODE: Audio block mode
0x50015424 C   FIELD 02w02 PRTCFG: Protocol configuration
0x50015424 C   FIELD 05w03 DS: Data size
0x50015424 C   FIELD 08w01 LSBFIRST: Least significant bit first
0x50015424 C   FIELD 09w01 CKSTR: Clock strobing edge
0x50015424 C   FIELD 10w02 SYNCEN: Synchronization enable
0x50015424 C   FIELD 12w01 MONO: Mono mode
0x50015424 C   FIELD 13w01 OUTDRIV: Output drive
0x50015424 C   FIELD 16w01 SAIAEN: Audio block A enable
0x50015424 C   FIELD 17w01 DMAEN: DMA enable
0x50015424 C   FIELD 19w01 NODIV: No divider
0x50015424 C   FIELD 20w06 MCKDIV: Master clock divider
0x50015424 C   FIELD 26w01 OSR: OSR
0x50015424 C   FIELD 27w01 MCKEN: MCKEN
0x50015428 B  REGISTER BCR2 (rw): B Configuration register 2
0x50015428 C   FIELD 00w03 FTH: FIFO threshold
0x50015428 C   FIELD 03w01 FFLUSH: FIFO flush
0x50015428 C   FIELD 04w01 TRIS: Tristate management on data line
0x50015428 C   FIELD 05w01 MUTE: Mute
0x50015428 C   FIELD 06w01 MUTEVAL: Mute value
0x50015428 C   FIELD 07w06 MUTECN: Mute counter
0x50015428 C   FIELD 13w01 CPL: Complement bit
0x50015428 C   FIELD 14w02 COMP: Companding mode
0x5001542C B  REGISTER BFRCR: B frame configuration register
0x5001542C C   FIELD 00w08 FRL (rw): Frame length
0x5001542C C   FIELD 08w07 FSALL (rw): Frame synchronization active level length
0x5001542C C   FIELD 16w01 FSDEF (ro): Frame synchronization definition
0x5001542C C   FIELD 17w01 FSPOL (rw): Frame synchronization polarity
0x5001542C C   FIELD 18w01 FSOFF (rw): Frame synchronization offset
0x50015430 B  REGISTER BSLOTR (rw): B Slot register
0x50015430 C   FIELD 00w05 FBOFF: First bit offset
0x50015430 C   FIELD 06w02 SLOTSZ: Slot size
0x50015430 C   FIELD 08w04 NBSLOT: Number of slots in an audio frame
0x50015430 C   FIELD 16w16 SLOTEN: Slot enable
0x50015434 B  REGISTER BIM (rw): B Interrupt mask register
0x50015434 C   FIELD 00w01 OVRUDRIE: Overrun/underrun interrupt enable
0x50015434 C   FIELD 01w01 MUTEDETIE: Mute detection interrupt enable
0x50015434 C   FIELD 02w01 WCKCFGIE: Wrong clock configuration interrupt enable
0x50015434 C   FIELD 03w01 FREQIE: FIFO request interrupt enable
0x50015434 C   FIELD 04w01 CNRDYIE: Codec not ready interrupt enable
0x50015434 C   FIELD 05w01 AFSDETIE: Anticipated frame synchronization detection interrupt enable
0x50015434 C   FIELD 06w01 LFSDETIE: Late frame synchronization detection interrupt enable
0x50015438 B  REGISTER BSR (ro): B Status register
0x50015438 C   FIELD 00w01 OVRUDR: Overrun / underrun
0x50015438 C   FIELD 01w01 MUTEDET: Mute detection
0x50015438 C   FIELD 02w01 WCKCFG: Wrong clock configuration flag
0x50015438 C   FIELD 03w01 FREQ: FIFO request
0x50015438 C   FIELD 04w01 CNRDY: Codec not ready
0x50015438 C   FIELD 05w01 AFSDET: Anticipated frame synchronization detection
0x50015438 C   FIELD 06w01 LFSDET: Late frame synchronization detection
0x50015438 C   FIELD 16w03 FLVL: FIFO level threshold
0x5001543C B  REGISTER BCLRFR (wo): B Clear flag register
0x5001543C C   FIELD 00w01 COVRUDR: Clear overrun / underrun
0x5001543C C   FIELD 01w01 CMUTEDET: Mute detection flag
0x5001543C C   FIELD 02w01 CWCKCFG: Clear wrong clock configuration flag
0x5001543C C   FIELD 04w01 CCNRDY: Clear codec not ready flag
0x5001543C C   FIELD 05w01 CAFSDET: Clear anticipated frame synchronization detection flag
0x5001543C C   FIELD 06w01 CLFSDET: Clear late frame synchronization detection flag
0x50015440 B  REGISTER BDR (rw): B Data register
0x50015440 C   FIELD 00w32 DATA: Data
0x50015444 B  REGISTER PDMCR (rw): PDM control register
0x50015444 C   FIELD 00w01 PDMEN: PDM enable
0x50015444 C   FIELD 04w02 MICNBR: MICNBR
0x50015444 C   FIELD 08w01 CKEN1: Clock enable of bitstream clock number 1
0x50015444 C   FIELD 09w01 CKEN2: CKEN2
0x50015444 C   FIELD 10w01 CKEN3: CKEN3
0x50015444 C   FIELD 11w01 CKEN4: CKEN4
0x50015448 B  REGISTER PDMDLY (rw): PDM delay register
0x50015448 C   FIELD 00w03 DLYM1L: Delay line adjust for first microphone of pair 1
0x50015448 C   FIELD 04w03 DLYM1R: Delay line adjust for second microphone of pair 1
0x50015448 C   FIELD 08w03 DLYM2L: Delay line for first microphone of pair 2
0x50015448 C   FIELD 12w03 DLYM2R: Delay line for second microphone of pair 2
0x50015448 C   FIELD 16w03 DLYM3L: DLYM3L
0x50015448 C   FIELD 20w03 DLYM3R: DLYM3R
0x50015448 C   FIELD 24w03 DLYM4L: DLYM4L
0x50015448 C   FIELD 28w03 DLYM4R: DLYM4R
0x50015800 A PERIPHERAL SEC_SAI2
0x50015800 B  REGISTER GCR (rw): Global configuration register
0x50015800 C   FIELD 00w02 SYNCIN: Synchronization inputs
0x50015800 C   FIELD 04w02 SYNCOUT: Synchronization outputs
0x50015804 B  REGISTER ACR1 (rw): A Configuration register 1
0x50015804 C   FIELD 00w02 MODE: Audio block mode
0x50015804 C   FIELD 02w02 PRTCFG: Protocol configuration
0x50015804 C   FIELD 05w03 DS: Data size
0x50015804 C   FIELD 08w01 LSBFIRST: Least significant bit first
0x50015804 C   FIELD 09w01 CKSTR: Clock strobing edge
0x50015804 C   FIELD 10w02 SYNCEN: Synchronization enable
0x50015804 C   FIELD 12w01 MONO: Mono mode
0x50015804 C   FIELD 13w01 OUTDRIV: Output drive
0x50015804 C   FIELD 16w01 SAIAEN: Audio block A enable
0x50015804 C   FIELD 17w01 DMAEN: DMA enable
0x50015804 C   FIELD 19w01 NODIV: No divider
0x50015804 C   FIELD 20w06 MCKDIV: Master clock divider
0x50015804 C   FIELD 26w01 OSR: OSR
0x50015804 C   FIELD 27w01 MCKEN: MCKEN
0x50015808 B  REGISTER ACR2 (rw): A Configuration register 2
0x50015808 C   FIELD 00w03 FTH: FIFO threshold
0x50015808 C   FIELD 03w01 FFLUSH: FIFO flush
0x50015808 C   FIELD 04w01 TRIS: Tristate management on data line
0x50015808 C   FIELD 05w01 MUTE: Mute
0x50015808 C   FIELD 06w01 MUTEVAL: Mute value
0x50015808 C   FIELD 07w06 MUTECN: Mute counter
0x50015808 C   FIELD 13w01 CPL: Complement bit
0x50015808 C   FIELD 14w02 COMP: Companding mode
0x5001580C B  REGISTER AFRCR: A frame configuration register
0x5001580C C   FIELD 00w08 FRL (rw): Frame length
0x5001580C C   FIELD 08w07 FSALL (rw): Frame synchronization active level length
0x5001580C C   FIELD 16w01 FSDEF (ro): Frame synchronization definition
0x5001580C C   FIELD 17w01 FSPOL (rw): Frame synchronization polarity
0x5001580C C   FIELD 18w01 FSOFF (rw): Frame synchronization offset
0x50015810 B  REGISTER ASLOTR (rw): A Slot register
0x50015810 C   FIELD 00w05 FBOFF: First bit offset
0x50015810 C   FIELD 06w02 SLOTSZ: Slot size
0x50015810 C   FIELD 08w04 NBSLOT: Number of slots in an audio frame
0x50015810 C   FIELD 16w16 SLOTEN: Slot enable
0x50015814 B  REGISTER AIM (rw): A Interrupt mask register
0x50015814 C   FIELD 00w01 OVRUDRIE: Overrun/underrun interrupt enable
0x50015814 C   FIELD 01w01 MUTEDETIE: Mute detection interrupt enable
0x50015814 C   FIELD 02w01 WCKCFGIE: Wrong clock configuration interrupt enable
0x50015814 C   FIELD 03w01 FREQIE: FIFO request interrupt enable
0x50015814 C   FIELD 04w01 CNRDYIE: Codec not ready interrupt enable
0x50015814 C   FIELD 05w01 AFSDETIE: Anticipated frame synchronization detection interrupt enable
0x50015814 C   FIELD 06w01 LFSDETIE: Late frame synchronization detection interrupt enable
0x50015818 B  REGISTER ASR (ro): A Status register
0x50015818 C   FIELD 00w01 OVRUDR: Overrun / underrun
0x50015818 C   FIELD 01w01 MUTEDET: Mute detection
0x50015818 C   FIELD 02w01 WCKCFG: Wrong clock configuration flag. This bit is read only
0x50015818 C   FIELD 03w01 FREQ: FIFO request
0x50015818 C   FIELD 04w01 CNRDY: Codec not ready
0x50015818 C   FIELD 05w01 AFSDET: Anticipated frame synchronization detection
0x50015818 C   FIELD 06w01 LFSDET: Late frame synchronization detection
0x50015818 C   FIELD 16w03 FLVL: FIFO level threshold
0x5001581C B  REGISTER ACLRFR (wo): A Clear flag register
0x5001581C C   FIELD 00w01 COVRUDR: Clear overrun / underrun
0x5001581C C   FIELD 01w01 CMUTEDET: Mute detection flag
0x5001581C C   FIELD 02w01 CWCKCFG: Clear wrong clock configuration flag
0x5001581C C   FIELD 04w01 CCNRDY: Clear codec not ready flag
0x5001581C C   FIELD 05w01 CAFSDET: Clear anticipated frame synchronization detection flag
0x5001581C C   FIELD 06w01 CLFSDET: Clear late frame synchronization detection flag
0x50015820 B  REGISTER ADR (rw): A Data register
0x50015820 C   FIELD 00w32 DATA: Data
0x50015824 B  REGISTER BCR1 (rw): B Configuration register 1
0x50015824 C   FIELD 00w02 MODE: Audio block mode
0x50015824 C   FIELD 02w02 PRTCFG: Protocol configuration
0x50015824 C   FIELD 05w03 DS: Data size
0x50015824 C   FIELD 08w01 LSBFIRST: Least significant bit first
0x50015824 C   FIELD 09w01 CKSTR: Clock strobing edge
0x50015824 C   FIELD 10w02 SYNCEN: Synchronization enable
0x50015824 C   FIELD 12w01 MONO: Mono mode
0x50015824 C   FIELD 13w01 OUTDRIV: Output drive
0x50015824 C   FIELD 16w01 SAIAEN: Audio block A enable
0x50015824 C   FIELD 17w01 DMAEN: DMA enable
0x50015824 C   FIELD 19w01 NODIV: No divider
0x50015824 C   FIELD 20w06 MCKDIV: Master clock divider
0x50015824 C   FIELD 26w01 OSR: OSR
0x50015824 C   FIELD 27w01 MCKEN: MCKEN
0x50015828 B  REGISTER BCR2 (rw): B Configuration register 2
0x50015828 C   FIELD 00w03 FTH: FIFO threshold
0x50015828 C   FIELD 03w01 FFLUSH: FIFO flush
0x50015828 C   FIELD 04w01 TRIS: Tristate management on data line
0x50015828 C   FIELD 05w01 MUTE: Mute
0x50015828 C   FIELD 06w01 MUTEVAL: Mute value
0x50015828 C   FIELD 07w06 MUTECN: Mute counter
0x50015828 C   FIELD 13w01 CPL: Complement bit
0x50015828 C   FIELD 14w02 COMP: Companding mode
0x5001582C B  REGISTER BFRCR: B frame configuration register
0x5001582C C   FIELD 00w08 FRL (rw): Frame length
0x5001582C C   FIELD 08w07 FSALL (rw): Frame synchronization active level length
0x5001582C C   FIELD 16w01 FSDEF (ro): Frame synchronization definition
0x5001582C C   FIELD 17w01 FSPOL (rw): Frame synchronization polarity
0x5001582C C   FIELD 18w01 FSOFF (rw): Frame synchronization offset
0x50015830 B  REGISTER BSLOTR (rw): B Slot register
0x50015830 C   FIELD 00w05 FBOFF: First bit offset
0x50015830 C   FIELD 06w02 SLOTSZ: Slot size
0x50015830 C   FIELD 08w04 NBSLOT: Number of slots in an audio frame
0x50015830 C   FIELD 16w16 SLOTEN: Slot enable
0x50015834 B  REGISTER BIM (rw): B Interrupt mask register
0x50015834 C   FIELD 00w01 OVRUDRIE: Overrun/underrun interrupt enable
0x50015834 C   FIELD 01w01 MUTEDETIE: Mute detection interrupt enable
0x50015834 C   FIELD 02w01 WCKCFGIE: Wrong clock configuration interrupt enable
0x50015834 C   FIELD 03w01 FREQIE: FIFO request interrupt enable
0x50015834 C   FIELD 04w01 CNRDYIE: Codec not ready interrupt enable
0x50015834 C   FIELD 05w01 AFSDETIE: Anticipated frame synchronization detection interrupt enable
0x50015834 C   FIELD 06w01 LFSDETIE: Late frame synchronization detection interrupt enable
0x50015838 B  REGISTER BSR (ro): B Status register
0x50015838 C   FIELD 00w01 OVRUDR: Overrun / underrun
0x50015838 C   FIELD 01w01 MUTEDET: Mute detection
0x50015838 C   FIELD 02w01 WCKCFG: Wrong clock configuration flag
0x50015838 C   FIELD 03w01 FREQ: FIFO request
0x50015838 C   FIELD 04w01 CNRDY: Codec not ready
0x50015838 C   FIELD 05w01 AFSDET: Anticipated frame synchronization detection
0x50015838 C   FIELD 06w01 LFSDET: Late frame synchronization detection
0x50015838 C   FIELD 16w03 FLVL: FIFO level threshold
0x5001583C B  REGISTER BCLRFR (wo): B Clear flag register
0x5001583C C   FIELD 00w01 COVRUDR: Clear overrun / underrun
0x5001583C C   FIELD 01w01 CMUTEDET: Mute detection flag
0x5001583C C   FIELD 02w01 CWCKCFG: Clear wrong clock configuration flag
0x5001583C C   FIELD 04w01 CCNRDY: Clear codec not ready flag
0x5001583C C   FIELD 05w01 CAFSDET: Clear anticipated frame synchronization detection flag
0x5001583C C   FIELD 06w01 CLFSDET: Clear late frame synchronization detection flag
0x50015840 B  REGISTER BDR (rw): B Data register
0x50015840 C   FIELD 00w32 DATA: Data
0x50015844 B  REGISTER PDMCR (rw): PDM control register
0x50015844 C   FIELD 00w01 PDMEN: PDM enable
0x50015844 C   FIELD 04w02 MICNBR: MICNBR
0x50015844 C   FIELD 08w01 CKEN1: Clock enable of bitstream clock number 1
0x50015844 C   FIELD 09w01 CKEN2: CKEN2
0x50015844 C   FIELD 10w01 CKEN3: CKEN3
0x50015844 C   FIELD 11w01 CKEN4: CKEN4
0x50015848 B  REGISTER PDMDLY (rw): PDM delay register
0x50015848 C   FIELD 00w03 DLYM1L: Delay line adjust for first microphone of pair 1
0x50015848 C   FIELD 04w03 DLYM1R: Delay line adjust for second microphone of pair 1
0x50015848 C   FIELD 08w03 DLYM2L: Delay line for first microphone of pair 2
0x50015848 C   FIELD 12w03 DLYM2R: Delay line for second microphone of pair 2
0x50015848 C   FIELD 16w03 DLYM3L: DLYM3L
0x50015848 C   FIELD 20w03 DLYM3R: DLYM3R
0x50015848 C   FIELD 24w03 DLYM4L: DLYM4L
0x50015848 C   FIELD 28w03 DLYM4R: DLYM4R
0x50020000 A PERIPHERAL SEC_GPDMA1
0x50020000 B  REGISTER GPDMA_SECCFGR: GPDMA secure configuration register
0x50020000 C   FIELD 00w01 SEC0 (rw): SEC0
0x50020000 C   FIELD 01w01 SEC1 (rw): SEC1
0x50020000 C   FIELD 02w01 SEC2 (rw): SEC2
0x50020000 C   FIELD 03w01 SEC3 (rw): SEC3
0x50020000 C   FIELD 04w01 SEC4 (rw): SEC4
0x50020000 C   FIELD 05w01 SEC5 (rw): SEC5
0x50020000 C   FIELD 06w01 SEC6 (rw): SEC6
0x50020000 C   FIELD 07w01 SEC7 (rw): SEC7
0x50020000 C   FIELD 08w01 SEC8 (rw): SEC8
0x50020000 C   FIELD 09w01 SEC9 (rw): SEC9
0x50020000 C   FIELD 10w01 SEC10 (rw): SEC10
0x50020000 C   FIELD 11w01 SEC11 (rw): SEC11
0x50020000 C   FIELD 12w01 SEC12 (rw): SEC12
0x50020000 C   FIELD 13w01 SEC13 (rw): SEC13
0x50020000 C   FIELD 14w01 SEC14 (rw): SEC14
0x50020000 C   FIELD 15w01 SEC15 (rw): SEC15
0x50020004 B  REGISTER GPDMA_PRIVCFGR: GPDMA privileged configuration register
0x50020004 C   FIELD 00w01 PRIV0 (rw): PRIV0
0x50020004 C   FIELD 01w01 PRIV1 (rw): PRIV1
0x50020004 C   FIELD 02w01 PRIV2 (rw): PRIV2
0x50020004 C   FIELD 03w01 PRIV3 (rw): PRIV3
0x50020004 C   FIELD 04w01 PRIV4 (rw): PRIV4
0x50020004 C   FIELD 05w01 PRIV5 (rw): PRIV5
0x50020004 C   FIELD 06w01 PRIV6 (rw): PRIV6
0x50020004 C   FIELD 07w01 PRIV7 (rw): PRIV7
0x50020004 C   FIELD 08w01 PRIV8 (rw): PRIV8
0x50020004 C   FIELD 09w01 PRIV9 (rw): PRIV9
0x50020004 C   FIELD 10w01 PRIV10 (rw): PRIV10
0x50020004 C   FIELD 11w01 PRIV11 (rw): PRIV11
0x50020004 C   FIELD 12w01 PRIV12 (rw): PRIV12
0x50020004 C   FIELD 13w01 PRIV13 (rw): PRIV13
0x50020004 C   FIELD 14w01 PRIV14 (rw): PRIV14
0x50020004 C   FIELD 15w01 PRIV15 (rw): PRIV15
0x50020008 B  REGISTER GPDMA_RCFGLOCKR: GPDMA configuration lock register
0x50020008 C   FIELD 00w01 LOCK0 (rw): LOCK0
0x50020008 C   FIELD 01w01 LOCK1 (rw): LOCK1
0x50020008 C   FIELD 02w01 LOCK2 (rw): LOCK2
0x50020008 C   FIELD 03w01 LOCK3 (rw): LOCK3
0x50020008 C   FIELD 04w01 LOCK4 (rw): LOCK4
0x50020008 C   FIELD 05w01 LOCK5 (rw): LOCK5
0x50020008 C   FIELD 06w01 LOCK6 (rw): LOCK6
0x50020008 C   FIELD 07w01 LOCK7 (rw): LOCK7
0x50020008 C   FIELD 08w01 LOCK8 (rw): LOCK8
0x50020008 C   FIELD 09w01 LOCK9 (rw): LOCK9
0x50020008 C   FIELD 10w01 LOCK10 (rw): LOCK10
0x50020008 C   FIELD 11w01 LOCK11 (rw): LOCK11
0x50020008 C   FIELD 12w01 LOCK12 (rw): LOCK12
0x50020008 C   FIELD 13w01 LOCK13 (rw): LOCK13
0x50020008 C   FIELD 14w01 LOCK14 (rw): LOCK14
0x50020008 C   FIELD 15w01 LOCK15 (rw): LOCK15
0x5002000C B  REGISTER GPDMA_MISR: GPDMA non-secure masked interrupt status register
0x5002000C C   FIELD 00w01 MIS0 (ro): MIS0
0x5002000C C   FIELD 01w01 MIS1 (ro): MIS1
0x5002000C C   FIELD 02w01 MIS2 (ro): MIS2
0x5002000C C   FIELD 03w01 MIS3 (ro): MIS3
0x5002000C C   FIELD 04w01 MIS4 (ro): MIS4
0x5002000C C   FIELD 05w01 MIS5 (ro): MIS5
0x5002000C C   FIELD 06w01 MIS6 (ro): MIS6
0x5002000C C   FIELD 07w01 MIS7 (ro): MIS7
0x5002000C C   FIELD 08w01 MIS8 (ro): MIS8
0x5002000C C   FIELD 09w01 MIS9 (ro): MIS9
0x5002000C C   FIELD 10w01 MIS10 (ro): MIS10
0x5002000C C   FIELD 11w01 MIS11 (ro): MIS11
0x5002000C C   FIELD 12w01 MIS12 (ro): MIS12
0x5002000C C   FIELD 13w01 MIS13 (ro): MIS13
0x5002000C C   FIELD 14w01 MIS14 (ro): MIS14
0x5002000C C   FIELD 15w01 MIS15 (ro): MIS15
0x50020010 B  REGISTER GPDMA_SMISR: GPDMA secure masked interrupt status register
0x50020010 C   FIELD 00w01 MIS0 (ro): MIS0
0x50020010 C   FIELD 01w01 MIS1 (ro): MIS1
0x50020010 C   FIELD 02w01 MIS2 (ro): MIS2
0x50020010 C   FIELD 03w01 MIS3 (ro): MIS3
0x50020010 C   FIELD 04w01 MIS4 (ro): MIS4
0x50020010 C   FIELD 05w01 MIS5 (ro): MIS5
0x50020010 C   FIELD 06w01 MIS6 (ro): MIS6
0x50020010 C   FIELD 07w01 MIS7 (ro): MIS7
0x50020010 C   FIELD 08w01 MIS8 (ro): MIS8
0x50020010 C   FIELD 09w01 MIS9 (ro): MIS9
0x50020010 C   FIELD 10w01 MIS10 (ro): MIS10
0x50020010 C   FIELD 11w01 MIS11 (ro): MIS11
0x50020010 C   FIELD 12w01 MIS12 (ro): MIS12
0x50020010 C   FIELD 13w01 MIS13 (ro): MIS13
0x50020010 C   FIELD 14w01 MIS14 (ro): MIS14
0x50020010 C   FIELD 15w01 MIS15 (ro): MIS15
0x50020050 B  REGISTER GPDMA_C0LBAR: GPDMA channel 0 linked-list base address register
0x50020050 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x5002005C B  REGISTER GPDMA_C0FCR: GPDMA channel 0 flag clear register
0x5002005C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5002005C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5002005C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5002005C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5002005C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5002005C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5002005C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x50020060 B  REGISTER GPDMA_C0SR: GPDMA channel 0 status register
0x50020060 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x50020060 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x50020060 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x50020060 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x50020060 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x50020060 C   FIELD 12w01 USEF (ro): user setting error flag
0x50020060 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x50020060 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x50020060 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x50020064 B  REGISTER GPDMA_C0CR: GPDMA channel 0 control register
0x50020064 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x50020064 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x50020064 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x50020064 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x50020064 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x50020064 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x50020064 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x50020064 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x50020064 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x50020064 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x50020064 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020064 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020064 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020090 B  REGISTER GPDMA_C0TR1: GPDMA channel 0 transfer register 1
0x50020090 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020090 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020090 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020090 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020090 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020090 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020090 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020090 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020090 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020090 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020090 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020090 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020090 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020090 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020094 B  REGISTER GPDMA_C0TR2: GPDMA channel 0 transfer register 2
0x50020094 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020094 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020094 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020094 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020094 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020094 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020094 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020094 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020098 B  REGISTER GPDMA_C0BR1: GPDMA channel 0 block register 1
0x50020098 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002009C B  REGISTER GPDMA_C0SAR: GPDMA channel 0 source address register
0x5002009C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500200A0 B  REGISTER GPDMA_C0DAR: GPDMA channel 0 destination address register
0x500200A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500200CC B  REGISTER GPDMA_C0LLR: GPDMA channel 0 linked-list address register
0x500200CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x500200CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x500200CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x500200CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x500200CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x500200CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x500200CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x500200D0 B  REGISTER GPDMA_C1LBAR: GPDMA channel 1 linked-list base address register
0x500200D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x500200DC B  REGISTER GPDMA_C1FCR: GPDMA channel 1 flag clear register
0x500200DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x500200DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x500200DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x500200DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x500200DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x500200DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x500200DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x500200E0 B  REGISTER GPDMA_C1SR: GPDMA channel 1 status register
0x500200E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x500200E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x500200E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x500200E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x500200E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x500200E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x500200E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x500200E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x500200E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x500200E4 B  REGISTER GPDMA_C1CR: GPDMA channel 1 control register
0x500200E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x500200E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x500200E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x500200E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x500200E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x500200E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x500200E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x500200E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x500200E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x500200E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x500200E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500200E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500200E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020110 B  REGISTER GPDMA_C1TR1: GPDMA channel 1 transfer register 1
0x50020110 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020110 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020110 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020110 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020110 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020110 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020110 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020110 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020110 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020110 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020110 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020110 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020110 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020110 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020114 B  REGISTER GPDMA_C1TR2: GPDMA channel 1 transfer register 2
0x50020114 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020114 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020114 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020114 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020114 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020114 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020114 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020114 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020118 B  REGISTER GPDMA_C1BR1: GPDMA channel 1 block register 1
0x50020118 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002011C B  REGISTER GPDMA_C1SAR: GPDMA channel 1 source address register
0x5002011C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020120 B  REGISTER GPDMA_C1DAR: GPDMA channel 1 destination address register
0x50020120 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x5002014C B  REGISTER GPDMA_C1LLR: GPDMA channel 1 linked-list address register
0x5002014C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5002014C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x5002014C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x5002014C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x5002014C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x5002014C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x5002014C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x50020150 B  REGISTER GPDMA_C2LBAR: GPDMA channel 2 linked-list base address register
0x50020150 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x5002015C B  REGISTER GPDMA_C2FCR: GPDMA channel 2 flag clear register
0x5002015C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5002015C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5002015C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5002015C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5002015C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5002015C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5002015C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x50020160 B  REGISTER GPDMA_C2SR: GPDMA channel 2 status register
0x50020160 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x50020160 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x50020160 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x50020160 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x50020160 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x50020160 C   FIELD 12w01 USEF (ro): user setting error flag
0x50020160 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x50020160 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x50020160 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x50020164 B  REGISTER GPDMA_C2CR: GPDMA channel 2 control register
0x50020164 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x50020164 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x50020164 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x50020164 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x50020164 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x50020164 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x50020164 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x50020164 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x50020164 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x50020164 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x50020164 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020164 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020164 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020190 B  REGISTER GPDMA_C2TR1: GPDMA channel 2 transfer register 1
0x50020190 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020190 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020190 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020190 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020190 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020190 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020190 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020190 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020190 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020190 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020190 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020190 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020190 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020190 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020194 B  REGISTER GPDMA_C2TR2: GPDMA channel 2 transfer register 2
0x50020194 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020194 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020194 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020194 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020194 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020194 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020194 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020194 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020198 B  REGISTER GPDMA_C2BR1: GPDMA channel 2 block register 1
0x50020198 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002019C B  REGISTER GPDMA_C2SAR: GPDMA channel 2 source address register
0x5002019C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500201A0 B  REGISTER GPDMA_C2DAR: GPDMA channel 2 destination address register
0x500201A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500201CC B  REGISTER GPDMA_C2LLR: GPDMA channel 2 linked-list address register
0x500201CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x500201CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x500201CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x500201CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x500201CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x500201CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x500201CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x500201D0 B  REGISTER GPDMA_C3LBAR: GPDMA channel 3 linked-list base address register
0x500201D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x500201DC B  REGISTER GPDMA_C3FCR: GPDMA channel 3 flag clear register
0x500201DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x500201DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x500201DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x500201DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x500201DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x500201DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x500201DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x500201E0 B  REGISTER GPDMA_C3SR: GPDMA channel 3 status register
0x500201E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x500201E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x500201E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x500201E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x500201E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x500201E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x500201E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x500201E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x500201E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x500201E4 B  REGISTER GPDMA_C3CR: GPDMA channel 3 control register
0x500201E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x500201E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x500201E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x500201E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x500201E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x500201E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x500201E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x500201E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x500201E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x500201E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x500201E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500201E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500201E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020210 B  REGISTER GPDMA_C3TR1: GPDMA channel 3 transfer register 1
0x50020210 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020210 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020210 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020210 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020210 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020210 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020210 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020210 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020210 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020210 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020210 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020210 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020210 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020210 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020214 B  REGISTER GPDMA_C3TR2: GPDMA channel 3 transfer register 2
0x50020214 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020214 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020214 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020214 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020214 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020214 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020214 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020214 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020218 B  REGISTER GPDMA_C3BR1: GPDMA channel 3 block register 1
0x50020218 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002021C B  REGISTER GPDMA_C3SAR: GPDMA channel 3 source address register
0x5002021C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020220 B  REGISTER GPDMA_C3DAR: GPDMA channel 3 destination address register
0x50020220 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x5002024C B  REGISTER GPDMA_C3LLR: GPDMA channel 3 linked-list address register
0x5002024C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5002024C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x5002024C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x5002024C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x5002024C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x5002024C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x5002024C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x50020250 B  REGISTER GPDMA_C4LBAR: GPDMA channel 4 linked-list base address register
0x50020250 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x5002025C B  REGISTER GPDMA_C4FCR: GPDMA channel 4 flag clear register
0x5002025C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5002025C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5002025C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5002025C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5002025C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5002025C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5002025C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x50020260 B  REGISTER GPDMA_C4SR: GPDMA channel 4 status register
0x50020260 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x50020260 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x50020260 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x50020260 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x50020260 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x50020260 C   FIELD 12w01 USEF (ro): user setting error flag
0x50020260 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x50020260 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x50020260 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x50020264 B  REGISTER GPDMA_C4CR: GPDMA channel 4 control register
0x50020264 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x50020264 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x50020264 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x50020264 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x50020264 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x50020264 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x50020264 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x50020264 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x50020264 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x50020264 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x50020264 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020264 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020264 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020290 B  REGISTER GPDMA_C4TR1: GPDMA channel 4 transfer register 1
0x50020290 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020290 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020290 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020290 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020290 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020290 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020290 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020290 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020290 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020290 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020290 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020290 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020290 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020290 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020294 B  REGISTER GPDMA_C4TR2: GPDMA channel 4 transfer register 2
0x50020294 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020294 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020294 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020294 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020294 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020294 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020294 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020294 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020298 B  REGISTER GPDMA_C4BR1: GPDMA channel 4 block register 1
0x50020298 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002029C B  REGISTER GPDMA_C4SAR: GPDMA channel 4 source address register
0x5002029C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500202A0 B  REGISTER GPDMA_C4DAR: GPDMA channel 4 destination address register
0x500202A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500202CC B  REGISTER GPDMA_C4LLR: GPDMA channel 4 linked-list address register
0x500202CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x500202CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x500202CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x500202CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x500202CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x500202CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x500202CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x500202D0 B  REGISTER GPDMA_C5LBAR: GPDMA channel 5 linked-list base address register
0x500202D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x500202DC B  REGISTER GPDMA_C5FCR: GPDMA channel 5 flag clear register
0x500202DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x500202DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x500202DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x500202DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x500202DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x500202DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x500202DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x500202E0 B  REGISTER GPDMA_C5SR: GPDMA channel 5 status register
0x500202E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x500202E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x500202E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x500202E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x500202E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x500202E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x500202E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x500202E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x500202E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x500202E4 B  REGISTER GPDMA_C5CR: GPDMA channel 5 control register
0x500202E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x500202E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x500202E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x500202E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x500202E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x500202E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x500202E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x500202E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x500202E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x500202E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x500202E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500202E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500202E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020310 B  REGISTER GPDMA_C5TR1: GPDMA channel 5 transfer register 1
0x50020310 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020310 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020310 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020310 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020310 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020310 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020310 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020310 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020310 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020310 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020310 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020310 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020310 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020310 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020314 B  REGISTER GPDMA_C5TR2: GPDMA channel 5 transfer register 2
0x50020314 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020314 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020314 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020314 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020314 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020314 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020314 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020314 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020318 B  REGISTER GPDMA_C5BR1: GPDMA channel 5 block register 1
0x50020318 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002031C B  REGISTER GPDMA_C5SAR: GPDMA channel 5 source address register
0x5002031C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020320 B  REGISTER GPDMA_C5DAR: GPDMA channel 5 destination address register
0x50020320 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x5002034C B  REGISTER GPDMA_C5LLR: GPDMA channel 5 linked-list address register
0x5002034C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5002034C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x5002034C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x5002034C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x5002034C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x5002034C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x5002034C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x50020350 B  REGISTER GPDMA_C6LBAR: GPDMA channel 6 linked-list base address register
0x50020350 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x5002035C B  REGISTER GPDMA_C6FCR: GPDMA channel 6 flag clear register
0x5002035C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5002035C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5002035C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5002035C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5002035C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5002035C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5002035C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x50020360 B  REGISTER GPDMA_C6SR: GPDMA channel 6 status register
0x50020360 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x50020360 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x50020360 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x50020360 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x50020360 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x50020360 C   FIELD 12w01 USEF (ro): user setting error flag
0x50020360 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x50020360 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x50020360 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x50020364 B  REGISTER GPDMA_C6CR: GPDMA channel 6 control register
0x50020364 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x50020364 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x50020364 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x50020364 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x50020364 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x50020364 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x50020364 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x50020364 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x50020364 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x50020364 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x50020364 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020364 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020364 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020390 B  REGISTER GPDMA_C6TR1: GPDMA channel 6 transfer register 1
0x50020390 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020390 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020390 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020390 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020390 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020390 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020390 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020390 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020390 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020390 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020390 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020390 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020390 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020390 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020394 B  REGISTER GPDMA_C6TR2: GPDMA channel 6 transfer register 2
0x50020394 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020394 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020394 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020394 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020394 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020394 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020394 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020394 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020398 B  REGISTER GPDMA_C6BR1: GPDMA channel 6 block register 1
0x50020398 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002039C B  REGISTER GPDMA_C6SAR: GPDMA channel 6 source address register
0x5002039C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500203A0 B  REGISTER GPDMA_C6DAR: GPDMA channel 6 destination address register
0x500203A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500203CC B  REGISTER GPDMA_C6LLR: GPDMA channel 6 linked-list address register
0x500203CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x500203CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x500203CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x500203CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x500203CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x500203CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x500203CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x500203D0 B  REGISTER GPDMA_C7LBAR: GPDMA channel 7 linked-list base address register
0x500203D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x500203DC B  REGISTER GPDMA_C7FCR: GPDMA channel 7 flag clear register
0x500203DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x500203DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x500203DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x500203DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x500203DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x500203DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x500203DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x500203E0 B  REGISTER GPDMA_C7SR: GPDMA channel 7 status register
0x500203E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x500203E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x500203E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x500203E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x500203E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x500203E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x500203E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x500203E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x500203E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x500203E4 B  REGISTER GPDMA_C7CR: GPDMA channel 7 control register
0x500203E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x500203E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x500203E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x500203E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x500203E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x500203E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x500203E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x500203E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x500203E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x500203E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x500203E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500203E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500203E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020410 B  REGISTER GPDMA_C7TR1: GPDMA channel 7 transfer register 1
0x50020410 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020410 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020410 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020410 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020410 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020410 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020410 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020410 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020410 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020410 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020410 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020410 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020410 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020410 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020414 B  REGISTER GPDMA_C7TR2: GPDMA channel 7 transfer register 2
0x50020414 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020414 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020414 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020414 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020414 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020414 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020414 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020414 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020418 B  REGISTER GPDMA_C7BR1: GPDMA channel 7 block register 1
0x50020418 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002041C B  REGISTER GPDMA_C7SAR: GPDMA channel 7 source address register
0x5002041C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020420 B  REGISTER GPDMA_C7DAR: GPDMA channel 7 destination address register
0x50020420 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x5002044C B  REGISTER GPDMA_C7LLR: GPDMA channel 7 linked-list address register
0x5002044C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5002044C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x5002044C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x5002044C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x5002044C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x5002044C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x5002044C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x50020450 B  REGISTER GPDMA_C8LBAR: GPDMA channel 8 linked-list base address register
0x50020450 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x5002045C B  REGISTER GPDMA_C8FCR: GPDMA channel 8 flag clear register
0x5002045C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5002045C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5002045C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5002045C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5002045C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5002045C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5002045C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x50020460 B  REGISTER GPDMA_C8SR: GPDMA channel 8 status register
0x50020460 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x50020460 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x50020460 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x50020460 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x50020460 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x50020460 C   FIELD 12w01 USEF (ro): user setting error flag
0x50020460 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x50020460 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x50020460 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x50020464 B  REGISTER GPDMA_C8CR: GPDMA channel 8 control register
0x50020464 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x50020464 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x50020464 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x50020464 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x50020464 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x50020464 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x50020464 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x50020464 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x50020464 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x50020464 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x50020464 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020464 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020464 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020490 B  REGISTER GPDMA_C8TR1: GPDMA channel 8 transfer register 1
0x50020490 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020490 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020490 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020490 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020490 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020490 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020490 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020490 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020490 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020490 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020490 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020490 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020490 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020490 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020494 B  REGISTER GPDMA_C8TR2: GPDMA channel 8 transfer register 2
0x50020494 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020494 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020494 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020494 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020494 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020494 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020494 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020494 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020498 B  REGISTER GPDMA_C8BR1: GPDMA channel 8 block register 1
0x50020498 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002049C B  REGISTER GPDMA_C8SAR: GPDMA channel 8 source address register
0x5002049C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500204A0 B  REGISTER GPDMA_C8DAR: GPDMA channel 8 destination address register
0x500204A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500204CC B  REGISTER GPDMA_C8LLR: GPDMA channel 8 linked-list address register
0x500204CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x500204CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x500204CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x500204CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x500204CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x500204CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x500204CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x500204D0 B  REGISTER GPDMA_C9LBAR: GPDMA channel 9 linked-list base address register
0x500204D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x500204DC B  REGISTER GPDMA_C9FCR: GPDMA channel 9 flag clear register
0x500204DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x500204DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x500204DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x500204DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x500204DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x500204DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x500204DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x500204E0 B  REGISTER GPDMA_C9SR: GPDMA channel 9 status register
0x500204E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x500204E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x500204E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x500204E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x500204E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x500204E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x500204E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x500204E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x500204E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x500204E4 B  REGISTER GPDMA_C9CR: GPDMA channel 9 control register
0x500204E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x500204E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x500204E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x500204E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x500204E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x500204E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x500204E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x500204E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x500204E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x500204E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x500204E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500204E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500204E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020510 B  REGISTER GPDMA_C9TR1: GPDMA channel 9 transfer register 1
0x50020510 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020510 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020510 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020510 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020510 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020510 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020510 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020510 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020510 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020510 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020510 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020510 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020510 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020510 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020514 B  REGISTER GPDMA_C9TR2: GPDMA channel 9 transfer register 2
0x50020514 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020514 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020514 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020514 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020514 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020514 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020514 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020514 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020518 B  REGISTER GPDMA_C9BR1: GPDMA channel 9 block register 1
0x50020518 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002051C B  REGISTER GPDMA_C9SAR: GPDMA channel 9 source address register
0x5002051C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020520 B  REGISTER GPDMA_C9DAR: GPDMA channel 9 destination address register
0x50020520 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x5002054C B  REGISTER GPDMA_C9LLR: GPDMA channel 9 linked-list address register
0x5002054C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5002054C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x5002054C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x5002054C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x5002054C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x5002054C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x5002054C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x50020550 B  REGISTER GPDMA_C10LBAR: GPDMA channel 10 linked-list base address register
0x50020550 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x5002055C B  REGISTER GPDMA_C10FCR: GPDMA channel 10 flag clear register
0x5002055C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5002055C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5002055C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5002055C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5002055C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5002055C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5002055C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x50020560 B  REGISTER GPDMA_C10SR: GPDMA channel 10 status register
0x50020560 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x50020560 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x50020560 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x50020560 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x50020560 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x50020560 C   FIELD 12w01 USEF (ro): user setting error flag
0x50020560 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x50020560 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x50020560 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x50020564 B  REGISTER GPDMA_C10CR: GPDMA channel 10 control register
0x50020564 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x50020564 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x50020564 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x50020564 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x50020564 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x50020564 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x50020564 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x50020564 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x50020564 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x50020564 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x50020564 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020564 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020564 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020590 B  REGISTER GPDMA_C10TR1: GPDMA channel 10 transfer register 1
0x50020590 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020590 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020590 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020590 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020590 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020590 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020590 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020590 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020590 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020590 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020590 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020590 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020590 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020590 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020594 B  REGISTER GPDMA_C10TR2: GPDMA channel 10 transfer register 2
0x50020594 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020594 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020594 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020594 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020594 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020594 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020594 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020594 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020598 B  REGISTER GPDMA_C10BR1: GPDMA channel 10 block register 1
0x50020598 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002059C B  REGISTER GPDMA_C10SAR: GPDMA channel 10 source address register
0x5002059C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500205A0 B  REGISTER GPDMA_C10DAR: GPDMA channel 10 destination address register
0x500205A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500205CC B  REGISTER GPDMA_C10LLR: GPDMA channel 10 linked-list address register
0x500205CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x500205CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x500205CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x500205CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x500205CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x500205CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x500205CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x500205D0 B  REGISTER GPDMA_C11LBAR: GPDMA channel 11 linked-list base address register
0x500205D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x500205DC B  REGISTER GPDMA_C11FCR: GPDMA channel 11 flag clear register
0x500205DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x500205DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x500205DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x500205DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x500205DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x500205DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x500205DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x500205E0 B  REGISTER GPDMA_C11SR: GPDMA channel 11 status register
0x500205E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x500205E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x500205E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x500205E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x500205E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x500205E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x500205E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x500205E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x500205E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x500205E4 B  REGISTER GPDMA_C11CR: GPDMA channel 11 control register
0x500205E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x500205E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x500205E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x500205E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x500205E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x500205E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x500205E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x500205E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x500205E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x500205E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x500205E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500205E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500205E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020610 B  REGISTER GPDMA_C11TR1: GPDMA channel 11 transfer register 1
0x50020610 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020610 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020610 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020610 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020610 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020610 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020610 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020610 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020610 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020610 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020610 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020610 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020610 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020610 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020614 B  REGISTER GPDMA_C11TR2: GPDMA channel 11 transfer register 2
0x50020614 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020614 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020614 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020614 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020614 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020614 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020614 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020614 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020618 B  REGISTER GPDMA_C11BR1: GPDMA channel 11 block register 1
0x50020618 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1] = 1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002061C B  REGISTER GPDMA_C11SAR: GPDMA channel 11 source address register
0x5002061C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020620 B  REGISTER GPDMA_C11DAR: GPDMA channel 11 destination address register
0x50020620 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x5002064C B  REGISTER GPDMA_C11LLR: GPDMA channel 11 linked-list address register
0x5002064C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5002064C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x5002064C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x5002064C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x5002064C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x5002064C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x5002064C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x50020650 B  REGISTER GPDMA_C12LBAR: GPDMA channel 12 linked-list base address register
0x50020650 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x5002065C B  REGISTER GPDMA_C12FCR: GPDMA channel 12 flag clear register
0x5002065C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5002065C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5002065C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5002065C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5002065C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5002065C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5002065C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x50020660 B  REGISTER GPDMA_C12SR: GPDMA channel 12 status register
0x50020660 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x50020660 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x50020660 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x50020660 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x50020660 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x50020660 C   FIELD 12w01 USEF (ro): user setting error flag
0x50020660 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x50020660 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x50020660 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x50020664 B  REGISTER GPDMA_C12CR: GPDMA channel 12 control register
0x50020664 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x50020664 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x50020664 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x50020664 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x50020664 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x50020664 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x50020664 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x50020664 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x50020664 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x50020664 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x50020664 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020664 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020664 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020690 B  REGISTER GPDMA_C12TR1: GPDMA channel 12 transfer register 1
0x50020690 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020690 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020690 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020690 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020690 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020690 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020690 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020690 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020690 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020690 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020690 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020690 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020690 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020690 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020694 B  REGISTER GPDMA_C12TR2: GPDMA channel 12 transfer register 2
0x50020694 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020694 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020694 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020694 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020694 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020694 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020694 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020694 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020698 B  REGISTER GPDMA_C12BR1: GPDMA channel 12 alternate block register 1
0x50020698 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x50020698 C   FIELD 16w11 BRC (rw): Block repeat counter This field contains the number of repetitions of the current block (0 to 2047). When the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer. Once the last block transfer is completed (BRC[10:0] = BNDT[15:0] = 0): If GPDMA_CxLLR.UB1 = 1, all GPDMA_CxBR1 fields are updated by the next LLI in the memory. If GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI and data transfer.
0x50020698 C   FIELD 28w01 SDEC (rw): source address decrement
0x50020698 C   FIELD 29w01 DDEC (rw): destination address decrement
0x50020698 C   FIELD 30w01 BRSDEC (rw): Block repeat source address decrement Note: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer.
0x50020698 C   FIELD 31w01 BRDDEC (rw): Block repeat destination address decrement Note: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer.
0x5002069C B  REGISTER GPDMA_C12SAR: GPDMA channel 12 source address register
0x5002069C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500206A0 B  REGISTER GPDMA_C12DAR: GPDMA channel 12 destination address register
0x500206A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500206A4 B  REGISTER GPDMA_C12TR3: GPDMA channel 12 transfer register 3
0x500206A4 C   FIELD 00w13 SAO (rw): source address offset increment The source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC = 1). Note: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued. When the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500206A4 C   FIELD 16w13 DAO (rw): destination address offset increment The destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC = 1). Note: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500206A8 B  REGISTER GPDMA_C12BR2: GPDMA channel 12 block register 2
0x500206A8 C   FIELD 00w16 BRSAO (rw): Block repeated source address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer. Note: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x500206A8 C   FIELD 16w16 BRDAO (rw): Block repeated destination address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer. Note: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x500206CC B  REGISTER GPDMA_C12LLR: GPDMA channel 12 alternate linked-list address register
0x500206CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x500206CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x500206CC C   FIELD 25w01 UB2 (rw): Update GPDMA_CxBR2 from memory This bit controls the update of GPDMA_CxBR2 from the memory during the link transfer.
0x500206CC C   FIELD 26w01 UT3 (rw): Update GPDMA_CxTR3 from memory This bit controls the update of GPDMA_CxTR3 from the memory during the link transfer.
0x500206CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x500206CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x500206CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x500206CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x500206CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x500206D0 B  REGISTER GPDMA_C13LBAR: GPDMA channel 13 linked-list base address register
0x500206D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x500206DC B  REGISTER GPDMA_C13FCR: GPDMA channel 13 flag clear register
0x500206DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x500206DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x500206DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x500206DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x500206DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x500206DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x500206DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x500206E0 B  REGISTER GPDMA_C13SR: GPDMA channel 13 status register
0x500206E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x500206E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x500206E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x500206E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x500206E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x500206E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x500206E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x500206E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x500206E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x500206E4 B  REGISTER GPDMA_C13CR: GPDMA channel 13 control register
0x500206E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x500206E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x500206E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x500206E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x500206E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x500206E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x500206E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x500206E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x500206E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x500206E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x500206E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500206E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500206E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020710 B  REGISTER GPDMA_C13TR1: GPDMA channel 13 transfer register 1
0x50020710 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020710 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020710 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020710 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020710 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020710 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020710 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020710 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020710 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020710 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020710 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020710 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020710 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020710 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020714 B  REGISTER GPDMA_C13TR2: GPDMA channel 13 transfer register 2
0x50020714 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020714 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020714 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020714 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020714 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020714 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020714 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020714 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020718 B  REGISTER GPDMA_C13BR1: GPDMA channel 13 alternate block register 1
0x50020718 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x50020718 C   FIELD 16w11 BRC (rw): Block repeat counter This field contains the number of repetitions of the current block (0 to 2047). When the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer. Once the last block transfer is completed (BRC[10:0] = BNDT[15:0] = 0): If GPDMA_CxLLR.UB1 = 1, all GPDMA_CxBR1 fields are updated by the next LLI in the memory. If GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI and data transfer.
0x50020718 C   FIELD 28w01 SDEC (rw): source address decrement
0x50020718 C   FIELD 29w01 DDEC (rw): destination address decrement
0x50020718 C   FIELD 30w01 BRSDEC (rw): Block repeat source address decrement Note: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer.
0x50020718 C   FIELD 31w01 BRDDEC (rw): Block repeat destination address decrement Note: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer.
0x5002071C B  REGISTER GPDMA_C13SAR: GPDMA channel 13 source address register
0x5002071C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020720 B  REGISTER GPDMA_C13DAR: GPDMA channel 13 destination address register
0x50020720 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x50020724 B  REGISTER GPDMA_C13TR3: GPDMA channel 13 transfer register 3
0x50020724 C   FIELD 00w13 SAO (rw): source address offset increment The source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC = 1). Note: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued. When the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020724 C   FIELD 16w13 DAO (rw): destination address offset increment The destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC = 1). Note: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x50020728 B  REGISTER GPDMA_C13BR2: GPDMA channel 13 block register 2
0x50020728 C   FIELD 00w16 BRSAO (rw): Block repeated source address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer. Note: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x50020728 C   FIELD 16w16 BRDAO (rw): Block repeated destination address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer. Note: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002074C B  REGISTER GPDMA_C13LLR: GPDMA channel 13 alternate linked-list address register
0x5002074C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5002074C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x5002074C C   FIELD 25w01 UB2 (rw): Update GPDMA_CxBR2 from memory This bit controls the update of GPDMA_CxBR2 from the memory during the link transfer.
0x5002074C C   FIELD 26w01 UT3 (rw): Update GPDMA_CxTR3 from memory This bit controls the update of GPDMA_CxTR3 from the memory during the link transfer.
0x5002074C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x5002074C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x5002074C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x5002074C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x5002074C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x50020750 B  REGISTER GPDMA_C14LBAR: GPDMA channel 14 linked-list base address register
0x50020750 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x5002075C B  REGISTER GPDMA_C14FCR: GPDMA channel 14 flag clear register
0x5002075C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5002075C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5002075C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5002075C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5002075C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5002075C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5002075C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x50020760 B  REGISTER GPDMA_C14SR: GPDMA channel 14 status register
0x50020760 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x50020760 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x50020760 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x50020760 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x50020760 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x50020760 C   FIELD 12w01 USEF (ro): user setting error flag
0x50020760 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x50020760 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x50020760 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x50020764 B  REGISTER GPDMA_C14CR: GPDMA channel 14 control register
0x50020764 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x50020764 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x50020764 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x50020764 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x50020764 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x50020764 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x50020764 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x50020764 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x50020764 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x50020764 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x50020764 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020764 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x50020764 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020790 B  REGISTER GPDMA_C14TR1: GPDMA channel 14 transfer register 1
0x50020790 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020790 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020790 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020790 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020790 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020790 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020790 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020790 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020790 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020790 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020790 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020790 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020790 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020790 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020794 B  REGISTER GPDMA_C14TR2: GPDMA channel 14 transfer register 2
0x50020794 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020794 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020794 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020794 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020794 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020794 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020794 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020794 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020798 B  REGISTER GPDMA_C14BR1: GPDMA channel 14 alternate block register 1
0x50020798 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x50020798 C   FIELD 16w11 BRC (rw): Block repeat counter This field contains the number of repetitions of the current block (0 to 2047). When the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer. Once the last block transfer is completed (BRC[10:0] = BNDT[15:0] = 0): If GPDMA_CxLLR.UB1 = 1, all GPDMA_CxBR1 fields are updated by the next LLI in the memory. If GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI and data transfer.
0x50020798 C   FIELD 28w01 SDEC (rw): source address decrement
0x50020798 C   FIELD 29w01 DDEC (rw): destination address decrement
0x50020798 C   FIELD 30w01 BRSDEC (rw): Block repeat source address decrement Note: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer.
0x50020798 C   FIELD 31w01 BRDDEC (rw): Block repeat destination address decrement Note: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer.
0x5002079C B  REGISTER GPDMA_C14SAR: GPDMA channel 14 source address register
0x5002079C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500207A0 B  REGISTER GPDMA_C14DAR: GPDMA channel 14 destination address register
0x500207A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500207A4 B  REGISTER GPDMA_C14TR3: GPDMA channel 14 transfer register 3
0x500207A4 C   FIELD 00w13 SAO (rw): source address offset increment The source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC = 1). Note: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued. When the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x500207A4 C   FIELD 16w13 DAO (rw): destination address offset increment The destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC = 1). Note: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x500207A8 B  REGISTER GPDMA_C14BR2: GPDMA channel 14 block register 2
0x500207A8 C   FIELD 00w16 BRSAO (rw): Block repeated source address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer. Note: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x500207A8 C   FIELD 16w16 BRDAO (rw): Block repeated destination address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer. Note: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x500207CC B  REGISTER GPDMA_C14LLR: GPDMA channel 14 alternate linked-list address register
0x500207CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x500207CC C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x500207CC C   FIELD 25w01 UB2 (rw): Update GPDMA_CxBR2 from memory This bit controls the update of GPDMA_CxBR2 from the memory during the link transfer.
0x500207CC C   FIELD 26w01 UT3 (rw): Update GPDMA_CxTR3 from memory This bit controls the update of GPDMA_CxTR3 from the memory during the link transfer.
0x500207CC C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x500207CC C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x500207CC C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x500207CC C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x500207CC C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x500207D0 B  REGISTER GPDMA_C15LBAR: GPDMA channel 15 linked-list base address register
0x500207D0 C   FIELD 16w16 LBA (rw): linked-list base address of GPDMA channel x
0x500207DC B  REGISTER GPDMA_C15FCR: GPDMA channel 15 flag clear register
0x500207DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x500207DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x500207DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x500207DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x500207DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x500207DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x500207DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x500207E0 B  REGISTER GPDMA_C15SR: GPDMA channel 15 status register
0x500207E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (GPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x500207E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is either a block transfer complete, a 2D/repeated block transfer complete, a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]).
0x500207E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is either an half block transfer or an half 2D/repeated block transfer, depending on the transfer complete event mode (GPDMA_CxTR2.TCEM[1:0]). An half block transfer occurs when half of the bytes of the source block size (rounded up integer of GPDMA_CxBR1.BNDT[15:0]/2) has been transferred to the destination. An half 2D/repeated block transfer occurs when half of the repeated blocks (rounded up integer of (GPDMA_CxBR1.BRC[10:0]+1)/2)) has been transferred to the destination.
0x500207E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x500207E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x500207E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x500207E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x500207E0 C   FIELD 14w01 TOF (ro): trigger overrun flag
0x500207E0 C   FIELD 16w08 FIFOL (ro): monitored FIFO level Number of available write beats in the FIFO, in units of the programmed destination data width (see GPDMA_CxTR1.DDW_LOG2[1:0], in units of bytes, half-words, or words). Note: After having suspended an active transfer, the user may need to read FIFOL[7:0], additionally to GPDMA_CxBR1.BDNT[15:0] and GPDMA_CxBR1.BRC[10:0], to know how many data have been transferred to the destination. Before reading, the user may wait for the transfer to be suspended (GPDMA_CxSR.SUSPF = 1).
0x500207E4 B  REGISTER GPDMA_C15CR: GPDMA channel 15 control register
0x500207E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x500207E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the FIFO, the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (GPDMA_CxSR.SUSPF = 1 and GPDMA_CxSR.IDLEF = GPDMA_CxCR.EN = 1) - channel in disabled state (GPDMA_CxSR.IDLEF = 1 and GPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (GPDMA_CxBR1, GPDMA_CxSAR and GPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x500207E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going GPDMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in .
0x500207E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x500207E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x500207E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x500207E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x500207E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x500207E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x500207E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x500207E4 C   FIELD 16w01 LSM (rw): Link step mode First the (possible 1D/repeated) block transfer is executed as defined by the current internal register file until GPDMA_CxBR1.BNDT[15:0] = 0 and GPDMA_CxBR1.BRC[10:0] = 0 if present. Secondly the next linked-list data structure is conditionally uploaded from memory as defined by GPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500207E4 C   FIELD 17w01 LAP (rw): linked-list allocated port This bit is used to allocate the master port for the update of the GPDMA linked-list registers from the memory. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x500207E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x GPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020810 B  REGISTER GPDMA_C15TR1: GPDMA channel 15 transfer register 1
0x50020810 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a burst in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and no transfer is issued. A source block size must be a multiple of the source data width (GPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address GPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x50020810 C   FIELD 03w01 SINC (rw): source incrementing burst The source address, pointed by GPDMA_CxSAR, is kept constant after a burst beat/single transfer or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020810 C   FIELD 04w06 SBL_1 (rw): source burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If SBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width SDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020810 C   FIELD 11w02 PAM (rw): padding/alignment mode If DDW_LOG2[1:0] = SDW_LOG2[1:0]: if the data width of a burst destination transfer is equal to the data width of a burst source transfer, these bits are ignored. Else: - Case 1: If destination data width > source data width 1x: successive source data are FIFO queued and packed at the destination data width, in a left (LSB) to right (MSB) order (named little endian), before a destination transfer - Case 2: If destination data width < source data width 1x: source data is FIFO queued and unpacked at the destination data width, to be transferred in a left (LSB) to right (MSB) order (named little endian) to the destination Note:
0x50020810 C   FIELD 13w01 SBX (rw): source byte exchange within the unaligned half-word of each source word If the source data width is shorter than a word, this bit is ignored. If the source data width is a word:
0x50020810 C   FIELD 14w01 SAP (rw): source allocated port This bit is used to allocate the master port for the source transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020810 C   FIELD 15w01 SSEC (rw): security attribute of the GPDMA transfer from the source If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx =1 . A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer from the source is non-secure.
0x50020810 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a burst, in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination burst transfer must have an aligned address with its data width (start address GPDMA_CxDAR[2:0] and address offset GPDMA_CxTR3.DAO[2:0], versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and no transfer is issued.
0x50020810 C   FIELD 19w01 DINC (rw): destination incrementing burst The destination address, pointed by GPDMA_CxDAR, is kept constant after a burst beat/single transfer, or is incremented by the offset value corresponding to a contiguous data after a burst beat/single transfer.
0x50020810 C   FIELD 20w06 DBL_1 (rw): destination burst length minus 1, between 0 and 63 The burst length unit is one data named beat within a burst. If DBL_1[5:0] =0 , the burst can be named as single. Each data/beat has a width defined by the destination data width DDW_LOG2[1:0]. Note: If a burst transfer crossed a 1-Kbyte address boundary on a AHB transfer, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the AHB protocol. If a burst transfer is of length greater than the FIFO size of the channel x, the GPDMA modifies and shortens the programmed burst into singles or bursts of lower length, to be compliant with the FIFO size. Transfer performance is lower, with GPDMA re-arbitration between effective and lower bursts/singles, but the data integrity is guaranteed.
0x50020810 C   FIELD 26w01 DBX (rw): destination byte exchange If the destination data size is a byte, this bit is ignored. If the destination data size is not a byte:
0x50020810 C   FIELD 27w01 DHX (rw): destination half-word exchange If the destination data size is shorter than a word, this bit is ignored. If the destination data size is a word:
0x50020810 C   FIELD 30w01 DAP (rw): destination allocated port This bit is used to allocate the master port for the destination transfer Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x50020810 C   FIELD 31w01 DSEC (rw): security attribute of the GPDMA transfer to the destination If GPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when GPDMA_SECCFGR.SECx = 1. A secure write is ignored when GPDMA_SECCFGR.SECx = 0. When GPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the GPDMA transfer to the destination is non-secure.
0x50020814 B  REGISTER GPDMA_C15TR2: GPDMA channel 15 transfer register 2
0x50020814 C   FIELD 00w07 REQSEL (rw): GPDMA hardware request selection These bits are ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per . The user must not assign a same input hardware request (same REQSEL[6:0] value) to different active GPDMA channels (GPDMA_CxCR.EN = 1 and GPDMA_CxTR2.SWREQ = 0 for these channels). GPDMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x50020814 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when GPDMA_CxCR.EN is asserted.
0x50020814 C   FIELD 10w01 DREQ (rw): destination hardware request This bit is ignored if channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else: Note:
0x50020814 C   FIELD 11w01 BREQ (rw): Block hardware request If the channel x is activated (GPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x50020814 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (GPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 00 or 11, these TRIGM[1:0] bits are ignored. Else, a GPDMA transfer is conditioned by at least one trigger hit: first burst read of a 2D/repeated block transfer is conditioned by one hit trigger. – If the peripheral is programmed as a source (DREQ = 0) of the LLI data transfer, each programmed burst read is conditioned. – If the peripheral is programmed as a destination (DREQ = 1) of the LLI data transfer, each programmed burst write is conditioned. The first memory burst read of a (possibly 2D/repeated) block, also named as the first ready FIFO-based source burst, is gated by the occurrence of both the hardware request and the first trigger hit. The GPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 01 or respectively TRIGPOL[1:0] = 10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[5:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the GPDMA_CxTR2 with a new value for any of TRIGSEL[5:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized.memorized. A trigger overrun flag is reported (GPDMA_CxSR.TOF =1 ), and an interrupt is generated if enabled (GPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun. Note: When the source block size is not a multiple of the source burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, if TRIGM[1:0] = 11 and (SWREQ =1 or (SWREQ = 0 and DREQ =0 )), the shortened burst transfer (by singles or/and by bursts of lower length) is conditioned once by the trigger. When the programmed destination burst is internally shortened by singles or/and by bursts of lower length (versus FIFO size, versus block size, 1-Kbyte boundary address crossing): if the trigger is conditioning the programmed destination burst (if TRIGM[1:0] = 11 and SWREQ = 0 and DREQ = 1), this shortened destination burst transfer is conditioned once by the trigger.
0x50020814 C   FIELD 16w06 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the GPDMA transfer (as per ), with an active trigger event if TRIGPOL[1:0] ≠ 00.
0x50020814 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[5:0].
0x50020814 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with GPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x50020818 B  REGISTER GPDMA_C15BR1: GPDMA channel 15 alternate block register 1
0x50020818 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if GPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. - if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued. When configured in packing mode (GPDMA_CxTR1.PAM[1]=1 and destination data width different from source data width), a non-null source block size must be a multiple of the destination data width (BNDT[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x50020818 C   FIELD 16w11 BRC (rw): Block repeat counter This field contains the number of repetitions of the current block (0 to 2047). When the channel is enabled, this field becomes read-only. After decrements, this field indicates the remaining number of blocks, excluding the current one. This counter is hardware decremented for each completed block transfer. Once the last block transfer is completed (BRC[10:0] = BNDT[15:0] = 0): If GPDMA_CxLLR.UB1 = 1, all GPDMA_CxBR1 fields are updated by the next LLI in the memory. If GPDMA_CxLLR.UB1 = 0 and if there is at least one not null Uxx update bit, this field is internally restored to the programmed value. if all GPDMA_CxLLR.Uxx = 0 and if GPDMA_CxLLR.LA[15:0] ≠ 0, this field is internally restored to the programmed value (infinite/continuous last LLI). if GPDMA_CxLLR = 0, this field is kept as zero following the last LLI and data transfer.
0x50020818 C   FIELD 28w01 SDEC (rw): source address decrement
0x50020818 C   FIELD 29w01 DDEC (rw): destination address decrement
0x50020818 C   FIELD 30w01 BRSDEC (rw): Block repeat source address decrement Note: On top of this increment/decrement (depending on BRSDEC), GPDMA_CxSAR is in the same time also updated by the increment/decrement (depending on SDEC) of the GPDMA_CxTR3.SAO value, as it is done after any programmed burst transfer.
0x50020818 C   FIELD 31w01 BRDDEC (rw): Block repeat destination address decrement Note: On top of this increment/decrement (depending on BRDDEC), GPDMA_CxDAR is in the same time also updated by the increment/decrement (depending on DDEC) of the GPDMA_CxTR3.DAO value, as it is usually done at the end of each programmed burst transfer.
0x5002081C B  REGISTER GPDMA_C15SAR: GPDMA channel 15 source address register
0x5002081C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (GPDMA_CxTR1.SINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. During the channel activity, this address is updated after each completed source burst, consequently to: the programmed source burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.SINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.SBL_1[5:0] and GPDMA_CxTR1.SDW_LOG2[21:0] the additional source incremented/decremented offset value as programmed by GPDMA_CxBR1.SDEC and GPDMA_CxTR3.SAO[12:0] once/if completed source block transfer, for a channel x with 2D addressing capability (x = 12 to 15). additional block repeat source incremented/decremented offset value as programmed by GPDMA_CxBR1.BRSDEC and GPDMA_CxBR2.BRSAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued. When the source block size is not a multiple of the source burst size and is a multiple of the source data width, the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020820 B  REGISTER GPDMA_C15DAR: GPDMA channel 15 destination address register
0x50020820 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (GPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (GPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. During the channel activity, this address is updated after each completed destination burst, consequently to: the programmed destination burst; either in fixed addressing mode or in contiguous-data incremented mode. If contiguously incremented (GPDMA_CxTR1.DINC = 1), then the additional address offset value is the programmed burst size, as defined by GPDMA_CxTR1.DBL_1[5:0] and GPDMA_CxTR1.DDW_LOG2[1:0] the additional destination incremented/decremented offset value as programmed by GPDMA_CxBR1.DDEC and GPDMA_CxTR3.DAO[12:0] once/if completed destination block transfer, for a channel x with 2D addressing capability (x = 12 to 15), the additional block repeat destination incremented/decremented offset value as programmed by GPDMA_CxBR1.BRDDEC and GPDMA_CxBR2.BRDAO[15:0] In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by the GPDMA from the memory, provided the LLI is set with GPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination burst (DA[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x50020824 B  REGISTER GPDMA_C15TR3: GPDMA channel 15 transfer register 3
0x50020824 C   FIELD 00w13 SAO (rw): source address offset increment The source address, pointed by GPDMA_CxSAR, is incremented or decremented (depending on GPDMA_CxBR1.SDEC) by this offset SAO[12:0] for each programmed source burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.SINC = 1). Note: A source address offset must be aligned with the programmed data width of a source burst (SAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued. When the source block size is not a multiple of the destination burst size and is a multiple of the source data width, then the last programmed source burst is not completed and is internally shorten to match the block size. In this case, the additional GPDMA_CxTR3.SAO[12:0] is not applied.
0x50020824 C   FIELD 16w13 DAO (rw): destination address offset increment The destination address, pointed by GPDMA_CxDAR, is incremented or decremented (depending on GPDMA_CxBR1.DDEC) by this offset DAO[12:0] for each programmed destination burst. This offset is not including and is added to the programmed burst size when the completed burst is addressed in incremented mode (GPDMA_CxTR1.DINC = 1). Note: A destination address offset must be aligned with the programmed data width of a destination burst (DAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x50020828 B  REGISTER GPDMA_C15BR2: GPDMA channel 15 block register 2
0x50020828 C   FIELD 00w16 BRSAO (rw): Block repeated source address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRSDEC) the current source address (GPDMA_CxSAR) at the end of a block transfer. Note: A block repeated source address offset must be aligned with the programmed data width of a source burst (BRSAO[2:0] versus GPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x50020828 C   FIELD 16w16 BRDAO (rw): Block repeated destination address offset For a channel with 2D addressing capability, this field is used to update (by addition or subtraction depending on GPDMA_CxBR1.BRDDEC) the current destination address (GPDMA_CxDAR) at the end of a block transfer. Note: A block repeated destination address offset must be aligned with the programmed data width of a destination burst (BRDAO[2:0] versus GPDMA_CxTR1.DDW_LOG2[1:0]). Else a user setting error is reported and no transfer is issued.
0x5002084C B  REGISTER GPDMA_C15LLR: GPDMA channel 15 alternate linked-list address register
0x5002084C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list GPDMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list GPDMA internal register file (GPDMA_CxCTR1, GPDMA_CxTR2, GPDMA_CxBR1, GPDMA_CxSAR, GPDMA_CxDAR and GPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5002084C C   FIELD 16w01 ULL (rw): Update GPDMA_CxLLR register from memory This bit is used to control the update of GPDMA_CxLLR from the memory during the link transfer.
0x5002084C C   FIELD 25w01 UB2 (rw): Update GPDMA_CxBR2 from memory This bit controls the update of GPDMA_CxBR2 from the memory during the link transfer.
0x5002084C C   FIELD 26w01 UT3 (rw): Update GPDMA_CxTR3 from memory This bit controls the update of GPDMA_CxTR3 from the memory during the link transfer.
0x5002084C C   FIELD 27w01 UDA (rw): Update GPDMA_CxDAR register from memory This bit is used to control the update of GPDMA_CxDAR from the memory during the link transfer.
0x5002084C C   FIELD 28w01 USA (rw): update GPDMA_CxSAR from memory This bit controls the update of GPDMA_CxSAR from the memory during the link transfer.
0x5002084C C   FIELD 29w01 UB1 (rw): Update GPDMA_CxBR1 from memory This bit controls the update of GPDMA_CxBR1 from the memory during the link transfer. If UB1 = 0 and if GPDMA_CxLLR ≠ 0, the linked-list is not completed. GPDMA_CxBR1.BNDT[15:0] is then restored to the programmed value after data transfer is completed and before the link transfer.
0x5002084C C   FIELD 30w01 UT2 (rw): Update GPDMA_CxTR2 from memory This bit controls the update of GPDMA_CxTR2 from the memory during the link transfer.
0x5002084C C   FIELD 31w01 UT1 (rw): Update GPDMA_CxTR1 from memory This bit controls the update of GPDMA_CxTR1 from the memory during the link transfer.
0x50021000 A PERIPHERAL SEC_CORDIC
0x50021000 B  REGISTER CSR: CORDIC Control Status register
0x50021000 C   FIELD 00w04 FUNC (rw): Function
0x50021000 C   FIELD 04w04 PRECISION (rw): Precision required (number of iterations)
0x50021000 C   FIELD 08w03 SCALE (rw): Scaling factor
0x50021000 C   FIELD 16w01 IEN (rw): Enable interrupt
0x50021000 C   FIELD 17w01 DMAREN (rw): Enable DMA read channel
0x50021000 C   FIELD 18w01 DMAWEN (rw): Enable DMA write channel
0x50021000 C   FIELD 19w01 NRES (rw): Number of results in the CORDIC_RDATA register
0x50021000 C   FIELD 20w01 NARGS (rw): Number of arguments expected by the CORDIC_WDATA register
0x50021000 C   FIELD 21w01 RESSIZE (rw): Width of output data
0x50021000 C   FIELD 22w01 ARGSIZE (rw): Width of input data
0x50021000 C   FIELD 31w01 RRDY (ro): Result ready flag
0x50021004 B  REGISTER WDATA (wo): FMAC Write Data register
0x50021004 C   FIELD 00w32 ARG: Function input arguments
0x50021008 B  REGISTER RDATA (ro): FMAC Read Data register
0x50021008 C   FIELD 00w32 RES: Function result
0x50021400 A PERIPHERAL SEC_FMAC
0x50021400 B  REGISTER X1BUFCFG (rw): FMAC X1 Buffer Configuration register
0x50021400 C   FIELD 00w08 X1_BASE: Base address of X1 buffer
0x50021400 C   FIELD 08w08 X1_BUF_SIZE: Allocated size of X1 buffer in 16-bit words
0x50021400 C   FIELD 24w02 FULL_WM: Watermark for buffer full flag
0x50021404 B  REGISTER X2BUFCFG (rw): FMAC X2 Buffer Configuration register
0x50021404 C   FIELD 00w08 X2_BASE: Base address of X2 buffer
0x50021404 C   FIELD 08w08 X2_BUF_SIZE: Size of X2 buffer in 16-bit words
0x50021408 B  REGISTER YBUFCFG (rw): FMAC Y Buffer Configuration register
0x50021408 C   FIELD 00w08 Y_BASE: Base address of Y buffer
0x50021408 C   FIELD 08w08 Y_BUF_SIZE: Size of Y buffer in 16-bit words
0x50021408 C   FIELD 24w02 EMPTY_WM: Watermark for buffer empty flag
0x5002140C B  REGISTER PARAM (rw): FMAC Parameter register
0x5002140C C   FIELD 00w08 P: Input parameter P
0x5002140C C   FIELD 08w08 Q: Input parameter Q
0x5002140C C   FIELD 16w08 R: Input parameter R
0x5002140C C   FIELD 24w07 FUNC: Function
0x5002140C C   FIELD 31w01 START: Enable execution
0x50021410 B  REGISTER CR (rw): FMAC Control register
0x50021410 C   FIELD 00w01 RIEN: Enable read interrupt
0x50021410 C   FIELD 01w01 WIEN: Enable write interrupt
0x50021410 C   FIELD 02w01 OVFLIEN: Enable overflow error interrupts
0x50021410 C   FIELD 03w01 UNFLIEN: Enable underflow error interrupts
0x50021410 C   FIELD 04w01 SATIEN: Enable saturation error interrupts
0x50021410 C   FIELD 08w01 DMAREN: Enable DMA read channel requests
0x50021410 C   FIELD 09w01 DMAWEN: Enable DMA write channel requests
0x50021410 C   FIELD 15w01 CLIPEN: Enable clipping
0x50021410 C   FIELD 16w01 RESET: Reset FMAC unit
0x50021414 B  REGISTER SR (ro): FMAC Status register
0x50021414 C   FIELD 00w01 YEMPTY: Y buffer empty flag
0x50021414 C   FIELD 01w01 X1FULL: X1 buffer full flag
0x50021414 C   FIELD 08w01 OVFL: Overflow error flag
0x50021414 C   FIELD 09w01 UNFL: Underflow error flag
0x50021414 C   FIELD 10w01 SAT: Saturation error flag
0x50021418 B  REGISTER WDATA (wo): FMAC Write Data register
0x50021418 C   FIELD 00w16 WDATA: Write data
0x5002141C B  REGISTER RDATA (ro): FMAC Read Data register
0x5002141C C   FIELD 00w16 RDATA: Read data
0x50022000 A PERIPHERAL SEC_FLASH
0x50022000 B  REGISTER FLASH_ACR: FLASH access control register
0x50022000 C   FIELD 00w04 LATENCY (rw): Latency These bits represent the ratio between the HCLK (AHB clock) period and the Flash memory access time. ...
0x50022000 C   FIELD 08w01 PRFTEN (rw): Prefetch enable This bit enables the prefetch buffer in the embedded Flash memory.
0x50022000 C   FIELD 11w01 LPM (rw): Low-power read mode This bit puts the Flash memory in low-power read mode.
0x50022000 C   FIELD 12w01 PDREQ1 (rw): Bank 1 power-down mode request This bit is write-protected with FLASH_PDKEY1R. This bit requests bank 1 to enter power-down mode. When bank 1 enters power-down mode, this bit is cleared by hardware and the PDKEY1R is locked.
0x50022000 C   FIELD 13w01 PDREQ2 (rw): Bank 2 power-down mode request This bit is write-protected with FLASH_PDKEY2R. This bit requests bank 2 to enter power-down mode. When bank 2 enters power-down mode, this bit is cleared by hardware and the PDKEY2R is locked.
0x50022000 C   FIELD 14w01 SLEEP_PD (rw): Flash memory power-down mode during Sleep mode This bit determines whether the Flash memory is in power-down mode or Idle mode when the device is in Sleep mode. The Flash must not be put in power-down while a program or an erase operation is on-going.
0x50022008 B  REGISTER FLASH_NSKEYR: FLASH non-secure key register
0x50022008 C   FIELD 00w32 NSKEY (wo): Flash memory non-secure key
0x5002200C B  REGISTER FLASH_SECKEYR: FLASH secure key register
0x5002200C C   FIELD 00w32 SECKEY (wo): Flash memory secure key
0x50022010 B  REGISTER FLASH_OPTKEYR: FLASH option key register
0x50022010 C   FIELD 00w32 OPTKEY (wo): Option byte key
0x50022018 B  REGISTER FLASH_PDKEY1R: FLASH bank 1 power-down key register
0x50022018 C   FIELD 00w32 PDKEY1 (wo): Bank 1 power-down key
0x5002201C B  REGISTER FLASH_PDKEY2R: FLASH bank 2 power-down key register
0x5002201C C   FIELD 00w32 PDKEY2 (wo): Bank 2 power-down key
0x50022020 B  REGISTER FLASH_NSSR: FLASH non-secure status register
0x50022020 C   FIELD 00w01 EOP (rw): Non-secure end of operation
0x50022020 C   FIELD 01w01 OPERR (rw): Non-secure operation error
0x50022020 C   FIELD 03w01 PROGERR (rw): Non-secure programming error This bit is set by hardware when a non-secure quad-word address to be programmed contains a value different from all 1 before programming, except if the data to write is all 0. This bit is cleared by writing 1.
0x50022020 C   FIELD 04w01 WRPERR (rw): Non-secure write protection error This bit is set by hardware when an non-secure address to be erased/programmed belongs to a write-protected part (by WRP, HDP or RDP level 1) of the Flash memory. This bit is cleared by writing 1. Refer to for full conditions of error flag setting.
0x50022020 C   FIELD 05w01 PGAERR (rw): Non-secure programming alignment error This bit is set by hardware when the first word to be programmed is not aligned with a quad-word address, or the second, third or forth word does not belong to the same quad-word address. This bit is cleared by writing 1.
0x50022020 C   FIELD 06w01 SIZERR (rw): Non-secure size error This bit is set by hardware when the size of the access is a byte or half-word during a non-secure program sequence. Only quad-word programming is allowed by means of successive word accesses. This bit is cleared by writing 1.
0x50022020 C   FIELD 07w01 PGSERR (rw): Non-secure programming sequence error This bit is set by hardware when programming sequence is not correct. It is cleared by writing 1. Refer to for full conditions of error flag setting.
0x50022020 C   FIELD 13w01 OPTWERR (rw): Option write error This bit is set by hardware when the options bytes are written with an invalid configuration. It is cleared by writing 1. Refer to for full conditions of error flag setting.
0x50022020 C   FIELD 16w01 BSY (ro): Non-secure busy This indicates that a Flash memory secure or non-secure operation is in progress. This bit is set at the beginning of a Flash operation and reset when the operation finishes or when an error occurs.
0x50022020 C   FIELD 17w01 WDW (ro): Non-secure wait data to write This bit indicates that the Flash memory write buffer has been written by a secure or non-secure operation. It is set when the first data is stored in the buffer and cleared when the write is performed in the Flash memory.
0x50022020 C   FIELD 18w01 OEM1LOCK (ro): OEM1 lock This bit indicates that the OEM1 RDP key read during the OBL is not virgin. When set, the OEM1 RDP lock mechanism is active.
0x50022020 C   FIELD 19w01 OEM2LOCK (ro): OEM2 lock This bit indicates that the OEM2 RDP key read during the OBL is not virgin. When set, the OEM2 RDP lock mechanism is active.
0x50022020 C   FIELD 20w01 PD1 (ro): Bank 1 in power-down mode This bit indicates that the Flash memory bank 1 is in power-down state. It is reset when bank 1 is in normal mode or being awaken.
0x50022020 C   FIELD 21w01 PD2 (ro): Bank 2 in power-down mode This bit indicates that the Flash memory bank 2 is in power-down state. It is reset when bank 2 is in normal mode or being awaken.
0x50022024 B  REGISTER FLASH_SECSR: FLASH secure status register
0x50022024 C   FIELD 00w01 EOP (rw): Secure end of operation This bit is set by hardware when one or more Flash memory secure operation (program/erase) has been completed successfully. This bit is set only if the secure end of operation interrupts are enabled (EOPIE = 1 in FLASH_SECCR). This bit is cleared by writing 1.
0x50022024 C   FIELD 01w01 OPERR (rw): Secure operation error This bit is set by hardware when a Flash memory secure operation (program/erase) completes unsuccessfully. This bit is set only if secure error interrupts are enabled (SECERRIE = 1). This bit is cleared by writing 1.
0x50022024 C   FIELD 03w01 PROGERR (rw): Secure programming error This bit is set by hardware when a secure quad-word address to be programmed contains a value different from all 1 before programming, except if the data to write is all 0. This bit is cleared by writing 1.
0x50022024 C   FIELD 04w01 WRPERR (rw): Secure write protection error This bit is set by hardware when an secure address to be erased/programmed belongs to a write-protected part (by WRP, PCROP, HDP or RDP level 1) of the Flash memory.This bit is cleared by writing 1. Refer to for full conditions of error flag setting.
0x50022024 C   FIELD 05w01 PGAERR (rw): Secure programming alignment error This bit is set by hardware when the first word to be programmed is not aligned with a quad-word address, or the second, third or forth word does not belong to the same quad-word address.This bit is cleared by writing 1.
0x50022024 C   FIELD 06w01 SIZERR (rw): Secure size error This bit is set by hardware when the size of the access is a byte or half-word during a secure program sequence. Only quad-word programming is allowed by means of successive word accesses.This bit is cleared by writing 1.
0x50022024 C   FIELD 07w01 PGSERR (rw): Secure programming sequence error This bit is set by hardware when programming sequence is not correct. It is cleared by writing 1. Refer to for full conditions of error flag setting.
0x50022024 C   FIELD 16w01 BSY (ro): Secure busy This bit indicates that a Flash memory secure or non-secure operation is in progress. This is set on the beginning of a Flash operation and reset when the operation finishes or when an error occurs.
0x50022024 C   FIELD 17w01 WDW (ro): Secure wait data to write This bit indicates that the Flash memory write buffer has been written by a secure or non-secure operation. It is set when the first data is stored in the buffer and cleared when the write is performed in the Flash memory.
0x50022028 B  REGISTER FLASH_NSCR: FLASH non-secure control register
0x50022028 C   FIELD 00w01 PG (rw): Non-secure programming
0x50022028 C   FIELD 01w01 PER (rw): Non-secure page erase
0x50022028 C   FIELD 02w01 MER1 (rw): Non-secure bank 1 mass erase This bit triggers the bank 1 non-secure mass erase (all bank 1 user pages) when set.
0x50022028 C   FIELD 03w07 PNB (rw): Non-secure page number selection These bits select the page to erase. ...
0x50022028 C   FIELD 11w01 BKER (rw): Non-secure bank selection for page erase
0x50022028 C   FIELD 14w01 BWR (rw): Non-secure burst write programming mode When set, this bit selects the burst write programming mode.
0x50022028 C   FIELD 15w01 MER2 (rw): Non-secure bank 2 mass erase This bit triggers the bank 2 non-secure mass erase (all bank 2 user pages) when set.
0x50022028 C   FIELD 16w01 STRT (rw): Non-secure start This bit triggers a non-secure erase operation when set. If MER1, MER2 and PER bits are reset and the STRT bit is set, the PGSERR bit in FLASH_NSSR is set (this condition is forbidden). This bit is set only by software and is cleared when the BSY bit is cleared in FLASH_NSSR.
0x50022028 C   FIELD 17w01 OPTSTRT (rw): Options modification start This bit triggers an options operation when set. It can not be written if OPTLOCK bit is set. This bit is set only by software, and is cleared when the BSY bit is cleared in FLASH_NSSR.
0x50022028 C   FIELD 24w01 EOPIE (rw): Non-secure end of operation interrupt enable This bit enables the interrupt generation when the EOP bit in the FLASH_NSSR is set to 1.
0x50022028 C   FIELD 25w01 ERRIE (rw): Non-secure error interrupt enable This bit enables the interrupt generation when the OPERR bit in the FLASH_NSSR is set to 1.
0x50022028 C   FIELD 27w01 OBL_LAUNCH (rw): Force the option byte loading When set to 1, this bit forces the option byte reloading. This bit is cleared only when the option byte loading is complete. It cannot be written if OPTLOCK is set.
0x50022028 C   FIELD 30w01 OPTLOCK (rw): Option lock This bit is set only. When set, all bits concerning user options in FLASH_NSCR register are locked. This bit is cleared by hardware after detecting the unlock sequence. The LOCK bit in the FLASH_NSCR must be cleared before doing the unlock sequence for OPTLOCK bit. In case of an unsuccessful unlock operation, this bit remains set until the next reset.
0x50022028 C   FIELD 31w01 LOCK (rw): Non-secure lock This bit is set only. When set, the FLASH_NSCR register is locked. It is cleared by hardware after detecting the unlock sequence in FLASH_NSKEYR register. In case of an unsuccessful unlock operation, this bit remains set until the next system reset.
0x5002202C B  REGISTER FLASH_SECCR: FLASH secure control register
0x5002202C C   FIELD 00w01 PG (rw): Secure programming
0x5002202C C   FIELD 01w01 PER (rw): Secure page erase
0x5002202C C   FIELD 02w01 MER1 (rw): Secure bank 1 mass erase This bit triggers the bank 1 secure mass erase (all bank 1 user pages) when set.
0x5002202C C   FIELD 03w07 PNB (rw): Secure page number selection These bits select the page to erase: ...
0x5002202C C   FIELD 11w01 BKER (rw): Secure bank selection for page erase
0x5002202C C   FIELD 14w01 BWR (rw): Secure burst write programming mode When set, this bit selects the burst write programming mode.
0x5002202C C   FIELD 15w01 MER2 (rw): Secure bank 2 mass erase This bit triggers the bank 2 secure mass erase (all bank 2 user pages) when set.
0x5002202C C   FIELD 16w01 STRT (rw): Secure start This bit triggers a secure erase operation when set. If MER1, MER2 and PER bits are reset and the STRT bit is set, the PGSERR in the FLASH_SECSR is set (this condition is forbidden). This bit is set only by software and is cleared when the BSY bit is cleared in FLASH_SECSR.
0x5002202C C   FIELD 24w01 EOPIE (rw): Secure End of operation interrupt enable This bit enables the interrupt generation when the EOP bit in the FLASH_SECSR is set to 1.
0x5002202C C   FIELD 25w01 ERRIE (rw): Secure error interrupt enable
0x5002202C C   FIELD 26w01 RDERRIE (rw): Secure PCROP read error interrupt enable
0x5002202C C   FIELD 29w01 INV (rw): Flash memory security state invert This bit inverts the Flash memory security state.
0x5002202C C   FIELD 31w01 LOCK (rw): Secure lock This bit is set only. When set, the FLASH_SECCR register is locked. It is cleared by hardware after detecting the unlock sequence in FLASH_SECKEYR register. In case of an unsuccessful unlock operation, this bit remains set until the next system reset.
0x50022030 B  REGISTER FLASH_ECCR: FLASH ECC register
0x50022030 C   FIELD 00w20 ADDR_ECC (ro): ECC fail address
0x50022030 C   FIELD 21w01 BK_ECC (ro): ECC fail bank
0x50022030 C   FIELD 22w01 SYSF_ECC (ro): System Flash memory ECC fail This bit indicates that the ECC error correction or double ECC error detection is located in the system Flash memory.
0x50022030 C   FIELD 24w01 ECCIE (rw): ECC correction interrupt enable This bit enables the interrupt generation when the ECCC bit in the FLASH_ECCR register is set.
0x50022030 C   FIELD 30w01 ECCC (rw): ECC correction This bit is set by hardware when one ECC error has been detected and corrected (only if ECCC and ECCD were previously cleared). An interrupt is generated if ECCIE is set. This bit is cleared by writing 1.
0x50022030 C   FIELD 31w01 ECCD (rw): ECC detection This bit is set by hardware when two ECC errors have been detected (only if ECCC and ECCD were previously cleared). When this bit is set, a NMI is generated. This bit is cleared by writing 1.
0x50022034 B  REGISTER FLASH_OPSR: FLASH operation status register
0x50022034 C   FIELD 00w20 ADDR_OP (ro): Interrupted operation address This field indicates which address in the Flash memory was accessed when reset occurred. The address is given by bank from address 0x0 0000 to 0xF FFF0.
0x50022034 C   FIELD 21w01 BK_OP (ro): Interrupted operation bank This bit indicates which Flash memory bank was accessed when reset occurred
0x50022034 C   FIELD 22w01 SYSF_OP (ro): Operation in system Flash memory interrupted This bit indicates that the reset occurred during an operation in the system Flash memory.
0x50022034 C   FIELD 29w03 CODE_OP (ro): Flash memory operation code This field indicates which Flash memory operation has been interrupted by a system reset:
0x50022040 B  REGISTER FLASH_OPTR: FLASH option register
0x50022040 C   FIELD 00w08 RDP (rw): Readout protection level Others: Level 1 (memories readout protection active) Note: Refer to for more details.
0x50022040 C   FIELD 08w03 BOR_LEV (rw): BOR reset level These bits contain the VDD supply level threshold that activates/releases the reset.
0x50022040 C   FIELD 12w01 nRST_STOP (rw): Reset generation in Stop mode
0x50022040 C   FIELD 13w01 nRST_STDBY (rw): Reset generation in Standby mode
0x50022040 C   FIELD 14w01 nRST_SHDW (rw): Reset generation in Shutdown mode
0x50022040 C   FIELD 15w01 SRAM1345_RST (rw): SRAM1, SRAM3 and SRAM4 erase upon system reset
0x50022040 C   FIELD 16w01 IWDG_SW (rw): Independent watchdog selection
0x50022040 C   FIELD 17w01 IWDG_STOP (rw): Independent watchdog counter freeze in Stop mode
0x50022040 C   FIELD 18w01 IWDG_STDBY (rw): Independent watchdog counter freeze in Standby mode
0x50022040 C   FIELD 19w01 WWDG_SW (rw): Window watchdog selection
0x50022040 C   FIELD 20w01 SWAP_BANK (rw): Swap banks
0x50022040 C   FIELD 21w01 DUALBANK (rw): Dual-bank on 1-Mbyte and 512-Kbyte Flash memory devices
0x50022040 C   FIELD 22w01 BKPRAM_ECC (rw): Backup RAM ECC detection and correction enable
0x50022040 C   FIELD 23w01 SRAM3_ECC (rw): SRAM3 ECC detection and correction enable
0x50022040 C   FIELD 24w01 SRAM2_ECC (rw): SRAM2 ECC detection and correction enable
0x50022040 C   FIELD 25w01 SRAM2_RST (rw): SRAM2 erase when system reset
0x50022040 C   FIELD 26w01 nSWBOOT0 (rw): Software BOOT0
0x50022040 C   FIELD 27w01 nBOOT0 (rw): nBOOT0 option bit
0x50022040 C   FIELD 28w01 PA15_PUPEN (rw): PA15 pull-up enable
0x50022040 C   FIELD 29w01 IO_VDD_HSLV (rw): High-speed IO at low VDD voltage configuration bit This bit can be set only with VDD below 2.5V
0x50022040 C   FIELD 30w01 IO_VDDIO2_HSLV (rw): High-speed IO at low VDDIO2 voltage configuration bit This bit can be set only with VDDIO2 below 2.5 V.
0x50022040 C   FIELD 31w01 TZEN (rw): Global TrustZone security enable
0x50022044 B  REGISTER FLASH_NSBOOTADD0R: FLASH non-secure boot address 0 register
0x50022044 C   FIELD 07w25 NSBOOTADD0 (rw): Non-secure boot base address 0 The non-secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. These bits correspond to address [31:7]. The NSBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state. Examples: NSBOOTADD0[24:0] = 0x0100000: Boot from non-secure Flash memory (0x0800 0000) NSBOOTADD0[24:0] = 0x017F200: Boot from system memory bootloader (0x0BF9 0000) NSBOOTADD0[24:0] = 0x0400000: Boot from non-secure SRAM1 on S-Bus (0x2000 0000)
0x50022048 B  REGISTER FLASH_NSBOOTADD1R: FLASH non-secure boot address 1 register
0x50022048 C   FIELD 07w25 NSBOOTADD1 (rw): Non-secure boot address 1 The non-secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. These bits correspond to address [31:7]. The NSBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state. Examples: NSBOOTADD1[24:0] = 0x0100000: Boot from non-secure Flash memory (0x0800 0000) NSBOOTADD1[24:0] = 0x017F200: Boot from system memory bootloader (0x0BF9 0000) NSBOOTADD1[24:0] = 0x0400000: Boot from non-secure SRAM1 on S-Bus (0x2000 0000)
0x5002204C B  REGISTER FLASH_SECBOOTADD0R: FLASH secure boot address 0 register
0x5002204C C   FIELD 00w01 BOOT_LOCK (rw): Boot lock When set, the boot is always forced to base address value programmed in SECBOOTADD0[24:0] option bytes whatever the boot selection option. When set, this bit can only be cleared by an RDP at level 0.
0x5002204C C   FIELD 07w25 SECBOOTADD0 (rw): Secure boot base address 0 The secure boot memory address can be programmed to any address in the valid address range with a granularity of 128 bytes. This bits correspond to address [31:7] The SECBOOTADD0 option bytes are selected following the BOOT0 pin or nSWBOOT0 state. Examples: SECBOOTADD0[24:0] = 0x018 0000: Boot from secure Flash memory (0x0C00 0000) SECBOOTADD0[24:0] = 0x01F F000: Boot from RSS (0x0FF8 0000) SECBOOTADD0[24:0] = 0x060 0000: Boot from secure SRAM1 on S-Bus (0x3000 0000)
0x50022050 B  REGISTER FLASH_SECWM1R1: FLASH secure watermark1 register 1
0x50022050 C   FIELD 00w07 SECWM1_PSTRT (rw): Start page of first secure area This field contains the first page of the secure area in bank 1.
0x50022050 C   FIELD 16w07 SECWM1_PEND (rw): End page of first secure area This field contains the last page of the secure area in bank 1.
0x50022054 B  REGISTER FLASH_SECWM1R2: FLASH secure watermark1 register 2
0x50022054 C   FIELD 16w07 HDP1_PEND (rw): End page of first hide protection area This field contains the last page of the HDP area in bank 1.
0x50022054 C   FIELD 31w01 HDP1EN (rw): Hide protection first area enable
0x50022058 B  REGISTER FLASH_WRP1AR: FLASH WRP1 area A address register
0x50022058 C   FIELD 00w07 WRP1A_PSTRT (rw): bank 1 WPR first area A start page This field contains the first page of the first WPR area for bank 1.
0x50022058 C   FIELD 16w07 WRP1A_PEND (rw): Bank 1 WPR first area A end page This field contains the last page of the first WPR area in bank 1.
0x50022058 C   FIELD 31w01 UNLOCK (rw): Bank 1 WPR first area A unlock
0x5002205C B  REGISTER FLASH_WRP1BR: FLASH WRP1 area B address register
0x5002205C C   FIELD 00w07 WRP1B_PSTRT (rw): Bank 1 WRP second area B start page This field contains the first page of the second WRP area for bank 1.
0x5002205C C   FIELD 16w07 WRP1B_PEND (rw): Bank 1 WRP second area B end page This field contains the last page of the second WRP area in bank 1.
0x5002205C C   FIELD 31w01 UNLOCK (rw): Bank 1 WPR second area B unlock
0x50022060 B  REGISTER FLASH_SECWM2R1: FLASH secure watermark2 register 1
0x50022060 C   FIELD 00w07 SECWM2_PSTRT (rw): Start page of second secure area This field contains the first page of the secure area in bank 2.
0x50022060 C   FIELD 16w07 SECWM2_PEND (rw): End page of second secure area This field contains the last page of the secure area in bank 2.
0x50022064 B  REGISTER FLASH_SECWM2R2: FLASH secure watermark2 register 2
0x50022064 C   FIELD 16w07 HDP2_PEND (rw): End page of hide protection second area HDP2_PEND contains the last page of the HDP area in bank 2.
0x50022064 C   FIELD 31w01 HDP2EN (rw): Hide protection second area enable
0x50022068 B  REGISTER FLASH_WRP2AR: FLASH WPR2 area A address register
0x50022068 C   FIELD 00w07 WRP2A_PSTRT (rw): Bank 2 WPR first area A start page This field contains the first page of the first WRP area for bank 2.
0x50022068 C   FIELD 16w07 WRP2A_PEND (rw): Bank 2 WPR first area A end page This field contains the last page of the first WRP area in bank 2.
0x50022068 C   FIELD 31w01 UNLOCK (rw): Bank 2 WPR first area A unlock
0x5002206C B  REGISTER FLASH_WRP2BR: FLASH WPR2 area B address register
0x5002206C C   FIELD 00w07 WRP2B_PSTRT (rw): Bank 2 WPR second area B start page This field contains the first page of the second WRP area for bank 2.
0x5002206C C   FIELD 16w07 WRP2B_PEND (rw): Bank 2 WPR second area B end page This field contains the last page of the second WRP area in bank 2.
0x5002206C C   FIELD 31w01 UNLOCK (rw): Bank 2 WPR second area B unlock
0x50022070 B  REGISTER FLASH_OEM1KEYR1: FLASH OEM1 key register 1
0x50022070 C   FIELD 00w32 OEM1KEY (wo): OEM1 least significant bytes key
0x50022074 B  REGISTER FLASH_OEM1KEYR2: FLASH OEM1 key register 2
0x50022074 C   FIELD 00w32 OEM1KEY (wo): OEM1 most significant bytes key
0x50022078 B  REGISTER FLASH_OEM2KEYR1: FLASH OEM2 key register 1
0x50022078 C   FIELD 00w32 OEM2KEY (wo): OEM2 least significant bytes key
0x5002207C B  REGISTER FLASH_OEM2KEYR2: FLASH OEM2 key register 2
0x5002207C C   FIELD 00w32 OEM2KEY (wo): OEM2 most significant bytes key
0x50022080 B  REGISTER FLASH_SEC1BBR1: FLASH secure block based bank 1 register 1
0x50022080 C   FIELD 00w01 SEC1BB0 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 01w01 SEC1BB1 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 02w01 SEC1BB2 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 03w01 SEC1BB3 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 04w01 SEC1BB4 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 05w01 SEC1BB5 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 06w01 SEC1BB6 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 07w01 SEC1BB7 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 08w01 SEC1BB8 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 09w01 SEC1BB9 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 10w01 SEC1BB10 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 11w01 SEC1BB11 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 12w01 SEC1BB12 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 13w01 SEC1BB13 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 14w01 SEC1BB14 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 15w01 SEC1BB15 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 16w01 SEC1BB16 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 17w01 SEC1BB17 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 18w01 SEC1BB18 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 19w01 SEC1BB19 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 20w01 SEC1BB20 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 21w01 SEC1BB21 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 22w01 SEC1BB22 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 23w01 SEC1BB23 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 24w01 SEC1BB24 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 25w01 SEC1BB25 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 26w01 SEC1BB26 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 27w01 SEC1BB27 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 28w01 SEC1BB28 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 29w01 SEC1BB29 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 30w01 SEC1BB30 (rw): page secure/non-secure attribution
0x50022080 C   FIELD 31w01 SEC1BB31 (rw): page secure/non-secure attribution
0x50022084 B  REGISTER FLASH_SEC1BBR2: FLASH secure block based bank 1 register 2
0x50022084 C   FIELD 00w01 SEC1BB0 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 01w01 SEC1BB1 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 02w01 SEC1BB2 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 03w01 SEC1BB3 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 04w01 SEC1BB4 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 05w01 SEC1BB5 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 06w01 SEC1BB6 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 07w01 SEC1BB7 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 08w01 SEC1BB8 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 09w01 SEC1BB9 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 10w01 SEC1BB10 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 11w01 SEC1BB11 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 12w01 SEC1BB12 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 13w01 SEC1BB13 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 14w01 SEC1BB14 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 15w01 SEC1BB15 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 16w01 SEC1BB16 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 17w01 SEC1BB17 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 18w01 SEC1BB18 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 19w01 SEC1BB19 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 20w01 SEC1BB20 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 21w01 SEC1BB21 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 22w01 SEC1BB22 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 23w01 SEC1BB23 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 24w01 SEC1BB24 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 25w01 SEC1BB25 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 26w01 SEC1BB26 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 27w01 SEC1BB27 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 28w01 SEC1BB28 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 29w01 SEC1BB29 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 30w01 SEC1BB30 (rw): page secure/non-secure attribution
0x50022084 C   FIELD 31w01 SEC1BB31 (rw): page secure/non-secure attribution
0x50022088 B  REGISTER FLASH_SEC1BBR3: FLASH secure block based bank 1 register 3
0x50022088 C   FIELD 00w01 SEC1BB0 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 01w01 SEC1BB1 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 02w01 SEC1BB2 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 03w01 SEC1BB3 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 04w01 SEC1BB4 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 05w01 SEC1BB5 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 06w01 SEC1BB6 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 07w01 SEC1BB7 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 08w01 SEC1BB8 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 09w01 SEC1BB9 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 10w01 SEC1BB10 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 11w01 SEC1BB11 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 12w01 SEC1BB12 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 13w01 SEC1BB13 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 14w01 SEC1BB14 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 15w01 SEC1BB15 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 16w01 SEC1BB16 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 17w01 SEC1BB17 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 18w01 SEC1BB18 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 19w01 SEC1BB19 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 20w01 SEC1BB20 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 21w01 SEC1BB21 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 22w01 SEC1BB22 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 23w01 SEC1BB23 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 24w01 SEC1BB24 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 25w01 SEC1BB25 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 26w01 SEC1BB26 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 27w01 SEC1BB27 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 28w01 SEC1BB28 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 29w01 SEC1BB29 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 30w01 SEC1BB30 (rw): page secure/non-secure attribution
0x50022088 C   FIELD 31w01 SEC1BB31 (rw): page secure/non-secure attribution
0x5002208C B  REGISTER FLASH_SEC1BBR4: FLASH secure block based bank 1 register 4
0x5002208C C   FIELD 00w01 SEC1BB0 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 01w01 SEC1BB1 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 02w01 SEC1BB2 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 03w01 SEC1BB3 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 04w01 SEC1BB4 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 05w01 SEC1BB5 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 06w01 SEC1BB6 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 07w01 SEC1BB7 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 08w01 SEC1BB8 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 09w01 SEC1BB9 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 10w01 SEC1BB10 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 11w01 SEC1BB11 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 12w01 SEC1BB12 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 13w01 SEC1BB13 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 14w01 SEC1BB14 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 15w01 SEC1BB15 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 16w01 SEC1BB16 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 17w01 SEC1BB17 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 18w01 SEC1BB18 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 19w01 SEC1BB19 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 20w01 SEC1BB20 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 21w01 SEC1BB21 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 22w01 SEC1BB22 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 23w01 SEC1BB23 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 24w01 SEC1BB24 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 25w01 SEC1BB25 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 26w01 SEC1BB26 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 27w01 SEC1BB27 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 28w01 SEC1BB28 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 29w01 SEC1BB29 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 30w01 SEC1BB30 (rw): page secure/non-secure attribution
0x5002208C C   FIELD 31w01 SEC1BB31 (rw): page secure/non-secure attribution
0x500220A0 B  REGISTER FLASH_SEC2BBR1: FLASH secure block based bank 2 register 1
0x500220A0 C   FIELD 00w01 SEC2BB0 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 01w01 SEC2BB1 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 02w01 SEC2BB2 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 03w01 SEC2BB3 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 04w01 SEC2BB4 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 05w01 SEC2BB5 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 06w01 SEC2BB6 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 07w01 SEC2BB7 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 08w01 SEC2BB8 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 09w01 SEC2BB9 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 10w01 SEC2BB10 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 11w01 SEC2BB11 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 12w01 SEC2BB12 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 13w01 SEC2BB13 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 14w01 SEC2BB14 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 15w01 SEC2BB15 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 16w01 SEC2BB16 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 17w01 SEC2BB17 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 18w01 SEC2BB18 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 19w01 SEC2BB19 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 20w01 SEC2BB20 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 21w01 SEC2BB21 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 22w01 SEC2BB22 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 23w01 SEC2BB23 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 24w01 SEC2BB24 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 25w01 SEC2BB25 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 26w01 SEC2BB26 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 27w01 SEC2BB27 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 28w01 SEC2BB28 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 29w01 SEC2BB29 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 30w01 SEC2BB30 (rw): page secure/non-secure attribution
0x500220A0 C   FIELD 31w01 SEC2BB31 (rw): page secure/non-secure attribution
0x500220A4 B  REGISTER FLASH_SEC2BBR2: FLASH secure block based bank 2 register 2
0x500220A4 C   FIELD 00w01 SEC2BB0 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 01w01 SEC2BB1 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 02w01 SEC2BB2 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 03w01 SEC2BB3 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 04w01 SEC2BB4 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 05w01 SEC2BB5 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 06w01 SEC2BB6 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 07w01 SEC2BB7 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 08w01 SEC2BB8 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 09w01 SEC2BB9 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 10w01 SEC2BB10 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 11w01 SEC2BB11 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 12w01 SEC2BB12 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 13w01 SEC2BB13 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 14w01 SEC2BB14 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 15w01 SEC2BB15 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 16w01 SEC2BB16 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 17w01 SEC2BB17 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 18w01 SEC2BB18 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 19w01 SEC2BB19 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 20w01 SEC2BB20 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 21w01 SEC2BB21 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 22w01 SEC2BB22 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 23w01 SEC2BB23 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 24w01 SEC2BB24 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 25w01 SEC2BB25 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 26w01 SEC2BB26 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 27w01 SEC2BB27 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 28w01 SEC2BB28 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 29w01 SEC2BB29 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 30w01 SEC2BB30 (rw): page secure/non-secure attribution
0x500220A4 C   FIELD 31w01 SEC2BB31 (rw): page secure/non-secure attribution
0x500220A8 B  REGISTER FLASH_SEC2BBR3: FLASH secure block based bank 2 register 3
0x500220A8 C   FIELD 00w01 SEC2BB0 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 01w01 SEC2BB1 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 02w01 SEC2BB2 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 03w01 SEC2BB3 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 04w01 SEC2BB4 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 05w01 SEC2BB5 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 06w01 SEC2BB6 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 07w01 SEC2BB7 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 08w01 SEC2BB8 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 09w01 SEC2BB9 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 10w01 SEC2BB10 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 11w01 SEC2BB11 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 12w01 SEC2BB12 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 13w01 SEC2BB13 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 14w01 SEC2BB14 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 15w01 SEC2BB15 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 16w01 SEC2BB16 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 17w01 SEC2BB17 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 18w01 SEC2BB18 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 19w01 SEC2BB19 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 20w01 SEC2BB20 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 21w01 SEC2BB21 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 22w01 SEC2BB22 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 23w01 SEC2BB23 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 24w01 SEC2BB24 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 25w01 SEC2BB25 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 26w01 SEC2BB26 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 27w01 SEC2BB27 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 28w01 SEC2BB28 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 29w01 SEC2BB29 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 30w01 SEC2BB30 (rw): page secure/non-secure attribution
0x500220A8 C   FIELD 31w01 SEC2BB31 (rw): page secure/non-secure attribution
0x500220AC B  REGISTER FLASH_SEC2BBR4: FLASH secure block based bank 2 register 4
0x500220AC C   FIELD 00w01 SEC2BB0 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 01w01 SEC2BB1 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 02w01 SEC2BB2 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 03w01 SEC2BB3 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 04w01 SEC2BB4 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 05w01 SEC2BB5 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 06w01 SEC2BB6 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 07w01 SEC2BB7 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 08w01 SEC2BB8 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 09w01 SEC2BB9 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 10w01 SEC2BB10 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 11w01 SEC2BB11 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 12w01 SEC2BB12 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 13w01 SEC2BB13 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 14w01 SEC2BB14 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 15w01 SEC2BB15 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 16w01 SEC2BB16 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 17w01 SEC2BB17 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 18w01 SEC2BB18 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 19w01 SEC2BB19 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 20w01 SEC2BB20 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 21w01 SEC2BB21 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 22w01 SEC2BB22 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 23w01 SEC2BB23 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 24w01 SEC2BB24 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 25w01 SEC2BB25 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 26w01 SEC2BB26 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 27w01 SEC2BB27 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 28w01 SEC2BB28 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 29w01 SEC2BB29 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 30w01 SEC2BB30 (rw): page secure/non-secure attribution
0x500220AC C   FIELD 31w01 SEC2BB31 (rw): page secure/non-secure attribution
0x500220C0 B  REGISTER FLASH_SECHDPCR: FLASH secure HDP control register
0x500220C0 C   FIELD 00w01 HDP1_ACCDIS (rw): HDP1 area access disable When set, this bit is only cleared by a system reset.
0x500220C0 C   FIELD 01w01 HDP2_ACCDIS (rw): HDP2 area access disable When set, this bit is only cleared by a system reset.
0x500220C4 B  REGISTER FLASH_PRIVCFGR: FLASH privilege configuration register
0x500220C4 C   FIELD 00w01 SPRIV (rw): Privileged protection for secure registers This bit can be accessed only when TrustZone is enabled (TZEN = 1). This bit can be read by both privileged or unprivileged, secure and non-secure access. The SPRIV bit can be written only by a secure privileged access. A non-secure write access on SPRIV bit is ignored. A secure unprivileged write access on SPRIV bit is ignored.
0x500220C4 C   FIELD 01w01 NSPRIV (rw): Privileged protection for non-secure registers This bit can be read by both privileged or unprivileged, secure and non-secure access. The NSPRIV bit can be written by a secure or non-secure privileged access. A secure or non-secure unprivileged write access on NSPRIV bit is ignored.
0x500220D0 B  REGISTER FLASH_PRIV1BBR1: FLASH privilege block based bank 1 register 1
0x500220D0 C   FIELD 00w01 PRIV1BB0 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 01w01 PRIV1BB1 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 02w01 PRIV1BB2 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 03w01 PRIV1BB3 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 04w01 PRIV1BB4 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 05w01 PRIV1BB5 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 06w01 PRIV1BB6 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 07w01 PRIV1BB7 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 08w01 PRIV1BB8 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 09w01 PRIV1BB9 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 10w01 PRIV1BB10 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 11w01 PRIV1BB11 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 12w01 PRIV1BB12 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 13w01 PRIV1BB13 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 14w01 PRIV1BB14 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 15w01 PRIV1BB15 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 16w01 PRIV1BB16 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 17w01 PRIV1BB17 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 18w01 PRIV1BB18 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 19w01 PRIV1BB19 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 20w01 PRIV1BB20 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 21w01 PRIV1BB21 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 22w01 PRIV1BB22 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 23w01 PRIV1BB23 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 24w01 PRIV1BB24 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 25w01 PRIV1BB25 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 26w01 PRIV1BB26 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 27w01 PRIV1BB27 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 28w01 PRIV1BB28 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 29w01 PRIV1BB29 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 30w01 PRIV1BB30 (rw): page privileged/unprivileged attribution
0x500220D0 C   FIELD 31w01 PRIV1BB31 (rw): page privileged/unprivileged attribution
0x500220D4 B  REGISTER FLASH_PRIV1BBR2: FLASH privilege block based bank 1 register 2
0x500220D4 C   FIELD 00w01 PRIV1BB0 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 01w01 PRIV1BB1 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 02w01 PRIV1BB2 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 03w01 PRIV1BB3 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 04w01 PRIV1BB4 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 05w01 PRIV1BB5 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 06w01 PRIV1BB6 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 07w01 PRIV1BB7 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 08w01 PRIV1BB8 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 09w01 PRIV1BB9 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 10w01 PRIV1BB10 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 11w01 PRIV1BB11 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 12w01 PRIV1BB12 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 13w01 PRIV1BB13 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 14w01 PRIV1BB14 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 15w01 PRIV1BB15 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 16w01 PRIV1BB16 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 17w01 PRIV1BB17 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 18w01 PRIV1BB18 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 19w01 PRIV1BB19 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 20w01 PRIV1BB20 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 21w01 PRIV1BB21 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 22w01 PRIV1BB22 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 23w01 PRIV1BB23 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 24w01 PRIV1BB24 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 25w01 PRIV1BB25 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 26w01 PRIV1BB26 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 27w01 PRIV1BB27 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 28w01 PRIV1BB28 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 29w01 PRIV1BB29 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 30w01 PRIV1BB30 (rw): page privileged/unprivileged attribution
0x500220D4 C   FIELD 31w01 PRIV1BB31 (rw): page privileged/unprivileged attribution
0x500220D8 B  REGISTER FLASH_PRIV1BBR3: FLASH privilege block based bank 1 register 3
0x500220D8 C   FIELD 00w01 PRIV1BB0 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 01w01 PRIV1BB1 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 02w01 PRIV1BB2 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 03w01 PRIV1BB3 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 04w01 PRIV1BB4 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 05w01 PRIV1BB5 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 06w01 PRIV1BB6 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 07w01 PRIV1BB7 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 08w01 PRIV1BB8 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 09w01 PRIV1BB9 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 10w01 PRIV1BB10 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 11w01 PRIV1BB11 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 12w01 PRIV1BB12 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 13w01 PRIV1BB13 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 14w01 PRIV1BB14 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 15w01 PRIV1BB15 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 16w01 PRIV1BB16 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 17w01 PRIV1BB17 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 18w01 PRIV1BB18 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 19w01 PRIV1BB19 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 20w01 PRIV1BB20 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 21w01 PRIV1BB21 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 22w01 PRIV1BB22 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 23w01 PRIV1BB23 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 24w01 PRIV1BB24 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 25w01 PRIV1BB25 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 26w01 PRIV1BB26 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 27w01 PRIV1BB27 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 28w01 PRIV1BB28 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 29w01 PRIV1BB29 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 30w01 PRIV1BB30 (rw): page privileged/unprivileged attribution
0x500220D8 C   FIELD 31w01 PRIV1BB31 (rw): page privileged/unprivileged attribution
0x500220DC B  REGISTER FLASH_PRIV1BBR4: FLASH privilege block based bank 1 register 4
0x500220DC C   FIELD 00w01 PRIV1BB0 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 01w01 PRIV1BB1 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 02w01 PRIV1BB2 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 03w01 PRIV1BB3 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 04w01 PRIV1BB4 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 05w01 PRIV1BB5 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 06w01 PRIV1BB6 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 07w01 PRIV1BB7 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 08w01 PRIV1BB8 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 09w01 PRIV1BB9 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 10w01 PRIV1BB10 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 11w01 PRIV1BB11 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 12w01 PRIV1BB12 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 13w01 PRIV1BB13 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 14w01 PRIV1BB14 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 15w01 PRIV1BB15 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 16w01 PRIV1BB16 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 17w01 PRIV1BB17 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 18w01 PRIV1BB18 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 19w01 PRIV1BB19 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 20w01 PRIV1BB20 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 21w01 PRIV1BB21 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 22w01 PRIV1BB22 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 23w01 PRIV1BB23 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 24w01 PRIV1BB24 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 25w01 PRIV1BB25 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 26w01 PRIV1BB26 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 27w01 PRIV1BB27 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 28w01 PRIV1BB28 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 29w01 PRIV1BB29 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 30w01 PRIV1BB30 (rw): page privileged/unprivileged attribution
0x500220DC C   FIELD 31w01 PRIV1BB31 (rw): page privileged/unprivileged attribution
0x500220F0 B  REGISTER FLASH_PRIV2BBR1: FLASH privilege block based bank 2 register 1
0x500220F0 C   FIELD 00w01 PRIV2BB0 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 01w01 PRIV2BB1 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 02w01 PRIV2BB2 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 03w01 PRIV2BB3 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 04w01 PRIV2BB4 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 05w01 PRIV2BB5 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 06w01 PRIV2BB6 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 07w01 PRIV2BB7 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 08w01 PRIV2BB8 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 09w01 PRIV2BB9 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 10w01 PRIV2BB10 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 11w01 PRIV2BB11 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 12w01 PRIV2BB12 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 13w01 PRIV2BB13 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 14w01 PRIV2BB14 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 15w01 PRIV2BB15 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 16w01 PRIV2BB16 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 17w01 PRIV2BB17 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 18w01 PRIV2BB18 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 19w01 PRIV2BB19 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 20w01 PRIV2BB20 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 21w01 PRIV2BB21 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 22w01 PRIV2BB22 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 23w01 PRIV2BB23 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 24w01 PRIV2BB24 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 25w01 PRIV2BB25 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 26w01 PRIV2BB26 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 27w01 PRIV2BB27 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 28w01 PRIV2BB28 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 29w01 PRIV2BB29 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 30w01 PRIV2BB30 (rw): page privileged/unprivileged attribution
0x500220F0 C   FIELD 31w01 PRIV2BB31 (rw): page privileged/unprivileged attribution
0x500220F4 B  REGISTER FLASH_PRIV2BBR2: FLASH privilege block based bank 2 register 2
0x500220F4 C   FIELD 00w01 PRIV2BB0 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 01w01 PRIV2BB1 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 02w01 PRIV2BB2 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 03w01 PRIV2BB3 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 04w01 PRIV2BB4 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 05w01 PRIV2BB5 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 06w01 PRIV2BB6 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 07w01 PRIV2BB7 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 08w01 PRIV2BB8 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 09w01 PRIV2BB9 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 10w01 PRIV2BB10 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 11w01 PRIV2BB11 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 12w01 PRIV2BB12 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 13w01 PRIV2BB13 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 14w01 PRIV2BB14 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 15w01 PRIV2BB15 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 16w01 PRIV2BB16 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 17w01 PRIV2BB17 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 18w01 PRIV2BB18 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 19w01 PRIV2BB19 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 20w01 PRIV2BB20 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 21w01 PRIV2BB21 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 22w01 PRIV2BB22 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 23w01 PRIV2BB23 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 24w01 PRIV2BB24 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 25w01 PRIV2BB25 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 26w01 PRIV2BB26 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 27w01 PRIV2BB27 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 28w01 PRIV2BB28 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 29w01 PRIV2BB29 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 30w01 PRIV2BB30 (rw): page privileged/unprivileged attribution
0x500220F4 C   FIELD 31w01 PRIV2BB31 (rw): page privileged/unprivileged attribution
0x500220F8 B  REGISTER FLASH_PRIV2BBR3: FLASH privilege block based bank 2 register 3
0x500220F8 C   FIELD 00w01 PRIV2BB0 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 01w01 PRIV2BB1 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 02w01 PRIV2BB2 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 03w01 PRIV2BB3 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 04w01 PRIV2BB4 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 05w01 PRIV2BB5 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 06w01 PRIV2BB6 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 07w01 PRIV2BB7 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 08w01 PRIV2BB8 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 09w01 PRIV2BB9 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 10w01 PRIV2BB10 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 11w01 PRIV2BB11 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 12w01 PRIV2BB12 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 13w01 PRIV2BB13 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 14w01 PRIV2BB14 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 15w01 PRIV2BB15 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 16w01 PRIV2BB16 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 17w01 PRIV2BB17 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 18w01 PRIV2BB18 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 19w01 PRIV2BB19 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 20w01 PRIV2BB20 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 21w01 PRIV2BB21 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 22w01 PRIV2BB22 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 23w01 PRIV2BB23 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 24w01 PRIV2BB24 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 25w01 PRIV2BB25 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 26w01 PRIV2BB26 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 27w01 PRIV2BB27 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 28w01 PRIV2BB28 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 29w01 PRIV2BB29 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 30w01 PRIV2BB30 (rw): page privileged/unprivileged attribution
0x500220F8 C   FIELD 31w01 PRIV2BB31 (rw): page privileged/unprivileged attribution
0x500220FC B  REGISTER FLASH_PRIV2BBR4: FLASH privilege block based bank 2 register 4
0x500220FC C   FIELD 00w01 PRIV2BB0 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 01w01 PRIV2BB1 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 02w01 PRIV2BB2 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 03w01 PRIV2BB3 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 04w01 PRIV2BB4 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 05w01 PRIV2BB5 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 06w01 PRIV2BB6 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 07w01 PRIV2BB7 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 08w01 PRIV2BB8 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 09w01 PRIV2BB9 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 10w01 PRIV2BB10 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 11w01 PRIV2BB11 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 12w01 PRIV2BB12 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 13w01 PRIV2BB13 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 14w01 PRIV2BB14 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 15w01 PRIV2BB15 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 16w01 PRIV2BB16 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 17w01 PRIV2BB17 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 18w01 PRIV2BB18 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 19w01 PRIV2BB19 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 20w01 PRIV2BB20 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 21w01 PRIV2BB21 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 22w01 PRIV2BB22 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 23w01 PRIV2BB23 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 24w01 PRIV2BB24 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 25w01 PRIV2BB25 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 26w01 PRIV2BB26 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 27w01 PRIV2BB27 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 28w01 PRIV2BB28 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 29w01 PRIV2BB29 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 30w01 PRIV2BB30 (rw): page privileged/unprivileged attribution
0x500220FC C   FIELD 31w01 PRIV2BB31 (rw): page privileged/unprivileged attribution
0x50023000 A PERIPHERAL SEC_CRC
0x50023000 B  REGISTER DR (rw): Data register
0x50023000 C   FIELD 00w32 DR: Data register bits
0x50023004 B  REGISTER IDR (rw): Independent data register
0x50023004 C   FIELD 00w32 IDR: General-purpose 8-bit data register bits
0x50023008 B  REGISTER CR: Control register
0x50023008 C   FIELD 00w01 RESET (rw): RESET bit
0x50023008 C   FIELD 03w02 POLYSIZE (rw): Polynomial size
0x50023008 C   FIELD 05w02 REV_IN (rw): Reverse input data
0x50023008 C   FIELD 07w01 REV_OUT (rw): Reverse output data
0x50023010 B  REGISTER INIT (rw): Initial CRC value
0x50023010 C   FIELD 00w32 CRC_INIT: Programmable initial CRC value
0x50023014 B  REGISTER POL (rw): polynomial
0x50023014 C   FIELD 00w32 POL: Programmable polynomial
0x50024000 A PERIPHERAL SEC_TSC
0x50024000 B  REGISTER CR (rw): control register
0x50024000 C   FIELD 00w01 TSCE: Touch sensing controller enable
0x50024000 C   FIELD 01w01 START: Start a new acquisition
0x50024000 C   FIELD 02w01 AM: Acquisition mode
0x50024000 C   FIELD 03w01 SYNCPOL: Synchronization pin polarity
0x50024000 C   FIELD 04w01 IODEF: I/O Default mode
0x50024000 C   FIELD 05w03 MCV: Max count value
0x50024000 C   FIELD 12w03 PGPSC: pulse generator prescaler
0x50024000 C   FIELD 15w01 SSPSC: Spread spectrum prescaler
0x50024000 C   FIELD 16w01 SSE: Spread spectrum enable
0x50024000 C   FIELD 17w07 SSD: Spread spectrum deviation
0x50024000 C   FIELD 24w04 CTPL: Charge transfer pulse low
0x50024000 C   FIELD 28w04 CTPH: Charge transfer pulse high
0x50024004 B  REGISTER IER (rw): interrupt enable register
0x50024004 C   FIELD 00w01 EOAIE: End of acquisition interrupt enable
0x50024004 C   FIELD 01w01 MCEIE: Max count error interrupt enable
0x50024008 B  REGISTER ICR (rw): interrupt clear register
0x50024008 C   FIELD 00w01 EOAIC: End of acquisition interrupt clear
0x50024008 C   FIELD 01w01 MCEIC: Max count error interrupt clear
0x5002400C B  REGISTER ISR (ro): interrupt status register
0x5002400C C   FIELD 00w01 EOAF: End of acquisition flag
0x5002400C C   FIELD 01w01 MCEF: Max count error flag
0x50024010 B  REGISTER IOHCR (rw): I/O hysteresis control register
0x50024010 C   FIELD 00w01 G1_IO1: G1_IO1
0x50024010 C   FIELD 01w01 G1_IO2: G1_IO2
0x50024010 C   FIELD 02w01 G1_IO3: G1_IO3
0x50024010 C   FIELD 03w01 G1_IO4: G1_IO4
0x50024010 C   FIELD 04w01 G2_IO1: G2_IO1
0x50024010 C   FIELD 05w01 G2_IO2: G2_IO2
0x50024010 C   FIELD 06w01 G2_IO3: G2_IO3
0x50024010 C   FIELD 07w01 G2_IO4: G2_IO4
0x50024010 C   FIELD 08w01 G3_IO1: G3_IO1
0x50024010 C   FIELD 09w01 G3_IO2: G3_IO2
0x50024010 C   FIELD 10w01 G3_IO3: G3_IO3
0x50024010 C   FIELD 11w01 G3_IO4: G3_IO4
0x50024010 C   FIELD 12w01 G4_IO1: G4_IO1
0x50024010 C   FIELD 13w01 G4_IO2: G4_IO2
0x50024010 C   FIELD 14w01 G4_IO3: G4_IO3
0x50024010 C   FIELD 15w01 G4_IO4: G4_IO4
0x50024010 C   FIELD 16w01 G5_IO1: G5_IO1
0x50024010 C   FIELD 17w01 G5_IO2: G5_IO2
0x50024010 C   FIELD 18w01 G5_IO3: G5_IO3
0x50024010 C   FIELD 19w01 G5_IO4: G5_IO4
0x50024010 C   FIELD 20w01 G6_IO1: G6_IO1
0x50024010 C   FIELD 21w01 G6_IO2: G6_IO2
0x50024010 C   FIELD 22w01 G6_IO3: G6_IO3
0x50024010 C   FIELD 23w01 G6_IO4: G6_IO4
0x50024010 C   FIELD 24w01 G7_IO1: G7_IO1
0x50024010 C   FIELD 25w01 G7_IO2: G7_IO2
0x50024010 C   FIELD 26w01 G7_IO3: G7_IO3
0x50024010 C   FIELD 27w01 G7_IO4: G7_IO4
0x50024010 C   FIELD 28w01 G8_IO1: G8_IO1
0x50024010 C   FIELD 29w01 G8_IO2: G8_IO2
0x50024010 C   FIELD 30w01 G8_IO3: G8_IO3
0x50024010 C   FIELD 31w01 G8_IO4: G8_IO4
0x50024018 B  REGISTER IOASCR (rw): I/O analog switch control register
0x50024018 C   FIELD 00w01 G1_IO1: G1_IO1
0x50024018 C   FIELD 01w01 G1_IO2: G1_IO2
0x50024018 C   FIELD 02w01 G1_IO3: G1_IO3
0x50024018 C   FIELD 03w01 G1_IO4: G1_IO4
0x50024018 C   FIELD 04w01 G2_IO1: G2_IO1
0x50024018 C   FIELD 05w01 G2_IO2: G2_IO2
0x50024018 C   FIELD 06w01 G2_IO3: G2_IO3
0x50024018 C   FIELD 07w01 G2_IO4: G2_IO4
0x50024018 C   FIELD 08w01 G3_IO1: G3_IO1
0x50024018 C   FIELD 09w01 G3_IO2: G3_IO2
0x50024018 C   FIELD 10w01 G3_IO3: G3_IO3
0x50024018 C   FIELD 11w01 G3_IO4: G3_IO4
0x50024018 C   FIELD 12w01 G4_IO1: G4_IO1
0x50024018 C   FIELD 13w01 G4_IO2: G4_IO2
0x50024018 C   FIELD 14w01 G4_IO3: G4_IO3
0x50024018 C   FIELD 15w01 G4_IO4: G4_IO4
0x50024018 C   FIELD 16w01 G5_IO1: G5_IO1
0x50024018 C   FIELD 17w01 G5_IO2: G5_IO2
0x50024018 C   FIELD 18w01 G5_IO3: G5_IO3
0x50024018 C   FIELD 19w01 G5_IO4: G5_IO4
0x50024018 C   FIELD 20w01 G6_IO1: G6_IO1
0x50024018 C   FIELD 21w01 G6_IO2: G6_IO2
0x50024018 C   FIELD 22w01 G6_IO3: G6_IO3
0x50024018 C   FIELD 23w01 G6_IO4: G6_IO4
0x50024018 C   FIELD 24w01 G7_IO1: G7_IO1
0x50024018 C   FIELD 25w01 G7_IO2: G7_IO2
0x50024018 C   FIELD 26w01 G7_IO3: G7_IO3
0x50024018 C   FIELD 27w01 G7_IO4: G7_IO4
0x50024018 C   FIELD 28w01 G8_IO1: G8_IO1
0x50024018 C   FIELD 29w01 G8_IO2: G8_IO2
0x50024018 C   FIELD 30w01 G8_IO3: G8_IO3
0x50024018 C   FIELD 31w01 G8_IO4: G8_IO4
0x50024020 B  REGISTER IOSCR (rw): I/O sampling control register
0x50024020 C   FIELD 00w01 G1_IO1: G1_IO1
0x50024020 C   FIELD 01w01 G1_IO2: G1_IO2
0x50024020 C   FIELD 02w01 G1_IO3: G1_IO3
0x50024020 C   FIELD 03w01 G1_IO4: G1_IO4
0x50024020 C   FIELD 04w01 G2_IO1: G2_IO1
0x50024020 C   FIELD 05w01 G2_IO2: G2_IO2
0x50024020 C   FIELD 06w01 G2_IO3: G2_IO3
0x50024020 C   FIELD 07w01 G2_IO4: G2_IO4
0x50024020 C   FIELD 08w01 G3_IO1: G3_IO1
0x50024020 C   FIELD 09w01 G3_IO2: G3_IO2
0x50024020 C   FIELD 10w01 G3_IO3: G3_IO3
0x50024020 C   FIELD 11w01 G3_IO4: G3_IO4
0x50024020 C   FIELD 12w01 G4_IO1: G4_IO1
0x50024020 C   FIELD 13w01 G4_IO2: G4_IO2
0x50024020 C   FIELD 14w01 G4_IO3: G4_IO3
0x50024020 C   FIELD 15w01 G4_IO4: G4_IO4
0x50024020 C   FIELD 16w01 G5_IO1: G5_IO1
0x50024020 C   FIELD 17w01 G5_IO2: G5_IO2
0x50024020 C   FIELD 18w01 G5_IO3: G5_IO3
0x50024020 C   FIELD 19w01 G5_IO4: G5_IO4
0x50024020 C   FIELD 20w01 G6_IO1: G6_IO1
0x50024020 C   FIELD 21w01 G6_IO2: G6_IO2
0x50024020 C   FIELD 22w01 G6_IO3: G6_IO3
0x50024020 C   FIELD 23w01 G6_IO4: G6_IO4
0x50024020 C   FIELD 24w01 G7_IO1: G7_IO1
0x50024020 C   FIELD 25w01 G7_IO2: G7_IO2
0x50024020 C   FIELD 26w01 G7_IO3: G7_IO3
0x50024020 C   FIELD 27w01 G7_IO4: G7_IO4
0x50024020 C   FIELD 28w01 G8_IO1: G8_IO1
0x50024020 C   FIELD 29w01 G8_IO2: G8_IO2
0x50024020 C   FIELD 30w01 G8_IO3: G8_IO3
0x50024020 C   FIELD 31w01 G8_IO4: G8_IO4
0x50024028 B  REGISTER IOCCR (rw): I/O channel control register
0x50024028 C   FIELD 00w01 G1_IO1: G1_IO1
0x50024028 C   FIELD 01w01 G1_IO2: G1_IO2
0x50024028 C   FIELD 02w01 G1_IO3: G1_IO3
0x50024028 C   FIELD 03w01 G1_IO4: G1_IO4
0x50024028 C   FIELD 04w01 G2_IO1: G2_IO1
0x50024028 C   FIELD 05w01 G2_IO2: G2_IO2
0x50024028 C   FIELD 06w01 G2_IO3: G2_IO3
0x50024028 C   FIELD 07w01 G2_IO4: G2_IO4
0x50024028 C   FIELD 08w01 G3_IO1: G3_IO1
0x50024028 C   FIELD 09w01 G3_IO2: G3_IO2
0x50024028 C   FIELD 10w01 G3_IO3: G3_IO3
0x50024028 C   FIELD 11w01 G3_IO4: G3_IO4
0x50024028 C   FIELD 12w01 G4_IO1: G4_IO1
0x50024028 C   FIELD 13w01 G4_IO2: G4_IO2
0x50024028 C   FIELD 14w01 G4_IO3: G4_IO3
0x50024028 C   FIELD 15w01 G4_IO4: G4_IO4
0x50024028 C   FIELD 16w01 G5_IO1: G5_IO1
0x50024028 C   FIELD 17w01 G5_IO2: G5_IO2
0x50024028 C   FIELD 18w01 G5_IO3: G5_IO3
0x50024028 C   FIELD 19w01 G5_IO4: G5_IO4
0x50024028 C   FIELD 20w01 G6_IO1: G6_IO1
0x50024028 C   FIELD 21w01 G6_IO2: G6_IO2
0x50024028 C   FIELD 22w01 G6_IO3: G6_IO3
0x50024028 C   FIELD 23w01 G6_IO4: G6_IO4
0x50024028 C   FIELD 24w01 G7_IO1: G7_IO1
0x50024028 C   FIELD 25w01 G7_IO2: G7_IO2
0x50024028 C   FIELD 26w01 G7_IO3: G7_IO3
0x50024028 C   FIELD 27w01 G7_IO4: G7_IO4
0x50024028 C   FIELD 28w01 G8_IO1: G8_IO1
0x50024028 C   FIELD 29w01 G8_IO2: G8_IO2
0x50024028 C   FIELD 30w01 G8_IO3: G8_IO3
0x50024028 C   FIELD 31w01 G8_IO4: G8_IO4
0x50024030 B  REGISTER IOGCSR: I/O group control status register
0x50024030 C   FIELD 00w01 G1E (rw): Analog I/O group x enable
0x50024030 C   FIELD 01w01 G2E (rw): Analog I/O group x enable
0x50024030 C   FIELD 02w01 G3E (rw): Analog I/O group x enable
0x50024030 C   FIELD 03w01 G4E (rw): Analog I/O group x enable
0x50024030 C   FIELD 04w01 G5E (rw): Analog I/O group x enable
0x50024030 C   FIELD 05w01 G6E (rw): Analog I/O group x enable
0x50024030 C   FIELD 06w01 G7E (rw): Analog I/O group x enable
0x50024030 C   FIELD 07w01 G8E (rw): Analog I/O group x enable
0x50024030 C   FIELD 16w01 G1S (ro): Analog I/O group x status
0x50024030 C   FIELD 17w01 G2S (ro): Analog I/O group x status
0x50024030 C   FIELD 18w01 G3S (ro): Analog I/O group x status
0x50024030 C   FIELD 19w01 G4S (ro): Analog I/O group x status
0x50024030 C   FIELD 20w01 G5S (ro): Analog I/O group x status
0x50024030 C   FIELD 21w01 G6S (ro): Analog I/O group x status
0x50024030 C   FIELD 22w01 G7S (ro): Analog I/O group x status
0x50024030 C   FIELD 23w01 G8S (ro): Analog I/O group x status
0x50024034 B  REGISTER IOG1CR (ro): I/O group x counter register
0x50024034 C   FIELD 00w14 CNT: Counter value
0x50024038 B  REGISTER IOG2CR (ro): I/O group x counter register
0x50024038 C   FIELD 00w14 CNT: Counter value
0x5002403C B  REGISTER IOG3CR (ro): I/O group x counter register
0x5002403C C   FIELD 00w14 CNT: Counter value
0x50024040 B  REGISTER IOG4CR (ro): I/O group x counter register
0x50024040 C   FIELD 00w14 CNT: Counter value
0x50024044 B  REGISTER IOG5CR (ro): I/O group x counter register
0x50024044 C   FIELD 00w14 CNT: Counter value
0x50024048 B  REGISTER IOG6CR (ro): I/O group x counter register
0x50024048 C   FIELD 00w14 CNT: Counter value
0x5002404C B  REGISTER IOG7CR (ro): I/O group x counter register
0x5002404C C   FIELD 00w14 CNT: Counter value
0x50024050 B  REGISTER IOG8CR (ro): I/O group x counter register
0x50024050 C   FIELD 00w14 CNT: Counter value
0x50025000 A PERIPHERAL SEC_MDF1
0x50025000 B  REGISTER GCR (rw): MDF global control register
0x50025000 C   FIELD 00w01 TRGO: TRGO
0x50025000 C   FIELD 04w04 ILVNB: ILVNB
0x50025004 B  REGISTER CKGCR (rw): MDF clock generator control register
0x50025004 C   FIELD 00w01 CKGDEN: CKGDEN
0x50025004 C   FIELD 01w01 CCK0EN: CCK0EN
0x50025004 C   FIELD 02w01 CCK1EN: CCK1EN
0x50025004 C   FIELD 04w01 CKGMOD: CKGMOD
0x50025004 C   FIELD 05w01 CCK0DIR: CCK0DIR
0x50025004 C   FIELD 06w01 CCK1DIR: CCK1DIR
0x50025004 C   FIELD 08w01 TRGSENS: TRGSENS
0x50025004 C   FIELD 12w04 TRGSRC: TRGSRC
0x50025004 C   FIELD 16w04 CCKDIV: CCKDIV
0x50025004 C   FIELD 24w07 PROCDIV: PROCDIV
0x50025004 C   FIELD 31w01 CKGACTIVE: CKGACTIVE
0x50025080 B  REGISTER MDF_SITF0CR: This register is used to control the serial interfaces (SITFx).
0x50025080 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x50025080 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025080 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025080 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025080 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured.
0x50025084 B  REGISTER MDF_BSMX0CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x50025084 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025084 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x50025088 B  REGISTER MDF_DFLT0CR: This register is used to control the digital filter x.
0x50025088 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x50025088 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025088 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software.
0x50025088 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025088 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025088 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025088 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025088 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025088 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x50025088 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x5002508C B  REGISTER MDF_DFLT0CICR (rw): This register is used to control the main CIC filter.
0x5002508C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002508C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002508C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002508C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x50025090 B  REGISTER MDF_DFLT0RSFR (rw): This register is used to control the reshape and HPF filters.
0x50025090 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025090 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025090 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025090 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025094 B  REGISTER MDF_DFLT0INTR (rw): This register is used to the integrator (INT) settings.
0x50025094 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025094 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025098 B  REGISTER MDF_OLD0CR: This register is used to configure the Out-of Limit Detector function.
0x50025098 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x50025098 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025098 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025098 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025098 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025098 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x5002509C B  REGISTER MDF_OLD0THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x5002509C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500250A0 B  REGISTER MDF_OLD0THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x500250A0 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x500250A4 B  REGISTER MDF_DLY0CR: This register is used for the adjustment stream delays.
0x500250A4 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x500250A4 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x500250A8 B  REGISTER MDF_SCD0CR: This register is used for the adjustment stream delays.
0x500250A8 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x500250A8 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500250A8 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500250A8 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x500250AC B  REGISTER MDF_DFLT0IER (rw): This register is used for allowing or not the events to generate an interrupt.
0x500250AC C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x500250AC C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x500250AC C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x500250AC C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x500250AC C   FIELD 07w01 SSOVRIE (rw): Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x500250AC C   FIELD 08w01 SCDIE (rw): Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x500250AC C   FIELD 09w01 SATIE (rw): Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x500250AC C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x500250AC C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x500250B0 B  REGISTER MDF_DFLT0ISR: MDF DFLT0 interrupt status register 0
0x500250B0 C   FIELD 00w01 FTHF (ro): FTHF
0x500250B0 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x500250B0 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on , writing 0 has no effect. - 1: Reading 1 means that a new data is available on , writing 1 clears this flag.
0x500250B0 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x500250B0 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x500250B0 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing this bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was higher than OLDTHL when the last OLD event occurred. - 1: The signal was lower than OLDTHL when the last OLD event occurred.
0x500250B0 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing this bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH when the last OLD event occurred. - 1: The signal was higher than OLDTHH when the last OLD event occurred.
0x500250B0 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x500250B0 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x500250B0 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x500250B0 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x500250B0 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x500250B4 B  REGISTER MDF_OEC0CR (rw): This register contains the offset compensation value.
0x500250B4 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x500250EC B  REGISTER MDF_SNPS0DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x500250EC C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x500250EC C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x500250EC C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x500250F0 B  REGISTER MDF_DFLT0DR (ro): This register is used to read the data processed by each digital filter.
0x500250F0 C   FIELD 08w24 DR: Data processed by digital filter.
0x50025100 B  REGISTER MDF_SITF1CR: This register is used to control the serial interfaces (SITFx).
0x50025100 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x50025100 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025100 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025100 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025100 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag
0x50025104 B  REGISTER MDF_BSMX1CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x50025104 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025104 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x50025108 B  REGISTER MDF_DFLT1CR: This register is used to control the digital filter x.
0x50025108 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x50025108 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025108 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025108 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025108 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025108 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025108 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025108 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025108 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x50025108 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x5002510C B  REGISTER MDF_DFLT1CICR (rw): This register is used to control the main CIC filter.
0x5002510C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002510C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002510C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002510C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x50025110 B  REGISTER MDF_DFLT1RSFR (rw): This register is used to control the reshape and HPF filters.
0x50025110 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025110 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025110 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025110 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025114 B  REGISTER MDF_DFLT1INTR (rw): This register is used to the integrator (INT) settings.
0x50025114 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025114 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025118 B  REGISTER MDF_OLD1CR: This register is used to configure the Out-of Limit Detector function.
0x50025118 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x50025118 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025118 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025118 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025118 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025118 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x5002511C B  REGISTER MDF_OLD1THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x5002511C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025120 B  REGISTER MDF_OLD1THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x50025120 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x50025124 B  REGISTER MDF_DLY1CR: This register is used for the adjustment stream delays.
0x50025124 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x50025124 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x50025128 B  REGISTER MDF_SCD1CR: This register is used for the adjustment stream delays.
0x50025128 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x50025128 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025128 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025128 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x5002512C B  REGISTER MDF_DFLT1IER (rw): MDF DFLTx interrupt enable register x
0x5002512C C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x5002512C C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x5002512C C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x5002512C C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x5002512C C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x5002512C C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x5002512C C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x5002512C C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x5002512C C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x50025130 B  REGISTER MDF_DFLT1ISR: This register contains the status flags for each digital filter path.
0x50025130 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x50025130 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x50025130 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x50025130 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x50025130 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x50025130 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x50025130 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x50025130 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x50025130 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x50025130 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x50025130 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x50025130 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x50025134 B  REGISTER MDF_OEC1CR (rw): This register contains the offset compensation value.
0x50025134 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x5002516C B  REGISTER MDF_SNPS1DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x5002516C C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x5002516C C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x5002516C C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x50025170 B  REGISTER MDF_DFLT1DR (ro): This register is used to read the data processed by each digital filter.
0x50025170 C   FIELD 08w24 DR: Data processed by digital filter.
0x50025180 B  REGISTER MDF_SITF2CR: This register is used to control the serial interfaces (SITFx).
0x50025180 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x50025180 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025180 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025180 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025180 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag
0x50025184 B  REGISTER MDF_BSMX2CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x50025184 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025184 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to a . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x50025188 B  REGISTER MDF_DFLT2CR: This register is used to control the digital filter 2.
0x50025188 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x50025188 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025188 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025188 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025188 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025188 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025188 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025188 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025188 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x50025188 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x5002518C B  REGISTER MDF_DFLT2CICR (rw): This register is used to control the main CIC filter.
0x5002518C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002518C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002518C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002518C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x50025190 B  REGISTER MDF_DFLT2RSFR (rw): This register is used to control the reshape and HPF filters.
0x50025190 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025190 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025190 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025190 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025194 B  REGISTER MDF_DFLT2INTR (rw): This register is used to the integrator (INT) settings.
0x50025194 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025194 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025198 B  REGISTER MDF_OLD2CR: This register is used to configure the Out-of Limit Detector function.
0x50025198 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x50025198 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025198 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025198 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025198 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025198 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x5002519C B  REGISTER MDF_OLD2THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x5002519C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500251A0 B  REGISTER MDF_OLD2THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x500251A0 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x500251A4 B  REGISTER MDF_DLY2CR: This register is used for the adjustment stream delays.
0x500251A4 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x500251A4 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x500251A8 B  REGISTER MDF_SCD2CR: This register is used for the adjustment stream delays.
0x500251A8 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x500251A8 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500251A8 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500251A8 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x500251AC B  REGISTER MDF_DFLT2IER (rw): MDF DFLTx interrupt enable register x
0x500251AC C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x500251AC C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x500251AC C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x500251AC C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x500251AC C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x500251AC C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x500251AC C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x500251AC C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x500251AC C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x500251B0 B  REGISTER MDF_DFLT2ISR: This register contains the status flags for each digital filter path.
0x500251B0 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x500251B0 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x500251B0 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x500251B0 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x500251B0 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x500251B0 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x500251B0 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x500251B0 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x500251B0 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x500251B0 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x500251B0 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x500251B0 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x500251B4 B  REGISTER MDF_OEC2CR (rw): This register contains the offset compensation value.
0x500251B4 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x500251EC B  REGISTER MDF_SNPS2DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x500251EC C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x500251EC C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x500251EC C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x500251F0 B  REGISTER MDF_DFLT2DR (ro): This register is used to read the data processed by each digital filter.
0x500251F0 C   FIELD 08w24 DR: Data processed by digital filter.
0x50025200 B  REGISTER MDF_SITF3CR: This register is used to control the serial interfaces (SITFx).
0x50025200 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x50025200 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025200 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025200 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025200 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured.
0x50025204 B  REGISTER MDF_BSMX3CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x50025204 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025204 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to a . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to a in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x50025208 B  REGISTER MDF_DFLT3CR: This register is used to control the digital filter 3.
0x50025208 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x50025208 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025208 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025208 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025208 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025208 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025208 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025208 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025208 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x50025208 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x5002520C B  REGISTER MDF_DFLT3CICR (rw): This register is used to control the main CIC filter.
0x5002520C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002520C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002520C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002520C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x50025210 B  REGISTER MDF_DFLT3RSFR (rw): This register is used to control the reshape and HPF filters.
0x50025210 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025210 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025210 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025210 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025214 B  REGISTER MDF_DFLT3INTR (rw): This register is used to the integrator (INT) settings.
0x50025214 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025214 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025218 B  REGISTER MDF_OLD3CR: This register is used to configure the Out-of Limit Detector function.
0x50025218 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x50025218 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025218 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025218 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025218 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025218 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x5002521C B  REGISTER MDF_OLD3THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x5002521C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025220 B  REGISTER MDF_OLD3THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x50025220 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x50025224 B  REGISTER MDF_DLY3CR: This register is used for the adjustment stream delays.
0x50025224 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x50025224 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x50025228 B  REGISTER MDF_SCD3CR: This register is used for the adjustment stream delays.
0x50025228 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x50025228 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025228 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025228 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x5002522C B  REGISTER MDF_DFLT3IER (rw): MDF DFLTx interrupt enable register x
0x5002522C C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x5002522C C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x5002522C C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x5002522C C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x5002522C C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x5002522C C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x5002522C C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x5002522C C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x5002522C C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x50025230 B  REGISTER MDF_DFLT3ISR: This register contains the status flags for each digital filter path.
0x50025230 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x50025230 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x50025230 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x50025230 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x50025230 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x50025230 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x50025230 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x50025230 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x50025230 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x50025230 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x50025230 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x50025230 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x50025234 B  REGISTER MDF_OEC3CR (rw): This register contains the offset compensation value.
0x50025234 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x5002526C B  REGISTER MDF_SNPS3DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x5002526C C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x5002526C C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x5002526C C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x50025270 B  REGISTER MDF_DFLT3DR (ro): This register is used to read the data processed by each digital filter.
0x50025270 C   FIELD 08w24 DR: Data processed by digital filter.
0x50025280 B  REGISTER MDF_SITF4CR: This register is used to control the serial interfaces (SITFx).
0x50025280 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x50025280 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025280 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025280 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025280 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured.
0x50025284 B  REGISTER MDF_BSMX4CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x50025284 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025284 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x50025288 B  REGISTER MDF_DFLT4CR: This register is used to control the digital filter 4.
0x50025288 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x50025288 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025288 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in a interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025288 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025288 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025288 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025288 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025288 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025288 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x50025288 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x5002528C B  REGISTER MDF_DFLT4CICR (rw): This register is used to control the main CIC filter.
0x5002528C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002528C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002528C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002528C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x50025290 B  REGISTER MDF_DFLT4RSFR (rw): This register is used to control the reshape and HPF filters.
0x50025290 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025290 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025290 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025290 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025294 B  REGISTER MDF_DFLT4INTR (rw): This register is used to the integrator (INT) settings.
0x50025294 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025294 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025298 B  REGISTER MDF_OLD4CR: This register is used to configure the Out-of Limit Detector function.
0x50025298 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x50025298 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025298 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025298 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025298 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025298 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x5002529C B  REGISTER MDF_OLD4THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x5002529C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500252A0 B  REGISTER MDF_OLD4THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x500252A0 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x500252A4 B  REGISTER MDF_DLY4CR: This register is used for the adjustment stream delays.
0x500252A4 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x500252A4 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x500252A8 B  REGISTER MDF_SCD4CR: This register is used for the adjustment stream delays.
0x500252A8 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x500252A8 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500252A8 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x500252A8 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x500252AC B  REGISTER MDF_DFLT4IER (rw): MDF DFLTx interrupt enable register x
0x500252AC C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x500252AC C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x500252AC C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x500252AC C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x500252AC C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x500252AC C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x500252AC C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x500252AC C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x500252AC C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x500252B0 B  REGISTER MDF_DFLT4ISR: This register contains the status flags for each digital filter path.
0x500252B0 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x500252B0 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x500252B0 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x500252B0 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x500252B0 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x500252B0 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x500252B0 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x500252B0 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x500252B0 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x500252B0 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x500252B0 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x500252B0 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x500252B4 B  REGISTER MDF_OEC4CR (rw): This register contains the offset compensation value.
0x500252B4 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x500252EC B  REGISTER MDF_SNPS4DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x500252EC C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x500252EC C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x500252EC C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x500252F0 B  REGISTER MDF_DFLT4DR (ro): This register is used to read the data processed by each digital filter.
0x500252F0 C   FIELD 08w24 DR: Data processed by digital filter.
0x50025300 B  REGISTER MDF_SITF5CR: This register is used to control the serial interfaces (SITFx).
0x50025300 C   FIELD 00w01 SITFEN (rw): Serial interface enable Set and cleared by software. This bit is used to enable/disable the serial interface. - 0: Serial interface disabled - 1: Serial interface enabled
0x50025300 C   FIELD 01w02 SCKSRC (rw): Serial clock source Set and cleared by software. This bit is used to select the clock source of the serial interface. - 00: Serial clock source is MDF_CCK0 - 01: Serial clock source is MDF_CCK1 1x: Serial clock source is MDF_CKIx, not allowed in LF_MASTER SPI mode This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025300 C   FIELD 04w02 SITFMOD (rw): Serial interface type Set and cleared by software. This field is used to defined the serial interface type. - 00: LF_MASTER (Low-Frequency MASTER) SPI mode - 01: Normal SPI mode - 10: Manchester mode: rising edge = logic 0, falling edge = logic 1 - 11: Manchester mode: rising edge = logic 1, falling edge = logic 0 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025300 C   FIELD 08w05 STH (rw): Manchester Symbol threshold / SPI threshold Set and cleared by software. This field is used for Manchester mode, in order to define the expected symbol threshold levels. Please refer to Section : Manchester mode for details on computation. In addition this field is used to define the timeout value for the clock absence detection in Normal SPI mode. Values of STH[4:0] lower than 4 are invalid. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025300 C   FIELD 31w01 SITFACTIVE (ro): Serial interface Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the serial interface is effectively enabled (active) or not. The protected fields of this function can only be updated when the SITFACTIVE is set , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SITFEN and a transition on SITFACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The serial interface is not active, and can be configured if needed - 1: The serial interface is active, and protected fields cannot be configured.
0x50025304 B  REGISTER MDF_BSMX5CR: This register is used to select the bitstream to be provided to the corresponding digital filter and to the SCD.
0x50025304 C   FIELD 00w05 BSSEL (rw): Bitstream Selection Set and cleared by software. This field is used to select the bitstream to be processed for the digital filter x and for the SCDx. The size of this field depends on the number of DFLTx instantiated. If the BSSEL is selecting an input which is not instantiated, the MDF will select the valid stream bs[x]_F having the higher index number. - 00000: The bitstream bs[0]_R is provided to DFLTx and SCDx - 00001: The bitstream bs[0]_F is provided to DFLTx and SCDx - 00010: The bitstream bs[1]_R is provided to DFLTx and SCDx (if instantiated) - 00011: The bitstream bs[1]_F is provided to DFLTx and SCDx (if instantiated) ... - 11110: The bitstream bs[15]_R is provided to DFLTx and SCDx (if instantiated) - 11111: The bitstream bs[15]_F is provided to DFLTx and SCDx (if instantiated) This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025304 C   FIELD 31w01 BSMXACTIVE (ro): BSMX Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the BSMX is effectively enabled (active) or not. BSSEL[4:0] can only be updated when the BSMXACTIVE is set to . The BSMXACTIVE flag is a logical between OLDACTIVE, DFLTACTIVE, and SCDACTIVE flags. Both of them must be set to in order update BSSEL[4:0] field. - 0: The BSMX is not active, and can be configured if needed - 1: The BSMX is active, and protected fields cannot be configured.
0x50025308 B  REGISTER MDF_DFLT5CR: This register is used to control the digital filter x.
0x50025308 C   FIELD 00w01 DFLTEN (wo): Digital Filter Enable Set and cleared by software. This bit is used to control the start of acquisition of the corresponding digital filter path. The behavior of this bit depends on ACQMOD and external events. or the acquisition starts when the proper trigger event occurs if ACQMOD = 01x . The serial or parallel interface delivering the samples shall be enabled as well. - 0: The acquisition is stopped immediately - 1: The acquisition is immediately started if ACQMOD = 00x or 1xx ,
0x50025308 C   FIELD 01w01 DMAEN (rw): DMA Requests Enable Set and cleared by software. This bit is used to control the generation of DMA request in order to transfer the processed samples into the memory. - 0: The DMA interface for the corresponding digital filter is disabled - 1: The DMA interface for the corresponding digital filter is enabled This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025308 C   FIELD 02w01 FTH (rw): RXFIFO Threshold selection Set and cleared by software. This bit is used to select the RXFIFO threshold. This bit is not significant for RXFIFOs working in interleaved transfer mode. Refer to Section 1.4.13.4: Using the interleaved transfer mode for details. - 0: RXFIFO threshold event generated when the RXFIFO is not empty - 1: RXFIFO threshold event generated when the RXFIFO is half-full This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025308 C   FIELD 04w03 ACQMOD (rw): Digital filter Trigger mode Set and cleared by software. This field is used to select the filter trigger mode. - 000: Asynchronous, continuous acquisition mode - 001: Asynchronous, single-shot acquisition mode - 010: Synchronous, continuous acquisition mode - 011: Synchronous, single-shot acquisition mode - 100: Window, continuous acquisition mode - 101: Synchronous, snapshot mode others: same a 000 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025308 C   FIELD 08w01 TRGSENS (rw): Digital filter Trigger sensitivity selection Set and cleared by software. This field is used to select the trigger sensitivity of the external signals - 0: A rising edge event triggers the acquisition - 1: A falling edge even triggers the acquisition Note that when the trigger source is TRGO or OLDx event, TRGSENS value is not taken into account. When TRGO is selected, the sensitivity is forced to falling edge, when OLDx event is selected, the sensitivity is forced to rising edge. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025308 C   FIELD 12w04 TRGSRC (rw): Digital filter Trigger signal selection, Set and cleared by software. This field is used to select which external signals is used as trigger for the corresponding filter. - 0000: TRGO is selected - 0001: OLDx event is selected - 0010: mdf_trg[0] is selected ... - 1111: mdf_trg[13] is selected This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025308 C   FIELD 16w01 SNPSFMT (rw): Snapshot data format Set and cleared by software. This field is used to select the data format for the snapshot mode. - 0: The integrator counter (INT_CNT) is not inserted into the MDF_SNPSxDR register, leaving a data resolution of 23 bits. - 1: The integrator counter (INT_CNT) is inserted at position [15:9] of MDF_SNPSxDR register, leaving a data resolution of 16 bits. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025308 C   FIELD 20w08 NBDIS (rw): Number of samples to be discarded Set and cleared by software. This field is used to define the number of samples to be discarded every time the DFLTx is re-started. - 0: no sample discarded - 1: 1 sample discarded - 2: 2 samples discarded ... - 255: 255 samples discarded This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025308 C   FIELD 30w01 DFLTRUN (ro): Digital filter Run Status Flag Set and cleared by hardware. This bit indicates if the digital filter is running or not. - 0: The digital filter is not running, and ready to accept a new trigger event - 1: The digital filter is running
0x50025308 C   FIELD 31w01 DFLTACTIVE (ro): Digital filter Active Flag Set and cleared by hardware. This bit indicates if the digital filter is active: can be running or waiting for events. - 0: The digital filter is not active, and can be re-enabled again (via DFLTEN bit) if needed - 1: The digital filter is active
0x5002530C B  REGISTER MDF_DFLT5CICR (rw): This register is used to control the main CIC filter.
0x5002530C C   FIELD 00w02 DATSRC: Source data for the digital filter Set and cleared by software. 0x: Select the stream coming from the BSMX - 10: Select the stream coming from the ADCITF1 - 11: Select the stream coming from the ADCITF2 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002530C C   FIELD 04w03 CICMOD: Select the CIC mode Set and cleared by software. This field allows the application to select the configuration and the order of the MCIC. When CICMOD[2:0] is equal to 0xx , the CIC is split into two filters: - The main CIC (MCIC) - The auxiliary CIC (ACIC), used for the out-off limit detector - 000: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in FastSinc filter - 001: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc1 filter - 010: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc2 filter - 011: The CIC is split into 2 filters, and the main CIC (MCIC) is configured in Sinc3 filter - 100: The CIC is configured in single sinc4 filter others: The CIC is configured in single sinc5 filter This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002530C C   FIELD 08w09 MCICD: CIC decimation ratio selection Set and cleared by software. This bit is used to allow the application to select the decimation ratio of the CIC. Decimation ratio smaller than 2 is not allowed. The decimation ratio is given by (CICDEC+1). - 0: Decimation ratio is 2 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 511: Decimation ratio is 512 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x5002530C C   FIELD 20w06 SCALE: Scaling factor selection Set and cleared by software. This field is used to allow the application to select the gain to be applied at CIC output. Please refer to Table 13: Possible gain values for details. If the application attempts to write a new gain value while the previous one is not yet applied, this new gain value is ignored. Reading back the SCALE[5:0] field will inform the application on the current gain value. - 100000: - 48.2 dB, or shift right by 8 bits (default value) - 100001: - 44.6 dB, - 100010: - 42.1 dB, or shift right by 7 bits - 100011: - 38.6 dB, ... - 101110: -6 dB, or shift right by 1 bit - 101111: -2.5 dB, - 000000: 0 dB - 000001: + 3.5 dB, - 000010: + 6 dB, or shift left by 1 bit ... - 011000: + 72 dB, or shift left by 12 bits
0x50025310 B  REGISTER MDF_DFLT5RSFR (rw): This register is used to control the reshape and HPF filters.
0x50025310 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass Set and cleared by software. This bit is used to bypass the reshape filter and its decimation block. - 0: The reshape filter is not bypassed (Default value) - 1: The reshape filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025310 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio Set and cleared by software. This bit is used to select the decimation ratio for the reshape filter - 0: Decimation ratio is 4 (Default value) - 1: Decimation ratio is 1 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025310 C   FIELD 07w01 HPFBYP: High-Pass Filter bypass Set and cleared by software. This bit is used to bypass the high-pass filter. - 0: The high pass filter is not bypassed (Default value) - 1: The high pass filter is bypassed This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025310 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency Set and cleared by software. This field is used to select the cut-off frequency of the high-pass filter. FPCM represents the sampling frequency at HPF input. - 00: Cut-off frequency = 0.000625 x FPCM - 01: Cut-off frequency = 0.00125 x FPCM - 10: Cut-off frequency = 0.00250 x FPCM - 11: Cut-off frequency = 0.00950 x FPCM This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025314 B  REGISTER MDF_DFLT5INTR (rw): This register is used to the integrator (INT) settings.
0x50025314 C   FIELD 00w02 INTDIV: Integrator output division Set and cleared by software. This bit is used to rescale the signal at the integrator output in order keep the data width lower than 24 bits. - 00: The integrator data outputs are divided by 128 (Default value) - 01: The integrator data outputs are divided by 32 - 10: The integrator data outputs are divided by 4 - 11: The integrator data outputs are not divided This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025314 C   FIELD 04w07 INTVAL: Integration value selection Set and cleared by software. This field is used to select the integration value. - 0: The integration value is 1, meaning bypass mode (default after reset) - 1: The integration value is 2 - 2: The integration value is 3 ... - 127: The integration value is 128 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025318 B  REGISTER MDF_OLD5CR: This register is used to configure the Out-of Limit Detector function.
0x50025318 C   FIELD 00w01 OLDEN (rw): Over-Current Detector Enable Set and cleared by software. - 0: The OLD is disabled (Default value) - 1: The OLD is enabled, including the ACIC filter working in continuous mode.
0x50025318 C   FIELD 01w01 THINB (rw): Threshold In band Set and cleared by software. - 0: The OLD generates an event if the signal is lower than OLDTHL OR higher than OLDTHH (Default value) - 1: The OLD generates an event if the signal is lower than OLDTHH AND higher than OLDTHL This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025318 C   FIELD 04w04 BKOLD (rw): Break signal assignment for out-of limit detector Set and cleared by software. BKOLD[i] = 0: Break signal (mdf_break[i]) is not assigned to threshold event BKOLD[i] = 1: Break signal (mdf_break[i]) is assigned to threshold event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025318 C   FIELD 12w02 ACICN (rw): OLD CIC order selection Set and cleared by software. This field allows the application to select the type, and the order of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . - 00: FastSinc filter type - 01: Sinc1 filter type - 10: Sinc2 filter type - 11: Sinc3 filter type This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025318 C   FIELD 17w05 ACICD (rw): OLD CIC decimation ratio selection Set and cleared by software. This field is used to allow the application to select the decimation ratio of the ACIC. This field is only taken into account by the MDF when CICMOD[2:0] = 0xx . The decimation ratio is given by (ACICD+1). - 0: Decimation ratio is 1 - 1: Decimation ratio is 2 - 2: Decimation ratio is 3 - 3: Decimation ratio is 4 ... - 31: Decimation ratio is 32 This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025318 C   FIELD 31w01 OLDACTIVE (ro): OLD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the OLD is effectively enabled (active) or not. The protected fields and registers of this function can only be updated when the OLDACTIVE is set to , please refer to Section 1.4.15: Register protection for details. The delay between a transition on OLDEN and a transition on OLDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The OLD is not active, and can be configured if needed - 1: The OLD is active, and protected fields cannot be configured.
0x5002531C B  REGISTER MDF_OLD5THLR (rw): This register is used for the adjustment of the Out-off Limit low threshold.
0x5002531C C   FIELD 00w26 OLDTHL: OLD Low Threshold Value Set and cleared by software. OLDTHL represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHL. This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025320 B  REGISTER MDF_OLD5THHR (rw): This register is used for the adjustment of the Out-off Limit high threshold.
0x50025320 C   FIELD 00w26 OLDTHH: OLD High Threshold Value Set and cleared by software. OLDTHH represents a 26-bit signed value. The real threshold compared to the signal provided by the filter is OLDTHH. This field can be write-protected, please refer to Section 1.4.15: Register protection for details
0x50025324 B  REGISTER MDF_DLY5CR: This register is used for the adjustment stream delays.
0x50025324 C   FIELD 00w07 SKPDLY (rw): Delay to apply to a bitstream Set and cleared by software. Defines the number of input samples that will be skipped. Skipping is applied immediately after writing to this field, if SKPBF = 0 , and the corresponding bit DFLTEN = 1 . If SKPBF = 1 the value written into the register is ignored by the delay state machine. - 0: No input sample skipped, - 1: 1 input sample skipped, ... - 127: 127 input sample skipped,
0x50025324 C   FIELD 31w01 SKPBF (ro): Skip Busy flag Set and cleared by hardware. Shall be used in order to control if the delay sequence is completed. - 0: Reading 0 means that the MDF is ready to accept a new value into SKPDLY[6:0]. - 1: Reading 1 means that last valid SKPDLY[6:0] is still under precessing.
0x50025328 B  REGISTER MDF_SCD5CR: This register is used for the adjustment stream delays.
0x50025328 C   FIELD 00w01 SCDEN (rw): Short circuit detector enable Set and cleared by software. - 0: The short circuit detector is disabled, - 1: The short circuit detector is enabled,
0x50025328 C   FIELD 04w04 BKSCD (rw): Break signal assignment for short circuit detector Set and cleared by software. BKSCD[i] = 0: Break signal (mdf_break[i]) is not assigned to this SCD event BKSCD[i] = 1: Break signal (mdf_break[i]) is assigned to this SCD event This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025328 C   FIELD 12w08 SCDT (rw): Short-circuit detector threshold Set and cleared by software. These bits are written by software to define the threshold counter for the short-circuit detector. If this value is reached, then a short-circuit detector event occurs on a given input stream. - 0: 2 consecutive 1 s or 0 s will generate an event, - 1: 2 consecutive 1 s or 0 s will generate an event - 2: 3 consecutive 1 s or 0 s will generate an event, ... - 255: 256 consecutive 1 s or 0 s will generate an event, This field can be write-protected, please refer to Section 1.4.15: Register protection for details.
0x50025328 C   FIELD 31w01 SCDACTIVE (ro): SCD Active flag Set and cleared by hardware. This flag must be used by the application in order to check if the SCD is effectively enabled (active) or not. The protected fields of this function can only be updated when the SCDACTIVE is set to a a , please refer to Section 1.4.15: Register protection for details. The delay between a transition on SCDEN and a transition on SCDACTIVE is 2 periods of AHB clock and 2 periods of mdf_proc_ck. - 0: The SCD is not active, and can be configured if needed - 1: The SCD is active, and protected fields cannot be configured.
0x5002532C B  REGISTER MDF_DFLT5IER (rw): MDF DFLTx interrupt enable register x
0x5002532C C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable Set and cleared by software. - 0: RXFIFO threshold interrupt disabled - 1: RXFIFO threshold interrupt enabled
0x5002532C C   FIELD 01w01 DOVRIE: Data overflow interrupt enable Set and cleared by software. - 0: Data overflow interrupt disabled - 1: Data overflow interrupt enabled
0x5002532C C   FIELD 02w01 SSDRIE: Snapshot data ready interrupt enable Set and cleared by software. - 0: Snapshot data ready interrupt disabled - 1: Snapshot data ready interrupt enabled
0x5002532C C   FIELD 04w01 OLDIE: Out-of Limit interrupt enable Set and cleared by software. - 0: OLD event interrupt disabled - 1: OLD event interrupt enabled
0x5002532C C   FIELD 07w01 SSOVRIE: Snapshot overrun interrupt enable Set and cleared by software. - 0: Snapshot overrun interrupt disabled - 1: Snapshot overrun interrupt enabled
0x5002532C C   FIELD 08w01 SCDIE: Short-Circuit Detector interrupt enable Set and cleared by software. - 0: SCD interrupt disabled - 1: SCD interrupt enabled
0x5002532C C   FIELD 09w01 SATIE: Saturation detection interrupt enable Set and cleared by software. - 0: Saturation interrupt disabled - 1: Saturation interrupt enabled
0x5002532C C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable Set and cleared by software. - 0: Clock absence interrupt disabled - 1: Clock absence interrupt enabled
0x5002532C C   FIELD 11w01 RFOVRIE: Reshape Filter Overrun interrupt enable Set and cleared by software. - 0: Reshape filter overrun interrupt disabled - 1: Reshape filter overrun interrupt enabled
0x50025330 B  REGISTER MDF_DFLT5ISR: This register contains the status flags for each digital filter path.
0x50025330 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that the RXFIFO threshold is not reached, writing 0 has no effect. - 1: Reading 1 means that the RXFIFO reached the threshold, writing 1 clears this flag.
0x50025330 C   FIELD 01w01 DOVRF (rw): Data overflow flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no overflow is detected, writing 0 has no effect. - 1: Reading 1 means that an overflow is detected, writing 1 clears this flag.
0x50025330 C   FIELD 02w01 SSDRF (rw): Snapshot data ready flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no data is available on MDF_SNPSxDR, writing 0 has no effect. - 1: Reading 1 means that a new data is available on MDF_SNPSxDR, writing 1 clears this flag.
0x50025330 C   FIELD 03w01 RXNEF (ro): RXFIFO Not Empty flag Set and cleared by hardware according to the RXFIFO level. - 0: Reading 0 means that the RXFIFO is empty. - 1: Reading 1 means that the RXFIFO is not empty.
0x50025330 C   FIELD 04w01 OLDF (rw): Out-of Limit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no OLD event is detected, writing 0 has no effect. - 1: Reading 1 means that an OLD event is detected, writing 1 clears THHF, THLF and OLDF flags.
0x50025330 C   FIELD 05w01 THLF (ro): Low threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the low threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHL, when the last OLD event occurred - 1: The signal was higher than OLDTHL, when the last OLD event occurred
0x50025330 C   FIELD 06w01 THHF (ro): High threshold status flag Set by hardware, and cleared by software by writing OLDF bit to 1 . This flag indicates the status of the high threshold comparator when the last OLD event occurred. This bit gives additional information on the conditions triggering the last OLD event. It can be cleared by writing OLDF flag to a 1. - 0: The signal was lower than OLDTHH, when the last OLD event occurred - 1: The signal was higher than OLDTHH, when the last OLD event occurred
0x50025330 C   FIELD 07w01 SSOVRF (rw): Snapshot overrun flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no snapshot overrun event is detected, writing 0 has no effect. - 1: Reading 1 means that a snapshot overrun event is detected, writing 1 clears this flag.
0x50025330 C   FIELD 08w01 SCDF (rw): Short-Circuit Detector flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no SCD event is detected, writing 0 has no effect. - 1: Reading 1 means that a SCD event is detected, writing 1 clears this flag.
0x50025330 C   FIELD 09w01 SATF (rw): Saturation detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no saturation is detected, writing 0 has no effect. - 1: Reading 1 means that a saturation is detected, writing 1 clears this flag.
0x50025330 C   FIELD 10w01 CKABF (rw): Clock absence detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no clock absence is detected, writing 0 has no effect. - 1: Reading 1 means that a clock absence is detected, writing 1 clears this flag.
0x50025330 C   FIELD 11w01 RFOVRF (rw): Reshape Filter Overrun detection flag Set by hardware, and cleared by software by writing this bit to 1 . - 0: Reading 0 means that no reshape filter overrun is detected, writing 0 has no effect. - 1: Reading 1 means that reshape filter overrun is detected, writing 1 clears this flag.
0x50025334 B  REGISTER MDF_OEC5CR (rw): This register contains the offset compensation value.
0x50025334 C   FIELD 00w26 OFFSET (rw): Offset error compensation Set and cleared by software. If the application attempts to write a new offset value while the previous one is not yet applied, this new offset value is ignored. Reading back the OFFSET[25:0] field will inform the application on the current offset value. OFFSET[25:0] represents the value to be subtracted to the signal before going to the SCALE.
0x5002536C B  REGISTER MDF_SNPS5DR (ro): This register is used to read the data processed by each digital filter in snapshot mode.
0x5002536C C   FIELD 00w09 MCICDC: Contains the MCIC decimation counter value at the moment of the last trigger event occurs (MCIC_CNT)
0x5002536C C   FIELD 09w07 EXTSDR: Extended data size If SNPSFMT = 0 , EXTSDR[6:0] contains the bit 7 to 1 of the last valid data processed by the digital filter, If SNPSFMT = 1 , this field contains the INT accumulator counter value at the moment of the last trigger event occurs (INT_CNT).
0x5002536C C   FIELD 16w16 SDR: Contains the 16 MSB of the last valid data processed by the digital filter.
0x50025370 B  REGISTER MDF_DFLT5DR (ro): This register is used to read the data processed by each digital filter.
0x50025370 C   FIELD 08w24 DR: Data processed by digital filter.
0x50026000 A PERIPHERAL SEC_RAMCFG
0x50026000 B  REGISTER RAM1CR (rw): RAMCFG SRAM x control register
0x50026000 C   FIELD 00w01 ECCE: ECCE
0x50026000 C   FIELD 04w01 ALE: ALE
0x50026000 C   FIELD 08w01 SRAMER: SRAMER
0x50026000 C   FIELD 16w03 WSC: WSC
0x50026008 B  REGISTER RAM1ISR (ro): RAMCFG RAMx interrupt status register
0x50026008 C   FIELD 00w01 SEDC: SEDC
0x50026008 C   FIELD 01w01 DED: DED
0x50026008 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x50026028 B  REGISTER RAM1ERKEYR (wo): RAMCFG SRAM x erase key register
0x50026028 C   FIELD 00w08 ERASEKEY: ERASEKEY
0x50026040 B  REGISTER RAM2CR (rw): RAMCFG SRAM x control register
0x50026040 C   FIELD 00w01 ECCE: ECCE
0x50026040 C   FIELD 04w01 ALE: ALE
0x50026040 C   FIELD 08w01 SRAMER: SRAMER
0x50026040 C   FIELD 16w03 WSC: WSC
0x50026044 B  REGISTER RAM2IER (rw): RAMCFG SRAM x interrupt enable register
0x50026044 C   FIELD 00w01 SEIE: SEIE
0x50026044 C   FIELD 01w01 DEIE: DEIE
0x50026044 C   FIELD 03w01 ECCNMI: ECCNMI
0x50026048 B  REGISTER RAM2ISR (ro): RAMCFG RAMx interrupt status register
0x50026048 C   FIELD 00w01 SEDC: SEDC
0x50026048 C   FIELD 01w01 DED: DED
0x50026048 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x5002604C B  REGISTER RAM2SEAR (ro): RAMCFG RAM x ECC single error address register
0x5002604C C   FIELD 00w32 ESEA: ESEA
0x50026050 B  REGISTER RAM2DEAR (ro): RAMCFG RAM x ECC double error address register
0x50026050 C   FIELD 00w32 EDEA: EDEA
0x50026054 B  REGISTER RAM2ICR (rw): RAMCFG RAM x interrupt clear register x
0x50026054 C   FIELD 00w01 CSEDC: CSEDC
0x50026054 C   FIELD 01w01 CDED: CDED
0x50026058 B  REGISTER RAM2WPR1 (rw): RAMCFG SRAM2 write protection register 1
0x50026058 C   FIELD 00w01 P0WP: P0WP
0x50026058 C   FIELD 01w01 P1WP: P1WP
0x50026058 C   FIELD 02w01 P2WP: P2WP
0x50026058 C   FIELD 03w01 P3WP: P3WP
0x50026058 C   FIELD 04w01 P4WP: P4WP
0x50026058 C   FIELD 05w01 P5WP: P5WP
0x50026058 C   FIELD 06w01 P6WP: P6WP
0x50026058 C   FIELD 07w01 P7WP: P7WP
0x50026058 C   FIELD 08w01 P8WP: P8WP
0x50026058 C   FIELD 09w01 P9WP: P9WP
0x50026058 C   FIELD 10w01 P10WP: P10WP
0x50026058 C   FIELD 11w01 P11WP: P11WP
0x50026058 C   FIELD 12w01 P12WP: P12WP
0x50026058 C   FIELD 13w01 P13WP: P13WP
0x50026058 C   FIELD 14w01 P14WP: P14WP
0x50026058 C   FIELD 15w01 P15WP: P15WP
0x50026058 C   FIELD 16w01 P16WP: P16WP
0x50026058 C   FIELD 17w01 P17WP: P17WP
0x50026058 C   FIELD 18w01 P18WP: P18WP
0x50026058 C   FIELD 19w01 P19WP: P19WP
0x50026058 C   FIELD 20w01 P20WP: P20WP
0x50026058 C   FIELD 21w01 P21WP: P21WP
0x50026058 C   FIELD 22w01 P22WP: P22WP
0x50026058 C   FIELD 23w01 P23WP: P23WP
0x50026058 C   FIELD 24w01 P24WP: P24WP
0x50026058 C   FIELD 25w01 P25WP: P25WP
0x50026058 C   FIELD 26w01 P26WP: P26WP
0x50026058 C   FIELD 27w01 P27WP: P27WP
0x50026058 C   FIELD 28w01 P28WP: P28WP
0x50026058 C   FIELD 29w01 P29WP: P29WP
0x50026058 C   FIELD 30w01 P30WP: P30WP
0x50026058 C   FIELD 31w01 P31WP: P31WP
0x5002605C B  REGISTER RAM2WPR2 (rw): RAMCFG SRAM2 write protection register 2
0x5002605C C   FIELD 00w01 P32WP: P32WP
0x5002605C C   FIELD 01w01 P33WP: P33WP
0x5002605C C   FIELD 02w01 P34WP: P34WP
0x5002605C C   FIELD 03w01 P35WP: P35WP
0x5002605C C   FIELD 04w01 P36WP: P36WP
0x5002605C C   FIELD 05w01 P37WP: P37WP
0x5002605C C   FIELD 06w01 P38WP: P38WP
0x5002605C C   FIELD 07w01 P39WP: P39WP
0x5002605C C   FIELD 08w01 P40WP: P40WP
0x5002605C C   FIELD 09w01 P41WP: P41WP
0x5002605C C   FIELD 10w01 P42WP: P42WP
0x5002605C C   FIELD 11w01 P43WP: P43WP
0x5002605C C   FIELD 12w01 P44WP: P44WP
0x5002605C C   FIELD 13w01 P45WP: P45WP
0x5002605C C   FIELD 14w01 P46WP: P46WP
0x5002605C C   FIELD 15w01 P47WP: P47WP
0x5002605C C   FIELD 16w01 P48WP: P48WP
0x5002605C C   FIELD 17w01 P49WP: P49WP
0x5002605C C   FIELD 18w01 P50WP: P50WP
0x5002605C C   FIELD 19w01 P51WP: P51WP
0x5002605C C   FIELD 20w01 P52WP: P52WP
0x5002605C C   FIELD 21w01 P53WP: P53WP
0x5002605C C   FIELD 22w01 P54WP: P54WP
0x5002605C C   FIELD 23w01 P55WP: P55WP
0x5002605C C   FIELD 24w01 P56WP: P56WP
0x5002605C C   FIELD 25w01 P57WP: P57WP
0x5002605C C   FIELD 26w01 P58WP: P58WP
0x5002605C C   FIELD 27w01 P59WP: P59WP
0x5002605C C   FIELD 28w01 P60WP: P60WP
0x5002605C C   FIELD 29w01 P61WP: P61WP
0x5002605C C   FIELD 30w01 P62WP: P62WP
0x5002605C C   FIELD 31w01 P63WP: P63WP
0x50026064 B  REGISTER RAM2ECCKEYR (wo): RAMCFG SRAM x ECC key register
0x50026064 C   FIELD 00w08 ECCKEY: ECCKEY
0x50026068 B  REGISTER RAM2ERKEYR (wo): RAMCFG SRAM x erase key register
0x50026068 C   FIELD 00w08 ERASEKEY: ERASEKEY
0x50026080 B  REGISTER RAM3CR (rw): RAMCFG SRAM x control register
0x50026080 C   FIELD 00w01 ECCE: ECCE
0x50026080 C   FIELD 04w01 ALE: ALE
0x50026080 C   FIELD 08w01 SRAMER: SRAMER
0x50026080 C   FIELD 16w03 WSC: WSC
0x50026084 B  REGISTER RAM3IER (rw): RAMCFG SRAM x interrupt enable register
0x50026084 C   FIELD 00w01 SEIE: SEIE
0x50026084 C   FIELD 01w01 DEIE: DEIE
0x50026084 C   FIELD 03w01 ECCNMI: ECCNMI
0x50026088 B  REGISTER RAM3ISR (ro): RAMCFG RAMx interrupt status register
0x50026088 C   FIELD 00w01 SEDC: SEDC
0x50026088 C   FIELD 01w01 DED: DED
0x50026088 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x5002608C B  REGISTER RAM3SEAR (ro): RAMCFG RAM x ECC single error address register
0x5002608C C   FIELD 00w32 ESEA: ESEA
0x50026090 B  REGISTER RAM3DEAR (ro): RAMCFG RAM x ECC double error address register
0x50026090 C   FIELD 00w32 EDEA: EDEA
0x50026094 B  REGISTER RAM3ICR (rw): RAMCFG RAM x interrupt clear register x
0x50026094 C   FIELD 00w01 CSEDC: CSEDC
0x50026094 C   FIELD 01w01 CDED: CDED
0x500260A4 B  REGISTER RAM3ECCKEYR (wo): RAMCFG SRAM x ECC key register
0x500260A4 C   FIELD 00w08 ECCKEY: ECCKEY
0x500260A8 B  REGISTER RAM3ERKEYR (wo): RAMCFG SRAM x erase key register
0x500260A8 C   FIELD 00w08 ERASEKEY: ERASEKEY
0x500260C0 B  REGISTER RAM4CR (rw): RAMCFG SRAM x control register
0x500260C0 C   FIELD 00w01 ECCE: ECCE
0x500260C0 C   FIELD 04w01 ALE: ALE
0x500260C0 C   FIELD 08w01 SRAMER: SRAMER
0x500260C0 C   FIELD 16w03 WSC: WSC
0x500260C8 B  REGISTER RAM4ISR (ro): RAMCFG RAMx interrupt status register
0x500260C8 C   FIELD 00w01 SEDC: SEDC
0x500260C8 C   FIELD 01w01 DED: DED
0x500260C8 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x500260E8 B  REGISTER RAM4ERKEYR (wo): RAMCFG SRAM x erase key register
0x500260E8 C   FIELD 00w08 ERASEKEY: ERASEKEY
0x50026100 B  REGISTER RAM5CR (rw): RAMCFG SRAM x control register
0x50026100 C   FIELD 00w01 ECCE: ECCE
0x50026100 C   FIELD 04w01 ALE: ALE
0x50026100 C   FIELD 08w01 SRAMER: SRAMER
0x50026100 C   FIELD 16w03 WSC: WSC
0x50026104 B  REGISTER RAM5IER (rw): RAMCFG SRAM x interrupt enable register
0x50026104 C   FIELD 00w01 SEIE: SEIE
0x50026104 C   FIELD 01w01 DEIE: DEIE
0x50026104 C   FIELD 03w01 ECCNMI: ECCNMI
0x50026108 B  REGISTER RAM5ISR (ro): RAMCFG RAMx interrupt status register
0x50026108 C   FIELD 00w01 SEDC: SEDC
0x50026108 C   FIELD 01w01 DED: DED
0x50026108 C   FIELD 08w01 SRAMBUSY: SRAMBUSY
0x5002610C B  REGISTER RAM5SEAR (ro): RAMCFG RAM x ECC single error address register
0x5002610C C   FIELD 00w32 ESEA: ESEA
0x50026110 B  REGISTER RAM5DEAR (ro): RAMCFG RAM x ECC double error address register
0x50026110 C   FIELD 00w32 EDEA: EDEA
0x50026114 B  REGISTER RAM5ICR (rw): RAMCFG RAM x interrupt clear register x
0x50026114 C   FIELD 00w01 CSEDC: CSEDC
0x50026114 C   FIELD 01w01 CDED: CDED
0x5002B000 A PERIPHERAL SEC_DMA2D
0x5002B000 B  REGISTER CR (rw): control register
0x5002B000 C   FIELD 00w01 START: Start
0x5002B000 C   FIELD 01w01 SUSP: Suspend
0x5002B000 C   FIELD 02w01 ABORT: Abort
0x5002B000 C   FIELD 06w01 LOM: Line Offset Mode
0x5002B000 C   FIELD 08w01 TEIE: Transfer error interrupt enable
0x5002B000 C   FIELD 09w01 TCIE: Transfer complete interrupt enable
0x5002B000 C   FIELD 10w01 TWIE: Transfer watermark interrupt enable
0x5002B000 C   FIELD 11w01 CAEIE: CLUT access error interrupt enable
0x5002B000 C   FIELD 12w01 CTCIE: CLUT transfer complete interrupt enable
0x5002B000 C   FIELD 13w01 CEIE: Configuration Error Interrupt Enable
0x5002B000 C   FIELD 16w02 MODE: DMA2D mode
0x5002B004 B  REGISTER ISR (ro): Interrupt Status Register
0x5002B004 C   FIELD 00w01 TEIF: Transfer error interrupt flag
0x5002B004 C   FIELD 01w01 TCIF: Transfer complete interrupt flag
0x5002B004 C   FIELD 02w01 TWIF: Transfer watermark interrupt flag
0x5002B004 C   FIELD 03w01 CAEIF: CLUT access error interrupt flag
0x5002B004 C   FIELD 04w01 CTCIF: CLUT transfer complete interrupt flag
0x5002B004 C   FIELD 05w01 CEIF: Configuration error interrupt flag
0x5002B008 B  REGISTER IFCR (rw): interrupt flag clear register
0x5002B008 C   FIELD 00w01 CTEIF: Clear Transfer error interrupt flag
0x5002B008 C   FIELD 01w01 CTCIF: Clear transfer complete interrupt flag
0x5002B008 C   FIELD 02w01 CTWIF: Clear transfer watermark interrupt flag
0x5002B008 C   FIELD 03w01 CAECIF: Clear CLUT access error interrupt flag
0x5002B008 C   FIELD 04w01 CCTCIF: Clear CLUT transfer complete interrupt flag
0x5002B008 C   FIELD 05w01 CCEIF: Clear configuration error interrupt flag
0x5002B00C B  REGISTER FGMAR (rw): foreground memory address register
0x5002B00C C   FIELD 00w32 MA: Memory address
0x5002B010 B  REGISTER FGOR (rw): foreground offset register
0x5002B010 C   FIELD 00w16 LO: Line offset
0x5002B014 B  REGISTER BGMAR (rw): background memory address register
0x5002B014 C   FIELD 00w32 MA: Memory address
0x5002B018 B  REGISTER BGOR (rw): background offset register
0x5002B018 C   FIELD 00w16 LO: Line offset
0x5002B01C B  REGISTER FGPFCCR (rw): foreground PFC control register
0x5002B01C C   FIELD 00w04 CM: Color mode
0x5002B01C C   FIELD 04w01 CCM: CLUT color mode
0x5002B01C C   FIELD 05w01 START: Start
0x5002B01C C   FIELD 08w08 CS: CLUT size
0x5002B01C C   FIELD 16w02 AM: Alpha mode
0x5002B01C C   FIELD 20w01 AI: Alpha Inverted
0x5002B01C C   FIELD 21w01 RBS: Red Blue Swap
0x5002B01C C   FIELD 24w08 ALPHA: Alpha value
0x5002B020 B  REGISTER FGCOLR (rw): foreground color register
0x5002B020 C   FIELD 00w08 BLUE: Blue Value
0x5002B020 C   FIELD 08w08 GREEN: Green Value
0x5002B020 C   FIELD 16w08 RED: Red Value
0x5002B024 B  REGISTER BGPFCCR (rw): background PFC control register
0x5002B024 C   FIELD 00w04 CM: Color mode
0x5002B024 C   FIELD 04w01 CCM: CLUT Color mode
0x5002B024 C   FIELD 05w01 START: Start
0x5002B024 C   FIELD 08w08 CS: CLUT size
0x5002B024 C   FIELD 16w02 AM: Alpha mode
0x5002B024 C   FIELD 20w01 AI: Alpha Inverted
0x5002B024 C   FIELD 21w01 RBS: Red Blue Swap
0x5002B024 C   FIELD 24w08 ALPHA: Alpha value
0x5002B028 B  REGISTER BGCOLR (rw): background color register
0x5002B028 C   FIELD 00w08 BLUE: Blue Value
0x5002B028 C   FIELD 08w08 GREEN: Green Value
0x5002B028 C   FIELD 16w08 RED: Red Value
0x5002B02C B  REGISTER FGCMAR (rw): foreground CLUT memory address register
0x5002B02C C   FIELD 00w32 MA: Memory Address
0x5002B030 B  REGISTER BGCMAR (rw): background CLUT memory address register
0x5002B030 C   FIELD 00w32 MA: Memory address
0x5002B034 B  REGISTER OPFCCR (rw): output PFC control register
0x5002B034 C   FIELD 00w03 CM: Color mode
0x5002B034 C   FIELD 09w01 SB: Swap Bytes
0x5002B034 C   FIELD 20w01 AI: Alpha Inverted
0x5002B034 C   FIELD 21w01 RBS: Red Blue Swap
0x5002B038 B  REGISTER OCOLR_ARGB1555 (rw): output color register
0x5002B038 B  REGISTER OCOLR_ARGB4444 (rw): output color register
0x5002B038 B  REGISTER OCOLR_RGB565 (rw): output color register
0x5002B038 B  REGISTER OCOLR_RGB888 (rw): output color register
0x5002B038 C   FIELD 00w04 BLUE: Blue value in ARGB4444 mode
0x5002B038 C   FIELD 00w05 BLUE: Blue value in ARGB1555 mode
0x5002B038 C   FIELD 00w05 BLUE: Blue value in RGB565 mode
0x5002B038 C   FIELD 00w08 BLUE: Blue Value
0x5002B038 C   FIELD 04w04 GREEN: Green value in ARGB4444 mode
0x5002B038 C   FIELD 05w05 GREEN: Green value in ARGB1555 mode
0x5002B038 C   FIELD 05w06 GREEN: Green value in RGB565 mode
0x5002B038 C   FIELD 08w04 RED: Red value in ARGB4444 mode
0x5002B038 C   FIELD 08w08 GREEN: Green Value
0x5002B038 C   FIELD 10w05 RED: Red value in ARGB1555 mode
0x5002B038 C   FIELD 11w05 RED: Red value in RGB565 mode
0x5002B038 C   FIELD 12w04 ALPHA: Alpha channel value in ARGB4444
0x5002B038 C   FIELD 15w01 A: Alpha channel value in ARGB1555 mode
0x5002B038 C   FIELD 16w08 RED: Red Value
0x5002B038 C   FIELD 24w08 APLHA: Alpha Channel Value
0x5002B03C B  REGISTER OMAR (rw): output memory address register
0x5002B03C C   FIELD 00w32 MA: Memory Address
0x5002B040 B  REGISTER OOR (rw): output offset register
0x5002B040 C   FIELD 00w16 LO: Line Offset
0x5002B044 B  REGISTER NLR (rw): number of line register
0x5002B044 C   FIELD 00w16 NL: Number of lines
0x5002B044 C   FIELD 16w14 PL: Pixel per lines
0x5002B048 B  REGISTER LWR (rw): line watermark register
0x5002B048 C   FIELD 00w16 LW: Line watermark
0x5002B04C B  REGISTER AMTCR (rw): AHB master timer configuration register
0x5002B04C C   FIELD 00w01 EN: Enable
0x5002B04C C   FIELD 08w08 DT: Dead Time
0x5002B400 B  REGISTER FGCLUT (rw): FGCLUT
0x5002B400 C   FIELD 00w08 BLUE: BLUE
0x5002B400 C   FIELD 08w08 GREEN: GREEN
0x5002B400 C   FIELD 16w08 RED: RED
0x5002B400 C   FIELD 24w08 APLHA: APLHA
0x5002B800 B  REGISTER BGCLUT (rw): BGCLUT
0x5002B800 C   FIELD 00w08 BLUE: BLUE
0x5002B800 C   FIELD 08w08 GREEN: GREEN
0x5002B800 C   FIELD 16w08 RED: RED
0x5002B800 C   FIELD 24w08 APLHA: APLHA
0x50030400 A PERIPHERAL SEC_ICache
0x50030400 B  REGISTER ICACHE_CR: ICACHE control register
0x50030400 C   FIELD 00w01 EN (rw): EN
0x50030400 C   FIELD 01w01 CACHEINV (wo): CACHEINV
0x50030400 C   FIELD 02w01 WAYSEL (rw): WAYSEL
0x50030400 C   FIELD 16w01 HITMEN (rw): HITMEN
0x50030400 C   FIELD 17w01 MISSMEN (rw): MISSMEN
0x50030400 C   FIELD 18w01 HITMRST (rw): HITMRST
0x50030400 C   FIELD 19w01 MISSMRST (rw): MISSMRST
0x50030404 B  REGISTER ICACHE_SR (ro): ICACHE status register
0x50030404 C   FIELD 00w01 BUSYF: BUSYF
0x50030404 C   FIELD 01w01 BSYENDF: BSYENDF
0x50030404 C   FIELD 02w01 ERRF: ERRF
0x50030408 B  REGISTER ICACHE_IER (rw): ICACHE interrupt enable register
0x50030408 C   FIELD 01w01 BSYENDIE: BSYENDIE
0x50030408 C   FIELD 02w01 ERRIE: ERRIE
0x5003040C B  REGISTER ICACHE_FCR (wo): ICACHE flag clear register
0x5003040C C   FIELD 01w01 CBSYENDF: CBSYENDF
0x5003040C C   FIELD 02w01 CERRF: CERRF
0x50030410 B  REGISTER ICACHE_HMONR (ro): ICACHE hit monitor register
0x50030410 C   FIELD 00w32 HITMON: HITMON
0x50030414 B  REGISTER ICACHE_MMONR (ro): ICACHE miss monitor register
0x50030414 C   FIELD 00w16 MISSMON: MISSMON
0x50030420 B  REGISTER ICACHE_CRR0 (rw): ICACHE region configuration register
0x50030420 C   FIELD 00w08 BASEADDR: BASEADDR
0x50030420 C   FIELD 09w03 RSIZE: RSIZE
0x50030420 C   FIELD 15w01 REN: REN
0x50030420 C   FIELD 16w11 REMAPADDR: REMAPADDR
0x50030420 C   FIELD 28w01 MSTSEL: MSTSEL
0x50030420 C   FIELD 31w01 HBURST: HBURST
0x50030424 B  REGISTER ICACHE_CRR1 (rw): ICACHE region configuration register
0x50030424 C   FIELD 00w08 BASEADDR: BASEADDR
0x50030424 C   FIELD 09w03 RSIZE: RSIZE
0x50030424 C   FIELD 15w01 REN: REN
0x50030424 C   FIELD 16w11 REMAPADDR: REMAPADDR
0x50030424 C   FIELD 28w01 MSTSEL: MSTSEL
0x50030424 C   FIELD 31w01 HBURST: HBURST
0x50030428 B  REGISTER ICACHE_CRR2 (rw): ICACHE region configuration register
0x50030428 C   FIELD 00w08 BASEADDR: BASEADDR
0x50030428 C   FIELD 09w03 RSIZE: RSIZE
0x50030428 C   FIELD 15w01 REN: REN
0x50030428 C   FIELD 16w11 REMAPADDR: REMAPADDR
0x50030428 C   FIELD 28w01 MSTSEL: MSTSEL
0x50030428 C   FIELD 31w01 HBURST: HBURST
0x5003042C B  REGISTER ICACHE_CRR3 (rw): ICACHE region configuration register
0x5003042C C   FIELD 00w08 BASEADDR: BASEADDR
0x5003042C C   FIELD 09w03 RSIZE: RSIZE
0x5003042C C   FIELD 15w01 REN: REN
0x5003042C C   FIELD 16w11 REMAPADDR: REMAPADDR
0x5003042C C   FIELD 28w01 MSTSEL: MSTSEL
0x5003042C C   FIELD 31w01 HBURST: HBURST
0x50031400 A PERIPHERAL SEC_DCACHE
0x50031400 B  REGISTER DCACHE_CR: DCACHE control register
0x50031400 C   FIELD 00w01 EN (rw): EN
0x50031400 C   FIELD 01w01 CACHEINV (wo): CACHEINV
0x50031400 C   FIELD 08w03 CACHECMD (rw): CACHECMD
0x50031400 C   FIELD 11w01 STARTCMD (wo): STARTCMD
0x50031400 C   FIELD 16w01 RHITMEN (rw): RHITMEN
0x50031400 C   FIELD 17w01 RMISSMEN (rw): RMISSMEN
0x50031400 C   FIELD 18w01 RHITMRST (rw): RHITMRST
0x50031400 C   FIELD 19w01 RMISSMRST (rw): RMISSMRST
0x50031400 C   FIELD 20w01 WHITMEN (rw): WHITMEN
0x50031400 C   FIELD 21w01 WMISSMEN (rw): WMISSMEN
0x50031400 C   FIELD 22w01 WHITMRST (rw): WHITMRST
0x50031400 C   FIELD 23w01 WMISSMRST (rw): WMISSMRST
0x50031400 C   FIELD 31w01 HBURST (rw): HBURST
0x50031404 B  REGISTER DCACHE_SR (ro): DCACHE status register
0x50031404 C   FIELD 00w01 BUSYF: BUSYF
0x50031404 C   FIELD 01w01 BSYENDF: BSYENDF
0x50031404 C   FIELD 02w01 ERRF: ERRF
0x50031404 C   FIELD 03w01 BUSYCMDF: BUSYCMDF
0x50031404 C   FIELD 04w01 CMDENDF: CMDENDF
0x50031408 B  REGISTER DCACHE_IER (rw): DCACHE interrupt enable register
0x50031408 C   FIELD 01w01 BSYENDIE: BSYENDIE
0x50031408 C   FIELD 02w01 ERRIE: ERRIE
0x50031408 C   FIELD 04w01 CMDENDIE: CMDENDIE
0x5003140C B  REGISTER DCACHE_FCR (wo): DCACHE flag clear register
0x5003140C C   FIELD 01w01 CBSYENDF: CBSYENDF
0x5003140C C   FIELD 02w01 CERRF: CERRF
0x5003140C C   FIELD 04w01 CCMDENDF: CCMDENDF
0x50031410 B  REGISTER DCACHE_RHMONR (ro): DCACHE read-hit monitor register
0x50031410 C   FIELD 00w32 RHITMON: RHITMON
0x50031414 B  REGISTER DCACHE_RMMONR (ro): DCACHE read-miss monitor register
0x50031414 C   FIELD 00w16 MRISSMON: RMISSMON
0x50031420 B  REGISTER DCACHE_WHMONR (ro): write-hit monitor register
0x50031420 C   FIELD 00w32 WHITMON: WHITMON
0x50031424 B  REGISTER DCACHE_WMMONR (ro): write-miss monitor register
0x50031424 C   FIELD 00w16 WMISSMON: WMISSMON
0x50031428 B  REGISTER DCACHE_CMDRSADDRR (rw): command range start address register
0x50031428 C   FIELD 00w32 CMDSTARTADDR: CMDSTARTADDR
0x5003142C B  REGISTER DCACHE_CMDREADDRR (rw): command range start address register
0x5003142C C   FIELD 00w32 CMDENDADDR: CMDENDADDR
0x50032400 A PERIPHERAL SEC_GTZC1_TZSC
0x50032400 B  REGISTER TZSC_CR (rw): TZSC control register
0x50032400 C   FIELD 00w01 LCK: lock the configuration of GTZC1_TZSC_SECCFGRx and GTZC1_TZSC_PRIVCFGRx registers until next reset
0x50032410 B  REGISTER TZSC_SECCFGR1 (rw): TZSC secure configuration register 1
0x50032410 C   FIELD 00w01 TIM2SEC: secure access mode for TIM2
0x50032410 C   FIELD 01w01 TIM3SEC: secure access mode for TIM3
0x50032410 C   FIELD 02w01 TIM4SEC: secure access mode for TIM4
0x50032410 C   FIELD 03w01 TIM5SEC: secure access mode for TIM5
0x50032410 C   FIELD 04w01 TIM6SEC: secure access mode for TIM6
0x50032410 C   FIELD 05w01 TIM7SEC: secure access mode for TIM7
0x50032410 C   FIELD 06w01 WWDGSEC: secure access mode for WWDG
0x50032410 C   FIELD 07w01 IWDGSEC: secure access mode for IWDG
0x50032410 C   FIELD 08w01 SPI2SEC: secure access mode for SPI2
0x50032410 C   FIELD 09w01 USART2SEC: secure access mode for USART2
0x50032410 C   FIELD 10w01 USART3SEC: secure access mode for USART3
0x50032410 C   FIELD 11w01 UART4SEC: secure access mode for UART4
0x50032410 C   FIELD 12w01 UART5SEC: secure access mode for UART5
0x50032410 C   FIELD 13w01 I2C1SEC: secure access mode for I2C1
0x50032410 C   FIELD 14w01 I2C2SEC: secure access mode for I2C2
0x50032410 C   FIELD 15w01 CRSSEC: secure access mode for CRS
0x50032410 C   FIELD 16w01 I2C4SEC: secure access mode for I2C4
0x50032410 C   FIELD 17w01 LPTIM2SEC: secure access mode for LPTIM2
0x50032410 C   FIELD 18w01 FDCAN1SEC: secure access mode for FDCAN1
0x50032410 C   FIELD 19w01 UCPD1SEC: secure access mode for UCPD1
0x50032414 B  REGISTER TZSC_SECCFGR2 (rw): TZSC secure configuration register 2
0x50032414 C   FIELD 00w01 TIM1SEC: secure access mode for TIM1
0x50032414 C   FIELD 01w01 SPI1SEC: secure access mode for SPI1
0x50032414 C   FIELD 02w01 TIM8SEC: secure access mode for TIM8
0x50032414 C   FIELD 03w01 USART1SEC: secure access mode for USART1
0x50032414 C   FIELD 04w01 TIM15SEC: secure access mode for TIM5
0x50032414 C   FIELD 05w01 TIM16SEC: secure access mode for TIM6
0x50032414 C   FIELD 06w01 TIM17SEC: secure access mode for TIM7
0x50032414 C   FIELD 07w01 SAI1SEC: secure access mode for SAI1
0x50032414 C   FIELD 08w01 SAI2SEC: secure access mode for SAI2
0x50032418 B  REGISTER TZSC_SECCFGR3 (rw): TZSC secure configuration register 3
0x50032418 C   FIELD 00w01 MDF1SEC: secure access mode for MDF1
0x50032418 C   FIELD 01w01 CORDICSEC: secure access mode for CORDIC
0x50032418 C   FIELD 02w01 FMACSEC: secure access mode for FMAC
0x50032418 C   FIELD 03w01 CRCSEC: secure access mode for CRC
0x50032418 C   FIELD 04w01 TSCSEC: secure access mode for TSC
0x50032418 C   FIELD 05w01 DMA2DSEC: secure access mode for register of DMA2D
0x50032418 C   FIELD 06w01 ICACHE_REGSEC: secure access mode for ICACHE registers
0x50032418 C   FIELD 07w01 DCACHE_REGSEC: secure access mode for DCACHE registers
0x50032418 C   FIELD 08w01 ADC1SEC: secure access mode for ADC1
0x50032418 C   FIELD 09w01 DCMISEC: secure access mode for DCMI
0x50032418 C   FIELD 10w01 OTGFSSEC: secure access mode for OTG_FS
0x50032418 C   FIELD 11w01 AESSEC: secure access mode for AES
0x50032418 C   FIELD 12w01 HASHSEC: secure access mode for HASH
0x50032418 C   FIELD 13w01 RNGSEC: secure access mode for RNG
0x50032418 C   FIELD 14w01 PKASEC: secure access mode for PKA
0x50032418 C   FIELD 15w01 SAESSEC: secure access mode for SAES
0x50032418 C   FIELD 16w01 OCTOSPIMSEC: secure access mode for OCTOSPIM
0x50032418 C   FIELD 17w01 SDMMC1SEC: secure access mode for SDMMC2
0x50032418 C   FIELD 18w01 SDMMC2SEC: secure access mode for SDMMC1
0x50032418 C   FIELD 19w01 FSMC_REGSEC: secure access mode for FSMC registers
0x50032418 C   FIELD 20w01 OCTOSPI1_REGSEC: secure access mode for OCTOSPI1 registers
0x50032418 C   FIELD 21w01 OCTOSPI2_REGSEC: secure access mode for OCTOSPI2 registers
0x50032418 C   FIELD 22w01 RAMCFGSEC: secure access mode for RAMCFG
0x50032420 B  REGISTER TZSC_PRIVCFGR1 (rw): TZSC privilege configuration register 1
0x50032420 C   FIELD 00w01 TIM2PRIV: privileged access mode for TIM2
0x50032420 C   FIELD 01w01 TIM3PRIV: privileged access mode for TIM3
0x50032420 C   FIELD 02w01 TIM4PRIV: privileged access mode for TIM4
0x50032420 C   FIELD 03w01 TIM5PRIV: privileged access mode for TIM5
0x50032420 C   FIELD 04w01 TIM6PRIV: privileged access mode for TIM6
0x50032420 C   FIELD 05w01 TIM7PRIV: privileged access mode for TIM7
0x50032420 C   FIELD 06w01 WWDGPRIV: privileged access mode for WWDG
0x50032420 C   FIELD 07w01 IWDGPRIV: privileged access mode for IWDG
0x50032420 C   FIELD 08w01 SPI2PRIV: privileged access mode for SPI2
0x50032420 C   FIELD 09w01 USART2PRIV: privileged access mode for USART2
0x50032420 C   FIELD 10w01 USART3PRIV: privileged access mode for USART3
0x50032420 C   FIELD 11w01 UART4PRIV: privileged access mode for UART4
0x50032420 C   FIELD 12w01 UART5PRIV: privileged access mode for UART5
0x50032420 C   FIELD 13w01 I2C1PRIV: privileged access mode for I2C1
0x50032420 C   FIELD 14w01 I2C2PRIV: privileged access mode for I2C2
0x50032420 C   FIELD 15w01 CRSPRIV: privileged access mode for CRS
0x50032420 C   FIELD 16w01 I2C4PRIV: privileged access mode for I2C4
0x50032420 C   FIELD 17w01 LPTIM2PRIV: privileged access mode for LPTIM2
0x50032420 C   FIELD 18w01 FDCAN1PRIV: privileged access mode for FDCAN1
0x50032420 C   FIELD 19w01 UCPD1PRIV: privileged access mode for UCPD1
0x50032424 B  REGISTER TZSC_PRIVCFGR2 (rw): TZSC privilege configuration register 2
0x50032424 C   FIELD 00w01 TIM1PRIV: privileged access mode for TIM1
0x50032424 C   FIELD 01w01 SPI1PRIV: privileged access mode for SPI1PRIV
0x50032424 C   FIELD 02w01 TIM8PRIV: privileged access mode for TIM8
0x50032424 C   FIELD 03w01 USART1PRIV: privileged access mode for USART1
0x50032424 C   FIELD 04w01 TIM15PRIV: privileged access mode for TIM15
0x50032424 C   FIELD 05w01 TIM16PRIV: privileged access mode for TIM16
0x50032424 C   FIELD 06w01 TIM17PRIV: privileged access mode for TIM17
0x50032424 C   FIELD 07w01 SAI1PRIV: privileged access mode for SAI1
0x50032424 C   FIELD 08w01 SAI2PRIV: privileged access mode for SAI2
0x50032428 B  REGISTER TZSC_PRIVCFGR3 (rw): TZSC privilege configuration register 3
0x50032428 C   FIELD 00w01 MDF1PRIV: privileged access mode for MDF1
0x50032428 C   FIELD 01w01 CORDICPRIV: privileged access mode for CORDIC
0x50032428 C   FIELD 02w01 FMACPRIV: privileged access mode for FMAC
0x50032428 C   FIELD 03w01 CRCPRIV: privileged access mode for CRC
0x50032428 C   FIELD 04w01 TSCPRIV: privileged access mode for TSC
0x50032428 C   FIELD 05w01 DMA2DPRIV: privileged access mode for register of DMA2D
0x50032428 C   FIELD 06w01 ICACHE_REGPRIV: privileged access mode for ICACHE registers
0x50032428 C   FIELD 07w01 DCACHE_REGPRIV: privileged access mode for DCACHE registers
0x50032428 C   FIELD 08w01 ADC1PRIV: privileged access mode for ADC1
0x50032428 C   FIELD 09w01 DCMIPRIV: privileged access mode for DCMI
0x50032428 C   FIELD 10w01 OTGFSPRIV: privileged access mode for OTG_FS
0x50032428 C   FIELD 11w01 AESPRIV: privileged access mode for AES
0x50032428 C   FIELD 12w01 HASHPRIV: privileged access mode for HASH
0x50032428 C   FIELD 13w01 RNGPRIV: privileged access mode for RNG
0x50032428 C   FIELD 14w01 PKAPRIV: privileged access mode for PKA
0x50032428 C   FIELD 15w01 SAESPRIV: privileged access mode for SAES
0x50032428 C   FIELD 16w01 OCTOSPIMPRIV: privileged access mode for OCTOSPIM
0x50032428 C   FIELD 17w01 SDMMC1PRIV: privileged access mode for SDMMC2
0x50032428 C   FIELD 18w01 SDMMC2PRIV: privileged access mode for SDMMC1
0x50032428 C   FIELD 19w01 FSMC_REGPRIV: privileged access mode for FSMC registers
0x50032428 C   FIELD 20w01 OCTOSPI1_REGPRIV: privileged access mode for OCTOSPI1
0x50032428 C   FIELD 21w01 OCTOSPI2_REGPRIV: privileged access mode for OCTOSPI2
0x50032428 C   FIELD 22w01 RAMCFGPRIV: privileged access mode for RAMCFG
0x50032440 B  REGISTER TZSC_MPCWM1ACFGR (rw): TZSC memory 1 sub-region A watermark configuration register
0x50032440 C   FIELD 00w01 SREN: Sub-region enable
0x50032440 C   FIELD 01w01 SRLOCK: Sub-region lock
0x50032440 C   FIELD 08w01 SEC: Secure sub-region
0x50032440 C   FIELD 09w01 PRIV: Privileged sub-region
0x50032444 B  REGISTER TZSC_MPCWM1AR (rw): TZSC memory 1 sub-region A watermark register
0x50032444 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x50032444 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x50032448 B  REGISTER TZSC_MPCWM1BCFGR (rw): TZSC memory 1 sub-region B watermark configuration register
0x50032448 C   FIELD 00w01 SREN: Sub-region enable
0x50032448 C   FIELD 01w01 SRLOCK: Sub-region lock
0x50032448 C   FIELD 08w01 SEC: Secure sub-region
0x50032448 C   FIELD 09w01 PRIV: Privileged sub-region
0x5003244C B  REGISTER TZSC_MPCWM1BR (rw): TZSC memory 1 sub-region B watermark register
0x5003244C C   FIELD 00w11 SUBB_START: Start of sub-region A
0x5003244C C   FIELD 16w12 SUBB_LENGTH: Length of sub-region A
0x50032450 B  REGISTER TZSC_MPCWM2ACFGR (rw): TZSC memory 2 sub-region A watermark configuration register
0x50032450 C   FIELD 00w01 SREN: Sub-region enable
0x50032450 C   FIELD 01w01 SRLOCK: Sub-region lock
0x50032450 C   FIELD 08w01 SEC: Secure sub-region
0x50032450 C   FIELD 09w01 PRIV: Privileged sub-region
0x50032454 B  REGISTER TZSC_MPCWM2AR (rw): TZSC memory 2 sub-region A watermark register
0x50032454 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x50032454 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x50032458 B  REGISTER TZSC_MPCWM2BCFGR (rw): TZSC memory 2 sub-region B watermark configuration register
0x50032458 C   FIELD 00w01 SREN: Sub-region enable
0x50032458 C   FIELD 01w01 SRLOCK: Sub-region lock
0x50032458 C   FIELD 08w01 SEC: Secure sub-region
0x50032458 C   FIELD 09w01 PRIV: Privileged sub-region
0x5003245C B  REGISTER TZSC_MPCWM2BR (rw): TZSC memory 2 sub-region B watermark register
0x5003245C C   FIELD 00w11 SUBB_START: Start of sub-region A
0x5003245C C   FIELD 16w12 SUBB_LENGTH: Length of sub-region A
0x50032460 B  REGISTER TZSC_MPCWM3ACFGR (rw): TZSC memory 3 sub-region A watermark configuration register
0x50032460 C   FIELD 00w01 SREN: Sub-region enable
0x50032460 C   FIELD 01w01 SRLOCK: Sub-region lock
0x50032460 C   FIELD 08w01 SEC: Secure sub-region
0x50032460 C   FIELD 09w01 PRIV: Privileged sub-region
0x50032464 B  REGISTER TZSC_MPCWM3AR (rw): TZSC memory 3 sub-region A watermark register
0x50032464 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x50032464 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x50032470 B  REGISTER TZSC_MPCWM4ACFGR (rw): TZSC memory 4 sub-region A watermark configuration register
0x50032470 C   FIELD 00w01 SREN: Sub-region enable
0x50032470 C   FIELD 01w01 SRLOCK: Sub-region lock
0x50032470 C   FIELD 08w01 SEC: Secure sub-region
0x50032470 C   FIELD 09w01 PRIV: Privileged sub-region
0x50032474 B  REGISTER TZSC_MPCWM4AR (rw): TZSC memory 4 sub-region A watermark register
0x50032474 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x50032474 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x50032480 B  REGISTER TZSC_MPCWM5ACFGR (rw): TZSC memory 5 sub-region A watermark configuration register
0x50032480 C   FIELD 00w01 SREN: Sub-region enable
0x50032480 C   FIELD 01w01 SRLOCK: Sub-region lock
0x50032480 C   FIELD 08w01 SEC: Secure sub-region
0x50032480 C   FIELD 09w01 PRIV: Privileged sub-region
0x50032484 B  REGISTER TZSC_MPCWM5AR (rw): TZSC memory 5 sub-region A watermark register
0x50032484 C   FIELD 00w11 SUBA_START: Start of sub-region A
0x50032484 C   FIELD 16w12 SUBA_LENGTH: Length of sub-region A
0x50032488 B  REGISTER TZSC_MPCWM5BCFGR (rw): TZSC memory 5 sub-region B watermark configuration register
0x50032488 C   FIELD 00w01 SREN: Sub-region enable
0x50032488 C   FIELD 01w01 SRLOCK: Sub-region lock
0x50032488 C   FIELD 08w01 SEC: Secure sub-region
0x50032488 C   FIELD 09w01 PRIV: Privileged sub-region
0x5003248C B  REGISTER TZSC_MPCWM5BR (rw): TZSC memory 5 sub-region B watermark register
0x5003248C C   FIELD 00w11 SUBB_START: Start of sub-region A
0x5003248C C   FIELD 16w12 SUBB_LENGTH: Length of sub-region A
0x50032800 A PERIPHERAL SEC_GTZC1_TZIC
0x50032800 B  REGISTER IER1 (rw): TZIC interrupt enable register 1
0x50032800 C   FIELD 00w01 TIM2IE: TIM2IE
0x50032800 C   FIELD 01w01 TIM3IE: TIM3IE
0x50032800 C   FIELD 02w01 TIM4IE: TIM4IE
0x50032800 C   FIELD 03w01 TIM5IE: TIM5IE
0x50032800 C   FIELD 04w01 TIM6IE: TIM6IE
0x50032800 C   FIELD 05w01 TIM7IE: TIM7IE
0x50032800 C   FIELD 06w01 WWDGIE: WWDGIE
0x50032800 C   FIELD 07w01 IWDGIE: IWDGIE
0x50032800 C   FIELD 08w01 SPI2IE: SPI2IE
0x50032800 C   FIELD 09w01 USART2IE: illegal access interrupt enable for USART2
0x50032800 C   FIELD 10w01 USART3IE: illegal access interrupt enable for USART3
0x50032800 C   FIELD 11w01 USART4IE: illegal access interrupt enable for UART4
0x50032800 C   FIELD 12w01 UART5IE: illegal access interrupt enable for UART5
0x50032800 C   FIELD 13w01 I2C1IE: illegal access interrupt enable for I2C1
0x50032800 C   FIELD 14w01 I2C2IE: illegal access interrupt enable for I2C2
0x50032800 C   FIELD 15w01 CRSIE: illegal access interrupt enable for CRS
0x50032800 C   FIELD 16w01 I2C4IE: illegal access interrupt enable for I2C4
0x50032800 C   FIELD 17w01 LPTIM2IE: illegal access interrupt enable for LPTIM2
0x50032800 C   FIELD 18w01 FDCAN1IE: illegal access interrupt enable for FDCAN1
0x50032800 C   FIELD 19w01 UCPD1IE: illegal access interrupt enable for UCPD1
0x50032804 B  REGISTER IER2 (rw): TZIC interrupt enable register 2
0x50032804 C   FIELD 00w01 TIM1IE: illegal access interrupt enable for TIM1
0x50032804 C   FIELD 01w01 SPI1IE: illegal access interrupt enable for SPI1
0x50032804 C   FIELD 02w01 TIM8IE: illegal access interrupt enable for TIM8
0x50032804 C   FIELD 03w01 USART1IE: illegal access interrupt enable for USART1
0x50032804 C   FIELD 04w01 TIM15IE: illegal access interrupt enable for TIM5
0x50032804 C   FIELD 05w01 TIM16IE: illegal access interrupt enable for TIM6
0x50032804 C   FIELD 06w01 TIM17IE: illegal access interrupt enable for TIM7
0x50032804 C   FIELD 07w01 SAI1IE: illegal access interrupt enable for SAI1
0x50032804 C   FIELD 08w01 SAI2IE: illegal access interrupt enable for SAI2
0x50032808 B  REGISTER IER3 (rw): TZIC interrupt enable register 3
0x50032808 C   FIELD 00w01 MDF1IE: illegal access interrupt enable for MDF1
0x50032808 C   FIELD 01w01 CORDICIE: illegal access interrupt enable for CORDIC
0x50032808 C   FIELD 02w01 FMACIE: illegal access interrupt enable for FMAC
0x50032808 C   FIELD 03w01 CRCIE: illegal access interrupt enable for CRC
0x50032808 C   FIELD 04w01 TSCIE: illegal access interrupt enable for TSC
0x50032808 C   FIELD 05w01 DMA2DIE: illegal access interrupt enable for register of DMA2D
0x50032808 C   FIELD 06w01 ICACHEIE: illegal access interrupt enable for ICACHE registers
0x50032808 C   FIELD 07w01 DCACHEIE: illegal access interrupt enable for DCACHE registers
0x50032808 C   FIELD 08w01 ADC1IE: illegal access interrupt enable for ADC1
0x50032808 C   FIELD 09w01 DCMIIE: illegal access interrupt enable for DCMI
0x50032808 C   FIELD 10w01 OTGFSIE: illegal access interrupt enable for OTG_FS
0x50032808 C   FIELD 11w01 AESIE: illegal access interrupt enable for AES
0x50032808 C   FIELD 12w01 HASHIE: illegal access interrupt enable for HASH
0x50032808 C   FIELD 13w01 RNGIE: illegal access interrupt enable for RNG
0x50032808 C   FIELD 14w01 PKAIE: illegal access interrupt enable for PKA
0x50032808 C   FIELD 15w01 SAESIE: illegal access interrupt enable for SAES
0x50032808 C   FIELD 16w01 OCTOSPIMIE: illegal access interrupt enable for OCTOSPIM
0x50032808 C   FIELD 17w01 SDMMC1IE: illegal access interrupt enable for SDMMC2
0x50032808 C   FIELD 18w01 SDMMC2IE: illegal access interrupt enable for SDMMC1
0x50032808 C   FIELD 19w01 FSMCIE: illegal access interrupt enable for FSMC registers
0x50032808 C   FIELD 20w01 OCTOSPI1IE: illegal access interrupt enable for OCTOSPI1 registers
0x50032808 C   FIELD 21w01 OCTOSPI2IE: illegal access interrupt enable for OCTOSPI2 registers
0x50032808 C   FIELD 22w01 RAMCFGIE: illegal access interrupt enable for RAMCFG
0x5003280C B  REGISTER IER4 (rw): TZIC interrupt enable register 4
0x5003280C C   FIELD 00w01 GPDMA1IE: illegal access interrupt enable for GPDMA1
0x5003280C C   FIELD 01w01 FLASHIE: illegal access interrupt enable for FLASH memory
0x5003280C C   FIELD 02w01 FLASH_REGIE: illegal access interrupt enable for FLASH registers
0x5003280C C   FIELD 03w01 OTFDEC1IE: illegal access interrupt enable for OTFDEC1
0x5003280C C   FIELD 04w01 OTFDEC2IE: illegal access interrupt enable for OTFDEC2
0x5003280C C   FIELD 14w01 TZSC1IE: illegal access interrupt enable for GTZC1 TZSC registers
0x5003280C C   FIELD 15w01 TZIC1IE: illegal access interrupt enable for GTZC1 TZIC registers
0x5003280C C   FIELD 16w01 OCTOSPI1_MEMIE: illegal access interrupt enable for MPCWM1 (OCTOSPI1) memory bank
0x5003280C C   FIELD 17w01 FSMC_MEMIE: illegal access interrupt enable for MPCWM2 (FSMC NAND) and MPCWM3
0x5003280C C   FIELD 18w01 BKPSRAMIE: illegal access interrupt enable for MPCWM3 (BKPSRAM) memory bank
0x5003280C C   FIELD 19w01 OCTOSPI2_MEMIE: illegal access interrupt enable for OCTOSPI2 memory bank
0x5003280C C   FIELD 24w01 SRAM1IE: illegal access interrupt enable for SRAM1
0x5003280C C   FIELD 25w01 MPCBB1_REGIE: illegal access interrupt enable for MPCBB1 registers
0x5003280C C   FIELD 26w01 SRAM2IE: illegal access interrupt enable for SRAM2
0x5003280C C   FIELD 27w01 MPCBB2_REGIE: illegal access interrupt enable for MPCBB2 registers
0x5003280C C   FIELD 28w01 SRAM3IE: illegal access interrupt enable for SRAM3
0x5003280C C   FIELD 29w01 MPCBB3_REGIE: illegal access interrupt enable for MPCBB3 registers
0x50032810 B  REGISTER SR1 (ro): TZIC status register 1
0x50032810 C   FIELD 00w01 TIM2F: illegal access flag for TIM2
0x50032810 C   FIELD 01w01 TIM3F: illegal access flag for TIM3
0x50032810 C   FIELD 02w01 TIM4F: illegal access flag for TIM4
0x50032810 C   FIELD 03w01 TIM5F: illegal access flag for TIM5
0x50032810 C   FIELD 04w01 TIM6F: illegal access flag for TIM6
0x50032810 C   FIELD 05w01 TIM7F: illegal access flag for TIM7
0x50032810 C   FIELD 06w01 WWDGF: illegal access flag for WWDG
0x50032810 C   FIELD 07w01 IWDGF: illegal access flag for IWDG
0x50032810 C   FIELD 08w01 SPI2F: illegal access flag for SPI2
0x50032810 C   FIELD 09w01 USART2F: illegal access flag for USART2
0x50032810 C   FIELD 10w01 USART3F: illegal access flag for USART3
0x50032810 C   FIELD 11w01 UART4F: illegal access flag for UART4
0x50032810 C   FIELD 12w01 UART5F: illegal access flag for UART5
0x50032810 C   FIELD 13w01 I2C1F: illegal access flag for I2C1
0x50032810 C   FIELD 14w01 I2C2F: illegal access flag for I2C2
0x50032810 C   FIELD 15w01 CRSF: illegal access flag for CRS
0x50032810 C   FIELD 16w01 I2C4F: illegal access flag for I2C4
0x50032810 C   FIELD 17w01 LPTIM2F: illegal access flag for LPTIM2
0x50032810 C   FIELD 18w01 FDCAN1F: illegal access flag for FDCAN1
0x50032810 C   FIELD 19w01 UCPD1F: illegal access flag for UCPD1
0x50032814 B  REGISTER SR2 (ro): TZIC status register 2
0x50032814 C   FIELD 00w01 TIM1F: illegal access flag for TIM1
0x50032814 C   FIELD 01w01 SPI1F: illegal access flag for SPI1
0x50032814 C   FIELD 02w01 TIM8F: illegal access flag for TIM8
0x50032814 C   FIELD 03w01 USART1F: illegal access flag for USART1
0x50032814 C   FIELD 04w01 TIM15F: illegal access flag for TIM5
0x50032814 C   FIELD 05w01 TIM16F: illegal access flag for TIM6
0x50032814 C   FIELD 06w01 TIM17F: illegal access flag for TIM7
0x50032814 C   FIELD 07w01 SAI1F: illegal access flag for SAI1
0x50032814 C   FIELD 08w01 SAI2F: illegal access flag for SAI2
0x50032818 B  REGISTER SR3 (ro): TZIC status register 3
0x50032818 C   FIELD 00w01 MDF1F: illegal access flag for MDF1
0x50032818 C   FIELD 01w01 CORDICF: illegal access flag for CORDIC
0x50032818 C   FIELD 02w01 FMACF: illegal access flag for FMAC
0x50032818 C   FIELD 03w01 CRCF: illegal access flag for CRC
0x50032818 C   FIELD 04w01 TSCF: illegal access flag for TSC
0x50032818 C   FIELD 05w01 DMA2DF: illegal access flag for register of DMA2D
0x50032818 C   FIELD 06w01 ICACHEF: illegal access flag for ICACHE registers
0x50032818 C   FIELD 07w01 DCACHEF: illegal access flag for DCACHE registers
0x50032818 C   FIELD 08w01 ADC1F: illegal access flag for ADC1
0x50032818 C   FIELD 09w01 DCMIF: illegal access flag for DCMI
0x50032818 C   FIELD 10w01 OTGFSF: illegal access flag for OTG_FS
0x50032818 C   FIELD 11w01 AESF: illegal access flag for AES
0x50032818 C   FIELD 12w01 HASHF: illegal access flag for HASH
0x50032818 C   FIELD 13w01 RNGF: illegal access flag for RNG
0x50032818 C   FIELD 14w01 PKAF: illegal access flag for PKA
0x50032818 C   FIELD 15w01 SAESF: illegal access flag for SAES
0x50032818 C   FIELD 16w01 OCTOSPIMF: illegal access flag for OCTOSPIM
0x50032818 C   FIELD 17w01 SDMMC1F: illegal access flag for SDMMC2
0x50032818 C   FIELD 18w01 SDMMC2F: illegal access flag for SDMMC1
0x50032818 C   FIELD 19w01 FSMCF: illegal access flag for FSMC registers
0x50032818 C   FIELD 20w01 OCTOSPI1F: illegal access flag for OCTOSPI1 registers
0x50032818 C   FIELD 21w01 OCTOSPI2F: illegal access flag for OCTOSPI2 registers
0x50032818 C   FIELD 22w01 RAMCFGF: illegal access flag for RAMCFG
0x5003281C B  REGISTER SR4 (ro): TZIC status register 4
0x5003281C C   FIELD 00w01 GPDMA1F: illegal access flag for GPDMA1
0x5003281C C   FIELD 01w01 FLASHF: illegal access flag for FLASH memory
0x5003281C C   FIELD 02w01 FLASH_REGF: illegal access flag for FLASH registers
0x5003281C C   FIELD 03w01 OTFDEC1F: illegal access flag for OTFDEC1
0x5003281C C   FIELD 04w01 OTFDEC2F: illegal access flag for OTFDEC2
0x5003281C C   FIELD 14w01 TZSC1F: illegal access flag for GTZC1 TZSC registers
0x5003281C C   FIELD 15w01 TZIC1F: illegal access flag for GTZC1 TZIC registers
0x5003281C C   FIELD 16w01 OCTOSPI1_MEMF: illegal access flag for MPCWM1 (OCTOSPI1) memory bank
0x5003281C C   FIELD 17w01 FSMC_MEMF: illegal access flag for MPCWM2 (FSMC NAND) and MPCWM3 (FSMC NOR)
0x5003281C C   FIELD 18w01 BKPSRAMF: illegal access flag for MPCWM3 (BKPSRAM) memory bank
0x5003281C C   FIELD 19w01 OCTOSPI2_MEMF: illegal access flag for OCTOSPI2 memory bank
0x5003281C C   FIELD 24w01 SRAM1F: illegal access flag for SRAM1
0x5003281C C   FIELD 25w01 MPCBB1_REGF: illegal access flag for MPCBB1 registers
0x5003281C C   FIELD 26w01 SRAM2F: illegal access flag for SRAM2
0x5003281C C   FIELD 27w01 MPCBB2_REGF: illegal access flag for MPCBB2 registers
0x5003281C C   FIELD 28w01 SRAM3F: illegal access flag for SRAM3
0x5003281C C   FIELD 29w01 MPCBB3_REGF: illegal access flag for MPCBB3 registers
0x50032820 B  REGISTER FCR1 (wo): TZIC flag clear register 1
0x50032820 C   FIELD 00w01 CTIM2F: clear the illegal access flag for TIM2
0x50032820 C   FIELD 01w01 CTIM3F: clear the illegal access flag for TIM3
0x50032820 C   FIELD 02w01 CTIM4F: clear the illegal access flag for TIM4
0x50032820 C   FIELD 03w01 CTIM5F: clear the illegal access flag for TIM5
0x50032820 C   FIELD 04w01 CTIM6F: clear the illegal access flag for TIM6
0x50032820 C   FIELD 05w01 CTIM7F: clear the illegal access flag for TIM7
0x50032820 C   FIELD 06w01 CWWDGF: clear the illegal access flag for WWDG
0x50032820 C   FIELD 07w01 CIWDGF: clear the illegal access flag for IWDG
0x50032820 C   FIELD 08w01 CSPI2F: clear the illegal access flag for SPI2
0x50032820 C   FIELD 09w01 CUSART2F: clear the illegal access flag for USART2
0x50032820 C   FIELD 10w01 CUSART3F: clear the illegal access flag for USART3
0x50032820 C   FIELD 11w01 CUART4F: clear the illegal access flag for UART4
0x50032820 C   FIELD 12w01 CUART5F: clear the illegal access flag for UART5
0x50032820 C   FIELD 13w01 CI2C1F: clear the illegal access flag for I2C1
0x50032820 C   FIELD 14w01 CI2C2F: clear the illegal access flag for I2C2
0x50032820 C   FIELD 15w01 CCRSF: clear the illegal access flag for CRS
0x50032820 C   FIELD 16w01 CI2C4F: clear the illegal access flag for I2C4
0x50032820 C   FIELD 17w01 CLPTIM2F: clear the illegal access flag for LPTIM2
0x50032820 C   FIELD 18w01 CFDCAN1F: clear the illegal access flag for FDCAN1
0x50032820 C   FIELD 19w01 CUCPD1F: clear the illegal access flag for UCPD1
0x50032824 B  REGISTER FCR2 (wo): TZIC flag clear register 2
0x50032824 C   FIELD 00w01 CTIM1F: clear the illegal access flag for TIM1
0x50032824 C   FIELD 01w01 CSPI1F: clear the illegal access flag for SPI1
0x50032824 C   FIELD 02w01 CTIM8F: clear the illegal access flag for TIM8
0x50032824 C   FIELD 03w01 CUSART1F: clear the illegal access flag for USART1
0x50032824 C   FIELD 04w01 CTIM15F: clear the illegal access flag for TIM5
0x50032824 C   FIELD 05w01 CTIM16F: clear the illegal access flag for TIM6
0x50032824 C   FIELD 06w01 CTIM17F: clear the illegal access flag for TIM7
0x50032824 C   FIELD 07w01 CSAI1F: clear the illegal access flag for SAI1
0x50032824 C   FIELD 08w01 CSAI2F: clear the illegal access flag for SAI2
0x50032828 B  REGISTER FCR3 (wo): TZIC flag clear register 3
0x50032828 C   FIELD 00w01 CMDF1F: clear the illegal access flag for MDF1
0x50032828 C   FIELD 01w01 CCORDICF: clear the illegal access flag for CORDIC
0x50032828 C   FIELD 02w01 CFMACF: clear the illegal access flag for FMAC
0x50032828 C   FIELD 03w01 CCRCF: clear the illegal access flag for CRC
0x50032828 C   FIELD 04w01 CTSCF: clear the illegal access flag for TSC
0x50032828 C   FIELD 05w01 CDMA2DF: clear the illegal access flag for register of DMA2D
0x50032828 C   FIELD 06w01 CICACHEF: clear the illegal access flag for ICACHE registers
0x50032828 C   FIELD 07w01 CDCACHEF: clear the illegal access flag for DCACHE registers
0x50032828 C   FIELD 08w01 CADC1F: clear the illegal access flag for ADC1
0x50032828 C   FIELD 09w01 CDCMIF: clear the illegal access flag for DCMI
0x50032828 C   FIELD 10w01 COTGFSF: clear the illegal access flag for OTG_FS
0x50032828 C   FIELD 11w01 CAESF: clear the illegal access flag for AES
0x50032828 C   FIELD 12w01 CHASHF: clear the illegal access flag for HASH
0x50032828 C   FIELD 13w01 CRNGF: clear the illegal access flag for RNG
0x50032828 C   FIELD 14w01 CPKAF: clear the illegal access flag for PKA
0x50032828 C   FIELD 15w01 CSAESF: clear the illegal access flag for SAES
0x50032828 C   FIELD 16w01 COCTOSPIMF: clear the illegal access flag for OCTOSPIM
0x50032828 C   FIELD 17w01 CSDMMC1F: clear the illegal access flag for SDMMC2
0x50032828 C   FIELD 18w01 CSDMMC2F: clear the illegal access flag for SDMMC1
0x50032828 C   FIELD 19w01 CFSMCF: clear the illegal access flag for FSMC registers
0x50032828 C   FIELD 20w01 COCTOSPI1F: clear the illegal access flag for OCTOSPI1 registers
0x50032828 C   FIELD 21w01 COCTOSPI2F: clear the illegal access flag for OCTOSPI2 registers
0x50032828 C   FIELD 22w01 CRAMCFGF: clear the illegal access flag for RAMCFG
0x5003282C B  REGISTER FCR4 (wo): TZIC flag clear register 3
0x5003282C C   FIELD 00w01 CGPDMA1F: clear the illegal access flag for GPDMA1
0x5003282C C   FIELD 01w01 CFLASHF: clear the illegal access flag for FLASH memory
0x5003282C C   FIELD 02w01 CFLASH_REGF: clear the illegal access flag for FLASH registers
0x5003282C C   FIELD 03w01 COTFDEC1F: clear the illegal access flag for OTFDEC1
0x5003282C C   FIELD 04w01 COTFDEC2F: clear the illegal access flag for OTFDEC2
0x5003282C C   FIELD 14w01 CTZSC1F: clear the illegal access flag for GTZC1 TZSC registers
0x5003282C C   FIELD 15w01 CTZIC1F: clear the illegal access flag for GTZC1 TZIC registers
0x5003282C C   FIELD 16w01 COCTOSPI1_MEMF: clear the illegal access flag for MPCWM1 (OCTOSPI1) memory bank
0x5003282C C   FIELD 17w01 CFSMC_MEMF: clear the illegal access flag for MPCWM2 (FSMC NAND) and MPCWM3
0x5003282C C   FIELD 18w01 CBKPSRAMF: clear the illegal access flag for MPCWM3 (BKPSRAM) memory bank
0x5003282C C   FIELD 19w01 COCTOSPI2_MEMF: clear the illegal access flag for OCTOSPI2 memory bank
0x5003282C C   FIELD 24w01 CSRAM1F: clear the illegal access flag for SRAM1
0x5003282C C   FIELD 25w01 CMPCBB1_REGF: clear the illegal access flag for MPCBB1 registers
0x5003282C C   FIELD 26w01 CSRAM2F: clear the illegal access flag for SRAM2
0x5003282C C   FIELD 27w01 CMPCBB2_REGF: clear the illegal access flag for MPCBB2 registers
0x5003282C C   FIELD 28w01 CSRAM3F: clear the illegal access flag for SRAM3
0x5003282C C   FIELD 29w01 CMPCBB3_REGF: clear the illegal access flag for MPCBB3 registers
0x50032C00 A PERIPHERAL SEC_GTZC1_MPCBB1
0x50032C00 B  REGISTER MPCBB1_CR (rw): MPCBB control register
0x50032C00 C   FIELD 00w01 GLOCK: lock the control register of the MPCBB until next reset
0x50032C00 C   FIELD 30w01 INVSECSTATE: SRAMx clocks security state
0x50032C00 C   FIELD 31w01 SRWILADIS: secure read/write illegal access disable
0x50032C10 B  REGISTER MPCBB1_CFGLOCKR1 (rw): GTZC1 SRAMz MPCBB configuration lock register
0x50032C10 C   FIELD 00w01 SPLCK0: SPLCK0
0x50032C10 C   FIELD 01w01 SPLCK1: SPLCK1
0x50032C10 C   FIELD 02w01 SPLCK2: SPLCK2
0x50032C10 C   FIELD 03w01 SPLCK3: SPLCK3
0x50032C10 C   FIELD 04w01 SPLCK4: SPLCK4
0x50032C10 C   FIELD 05w01 SPLCK5: SPLCK5
0x50032C10 C   FIELD 06w01 SPLCK6: SPLCK6
0x50032C10 C   FIELD 07w01 SPLCK7: SPLCK7
0x50032C10 C   FIELD 08w01 SPLCK8: SPLCK8
0x50032C10 C   FIELD 09w01 SPLCK9: SPLCK9
0x50032C10 C   FIELD 10w01 SPLCK10: SPLCK10
0x50032C10 C   FIELD 11w01 SPLCK11: SPLCK11
0x50032C10 C   FIELD 12w01 SPLCK12: SPLCK12
0x50032C10 C   FIELD 13w01 SPLCK13: SPLCK13
0x50032C10 C   FIELD 14w01 SPLCK14: SPLCK14
0x50032C10 C   FIELD 15w01 SPLCK15: SPLCK15
0x50032C10 C   FIELD 16w01 SPLCK16: SPLCK16
0x50032C10 C   FIELD 17w01 SPLCK17: SPLCK17
0x50032C10 C   FIELD 18w01 SPLCK18: SPLCK18
0x50032C10 C   FIELD 19w01 SPLCK19: SPLCK19
0x50032C10 C   FIELD 20w01 SPLCK20: SPLCK20
0x50032C10 C   FIELD 21w01 SPLCK21: SPLCK21
0x50032C10 C   FIELD 22w01 SPLCK22: SPLCK22
0x50032C10 C   FIELD 23w01 SPLCK23: SPLCK23
0x50032C10 C   FIELD 24w01 SPLCK24: SPLCK24
0x50032C10 C   FIELD 25w01 SPLCK25: SPLCK25
0x50032C10 C   FIELD 26w01 SPLCK26: SPLCK26
0x50032C10 C   FIELD 27w01 SPLCK27: SPLCK27
0x50032C10 C   FIELD 28w01 SPLCK28: SPLCK28
0x50032C10 C   FIELD 29w01 SPLCK29: SPLCK29
0x50032C10 C   FIELD 30w01 SPLCK30: SPLCK30
0x50032C10 C   FIELD 31w01 SPLCK31: SPLCK31
0x50032D00 B  REGISTER MPCBB1_SECCFGR0 (rw): MPCBBx security configuration for super-block x register
0x50032D00 C   FIELD 00w01 SEC0: SEC0
0x50032D00 C   FIELD 01w01 SEC1: SEC1
0x50032D00 C   FIELD 02w01 SEC2: SEC2
0x50032D00 C   FIELD 03w01 SEC3: SEC3
0x50032D00 C   FIELD 04w01 SEC4: SEC4
0x50032D00 C   FIELD 05w01 SEC5: SEC5
0x50032D00 C   FIELD 06w01 SEC6: SEC6
0x50032D00 C   FIELD 07w01 SEC7: SEC7
0x50032D00 C   FIELD 08w01 SEC8: SEC8
0x50032D00 C   FIELD 09w01 SEC9: SEC9
0x50032D00 C   FIELD 10w01 SEC10: SEC10
0x50032D00 C   FIELD 11w01 SEC11: SEC11
0x50032D00 C   FIELD 12w01 SEC12: SEC12
0x50032D00 C   FIELD 13w01 SEC13: SEC13
0x50032D00 C   FIELD 14w01 SEC14: SEC14
0x50032D00 C   FIELD 15w01 SEC15: SEC15
0x50032D00 C   FIELD 16w01 SEC16: SEC16
0x50032D00 C   FIELD 17w01 SEC17: SEC17
0x50032D00 C   FIELD 18w01 SEC18: SEC18
0x50032D00 C   FIELD 19w01 SEC19: SEC19
0x50032D00 C   FIELD 20w01 SEC20: SEC20
0x50032D00 C   FIELD 21w01 SEC21: SEC21
0x50032D00 C   FIELD 22w01 SEC22: SEC22
0x50032D00 C   FIELD 23w01 SEC23: SEC23
0x50032D00 C   FIELD 24w01 SEC24: SEC24
0x50032D00 C   FIELD 25w01 SEC25: SEC25
0x50032D00 C   FIELD 26w01 SEC26: SEC26
0x50032D00 C   FIELD 27w01 SEC27: SEC27
0x50032D00 C   FIELD 28w01 SEC28: SEC28
0x50032D00 C   FIELD 29w01 SEC29: SEC29
0x50032D00 C   FIELD 30w01 SEC30: SEC30
0x50032D00 C   FIELD 31w01 SEC31: SEC31
0x50032D04 B  REGISTER MPCBB1_SECCFGR1 (rw): MPCBBx security configuration for super-block x register
0x50032D04 C   FIELD 00w01 SEC0: SEC0
0x50032D04 C   FIELD 01w01 SEC1: SEC1
0x50032D04 C   FIELD 02w01 SEC2: SEC2
0x50032D04 C   FIELD 03w01 SEC3: SEC3
0x50032D04 C   FIELD 04w01 SEC4: SEC4
0x50032D04 C   FIELD 05w01 SEC5: SEC5
0x50032D04 C   FIELD 06w01 SEC6: SEC6
0x50032D04 C   FIELD 07w01 SEC7: SEC7
0x50032D04 C   FIELD 08w01 SEC8: SEC8
0x50032D04 C   FIELD 09w01 SEC9: SEC9
0x50032D04 C   FIELD 10w01 SEC10: SEC10
0x50032D04 C   FIELD 11w01 SEC11: SEC11
0x50032D04 C   FIELD 12w01 SEC12: SEC12
0x50032D04 C   FIELD 13w01 SEC13: SEC13
0x50032D04 C   FIELD 14w01 SEC14: SEC14
0x50032D04 C   FIELD 15w01 SEC15: SEC15
0x50032D04 C   FIELD 16w01 SEC16: SEC16
0x50032D04 C   FIELD 17w01 SEC17: SEC17
0x50032D04 C   FIELD 18w01 SEC18: SEC18
0x50032D04 C   FIELD 19w01 SEC19: SEC19
0x50032D04 C   FIELD 20w01 SEC20: SEC20
0x50032D04 C   FIELD 21w01 SEC21: SEC21
0x50032D04 C   FIELD 22w01 SEC22: SEC22
0x50032D04 C   FIELD 23w01 SEC23: SEC23
0x50032D04 C   FIELD 24w01 SEC24: SEC24
0x50032D04 C   FIELD 25w01 SEC25: SEC25
0x50032D04 C   FIELD 26w01 SEC26: SEC26
0x50032D04 C   FIELD 27w01 SEC27: SEC27
0x50032D04 C   FIELD 28w01 SEC28: SEC28
0x50032D04 C   FIELD 29w01 SEC29: SEC29
0x50032D04 C   FIELD 30w01 SEC30: SEC30
0x50032D04 C   FIELD 31w01 SEC31: SEC31
0x50032D08 B  REGISTER MPCBB1_SECCFGR2 (rw): MPCBBx security configuration for super-block x register
0x50032D08 C   FIELD 00w01 SEC0: SEC0
0x50032D08 C   FIELD 01w01 SEC1: SEC1
0x50032D08 C   FIELD 02w01 SEC2: SEC2
0x50032D08 C   FIELD 03w01 SEC3: SEC3
0x50032D08 C   FIELD 04w01 SEC4: SEC4
0x50032D08 C   FIELD 05w01 SEC5: SEC5
0x50032D08 C   FIELD 06w01 SEC6: SEC6
0x50032D08 C   FIELD 07w01 SEC7: SEC7
0x50032D08 C   FIELD 08w01 SEC8: SEC8
0x50032D08 C   FIELD 09w01 SEC9: SEC9
0x50032D08 C   FIELD 10w01 SEC10: SEC10
0x50032D08 C   FIELD 11w01 SEC11: SEC11
0x50032D08 C   FIELD 12w01 SEC12: SEC12
0x50032D08 C   FIELD 13w01 SEC13: SEC13
0x50032D08 C   FIELD 14w01 SEC14: SEC14
0x50032D08 C   FIELD 15w01 SEC15: SEC15
0x50032D08 C   FIELD 16w01 SEC16: SEC16
0x50032D08 C   FIELD 17w01 SEC17: SEC17
0x50032D08 C   FIELD 18w01 SEC18: SEC18
0x50032D08 C   FIELD 19w01 SEC19: SEC19
0x50032D08 C   FIELD 20w01 SEC20: SEC20
0x50032D08 C   FIELD 21w01 SEC21: SEC21
0x50032D08 C   FIELD 22w01 SEC22: SEC22
0x50032D08 C   FIELD 23w01 SEC23: SEC23
0x50032D08 C   FIELD 24w01 SEC24: SEC24
0x50032D08 C   FIELD 25w01 SEC25: SEC25
0x50032D08 C   FIELD 26w01 SEC26: SEC26
0x50032D08 C   FIELD 27w01 SEC27: SEC27
0x50032D08 C   FIELD 28w01 SEC28: SEC28
0x50032D08 C   FIELD 29w01 SEC29: SEC29
0x50032D08 C   FIELD 30w01 SEC30: SEC30
0x50032D08 C   FIELD 31w01 SEC31: SEC31
0x50032D0C B  REGISTER MPCBB1_SECCFGR3 (rw): MPCBBx security configuration for super-block x register
0x50032D0C C   FIELD 00w01 SEC0: SEC0
0x50032D0C C   FIELD 01w01 SEC1: SEC1
0x50032D0C C   FIELD 02w01 SEC2: SEC2
0x50032D0C C   FIELD 03w01 SEC3: SEC3
0x50032D0C C   FIELD 04w01 SEC4: SEC4
0x50032D0C C   FIELD 05w01 SEC5: SEC5
0x50032D0C C   FIELD 06w01 SEC6: SEC6
0x50032D0C C   FIELD 07w01 SEC7: SEC7
0x50032D0C C   FIELD 08w01 SEC8: SEC8
0x50032D0C C   FIELD 09w01 SEC9: SEC9
0x50032D0C C   FIELD 10w01 SEC10: SEC10
0x50032D0C C   FIELD 11w01 SEC11: SEC11
0x50032D0C C   FIELD 12w01 SEC12: SEC12
0x50032D0C C   FIELD 13w01 SEC13: SEC13
0x50032D0C C   FIELD 14w01 SEC14: SEC14
0x50032D0C C   FIELD 15w01 SEC15: SEC15
0x50032D0C C   FIELD 16w01 SEC16: SEC16
0x50032D0C C   FIELD 17w01 SEC17: SEC17
0x50032D0C C   FIELD 18w01 SEC18: SEC18
0x50032D0C C   FIELD 19w01 SEC19: SEC19
0x50032D0C C   FIELD 20w01 SEC20: SEC20
0x50032D0C C   FIELD 21w01 SEC21: SEC21
0x50032D0C C   FIELD 22w01 SEC22: SEC22
0x50032D0C C   FIELD 23w01 SEC23: SEC23
0x50032D0C C   FIELD 24w01 SEC24: SEC24
0x50032D0C C   FIELD 25w01 SEC25: SEC25
0x50032D0C C   FIELD 26w01 SEC26: SEC26
0x50032D0C C   FIELD 27w01 SEC27: SEC27
0x50032D0C C   FIELD 28w01 SEC28: SEC28
0x50032D0C C   FIELD 29w01 SEC29: SEC29
0x50032D0C C   FIELD 30w01 SEC30: SEC30
0x50032D0C C   FIELD 31w01 SEC31: SEC31
0x50032D10 B  REGISTER MPCBB1_SECCFGR4 (rw): MPCBBx security configuration for super-block x register
0x50032D10 C   FIELD 00w01 SEC0: SEC0
0x50032D10 C   FIELD 01w01 SEC1: SEC1
0x50032D10 C   FIELD 02w01 SEC2: SEC2
0x50032D10 C   FIELD 03w01 SEC3: SEC3
0x50032D10 C   FIELD 04w01 SEC4: SEC4
0x50032D10 C   FIELD 05w01 SEC5: SEC5
0x50032D10 C   FIELD 06w01 SEC6: SEC6
0x50032D10 C   FIELD 07w01 SEC7: SEC7
0x50032D10 C   FIELD 08w01 SEC8: SEC8
0x50032D10 C   FIELD 09w01 SEC9: SEC9
0x50032D10 C   FIELD 10w01 SEC10: SEC10
0x50032D10 C   FIELD 11w01 SEC11: SEC11
0x50032D10 C   FIELD 12w01 SEC12: SEC12
0x50032D10 C   FIELD 13w01 SEC13: SEC13
0x50032D10 C   FIELD 14w01 SEC14: SEC14
0x50032D10 C   FIELD 15w01 SEC15: SEC15
0x50032D10 C   FIELD 16w01 SEC16: SEC16
0x50032D10 C   FIELD 17w01 SEC17: SEC17
0x50032D10 C   FIELD 18w01 SEC18: SEC18
0x50032D10 C   FIELD 19w01 SEC19: SEC19
0x50032D10 C   FIELD 20w01 SEC20: SEC20
0x50032D10 C   FIELD 21w01 SEC21: SEC21
0x50032D10 C   FIELD 22w01 SEC22: SEC22
0x50032D10 C   FIELD 23w01 SEC23: SEC23
0x50032D10 C   FIELD 24w01 SEC24: SEC24
0x50032D10 C   FIELD 25w01 SEC25: SEC25
0x50032D10 C   FIELD 26w01 SEC26: SEC26
0x50032D10 C   FIELD 27w01 SEC27: SEC27
0x50032D10 C   FIELD 28w01 SEC28: SEC28
0x50032D10 C   FIELD 29w01 SEC29: SEC29
0x50032D10 C   FIELD 30w01 SEC30: SEC30
0x50032D10 C   FIELD 31w01 SEC31: SEC31
0x50032D14 B  REGISTER MPCBB1_SECCFGR5 (rw): MPCBBx security configuration for super-block x register
0x50032D14 C   FIELD 00w01 SEC0: SEC0
0x50032D14 C   FIELD 01w01 SEC1: SEC1
0x50032D14 C   FIELD 02w01 SEC2: SEC2
0x50032D14 C   FIELD 03w01 SEC3: SEC3
0x50032D14 C   FIELD 04w01 SEC4: SEC4
0x50032D14 C   FIELD 05w01 SEC5: SEC5
0x50032D14 C   FIELD 06w01 SEC6: SEC6
0x50032D14 C   FIELD 07w01 SEC7: SEC7
0x50032D14 C   FIELD 08w01 SEC8: SEC8
0x50032D14 C   FIELD 09w01 SEC9: SEC9
0x50032D14 C   FIELD 10w01 SEC10: SEC10
0x50032D14 C   FIELD 11w01 SEC11: SEC11
0x50032D14 C   FIELD 12w01 SEC12: SEC12
0x50032D14 C   FIELD 13w01 SEC13: SEC13
0x50032D14 C   FIELD 14w01 SEC14: SEC14
0x50032D14 C   FIELD 15w01 SEC15: SEC15
0x50032D14 C   FIELD 16w01 SEC16: SEC16
0x50032D14 C   FIELD 17w01 SEC17: SEC17
0x50032D14 C   FIELD 18w01 SEC18: SEC18
0x50032D14 C   FIELD 19w01 SEC19: SEC19
0x50032D14 C   FIELD 20w01 SEC20: SEC20
0x50032D14 C   FIELD 21w01 SEC21: SEC21
0x50032D14 C   FIELD 22w01 SEC22: SEC22
0x50032D14 C   FIELD 23w01 SEC23: SEC23
0x50032D14 C   FIELD 24w01 SEC24: SEC24
0x50032D14 C   FIELD 25w01 SEC25: SEC25
0x50032D14 C   FIELD 26w01 SEC26: SEC26
0x50032D14 C   FIELD 27w01 SEC27: SEC27
0x50032D14 C   FIELD 28w01 SEC28: SEC28
0x50032D14 C   FIELD 29w01 SEC29: SEC29
0x50032D14 C   FIELD 30w01 SEC30: SEC30
0x50032D14 C   FIELD 31w01 SEC31: SEC31
0x50032D18 B  REGISTER MPCBB1_SECCFGR6 (rw): MPCBBx security configuration for super-block x register
0x50032D18 C   FIELD 00w01 SEC0: SEC0
0x50032D18 C   FIELD 01w01 SEC1: SEC1
0x50032D18 C   FIELD 02w01 SEC2: SEC2
0x50032D18 C   FIELD 03w01 SEC3: SEC3
0x50032D18 C   FIELD 04w01 SEC4: SEC4
0x50032D18 C   FIELD 05w01 SEC5: SEC5
0x50032D18 C   FIELD 06w01 SEC6: SEC6
0x50032D18 C   FIELD 07w01 SEC7: SEC7
0x50032D18 C   FIELD 08w01 SEC8: SEC8
0x50032D18 C   FIELD 09w01 SEC9: SEC9
0x50032D18 C   FIELD 10w01 SEC10: SEC10
0x50032D18 C   FIELD 11w01 SEC11: SEC11
0x50032D18 C   FIELD 12w01 SEC12: SEC12
0x50032D18 C   FIELD 13w01 SEC13: SEC13
0x50032D18 C   FIELD 14w01 SEC14: SEC14
0x50032D18 C   FIELD 15w01 SEC15: SEC15
0x50032D18 C   FIELD 16w01 SEC16: SEC16
0x50032D18 C   FIELD 17w01 SEC17: SEC17
0x50032D18 C   FIELD 18w01 SEC18: SEC18
0x50032D18 C   FIELD 19w01 SEC19: SEC19
0x50032D18 C   FIELD 20w01 SEC20: SEC20
0x50032D18 C   FIELD 21w01 SEC21: SEC21
0x50032D18 C   FIELD 22w01 SEC22: SEC22
0x50032D18 C   FIELD 23w01 SEC23: SEC23
0x50032D18 C   FIELD 24w01 SEC24: SEC24
0x50032D18 C   FIELD 25w01 SEC25: SEC25
0x50032D18 C   FIELD 26w01 SEC26: SEC26
0x50032D18 C   FIELD 27w01 SEC27: SEC27
0x50032D18 C   FIELD 28w01 SEC28: SEC28
0x50032D18 C   FIELD 29w01 SEC29: SEC29
0x50032D18 C   FIELD 30w01 SEC30: SEC30
0x50032D18 C   FIELD 31w01 SEC31: SEC31
0x50032D1C B  REGISTER MPCBB1_SECCFGR7 (rw): MPCBBx security configuration for super-block x register
0x50032D1C C   FIELD 00w01 SEC0: SEC0
0x50032D1C C   FIELD 01w01 SEC1: SEC1
0x50032D1C C   FIELD 02w01 SEC2: SEC2
0x50032D1C C   FIELD 03w01 SEC3: SEC3
0x50032D1C C   FIELD 04w01 SEC4: SEC4
0x50032D1C C   FIELD 05w01 SEC5: SEC5
0x50032D1C C   FIELD 06w01 SEC6: SEC6
0x50032D1C C   FIELD 07w01 SEC7: SEC7
0x50032D1C C   FIELD 08w01 SEC8: SEC8
0x50032D1C C   FIELD 09w01 SEC9: SEC9
0x50032D1C C   FIELD 10w01 SEC10: SEC10
0x50032D1C C   FIELD 11w01 SEC11: SEC11
0x50032D1C C   FIELD 12w01 SEC12: SEC12
0x50032D1C C   FIELD 13w01 SEC13: SEC13
0x50032D1C C   FIELD 14w01 SEC14: SEC14
0x50032D1C C   FIELD 15w01 SEC15: SEC15
0x50032D1C C   FIELD 16w01 SEC16: SEC16
0x50032D1C C   FIELD 17w01 SEC17: SEC17
0x50032D1C C   FIELD 18w01 SEC18: SEC18
0x50032D1C C   FIELD 19w01 SEC19: SEC19
0x50032D1C C   FIELD 20w01 SEC20: SEC20
0x50032D1C C   FIELD 21w01 SEC21: SEC21
0x50032D1C C   FIELD 22w01 SEC22: SEC22
0x50032D1C C   FIELD 23w01 SEC23: SEC23
0x50032D1C C   FIELD 24w01 SEC24: SEC24
0x50032D1C C   FIELD 25w01 SEC25: SEC25
0x50032D1C C   FIELD 26w01 SEC26: SEC26
0x50032D1C C   FIELD 27w01 SEC27: SEC27
0x50032D1C C   FIELD 28w01 SEC28: SEC28
0x50032D1C C   FIELD 29w01 SEC29: SEC29
0x50032D1C C   FIELD 30w01 SEC30: SEC30
0x50032D1C C   FIELD 31w01 SEC31: SEC31
0x50032D20 B  REGISTER MPCBB1_SECCFGR8 (rw): MPCBBx security configuration for super-block x register
0x50032D20 C   FIELD 00w01 SEC0: SEC0
0x50032D20 C   FIELD 01w01 SEC1: SEC1
0x50032D20 C   FIELD 02w01 SEC2: SEC2
0x50032D20 C   FIELD 03w01 SEC3: SEC3
0x50032D20 C   FIELD 04w01 SEC4: SEC4
0x50032D20 C   FIELD 05w01 SEC5: SEC5
0x50032D20 C   FIELD 06w01 SEC6: SEC6
0x50032D20 C   FIELD 07w01 SEC7: SEC7
0x50032D20 C   FIELD 08w01 SEC8: SEC8
0x50032D20 C   FIELD 09w01 SEC9: SEC9
0x50032D20 C   FIELD 10w01 SEC10: SEC10
0x50032D20 C   FIELD 11w01 SEC11: SEC11
0x50032D20 C   FIELD 12w01 SEC12: SEC12
0x50032D20 C   FIELD 13w01 SEC13: SEC13
0x50032D20 C   FIELD 14w01 SEC14: SEC14
0x50032D20 C   FIELD 15w01 SEC15: SEC15
0x50032D20 C   FIELD 16w01 SEC16: SEC16
0x50032D20 C   FIELD 17w01 SEC17: SEC17
0x50032D20 C   FIELD 18w01 SEC18: SEC18
0x50032D20 C   FIELD 19w01 SEC19: SEC19
0x50032D20 C   FIELD 20w01 SEC20: SEC20
0x50032D20 C   FIELD 21w01 SEC21: SEC21
0x50032D20 C   FIELD 22w01 SEC22: SEC22
0x50032D20 C   FIELD 23w01 SEC23: SEC23
0x50032D20 C   FIELD 24w01 SEC24: SEC24
0x50032D20 C   FIELD 25w01 SEC25: SEC25
0x50032D20 C   FIELD 26w01 SEC26: SEC26
0x50032D20 C   FIELD 27w01 SEC27: SEC27
0x50032D20 C   FIELD 28w01 SEC28: SEC28
0x50032D20 C   FIELD 29w01 SEC29: SEC29
0x50032D20 C   FIELD 30w01 SEC30: SEC30
0x50032D20 C   FIELD 31w01 SEC31: SEC31
0x50032D24 B  REGISTER MPCBB1_SECCFGR9 (rw): MPCBBx security configuration for super-block x register
0x50032D24 C   FIELD 00w01 SEC0: SEC0
0x50032D24 C   FIELD 01w01 SEC1: SEC1
0x50032D24 C   FIELD 02w01 SEC2: SEC2
0x50032D24 C   FIELD 03w01 SEC3: SEC3
0x50032D24 C   FIELD 04w01 SEC4: SEC4
0x50032D24 C   FIELD 05w01 SEC5: SEC5
0x50032D24 C   FIELD 06w01 SEC6: SEC6
0x50032D24 C   FIELD 07w01 SEC7: SEC7
0x50032D24 C   FIELD 08w01 SEC8: SEC8
0x50032D24 C   FIELD 09w01 SEC9: SEC9
0x50032D24 C   FIELD 10w01 SEC10: SEC10
0x50032D24 C   FIELD 11w01 SEC11: SEC11
0x50032D24 C   FIELD 12w01 SEC12: SEC12
0x50032D24 C   FIELD 13w01 SEC13: SEC13
0x50032D24 C   FIELD 14w01 SEC14: SEC14
0x50032D24 C   FIELD 15w01 SEC15: SEC15
0x50032D24 C   FIELD 16w01 SEC16: SEC16
0x50032D24 C   FIELD 17w01 SEC17: SEC17
0x50032D24 C   FIELD 18w01 SEC18: SEC18
0x50032D24 C   FIELD 19w01 SEC19: SEC19
0x50032D24 C   FIELD 20w01 SEC20: SEC20
0x50032D24 C   FIELD 21w01 SEC21: SEC21
0x50032D24 C   FIELD 22w01 SEC22: SEC22
0x50032D24 C   FIELD 23w01 SEC23: SEC23
0x50032D24 C   FIELD 24w01 SEC24: SEC24
0x50032D24 C   FIELD 25w01 SEC25: SEC25
0x50032D24 C   FIELD 26w01 SEC26: SEC26
0x50032D24 C   FIELD 27w01 SEC27: SEC27
0x50032D24 C   FIELD 28w01 SEC28: SEC28
0x50032D24 C   FIELD 29w01 SEC29: SEC29
0x50032D24 C   FIELD 30w01 SEC30: SEC30
0x50032D24 C   FIELD 31w01 SEC31: SEC31
0x50032D28 B  REGISTER MPCBB1_SECCFGR10 (rw): MPCBBx security configuration for super-block x register
0x50032D28 C   FIELD 00w01 SEC0: SEC0
0x50032D28 C   FIELD 01w01 SEC1: SEC1
0x50032D28 C   FIELD 02w01 SEC2: SEC2
0x50032D28 C   FIELD 03w01 SEC3: SEC3
0x50032D28 C   FIELD 04w01 SEC4: SEC4
0x50032D28 C   FIELD 05w01 SEC5: SEC5
0x50032D28 C   FIELD 06w01 SEC6: SEC6
0x50032D28 C   FIELD 07w01 SEC7: SEC7
0x50032D28 C   FIELD 08w01 SEC8: SEC8
0x50032D28 C   FIELD 09w01 SEC9: SEC9
0x50032D28 C   FIELD 10w01 SEC10: SEC10
0x50032D28 C   FIELD 11w01 SEC11: SEC11
0x50032D28 C   FIELD 12w01 SEC12: SEC12
0x50032D28 C   FIELD 13w01 SEC13: SEC13
0x50032D28 C   FIELD 14w01 SEC14: SEC14
0x50032D28 C   FIELD 15w01 SEC15: SEC15
0x50032D28 C   FIELD 16w01 SEC16: SEC16
0x50032D28 C   FIELD 17w01 SEC17: SEC17
0x50032D28 C   FIELD 18w01 SEC18: SEC18
0x50032D28 C   FIELD 19w01 SEC19: SEC19
0x50032D28 C   FIELD 20w01 SEC20: SEC20
0x50032D28 C   FIELD 21w01 SEC21: SEC21
0x50032D28 C   FIELD 22w01 SEC22: SEC22
0x50032D28 C   FIELD 23w01 SEC23: SEC23
0x50032D28 C   FIELD 24w01 SEC24: SEC24
0x50032D28 C   FIELD 25w01 SEC25: SEC25
0x50032D28 C   FIELD 26w01 SEC26: SEC26
0x50032D28 C   FIELD 27w01 SEC27: SEC27
0x50032D28 C   FIELD 28w01 SEC28: SEC28
0x50032D28 C   FIELD 29w01 SEC29: SEC29
0x50032D28 C   FIELD 30w01 SEC30: SEC30
0x50032D28 C   FIELD 31w01 SEC31: SEC31
0x50032D2C B  REGISTER MPCBB1_SECCFGR11 (rw): MPCBBx security configuration for super-block x register
0x50032D2C C   FIELD 00w01 SEC0: SEC0
0x50032D2C C   FIELD 01w01 SEC1: SEC1
0x50032D2C C   FIELD 02w01 SEC2: SEC2
0x50032D2C C   FIELD 03w01 SEC3: SEC3
0x50032D2C C   FIELD 04w01 SEC4: SEC4
0x50032D2C C   FIELD 05w01 SEC5: SEC5
0x50032D2C C   FIELD 06w01 SEC6: SEC6
0x50032D2C C   FIELD 07w01 SEC7: SEC7
0x50032D2C C   FIELD 08w01 SEC8: SEC8
0x50032D2C C   FIELD 09w01 SEC9: SEC9
0x50032D2C C   FIELD 10w01 SEC10: SEC10
0x50032D2C C   FIELD 11w01 SEC11: SEC11
0x50032D2C C   FIELD 12w01 SEC12: SEC12
0x50032D2C C   FIELD 13w01 SEC13: SEC13
0x50032D2C C   FIELD 14w01 SEC14: SEC14
0x50032D2C C   FIELD 15w01 SEC15: SEC15
0x50032D2C C   FIELD 16w01 SEC16: SEC16
0x50032D2C C   FIELD 17w01 SEC17: SEC17
0x50032D2C C   FIELD 18w01 SEC18: SEC18
0x50032D2C C   FIELD 19w01 SEC19: SEC19
0x50032D2C C   FIELD 20w01 SEC20: SEC20
0x50032D2C C   FIELD 21w01 SEC21: SEC21
0x50032D2C C   FIELD 22w01 SEC22: SEC22
0x50032D2C C   FIELD 23w01 SEC23: SEC23
0x50032D2C C   FIELD 24w01 SEC24: SEC24
0x50032D2C C   FIELD 25w01 SEC25: SEC25
0x50032D2C C   FIELD 26w01 SEC26: SEC26
0x50032D2C C   FIELD 27w01 SEC27: SEC27
0x50032D2C C   FIELD 28w01 SEC28: SEC28
0x50032D2C C   FIELD 29w01 SEC29: SEC29
0x50032D2C C   FIELD 30w01 SEC30: SEC30
0x50032D2C C   FIELD 31w01 SEC31: SEC31
0x50032D30 B  REGISTER MPCBB1_SECCFGR12 (rw): MPCBBx security configuration for super-block x register
0x50032D30 C   FIELD 00w01 SEC0: SEC0
0x50032D30 C   FIELD 01w01 SEC1: SEC1
0x50032D30 C   FIELD 02w01 SEC2: SEC2
0x50032D30 C   FIELD 03w01 SEC3: SEC3
0x50032D30 C   FIELD 04w01 SEC4: SEC4
0x50032D30 C   FIELD 05w01 SEC5: SEC5
0x50032D30 C   FIELD 06w01 SEC6: SEC6
0x50032D30 C   FIELD 07w01 SEC7: SEC7
0x50032D30 C   FIELD 08w01 SEC8: SEC8
0x50032D30 C   FIELD 09w01 SEC9: SEC9
0x50032D30 C   FIELD 10w01 SEC10: SEC10
0x50032D30 C   FIELD 11w01 SEC11: SEC11
0x50032D30 C   FIELD 12w01 SEC12: SEC12
0x50032D30 C   FIELD 13w01 SEC13: SEC13
0x50032D30 C   FIELD 14w01 SEC14: SEC14
0x50032D30 C   FIELD 15w01 SEC15: SEC15
0x50032D30 C   FIELD 16w01 SEC16: SEC16
0x50032D30 C   FIELD 17w01 SEC17: SEC17
0x50032D30 C   FIELD 18w01 SEC18: SEC18
0x50032D30 C   FIELD 19w01 SEC19: SEC19
0x50032D30 C   FIELD 20w01 SEC20: SEC20
0x50032D30 C   FIELD 21w01 SEC21: SEC21
0x50032D30 C   FIELD 22w01 SEC22: SEC22
0x50032D30 C   FIELD 23w01 SEC23: SEC23
0x50032D30 C   FIELD 24w01 SEC24: SEC24
0x50032D30 C   FIELD 25w01 SEC25: SEC25
0x50032D30 C   FIELD 26w01 SEC26: SEC26
0x50032D30 C   FIELD 27w01 SEC27: SEC27
0x50032D30 C   FIELD 28w01 SEC28: SEC28
0x50032D30 C   FIELD 29w01 SEC29: SEC29
0x50032D30 C   FIELD 30w01 SEC30: SEC30
0x50032D30 C   FIELD 31w01 SEC31: SEC31
0x50032D34 B  REGISTER MPCBB1_SECCFGR13 (rw): MPCBBx security configuration for super-block x register
0x50032D34 C   FIELD 00w01 SEC0: SEC0
0x50032D34 C   FIELD 01w01 SEC1: SEC1
0x50032D34 C   FIELD 02w01 SEC2: SEC2
0x50032D34 C   FIELD 03w01 SEC3: SEC3
0x50032D34 C   FIELD 04w01 SEC4: SEC4
0x50032D34 C   FIELD 05w01 SEC5: SEC5
0x50032D34 C   FIELD 06w01 SEC6: SEC6
0x50032D34 C   FIELD 07w01 SEC7: SEC7
0x50032D34 C   FIELD 08w01 SEC8: SEC8
0x50032D34 C   FIELD 09w01 SEC9: SEC9
0x50032D34 C   FIELD 10w01 SEC10: SEC10
0x50032D34 C   FIELD 11w01 SEC11: SEC11
0x50032D34 C   FIELD 12w01 SEC12: SEC12
0x50032D34 C   FIELD 13w01 SEC13: SEC13
0x50032D34 C   FIELD 14w01 SEC14: SEC14
0x50032D34 C   FIELD 15w01 SEC15: SEC15
0x50032D34 C   FIELD 16w01 SEC16: SEC16
0x50032D34 C   FIELD 17w01 SEC17: SEC17
0x50032D34 C   FIELD 18w01 SEC18: SEC18
0x50032D34 C   FIELD 19w01 SEC19: SEC19
0x50032D34 C   FIELD 20w01 SEC20: SEC20
0x50032D34 C   FIELD 21w01 SEC21: SEC21
0x50032D34 C   FIELD 22w01 SEC22: SEC22
0x50032D34 C   FIELD 23w01 SEC23: SEC23
0x50032D34 C   FIELD 24w01 SEC24: SEC24
0x50032D34 C   FIELD 25w01 SEC25: SEC25
0x50032D34 C   FIELD 26w01 SEC26: SEC26
0x50032D34 C   FIELD 27w01 SEC27: SEC27
0x50032D34 C   FIELD 28w01 SEC28: SEC28
0x50032D34 C   FIELD 29w01 SEC29: SEC29
0x50032D34 C   FIELD 30w01 SEC30: SEC30
0x50032D34 C   FIELD 31w01 SEC31: SEC31
0x50032D38 B  REGISTER MPCBB1_SECCFGR14 (rw): MPCBBx security configuration for super-block x register
0x50032D38 C   FIELD 00w01 SEC0: SEC0
0x50032D38 C   FIELD 01w01 SEC1: SEC1
0x50032D38 C   FIELD 02w01 SEC2: SEC2
0x50032D38 C   FIELD 03w01 SEC3: SEC3
0x50032D38 C   FIELD 04w01 SEC4: SEC4
0x50032D38 C   FIELD 05w01 SEC5: SEC5
0x50032D38 C   FIELD 06w01 SEC6: SEC6
0x50032D38 C   FIELD 07w01 SEC7: SEC7
0x50032D38 C   FIELD 08w01 SEC8: SEC8
0x50032D38 C   FIELD 09w01 SEC9: SEC9
0x50032D38 C   FIELD 10w01 SEC10: SEC10
0x50032D38 C   FIELD 11w01 SEC11: SEC11
0x50032D38 C   FIELD 12w01 SEC12: SEC12
0x50032D38 C   FIELD 13w01 SEC13: SEC13
0x50032D38 C   FIELD 14w01 SEC14: SEC14
0x50032D38 C   FIELD 15w01 SEC15: SEC15
0x50032D38 C   FIELD 16w01 SEC16: SEC16
0x50032D38 C   FIELD 17w01 SEC17: SEC17
0x50032D38 C   FIELD 18w01 SEC18: SEC18
0x50032D38 C   FIELD 19w01 SEC19: SEC19
0x50032D38 C   FIELD 20w01 SEC20: SEC20
0x50032D38 C   FIELD 21w01 SEC21: SEC21
0x50032D38 C   FIELD 22w01 SEC22: SEC22
0x50032D38 C   FIELD 23w01 SEC23: SEC23
0x50032D38 C   FIELD 24w01 SEC24: SEC24
0x50032D38 C   FIELD 25w01 SEC25: SEC25
0x50032D38 C   FIELD 26w01 SEC26: SEC26
0x50032D38 C   FIELD 27w01 SEC27: SEC27
0x50032D38 C   FIELD 28w01 SEC28: SEC28
0x50032D38 C   FIELD 29w01 SEC29: SEC29
0x50032D38 C   FIELD 30w01 SEC30: SEC30
0x50032D38 C   FIELD 31w01 SEC31: SEC31
0x50032D3C B  REGISTER MPCBB1_SECCFGR15 (rw): MPCBBx security configuration for super-block x register
0x50032D3C C   FIELD 00w01 SEC0: SEC0
0x50032D3C C   FIELD 01w01 SEC1: SEC1
0x50032D3C C   FIELD 02w01 SEC2: SEC2
0x50032D3C C   FIELD 03w01 SEC3: SEC3
0x50032D3C C   FIELD 04w01 SEC4: SEC4
0x50032D3C C   FIELD 05w01 SEC5: SEC5
0x50032D3C C   FIELD 06w01 SEC6: SEC6
0x50032D3C C   FIELD 07w01 SEC7: SEC7
0x50032D3C C   FIELD 08w01 SEC8: SEC8
0x50032D3C C   FIELD 09w01 SEC9: SEC9
0x50032D3C C   FIELD 10w01 SEC10: SEC10
0x50032D3C C   FIELD 11w01 SEC11: SEC11
0x50032D3C C   FIELD 12w01 SEC12: SEC12
0x50032D3C C   FIELD 13w01 SEC13: SEC13
0x50032D3C C   FIELD 14w01 SEC14: SEC14
0x50032D3C C   FIELD 15w01 SEC15: SEC15
0x50032D3C C   FIELD 16w01 SEC16: SEC16
0x50032D3C C   FIELD 17w01 SEC17: SEC17
0x50032D3C C   FIELD 18w01 SEC18: SEC18
0x50032D3C C   FIELD 19w01 SEC19: SEC19
0x50032D3C C   FIELD 20w01 SEC20: SEC20
0x50032D3C C   FIELD 21w01 SEC21: SEC21
0x50032D3C C   FIELD 22w01 SEC22: SEC22
0x50032D3C C   FIELD 23w01 SEC23: SEC23
0x50032D3C C   FIELD 24w01 SEC24: SEC24
0x50032D3C C   FIELD 25w01 SEC25: SEC25
0x50032D3C C   FIELD 26w01 SEC26: SEC26
0x50032D3C C   FIELD 27w01 SEC27: SEC27
0x50032D3C C   FIELD 28w01 SEC28: SEC28
0x50032D3C C   FIELD 29w01 SEC29: SEC29
0x50032D3C C   FIELD 30w01 SEC30: SEC30
0x50032D3C C   FIELD 31w01 SEC31: SEC31
0x50032D40 B  REGISTER MPCBB1_SECCFGR16 (rw): MPCBBx security configuration for super-block x register
0x50032D40 C   FIELD 00w01 SEC0: SEC0
0x50032D40 C   FIELD 01w01 SEC1: SEC1
0x50032D40 C   FIELD 02w01 SEC2: SEC2
0x50032D40 C   FIELD 03w01 SEC3: SEC3
0x50032D40 C   FIELD 04w01 SEC4: SEC4
0x50032D40 C   FIELD 05w01 SEC5: SEC5
0x50032D40 C   FIELD 06w01 SEC6: SEC6
0x50032D40 C   FIELD 07w01 SEC7: SEC7
0x50032D40 C   FIELD 08w01 SEC8: SEC8
0x50032D40 C   FIELD 09w01 SEC9: SEC9
0x50032D40 C   FIELD 10w01 SEC10: SEC10
0x50032D40 C   FIELD 11w01 SEC11: SEC11
0x50032D40 C   FIELD 12w01 SEC12: SEC12
0x50032D40 C   FIELD 13w01 SEC13: SEC13
0x50032D40 C   FIELD 14w01 SEC14: SEC14
0x50032D40 C   FIELD 15w01 SEC15: SEC15
0x50032D40 C   FIELD 16w01 SEC16: SEC16
0x50032D40 C   FIELD 17w01 SEC17: SEC17
0x50032D40 C   FIELD 18w01 SEC18: SEC18
0x50032D40 C   FIELD 19w01 SEC19: SEC19
0x50032D40 C   FIELD 20w01 SEC20: SEC20
0x50032D40 C   FIELD 21w01 SEC21: SEC21
0x50032D40 C   FIELD 22w01 SEC22: SEC22
0x50032D40 C   FIELD 23w01 SEC23: SEC23
0x50032D40 C   FIELD 24w01 SEC24: SEC24
0x50032D40 C   FIELD 25w01 SEC25: SEC25
0x50032D40 C   FIELD 26w01 SEC26: SEC26
0x50032D40 C   FIELD 27w01 SEC27: SEC27
0x50032D40 C   FIELD 28w01 SEC28: SEC28
0x50032D40 C   FIELD 29w01 SEC29: SEC29
0x50032D40 C   FIELD 30w01 SEC30: SEC30
0x50032D40 C   FIELD 31w01 SEC31: SEC31
0x50032D44 B  REGISTER MPCBB1_SECCFGR17 (rw): MPCBBx security configuration for super-block x register
0x50032D44 C   FIELD 00w01 SEC0: SEC0
0x50032D44 C   FIELD 01w01 SEC1: SEC1
0x50032D44 C   FIELD 02w01 SEC2: SEC2
0x50032D44 C   FIELD 03w01 SEC3: SEC3
0x50032D44 C   FIELD 04w01 SEC4: SEC4
0x50032D44 C   FIELD 05w01 SEC5: SEC5
0x50032D44 C   FIELD 06w01 SEC6: SEC6
0x50032D44 C   FIELD 07w01 SEC7: SEC7
0x50032D44 C   FIELD 08w01 SEC8: SEC8
0x50032D44 C   FIELD 09w01 SEC9: SEC9
0x50032D44 C   FIELD 10w01 SEC10: SEC10
0x50032D44 C   FIELD 11w01 SEC11: SEC11
0x50032D44 C   FIELD 12w01 SEC12: SEC12
0x50032D44 C   FIELD 13w01 SEC13: SEC13
0x50032D44 C   FIELD 14w01 SEC14: SEC14
0x50032D44 C   FIELD 15w01 SEC15: SEC15
0x50032D44 C   FIELD 16w01 SEC16: SEC16
0x50032D44 C   FIELD 17w01 SEC17: SEC17
0x50032D44 C   FIELD 18w01 SEC18: SEC18
0x50032D44 C   FIELD 19w01 SEC19: SEC19
0x50032D44 C   FIELD 20w01 SEC20: SEC20
0x50032D44 C   FIELD 21w01 SEC21: SEC21
0x50032D44 C   FIELD 22w01 SEC22: SEC22
0x50032D44 C   FIELD 23w01 SEC23: SEC23
0x50032D44 C   FIELD 24w01 SEC24: SEC24
0x50032D44 C   FIELD 25w01 SEC25: SEC25
0x50032D44 C   FIELD 26w01 SEC26: SEC26
0x50032D44 C   FIELD 27w01 SEC27: SEC27
0x50032D44 C   FIELD 28w01 SEC28: SEC28
0x50032D44 C   FIELD 29w01 SEC29: SEC29
0x50032D44 C   FIELD 30w01 SEC30: SEC30
0x50032D44 C   FIELD 31w01 SEC31: SEC31
0x50032D48 B  REGISTER MPCBB1_SECCFGR18 (rw): MPCBBx security configuration for super-block x register
0x50032D48 C   FIELD 00w01 SEC0: SEC0
0x50032D48 C   FIELD 01w01 SEC1: SEC1
0x50032D48 C   FIELD 02w01 SEC2: SEC2
0x50032D48 C   FIELD 03w01 SEC3: SEC3
0x50032D48 C   FIELD 04w01 SEC4: SEC4
0x50032D48 C   FIELD 05w01 SEC5: SEC5
0x50032D48 C   FIELD 06w01 SEC6: SEC6
0x50032D48 C   FIELD 07w01 SEC7: SEC7
0x50032D48 C   FIELD 08w01 SEC8: SEC8
0x50032D48 C   FIELD 09w01 SEC9: SEC9
0x50032D48 C   FIELD 10w01 SEC10: SEC10
0x50032D48 C   FIELD 11w01 SEC11: SEC11
0x50032D48 C   FIELD 12w01 SEC12: SEC12
0x50032D48 C   FIELD 13w01 SEC13: SEC13
0x50032D48 C   FIELD 14w01 SEC14: SEC14
0x50032D48 C   FIELD 15w01 SEC15: SEC15
0x50032D48 C   FIELD 16w01 SEC16: SEC16
0x50032D48 C   FIELD 17w01 SEC17: SEC17
0x50032D48 C   FIELD 18w01 SEC18: SEC18
0x50032D48 C   FIELD 19w01 SEC19: SEC19
0x50032D48 C   FIELD 20w01 SEC20: SEC20
0x50032D48 C   FIELD 21w01 SEC21: SEC21
0x50032D48 C   FIELD 22w01 SEC22: SEC22
0x50032D48 C   FIELD 23w01 SEC23: SEC23
0x50032D48 C   FIELD 24w01 SEC24: SEC24
0x50032D48 C   FIELD 25w01 SEC25: SEC25
0x50032D48 C   FIELD 26w01 SEC26: SEC26
0x50032D48 C   FIELD 27w01 SEC27: SEC27
0x50032D48 C   FIELD 28w01 SEC28: SEC28
0x50032D48 C   FIELD 29w01 SEC29: SEC29
0x50032D48 C   FIELD 30w01 SEC30: SEC30
0x50032D48 C   FIELD 31w01 SEC31: SEC31
0x50032D4C B  REGISTER MPCBB1_SECCFGR19 (rw): MPCBBx security configuration for super-block x register
0x50032D4C C   FIELD 00w01 SEC0: SEC0
0x50032D4C C   FIELD 01w01 SEC1: SEC1
0x50032D4C C   FIELD 02w01 SEC2: SEC2
0x50032D4C C   FIELD 03w01 SEC3: SEC3
0x50032D4C C   FIELD 04w01 SEC4: SEC4
0x50032D4C C   FIELD 05w01 SEC5: SEC5
0x50032D4C C   FIELD 06w01 SEC6: SEC6
0x50032D4C C   FIELD 07w01 SEC7: SEC7
0x50032D4C C   FIELD 08w01 SEC8: SEC8
0x50032D4C C   FIELD 09w01 SEC9: SEC9
0x50032D4C C   FIELD 10w01 SEC10: SEC10
0x50032D4C C   FIELD 11w01 SEC11: SEC11
0x50032D4C C   FIELD 12w01 SEC12: SEC12
0x50032D4C C   FIELD 13w01 SEC13: SEC13
0x50032D4C C   FIELD 14w01 SEC14: SEC14
0x50032D4C C   FIELD 15w01 SEC15: SEC15
0x50032D4C C   FIELD 16w01 SEC16: SEC16
0x50032D4C C   FIELD 17w01 SEC17: SEC17
0x50032D4C C   FIELD 18w01 SEC18: SEC18
0x50032D4C C   FIELD 19w01 SEC19: SEC19
0x50032D4C C   FIELD 20w01 SEC20: SEC20
0x50032D4C C   FIELD 21w01 SEC21: SEC21
0x50032D4C C   FIELD 22w01 SEC22: SEC22
0x50032D4C C   FIELD 23w01 SEC23: SEC23
0x50032D4C C   FIELD 24w01 SEC24: SEC24
0x50032D4C C   FIELD 25w01 SEC25: SEC25
0x50032D4C C   FIELD 26w01 SEC26: SEC26
0x50032D4C C   FIELD 27w01 SEC27: SEC27
0x50032D4C C   FIELD 28w01 SEC28: SEC28
0x50032D4C C   FIELD 29w01 SEC29: SEC29
0x50032D4C C   FIELD 30w01 SEC30: SEC30
0x50032D4C C   FIELD 31w01 SEC31: SEC31
0x50032D50 B  REGISTER MPCBB1_SECCFGR20 (rw): MPCBBx security configuration for super-block x register
0x50032D50 C   FIELD 00w01 SEC0: SEC0
0x50032D50 C   FIELD 01w01 SEC1: SEC1
0x50032D50 C   FIELD 02w01 SEC2: SEC2
0x50032D50 C   FIELD 03w01 SEC3: SEC3
0x50032D50 C   FIELD 04w01 SEC4: SEC4
0x50032D50 C   FIELD 05w01 SEC5: SEC5
0x50032D50 C   FIELD 06w01 SEC6: SEC6
0x50032D50 C   FIELD 07w01 SEC7: SEC7
0x50032D50 C   FIELD 08w01 SEC8: SEC8
0x50032D50 C   FIELD 09w01 SEC9: SEC9
0x50032D50 C   FIELD 10w01 SEC10: SEC10
0x50032D50 C   FIELD 11w01 SEC11: SEC11
0x50032D50 C   FIELD 12w01 SEC12: SEC12
0x50032D50 C   FIELD 13w01 SEC13: SEC13
0x50032D50 C   FIELD 14w01 SEC14: SEC14
0x50032D50 C   FIELD 15w01 SEC15: SEC15
0x50032D50 C   FIELD 16w01 SEC16: SEC16
0x50032D50 C   FIELD 17w01 SEC17: SEC17
0x50032D50 C   FIELD 18w01 SEC18: SEC18
0x50032D50 C   FIELD 19w01 SEC19: SEC19
0x50032D50 C   FIELD 20w01 SEC20: SEC20
0x50032D50 C   FIELD 21w01 SEC21: SEC21
0x50032D50 C   FIELD 22w01 SEC22: SEC22
0x50032D50 C   FIELD 23w01 SEC23: SEC23
0x50032D50 C   FIELD 24w01 SEC24: SEC24
0x50032D50 C   FIELD 25w01 SEC25: SEC25
0x50032D50 C   FIELD 26w01 SEC26: SEC26
0x50032D50 C   FIELD 27w01 SEC27: SEC27
0x50032D50 C   FIELD 28w01 SEC28: SEC28
0x50032D50 C   FIELD 29w01 SEC29: SEC29
0x50032D50 C   FIELD 30w01 SEC30: SEC30
0x50032D50 C   FIELD 31w01 SEC31: SEC31
0x50032D54 B  REGISTER MPCBB1_SECCFGR21 (rw): MPCBBx security configuration for super-block x register
0x50032D54 C   FIELD 00w01 SEC0: SEC0
0x50032D54 C   FIELD 01w01 SEC1: SEC1
0x50032D54 C   FIELD 02w01 SEC2: SEC2
0x50032D54 C   FIELD 03w01 SEC3: SEC3
0x50032D54 C   FIELD 04w01 SEC4: SEC4
0x50032D54 C   FIELD 05w01 SEC5: SEC5
0x50032D54 C   FIELD 06w01 SEC6: SEC6
0x50032D54 C   FIELD 07w01 SEC7: SEC7
0x50032D54 C   FIELD 08w01 SEC8: SEC8
0x50032D54 C   FIELD 09w01 SEC9: SEC9
0x50032D54 C   FIELD 10w01 SEC10: SEC10
0x50032D54 C   FIELD 11w01 SEC11: SEC11
0x50032D54 C   FIELD 12w01 SEC12: SEC12
0x50032D54 C   FIELD 13w01 SEC13: SEC13
0x50032D54 C   FIELD 14w01 SEC14: SEC14
0x50032D54 C   FIELD 15w01 SEC15: SEC15
0x50032D54 C   FIELD 16w01 SEC16: SEC16
0x50032D54 C   FIELD 17w01 SEC17: SEC17
0x50032D54 C   FIELD 18w01 SEC18: SEC18
0x50032D54 C   FIELD 19w01 SEC19: SEC19
0x50032D54 C   FIELD 20w01 SEC20: SEC20
0x50032D54 C   FIELD 21w01 SEC21: SEC21
0x50032D54 C   FIELD 22w01 SEC22: SEC22
0x50032D54 C   FIELD 23w01 SEC23: SEC23
0x50032D54 C   FIELD 24w01 SEC24: SEC24
0x50032D54 C   FIELD 25w01 SEC25: SEC25
0x50032D54 C   FIELD 26w01 SEC26: SEC26
0x50032D54 C   FIELD 27w01 SEC27: SEC27
0x50032D54 C   FIELD 28w01 SEC28: SEC28
0x50032D54 C   FIELD 29w01 SEC29: SEC29
0x50032D54 C   FIELD 30w01 SEC30: SEC30
0x50032D54 C   FIELD 31w01 SEC31: SEC31
0x50032D58 B  REGISTER MPCBB1_SECCFGR22 (rw): MPCBBx security configuration for super-block x register
0x50032D58 C   FIELD 00w01 SEC0: SEC0
0x50032D58 C   FIELD 01w01 SEC1: SEC1
0x50032D58 C   FIELD 02w01 SEC2: SEC2
0x50032D58 C   FIELD 03w01 SEC3: SEC3
0x50032D58 C   FIELD 04w01 SEC4: SEC4
0x50032D58 C   FIELD 05w01 SEC5: SEC5
0x50032D58 C   FIELD 06w01 SEC6: SEC6
0x50032D58 C   FIELD 07w01 SEC7: SEC7
0x50032D58 C   FIELD 08w01 SEC8: SEC8
0x50032D58 C   FIELD 09w01 SEC9: SEC9
0x50032D58 C   FIELD 10w01 SEC10: SEC10
0x50032D58 C   FIELD 11w01 SEC11: SEC11
0x50032D58 C   FIELD 12w01 SEC12: SEC12
0x50032D58 C   FIELD 13w01 SEC13: SEC13
0x50032D58 C   FIELD 14w01 SEC14: SEC14
0x50032D58 C   FIELD 15w01 SEC15: SEC15
0x50032D58 C   FIELD 16w01 SEC16: SEC16
0x50032D58 C   FIELD 17w01 SEC17: SEC17
0x50032D58 C   FIELD 18w01 SEC18: SEC18
0x50032D58 C   FIELD 19w01 SEC19: SEC19
0x50032D58 C   FIELD 20w01 SEC20: SEC20
0x50032D58 C   FIELD 21w01 SEC21: SEC21
0x50032D58 C   FIELD 22w01 SEC22: SEC22
0x50032D58 C   FIELD 23w01 SEC23: SEC23
0x50032D58 C   FIELD 24w01 SEC24: SEC24
0x50032D58 C   FIELD 25w01 SEC25: SEC25
0x50032D58 C   FIELD 26w01 SEC26: SEC26
0x50032D58 C   FIELD 27w01 SEC27: SEC27
0x50032D58 C   FIELD 28w01 SEC28: SEC28
0x50032D58 C   FIELD 29w01 SEC29: SEC29
0x50032D58 C   FIELD 30w01 SEC30: SEC30
0x50032D58 C   FIELD 31w01 SEC31: SEC31
0x50032D5C B  REGISTER MPCBB1_SECCFGR23 (rw): MPCBBx security configuration for super-block x register
0x50032D5C C   FIELD 00w01 SEC0: SEC0
0x50032D5C C   FIELD 01w01 SEC1: SEC1
0x50032D5C C   FIELD 02w01 SEC2: SEC2
0x50032D5C C   FIELD 03w01 SEC3: SEC3
0x50032D5C C   FIELD 04w01 SEC4: SEC4
0x50032D5C C   FIELD 05w01 SEC5: SEC5
0x50032D5C C   FIELD 06w01 SEC6: SEC6
0x50032D5C C   FIELD 07w01 SEC7: SEC7
0x50032D5C C   FIELD 08w01 SEC8: SEC8
0x50032D5C C   FIELD 09w01 SEC9: SEC9
0x50032D5C C   FIELD 10w01 SEC10: SEC10
0x50032D5C C   FIELD 11w01 SEC11: SEC11
0x50032D5C C   FIELD 12w01 SEC12: SEC12
0x50032D5C C   FIELD 13w01 SEC13: SEC13
0x50032D5C C   FIELD 14w01 SEC14: SEC14
0x50032D5C C   FIELD 15w01 SEC15: SEC15
0x50032D5C C   FIELD 16w01 SEC16: SEC16
0x50032D5C C   FIELD 17w01 SEC17: SEC17
0x50032D5C C   FIELD 18w01 SEC18: SEC18
0x50032D5C C   FIELD 19w01 SEC19: SEC19
0x50032D5C C   FIELD 20w01 SEC20: SEC20
0x50032D5C C   FIELD 21w01 SEC21: SEC21
0x50032D5C C   FIELD 22w01 SEC22: SEC22
0x50032D5C C   FIELD 23w01 SEC23: SEC23
0x50032D5C C   FIELD 24w01 SEC24: SEC24
0x50032D5C C   FIELD 25w01 SEC25: SEC25
0x50032D5C C   FIELD 26w01 SEC26: SEC26
0x50032D5C C   FIELD 27w01 SEC27: SEC27
0x50032D5C C   FIELD 28w01 SEC28: SEC28
0x50032D5C C   FIELD 29w01 SEC29: SEC29
0x50032D5C C   FIELD 30w01 SEC30: SEC30
0x50032D5C C   FIELD 31w01 SEC31: SEC31
0x50032D60 B  REGISTER MPCBB1_SECCFGR24 (rw): MPCBBx security configuration for super-block x register
0x50032D60 C   FIELD 00w01 SEC0: SEC0
0x50032D60 C   FIELD 01w01 SEC1: SEC1
0x50032D60 C   FIELD 02w01 SEC2: SEC2
0x50032D60 C   FIELD 03w01 SEC3: SEC3
0x50032D60 C   FIELD 04w01 SEC4: SEC4
0x50032D60 C   FIELD 05w01 SEC5: SEC5
0x50032D60 C   FIELD 06w01 SEC6: SEC6
0x50032D60 C   FIELD 07w01 SEC7: SEC7
0x50032D60 C   FIELD 08w01 SEC8: SEC8
0x50032D60 C   FIELD 09w01 SEC9: SEC9
0x50032D60 C   FIELD 10w01 SEC10: SEC10
0x50032D60 C   FIELD 11w01 SEC11: SEC11
0x50032D60 C   FIELD 12w01 SEC12: SEC12
0x50032D60 C   FIELD 13w01 SEC13: SEC13
0x50032D60 C   FIELD 14w01 SEC14: SEC14
0x50032D60 C   FIELD 15w01 SEC15: SEC15
0x50032D60 C   FIELD 16w01 SEC16: SEC16
0x50032D60 C   FIELD 17w01 SEC17: SEC17
0x50032D60 C   FIELD 18w01 SEC18: SEC18
0x50032D60 C   FIELD 19w01 SEC19: SEC19
0x50032D60 C   FIELD 20w01 SEC20: SEC20
0x50032D60 C   FIELD 21w01 SEC21: SEC21
0x50032D60 C   FIELD 22w01 SEC22: SEC22
0x50032D60 C   FIELD 23w01 SEC23: SEC23
0x50032D60 C   FIELD 24w01 SEC24: SEC24
0x50032D60 C   FIELD 25w01 SEC25: SEC25
0x50032D60 C   FIELD 26w01 SEC26: SEC26
0x50032D60 C   FIELD 27w01 SEC27: SEC27
0x50032D60 C   FIELD 28w01 SEC28: SEC28
0x50032D60 C   FIELD 29w01 SEC29: SEC29
0x50032D60 C   FIELD 30w01 SEC30: SEC30
0x50032D60 C   FIELD 31w01 SEC31: SEC31
0x50032D64 B  REGISTER MPCBB1_SECCFGR25 (rw): MPCBBx security configuration for super-block x register
0x50032D64 C   FIELD 00w01 SEC0: SEC0
0x50032D64 C   FIELD 01w01 SEC1: SEC1
0x50032D64 C   FIELD 02w01 SEC2: SEC2
0x50032D64 C   FIELD 03w01 SEC3: SEC3
0x50032D64 C   FIELD 04w01 SEC4: SEC4
0x50032D64 C   FIELD 05w01 SEC5: SEC5
0x50032D64 C   FIELD 06w01 SEC6: SEC6
0x50032D64 C   FIELD 07w01 SEC7: SEC7
0x50032D64 C   FIELD 08w01 SEC8: SEC8
0x50032D64 C   FIELD 09w01 SEC9: SEC9
0x50032D64 C   FIELD 10w01 SEC10: SEC10
0x50032D64 C   FIELD 11w01 SEC11: SEC11
0x50032D64 C   FIELD 12w01 SEC12: SEC12
0x50032D64 C   FIELD 13w01 SEC13: SEC13
0x50032D64 C   FIELD 14w01 SEC14: SEC14
0x50032D64 C   FIELD 15w01 SEC15: SEC15
0x50032D64 C   FIELD 16w01 SEC16: SEC16
0x50032D64 C   FIELD 17w01 SEC17: SEC17
0x50032D64 C   FIELD 18w01 SEC18: SEC18
0x50032D64 C   FIELD 19w01 SEC19: SEC19
0x50032D64 C   FIELD 20w01 SEC20: SEC20
0x50032D64 C   FIELD 21w01 SEC21: SEC21
0x50032D64 C   FIELD 22w01 SEC22: SEC22
0x50032D64 C   FIELD 23w01 SEC23: SEC23
0x50032D64 C   FIELD 24w01 SEC24: SEC24
0x50032D64 C   FIELD 25w01 SEC25: SEC25
0x50032D64 C   FIELD 26w01 SEC26: SEC26
0x50032D64 C   FIELD 27w01 SEC27: SEC27
0x50032D64 C   FIELD 28w01 SEC28: SEC28
0x50032D64 C   FIELD 29w01 SEC29: SEC29
0x50032D64 C   FIELD 30w01 SEC30: SEC30
0x50032D64 C   FIELD 31w01 SEC31: SEC31
0x50032D68 B  REGISTER MPCBB1_SECCFGR26 (rw): MPCBBx security configuration for super-block x register
0x50032D68 C   FIELD 00w01 SEC0: SEC0
0x50032D68 C   FIELD 01w01 SEC1: SEC1
0x50032D68 C   FIELD 02w01 SEC2: SEC2
0x50032D68 C   FIELD 03w01 SEC3: SEC3
0x50032D68 C   FIELD 04w01 SEC4: SEC4
0x50032D68 C   FIELD 05w01 SEC5: SEC5
0x50032D68 C   FIELD 06w01 SEC6: SEC6
0x50032D68 C   FIELD 07w01 SEC7: SEC7
0x50032D68 C   FIELD 08w01 SEC8: SEC8
0x50032D68 C   FIELD 09w01 SEC9: SEC9
0x50032D68 C   FIELD 10w01 SEC10: SEC10
0x50032D68 C   FIELD 11w01 SEC11: SEC11
0x50032D68 C   FIELD 12w01 SEC12: SEC12
0x50032D68 C   FIELD 13w01 SEC13: SEC13
0x50032D68 C   FIELD 14w01 SEC14: SEC14
0x50032D68 C   FIELD 15w01 SEC15: SEC15
0x50032D68 C   FIELD 16w01 SEC16: SEC16
0x50032D68 C   FIELD 17w01 SEC17: SEC17
0x50032D68 C   FIELD 18w01 SEC18: SEC18
0x50032D68 C   FIELD 19w01 SEC19: SEC19
0x50032D68 C   FIELD 20w01 SEC20: SEC20
0x50032D68 C   FIELD 21w01 SEC21: SEC21
0x50032D68 C   FIELD 22w01 SEC22: SEC22
0x50032D68 C   FIELD 23w01 SEC23: SEC23
0x50032D68 C   FIELD 24w01 SEC24: SEC24
0x50032D68 C   FIELD 25w01 SEC25: SEC25
0x50032D68 C   FIELD 26w01 SEC26: SEC26
0x50032D68 C   FIELD 27w01 SEC27: SEC27
0x50032D68 C   FIELD 28w01 SEC28: SEC28
0x50032D68 C   FIELD 29w01 SEC29: SEC29
0x50032D68 C   FIELD 30w01 SEC30: SEC30
0x50032D68 C   FIELD 31w01 SEC31: SEC31
0x50032D6C B  REGISTER MPCBB1_SECCFGR27 (rw): MPCBBx security configuration for super-block x register
0x50032D6C C   FIELD 00w01 SEC0: SEC0
0x50032D6C C   FIELD 01w01 SEC1: SEC1
0x50032D6C C   FIELD 02w01 SEC2: SEC2
0x50032D6C C   FIELD 03w01 SEC3: SEC3
0x50032D6C C   FIELD 04w01 SEC4: SEC4
0x50032D6C C   FIELD 05w01 SEC5: SEC5
0x50032D6C C   FIELD 06w01 SEC6: SEC6
0x50032D6C C   FIELD 07w01 SEC7: SEC7
0x50032D6C C   FIELD 08w01 SEC8: SEC8
0x50032D6C C   FIELD 09w01 SEC9: SEC9
0x50032D6C C   FIELD 10w01 SEC10: SEC10
0x50032D6C C   FIELD 11w01 SEC11: SEC11
0x50032D6C C   FIELD 12w01 SEC12: SEC12
0x50032D6C C   FIELD 13w01 SEC13: SEC13
0x50032D6C C   FIELD 14w01 SEC14: SEC14
0x50032D6C C   FIELD 15w01 SEC15: SEC15
0x50032D6C C   FIELD 16w01 SEC16: SEC16
0x50032D6C C   FIELD 17w01 SEC17: SEC17
0x50032D6C C   FIELD 18w01 SEC18: SEC18
0x50032D6C C   FIELD 19w01 SEC19: SEC19
0x50032D6C C   FIELD 20w01 SEC20: SEC20
0x50032D6C C   FIELD 21w01 SEC21: SEC21
0x50032D6C C   FIELD 22w01 SEC22: SEC22
0x50032D6C C   FIELD 23w01 SEC23: SEC23
0x50032D6C C   FIELD 24w01 SEC24: SEC24
0x50032D6C C   FIELD 25w01 SEC25: SEC25
0x50032D6C C   FIELD 26w01 SEC26: SEC26
0x50032D6C C   FIELD 27w01 SEC27: SEC27
0x50032D6C C   FIELD 28w01 SEC28: SEC28
0x50032D6C C   FIELD 29w01 SEC29: SEC29
0x50032D6C C   FIELD 30w01 SEC30: SEC30
0x50032D6C C   FIELD 31w01 SEC31: SEC31
0x50032D70 B  REGISTER MPCBB1_SECCFGR28 (rw): MPCBBx security configuration for super-block x register
0x50032D70 C   FIELD 00w01 SEC0: SEC0
0x50032D70 C   FIELD 01w01 SEC1: SEC1
0x50032D70 C   FIELD 02w01 SEC2: SEC2
0x50032D70 C   FIELD 03w01 SEC3: SEC3
0x50032D70 C   FIELD 04w01 SEC4: SEC4
0x50032D70 C   FIELD 05w01 SEC5: SEC5
0x50032D70 C   FIELD 06w01 SEC6: SEC6
0x50032D70 C   FIELD 07w01 SEC7: SEC7
0x50032D70 C   FIELD 08w01 SEC8: SEC8
0x50032D70 C   FIELD 09w01 SEC9: SEC9
0x50032D70 C   FIELD 10w01 SEC10: SEC10
0x50032D70 C   FIELD 11w01 SEC11: SEC11
0x50032D70 C   FIELD 12w01 SEC12: SEC12
0x50032D70 C   FIELD 13w01 SEC13: SEC13
0x50032D70 C   FIELD 14w01 SEC14: SEC14
0x50032D70 C   FIELD 15w01 SEC15: SEC15
0x50032D70 C   FIELD 16w01 SEC16: SEC16
0x50032D70 C   FIELD 17w01 SEC17: SEC17
0x50032D70 C   FIELD 18w01 SEC18: SEC18
0x50032D70 C   FIELD 19w01 SEC19: SEC19
0x50032D70 C   FIELD 20w01 SEC20: SEC20
0x50032D70 C   FIELD 21w01 SEC21: SEC21
0x50032D70 C   FIELD 22w01 SEC22: SEC22
0x50032D70 C   FIELD 23w01 SEC23: SEC23
0x50032D70 C   FIELD 24w01 SEC24: SEC24
0x50032D70 C   FIELD 25w01 SEC25: SEC25
0x50032D70 C   FIELD 26w01 SEC26: SEC26
0x50032D70 C   FIELD 27w01 SEC27: SEC27
0x50032D70 C   FIELD 28w01 SEC28: SEC28
0x50032D70 C   FIELD 29w01 SEC29: SEC29
0x50032D70 C   FIELD 30w01 SEC30: SEC30
0x50032D70 C   FIELD 31w01 SEC31: SEC31
0x50032D74 B  REGISTER MPCBB1_SECCFGR29 (rw): MPCBBx security configuration for super-block x register
0x50032D74 C   FIELD 00w01 SEC0: SEC0
0x50032D74 C   FIELD 01w01 SEC1: SEC1
0x50032D74 C   FIELD 02w01 SEC2: SEC2
0x50032D74 C   FIELD 03w01 SEC3: SEC3
0x50032D74 C   FIELD 04w01 SEC4: SEC4
0x50032D74 C   FIELD 05w01 SEC5: SEC5
0x50032D74 C   FIELD 06w01 SEC6: SEC6
0x50032D74 C   FIELD 07w01 SEC7: SEC7
0x50032D74 C   FIELD 08w01 SEC8: SEC8
0x50032D74 C   FIELD 09w01 SEC9: SEC9
0x50032D74 C   FIELD 10w01 SEC10: SEC10
0x50032D74 C   FIELD 11w01 SEC11: SEC11
0x50032D74 C   FIELD 12w01 SEC12: SEC12
0x50032D74 C   FIELD 13w01 SEC13: SEC13
0x50032D74 C   FIELD 14w01 SEC14: SEC14
0x50032D74 C   FIELD 15w01 SEC15: SEC15
0x50032D74 C   FIELD 16w01 SEC16: SEC16
0x50032D74 C   FIELD 17w01 SEC17: SEC17
0x50032D74 C   FIELD 18w01 SEC18: SEC18
0x50032D74 C   FIELD 19w01 SEC19: SEC19
0x50032D74 C   FIELD 20w01 SEC20: SEC20
0x50032D74 C   FIELD 21w01 SEC21: SEC21
0x50032D74 C   FIELD 22w01 SEC22: SEC22
0x50032D74 C   FIELD 23w01 SEC23: SEC23
0x50032D74 C   FIELD 24w01 SEC24: SEC24
0x50032D74 C   FIELD 25w01 SEC25: SEC25
0x50032D74 C   FIELD 26w01 SEC26: SEC26
0x50032D74 C   FIELD 27w01 SEC27: SEC27
0x50032D74 C   FIELD 28w01 SEC28: SEC28
0x50032D74 C   FIELD 29w01 SEC29: SEC29
0x50032D74 C   FIELD 30w01 SEC30: SEC30
0x50032D74 C   FIELD 31w01 SEC31: SEC31
0x50032D78 B  REGISTER MPCBB1_SECCFGR30 (rw): MPCBBx security configuration for super-block x register
0x50032D78 C   FIELD 00w01 SEC0: SEC0
0x50032D78 C   FIELD 01w01 SEC1: SEC1
0x50032D78 C   FIELD 02w01 SEC2: SEC2
0x50032D78 C   FIELD 03w01 SEC3: SEC3
0x50032D78 C   FIELD 04w01 SEC4: SEC4
0x50032D78 C   FIELD 05w01 SEC5: SEC5
0x50032D78 C   FIELD 06w01 SEC6: SEC6
0x50032D78 C   FIELD 07w01 SEC7: SEC7
0x50032D78 C   FIELD 08w01 SEC8: SEC8
0x50032D78 C   FIELD 09w01 SEC9: SEC9
0x50032D78 C   FIELD 10w01 SEC10: SEC10
0x50032D78 C   FIELD 11w01 SEC11: SEC11
0x50032D78 C   FIELD 12w01 SEC12: SEC12
0x50032D78 C   FIELD 13w01 SEC13: SEC13
0x50032D78 C   FIELD 14w01 SEC14: SEC14
0x50032D78 C   FIELD 15w01 SEC15: SEC15
0x50032D78 C   FIELD 16w01 SEC16: SEC16
0x50032D78 C   FIELD 17w01 SEC17: SEC17
0x50032D78 C   FIELD 18w01 SEC18: SEC18
0x50032D78 C   FIELD 19w01 SEC19: SEC19
0x50032D78 C   FIELD 20w01 SEC20: SEC20
0x50032D78 C   FIELD 21w01 SEC21: SEC21
0x50032D78 C   FIELD 22w01 SEC22: SEC22
0x50032D78 C   FIELD 23w01 SEC23: SEC23
0x50032D78 C   FIELD 24w01 SEC24: SEC24
0x50032D78 C   FIELD 25w01 SEC25: SEC25
0x50032D78 C   FIELD 26w01 SEC26: SEC26
0x50032D78 C   FIELD 27w01 SEC27: SEC27
0x50032D78 C   FIELD 28w01 SEC28: SEC28
0x50032D78 C   FIELD 29w01 SEC29: SEC29
0x50032D78 C   FIELD 30w01 SEC30: SEC30
0x50032D78 C   FIELD 31w01 SEC31: SEC31
0x50032D7C B  REGISTER MPCBB1_SECCFGR31 (rw): MPCBBx security configuration for super-block x register
0x50032D7C C   FIELD 00w01 SEC0: SEC0
0x50032D7C C   FIELD 01w01 SEC1: SEC1
0x50032D7C C   FIELD 02w01 SEC2: SEC2
0x50032D7C C   FIELD 03w01 SEC3: SEC3
0x50032D7C C   FIELD 04w01 SEC4: SEC4
0x50032D7C C   FIELD 05w01 SEC5: SEC5
0x50032D7C C   FIELD 06w01 SEC6: SEC6
0x50032D7C C   FIELD 07w01 SEC7: SEC7
0x50032D7C C   FIELD 08w01 SEC8: SEC8
0x50032D7C C   FIELD 09w01 SEC9: SEC9
0x50032D7C C   FIELD 10w01 SEC10: SEC10
0x50032D7C C   FIELD 11w01 SEC11: SEC11
0x50032D7C C   FIELD 12w01 SEC12: SEC12
0x50032D7C C   FIELD 13w01 SEC13: SEC13
0x50032D7C C   FIELD 14w01 SEC14: SEC14
0x50032D7C C   FIELD 15w01 SEC15: SEC15
0x50032D7C C   FIELD 16w01 SEC16: SEC16
0x50032D7C C   FIELD 17w01 SEC17: SEC17
0x50032D7C C   FIELD 18w01 SEC18: SEC18
0x50032D7C C   FIELD 19w01 SEC19: SEC19
0x50032D7C C   FIELD 20w01 SEC20: SEC20
0x50032D7C C   FIELD 21w01 SEC21: SEC21
0x50032D7C C   FIELD 22w01 SEC22: SEC22
0x50032D7C C   FIELD 23w01 SEC23: SEC23
0x50032D7C C   FIELD 24w01 SEC24: SEC24
0x50032D7C C   FIELD 25w01 SEC25: SEC25
0x50032D7C C   FIELD 26w01 SEC26: SEC26
0x50032D7C C   FIELD 27w01 SEC27: SEC27
0x50032D7C C   FIELD 28w01 SEC28: SEC28
0x50032D7C C   FIELD 29w01 SEC29: SEC29
0x50032D7C C   FIELD 30w01 SEC30: SEC30
0x50032D7C C   FIELD 31w01 SEC31: SEC31
0x50032E00 B  REGISTER MPCBB1_PRIVCFGR0 (rw): MPCBB privileged configuration for super-block x register
0x50032E00 C   FIELD 00w01 PRIV0: PRIV0
0x50032E00 C   FIELD 01w01 PRIV1: PRIV1
0x50032E00 C   FIELD 02w01 PRIV2: PRIV2
0x50032E00 C   FIELD 03w01 PRIV3: PRIV3
0x50032E00 C   FIELD 04w01 PRIV4: PRIV4
0x50032E00 C   FIELD 05w01 PRIV5: PRIV5
0x50032E00 C   FIELD 06w01 PRIV6: PRIV6
0x50032E00 C   FIELD 07w01 PRIV7: PRIV7
0x50032E00 C   FIELD 08w01 PRIV8: PRIV8
0x50032E00 C   FIELD 09w01 PRIV9: PRIV9
0x50032E00 C   FIELD 10w01 PRIV10: PRIV10
0x50032E00 C   FIELD 11w01 PRIV11: PRIV11
0x50032E00 C   FIELD 12w01 PRIV12: PRIV12
0x50032E00 C   FIELD 13w01 PRIV13: PRIV13
0x50032E00 C   FIELD 14w01 PRIV14: PRIV14
0x50032E00 C   FIELD 15w01 PRIV15: PRIV15
0x50032E00 C   FIELD 16w01 PRIV16: PRIV16
0x50032E00 C   FIELD 17w01 PRIV17: PRIV17
0x50032E00 C   FIELD 18w01 PRIV18: PRIV18
0x50032E00 C   FIELD 19w01 PRIV19: PRIV19
0x50032E00 C   FIELD 20w01 PRIV20: PRIV20
0x50032E00 C   FIELD 21w01 PRIV21: PRIV21
0x50032E00 C   FIELD 22w01 PRIV22: PRIV22
0x50032E00 C   FIELD 23w01 PRIV23: PRIV23
0x50032E00 C   FIELD 24w01 PRIV24: PRIV24
0x50032E00 C   FIELD 25w01 PRIV25: PRIV25
0x50032E00 C   FIELD 26w01 PRIV26: PRIV26
0x50032E00 C   FIELD 27w01 PRIV27: PRIV27
0x50032E00 C   FIELD 28w01 PRIV28: PRIV28
0x50032E00 C   FIELD 29w01 PRIV29: PRIV29
0x50032E00 C   FIELD 30w01 PRIV30: PRIV30
0x50032E00 C   FIELD 31w01 PRIV31: PRIV31
0x50032E04 B  REGISTER MPCBB1_PRIVCFGR1 (rw): MPCBB privileged configuration for super-block x register
0x50032E04 C   FIELD 00w01 PRIV0: PRIV0
0x50032E04 C   FIELD 01w01 PRIV1: PRIV1
0x50032E04 C   FIELD 02w01 PRIV2: PRIV2
0x50032E04 C   FIELD 03w01 PRIV3: PRIV3
0x50032E04 C   FIELD 04w01 PRIV4: PRIV4
0x50032E04 C   FIELD 05w01 PRIV5: PRIV5
0x50032E04 C   FIELD 06w01 PRIV6: PRIV6
0x50032E04 C   FIELD 07w01 PRIV7: PRIV7
0x50032E04 C   FIELD 08w01 PRIV8: PRIV8
0x50032E04 C   FIELD 09w01 PRIV9: PRIV9
0x50032E04 C   FIELD 10w01 PRIV10: PRIV10
0x50032E04 C   FIELD 11w01 PRIV11: PRIV11
0x50032E04 C   FIELD 12w01 PRIV12: PRIV12
0x50032E04 C   FIELD 13w01 PRIV13: PRIV13
0x50032E04 C   FIELD 14w01 PRIV14: PRIV14
0x50032E04 C   FIELD 15w01 PRIV15: PRIV15
0x50032E04 C   FIELD 16w01 PRIV16: PRIV16
0x50032E04 C   FIELD 17w01 PRIV17: PRIV17
0x50032E04 C   FIELD 18w01 PRIV18: PRIV18
0x50032E04 C   FIELD 19w01 PRIV19: PRIV19
0x50032E04 C   FIELD 20w01 PRIV20: PRIV20
0x50032E04 C   FIELD 21w01 PRIV21: PRIV21
0x50032E04 C   FIELD 22w01 PRIV22: PRIV22
0x50032E04 C   FIELD 23w01 PRIV23: PRIV23
0x50032E04 C   FIELD 24w01 PRIV24: PRIV24
0x50032E04 C   FIELD 25w01 PRIV25: PRIV25
0x50032E04 C   FIELD 26w01 PRIV26: PRIV26
0x50032E04 C   FIELD 27w01 PRIV27: PRIV27
0x50032E04 C   FIELD 28w01 PRIV28: PRIV28
0x50032E04 C   FIELD 29w01 PRIV29: PRIV29
0x50032E04 C   FIELD 30w01 PRIV30: PRIV30
0x50032E04 C   FIELD 31w01 PRIV31: PRIV31
0x50032E08 B  REGISTER MPCBB1_PRIVCFGR2 (rw): MPCBB privileged configuration for super-block x register
0x50032E08 C   FIELD 00w01 PRIV0: PRIV0
0x50032E08 C   FIELD 01w01 PRIV1: PRIV1
0x50032E08 C   FIELD 02w01 PRIV2: PRIV2
0x50032E08 C   FIELD 03w01 PRIV3: PRIV3
0x50032E08 C   FIELD 04w01 PRIV4: PRIV4
0x50032E08 C   FIELD 05w01 PRIV5: PRIV5
0x50032E08 C   FIELD 06w01 PRIV6: PRIV6
0x50032E08 C   FIELD 07w01 PRIV7: PRIV7
0x50032E08 C   FIELD 08w01 PRIV8: PRIV8
0x50032E08 C   FIELD 09w01 PRIV9: PRIV9
0x50032E08 C   FIELD 10w01 PRIV10: PRIV10
0x50032E08 C   FIELD 11w01 PRIV11: PRIV11
0x50032E08 C   FIELD 12w01 PRIV12: PRIV12
0x50032E08 C   FIELD 13w01 PRIV13: PRIV13
0x50032E08 C   FIELD 14w01 PRIV14: PRIV14
0x50032E08 C   FIELD 15w01 PRIV15: PRIV15
0x50032E08 C   FIELD 16w01 PRIV16: PRIV16
0x50032E08 C   FIELD 17w01 PRIV17: PRIV17
0x50032E08 C   FIELD 18w01 PRIV18: PRIV18
0x50032E08 C   FIELD 19w01 PRIV19: PRIV19
0x50032E08 C   FIELD 20w01 PRIV20: PRIV20
0x50032E08 C   FIELD 21w01 PRIV21: PRIV21
0x50032E08 C   FIELD 22w01 PRIV22: PRIV22
0x50032E08 C   FIELD 23w01 PRIV23: PRIV23
0x50032E08 C   FIELD 24w01 PRIV24: PRIV24
0x50032E08 C   FIELD 25w01 PRIV25: PRIV25
0x50032E08 C   FIELD 26w01 PRIV26: PRIV26
0x50032E08 C   FIELD 27w01 PRIV27: PRIV27
0x50032E08 C   FIELD 28w01 PRIV28: PRIV28
0x50032E08 C   FIELD 29w01 PRIV29: PRIV29
0x50032E08 C   FIELD 30w01 PRIV30: PRIV30
0x50032E08 C   FIELD 31w01 PRIV31: PRIV31
0x50032E0C B  REGISTER MPCBB1_PRIVCFGR3 (rw): MPCBB privileged configuration for super-block x register
0x50032E0C C   FIELD 00w01 PRIV0: PRIV0
0x50032E0C C   FIELD 01w01 PRIV1: PRIV1
0x50032E0C C   FIELD 02w01 PRIV2: PRIV2
0x50032E0C C   FIELD 03w01 PRIV3: PRIV3
0x50032E0C C   FIELD 04w01 PRIV4: PRIV4
0x50032E0C C   FIELD 05w01 PRIV5: PRIV5
0x50032E0C C   FIELD 06w01 PRIV6: PRIV6
0x50032E0C C   FIELD 07w01 PRIV7: PRIV7
0x50032E0C C   FIELD 08w01 PRIV8: PRIV8
0x50032E0C C   FIELD 09w01 PRIV9: PRIV9
0x50032E0C C   FIELD 10w01 PRIV10: PRIV10
0x50032E0C C   FIELD 11w01 PRIV11: PRIV11
0x50032E0C C   FIELD 12w01 PRIV12: PRIV12
0x50032E0C C   FIELD 13w01 PRIV13: PRIV13
0x50032E0C C   FIELD 14w01 PRIV14: PRIV14
0x50032E0C C   FIELD 15w01 PRIV15: PRIV15
0x50032E0C C   FIELD 16w01 PRIV16: PRIV16
0x50032E0C C   FIELD 17w01 PRIV17: PRIV17
0x50032E0C C   FIELD 18w01 PRIV18: PRIV18
0x50032E0C C   FIELD 19w01 PRIV19: PRIV19
0x50032E0C C   FIELD 20w01 PRIV20: PRIV20
0x50032E0C C   FIELD 21w01 PRIV21: PRIV21
0x50032E0C C   FIELD 22w01 PRIV22: PRIV22
0x50032E0C C   FIELD 23w01 PRIV23: PRIV23
0x50032E0C C   FIELD 24w01 PRIV24: PRIV24
0x50032E0C C   FIELD 25w01 PRIV25: PRIV25
0x50032E0C C   FIELD 26w01 PRIV26: PRIV26
0x50032E0C C   FIELD 27w01 PRIV27: PRIV27
0x50032E0C C   FIELD 28w01 PRIV28: PRIV28
0x50032E0C C   FIELD 29w01 PRIV29: PRIV29
0x50032E0C C   FIELD 30w01 PRIV30: PRIV30
0x50032E0C C   FIELD 31w01 PRIV31: PRIV31
0x50032E10 B  REGISTER MPCBB1_PRIVCFGR4 (rw): MPCBB privileged configuration for super-block x register
0x50032E10 C   FIELD 00w01 PRIV0: PRIV0
0x50032E10 C   FIELD 01w01 PRIV1: PRIV1
0x50032E10 C   FIELD 02w01 PRIV2: PRIV2
0x50032E10 C   FIELD 03w01 PRIV3: PRIV3
0x50032E10 C   FIELD 04w01 PRIV4: PRIV4
0x50032E10 C   FIELD 05w01 PRIV5: PRIV5
0x50032E10 C   FIELD 06w01 PRIV6: PRIV6
0x50032E10 C   FIELD 07w01 PRIV7: PRIV7
0x50032E10 C   FIELD 08w01 PRIV8: PRIV8
0x50032E10 C   FIELD 09w01 PRIV9: PRIV9
0x50032E10 C   FIELD 10w01 PRIV10: PRIV10
0x50032E10 C   FIELD 11w01 PRIV11: PRIV11
0x50032E10 C   FIELD 12w01 PRIV12: PRIV12
0x50032E10 C   FIELD 13w01 PRIV13: PRIV13
0x50032E10 C   FIELD 14w01 PRIV14: PRIV14
0x50032E10 C   FIELD 15w01 PRIV15: PRIV15
0x50032E10 C   FIELD 16w01 PRIV16: PRIV16
0x50032E10 C   FIELD 17w01 PRIV17: PRIV17
0x50032E10 C   FIELD 18w01 PRIV18: PRIV18
0x50032E10 C   FIELD 19w01 PRIV19: PRIV19
0x50032E10 C   FIELD 20w01 PRIV20: PRIV20
0x50032E10 C   FIELD 21w01 PRIV21: PRIV21
0x50032E10 C   FIELD 22w01 PRIV22: PRIV22
0x50032E10 C   FIELD 23w01 PRIV23: PRIV23
0x50032E10 C   FIELD 24w01 PRIV24: PRIV24
0x50032E10 C   FIELD 25w01 PRIV25: PRIV25
0x50032E10 C   FIELD 26w01 PRIV26: PRIV26
0x50032E10 C   FIELD 27w01 PRIV27: PRIV27
0x50032E10 C   FIELD 28w01 PRIV28: PRIV28
0x50032E10 C   FIELD 29w01 PRIV29: PRIV29
0x50032E10 C   FIELD 30w01 PRIV30: PRIV30
0x50032E10 C   FIELD 31w01 PRIV31: PRIV31
0x50032E14 B  REGISTER MPCBB1_PRIVCFGR5 (rw): MPCBB privileged configuration for super-block x register
0x50032E14 C   FIELD 00w01 PRIV0: PRIV0
0x50032E14 C   FIELD 01w01 PRIV1: PRIV1
0x50032E14 C   FIELD 02w01 PRIV2: PRIV2
0x50032E14 C   FIELD 03w01 PRIV3: PRIV3
0x50032E14 C   FIELD 04w01 PRIV4: PRIV4
0x50032E14 C   FIELD 05w01 PRIV5: PRIV5
0x50032E14 C   FIELD 06w01 PRIV6: PRIV6
0x50032E14 C   FIELD 07w01 PRIV7: PRIV7
0x50032E14 C   FIELD 08w01 PRIV8: PRIV8
0x50032E14 C   FIELD 09w01 PRIV9: PRIV9
0x50032E14 C   FIELD 10w01 PRIV10: PRIV10
0x50032E14 C   FIELD 11w01 PRIV11: PRIV11
0x50032E14 C   FIELD 12w01 PRIV12: PRIV12
0x50032E14 C   FIELD 13w01 PRIV13: PRIV13
0x50032E14 C   FIELD 14w01 PRIV14: PRIV14
0x50032E14 C   FIELD 15w01 PRIV15: PRIV15
0x50032E14 C   FIELD 16w01 PRIV16: PRIV16
0x50032E14 C   FIELD 17w01 PRIV17: PRIV17
0x50032E14 C   FIELD 18w01 PRIV18: PRIV18
0x50032E14 C   FIELD 19w01 PRIV19: PRIV19
0x50032E14 C   FIELD 20w01 PRIV20: PRIV20
0x50032E14 C   FIELD 21w01 PRIV21: PRIV21
0x50032E14 C   FIELD 22w01 PRIV22: PRIV22
0x50032E14 C   FIELD 23w01 PRIV23: PRIV23
0x50032E14 C   FIELD 24w01 PRIV24: PRIV24
0x50032E14 C   FIELD 25w01 PRIV25: PRIV25
0x50032E14 C   FIELD 26w01 PRIV26: PRIV26
0x50032E14 C   FIELD 27w01 PRIV27: PRIV27
0x50032E14 C   FIELD 28w01 PRIV28: PRIV28
0x50032E14 C   FIELD 29w01 PRIV29: PRIV29
0x50032E14 C   FIELD 30w01 PRIV30: PRIV30
0x50032E14 C   FIELD 31w01 PRIV31: PRIV31
0x50032E18 B  REGISTER MPCBB1_PRIVCFGR6 (rw): MPCBB privileged configuration for super-block x register
0x50032E18 C   FIELD 00w01 PRIV0: PRIV0
0x50032E18 C   FIELD 01w01 PRIV1: PRIV1
0x50032E18 C   FIELD 02w01 PRIV2: PRIV2
0x50032E18 C   FIELD 03w01 PRIV3: PRIV3
0x50032E18 C   FIELD 04w01 PRIV4: PRIV4
0x50032E18 C   FIELD 05w01 PRIV5: PRIV5
0x50032E18 C   FIELD 06w01 PRIV6: PRIV6
0x50032E18 C   FIELD 07w01 PRIV7: PRIV7
0x50032E18 C   FIELD 08w01 PRIV8: PRIV8
0x50032E18 C   FIELD 09w01 PRIV9: PRIV9
0x50032E18 C   FIELD 10w01 PRIV10: PRIV10
0x50032E18 C   FIELD 11w01 PRIV11: PRIV11
0x50032E18 C   FIELD 12w01 PRIV12: PRIV12
0x50032E18 C   FIELD 13w01 PRIV13: PRIV13
0x50032E18 C   FIELD 14w01 PRIV14: PRIV14
0x50032E18 C   FIELD 15w01 PRIV15: PRIV15
0x50032E18 C   FIELD 16w01 PRIV16: PRIV16
0x50032E18 C   FIELD 17w01 PRIV17: PRIV17
0x50032E18 C   FIELD 18w01 PRIV18: PRIV18
0x50032E18 C   FIELD 19w01 PRIV19: PRIV19
0x50032E18 C   FIELD 20w01 PRIV20: PRIV20
0x50032E18 C   FIELD 21w01 PRIV21: PRIV21
0x50032E18 C   FIELD 22w01 PRIV22: PRIV22
0x50032E18 C   FIELD 23w01 PRIV23: PRIV23
0x50032E18 C   FIELD 24w01 PRIV24: PRIV24
0x50032E18 C   FIELD 25w01 PRIV25: PRIV25
0x50032E18 C   FIELD 26w01 PRIV26: PRIV26
0x50032E18 C   FIELD 27w01 PRIV27: PRIV27
0x50032E18 C   FIELD 28w01 PRIV28: PRIV28
0x50032E18 C   FIELD 29w01 PRIV29: PRIV29
0x50032E18 C   FIELD 30w01 PRIV30: PRIV30
0x50032E18 C   FIELD 31w01 PRIV31: PRIV31
0x50032E1C B  REGISTER MPCBB1_PRIVCFGR7 (rw): MPCBB privileged configuration for super-block x register
0x50032E1C C   FIELD 00w01 PRIV0: PRIV0
0x50032E1C C   FIELD 01w01 PRIV1: PRIV1
0x50032E1C C   FIELD 02w01 PRIV2: PRIV2
0x50032E1C C   FIELD 03w01 PRIV3: PRIV3
0x50032E1C C   FIELD 04w01 PRIV4: PRIV4
0x50032E1C C   FIELD 05w01 PRIV5: PRIV5
0x50032E1C C   FIELD 06w01 PRIV6: PRIV6
0x50032E1C C   FIELD 07w01 PRIV7: PRIV7
0x50032E1C C   FIELD 08w01 PRIV8: PRIV8
0x50032E1C C   FIELD 09w01 PRIV9: PRIV9
0x50032E1C C   FIELD 10w01 PRIV10: PRIV10
0x50032E1C C   FIELD 11w01 PRIV11: PRIV11
0x50032E1C C   FIELD 12w01 PRIV12: PRIV12
0x50032E1C C   FIELD 13w01 PRIV13: PRIV13
0x50032E1C C   FIELD 14w01 PRIV14: PRIV14
0x50032E1C C   FIELD 15w01 PRIV15: PRIV15
0x50032E1C C   FIELD 16w01 PRIV16: PRIV16
0x50032E1C C   FIELD 17w01 PRIV17: PRIV17
0x50032E1C C   FIELD 18w01 PRIV18: PRIV18
0x50032E1C C   FIELD 19w01 PRIV19: PRIV19
0x50032E1C C   FIELD 20w01 PRIV20: PRIV20
0x50032E1C C   FIELD 21w01 PRIV21: PRIV21
0x50032E1C C   FIELD 22w01 PRIV22: PRIV22
0x50032E1C C   FIELD 23w01 PRIV23: PRIV23
0x50032E1C C   FIELD 24w01 PRIV24: PRIV24
0x50032E1C C   FIELD 25w01 PRIV25: PRIV25
0x50032E1C C   FIELD 26w01 PRIV26: PRIV26
0x50032E1C C   FIELD 27w01 PRIV27: PRIV27
0x50032E1C C   FIELD 28w01 PRIV28: PRIV28
0x50032E1C C   FIELD 29w01 PRIV29: PRIV29
0x50032E1C C   FIELD 30w01 PRIV30: PRIV30
0x50032E1C C   FIELD 31w01 PRIV31: PRIV31
0x50032E20 B  REGISTER MPCBB1_PRIVCFGR8 (rw): MPCBB privileged configuration for super-block x register
0x50032E20 C   FIELD 00w01 PRIV0: PRIV0
0x50032E20 C   FIELD 01w01 PRIV1: PRIV1
0x50032E20 C   FIELD 02w01 PRIV2: PRIV2
0x50032E20 C   FIELD 03w01 PRIV3: PRIV3
0x50032E20 C   FIELD 04w01 PRIV4: PRIV4
0x50032E20 C   FIELD 05w01 PRIV5: PRIV5
0x50032E20 C   FIELD 06w01 PRIV6: PRIV6
0x50032E20 C   FIELD 07w01 PRIV7: PRIV7
0x50032E20 C   FIELD 08w01 PRIV8: PRIV8
0x50032E20 C   FIELD 09w01 PRIV9: PRIV9
0x50032E20 C   FIELD 10w01 PRIV10: PRIV10
0x50032E20 C   FIELD 11w01 PRIV11: PRIV11
0x50032E20 C   FIELD 12w01 PRIV12: PRIV12
0x50032E20 C   FIELD 13w01 PRIV13: PRIV13
0x50032E20 C   FIELD 14w01 PRIV14: PRIV14
0x50032E20 C   FIELD 15w01 PRIV15: PRIV15
0x50032E20 C   FIELD 16w01 PRIV16: PRIV16
0x50032E20 C   FIELD 17w01 PRIV17: PRIV17
0x50032E20 C   FIELD 18w01 PRIV18: PRIV18
0x50032E20 C   FIELD 19w01 PRIV19: PRIV19
0x50032E20 C   FIELD 20w01 PRIV20: PRIV20
0x50032E20 C   FIELD 21w01 PRIV21: PRIV21
0x50032E20 C   FIELD 22w01 PRIV22: PRIV22
0x50032E20 C   FIELD 23w01 PRIV23: PRIV23
0x50032E20 C   FIELD 24w01 PRIV24: PRIV24
0x50032E20 C   FIELD 25w01 PRIV25: PRIV25
0x50032E20 C   FIELD 26w01 PRIV26: PRIV26
0x50032E20 C   FIELD 27w01 PRIV27: PRIV27
0x50032E20 C   FIELD 28w01 PRIV28: PRIV28
0x50032E20 C   FIELD 29w01 PRIV29: PRIV29
0x50032E20 C   FIELD 30w01 PRIV30: PRIV30
0x50032E20 C   FIELD 31w01 PRIV31: PRIV31
0x50032E24 B  REGISTER MPCBB1_PRIVCFGR9 (rw): MPCBB privileged configuration for super-block x register
0x50032E24 C   FIELD 00w01 PRIV0: PRIV0
0x50032E24 C   FIELD 01w01 PRIV1: PRIV1
0x50032E24 C   FIELD 02w01 PRIV2: PRIV2
0x50032E24 C   FIELD 03w01 PRIV3: PRIV3
0x50032E24 C   FIELD 04w01 PRIV4: PRIV4
0x50032E24 C   FIELD 05w01 PRIV5: PRIV5
0x50032E24 C   FIELD 06w01 PRIV6: PRIV6
0x50032E24 C   FIELD 07w01 PRIV7: PRIV7
0x50032E24 C   FIELD 08w01 PRIV8: PRIV8
0x50032E24 C   FIELD 09w01 PRIV9: PRIV9
0x50032E24 C   FIELD 10w01 PRIV10: PRIV10
0x50032E24 C   FIELD 11w01 PRIV11: PRIV11
0x50032E24 C   FIELD 12w01 PRIV12: PRIV12
0x50032E24 C   FIELD 13w01 PRIV13: PRIV13
0x50032E24 C   FIELD 14w01 PRIV14: PRIV14
0x50032E24 C   FIELD 15w01 PRIV15: PRIV15
0x50032E24 C   FIELD 16w01 PRIV16: PRIV16
0x50032E24 C   FIELD 17w01 PRIV17: PRIV17
0x50032E24 C   FIELD 18w01 PRIV18: PRIV18
0x50032E24 C   FIELD 19w01 PRIV19: PRIV19
0x50032E24 C   FIELD 20w01 PRIV20: PRIV20
0x50032E24 C   FIELD 21w01 PRIV21: PRIV21
0x50032E24 C   FIELD 22w01 PRIV22: PRIV22
0x50032E24 C   FIELD 23w01 PRIV23: PRIV23
0x50032E24 C   FIELD 24w01 PRIV24: PRIV24
0x50032E24 C   FIELD 25w01 PRIV25: PRIV25
0x50032E24 C   FIELD 26w01 PRIV26: PRIV26
0x50032E24 C   FIELD 27w01 PRIV27: PRIV27
0x50032E24 C   FIELD 28w01 PRIV28: PRIV28
0x50032E24 C   FIELD 29w01 PRIV29: PRIV29
0x50032E24 C   FIELD 30w01 PRIV30: PRIV30
0x50032E24 C   FIELD 31w01 PRIV31: PRIV31
0x50032E28 B  REGISTER MPCBB1_PRIVCFGR10 (rw): MPCBB privileged configuration for super-block x register
0x50032E28 C   FIELD 00w01 PRIV0: PRIV0
0x50032E28 C   FIELD 01w01 PRIV1: PRIV1
0x50032E28 C   FIELD 02w01 PRIV2: PRIV2
0x50032E28 C   FIELD 03w01 PRIV3: PRIV3
0x50032E28 C   FIELD 04w01 PRIV4: PRIV4
0x50032E28 C   FIELD 05w01 PRIV5: PRIV5
0x50032E28 C   FIELD 06w01 PRIV6: PRIV6
0x50032E28 C   FIELD 07w01 PRIV7: PRIV7
0x50032E28 C   FIELD 08w01 PRIV8: PRIV8
0x50032E28 C   FIELD 09w01 PRIV9: PRIV9
0x50032E28 C   FIELD 10w01 PRIV10: PRIV10
0x50032E28 C   FIELD 11w01 PRIV11: PRIV11
0x50032E28 C   FIELD 12w01 PRIV12: PRIV12
0x50032E28 C   FIELD 13w01 PRIV13: PRIV13
0x50032E28 C   FIELD 14w01 PRIV14: PRIV14
0x50032E28 C   FIELD 15w01 PRIV15: PRIV15
0x50032E28 C   FIELD 16w01 PRIV16: PRIV16
0x50032E28 C   FIELD 17w01 PRIV17: PRIV17
0x50032E28 C   FIELD 18w01 PRIV18: PRIV18
0x50032E28 C   FIELD 19w01 PRIV19: PRIV19
0x50032E28 C   FIELD 20w01 PRIV20: PRIV20
0x50032E28 C   FIELD 21w01 PRIV21: PRIV21
0x50032E28 C   FIELD 22w01 PRIV22: PRIV22
0x50032E28 C   FIELD 23w01 PRIV23: PRIV23
0x50032E28 C   FIELD 24w01 PRIV24: PRIV24
0x50032E28 C   FIELD 25w01 PRIV25: PRIV25
0x50032E28 C   FIELD 26w01 PRIV26: PRIV26
0x50032E28 C   FIELD 27w01 PRIV27: PRIV27
0x50032E28 C   FIELD 28w01 PRIV28: PRIV28
0x50032E28 C   FIELD 29w01 PRIV29: PRIV29
0x50032E28 C   FIELD 30w01 PRIV30: PRIV30
0x50032E28 C   FIELD 31w01 PRIV31: PRIV31
0x50032E2C B  REGISTER MPCBB1_PRIVCFGR11 (rw): MPCBB privileged configuration for super-block x register
0x50032E2C C   FIELD 00w01 PRIV0: PRIV0
0x50032E2C C   FIELD 01w01 PRIV1: PRIV1
0x50032E2C C   FIELD 02w01 PRIV2: PRIV2
0x50032E2C C   FIELD 03w01 PRIV3: PRIV3
0x50032E2C C   FIELD 04w01 PRIV4: PRIV4
0x50032E2C C   FIELD 05w01 PRIV5: PRIV5
0x50032E2C C   FIELD 06w01 PRIV6: PRIV6
0x50032E2C C   FIELD 07w01 PRIV7: PRIV7
0x50032E2C C   FIELD 08w01 PRIV8: PRIV8
0x50032E2C C   FIELD 09w01 PRIV9: PRIV9
0x50032E2C C   FIELD 10w01 PRIV10: PRIV10
0x50032E2C C   FIELD 11w01 PRIV11: PRIV11
0x50032E2C C   FIELD 12w01 PRIV12: PRIV12
0x50032E2C C   FIELD 13w01 PRIV13: PRIV13
0x50032E2C C   FIELD 14w01 PRIV14: PRIV14
0x50032E2C C   FIELD 15w01 PRIV15: PRIV15
0x50032E2C C   FIELD 16w01 PRIV16: PRIV16
0x50032E2C C   FIELD 17w01 PRIV17: PRIV17
0x50032E2C C   FIELD 18w01 PRIV18: PRIV18
0x50032E2C C   FIELD 19w01 PRIV19: PRIV19
0x50032E2C C   FIELD 20w01 PRIV20: PRIV20
0x50032E2C C   FIELD 21w01 PRIV21: PRIV21
0x50032E2C C   FIELD 22w01 PRIV22: PRIV22
0x50032E2C C   FIELD 23w01 PRIV23: PRIV23
0x50032E2C C   FIELD 24w01 PRIV24: PRIV24
0x50032E2C C   FIELD 25w01 PRIV25: PRIV25
0x50032E2C C   FIELD 26w01 PRIV26: PRIV26
0x50032E2C C   FIELD 27w01 PRIV27: PRIV27
0x50032E2C C   FIELD 28w01 PRIV28: PRIV28
0x50032E2C C   FIELD 29w01 PRIV29: PRIV29
0x50032E2C C   FIELD 30w01 PRIV30: PRIV30
0x50032E2C C   FIELD 31w01 PRIV31: PRIV31
0x50032E30 B  REGISTER MPCBB1_PRIVCFGR12 (rw): MPCBB privileged configuration for super-block x register
0x50032E30 C   FIELD 00w01 PRIV0: PRIV0
0x50032E30 C   FIELD 01w01 PRIV1: PRIV1
0x50032E30 C   FIELD 02w01 PRIV2: PRIV2
0x50032E30 C   FIELD 03w01 PRIV3: PRIV3
0x50032E30 C   FIELD 04w01 PRIV4: PRIV4
0x50032E30 C   FIELD 05w01 PRIV5: PRIV5
0x50032E30 C   FIELD 06w01 PRIV6: PRIV6
0x50032E30 C   FIELD 07w01 PRIV7: PRIV7
0x50032E30 C   FIELD 08w01 PRIV8: PRIV8
0x50032E30 C   FIELD 09w01 PRIV9: PRIV9
0x50032E30 C   FIELD 10w01 PRIV10: PRIV10
0x50032E30 C   FIELD 11w01 PRIV11: PRIV11
0x50032E30 C   FIELD 12w01 PRIV12: PRIV12
0x50032E30 C   FIELD 13w01 PRIV13: PRIV13
0x50032E30 C   FIELD 14w01 PRIV14: PRIV14
0x50032E30 C   FIELD 15w01 PRIV15: PRIV15
0x50032E30 C   FIELD 16w01 PRIV16: PRIV16
0x50032E30 C   FIELD 17w01 PRIV17: PRIV17
0x50032E30 C   FIELD 18w01 PRIV18: PRIV18
0x50032E30 C   FIELD 19w01 PRIV19: PRIV19
0x50032E30 C   FIELD 20w01 PRIV20: PRIV20
0x50032E30 C   FIELD 21w01 PRIV21: PRIV21
0x50032E30 C   FIELD 22w01 PRIV22: PRIV22
0x50032E30 C   FIELD 23w01 PRIV23: PRIV23
0x50032E30 C   FIELD 24w01 PRIV24: PRIV24
0x50032E30 C   FIELD 25w01 PRIV25: PRIV25
0x50032E30 C   FIELD 26w01 PRIV26: PRIV26
0x50032E30 C   FIELD 27w01 PRIV27: PRIV27
0x50032E30 C   FIELD 28w01 PRIV28: PRIV28
0x50032E30 C   FIELD 29w01 PRIV29: PRIV29
0x50032E30 C   FIELD 30w01 PRIV30: PRIV30
0x50032E30 C   FIELD 31w01 PRIV31: PRIV31
0x50032E34 B  REGISTER MPCBB1_PRIVCFGR13 (rw): MPCBB privileged configuration for super-block x register
0x50032E34 C   FIELD 00w01 PRIV0: PRIV0
0x50032E34 C   FIELD 01w01 PRIV1: PRIV1
0x50032E34 C   FIELD 02w01 PRIV2: PRIV2
0x50032E34 C   FIELD 03w01 PRIV3: PRIV3
0x50032E34 C   FIELD 04w01 PRIV4: PRIV4
0x50032E34 C   FIELD 05w01 PRIV5: PRIV5
0x50032E34 C   FIELD 06w01 PRIV6: PRIV6
0x50032E34 C   FIELD 07w01 PRIV7: PRIV7
0x50032E34 C   FIELD 08w01 PRIV8: PRIV8
0x50032E34 C   FIELD 09w01 PRIV9: PRIV9
0x50032E34 C   FIELD 10w01 PRIV10: PRIV10
0x50032E34 C   FIELD 11w01 PRIV11: PRIV11
0x50032E34 C   FIELD 12w01 PRIV12: PRIV12
0x50032E34 C   FIELD 13w01 PRIV13: PRIV13
0x50032E34 C   FIELD 14w01 PRIV14: PRIV14
0x50032E34 C   FIELD 15w01 PRIV15: PRIV15
0x50032E34 C   FIELD 16w01 PRIV16: PRIV16
0x50032E34 C   FIELD 17w01 PRIV17: PRIV17
0x50032E34 C   FIELD 18w01 PRIV18: PRIV18
0x50032E34 C   FIELD 19w01 PRIV19: PRIV19
0x50032E34 C   FIELD 20w01 PRIV20: PRIV20
0x50032E34 C   FIELD 21w01 PRIV21: PRIV21
0x50032E34 C   FIELD 22w01 PRIV22: PRIV22
0x50032E34 C   FIELD 23w01 PRIV23: PRIV23
0x50032E34 C   FIELD 24w01 PRIV24: PRIV24
0x50032E34 C   FIELD 25w01 PRIV25: PRIV25
0x50032E34 C   FIELD 26w01 PRIV26: PRIV26
0x50032E34 C   FIELD 27w01 PRIV27: PRIV27
0x50032E34 C   FIELD 28w01 PRIV28: PRIV28
0x50032E34 C   FIELD 29w01 PRIV29: PRIV29
0x50032E34 C   FIELD 30w01 PRIV30: PRIV30
0x50032E34 C   FIELD 31w01 PRIV31: PRIV31
0x50032E38 B  REGISTER MPCBB1_PRIVCFGR14 (rw): MPCBB privileged configuration for super-block x register
0x50032E38 C   FIELD 00w01 PRIV0: PRIV0
0x50032E38 C   FIELD 01w01 PRIV1: PRIV1
0x50032E38 C   FIELD 02w01 PRIV2: PRIV2
0x50032E38 C   FIELD 03w01 PRIV3: PRIV3
0x50032E38 C   FIELD 04w01 PRIV4: PRIV4
0x50032E38 C   FIELD 05w01 PRIV5: PRIV5
0x50032E38 C   FIELD 06w01 PRIV6: PRIV6
0x50032E38 C   FIELD 07w01 PRIV7: PRIV7
0x50032E38 C   FIELD 08w01 PRIV8: PRIV8
0x50032E38 C   FIELD 09w01 PRIV9: PRIV9
0x50032E38 C   FIELD 10w01 PRIV10: PRIV10
0x50032E38 C   FIELD 11w01 PRIV11: PRIV11
0x50032E38 C   FIELD 12w01 PRIV12: PRIV12
0x50032E38 C   FIELD 13w01 PRIV13: PRIV13
0x50032E38 C   FIELD 14w01 PRIV14: PRIV14
0x50032E38 C   FIELD 15w01 PRIV15: PRIV15
0x50032E38 C   FIELD 16w01 PRIV16: PRIV16
0x50032E38 C   FIELD 17w01 PRIV17: PRIV17
0x50032E38 C   FIELD 18w01 PRIV18: PRIV18
0x50032E38 C   FIELD 19w01 PRIV19: PRIV19
0x50032E38 C   FIELD 20w01 PRIV20: PRIV20
0x50032E38 C   FIELD 21w01 PRIV21: PRIV21
0x50032E38 C   FIELD 22w01 PRIV22: PRIV22
0x50032E38 C   FIELD 23w01 PRIV23: PRIV23
0x50032E38 C   FIELD 24w01 PRIV24: PRIV24
0x50032E38 C   FIELD 25w01 PRIV25: PRIV25
0x50032E38 C   FIELD 26w01 PRIV26: PRIV26
0x50032E38 C   FIELD 27w01 PRIV27: PRIV27
0x50032E38 C   FIELD 28w01 PRIV28: PRIV28
0x50032E38 C   FIELD 29w01 PRIV29: PRIV29
0x50032E38 C   FIELD 30w01 PRIV30: PRIV30
0x50032E38 C   FIELD 31w01 PRIV31: PRIV31
0x50032E3C B  REGISTER MPCBB1_PRIVCFGR15 (rw): MPCBB privileged configuration for super-block x register
0x50032E3C C   FIELD 00w01 PRIV0: PRIV0
0x50032E3C C   FIELD 01w01 PRIV1: PRIV1
0x50032E3C C   FIELD 02w01 PRIV2: PRIV2
0x50032E3C C   FIELD 03w01 PRIV3: PRIV3
0x50032E3C C   FIELD 04w01 PRIV4: PRIV4
0x50032E3C C   FIELD 05w01 PRIV5: PRIV5
0x50032E3C C   FIELD 06w01 PRIV6: PRIV6
0x50032E3C C   FIELD 07w01 PRIV7: PRIV7
0x50032E3C C   FIELD 08w01 PRIV8: PRIV8
0x50032E3C C   FIELD 09w01 PRIV9: PRIV9
0x50032E3C C   FIELD 10w01 PRIV10: PRIV10
0x50032E3C C   FIELD 11w01 PRIV11: PRIV11
0x50032E3C C   FIELD 12w01 PRIV12: PRIV12
0x50032E3C C   FIELD 13w01 PRIV13: PRIV13
0x50032E3C C   FIELD 14w01 PRIV14: PRIV14
0x50032E3C C   FIELD 15w01 PRIV15: PRIV15
0x50032E3C C   FIELD 16w01 PRIV16: PRIV16
0x50032E3C C   FIELD 17w01 PRIV17: PRIV17
0x50032E3C C   FIELD 18w01 PRIV18: PRIV18
0x50032E3C C   FIELD 19w01 PRIV19: PRIV19
0x50032E3C C   FIELD 20w01 PRIV20: PRIV20
0x50032E3C C   FIELD 21w01 PRIV21: PRIV21
0x50032E3C C   FIELD 22w01 PRIV22: PRIV22
0x50032E3C C   FIELD 23w01 PRIV23: PRIV23
0x50032E3C C   FIELD 24w01 PRIV24: PRIV24
0x50032E3C C   FIELD 25w01 PRIV25: PRIV25
0x50032E3C C   FIELD 26w01 PRIV26: PRIV26
0x50032E3C C   FIELD 27w01 PRIV27: PRIV27
0x50032E3C C   FIELD 28w01 PRIV28: PRIV28
0x50032E3C C   FIELD 29w01 PRIV29: PRIV29
0x50032E3C C   FIELD 30w01 PRIV30: PRIV30
0x50032E3C C   FIELD 31w01 PRIV31: PRIV31
0x50032E40 B  REGISTER MPCBB1_PRIVCFGR16 (rw): MPCBB privileged configuration for super-block x register
0x50032E40 C   FIELD 00w01 PRIV0: PRIV0
0x50032E40 C   FIELD 01w01 PRIV1: PRIV1
0x50032E40 C   FIELD 02w01 PRIV2: PRIV2
0x50032E40 C   FIELD 03w01 PRIV3: PRIV3
0x50032E40 C   FIELD 04w01 PRIV4: PRIV4
0x50032E40 C   FIELD 05w01 PRIV5: PRIV5
0x50032E40 C   FIELD 06w01 PRIV6: PRIV6
0x50032E40 C   FIELD 07w01 PRIV7: PRIV7
0x50032E40 C   FIELD 08w01 PRIV8: PRIV8
0x50032E40 C   FIELD 09w01 PRIV9: PRIV9
0x50032E40 C   FIELD 10w01 PRIV10: PRIV10
0x50032E40 C   FIELD 11w01 PRIV11: PRIV11
0x50032E40 C   FIELD 12w01 PRIV12: PRIV12
0x50032E40 C   FIELD 13w01 PRIV13: PRIV13
0x50032E40 C   FIELD 14w01 PRIV14: PRIV14
0x50032E40 C   FIELD 15w01 PRIV15: PRIV15
0x50032E40 C   FIELD 16w01 PRIV16: PRIV16
0x50032E40 C   FIELD 17w01 PRIV17: PRIV17
0x50032E40 C   FIELD 18w01 PRIV18: PRIV18
0x50032E40 C   FIELD 19w01 PRIV19: PRIV19
0x50032E40 C   FIELD 20w01 PRIV20: PRIV20
0x50032E40 C   FIELD 21w01 PRIV21: PRIV21
0x50032E40 C   FIELD 22w01 PRIV22: PRIV22
0x50032E40 C   FIELD 23w01 PRIV23: PRIV23
0x50032E40 C   FIELD 24w01 PRIV24: PRIV24
0x50032E40 C   FIELD 25w01 PRIV25: PRIV25
0x50032E40 C   FIELD 26w01 PRIV26: PRIV26
0x50032E40 C   FIELD 27w01 PRIV27: PRIV27
0x50032E40 C   FIELD 28w01 PRIV28: PRIV28
0x50032E40 C   FIELD 29w01 PRIV29: PRIV29
0x50032E40 C   FIELD 30w01 PRIV30: PRIV30
0x50032E40 C   FIELD 31w01 PRIV31: PRIV31
0x50032E44 B  REGISTER MPCBB1_PRIVCFGR17 (rw): MPCBB privileged configuration for super-block x register
0x50032E44 C   FIELD 00w01 PRIV0: PRIV0
0x50032E44 C   FIELD 01w01 PRIV1: PRIV1
0x50032E44 C   FIELD 02w01 PRIV2: PRIV2
0x50032E44 C   FIELD 03w01 PRIV3: PRIV3
0x50032E44 C   FIELD 04w01 PRIV4: PRIV4
0x50032E44 C   FIELD 05w01 PRIV5: PRIV5
0x50032E44 C   FIELD 06w01 PRIV6: PRIV6
0x50032E44 C   FIELD 07w01 PRIV7: PRIV7
0x50032E44 C   FIELD 08w01 PRIV8: PRIV8
0x50032E44 C   FIELD 09w01 PRIV9: PRIV9
0x50032E44 C   FIELD 10w01 PRIV10: PRIV10
0x50032E44 C   FIELD 11w01 PRIV11: PRIV11
0x50032E44 C   FIELD 12w01 PRIV12: PRIV12
0x50032E44 C   FIELD 13w01 PRIV13: PRIV13
0x50032E44 C   FIELD 14w01 PRIV14: PRIV14
0x50032E44 C   FIELD 15w01 PRIV15: PRIV15
0x50032E44 C   FIELD 16w01 PRIV16: PRIV16
0x50032E44 C   FIELD 17w01 PRIV17: PRIV17
0x50032E44 C   FIELD 18w01 PRIV18: PRIV18
0x50032E44 C   FIELD 19w01 PRIV19: PRIV19
0x50032E44 C   FIELD 20w01 PRIV20: PRIV20
0x50032E44 C   FIELD 21w01 PRIV21: PRIV21
0x50032E44 C   FIELD 22w01 PRIV22: PRIV22
0x50032E44 C   FIELD 23w01 PRIV23: PRIV23
0x50032E44 C   FIELD 24w01 PRIV24: PRIV24
0x50032E44 C   FIELD 25w01 PRIV25: PRIV25
0x50032E44 C   FIELD 26w01 PRIV26: PRIV26
0x50032E44 C   FIELD 27w01 PRIV27: PRIV27
0x50032E44 C   FIELD 28w01 PRIV28: PRIV28
0x50032E44 C   FIELD 29w01 PRIV29: PRIV29
0x50032E44 C   FIELD 30w01 PRIV30: PRIV30
0x50032E44 C   FIELD 31w01 PRIV31: PRIV31
0x50032E48 B  REGISTER MPCBB1_PRIVCFGR18 (rw): MPCBB privileged configuration for super-block x register
0x50032E48 C   FIELD 00w01 PRIV0: PRIV0
0x50032E48 C   FIELD 01w01 PRIV1: PRIV1
0x50032E48 C   FIELD 02w01 PRIV2: PRIV2
0x50032E48 C   FIELD 03w01 PRIV3: PRIV3
0x50032E48 C   FIELD 04w01 PRIV4: PRIV4
0x50032E48 C   FIELD 05w01 PRIV5: PRIV5
0x50032E48 C   FIELD 06w01 PRIV6: PRIV6
0x50032E48 C   FIELD 07w01 PRIV7: PRIV7
0x50032E48 C   FIELD 08w01 PRIV8: PRIV8
0x50032E48 C   FIELD 09w01 PRIV9: PRIV9
0x50032E48 C   FIELD 10w01 PRIV10: PRIV10
0x50032E48 C   FIELD 11w01 PRIV11: PRIV11
0x50032E48 C   FIELD 12w01 PRIV12: PRIV12
0x50032E48 C   FIELD 13w01 PRIV13: PRIV13
0x50032E48 C   FIELD 14w01 PRIV14: PRIV14
0x50032E48 C   FIELD 15w01 PRIV15: PRIV15
0x50032E48 C   FIELD 16w01 PRIV16: PRIV16
0x50032E48 C   FIELD 17w01 PRIV17: PRIV17
0x50032E48 C   FIELD 18w01 PRIV18: PRIV18
0x50032E48 C   FIELD 19w01 PRIV19: PRIV19
0x50032E48 C   FIELD 20w01 PRIV20: PRIV20
0x50032E48 C   FIELD 21w01 PRIV21: PRIV21
0x50032E48 C   FIELD 22w01 PRIV22: PRIV22
0x50032E48 C   FIELD 23w01 PRIV23: PRIV23
0x50032E48 C   FIELD 24w01 PRIV24: PRIV24
0x50032E48 C   FIELD 25w01 PRIV25: PRIV25
0x50032E48 C   FIELD 26w01 PRIV26: PRIV26
0x50032E48 C   FIELD 27w01 PRIV27: PRIV27
0x50032E48 C   FIELD 28w01 PRIV28: PRIV28
0x50032E48 C   FIELD 29w01 PRIV29: PRIV29
0x50032E48 C   FIELD 30w01 PRIV30: PRIV30
0x50032E48 C   FIELD 31w01 PRIV31: PRIV31
0x50032E4C B  REGISTER MPCBB1_PRIVCFGR19 (rw): MPCBB privileged configuration for super-block x register
0x50032E4C C   FIELD 00w01 PRIV0: PRIV0
0x50032E4C C   FIELD 01w01 PRIV1: PRIV1
0x50032E4C C   FIELD 02w01 PRIV2: PRIV2
0x50032E4C C   FIELD 03w01 PRIV3: PRIV3
0x50032E4C C   FIELD 04w01 PRIV4: PRIV4
0x50032E4C C   FIELD 05w01 PRIV5: PRIV5
0x50032E4C C   FIELD 06w01 PRIV6: PRIV6
0x50032E4C C   FIELD 07w01 PRIV7: PRIV7
0x50032E4C C   FIELD 08w01 PRIV8: PRIV8
0x50032E4C C   FIELD 09w01 PRIV9: PRIV9
0x50032E4C C   FIELD 10w01 PRIV10: PRIV10
0x50032E4C C   FIELD 11w01 PRIV11: PRIV11
0x50032E4C C   FIELD 12w01 PRIV12: PRIV12
0x50032E4C C   FIELD 13w01 PRIV13: PRIV13
0x50032E4C C   FIELD 14w01 PRIV14: PRIV14
0x50032E4C C   FIELD 15w01 PRIV15: PRIV15
0x50032E4C C   FIELD 16w01 PRIV16: PRIV16
0x50032E4C C   FIELD 17w01 PRIV17: PRIV17
0x50032E4C C   FIELD 18w01 PRIV18: PRIV18
0x50032E4C C   FIELD 19w01 PRIV19: PRIV19
0x50032E4C C   FIELD 20w01 PRIV20: PRIV20
0x50032E4C C   FIELD 21w01 PRIV21: PRIV21
0x50032E4C C   FIELD 22w01 PRIV22: PRIV22
0x50032E4C C   FIELD 23w01 PRIV23: PRIV23
0x50032E4C C   FIELD 24w01 PRIV24: PRIV24
0x50032E4C C   FIELD 25w01 PRIV25: PRIV25
0x50032E4C C   FIELD 26w01 PRIV26: PRIV26
0x50032E4C C   FIELD 27w01 PRIV27: PRIV27
0x50032E4C C   FIELD 28w01 PRIV28: PRIV28
0x50032E4C C   FIELD 29w01 PRIV29: PRIV29
0x50032E4C C   FIELD 30w01 PRIV30: PRIV30
0x50032E4C C   FIELD 31w01 PRIV31: PRIV31
0x50032E50 B  REGISTER MPCBB1_PRIVCFGR20 (rw): MPCBB privileged configuration for super-block x register
0x50032E50 C   FIELD 00w01 PRIV0: PRIV0
0x50032E50 C   FIELD 01w01 PRIV1: PRIV1
0x50032E50 C   FIELD 02w01 PRIV2: PRIV2
0x50032E50 C   FIELD 03w01 PRIV3: PRIV3
0x50032E50 C   FIELD 04w01 PRIV4: PRIV4
0x50032E50 C   FIELD 05w01 PRIV5: PRIV5
0x50032E50 C   FIELD 06w01 PRIV6: PRIV6
0x50032E50 C   FIELD 07w01 PRIV7: PRIV7
0x50032E50 C   FIELD 08w01 PRIV8: PRIV8
0x50032E50 C   FIELD 09w01 PRIV9: PRIV9
0x50032E50 C   FIELD 10w01 PRIV10: PRIV10
0x50032E50 C   FIELD 11w01 PRIV11: PRIV11
0x50032E50 C   FIELD 12w01 PRIV12: PRIV12
0x50032E50 C   FIELD 13w01 PRIV13: PRIV13
0x50032E50 C   FIELD 14w01 PRIV14: PRIV14
0x50032E50 C   FIELD 15w01 PRIV15: PRIV15
0x50032E50 C   FIELD 16w01 PRIV16: PRIV16
0x50032E50 C   FIELD 17w01 PRIV17: PRIV17
0x50032E50 C   FIELD 18w01 PRIV18: PRIV18
0x50032E50 C   FIELD 19w01 PRIV19: PRIV19
0x50032E50 C   FIELD 20w01 PRIV20: PRIV20
0x50032E50 C   FIELD 21w01 PRIV21: PRIV21
0x50032E50 C   FIELD 22w01 PRIV22: PRIV22
0x50032E50 C   FIELD 23w01 PRIV23: PRIV23
0x50032E50 C   FIELD 24w01 PRIV24: PRIV24
0x50032E50 C   FIELD 25w01 PRIV25: PRIV25
0x50032E50 C   FIELD 26w01 PRIV26: PRIV26
0x50032E50 C   FIELD 27w01 PRIV27: PRIV27
0x50032E50 C   FIELD 28w01 PRIV28: PRIV28
0x50032E50 C   FIELD 29w01 PRIV29: PRIV29
0x50032E50 C   FIELD 30w01 PRIV30: PRIV30
0x50032E50 C   FIELD 31w01 PRIV31: PRIV31
0x50032E54 B  REGISTER MPCBB1_PRIVCFGR21 (rw): MPCBB privileged configuration for super-block x register
0x50032E54 C   FIELD 00w01 PRIV0: PRIV0
0x50032E54 C   FIELD 01w01 PRIV1: PRIV1
0x50032E54 C   FIELD 02w01 PRIV2: PRIV2
0x50032E54 C   FIELD 03w01 PRIV3: PRIV3
0x50032E54 C   FIELD 04w01 PRIV4: PRIV4
0x50032E54 C   FIELD 05w01 PRIV5: PRIV5
0x50032E54 C   FIELD 06w01 PRIV6: PRIV6
0x50032E54 C   FIELD 07w01 PRIV7: PRIV7
0x50032E54 C   FIELD 08w01 PRIV8: PRIV8
0x50032E54 C   FIELD 09w01 PRIV9: PRIV9
0x50032E54 C   FIELD 10w01 PRIV10: PRIV10
0x50032E54 C   FIELD 11w01 PRIV11: PRIV11
0x50032E54 C   FIELD 12w01 PRIV12: PRIV12
0x50032E54 C   FIELD 13w01 PRIV13: PRIV13
0x50032E54 C   FIELD 14w01 PRIV14: PRIV14
0x50032E54 C   FIELD 15w01 PRIV15: PRIV15
0x50032E54 C   FIELD 16w01 PRIV16: PRIV16
0x50032E54 C   FIELD 17w01 PRIV17: PRIV17
0x50032E54 C   FIELD 18w01 PRIV18: PRIV18
0x50032E54 C   FIELD 19w01 PRIV19: PRIV19
0x50032E54 C   FIELD 20w01 PRIV20: PRIV20
0x50032E54 C   FIELD 21w01 PRIV21: PRIV21
0x50032E54 C   FIELD 22w01 PRIV22: PRIV22
0x50032E54 C   FIELD 23w01 PRIV23: PRIV23
0x50032E54 C   FIELD 24w01 PRIV24: PRIV24
0x50032E54 C   FIELD 25w01 PRIV25: PRIV25
0x50032E54 C   FIELD 26w01 PRIV26: PRIV26
0x50032E54 C   FIELD 27w01 PRIV27: PRIV27
0x50032E54 C   FIELD 28w01 PRIV28: PRIV28
0x50032E54 C   FIELD 29w01 PRIV29: PRIV29
0x50032E54 C   FIELD 30w01 PRIV30: PRIV30
0x50032E54 C   FIELD 31w01 PRIV31: PRIV31
0x50032E58 B  REGISTER MPCBB1_PRIVCFGR22 (rw): MPCBB privileged configuration for super-block x register
0x50032E58 C   FIELD 00w01 PRIV0: PRIV0
0x50032E58 C   FIELD 01w01 PRIV1: PRIV1
0x50032E58 C   FIELD 02w01 PRIV2: PRIV2
0x50032E58 C   FIELD 03w01 PRIV3: PRIV3
0x50032E58 C   FIELD 04w01 PRIV4: PRIV4
0x50032E58 C   FIELD 05w01 PRIV5: PRIV5
0x50032E58 C   FIELD 06w01 PRIV6: PRIV6
0x50032E58 C   FIELD 07w01 PRIV7: PRIV7
0x50032E58 C   FIELD 08w01 PRIV8: PRIV8
0x50032E58 C   FIELD 09w01 PRIV9: PRIV9
0x50032E58 C   FIELD 10w01 PRIV10: PRIV10
0x50032E58 C   FIELD 11w01 PRIV11: PRIV11
0x50032E58 C   FIELD 12w01 PRIV12: PRIV12
0x50032E58 C   FIELD 13w01 PRIV13: PRIV13
0x50032E58 C   FIELD 14w01 PRIV14: PRIV14
0x50032E58 C   FIELD 15w01 PRIV15: PRIV15
0x50032E58 C   FIELD 16w01 PRIV16: PRIV16
0x50032E58 C   FIELD 17w01 PRIV17: PRIV17
0x50032E58 C   FIELD 18w01 PRIV18: PRIV18
0x50032E58 C   FIELD 19w01 PRIV19: PRIV19
0x50032E58 C   FIELD 20w01 PRIV20: PRIV20
0x50032E58 C   FIELD 21w01 PRIV21: PRIV21
0x50032E58 C   FIELD 22w01 PRIV22: PRIV22
0x50032E58 C   FIELD 23w01 PRIV23: PRIV23
0x50032E58 C   FIELD 24w01 PRIV24: PRIV24
0x50032E58 C   FIELD 25w01 PRIV25: PRIV25
0x50032E58 C   FIELD 26w01 PRIV26: PRIV26
0x50032E58 C   FIELD 27w01 PRIV27: PRIV27
0x50032E58 C   FIELD 28w01 PRIV28: PRIV28
0x50032E58 C   FIELD 29w01 PRIV29: PRIV29
0x50032E58 C   FIELD 30w01 PRIV30: PRIV30
0x50032E58 C   FIELD 31w01 PRIV31: PRIV31
0x50032E5C B  REGISTER MPCBB1_PRIVCFGR23 (rw): MPCBB privileged configuration for super-block x register
0x50032E5C C   FIELD 00w01 PRIV0: PRIV0
0x50032E5C C   FIELD 01w01 PRIV1: PRIV1
0x50032E5C C   FIELD 02w01 PRIV2: PRIV2
0x50032E5C C   FIELD 03w01 PRIV3: PRIV3
0x50032E5C C   FIELD 04w01 PRIV4: PRIV4
0x50032E5C C   FIELD 05w01 PRIV5: PRIV5
0x50032E5C C   FIELD 06w01 PRIV6: PRIV6
0x50032E5C C   FIELD 07w01 PRIV7: PRIV7
0x50032E5C C   FIELD 08w01 PRIV8: PRIV8
0x50032E5C C   FIELD 09w01 PRIV9: PRIV9
0x50032E5C C   FIELD 10w01 PRIV10: PRIV10
0x50032E5C C   FIELD 11w01 PRIV11: PRIV11
0x50032E5C C   FIELD 12w01 PRIV12: PRIV12
0x50032E5C C   FIELD 13w01 PRIV13: PRIV13
0x50032E5C C   FIELD 14w01 PRIV14: PRIV14
0x50032E5C C   FIELD 15w01 PRIV15: PRIV15
0x50032E5C C   FIELD 16w01 PRIV16: PRIV16
0x50032E5C C   FIELD 17w01 PRIV17: PRIV17
0x50032E5C C   FIELD 18w01 PRIV18: PRIV18
0x50032E5C C   FIELD 19w01 PRIV19: PRIV19
0x50032E5C C   FIELD 20w01 PRIV20: PRIV20
0x50032E5C C   FIELD 21w01 PRIV21: PRIV21
0x50032E5C C   FIELD 22w01 PRIV22: PRIV22
0x50032E5C C   FIELD 23w01 PRIV23: PRIV23
0x50032E5C C   FIELD 24w01 PRIV24: PRIV24
0x50032E5C C   FIELD 25w01 PRIV25: PRIV25
0x50032E5C C   FIELD 26w01 PRIV26: PRIV26
0x50032E5C C   FIELD 27w01 PRIV27: PRIV27
0x50032E5C C   FIELD 28w01 PRIV28: PRIV28
0x50032E5C C   FIELD 29w01 PRIV29: PRIV29
0x50032E5C C   FIELD 30w01 PRIV30: PRIV30
0x50032E5C C   FIELD 31w01 PRIV31: PRIV31
0x50032E60 B  REGISTER MPCBB1_PRIVCFGR24 (rw): MPCBB privileged configuration for super-block x register
0x50032E60 C   FIELD 00w01 PRIV0: PRIV0
0x50032E60 C   FIELD 01w01 PRIV1: PRIV1
0x50032E60 C   FIELD 02w01 PRIV2: PRIV2
0x50032E60 C   FIELD 03w01 PRIV3: PRIV3
0x50032E60 C   FIELD 04w01 PRIV4: PRIV4
0x50032E60 C   FIELD 05w01 PRIV5: PRIV5
0x50032E60 C   FIELD 06w01 PRIV6: PRIV6
0x50032E60 C   FIELD 07w01 PRIV7: PRIV7
0x50032E60 C   FIELD 08w01 PRIV8: PRIV8
0x50032E60 C   FIELD 09w01 PRIV9: PRIV9
0x50032E60 C   FIELD 10w01 PRIV10: PRIV10
0x50032E60 C   FIELD 11w01 PRIV11: PRIV11
0x50032E60 C   FIELD 12w01 PRIV12: PRIV12
0x50032E60 C   FIELD 13w01 PRIV13: PRIV13
0x50032E60 C   FIELD 14w01 PRIV14: PRIV14
0x50032E60 C   FIELD 15w01 PRIV15: PRIV15
0x50032E60 C   FIELD 16w01 PRIV16: PRIV16
0x50032E60 C   FIELD 17w01 PRIV17: PRIV17
0x50032E60 C   FIELD 18w01 PRIV18: PRIV18
0x50032E60 C   FIELD 19w01 PRIV19: PRIV19
0x50032E60 C   FIELD 20w01 PRIV20: PRIV20
0x50032E60 C   FIELD 21w01 PRIV21: PRIV21
0x50032E60 C   FIELD 22w01 PRIV22: PRIV22
0x50032E60 C   FIELD 23w01 PRIV23: PRIV23
0x50032E60 C   FIELD 24w01 PRIV24: PRIV24
0x50032E60 C   FIELD 25w01 PRIV25: PRIV25
0x50032E60 C   FIELD 26w01 PRIV26: PRIV26
0x50032E60 C   FIELD 27w01 PRIV27: PRIV27
0x50032E60 C   FIELD 28w01 PRIV28: PRIV28
0x50032E60 C   FIELD 29w01 PRIV29: PRIV29
0x50032E60 C   FIELD 30w01 PRIV30: PRIV30
0x50032E60 C   FIELD 31w01 PRIV31: PRIV31
0x50032E64 B  REGISTER MPCBB1_PRIVCFGR25 (rw): MPCBB privileged configuration for super-block x register
0x50032E64 C   FIELD 00w01 PRIV0: PRIV0
0x50032E64 C   FIELD 01w01 PRIV1: PRIV1
0x50032E64 C   FIELD 02w01 PRIV2: PRIV2
0x50032E64 C   FIELD 03w01 PRIV3: PRIV3
0x50032E64 C   FIELD 04w01 PRIV4: PRIV4
0x50032E64 C   FIELD 05w01 PRIV5: PRIV5
0x50032E64 C   FIELD 06w01 PRIV6: PRIV6
0x50032E64 C   FIELD 07w01 PRIV7: PRIV7
0x50032E64 C   FIELD 08w01 PRIV8: PRIV8
0x50032E64 C   FIELD 09w01 PRIV9: PRIV9
0x50032E64 C   FIELD 10w01 PRIV10: PRIV10
0x50032E64 C   FIELD 11w01 PRIV11: PRIV11
0x50032E64 C   FIELD 12w01 PRIV12: PRIV12
0x50032E64 C   FIELD 13w01 PRIV13: PRIV13
0x50032E64 C   FIELD 14w01 PRIV14: PRIV14
0x50032E64 C   FIELD 15w01 PRIV15: PRIV15
0x50032E64 C   FIELD 16w01 PRIV16: PRIV16
0x50032E64 C   FIELD 17w01 PRIV17: PRIV17
0x50032E64 C   FIELD 18w01 PRIV18: PRIV18
0x50032E64 C   FIELD 19w01 PRIV19: PRIV19
0x50032E64 C   FIELD 20w01 PRIV20: PRIV20
0x50032E64 C   FIELD 21w01 PRIV21: PRIV21
0x50032E64 C   FIELD 22w01 PRIV22: PRIV22
0x50032E64 C   FIELD 23w01 PRIV23: PRIV23
0x50032E64 C   FIELD 24w01 PRIV24: PRIV24
0x50032E64 C   FIELD 25w01 PRIV25: PRIV25
0x50032E64 C   FIELD 26w01 PRIV26: PRIV26
0x50032E64 C   FIELD 27w01 PRIV27: PRIV27
0x50032E64 C   FIELD 28w01 PRIV28: PRIV28
0x50032E64 C   FIELD 29w01 PRIV29: PRIV29
0x50032E64 C   FIELD 30w01 PRIV30: PRIV30
0x50032E64 C   FIELD 31w01 PRIV31: PRIV31
0x50032E68 B  REGISTER MPCBB1_PRIVCFGR26 (rw): MPCBB privileged configuration for super-block x register
0x50032E68 C   FIELD 00w01 PRIV0: PRIV0
0x50032E68 C   FIELD 01w01 PRIV1: PRIV1
0x50032E68 C   FIELD 02w01 PRIV2: PRIV2
0x50032E68 C   FIELD 03w01 PRIV3: PRIV3
0x50032E68 C   FIELD 04w01 PRIV4: PRIV4
0x50032E68 C   FIELD 05w01 PRIV5: PRIV5
0x50032E68 C   FIELD 06w01 PRIV6: PRIV6
0x50032E68 C   FIELD 07w01 PRIV7: PRIV7
0x50032E68 C   FIELD 08w01 PRIV8: PRIV8
0x50032E68 C   FIELD 09w01 PRIV9: PRIV9
0x50032E68 C   FIELD 10w01 PRIV10: PRIV10
0x50032E68 C   FIELD 11w01 PRIV11: PRIV11
0x50032E68 C   FIELD 12w01 PRIV12: PRIV12
0x50032E68 C   FIELD 13w01 PRIV13: PRIV13
0x50032E68 C   FIELD 14w01 PRIV14: PRIV14
0x50032E68 C   FIELD 15w01 PRIV15: PRIV15
0x50032E68 C   FIELD 16w01 PRIV16: PRIV16
0x50032E68 C   FIELD 17w01 PRIV17: PRIV17
0x50032E68 C   FIELD 18w01 PRIV18: PRIV18
0x50032E68 C   FIELD 19w01 PRIV19: PRIV19
0x50032E68 C   FIELD 20w01 PRIV20: PRIV20
0x50032E68 C   FIELD 21w01 PRIV21: PRIV21
0x50032E68 C   FIELD 22w01 PRIV22: PRIV22
0x50032E68 C   FIELD 23w01 PRIV23: PRIV23
0x50032E68 C   FIELD 24w01 PRIV24: PRIV24
0x50032E68 C   FIELD 25w01 PRIV25: PRIV25
0x50032E68 C   FIELD 26w01 PRIV26: PRIV26
0x50032E68 C   FIELD 27w01 PRIV27: PRIV27
0x50032E68 C   FIELD 28w01 PRIV28: PRIV28
0x50032E68 C   FIELD 29w01 PRIV29: PRIV29
0x50032E68 C   FIELD 30w01 PRIV30: PRIV30
0x50032E68 C   FIELD 31w01 PRIV31: PRIV31
0x50032E6C B  REGISTER MPCBB1_PRIVCFGR27 (rw): MPCBB privileged configuration for super-block x register
0x50032E6C C   FIELD 00w01 PRIV0: PRIV0
0x50032E6C C   FIELD 01w01 PRIV1: PRIV1
0x50032E6C C   FIELD 02w01 PRIV2: PRIV2
0x50032E6C C   FIELD 03w01 PRIV3: PRIV3
0x50032E6C C   FIELD 04w01 PRIV4: PRIV4
0x50032E6C C   FIELD 05w01 PRIV5: PRIV5
0x50032E6C C   FIELD 06w01 PRIV6: PRIV6
0x50032E6C C   FIELD 07w01 PRIV7: PRIV7
0x50032E6C C   FIELD 08w01 PRIV8: PRIV8
0x50032E6C C   FIELD 09w01 PRIV9: PRIV9
0x50032E6C C   FIELD 10w01 PRIV10: PRIV10
0x50032E6C C   FIELD 11w01 PRIV11: PRIV11
0x50032E6C C   FIELD 12w01 PRIV12: PRIV12
0x50032E6C C   FIELD 13w01 PRIV13: PRIV13
0x50032E6C C   FIELD 14w01 PRIV14: PRIV14
0x50032E6C C   FIELD 15w01 PRIV15: PRIV15
0x50032E6C C   FIELD 16w01 PRIV16: PRIV16
0x50032E6C C   FIELD 17w01 PRIV17: PRIV17
0x50032E6C C   FIELD 18w01 PRIV18: PRIV18
0x50032E6C C   FIELD 19w01 PRIV19: PRIV19
0x50032E6C C   FIELD 20w01 PRIV20: PRIV20
0x50032E6C C   FIELD 21w01 PRIV21: PRIV21
0x50032E6C C   FIELD 22w01 PRIV22: PRIV22
0x50032E6C C   FIELD 23w01 PRIV23: PRIV23
0x50032E6C C   FIELD 24w01 PRIV24: PRIV24
0x50032E6C C   FIELD 25w01 PRIV25: PRIV25
0x50032E6C C   FIELD 26w01 PRIV26: PRIV26
0x50032E6C C   FIELD 27w01 PRIV27: PRIV27
0x50032E6C C   FIELD 28w01 PRIV28: PRIV28
0x50032E6C C   FIELD 29w01 PRIV29: PRIV29
0x50032E6C C   FIELD 30w01 PRIV30: PRIV30
0x50032E6C C   FIELD 31w01 PRIV31: PRIV31
0x50032E70 B  REGISTER MPCBB1_PRIVCFGR28 (rw): MPCBB privileged configuration for super-block x register
0x50032E70 C   FIELD 00w01 PRIV0: PRIV0
0x50032E70 C   FIELD 01w01 PRIV1: PRIV1
0x50032E70 C   FIELD 02w01 PRIV2: PRIV2
0x50032E70 C   FIELD 03w01 PRIV3: PRIV3
0x50032E70 C   FIELD 04w01 PRIV4: PRIV4
0x50032E70 C   FIELD 05w01 PRIV5: PRIV5
0x50032E70 C   FIELD 06w01 PRIV6: PRIV6
0x50032E70 C   FIELD 07w01 PRIV7: PRIV7
0x50032E70 C   FIELD 08w01 PRIV8: PRIV8
0x50032E70 C   FIELD 09w01 PRIV9: PRIV9
0x50032E70 C   FIELD 10w01 PRIV10: PRIV10
0x50032E70 C   FIELD 11w01 PRIV11: PRIV11
0x50032E70 C   FIELD 12w01 PRIV12: PRIV12
0x50032E70 C   FIELD 13w01 PRIV13: PRIV13
0x50032E70 C   FIELD 14w01 PRIV14: PRIV14
0x50032E70 C   FIELD 15w01 PRIV15: PRIV15
0x50032E70 C   FIELD 16w01 PRIV16: PRIV16
0x50032E70 C   FIELD 17w01 PRIV17: PRIV17
0x50032E70 C   FIELD 18w01 PRIV18: PRIV18
0x50032E70 C   FIELD 19w01 PRIV19: PRIV19
0x50032E70 C   FIELD 20w01 PRIV20: PRIV20
0x50032E70 C   FIELD 21w01 PRIV21: PRIV21
0x50032E70 C   FIELD 22w01 PRIV22: PRIV22
0x50032E70 C   FIELD 23w01 PRIV23: PRIV23
0x50032E70 C   FIELD 24w01 PRIV24: PRIV24
0x50032E70 C   FIELD 25w01 PRIV25: PRIV25
0x50032E70 C   FIELD 26w01 PRIV26: PRIV26
0x50032E70 C   FIELD 27w01 PRIV27: PRIV27
0x50032E70 C   FIELD 28w01 PRIV28: PRIV28
0x50032E70 C   FIELD 29w01 PRIV29: PRIV29
0x50032E70 C   FIELD 30w01 PRIV30: PRIV30
0x50032E70 C   FIELD 31w01 PRIV31: PRIV31
0x50032E74 B  REGISTER MPCBB1_PRIVCFGR29 (rw): MPCBB privileged configuration for super-block x register
0x50032E74 C   FIELD 00w01 PRIV0: PRIV0
0x50032E74 C   FIELD 01w01 PRIV1: PRIV1
0x50032E74 C   FIELD 02w01 PRIV2: PRIV2
0x50032E74 C   FIELD 03w01 PRIV3: PRIV3
0x50032E74 C   FIELD 04w01 PRIV4: PRIV4
0x50032E74 C   FIELD 05w01 PRIV5: PRIV5
0x50032E74 C   FIELD 06w01 PRIV6: PRIV6
0x50032E74 C   FIELD 07w01 PRIV7: PRIV7
0x50032E74 C   FIELD 08w01 PRIV8: PRIV8
0x50032E74 C   FIELD 09w01 PRIV9: PRIV9
0x50032E74 C   FIELD 10w01 PRIV10: PRIV10
0x50032E74 C   FIELD 11w01 PRIV11: PRIV11
0x50032E74 C   FIELD 12w01 PRIV12: PRIV12
0x50032E74 C   FIELD 13w01 PRIV13: PRIV13
0x50032E74 C   FIELD 14w01 PRIV14: PRIV14
0x50032E74 C   FIELD 15w01 PRIV15: PRIV15
0x50032E74 C   FIELD 16w01 PRIV16: PRIV16
0x50032E74 C   FIELD 17w01 PRIV17: PRIV17
0x50032E74 C   FIELD 18w01 PRIV18: PRIV18
0x50032E74 C   FIELD 19w01 PRIV19: PRIV19
0x50032E74 C   FIELD 20w01 PRIV20: PRIV20
0x50032E74 C   FIELD 21w01 PRIV21: PRIV21
0x50032E74 C   FIELD 22w01 PRIV22: PRIV22
0x50032E74 C   FIELD 23w01 PRIV23: PRIV23
0x50032E74 C   FIELD 24w01 PRIV24: PRIV24
0x50032E74 C   FIELD 25w01 PRIV25: PRIV25
0x50032E74 C   FIELD 26w01 PRIV26: PRIV26
0x50032E74 C   FIELD 27w01 PRIV27: PRIV27
0x50032E74 C   FIELD 28w01 PRIV28: PRIV28
0x50032E74 C   FIELD 29w01 PRIV29: PRIV29
0x50032E74 C   FIELD 30w01 PRIV30: PRIV30
0x50032E74 C   FIELD 31w01 PRIV31: PRIV31
0x50032E78 B  REGISTER MPCBB1_PRIVCFGR30 (rw): MPCBB privileged configuration for super-block x register
0x50032E78 C   FIELD 00w01 PRIV0: PRIV0
0x50032E78 C   FIELD 01w01 PRIV1: PRIV1
0x50032E78 C   FIELD 02w01 PRIV2: PRIV2
0x50032E78 C   FIELD 03w01 PRIV3: PRIV3
0x50032E78 C   FIELD 04w01 PRIV4: PRIV4
0x50032E78 C   FIELD 05w01 PRIV5: PRIV5
0x50032E78 C   FIELD 06w01 PRIV6: PRIV6
0x50032E78 C   FIELD 07w01 PRIV7: PRIV7
0x50032E78 C   FIELD 08w01 PRIV8: PRIV8
0x50032E78 C   FIELD 09w01 PRIV9: PRIV9
0x50032E78 C   FIELD 10w01 PRIV10: PRIV10
0x50032E78 C   FIELD 11w01 PRIV11: PRIV11
0x50032E78 C   FIELD 12w01 PRIV12: PRIV12
0x50032E78 C   FIELD 13w01 PRIV13: PRIV13
0x50032E78 C   FIELD 14w01 PRIV14: PRIV14
0x50032E78 C   FIELD 15w01 PRIV15: PRIV15
0x50032E78 C   FIELD 16w01 PRIV16: PRIV16
0x50032E78 C   FIELD 17w01 PRIV17: PRIV17
0x50032E78 C   FIELD 18w01 PRIV18: PRIV18
0x50032E78 C   FIELD 19w01 PRIV19: PRIV19
0x50032E78 C   FIELD 20w01 PRIV20: PRIV20
0x50032E78 C   FIELD 21w01 PRIV21: PRIV21
0x50032E78 C   FIELD 22w01 PRIV22: PRIV22
0x50032E78 C   FIELD 23w01 PRIV23: PRIV23
0x50032E78 C   FIELD 24w01 PRIV24: PRIV24
0x50032E78 C   FIELD 25w01 PRIV25: PRIV25
0x50032E78 C   FIELD 26w01 PRIV26: PRIV26
0x50032E78 C   FIELD 27w01 PRIV27: PRIV27
0x50032E78 C   FIELD 28w01 PRIV28: PRIV28
0x50032E78 C   FIELD 29w01 PRIV29: PRIV29
0x50032E78 C   FIELD 30w01 PRIV30: PRIV30
0x50032E78 C   FIELD 31w01 PRIV31: PRIV31
0x50032E7C B  REGISTER MPCBB1_PRIVCFGR31 (rw): MPCBB privileged configuration for super-block x register
0x50032E7C C   FIELD 00w01 PRIV0: PRIV0
0x50032E7C C   FIELD 01w01 PRIV1: PRIV1
0x50032E7C C   FIELD 02w01 PRIV2: PRIV2
0x50032E7C C   FIELD 03w01 PRIV3: PRIV3
0x50032E7C C   FIELD 04w01 PRIV4: PRIV4
0x50032E7C C   FIELD 05w01 PRIV5: PRIV5
0x50032E7C C   FIELD 06w01 PRIV6: PRIV6
0x50032E7C C   FIELD 07w01 PRIV7: PRIV7
0x50032E7C C   FIELD 08w01 PRIV8: PRIV8
0x50032E7C C   FIELD 09w01 PRIV9: PRIV9
0x50032E7C C   FIELD 10w01 PRIV10: PRIV10
0x50032E7C C   FIELD 11w01 PRIV11: PRIV11
0x50032E7C C   FIELD 12w01 PRIV12: PRIV12
0x50032E7C C   FIELD 13w01 PRIV13: PRIV13
0x50032E7C C   FIELD 14w01 PRIV14: PRIV14
0x50032E7C C   FIELD 15w01 PRIV15: PRIV15
0x50032E7C C   FIELD 16w01 PRIV16: PRIV16
0x50032E7C C   FIELD 17w01 PRIV17: PRIV17
0x50032E7C C   FIELD 18w01 PRIV18: PRIV18
0x50032E7C C   FIELD 19w01 PRIV19: PRIV19
0x50032E7C C   FIELD 20w01 PRIV20: PRIV20
0x50032E7C C   FIELD 21w01 PRIV21: PRIV21
0x50032E7C C   FIELD 22w01 PRIV22: PRIV22
0x50032E7C C   FIELD 23w01 PRIV23: PRIV23
0x50032E7C C   FIELD 24w01 PRIV24: PRIV24
0x50032E7C C   FIELD 25w01 PRIV25: PRIV25
0x50032E7C C   FIELD 26w01 PRIV26: PRIV26
0x50032E7C C   FIELD 27w01 PRIV27: PRIV27
0x50032E7C C   FIELD 28w01 PRIV28: PRIV28
0x50032E7C C   FIELD 29w01 PRIV29: PRIV29
0x50032E7C C   FIELD 30w01 PRIV30: PRIV30
0x50032E7C C   FIELD 31w01 PRIV31: PRIV31
0x50033000 A PERIPHERAL SEC_GTZC1_MPCBB2
0x50033000 B  REGISTER MPCBB2_CR (rw): MPCBB control register
0x50033000 C   FIELD 00w01 GLOCK: lock the control register of the MPCBB until next reset
0x50033000 C   FIELD 30w01 INVSECSTATE: SRAMx clocks security state
0x50033000 C   FIELD 31w01 SRWILADIS: secure read/write illegal access disable
0x50033010 B  REGISTER MPCBB2_CFGLOCKR1 (rw): GTZC1 SRAMz MPCBB configuration lock register
0x50033010 C   FIELD 00w01 SPLCK0: SPLCK0
0x50033010 C   FIELD 01w01 SPLCK1: SPLCK1
0x50033010 C   FIELD 02w01 SPLCK2: SPLCK2
0x50033010 C   FIELD 03w01 SPLCK3: SPLCK3
0x50033010 C   FIELD 04w01 SPLCK4: SPLCK4
0x50033010 C   FIELD 05w01 SPLCK5: SPLCK5
0x50033010 C   FIELD 06w01 SPLCK6: SPLCK6
0x50033010 C   FIELD 07w01 SPLCK7: SPLCK7
0x50033010 C   FIELD 08w01 SPLCK8: SPLCK8
0x50033010 C   FIELD 09w01 SPLCK9: SPLCK9
0x50033010 C   FIELD 10w01 SPLCK10: SPLCK10
0x50033010 C   FIELD 11w01 SPLCK11: SPLCK11
0x50033010 C   FIELD 12w01 SPLCK12: SPLCK12
0x50033010 C   FIELD 13w01 SPLCK13: SPLCK13
0x50033010 C   FIELD 14w01 SPLCK14: SPLCK14
0x50033010 C   FIELD 15w01 SPLCK15: SPLCK15
0x50033010 C   FIELD 16w01 SPLCK16: SPLCK16
0x50033010 C   FIELD 17w01 SPLCK17: SPLCK17
0x50033010 C   FIELD 18w01 SPLCK18: SPLCK18
0x50033010 C   FIELD 19w01 SPLCK19: SPLCK19
0x50033010 C   FIELD 20w01 SPLCK20: SPLCK20
0x50033010 C   FIELD 21w01 SPLCK21: SPLCK21
0x50033010 C   FIELD 22w01 SPLCK22: SPLCK22
0x50033010 C   FIELD 23w01 SPLCK23: SPLCK23
0x50033010 C   FIELD 24w01 SPLCK24: SPLCK24
0x50033010 C   FIELD 25w01 SPLCK25: SPLCK25
0x50033010 C   FIELD 26w01 SPLCK26: SPLCK26
0x50033010 C   FIELD 27w01 SPLCK27: SPLCK27
0x50033010 C   FIELD 28w01 SPLCK28: SPLCK28
0x50033010 C   FIELD 29w01 SPLCK29: SPLCK29
0x50033010 C   FIELD 30w01 SPLCK30: SPLCK30
0x50033010 C   FIELD 31w01 SPLCK31: SPLCK31
0x50033100 B  REGISTER MPCBB2_SECCFGR0 (rw): MPCBBx security configuration for super-block x register
0x50033100 C   FIELD 00w01 SEC0: SEC0
0x50033100 C   FIELD 01w01 SEC1: SEC1
0x50033100 C   FIELD 02w01 SEC2: SEC2
0x50033100 C   FIELD 03w01 SEC3: SEC3
0x50033100 C   FIELD 04w01 SEC4: SEC4
0x50033100 C   FIELD 05w01 SEC5: SEC5
0x50033100 C   FIELD 06w01 SEC6: SEC6
0x50033100 C   FIELD 07w01 SEC7: SEC7
0x50033100 C   FIELD 08w01 SEC8: SEC8
0x50033100 C   FIELD 09w01 SEC9: SEC9
0x50033100 C   FIELD 10w01 SEC10: SEC10
0x50033100 C   FIELD 11w01 SEC11: SEC11
0x50033100 C   FIELD 12w01 SEC12: SEC12
0x50033100 C   FIELD 13w01 SEC13: SEC13
0x50033100 C   FIELD 14w01 SEC14: SEC14
0x50033100 C   FIELD 15w01 SEC15: SEC15
0x50033100 C   FIELD 16w01 SEC16: SEC16
0x50033100 C   FIELD 17w01 SEC17: SEC17
0x50033100 C   FIELD 18w01 SEC18: SEC18
0x50033100 C   FIELD 19w01 SEC19: SEC19
0x50033100 C   FIELD 20w01 SEC20: SEC20
0x50033100 C   FIELD 21w01 SEC21: SEC21
0x50033100 C   FIELD 22w01 SEC22: SEC22
0x50033100 C   FIELD 23w01 SEC23: SEC23
0x50033100 C   FIELD 24w01 SEC24: SEC24
0x50033100 C   FIELD 25w01 SEC25: SEC25
0x50033100 C   FIELD 26w01 SEC26: SEC26
0x50033100 C   FIELD 27w01 SEC27: SEC27
0x50033100 C   FIELD 28w01 SEC28: SEC28
0x50033100 C   FIELD 29w01 SEC29: SEC29
0x50033100 C   FIELD 30w01 SEC30: SEC30
0x50033100 C   FIELD 31w01 SEC31: SEC31
0x50033104 B  REGISTER MPCBB2_SECCFGR1 (rw): MPCBBx security configuration for super-block x register
0x50033104 C   FIELD 00w01 SEC0: SEC0
0x50033104 C   FIELD 01w01 SEC1: SEC1
0x50033104 C   FIELD 02w01 SEC2: SEC2
0x50033104 C   FIELD 03w01 SEC3: SEC3
0x50033104 C   FIELD 04w01 SEC4: SEC4
0x50033104 C   FIELD 05w01 SEC5: SEC5
0x50033104 C   FIELD 06w01 SEC6: SEC6
0x50033104 C   FIELD 07w01 SEC7: SEC7
0x50033104 C   FIELD 08w01 SEC8: SEC8
0x50033104 C   FIELD 09w01 SEC9: SEC9
0x50033104 C   FIELD 10w01 SEC10: SEC10
0x50033104 C   FIELD 11w01 SEC11: SEC11
0x50033104 C   FIELD 12w01 SEC12: SEC12
0x50033104 C   FIELD 13w01 SEC13: SEC13
0x50033104 C   FIELD 14w01 SEC14: SEC14
0x50033104 C   FIELD 15w01 SEC15: SEC15
0x50033104 C   FIELD 16w01 SEC16: SEC16
0x50033104 C   FIELD 17w01 SEC17: SEC17
0x50033104 C   FIELD 18w01 SEC18: SEC18
0x50033104 C   FIELD 19w01 SEC19: SEC19
0x50033104 C   FIELD 20w01 SEC20: SEC20
0x50033104 C   FIELD 21w01 SEC21: SEC21
0x50033104 C   FIELD 22w01 SEC22: SEC22
0x50033104 C   FIELD 23w01 SEC23: SEC23
0x50033104 C   FIELD 24w01 SEC24: SEC24
0x50033104 C   FIELD 25w01 SEC25: SEC25
0x50033104 C   FIELD 26w01 SEC26: SEC26
0x50033104 C   FIELD 27w01 SEC27: SEC27
0x50033104 C   FIELD 28w01 SEC28: SEC28
0x50033104 C   FIELD 29w01 SEC29: SEC29
0x50033104 C   FIELD 30w01 SEC30: SEC30
0x50033104 C   FIELD 31w01 SEC31: SEC31
0x50033108 B  REGISTER MPCBB2_SECCFGR2 (rw): MPCBBx security configuration for super-block x register
0x50033108 C   FIELD 00w01 SEC0: SEC0
0x50033108 C   FIELD 01w01 SEC1: SEC1
0x50033108 C   FIELD 02w01 SEC2: SEC2
0x50033108 C   FIELD 03w01 SEC3: SEC3
0x50033108 C   FIELD 04w01 SEC4: SEC4
0x50033108 C   FIELD 05w01 SEC5: SEC5
0x50033108 C   FIELD 06w01 SEC6: SEC6
0x50033108 C   FIELD 07w01 SEC7: SEC7
0x50033108 C   FIELD 08w01 SEC8: SEC8
0x50033108 C   FIELD 09w01 SEC9: SEC9
0x50033108 C   FIELD 10w01 SEC10: SEC10
0x50033108 C   FIELD 11w01 SEC11: SEC11
0x50033108 C   FIELD 12w01 SEC12: SEC12
0x50033108 C   FIELD 13w01 SEC13: SEC13
0x50033108 C   FIELD 14w01 SEC14: SEC14
0x50033108 C   FIELD 15w01 SEC15: SEC15
0x50033108 C   FIELD 16w01 SEC16: SEC16
0x50033108 C   FIELD 17w01 SEC17: SEC17
0x50033108 C   FIELD 18w01 SEC18: SEC18
0x50033108 C   FIELD 19w01 SEC19: SEC19
0x50033108 C   FIELD 20w01 SEC20: SEC20
0x50033108 C   FIELD 21w01 SEC21: SEC21
0x50033108 C   FIELD 22w01 SEC22: SEC22
0x50033108 C   FIELD 23w01 SEC23: SEC23
0x50033108 C   FIELD 24w01 SEC24: SEC24
0x50033108 C   FIELD 25w01 SEC25: SEC25
0x50033108 C   FIELD 26w01 SEC26: SEC26
0x50033108 C   FIELD 27w01 SEC27: SEC27
0x50033108 C   FIELD 28w01 SEC28: SEC28
0x50033108 C   FIELD 29w01 SEC29: SEC29
0x50033108 C   FIELD 30w01 SEC30: SEC30
0x50033108 C   FIELD 31w01 SEC31: SEC31
0x5003310C B  REGISTER MPCBB2_SECCFGR3 (rw): MPCBBx security configuration for super-block x register
0x5003310C C   FIELD 00w01 SEC0: SEC0
0x5003310C C   FIELD 01w01 SEC1: SEC1
0x5003310C C   FIELD 02w01 SEC2: SEC2
0x5003310C C   FIELD 03w01 SEC3: SEC3
0x5003310C C   FIELD 04w01 SEC4: SEC4
0x5003310C C   FIELD 05w01 SEC5: SEC5
0x5003310C C   FIELD 06w01 SEC6: SEC6
0x5003310C C   FIELD 07w01 SEC7: SEC7
0x5003310C C   FIELD 08w01 SEC8: SEC8
0x5003310C C   FIELD 09w01 SEC9: SEC9
0x5003310C C   FIELD 10w01 SEC10: SEC10
0x5003310C C   FIELD 11w01 SEC11: SEC11
0x5003310C C   FIELD 12w01 SEC12: SEC12
0x5003310C C   FIELD 13w01 SEC13: SEC13
0x5003310C C   FIELD 14w01 SEC14: SEC14
0x5003310C C   FIELD 15w01 SEC15: SEC15
0x5003310C C   FIELD 16w01 SEC16: SEC16
0x5003310C C   FIELD 17w01 SEC17: SEC17
0x5003310C C   FIELD 18w01 SEC18: SEC18
0x5003310C C   FIELD 19w01 SEC19: SEC19
0x5003310C C   FIELD 20w01 SEC20: SEC20
0x5003310C C   FIELD 21w01 SEC21: SEC21
0x5003310C C   FIELD 22w01 SEC22: SEC22
0x5003310C C   FIELD 23w01 SEC23: SEC23
0x5003310C C   FIELD 24w01 SEC24: SEC24
0x5003310C C   FIELD 25w01 SEC25: SEC25
0x5003310C C   FIELD 26w01 SEC26: SEC26
0x5003310C C   FIELD 27w01 SEC27: SEC27
0x5003310C C   FIELD 28w01 SEC28: SEC28
0x5003310C C   FIELD 29w01 SEC29: SEC29
0x5003310C C   FIELD 30w01 SEC30: SEC30
0x5003310C C   FIELD 31w01 SEC31: SEC31
0x50033110 B  REGISTER MPCBB2_SECCFGR4 (rw): MPCBBx security configuration for super-block x register
0x50033110 C   FIELD 00w01 SEC0: SEC0
0x50033110 C   FIELD 01w01 SEC1: SEC1
0x50033110 C   FIELD 02w01 SEC2: SEC2
0x50033110 C   FIELD 03w01 SEC3: SEC3
0x50033110 C   FIELD 04w01 SEC4: SEC4
0x50033110 C   FIELD 05w01 SEC5: SEC5
0x50033110 C   FIELD 06w01 SEC6: SEC6
0x50033110 C   FIELD 07w01 SEC7: SEC7
0x50033110 C   FIELD 08w01 SEC8: SEC8
0x50033110 C   FIELD 09w01 SEC9: SEC9
0x50033110 C   FIELD 10w01 SEC10: SEC10
0x50033110 C   FIELD 11w01 SEC11: SEC11
0x50033110 C   FIELD 12w01 SEC12: SEC12
0x50033110 C   FIELD 13w01 SEC13: SEC13
0x50033110 C   FIELD 14w01 SEC14: SEC14
0x50033110 C   FIELD 15w01 SEC15: SEC15
0x50033110 C   FIELD 16w01 SEC16: SEC16
0x50033110 C   FIELD 17w01 SEC17: SEC17
0x50033110 C   FIELD 18w01 SEC18: SEC18
0x50033110 C   FIELD 19w01 SEC19: SEC19
0x50033110 C   FIELD 20w01 SEC20: SEC20
0x50033110 C   FIELD 21w01 SEC21: SEC21
0x50033110 C   FIELD 22w01 SEC22: SEC22
0x50033110 C   FIELD 23w01 SEC23: SEC23
0x50033110 C   FIELD 24w01 SEC24: SEC24
0x50033110 C   FIELD 25w01 SEC25: SEC25
0x50033110 C   FIELD 26w01 SEC26: SEC26
0x50033110 C   FIELD 27w01 SEC27: SEC27
0x50033110 C   FIELD 28w01 SEC28: SEC28
0x50033110 C   FIELD 29w01 SEC29: SEC29
0x50033110 C   FIELD 30w01 SEC30: SEC30
0x50033110 C   FIELD 31w01 SEC31: SEC31
0x50033114 B  REGISTER MPCBB2_SECCFGR5 (rw): MPCBBx security configuration for super-block x register
0x50033114 C   FIELD 00w01 SEC0: SEC0
0x50033114 C   FIELD 01w01 SEC1: SEC1
0x50033114 C   FIELD 02w01 SEC2: SEC2
0x50033114 C   FIELD 03w01 SEC3: SEC3
0x50033114 C   FIELD 04w01 SEC4: SEC4
0x50033114 C   FIELD 05w01 SEC5: SEC5
0x50033114 C   FIELD 06w01 SEC6: SEC6
0x50033114 C   FIELD 07w01 SEC7: SEC7
0x50033114 C   FIELD 08w01 SEC8: SEC8
0x50033114 C   FIELD 09w01 SEC9: SEC9
0x50033114 C   FIELD 10w01 SEC10: SEC10
0x50033114 C   FIELD 11w01 SEC11: SEC11
0x50033114 C   FIELD 12w01 SEC12: SEC12
0x50033114 C   FIELD 13w01 SEC13: SEC13
0x50033114 C   FIELD 14w01 SEC14: SEC14
0x50033114 C   FIELD 15w01 SEC15: SEC15
0x50033114 C   FIELD 16w01 SEC16: SEC16
0x50033114 C   FIELD 17w01 SEC17: SEC17
0x50033114 C   FIELD 18w01 SEC18: SEC18
0x50033114 C   FIELD 19w01 SEC19: SEC19
0x50033114 C   FIELD 20w01 SEC20: SEC20
0x50033114 C   FIELD 21w01 SEC21: SEC21
0x50033114 C   FIELD 22w01 SEC22: SEC22
0x50033114 C   FIELD 23w01 SEC23: SEC23
0x50033114 C   FIELD 24w01 SEC24: SEC24
0x50033114 C   FIELD 25w01 SEC25: SEC25
0x50033114 C   FIELD 26w01 SEC26: SEC26
0x50033114 C   FIELD 27w01 SEC27: SEC27
0x50033114 C   FIELD 28w01 SEC28: SEC28
0x50033114 C   FIELD 29w01 SEC29: SEC29
0x50033114 C   FIELD 30w01 SEC30: SEC30
0x50033114 C   FIELD 31w01 SEC31: SEC31
0x50033118 B  REGISTER MPCBB2_SECCFGR6 (rw): MPCBBx security configuration for super-block x register
0x50033118 C   FIELD 00w01 SEC0: SEC0
0x50033118 C   FIELD 01w01 SEC1: SEC1
0x50033118 C   FIELD 02w01 SEC2: SEC2
0x50033118 C   FIELD 03w01 SEC3: SEC3
0x50033118 C   FIELD 04w01 SEC4: SEC4
0x50033118 C   FIELD 05w01 SEC5: SEC5
0x50033118 C   FIELD 06w01 SEC6: SEC6
0x50033118 C   FIELD 07w01 SEC7: SEC7
0x50033118 C   FIELD 08w01 SEC8: SEC8
0x50033118 C   FIELD 09w01 SEC9: SEC9
0x50033118 C   FIELD 10w01 SEC10: SEC10
0x50033118 C   FIELD 11w01 SEC11: SEC11
0x50033118 C   FIELD 12w01 SEC12: SEC12
0x50033118 C   FIELD 13w01 SEC13: SEC13
0x50033118 C   FIELD 14w01 SEC14: SEC14
0x50033118 C   FIELD 15w01 SEC15: SEC15
0x50033118 C   FIELD 16w01 SEC16: SEC16
0x50033118 C   FIELD 17w01 SEC17: SEC17
0x50033118 C   FIELD 18w01 SEC18: SEC18
0x50033118 C   FIELD 19w01 SEC19: SEC19
0x50033118 C   FIELD 20w01 SEC20: SEC20
0x50033118 C   FIELD 21w01 SEC21: SEC21
0x50033118 C   FIELD 22w01 SEC22: SEC22
0x50033118 C   FIELD 23w01 SEC23: SEC23
0x50033118 C   FIELD 24w01 SEC24: SEC24
0x50033118 C   FIELD 25w01 SEC25: SEC25
0x50033118 C   FIELD 26w01 SEC26: SEC26
0x50033118 C   FIELD 27w01 SEC27: SEC27
0x50033118 C   FIELD 28w01 SEC28: SEC28
0x50033118 C   FIELD 29w01 SEC29: SEC29
0x50033118 C   FIELD 30w01 SEC30: SEC30
0x50033118 C   FIELD 31w01 SEC31: SEC31
0x5003311C B  REGISTER MPCBB2_SECCFGR7 (rw): MPCBBx security configuration for super-block x register
0x5003311C C   FIELD 00w01 SEC0: SEC0
0x5003311C C   FIELD 01w01 SEC1: SEC1
0x5003311C C   FIELD 02w01 SEC2: SEC2
0x5003311C C   FIELD 03w01 SEC3: SEC3
0x5003311C C   FIELD 04w01 SEC4: SEC4
0x5003311C C   FIELD 05w01 SEC5: SEC5
0x5003311C C   FIELD 06w01 SEC6: SEC6
0x5003311C C   FIELD 07w01 SEC7: SEC7
0x5003311C C   FIELD 08w01 SEC8: SEC8
0x5003311C C   FIELD 09w01 SEC9: SEC9
0x5003311C C   FIELD 10w01 SEC10: SEC10
0x5003311C C   FIELD 11w01 SEC11: SEC11
0x5003311C C   FIELD 12w01 SEC12: SEC12
0x5003311C C   FIELD 13w01 SEC13: SEC13
0x5003311C C   FIELD 14w01 SEC14: SEC14
0x5003311C C   FIELD 15w01 SEC15: SEC15
0x5003311C C   FIELD 16w01 SEC16: SEC16
0x5003311C C   FIELD 17w01 SEC17: SEC17
0x5003311C C   FIELD 18w01 SEC18: SEC18
0x5003311C C   FIELD 19w01 SEC19: SEC19
0x5003311C C   FIELD 20w01 SEC20: SEC20
0x5003311C C   FIELD 21w01 SEC21: SEC21
0x5003311C C   FIELD 22w01 SEC22: SEC22
0x5003311C C   FIELD 23w01 SEC23: SEC23
0x5003311C C   FIELD 24w01 SEC24: SEC24
0x5003311C C   FIELD 25w01 SEC25: SEC25
0x5003311C C   FIELD 26w01 SEC26: SEC26
0x5003311C C   FIELD 27w01 SEC27: SEC27
0x5003311C C   FIELD 28w01 SEC28: SEC28
0x5003311C C   FIELD 29w01 SEC29: SEC29
0x5003311C C   FIELD 30w01 SEC30: SEC30
0x5003311C C   FIELD 31w01 SEC31: SEC31
0x50033120 B  REGISTER MPCBB2_SECCFGR8 (rw): MPCBBx security configuration for super-block x register
0x50033120 C   FIELD 00w01 SEC0: SEC0
0x50033120 C   FIELD 01w01 SEC1: SEC1
0x50033120 C   FIELD 02w01 SEC2: SEC2
0x50033120 C   FIELD 03w01 SEC3: SEC3
0x50033120 C   FIELD 04w01 SEC4: SEC4
0x50033120 C   FIELD 05w01 SEC5: SEC5
0x50033120 C   FIELD 06w01 SEC6: SEC6
0x50033120 C   FIELD 07w01 SEC7: SEC7
0x50033120 C   FIELD 08w01 SEC8: SEC8
0x50033120 C   FIELD 09w01 SEC9: SEC9
0x50033120 C   FIELD 10w01 SEC10: SEC10
0x50033120 C   FIELD 11w01 SEC11: SEC11
0x50033120 C   FIELD 12w01 SEC12: SEC12
0x50033120 C   FIELD 13w01 SEC13: SEC13
0x50033120 C   FIELD 14w01 SEC14: SEC14
0x50033120 C   FIELD 15w01 SEC15: SEC15
0x50033120 C   FIELD 16w01 SEC16: SEC16
0x50033120 C   FIELD 17w01 SEC17: SEC17
0x50033120 C   FIELD 18w01 SEC18: SEC18
0x50033120 C   FIELD 19w01 SEC19: SEC19
0x50033120 C   FIELD 20w01 SEC20: SEC20
0x50033120 C   FIELD 21w01 SEC21: SEC21
0x50033120 C   FIELD 22w01 SEC22: SEC22
0x50033120 C   FIELD 23w01 SEC23: SEC23
0x50033120 C   FIELD 24w01 SEC24: SEC24
0x50033120 C   FIELD 25w01 SEC25: SEC25
0x50033120 C   FIELD 26w01 SEC26: SEC26
0x50033120 C   FIELD 27w01 SEC27: SEC27
0x50033120 C   FIELD 28w01 SEC28: SEC28
0x50033120 C   FIELD 29w01 SEC29: SEC29
0x50033120 C   FIELD 30w01 SEC30: SEC30
0x50033120 C   FIELD 31w01 SEC31: SEC31
0x50033124 B  REGISTER MPCBB2_SECCFGR9 (rw): MPCBBx security configuration for super-block x register
0x50033124 C   FIELD 00w01 SEC0: SEC0
0x50033124 C   FIELD 01w01 SEC1: SEC1
0x50033124 C   FIELD 02w01 SEC2: SEC2
0x50033124 C   FIELD 03w01 SEC3: SEC3
0x50033124 C   FIELD 04w01 SEC4: SEC4
0x50033124 C   FIELD 05w01 SEC5: SEC5
0x50033124 C   FIELD 06w01 SEC6: SEC6
0x50033124 C   FIELD 07w01 SEC7: SEC7
0x50033124 C   FIELD 08w01 SEC8: SEC8
0x50033124 C   FIELD 09w01 SEC9: SEC9
0x50033124 C   FIELD 10w01 SEC10: SEC10
0x50033124 C   FIELD 11w01 SEC11: SEC11
0x50033124 C   FIELD 12w01 SEC12: SEC12
0x50033124 C   FIELD 13w01 SEC13: SEC13
0x50033124 C   FIELD 14w01 SEC14: SEC14
0x50033124 C   FIELD 15w01 SEC15: SEC15
0x50033124 C   FIELD 16w01 SEC16: SEC16
0x50033124 C   FIELD 17w01 SEC17: SEC17
0x50033124 C   FIELD 18w01 SEC18: SEC18
0x50033124 C   FIELD 19w01 SEC19: SEC19
0x50033124 C   FIELD 20w01 SEC20: SEC20
0x50033124 C   FIELD 21w01 SEC21: SEC21
0x50033124 C   FIELD 22w01 SEC22: SEC22
0x50033124 C   FIELD 23w01 SEC23: SEC23
0x50033124 C   FIELD 24w01 SEC24: SEC24
0x50033124 C   FIELD 25w01 SEC25: SEC25
0x50033124 C   FIELD 26w01 SEC26: SEC26
0x50033124 C   FIELD 27w01 SEC27: SEC27
0x50033124 C   FIELD 28w01 SEC28: SEC28
0x50033124 C   FIELD 29w01 SEC29: SEC29
0x50033124 C   FIELD 30w01 SEC30: SEC30
0x50033124 C   FIELD 31w01 SEC31: SEC31
0x50033128 B  REGISTER MPCBB2_SECCFGR10 (rw): MPCBBx security configuration for super-block x register
0x50033128 C   FIELD 00w01 SEC0: SEC0
0x50033128 C   FIELD 01w01 SEC1: SEC1
0x50033128 C   FIELD 02w01 SEC2: SEC2
0x50033128 C   FIELD 03w01 SEC3: SEC3
0x50033128 C   FIELD 04w01 SEC4: SEC4
0x50033128 C   FIELD 05w01 SEC5: SEC5
0x50033128 C   FIELD 06w01 SEC6: SEC6
0x50033128 C   FIELD 07w01 SEC7: SEC7
0x50033128 C   FIELD 08w01 SEC8: SEC8
0x50033128 C   FIELD 09w01 SEC9: SEC9
0x50033128 C   FIELD 10w01 SEC10: SEC10
0x50033128 C   FIELD 11w01 SEC11: SEC11
0x50033128 C   FIELD 12w01 SEC12: SEC12
0x50033128 C   FIELD 13w01 SEC13: SEC13
0x50033128 C   FIELD 14w01 SEC14: SEC14
0x50033128 C   FIELD 15w01 SEC15: SEC15
0x50033128 C   FIELD 16w01 SEC16: SEC16
0x50033128 C   FIELD 17w01 SEC17: SEC17
0x50033128 C   FIELD 18w01 SEC18: SEC18
0x50033128 C   FIELD 19w01 SEC19: SEC19
0x50033128 C   FIELD 20w01 SEC20: SEC20
0x50033128 C   FIELD 21w01 SEC21: SEC21
0x50033128 C   FIELD 22w01 SEC22: SEC22
0x50033128 C   FIELD 23w01 SEC23: SEC23
0x50033128 C   FIELD 24w01 SEC24: SEC24
0x50033128 C   FIELD 25w01 SEC25: SEC25
0x50033128 C   FIELD 26w01 SEC26: SEC26
0x50033128 C   FIELD 27w01 SEC27: SEC27
0x50033128 C   FIELD 28w01 SEC28: SEC28
0x50033128 C   FIELD 29w01 SEC29: SEC29
0x50033128 C   FIELD 30w01 SEC30: SEC30
0x50033128 C   FIELD 31w01 SEC31: SEC31
0x5003312C B  REGISTER MPCBB2_SECCFGR11 (rw): MPCBBx security configuration for super-block x register
0x5003312C C   FIELD 00w01 SEC0: SEC0
0x5003312C C   FIELD 01w01 SEC1: SEC1
0x5003312C C   FIELD 02w01 SEC2: SEC2
0x5003312C C   FIELD 03w01 SEC3: SEC3
0x5003312C C   FIELD 04w01 SEC4: SEC4
0x5003312C C   FIELD 05w01 SEC5: SEC5
0x5003312C C   FIELD 06w01 SEC6: SEC6
0x5003312C C   FIELD 07w01 SEC7: SEC7
0x5003312C C   FIELD 08w01 SEC8: SEC8
0x5003312C C   FIELD 09w01 SEC9: SEC9
0x5003312C C   FIELD 10w01 SEC10: SEC10
0x5003312C C   FIELD 11w01 SEC11: SEC11
0x5003312C C   FIELD 12w01 SEC12: SEC12
0x5003312C C   FIELD 13w01 SEC13: SEC13
0x5003312C C   FIELD 14w01 SEC14: SEC14
0x5003312C C   FIELD 15w01 SEC15: SEC15
0x5003312C C   FIELD 16w01 SEC16: SEC16
0x5003312C C   FIELD 17w01 SEC17: SEC17
0x5003312C C   FIELD 18w01 SEC18: SEC18
0x5003312C C   FIELD 19w01 SEC19: SEC19
0x5003312C C   FIELD 20w01 SEC20: SEC20
0x5003312C C   FIELD 21w01 SEC21: SEC21
0x5003312C C   FIELD 22w01 SEC22: SEC22
0x5003312C C   FIELD 23w01 SEC23: SEC23
0x5003312C C   FIELD 24w01 SEC24: SEC24
0x5003312C C   FIELD 25w01 SEC25: SEC25
0x5003312C C   FIELD 26w01 SEC26: SEC26
0x5003312C C   FIELD 27w01 SEC27: SEC27
0x5003312C C   FIELD 28w01 SEC28: SEC28
0x5003312C C   FIELD 29w01 SEC29: SEC29
0x5003312C C   FIELD 30w01 SEC30: SEC30
0x5003312C C   FIELD 31w01 SEC31: SEC31
0x50033130 B  REGISTER MPCBB2_SECCFGR12 (rw): MPCBBx security configuration for super-block x register
0x50033130 C   FIELD 00w01 SEC0: SEC0
0x50033130 C   FIELD 01w01 SEC1: SEC1
0x50033130 C   FIELD 02w01 SEC2: SEC2
0x50033130 C   FIELD 03w01 SEC3: SEC3
0x50033130 C   FIELD 04w01 SEC4: SEC4
0x50033130 C   FIELD 05w01 SEC5: SEC5
0x50033130 C   FIELD 06w01 SEC6: SEC6
0x50033130 C   FIELD 07w01 SEC7: SEC7
0x50033130 C   FIELD 08w01 SEC8: SEC8
0x50033130 C   FIELD 09w01 SEC9: SEC9
0x50033130 C   FIELD 10w01 SEC10: SEC10
0x50033130 C   FIELD 11w01 SEC11: SEC11
0x50033130 C   FIELD 12w01 SEC12: SEC12
0x50033130 C   FIELD 13w01 SEC13: SEC13
0x50033130 C   FIELD 14w01 SEC14: SEC14
0x50033130 C   FIELD 15w01 SEC15: SEC15
0x50033130 C   FIELD 16w01 SEC16: SEC16
0x50033130 C   FIELD 17w01 SEC17: SEC17
0x50033130 C   FIELD 18w01 SEC18: SEC18
0x50033130 C   FIELD 19w01 SEC19: SEC19
0x50033130 C   FIELD 20w01 SEC20: SEC20
0x50033130 C   FIELD 21w01 SEC21: SEC21
0x50033130 C   FIELD 22w01 SEC22: SEC22
0x50033130 C   FIELD 23w01 SEC23: SEC23
0x50033130 C   FIELD 24w01 SEC24: SEC24
0x50033130 C   FIELD 25w01 SEC25: SEC25
0x50033130 C   FIELD 26w01 SEC26: SEC26
0x50033130 C   FIELD 27w01 SEC27: SEC27
0x50033130 C   FIELD 28w01 SEC28: SEC28
0x50033130 C   FIELD 29w01 SEC29: SEC29
0x50033130 C   FIELD 30w01 SEC30: SEC30
0x50033130 C   FIELD 31w01 SEC31: SEC31
0x50033134 B  REGISTER MPCBB2_SECCFGR13 (rw): MPCBBx security configuration for super-block x register
0x50033134 C   FIELD 00w01 SEC0: SEC0
0x50033134 C   FIELD 01w01 SEC1: SEC1
0x50033134 C   FIELD 02w01 SEC2: SEC2
0x50033134 C   FIELD 03w01 SEC3: SEC3
0x50033134 C   FIELD 04w01 SEC4: SEC4
0x50033134 C   FIELD 05w01 SEC5: SEC5
0x50033134 C   FIELD 06w01 SEC6: SEC6
0x50033134 C   FIELD 07w01 SEC7: SEC7
0x50033134 C   FIELD 08w01 SEC8: SEC8
0x50033134 C   FIELD 09w01 SEC9: SEC9
0x50033134 C   FIELD 10w01 SEC10: SEC10
0x50033134 C   FIELD 11w01 SEC11: SEC11
0x50033134 C   FIELD 12w01 SEC12: SEC12
0x50033134 C   FIELD 13w01 SEC13: SEC13
0x50033134 C   FIELD 14w01 SEC14: SEC14
0x50033134 C   FIELD 15w01 SEC15: SEC15
0x50033134 C   FIELD 16w01 SEC16: SEC16
0x50033134 C   FIELD 17w01 SEC17: SEC17
0x50033134 C   FIELD 18w01 SEC18: SEC18
0x50033134 C   FIELD 19w01 SEC19: SEC19
0x50033134 C   FIELD 20w01 SEC20: SEC20
0x50033134 C   FIELD 21w01 SEC21: SEC21
0x50033134 C   FIELD 22w01 SEC22: SEC22
0x50033134 C   FIELD 23w01 SEC23: SEC23
0x50033134 C   FIELD 24w01 SEC24: SEC24
0x50033134 C   FIELD 25w01 SEC25: SEC25
0x50033134 C   FIELD 26w01 SEC26: SEC26
0x50033134 C   FIELD 27w01 SEC27: SEC27
0x50033134 C   FIELD 28w01 SEC28: SEC28
0x50033134 C   FIELD 29w01 SEC29: SEC29
0x50033134 C   FIELD 30w01 SEC30: SEC30
0x50033134 C   FIELD 31w01 SEC31: SEC31
0x50033138 B  REGISTER MPCBB2_SECCFGR14 (rw): MPCBBx security configuration for super-block x register
0x50033138 C   FIELD 00w01 SEC0: SEC0
0x50033138 C   FIELD 01w01 SEC1: SEC1
0x50033138 C   FIELD 02w01 SEC2: SEC2
0x50033138 C   FIELD 03w01 SEC3: SEC3
0x50033138 C   FIELD 04w01 SEC4: SEC4
0x50033138 C   FIELD 05w01 SEC5: SEC5
0x50033138 C   FIELD 06w01 SEC6: SEC6
0x50033138 C   FIELD 07w01 SEC7: SEC7
0x50033138 C   FIELD 08w01 SEC8: SEC8
0x50033138 C   FIELD 09w01 SEC9: SEC9
0x50033138 C   FIELD 10w01 SEC10: SEC10
0x50033138 C   FIELD 11w01 SEC11: SEC11
0x50033138 C   FIELD 12w01 SEC12: SEC12
0x50033138 C   FIELD 13w01 SEC13: SEC13
0x50033138 C   FIELD 14w01 SEC14: SEC14
0x50033138 C   FIELD 15w01 SEC15: SEC15
0x50033138 C   FIELD 16w01 SEC16: SEC16
0x50033138 C   FIELD 17w01 SEC17: SEC17
0x50033138 C   FIELD 18w01 SEC18: SEC18
0x50033138 C   FIELD 19w01 SEC19: SEC19
0x50033138 C   FIELD 20w01 SEC20: SEC20
0x50033138 C   FIELD 21w01 SEC21: SEC21
0x50033138 C   FIELD 22w01 SEC22: SEC22
0x50033138 C   FIELD 23w01 SEC23: SEC23
0x50033138 C   FIELD 24w01 SEC24: SEC24
0x50033138 C   FIELD 25w01 SEC25: SEC25
0x50033138 C   FIELD 26w01 SEC26: SEC26
0x50033138 C   FIELD 27w01 SEC27: SEC27
0x50033138 C   FIELD 28w01 SEC28: SEC28
0x50033138 C   FIELD 29w01 SEC29: SEC29
0x50033138 C   FIELD 30w01 SEC30: SEC30
0x50033138 C   FIELD 31w01 SEC31: SEC31
0x5003313C B  REGISTER MPCBB2_SECCFGR15 (rw): MPCBBx security configuration for super-block x register
0x5003313C C   FIELD 00w01 SEC0: SEC0
0x5003313C C   FIELD 01w01 SEC1: SEC1
0x5003313C C   FIELD 02w01 SEC2: SEC2
0x5003313C C   FIELD 03w01 SEC3: SEC3
0x5003313C C   FIELD 04w01 SEC4: SEC4
0x5003313C C   FIELD 05w01 SEC5: SEC5
0x5003313C C   FIELD 06w01 SEC6: SEC6
0x5003313C C   FIELD 07w01 SEC7: SEC7
0x5003313C C   FIELD 08w01 SEC8: SEC8
0x5003313C C   FIELD 09w01 SEC9: SEC9
0x5003313C C   FIELD 10w01 SEC10: SEC10
0x5003313C C   FIELD 11w01 SEC11: SEC11
0x5003313C C   FIELD 12w01 SEC12: SEC12
0x5003313C C   FIELD 13w01 SEC13: SEC13
0x5003313C C   FIELD 14w01 SEC14: SEC14
0x5003313C C   FIELD 15w01 SEC15: SEC15
0x5003313C C   FIELD 16w01 SEC16: SEC16
0x5003313C C   FIELD 17w01 SEC17: SEC17
0x5003313C C   FIELD 18w01 SEC18: SEC18
0x5003313C C   FIELD 19w01 SEC19: SEC19
0x5003313C C   FIELD 20w01 SEC20: SEC20
0x5003313C C   FIELD 21w01 SEC21: SEC21
0x5003313C C   FIELD 22w01 SEC22: SEC22
0x5003313C C   FIELD 23w01 SEC23: SEC23
0x5003313C C   FIELD 24w01 SEC24: SEC24
0x5003313C C   FIELD 25w01 SEC25: SEC25
0x5003313C C   FIELD 26w01 SEC26: SEC26
0x5003313C C   FIELD 27w01 SEC27: SEC27
0x5003313C C   FIELD 28w01 SEC28: SEC28
0x5003313C C   FIELD 29w01 SEC29: SEC29
0x5003313C C   FIELD 30w01 SEC30: SEC30
0x5003313C C   FIELD 31w01 SEC31: SEC31
0x50033140 B  REGISTER MPCBB2_SECCFGR16 (rw): MPCBBx security configuration for super-block x register
0x50033140 C   FIELD 00w01 SEC0: SEC0
0x50033140 C   FIELD 01w01 SEC1: SEC1
0x50033140 C   FIELD 02w01 SEC2: SEC2
0x50033140 C   FIELD 03w01 SEC3: SEC3
0x50033140 C   FIELD 04w01 SEC4: SEC4
0x50033140 C   FIELD 05w01 SEC5: SEC5
0x50033140 C   FIELD 06w01 SEC6: SEC6
0x50033140 C   FIELD 07w01 SEC7: SEC7
0x50033140 C   FIELD 08w01 SEC8: SEC8
0x50033140 C   FIELD 09w01 SEC9: SEC9
0x50033140 C   FIELD 10w01 SEC10: SEC10
0x50033140 C   FIELD 11w01 SEC11: SEC11
0x50033140 C   FIELD 12w01 SEC12: SEC12
0x50033140 C   FIELD 13w01 SEC13: SEC13
0x50033140 C   FIELD 14w01 SEC14: SEC14
0x50033140 C   FIELD 15w01 SEC15: SEC15
0x50033140 C   FIELD 16w01 SEC16: SEC16
0x50033140 C   FIELD 17w01 SEC17: SEC17
0x50033140 C   FIELD 18w01 SEC18: SEC18
0x50033140 C   FIELD 19w01 SEC19: SEC19
0x50033140 C   FIELD 20w01 SEC20: SEC20
0x50033140 C   FIELD 21w01 SEC21: SEC21
0x50033140 C   FIELD 22w01 SEC22: SEC22
0x50033140 C   FIELD 23w01 SEC23: SEC23
0x50033140 C   FIELD 24w01 SEC24: SEC24
0x50033140 C   FIELD 25w01 SEC25: SEC25
0x50033140 C   FIELD 26w01 SEC26: SEC26
0x50033140 C   FIELD 27w01 SEC27: SEC27
0x50033140 C   FIELD 28w01 SEC28: SEC28
0x50033140 C   FIELD 29w01 SEC29: SEC29
0x50033140 C   FIELD 30w01 SEC30: SEC30
0x50033140 C   FIELD 31w01 SEC31: SEC31
0x50033144 B  REGISTER MPCBB2_SECCFGR17 (rw): MPCBBx security configuration for super-block x register
0x50033144 C   FIELD 00w01 SEC0: SEC0
0x50033144 C   FIELD 01w01 SEC1: SEC1
0x50033144 C   FIELD 02w01 SEC2: SEC2
0x50033144 C   FIELD 03w01 SEC3: SEC3
0x50033144 C   FIELD 04w01 SEC4: SEC4
0x50033144 C   FIELD 05w01 SEC5: SEC5
0x50033144 C   FIELD 06w01 SEC6: SEC6
0x50033144 C   FIELD 07w01 SEC7: SEC7
0x50033144 C   FIELD 08w01 SEC8: SEC8
0x50033144 C   FIELD 09w01 SEC9: SEC9
0x50033144 C   FIELD 10w01 SEC10: SEC10
0x50033144 C   FIELD 11w01 SEC11: SEC11
0x50033144 C   FIELD 12w01 SEC12: SEC12
0x50033144 C   FIELD 13w01 SEC13: SEC13
0x50033144 C   FIELD 14w01 SEC14: SEC14
0x50033144 C   FIELD 15w01 SEC15: SEC15
0x50033144 C   FIELD 16w01 SEC16: SEC16
0x50033144 C   FIELD 17w01 SEC17: SEC17
0x50033144 C   FIELD 18w01 SEC18: SEC18
0x50033144 C   FIELD 19w01 SEC19: SEC19
0x50033144 C   FIELD 20w01 SEC20: SEC20
0x50033144 C   FIELD 21w01 SEC21: SEC21
0x50033144 C   FIELD 22w01 SEC22: SEC22
0x50033144 C   FIELD 23w01 SEC23: SEC23
0x50033144 C   FIELD 24w01 SEC24: SEC24
0x50033144 C   FIELD 25w01 SEC25: SEC25
0x50033144 C   FIELD 26w01 SEC26: SEC26
0x50033144 C   FIELD 27w01 SEC27: SEC27
0x50033144 C   FIELD 28w01 SEC28: SEC28
0x50033144 C   FIELD 29w01 SEC29: SEC29
0x50033144 C   FIELD 30w01 SEC30: SEC30
0x50033144 C   FIELD 31w01 SEC31: SEC31
0x50033148 B  REGISTER MPCBB2_SECCFGR18 (rw): MPCBBx security configuration for super-block x register
0x50033148 C   FIELD 00w01 SEC0: SEC0
0x50033148 C   FIELD 01w01 SEC1: SEC1
0x50033148 C   FIELD 02w01 SEC2: SEC2
0x50033148 C   FIELD 03w01 SEC3: SEC3
0x50033148 C   FIELD 04w01 SEC4: SEC4
0x50033148 C   FIELD 05w01 SEC5: SEC5
0x50033148 C   FIELD 06w01 SEC6: SEC6
0x50033148 C   FIELD 07w01 SEC7: SEC7
0x50033148 C   FIELD 08w01 SEC8: SEC8
0x50033148 C   FIELD 09w01 SEC9: SEC9
0x50033148 C   FIELD 10w01 SEC10: SEC10
0x50033148 C   FIELD 11w01 SEC11: SEC11
0x50033148 C   FIELD 12w01 SEC12: SEC12
0x50033148 C   FIELD 13w01 SEC13: SEC13
0x50033148 C   FIELD 14w01 SEC14: SEC14
0x50033148 C   FIELD 15w01 SEC15: SEC15
0x50033148 C   FIELD 16w01 SEC16: SEC16
0x50033148 C   FIELD 17w01 SEC17: SEC17
0x50033148 C   FIELD 18w01 SEC18: SEC18
0x50033148 C   FIELD 19w01 SEC19: SEC19
0x50033148 C   FIELD 20w01 SEC20: SEC20
0x50033148 C   FIELD 21w01 SEC21: SEC21
0x50033148 C   FIELD 22w01 SEC22: SEC22
0x50033148 C   FIELD 23w01 SEC23: SEC23
0x50033148 C   FIELD 24w01 SEC24: SEC24
0x50033148 C   FIELD 25w01 SEC25: SEC25
0x50033148 C   FIELD 26w01 SEC26: SEC26
0x50033148 C   FIELD 27w01 SEC27: SEC27
0x50033148 C   FIELD 28w01 SEC28: SEC28
0x50033148 C   FIELD 29w01 SEC29: SEC29
0x50033148 C   FIELD 30w01 SEC30: SEC30
0x50033148 C   FIELD 31w01 SEC31: SEC31
0x5003314C B  REGISTER MPCBB2_SECCFGR19 (rw): MPCBBx security configuration for super-block x register
0x5003314C C   FIELD 00w01 SEC0: SEC0
0x5003314C C   FIELD 01w01 SEC1: SEC1
0x5003314C C   FIELD 02w01 SEC2: SEC2
0x5003314C C   FIELD 03w01 SEC3: SEC3
0x5003314C C   FIELD 04w01 SEC4: SEC4
0x5003314C C   FIELD 05w01 SEC5: SEC5
0x5003314C C   FIELD 06w01 SEC6: SEC6
0x5003314C C   FIELD 07w01 SEC7: SEC7
0x5003314C C   FIELD 08w01 SEC8: SEC8
0x5003314C C   FIELD 09w01 SEC9: SEC9
0x5003314C C   FIELD 10w01 SEC10: SEC10
0x5003314C C   FIELD 11w01 SEC11: SEC11
0x5003314C C   FIELD 12w01 SEC12: SEC12
0x5003314C C   FIELD 13w01 SEC13: SEC13
0x5003314C C   FIELD 14w01 SEC14: SEC14
0x5003314C C   FIELD 15w01 SEC15: SEC15
0x5003314C C   FIELD 16w01 SEC16: SEC16
0x5003314C C   FIELD 17w01 SEC17: SEC17
0x5003314C C   FIELD 18w01 SEC18: SEC18
0x5003314C C   FIELD 19w01 SEC19: SEC19
0x5003314C C   FIELD 20w01 SEC20: SEC20
0x5003314C C   FIELD 21w01 SEC21: SEC21
0x5003314C C   FIELD 22w01 SEC22: SEC22
0x5003314C C   FIELD 23w01 SEC23: SEC23
0x5003314C C   FIELD 24w01 SEC24: SEC24
0x5003314C C   FIELD 25w01 SEC25: SEC25
0x5003314C C   FIELD 26w01 SEC26: SEC26
0x5003314C C   FIELD 27w01 SEC27: SEC27
0x5003314C C   FIELD 28w01 SEC28: SEC28
0x5003314C C   FIELD 29w01 SEC29: SEC29
0x5003314C C   FIELD 30w01 SEC30: SEC30
0x5003314C C   FIELD 31w01 SEC31: SEC31
0x50033150 B  REGISTER MPCBB2_SECCFGR20 (rw): MPCBBx security configuration for super-block x register
0x50033150 C   FIELD 00w01 SEC0: SEC0
0x50033150 C   FIELD 01w01 SEC1: SEC1
0x50033150 C   FIELD 02w01 SEC2: SEC2
0x50033150 C   FIELD 03w01 SEC3: SEC3
0x50033150 C   FIELD 04w01 SEC4: SEC4
0x50033150 C   FIELD 05w01 SEC5: SEC5
0x50033150 C   FIELD 06w01 SEC6: SEC6
0x50033150 C   FIELD 07w01 SEC7: SEC7
0x50033150 C   FIELD 08w01 SEC8: SEC8
0x50033150 C   FIELD 09w01 SEC9: SEC9
0x50033150 C   FIELD 10w01 SEC10: SEC10
0x50033150 C   FIELD 11w01 SEC11: SEC11
0x50033150 C   FIELD 12w01 SEC12: SEC12
0x50033150 C   FIELD 13w01 SEC13: SEC13
0x50033150 C   FIELD 14w01 SEC14: SEC14
0x50033150 C   FIELD 15w01 SEC15: SEC15
0x50033150 C   FIELD 16w01 SEC16: SEC16
0x50033150 C   FIELD 17w01 SEC17: SEC17
0x50033150 C   FIELD 18w01 SEC18: SEC18
0x50033150 C   FIELD 19w01 SEC19: SEC19
0x50033150 C   FIELD 20w01 SEC20: SEC20
0x50033150 C   FIELD 21w01 SEC21: SEC21
0x50033150 C   FIELD 22w01 SEC22: SEC22
0x50033150 C   FIELD 23w01 SEC23: SEC23
0x50033150 C   FIELD 24w01 SEC24: SEC24
0x50033150 C   FIELD 25w01 SEC25: SEC25
0x50033150 C   FIELD 26w01 SEC26: SEC26
0x50033150 C   FIELD 27w01 SEC27: SEC27
0x50033150 C   FIELD 28w01 SEC28: SEC28
0x50033150 C   FIELD 29w01 SEC29: SEC29
0x50033150 C   FIELD 30w01 SEC30: SEC30
0x50033150 C   FIELD 31w01 SEC31: SEC31
0x50033154 B  REGISTER MPCBB2_SECCFGR21 (rw): MPCBBx security configuration for super-block x register
0x50033154 C   FIELD 00w01 SEC0: SEC0
0x50033154 C   FIELD 01w01 SEC1: SEC1
0x50033154 C   FIELD 02w01 SEC2: SEC2
0x50033154 C   FIELD 03w01 SEC3: SEC3
0x50033154 C   FIELD 04w01 SEC4: SEC4
0x50033154 C   FIELD 05w01 SEC5: SEC5
0x50033154 C   FIELD 06w01 SEC6: SEC6
0x50033154 C   FIELD 07w01 SEC7: SEC7
0x50033154 C   FIELD 08w01 SEC8: SEC8
0x50033154 C   FIELD 09w01 SEC9: SEC9
0x50033154 C   FIELD 10w01 SEC10: SEC10
0x50033154 C   FIELD 11w01 SEC11: SEC11
0x50033154 C   FIELD 12w01 SEC12: SEC12
0x50033154 C   FIELD 13w01 SEC13: SEC13
0x50033154 C   FIELD 14w01 SEC14: SEC14
0x50033154 C   FIELD 15w01 SEC15: SEC15
0x50033154 C   FIELD 16w01 SEC16: SEC16
0x50033154 C   FIELD 17w01 SEC17: SEC17
0x50033154 C   FIELD 18w01 SEC18: SEC18
0x50033154 C   FIELD 19w01 SEC19: SEC19
0x50033154 C   FIELD 20w01 SEC20: SEC20
0x50033154 C   FIELD 21w01 SEC21: SEC21
0x50033154 C   FIELD 22w01 SEC22: SEC22
0x50033154 C   FIELD 23w01 SEC23: SEC23
0x50033154 C   FIELD 24w01 SEC24: SEC24
0x50033154 C   FIELD 25w01 SEC25: SEC25
0x50033154 C   FIELD 26w01 SEC26: SEC26
0x50033154 C   FIELD 27w01 SEC27: SEC27
0x50033154 C   FIELD 28w01 SEC28: SEC28
0x50033154 C   FIELD 29w01 SEC29: SEC29
0x50033154 C   FIELD 30w01 SEC30: SEC30
0x50033154 C   FIELD 31w01 SEC31: SEC31
0x50033158 B  REGISTER MPCBB2_SECCFGR22 (rw): MPCBBx security configuration for super-block x register
0x50033158 C   FIELD 00w01 SEC0: SEC0
0x50033158 C   FIELD 01w01 SEC1: SEC1
0x50033158 C   FIELD 02w01 SEC2: SEC2
0x50033158 C   FIELD 03w01 SEC3: SEC3
0x50033158 C   FIELD 04w01 SEC4: SEC4
0x50033158 C   FIELD 05w01 SEC5: SEC5
0x50033158 C   FIELD 06w01 SEC6: SEC6
0x50033158 C   FIELD 07w01 SEC7: SEC7
0x50033158 C   FIELD 08w01 SEC8: SEC8
0x50033158 C   FIELD 09w01 SEC9: SEC9
0x50033158 C   FIELD 10w01 SEC10: SEC10
0x50033158 C   FIELD 11w01 SEC11: SEC11
0x50033158 C   FIELD 12w01 SEC12: SEC12
0x50033158 C   FIELD 13w01 SEC13: SEC13
0x50033158 C   FIELD 14w01 SEC14: SEC14
0x50033158 C   FIELD 15w01 SEC15: SEC15
0x50033158 C   FIELD 16w01 SEC16: SEC16
0x50033158 C   FIELD 17w01 SEC17: SEC17
0x50033158 C   FIELD 18w01 SEC18: SEC18
0x50033158 C   FIELD 19w01 SEC19: SEC19
0x50033158 C   FIELD 20w01 SEC20: SEC20
0x50033158 C   FIELD 21w01 SEC21: SEC21
0x50033158 C   FIELD 22w01 SEC22: SEC22
0x50033158 C   FIELD 23w01 SEC23: SEC23
0x50033158 C   FIELD 24w01 SEC24: SEC24
0x50033158 C   FIELD 25w01 SEC25: SEC25
0x50033158 C   FIELD 26w01 SEC26: SEC26
0x50033158 C   FIELD 27w01 SEC27: SEC27
0x50033158 C   FIELD 28w01 SEC28: SEC28
0x50033158 C   FIELD 29w01 SEC29: SEC29
0x50033158 C   FIELD 30w01 SEC30: SEC30
0x50033158 C   FIELD 31w01 SEC31: SEC31
0x5003315C B  REGISTER MPCBB2_SECCFGR23 (rw): MPCBBx security configuration for super-block x register
0x5003315C C   FIELD 00w01 SEC0: SEC0
0x5003315C C   FIELD 01w01 SEC1: SEC1
0x5003315C C   FIELD 02w01 SEC2: SEC2
0x5003315C C   FIELD 03w01 SEC3: SEC3
0x5003315C C   FIELD 04w01 SEC4: SEC4
0x5003315C C   FIELD 05w01 SEC5: SEC5
0x5003315C C   FIELD 06w01 SEC6: SEC6
0x5003315C C   FIELD 07w01 SEC7: SEC7
0x5003315C C   FIELD 08w01 SEC8: SEC8
0x5003315C C   FIELD 09w01 SEC9: SEC9
0x5003315C C   FIELD 10w01 SEC10: SEC10
0x5003315C C   FIELD 11w01 SEC11: SEC11
0x5003315C C   FIELD 12w01 SEC12: SEC12
0x5003315C C   FIELD 13w01 SEC13: SEC13
0x5003315C C   FIELD 14w01 SEC14: SEC14
0x5003315C C   FIELD 15w01 SEC15: SEC15
0x5003315C C   FIELD 16w01 SEC16: SEC16
0x5003315C C   FIELD 17w01 SEC17: SEC17
0x5003315C C   FIELD 18w01 SEC18: SEC18
0x5003315C C   FIELD 19w01 SEC19: SEC19
0x5003315C C   FIELD 20w01 SEC20: SEC20
0x5003315C C   FIELD 21w01 SEC21: SEC21
0x5003315C C   FIELD 22w01 SEC22: SEC22
0x5003315C C   FIELD 23w01 SEC23: SEC23
0x5003315C C   FIELD 24w01 SEC24: SEC24
0x5003315C C   FIELD 25w01 SEC25: SEC25
0x5003315C C   FIELD 26w01 SEC26: SEC26
0x5003315C C   FIELD 27w01 SEC27: SEC27
0x5003315C C   FIELD 28w01 SEC28: SEC28
0x5003315C C   FIELD 29w01 SEC29: SEC29
0x5003315C C   FIELD 30w01 SEC30: SEC30
0x5003315C C   FIELD 31w01 SEC31: SEC31
0x50033160 B  REGISTER MPCBB2_SECCFGR24 (rw): MPCBBx security configuration for super-block x register
0x50033160 C   FIELD 00w01 SEC0: SEC0
0x50033160 C   FIELD 01w01 SEC1: SEC1
0x50033160 C   FIELD 02w01 SEC2: SEC2
0x50033160 C   FIELD 03w01 SEC3: SEC3
0x50033160 C   FIELD 04w01 SEC4: SEC4
0x50033160 C   FIELD 05w01 SEC5: SEC5
0x50033160 C   FIELD 06w01 SEC6: SEC6
0x50033160 C   FIELD 07w01 SEC7: SEC7
0x50033160 C   FIELD 08w01 SEC8: SEC8
0x50033160 C   FIELD 09w01 SEC9: SEC9
0x50033160 C   FIELD 10w01 SEC10: SEC10
0x50033160 C   FIELD 11w01 SEC11: SEC11
0x50033160 C   FIELD 12w01 SEC12: SEC12
0x50033160 C   FIELD 13w01 SEC13: SEC13
0x50033160 C   FIELD 14w01 SEC14: SEC14
0x50033160 C   FIELD 15w01 SEC15: SEC15
0x50033160 C   FIELD 16w01 SEC16: SEC16
0x50033160 C   FIELD 17w01 SEC17: SEC17
0x50033160 C   FIELD 18w01 SEC18: SEC18
0x50033160 C   FIELD 19w01 SEC19: SEC19
0x50033160 C   FIELD 20w01 SEC20: SEC20
0x50033160 C   FIELD 21w01 SEC21: SEC21
0x50033160 C   FIELD 22w01 SEC22: SEC22
0x50033160 C   FIELD 23w01 SEC23: SEC23
0x50033160 C   FIELD 24w01 SEC24: SEC24
0x50033160 C   FIELD 25w01 SEC25: SEC25
0x50033160 C   FIELD 26w01 SEC26: SEC26
0x50033160 C   FIELD 27w01 SEC27: SEC27
0x50033160 C   FIELD 28w01 SEC28: SEC28
0x50033160 C   FIELD 29w01 SEC29: SEC29
0x50033160 C   FIELD 30w01 SEC30: SEC30
0x50033160 C   FIELD 31w01 SEC31: SEC31
0x50033164 B  REGISTER MPCBB2_SECCFGR25 (rw): MPCBBx security configuration for super-block x register
0x50033164 C   FIELD 00w01 SEC0: SEC0
0x50033164 C   FIELD 01w01 SEC1: SEC1
0x50033164 C   FIELD 02w01 SEC2: SEC2
0x50033164 C   FIELD 03w01 SEC3: SEC3
0x50033164 C   FIELD 04w01 SEC4: SEC4
0x50033164 C   FIELD 05w01 SEC5: SEC5
0x50033164 C   FIELD 06w01 SEC6: SEC6
0x50033164 C   FIELD 07w01 SEC7: SEC7
0x50033164 C   FIELD 08w01 SEC8: SEC8
0x50033164 C   FIELD 09w01 SEC9: SEC9
0x50033164 C   FIELD 10w01 SEC10: SEC10
0x50033164 C   FIELD 11w01 SEC11: SEC11
0x50033164 C   FIELD 12w01 SEC12: SEC12
0x50033164 C   FIELD 13w01 SEC13: SEC13
0x50033164 C   FIELD 14w01 SEC14: SEC14
0x50033164 C   FIELD 15w01 SEC15: SEC15
0x50033164 C   FIELD 16w01 SEC16: SEC16
0x50033164 C   FIELD 17w01 SEC17: SEC17
0x50033164 C   FIELD 18w01 SEC18: SEC18
0x50033164 C   FIELD 19w01 SEC19: SEC19
0x50033164 C   FIELD 20w01 SEC20: SEC20
0x50033164 C   FIELD 21w01 SEC21: SEC21
0x50033164 C   FIELD 22w01 SEC22: SEC22
0x50033164 C   FIELD 23w01 SEC23: SEC23
0x50033164 C   FIELD 24w01 SEC24: SEC24
0x50033164 C   FIELD 25w01 SEC25: SEC25
0x50033164 C   FIELD 26w01 SEC26: SEC26
0x50033164 C   FIELD 27w01 SEC27: SEC27
0x50033164 C   FIELD 28w01 SEC28: SEC28
0x50033164 C   FIELD 29w01 SEC29: SEC29
0x50033164 C   FIELD 30w01 SEC30: SEC30
0x50033164 C   FIELD 31w01 SEC31: SEC31
0x50033168 B  REGISTER MPCBB2_SECCFGR26 (rw): MPCBBx security configuration for super-block x register
0x50033168 C   FIELD 00w01 SEC0: SEC0
0x50033168 C   FIELD 01w01 SEC1: SEC1
0x50033168 C   FIELD 02w01 SEC2: SEC2
0x50033168 C   FIELD 03w01 SEC3: SEC3
0x50033168 C   FIELD 04w01 SEC4: SEC4
0x50033168 C   FIELD 05w01 SEC5: SEC5
0x50033168 C   FIELD 06w01 SEC6: SEC6
0x50033168 C   FIELD 07w01 SEC7: SEC7
0x50033168 C   FIELD 08w01 SEC8: SEC8
0x50033168 C   FIELD 09w01 SEC9: SEC9
0x50033168 C   FIELD 10w01 SEC10: SEC10
0x50033168 C   FIELD 11w01 SEC11: SEC11
0x50033168 C   FIELD 12w01 SEC12: SEC12
0x50033168 C   FIELD 13w01 SEC13: SEC13
0x50033168 C   FIELD 14w01 SEC14: SEC14
0x50033168 C   FIELD 15w01 SEC15: SEC15
0x50033168 C   FIELD 16w01 SEC16: SEC16
0x50033168 C   FIELD 17w01 SEC17: SEC17
0x50033168 C   FIELD 18w01 SEC18: SEC18
0x50033168 C   FIELD 19w01 SEC19: SEC19
0x50033168 C   FIELD 20w01 SEC20: SEC20
0x50033168 C   FIELD 21w01 SEC21: SEC21
0x50033168 C   FIELD 22w01 SEC22: SEC22
0x50033168 C   FIELD 23w01 SEC23: SEC23
0x50033168 C   FIELD 24w01 SEC24: SEC24
0x50033168 C   FIELD 25w01 SEC25: SEC25
0x50033168 C   FIELD 26w01 SEC26: SEC26
0x50033168 C   FIELD 27w01 SEC27: SEC27
0x50033168 C   FIELD 28w01 SEC28: SEC28
0x50033168 C   FIELD 29w01 SEC29: SEC29
0x50033168 C   FIELD 30w01 SEC30: SEC30
0x50033168 C   FIELD 31w01 SEC31: SEC31
0x5003316C B  REGISTER MPCBB2_SECCFGR27 (rw): MPCBBx security configuration for super-block x register
0x5003316C C   FIELD 00w01 SEC0: SEC0
0x5003316C C   FIELD 01w01 SEC1: SEC1
0x5003316C C   FIELD 02w01 SEC2: SEC2
0x5003316C C   FIELD 03w01 SEC3: SEC3
0x5003316C C   FIELD 04w01 SEC4: SEC4
0x5003316C C   FIELD 05w01 SEC5: SEC5
0x5003316C C   FIELD 06w01 SEC6: SEC6
0x5003316C C   FIELD 07w01 SEC7: SEC7
0x5003316C C   FIELD 08w01 SEC8: SEC8
0x5003316C C   FIELD 09w01 SEC9: SEC9
0x5003316C C   FIELD 10w01 SEC10: SEC10
0x5003316C C   FIELD 11w01 SEC11: SEC11
0x5003316C C   FIELD 12w01 SEC12: SEC12
0x5003316C C   FIELD 13w01 SEC13: SEC13
0x5003316C C   FIELD 14w01 SEC14: SEC14
0x5003316C C   FIELD 15w01 SEC15: SEC15
0x5003316C C   FIELD 16w01 SEC16: SEC16
0x5003316C C   FIELD 17w01 SEC17: SEC17
0x5003316C C   FIELD 18w01 SEC18: SEC18
0x5003316C C   FIELD 19w01 SEC19: SEC19
0x5003316C C   FIELD 20w01 SEC20: SEC20
0x5003316C C   FIELD 21w01 SEC21: SEC21
0x5003316C C   FIELD 22w01 SEC22: SEC22
0x5003316C C   FIELD 23w01 SEC23: SEC23
0x5003316C C   FIELD 24w01 SEC24: SEC24
0x5003316C C   FIELD 25w01 SEC25: SEC25
0x5003316C C   FIELD 26w01 SEC26: SEC26
0x5003316C C   FIELD 27w01 SEC27: SEC27
0x5003316C C   FIELD 28w01 SEC28: SEC28
0x5003316C C   FIELD 29w01 SEC29: SEC29
0x5003316C C   FIELD 30w01 SEC30: SEC30
0x5003316C C   FIELD 31w01 SEC31: SEC31
0x50033170 B  REGISTER MPCBB2_SECCFGR28 (rw): MPCBBx security configuration for super-block x register
0x50033170 C   FIELD 00w01 SEC0: SEC0
0x50033170 C   FIELD 01w01 SEC1: SEC1
0x50033170 C   FIELD 02w01 SEC2: SEC2
0x50033170 C   FIELD 03w01 SEC3: SEC3
0x50033170 C   FIELD 04w01 SEC4: SEC4
0x50033170 C   FIELD 05w01 SEC5: SEC5
0x50033170 C   FIELD 06w01 SEC6: SEC6
0x50033170 C   FIELD 07w01 SEC7: SEC7
0x50033170 C   FIELD 08w01 SEC8: SEC8
0x50033170 C   FIELD 09w01 SEC9: SEC9
0x50033170 C   FIELD 10w01 SEC10: SEC10
0x50033170 C   FIELD 11w01 SEC11: SEC11
0x50033170 C   FIELD 12w01 SEC12: SEC12
0x50033170 C   FIELD 13w01 SEC13: SEC13
0x50033170 C   FIELD 14w01 SEC14: SEC14
0x50033170 C   FIELD 15w01 SEC15: SEC15
0x50033170 C   FIELD 16w01 SEC16: SEC16
0x50033170 C   FIELD 17w01 SEC17: SEC17
0x50033170 C   FIELD 18w01 SEC18: SEC18
0x50033170 C   FIELD 19w01 SEC19: SEC19
0x50033170 C   FIELD 20w01 SEC20: SEC20
0x50033170 C   FIELD 21w01 SEC21: SEC21
0x50033170 C   FIELD 22w01 SEC22: SEC22
0x50033170 C   FIELD 23w01 SEC23: SEC23
0x50033170 C   FIELD 24w01 SEC24: SEC24
0x50033170 C   FIELD 25w01 SEC25: SEC25
0x50033170 C   FIELD 26w01 SEC26: SEC26
0x50033170 C   FIELD 27w01 SEC27: SEC27
0x50033170 C   FIELD 28w01 SEC28: SEC28
0x50033170 C   FIELD 29w01 SEC29: SEC29
0x50033170 C   FIELD 30w01 SEC30: SEC30
0x50033170 C   FIELD 31w01 SEC31: SEC31
0x50033174 B  REGISTER MPCBB2_SECCFGR29 (rw): MPCBBx security configuration for super-block x register
0x50033174 C   FIELD 00w01 SEC0: SEC0
0x50033174 C   FIELD 01w01 SEC1: SEC1
0x50033174 C   FIELD 02w01 SEC2: SEC2
0x50033174 C   FIELD 03w01 SEC3: SEC3
0x50033174 C   FIELD 04w01 SEC4: SEC4
0x50033174 C   FIELD 05w01 SEC5: SEC5
0x50033174 C   FIELD 06w01 SEC6: SEC6
0x50033174 C   FIELD 07w01 SEC7: SEC7
0x50033174 C   FIELD 08w01 SEC8: SEC8
0x50033174 C   FIELD 09w01 SEC9: SEC9
0x50033174 C   FIELD 10w01 SEC10: SEC10
0x50033174 C   FIELD 11w01 SEC11: SEC11
0x50033174 C   FIELD 12w01 SEC12: SEC12
0x50033174 C   FIELD 13w01 SEC13: SEC13
0x50033174 C   FIELD 14w01 SEC14: SEC14
0x50033174 C   FIELD 15w01 SEC15: SEC15
0x50033174 C   FIELD 16w01 SEC16: SEC16
0x50033174 C   FIELD 17w01 SEC17: SEC17
0x50033174 C   FIELD 18w01 SEC18: SEC18
0x50033174 C   FIELD 19w01 SEC19: SEC19
0x50033174 C   FIELD 20w01 SEC20: SEC20
0x50033174 C   FIELD 21w01 SEC21: SEC21
0x50033174 C   FIELD 22w01 SEC22: SEC22
0x50033174 C   FIELD 23w01 SEC23: SEC23
0x50033174 C   FIELD 24w01 SEC24: SEC24
0x50033174 C   FIELD 25w01 SEC25: SEC25
0x50033174 C   FIELD 26w01 SEC26: SEC26
0x50033174 C   FIELD 27w01 SEC27: SEC27
0x50033174 C   FIELD 28w01 SEC28: SEC28
0x50033174 C   FIELD 29w01 SEC29: SEC29
0x50033174 C   FIELD 30w01 SEC30: SEC30
0x50033174 C   FIELD 31w01 SEC31: SEC31
0x50033178 B  REGISTER MPCBB2_SECCFGR30 (rw): MPCBBx security configuration for super-block x register
0x50033178 C   FIELD 00w01 SEC0: SEC0
0x50033178 C   FIELD 01w01 SEC1: SEC1
0x50033178 C   FIELD 02w01 SEC2: SEC2
0x50033178 C   FIELD 03w01 SEC3: SEC3
0x50033178 C   FIELD 04w01 SEC4: SEC4
0x50033178 C   FIELD 05w01 SEC5: SEC5
0x50033178 C   FIELD 06w01 SEC6: SEC6
0x50033178 C   FIELD 07w01 SEC7: SEC7
0x50033178 C   FIELD 08w01 SEC8: SEC8
0x50033178 C   FIELD 09w01 SEC9: SEC9
0x50033178 C   FIELD 10w01 SEC10: SEC10
0x50033178 C   FIELD 11w01 SEC11: SEC11
0x50033178 C   FIELD 12w01 SEC12: SEC12
0x50033178 C   FIELD 13w01 SEC13: SEC13
0x50033178 C   FIELD 14w01 SEC14: SEC14
0x50033178 C   FIELD 15w01 SEC15: SEC15
0x50033178 C   FIELD 16w01 SEC16: SEC16
0x50033178 C   FIELD 17w01 SEC17: SEC17
0x50033178 C   FIELD 18w01 SEC18: SEC18
0x50033178 C   FIELD 19w01 SEC19: SEC19
0x50033178 C   FIELD 20w01 SEC20: SEC20
0x50033178 C   FIELD 21w01 SEC21: SEC21
0x50033178 C   FIELD 22w01 SEC22: SEC22
0x50033178 C   FIELD 23w01 SEC23: SEC23
0x50033178 C   FIELD 24w01 SEC24: SEC24
0x50033178 C   FIELD 25w01 SEC25: SEC25
0x50033178 C   FIELD 26w01 SEC26: SEC26
0x50033178 C   FIELD 27w01 SEC27: SEC27
0x50033178 C   FIELD 28w01 SEC28: SEC28
0x50033178 C   FIELD 29w01 SEC29: SEC29
0x50033178 C   FIELD 30w01 SEC30: SEC30
0x50033178 C   FIELD 31w01 SEC31: SEC31
0x5003317C B  REGISTER MPCBB2_SECCFGR31 (rw): MPCBBx security configuration for super-block x register
0x5003317C C   FIELD 00w01 SEC0: SEC0
0x5003317C C   FIELD 01w01 SEC1: SEC1
0x5003317C C   FIELD 02w01 SEC2: SEC2
0x5003317C C   FIELD 03w01 SEC3: SEC3
0x5003317C C   FIELD 04w01 SEC4: SEC4
0x5003317C C   FIELD 05w01 SEC5: SEC5
0x5003317C C   FIELD 06w01 SEC6: SEC6
0x5003317C C   FIELD 07w01 SEC7: SEC7
0x5003317C C   FIELD 08w01 SEC8: SEC8
0x5003317C C   FIELD 09w01 SEC9: SEC9
0x5003317C C   FIELD 10w01 SEC10: SEC10
0x5003317C C   FIELD 11w01 SEC11: SEC11
0x5003317C C   FIELD 12w01 SEC12: SEC12
0x5003317C C   FIELD 13w01 SEC13: SEC13
0x5003317C C   FIELD 14w01 SEC14: SEC14
0x5003317C C   FIELD 15w01 SEC15: SEC15
0x5003317C C   FIELD 16w01 SEC16: SEC16
0x5003317C C   FIELD 17w01 SEC17: SEC17
0x5003317C C   FIELD 18w01 SEC18: SEC18
0x5003317C C   FIELD 19w01 SEC19: SEC19
0x5003317C C   FIELD 20w01 SEC20: SEC20
0x5003317C C   FIELD 21w01 SEC21: SEC21
0x5003317C C   FIELD 22w01 SEC22: SEC22
0x5003317C C   FIELD 23w01 SEC23: SEC23
0x5003317C C   FIELD 24w01 SEC24: SEC24
0x5003317C C   FIELD 25w01 SEC25: SEC25
0x5003317C C   FIELD 26w01 SEC26: SEC26
0x5003317C C   FIELD 27w01 SEC27: SEC27
0x5003317C C   FIELD 28w01 SEC28: SEC28
0x5003317C C   FIELD 29w01 SEC29: SEC29
0x5003317C C   FIELD 30w01 SEC30: SEC30
0x5003317C C   FIELD 31w01 SEC31: SEC31
0x50033200 B  REGISTER MPCBB2_PRIVCFGR0 (rw): MPCBB privileged configuration for super-block x register
0x50033200 C   FIELD 00w01 PRIV0: PRIV0
0x50033200 C   FIELD 01w01 PRIV1: PRIV1
0x50033200 C   FIELD 02w01 PRIV2: PRIV2
0x50033200 C   FIELD 03w01 PRIV3: PRIV3
0x50033200 C   FIELD 04w01 PRIV4: PRIV4
0x50033200 C   FIELD 05w01 PRIV5: PRIV5
0x50033200 C   FIELD 06w01 PRIV6: PRIV6
0x50033200 C   FIELD 07w01 PRIV7: PRIV7
0x50033200 C   FIELD 08w01 PRIV8: PRIV8
0x50033200 C   FIELD 09w01 PRIV9: PRIV9
0x50033200 C   FIELD 10w01 PRIV10: PRIV10
0x50033200 C   FIELD 11w01 PRIV11: PRIV11
0x50033200 C   FIELD 12w01 PRIV12: PRIV12
0x50033200 C   FIELD 13w01 PRIV13: PRIV13
0x50033200 C   FIELD 14w01 PRIV14: PRIV14
0x50033200 C   FIELD 15w01 PRIV15: PRIV15
0x50033200 C   FIELD 16w01 PRIV16: PRIV16
0x50033200 C   FIELD 17w01 PRIV17: PRIV17
0x50033200 C   FIELD 18w01 PRIV18: PRIV18
0x50033200 C   FIELD 19w01 PRIV19: PRIV19
0x50033200 C   FIELD 20w01 PRIV20: PRIV20
0x50033200 C   FIELD 21w01 PRIV21: PRIV21
0x50033200 C   FIELD 22w01 PRIV22: PRIV22
0x50033200 C   FIELD 23w01 PRIV23: PRIV23
0x50033200 C   FIELD 24w01 PRIV24: PRIV24
0x50033200 C   FIELD 25w01 PRIV25: PRIV25
0x50033200 C   FIELD 26w01 PRIV26: PRIV26
0x50033200 C   FIELD 27w01 PRIV27: PRIV27
0x50033200 C   FIELD 28w01 PRIV28: PRIV28
0x50033200 C   FIELD 29w01 PRIV29: PRIV29
0x50033200 C   FIELD 30w01 PRIV30: PRIV30
0x50033200 C   FIELD 31w01 PRIV31: PRIV31
0x50033204 B  REGISTER MPCBB2_PRIVCFGR1 (rw): MPCBB privileged configuration for super-block x register
0x50033204 C   FIELD 00w01 PRIV0: PRIV0
0x50033204 C   FIELD 01w01 PRIV1: PRIV1
0x50033204 C   FIELD 02w01 PRIV2: PRIV2
0x50033204 C   FIELD 03w01 PRIV3: PRIV3
0x50033204 C   FIELD 04w01 PRIV4: PRIV4
0x50033204 C   FIELD 05w01 PRIV5: PRIV5
0x50033204 C   FIELD 06w01 PRIV6: PRIV6
0x50033204 C   FIELD 07w01 PRIV7: PRIV7
0x50033204 C   FIELD 08w01 PRIV8: PRIV8
0x50033204 C   FIELD 09w01 PRIV9: PRIV9
0x50033204 C   FIELD 10w01 PRIV10: PRIV10
0x50033204 C   FIELD 11w01 PRIV11: PRIV11
0x50033204 C   FIELD 12w01 PRIV12: PRIV12
0x50033204 C   FIELD 13w01 PRIV13: PRIV13
0x50033204 C   FIELD 14w01 PRIV14: PRIV14
0x50033204 C   FIELD 15w01 PRIV15: PRIV15
0x50033204 C   FIELD 16w01 PRIV16: PRIV16
0x50033204 C   FIELD 17w01 PRIV17: PRIV17
0x50033204 C   FIELD 18w01 PRIV18: PRIV18
0x50033204 C   FIELD 19w01 PRIV19: PRIV19
0x50033204 C   FIELD 20w01 PRIV20: PRIV20
0x50033204 C   FIELD 21w01 PRIV21: PRIV21
0x50033204 C   FIELD 22w01 PRIV22: PRIV22
0x50033204 C   FIELD 23w01 PRIV23: PRIV23
0x50033204 C   FIELD 24w01 PRIV24: PRIV24
0x50033204 C   FIELD 25w01 PRIV25: PRIV25
0x50033204 C   FIELD 26w01 PRIV26: PRIV26
0x50033204 C   FIELD 27w01 PRIV27: PRIV27
0x50033204 C   FIELD 28w01 PRIV28: PRIV28
0x50033204 C   FIELD 29w01 PRIV29: PRIV29
0x50033204 C   FIELD 30w01 PRIV30: PRIV30
0x50033204 C   FIELD 31w01 PRIV31: PRIV31
0x50033208 B  REGISTER MPCBB2_PRIVCFGR2 (rw): MPCBB privileged configuration for super-block x register
0x50033208 C   FIELD 00w01 PRIV0: PRIV0
0x50033208 C   FIELD 01w01 PRIV1: PRIV1
0x50033208 C   FIELD 02w01 PRIV2: PRIV2
0x50033208 C   FIELD 03w01 PRIV3: PRIV3
0x50033208 C   FIELD 04w01 PRIV4: PRIV4
0x50033208 C   FIELD 05w01 PRIV5: PRIV5
0x50033208 C   FIELD 06w01 PRIV6: PRIV6
0x50033208 C   FIELD 07w01 PRIV7: PRIV7
0x50033208 C   FIELD 08w01 PRIV8: PRIV8
0x50033208 C   FIELD 09w01 PRIV9: PRIV9
0x50033208 C   FIELD 10w01 PRIV10: PRIV10
0x50033208 C   FIELD 11w01 PRIV11: PRIV11
0x50033208 C   FIELD 12w01 PRIV12: PRIV12
0x50033208 C   FIELD 13w01 PRIV13: PRIV13
0x50033208 C   FIELD 14w01 PRIV14: PRIV14
0x50033208 C   FIELD 15w01 PRIV15: PRIV15
0x50033208 C   FIELD 16w01 PRIV16: PRIV16
0x50033208 C   FIELD 17w01 PRIV17: PRIV17
0x50033208 C   FIELD 18w01 PRIV18: PRIV18
0x50033208 C   FIELD 19w01 PRIV19: PRIV19
0x50033208 C   FIELD 20w01 PRIV20: PRIV20
0x50033208 C   FIELD 21w01 PRIV21: PRIV21
0x50033208 C   FIELD 22w01 PRIV22: PRIV22
0x50033208 C   FIELD 23w01 PRIV23: PRIV23
0x50033208 C   FIELD 24w01 PRIV24: PRIV24
0x50033208 C   FIELD 25w01 PRIV25: PRIV25
0x50033208 C   FIELD 26w01 PRIV26: PRIV26
0x50033208 C   FIELD 27w01 PRIV27: PRIV27
0x50033208 C   FIELD 28w01 PRIV28: PRIV28
0x50033208 C   FIELD 29w01 PRIV29: PRIV29
0x50033208 C   FIELD 30w01 PRIV30: PRIV30
0x50033208 C   FIELD 31w01 PRIV31: PRIV31
0x5003320C B  REGISTER MPCBB2_PRIVCFGR3 (rw): MPCBB privileged configuration for super-block x register
0x5003320C C   FIELD 00w01 PRIV0: PRIV0
0x5003320C C   FIELD 01w01 PRIV1: PRIV1
0x5003320C C   FIELD 02w01 PRIV2: PRIV2
0x5003320C C   FIELD 03w01 PRIV3: PRIV3
0x5003320C C   FIELD 04w01 PRIV4: PRIV4
0x5003320C C   FIELD 05w01 PRIV5: PRIV5
0x5003320C C   FIELD 06w01 PRIV6: PRIV6
0x5003320C C   FIELD 07w01 PRIV7: PRIV7
0x5003320C C   FIELD 08w01 PRIV8: PRIV8
0x5003320C C   FIELD 09w01 PRIV9: PRIV9
0x5003320C C   FIELD 10w01 PRIV10: PRIV10
0x5003320C C   FIELD 11w01 PRIV11: PRIV11
0x5003320C C   FIELD 12w01 PRIV12: PRIV12
0x5003320C C   FIELD 13w01 PRIV13: PRIV13
0x5003320C C   FIELD 14w01 PRIV14: PRIV14
0x5003320C C   FIELD 15w01 PRIV15: PRIV15
0x5003320C C   FIELD 16w01 PRIV16: PRIV16
0x5003320C C   FIELD 17w01 PRIV17: PRIV17
0x5003320C C   FIELD 18w01 PRIV18: PRIV18
0x5003320C C   FIELD 19w01 PRIV19: PRIV19
0x5003320C C   FIELD 20w01 PRIV20: PRIV20
0x5003320C C   FIELD 21w01 PRIV21: PRIV21
0x5003320C C   FIELD 22w01 PRIV22: PRIV22
0x5003320C C   FIELD 23w01 PRIV23: PRIV23
0x5003320C C   FIELD 24w01 PRIV24: PRIV24
0x5003320C C   FIELD 25w01 PRIV25: PRIV25
0x5003320C C   FIELD 26w01 PRIV26: PRIV26
0x5003320C C   FIELD 27w01 PRIV27: PRIV27
0x5003320C C   FIELD 28w01 PRIV28: PRIV28
0x5003320C C   FIELD 29w01 PRIV29: PRIV29
0x5003320C C   FIELD 30w01 PRIV30: PRIV30
0x5003320C C   FIELD 31w01 PRIV31: PRIV31
0x50033210 B  REGISTER MPCBB2_PRIVCFGR4 (rw): MPCBB privileged configuration for super-block x register
0x50033210 C   FIELD 00w01 PRIV0: PRIV0
0x50033210 C   FIELD 01w01 PRIV1: PRIV1
0x50033210 C   FIELD 02w01 PRIV2: PRIV2
0x50033210 C   FIELD 03w01 PRIV3: PRIV3
0x50033210 C   FIELD 04w01 PRIV4: PRIV4
0x50033210 C   FIELD 05w01 PRIV5: PRIV5
0x50033210 C   FIELD 06w01 PRIV6: PRIV6
0x50033210 C   FIELD 07w01 PRIV7: PRIV7
0x50033210 C   FIELD 08w01 PRIV8: PRIV8
0x50033210 C   FIELD 09w01 PRIV9: PRIV9
0x50033210 C   FIELD 10w01 PRIV10: PRIV10
0x50033210 C   FIELD 11w01 PRIV11: PRIV11
0x50033210 C   FIELD 12w01 PRIV12: PRIV12
0x50033210 C   FIELD 13w01 PRIV13: PRIV13
0x50033210 C   FIELD 14w01 PRIV14: PRIV14
0x50033210 C   FIELD 15w01 PRIV15: PRIV15
0x50033210 C   FIELD 16w01 PRIV16: PRIV16
0x50033210 C   FIELD 17w01 PRIV17: PRIV17
0x50033210 C   FIELD 18w01 PRIV18: PRIV18
0x50033210 C   FIELD 19w01 PRIV19: PRIV19
0x50033210 C   FIELD 20w01 PRIV20: PRIV20
0x50033210 C   FIELD 21w01 PRIV21: PRIV21
0x50033210 C   FIELD 22w01 PRIV22: PRIV22
0x50033210 C   FIELD 23w01 PRIV23: PRIV23
0x50033210 C   FIELD 24w01 PRIV24: PRIV24
0x50033210 C   FIELD 25w01 PRIV25: PRIV25
0x50033210 C   FIELD 26w01 PRIV26: PRIV26
0x50033210 C   FIELD 27w01 PRIV27: PRIV27
0x50033210 C   FIELD 28w01 PRIV28: PRIV28
0x50033210 C   FIELD 29w01 PRIV29: PRIV29
0x50033210 C   FIELD 30w01 PRIV30: PRIV30
0x50033210 C   FIELD 31w01 PRIV31: PRIV31
0x50033214 B  REGISTER MPCBB2_PRIVCFGR5 (rw): MPCBB privileged configuration for super-block x register
0x50033214 C   FIELD 00w01 PRIV0: PRIV0
0x50033214 C   FIELD 01w01 PRIV1: PRIV1
0x50033214 C   FIELD 02w01 PRIV2: PRIV2
0x50033214 C   FIELD 03w01 PRIV3: PRIV3
0x50033214 C   FIELD 04w01 PRIV4: PRIV4
0x50033214 C   FIELD 05w01 PRIV5: PRIV5
0x50033214 C   FIELD 06w01 PRIV6: PRIV6
0x50033214 C   FIELD 07w01 PRIV7: PRIV7
0x50033214 C   FIELD 08w01 PRIV8: PRIV8
0x50033214 C   FIELD 09w01 PRIV9: PRIV9
0x50033214 C   FIELD 10w01 PRIV10: PRIV10
0x50033214 C   FIELD 11w01 PRIV11: PRIV11
0x50033214 C   FIELD 12w01 PRIV12: PRIV12
0x50033214 C   FIELD 13w01 PRIV13: PRIV13
0x50033214 C   FIELD 14w01 PRIV14: PRIV14
0x50033214 C   FIELD 15w01 PRIV15: PRIV15
0x50033214 C   FIELD 16w01 PRIV16: PRIV16
0x50033214 C   FIELD 17w01 PRIV17: PRIV17
0x50033214 C   FIELD 18w01 PRIV18: PRIV18
0x50033214 C   FIELD 19w01 PRIV19: PRIV19
0x50033214 C   FIELD 20w01 PRIV20: PRIV20
0x50033214 C   FIELD 21w01 PRIV21: PRIV21
0x50033214 C   FIELD 22w01 PRIV22: PRIV22
0x50033214 C   FIELD 23w01 PRIV23: PRIV23
0x50033214 C   FIELD 24w01 PRIV24: PRIV24
0x50033214 C   FIELD 25w01 PRIV25: PRIV25
0x50033214 C   FIELD 26w01 PRIV26: PRIV26
0x50033214 C   FIELD 27w01 PRIV27: PRIV27
0x50033214 C   FIELD 28w01 PRIV28: PRIV28
0x50033214 C   FIELD 29w01 PRIV29: PRIV29
0x50033214 C   FIELD 30w01 PRIV30: PRIV30
0x50033214 C   FIELD 31w01 PRIV31: PRIV31
0x50033218 B  REGISTER MPCBB2_PRIVCFGR6 (rw): MPCBB privileged configuration for super-block x register
0x50033218 C   FIELD 00w01 PRIV0: PRIV0
0x50033218 C   FIELD 01w01 PRIV1: PRIV1
0x50033218 C   FIELD 02w01 PRIV2: PRIV2
0x50033218 C   FIELD 03w01 PRIV3: PRIV3
0x50033218 C   FIELD 04w01 PRIV4: PRIV4
0x50033218 C   FIELD 05w01 PRIV5: PRIV5
0x50033218 C   FIELD 06w01 PRIV6: PRIV6
0x50033218 C   FIELD 07w01 PRIV7: PRIV7
0x50033218 C   FIELD 08w01 PRIV8: PRIV8
0x50033218 C   FIELD 09w01 PRIV9: PRIV9
0x50033218 C   FIELD 10w01 PRIV10: PRIV10
0x50033218 C   FIELD 11w01 PRIV11: PRIV11
0x50033218 C   FIELD 12w01 PRIV12: PRIV12
0x50033218 C   FIELD 13w01 PRIV13: PRIV13
0x50033218 C   FIELD 14w01 PRIV14: PRIV14
0x50033218 C   FIELD 15w01 PRIV15: PRIV15
0x50033218 C   FIELD 16w01 PRIV16: PRIV16
0x50033218 C   FIELD 17w01 PRIV17: PRIV17
0x50033218 C   FIELD 18w01 PRIV18: PRIV18
0x50033218 C   FIELD 19w01 PRIV19: PRIV19
0x50033218 C   FIELD 20w01 PRIV20: PRIV20
0x50033218 C   FIELD 21w01 PRIV21: PRIV21
0x50033218 C   FIELD 22w01 PRIV22: PRIV22
0x50033218 C   FIELD 23w01 PRIV23: PRIV23
0x50033218 C   FIELD 24w01 PRIV24: PRIV24
0x50033218 C   FIELD 25w01 PRIV25: PRIV25
0x50033218 C   FIELD 26w01 PRIV26: PRIV26
0x50033218 C   FIELD 27w01 PRIV27: PRIV27
0x50033218 C   FIELD 28w01 PRIV28: PRIV28
0x50033218 C   FIELD 29w01 PRIV29: PRIV29
0x50033218 C   FIELD 30w01 PRIV30: PRIV30
0x50033218 C   FIELD 31w01 PRIV31: PRIV31
0x5003321C B  REGISTER MPCBB2_PRIVCFGR7 (rw): MPCBB privileged configuration for super-block x register
0x5003321C C   FIELD 00w01 PRIV0: PRIV0
0x5003321C C   FIELD 01w01 PRIV1: PRIV1
0x5003321C C   FIELD 02w01 PRIV2: PRIV2
0x5003321C C   FIELD 03w01 PRIV3: PRIV3
0x5003321C C   FIELD 04w01 PRIV4: PRIV4
0x5003321C C   FIELD 05w01 PRIV5: PRIV5
0x5003321C C   FIELD 06w01 PRIV6: PRIV6
0x5003321C C   FIELD 07w01 PRIV7: PRIV7
0x5003321C C   FIELD 08w01 PRIV8: PRIV8
0x5003321C C   FIELD 09w01 PRIV9: PRIV9
0x5003321C C   FIELD 10w01 PRIV10: PRIV10
0x5003321C C   FIELD 11w01 PRIV11: PRIV11
0x5003321C C   FIELD 12w01 PRIV12: PRIV12
0x5003321C C   FIELD 13w01 PRIV13: PRIV13
0x5003321C C   FIELD 14w01 PRIV14: PRIV14
0x5003321C C   FIELD 15w01 PRIV15: PRIV15
0x5003321C C   FIELD 16w01 PRIV16: PRIV16
0x5003321C C   FIELD 17w01 PRIV17: PRIV17
0x5003321C C   FIELD 18w01 PRIV18: PRIV18
0x5003321C C   FIELD 19w01 PRIV19: PRIV19
0x5003321C C   FIELD 20w01 PRIV20: PRIV20
0x5003321C C   FIELD 21w01 PRIV21: PRIV21
0x5003321C C   FIELD 22w01 PRIV22: PRIV22
0x5003321C C   FIELD 23w01 PRIV23: PRIV23
0x5003321C C   FIELD 24w01 PRIV24: PRIV24
0x5003321C C   FIELD 25w01 PRIV25: PRIV25
0x5003321C C   FIELD 26w01 PRIV26: PRIV26
0x5003321C C   FIELD 27w01 PRIV27: PRIV27
0x5003321C C   FIELD 28w01 PRIV28: PRIV28
0x5003321C C   FIELD 29w01 PRIV29: PRIV29
0x5003321C C   FIELD 30w01 PRIV30: PRIV30
0x5003321C C   FIELD 31w01 PRIV31: PRIV31
0x50033220 B  REGISTER MPCBB2_PRIVCFGR8 (rw): MPCBB privileged configuration for super-block x register
0x50033220 C   FIELD 00w01 PRIV0: PRIV0
0x50033220 C   FIELD 01w01 PRIV1: PRIV1
0x50033220 C   FIELD 02w01 PRIV2: PRIV2
0x50033220 C   FIELD 03w01 PRIV3: PRIV3
0x50033220 C   FIELD 04w01 PRIV4: PRIV4
0x50033220 C   FIELD 05w01 PRIV5: PRIV5
0x50033220 C   FIELD 06w01 PRIV6: PRIV6
0x50033220 C   FIELD 07w01 PRIV7: PRIV7
0x50033220 C   FIELD 08w01 PRIV8: PRIV8
0x50033220 C   FIELD 09w01 PRIV9: PRIV9
0x50033220 C   FIELD 10w01 PRIV10: PRIV10
0x50033220 C   FIELD 11w01 PRIV11: PRIV11
0x50033220 C   FIELD 12w01 PRIV12: PRIV12
0x50033220 C   FIELD 13w01 PRIV13: PRIV13
0x50033220 C   FIELD 14w01 PRIV14: PRIV14
0x50033220 C   FIELD 15w01 PRIV15: PRIV15
0x50033220 C   FIELD 16w01 PRIV16: PRIV16
0x50033220 C   FIELD 17w01 PRIV17: PRIV17
0x50033220 C   FIELD 18w01 PRIV18: PRIV18
0x50033220 C   FIELD 19w01 PRIV19: PRIV19
0x50033220 C   FIELD 20w01 PRIV20: PRIV20
0x50033220 C   FIELD 21w01 PRIV21: PRIV21
0x50033220 C   FIELD 22w01 PRIV22: PRIV22
0x50033220 C   FIELD 23w01 PRIV23: PRIV23
0x50033220 C   FIELD 24w01 PRIV24: PRIV24
0x50033220 C   FIELD 25w01 PRIV25: PRIV25
0x50033220 C   FIELD 26w01 PRIV26: PRIV26
0x50033220 C   FIELD 27w01 PRIV27: PRIV27
0x50033220 C   FIELD 28w01 PRIV28: PRIV28
0x50033220 C   FIELD 29w01 PRIV29: PRIV29
0x50033220 C   FIELD 30w01 PRIV30: PRIV30
0x50033220 C   FIELD 31w01 PRIV31: PRIV31
0x50033224 B  REGISTER MPCBB2_PRIVCFGR9 (rw): MPCBB privileged configuration for super-block x register
0x50033224 C   FIELD 00w01 PRIV0: PRIV0
0x50033224 C   FIELD 01w01 PRIV1: PRIV1
0x50033224 C   FIELD 02w01 PRIV2: PRIV2
0x50033224 C   FIELD 03w01 PRIV3: PRIV3
0x50033224 C   FIELD 04w01 PRIV4: PRIV4
0x50033224 C   FIELD 05w01 PRIV5: PRIV5
0x50033224 C   FIELD 06w01 PRIV6: PRIV6
0x50033224 C   FIELD 07w01 PRIV7: PRIV7
0x50033224 C   FIELD 08w01 PRIV8: PRIV8
0x50033224 C   FIELD 09w01 PRIV9: PRIV9
0x50033224 C   FIELD 10w01 PRIV10: PRIV10
0x50033224 C   FIELD 11w01 PRIV11: PRIV11
0x50033224 C   FIELD 12w01 PRIV12: PRIV12
0x50033224 C   FIELD 13w01 PRIV13: PRIV13
0x50033224 C   FIELD 14w01 PRIV14: PRIV14
0x50033224 C   FIELD 15w01 PRIV15: PRIV15
0x50033224 C   FIELD 16w01 PRIV16: PRIV16
0x50033224 C   FIELD 17w01 PRIV17: PRIV17
0x50033224 C   FIELD 18w01 PRIV18: PRIV18
0x50033224 C   FIELD 19w01 PRIV19: PRIV19
0x50033224 C   FIELD 20w01 PRIV20: PRIV20
0x50033224 C   FIELD 21w01 PRIV21: PRIV21
0x50033224 C   FIELD 22w01 PRIV22: PRIV22
0x50033224 C   FIELD 23w01 PRIV23: PRIV23
0x50033224 C   FIELD 24w01 PRIV24: PRIV24
0x50033224 C   FIELD 25w01 PRIV25: PRIV25
0x50033224 C   FIELD 26w01 PRIV26: PRIV26
0x50033224 C   FIELD 27w01 PRIV27: PRIV27
0x50033224 C   FIELD 28w01 PRIV28: PRIV28
0x50033224 C   FIELD 29w01 PRIV29: PRIV29
0x50033224 C   FIELD 30w01 PRIV30: PRIV30
0x50033224 C   FIELD 31w01 PRIV31: PRIV31
0x50033228 B  REGISTER MPCBB2_PRIVCFGR10 (rw): MPCBB privileged configuration for super-block x register
0x50033228 C   FIELD 00w01 PRIV0: PRIV0
0x50033228 C   FIELD 01w01 PRIV1: PRIV1
0x50033228 C   FIELD 02w01 PRIV2: PRIV2
0x50033228 C   FIELD 03w01 PRIV3: PRIV3
0x50033228 C   FIELD 04w01 PRIV4: PRIV4
0x50033228 C   FIELD 05w01 PRIV5: PRIV5
0x50033228 C   FIELD 06w01 PRIV6: PRIV6
0x50033228 C   FIELD 07w01 PRIV7: PRIV7
0x50033228 C   FIELD 08w01 PRIV8: PRIV8
0x50033228 C   FIELD 09w01 PRIV9: PRIV9
0x50033228 C   FIELD 10w01 PRIV10: PRIV10
0x50033228 C   FIELD 11w01 PRIV11: PRIV11
0x50033228 C   FIELD 12w01 PRIV12: PRIV12
0x50033228 C   FIELD 13w01 PRIV13: PRIV13
0x50033228 C   FIELD 14w01 PRIV14: PRIV14
0x50033228 C   FIELD 15w01 PRIV15: PRIV15
0x50033228 C   FIELD 16w01 PRIV16: PRIV16
0x50033228 C   FIELD 17w01 PRIV17: PRIV17
0x50033228 C   FIELD 18w01 PRIV18: PRIV18
0x50033228 C   FIELD 19w01 PRIV19: PRIV19
0x50033228 C   FIELD 20w01 PRIV20: PRIV20
0x50033228 C   FIELD 21w01 PRIV21: PRIV21
0x50033228 C   FIELD 22w01 PRIV22: PRIV22
0x50033228 C   FIELD 23w01 PRIV23: PRIV23
0x50033228 C   FIELD 24w01 PRIV24: PRIV24
0x50033228 C   FIELD 25w01 PRIV25: PRIV25
0x50033228 C   FIELD 26w01 PRIV26: PRIV26
0x50033228 C   FIELD 27w01 PRIV27: PRIV27
0x50033228 C   FIELD 28w01 PRIV28: PRIV28
0x50033228 C   FIELD 29w01 PRIV29: PRIV29
0x50033228 C   FIELD 30w01 PRIV30: PRIV30
0x50033228 C   FIELD 31w01 PRIV31: PRIV31
0x5003322C B  REGISTER MPCBB2_PRIVCFGR11 (rw): MPCBB privileged configuration for super-block x register
0x5003322C C   FIELD 00w01 PRIV0: PRIV0
0x5003322C C   FIELD 01w01 PRIV1: PRIV1
0x5003322C C   FIELD 02w01 PRIV2: PRIV2
0x5003322C C   FIELD 03w01 PRIV3: PRIV3
0x5003322C C   FIELD 04w01 PRIV4: PRIV4
0x5003322C C   FIELD 05w01 PRIV5: PRIV5
0x5003322C C   FIELD 06w01 PRIV6: PRIV6
0x5003322C C   FIELD 07w01 PRIV7: PRIV7
0x5003322C C   FIELD 08w01 PRIV8: PRIV8
0x5003322C C   FIELD 09w01 PRIV9: PRIV9
0x5003322C C   FIELD 10w01 PRIV10: PRIV10
0x5003322C C   FIELD 11w01 PRIV11: PRIV11
0x5003322C C   FIELD 12w01 PRIV12: PRIV12
0x5003322C C   FIELD 13w01 PRIV13: PRIV13
0x5003322C C   FIELD 14w01 PRIV14: PRIV14
0x5003322C C   FIELD 15w01 PRIV15: PRIV15
0x5003322C C   FIELD 16w01 PRIV16: PRIV16
0x5003322C C   FIELD 17w01 PRIV17: PRIV17
0x5003322C C   FIELD 18w01 PRIV18: PRIV18
0x5003322C C   FIELD 19w01 PRIV19: PRIV19
0x5003322C C   FIELD 20w01 PRIV20: PRIV20
0x5003322C C   FIELD 21w01 PRIV21: PRIV21
0x5003322C C   FIELD 22w01 PRIV22: PRIV22
0x5003322C C   FIELD 23w01 PRIV23: PRIV23
0x5003322C C   FIELD 24w01 PRIV24: PRIV24
0x5003322C C   FIELD 25w01 PRIV25: PRIV25
0x5003322C C   FIELD 26w01 PRIV26: PRIV26
0x5003322C C   FIELD 27w01 PRIV27: PRIV27
0x5003322C C   FIELD 28w01 PRIV28: PRIV28
0x5003322C C   FIELD 29w01 PRIV29: PRIV29
0x5003322C C   FIELD 30w01 PRIV30: PRIV30
0x5003322C C   FIELD 31w01 PRIV31: PRIV31
0x50033230 B  REGISTER MPCBB2_PRIVCFGR12 (rw): MPCBB privileged configuration for super-block x register
0x50033230 C   FIELD 00w01 PRIV0: PRIV0
0x50033230 C   FIELD 01w01 PRIV1: PRIV1
0x50033230 C   FIELD 02w01 PRIV2: PRIV2
0x50033230 C   FIELD 03w01 PRIV3: PRIV3
0x50033230 C   FIELD 04w01 PRIV4: PRIV4
0x50033230 C   FIELD 05w01 PRIV5: PRIV5
0x50033230 C   FIELD 06w01 PRIV6: PRIV6
0x50033230 C   FIELD 07w01 PRIV7: PRIV7
0x50033230 C   FIELD 08w01 PRIV8: PRIV8
0x50033230 C   FIELD 09w01 PRIV9: PRIV9
0x50033230 C   FIELD 10w01 PRIV10: PRIV10
0x50033230 C   FIELD 11w01 PRIV11: PRIV11
0x50033230 C   FIELD 12w01 PRIV12: PRIV12
0x50033230 C   FIELD 13w01 PRIV13: PRIV13
0x50033230 C   FIELD 14w01 PRIV14: PRIV14
0x50033230 C   FIELD 15w01 PRIV15: PRIV15
0x50033230 C   FIELD 16w01 PRIV16: PRIV16
0x50033230 C   FIELD 17w01 PRIV17: PRIV17
0x50033230 C   FIELD 18w01 PRIV18: PRIV18
0x50033230 C   FIELD 19w01 PRIV19: PRIV19
0x50033230 C   FIELD 20w01 PRIV20: PRIV20
0x50033230 C   FIELD 21w01 PRIV21: PRIV21
0x50033230 C   FIELD 22w01 PRIV22: PRIV22
0x50033230 C   FIELD 23w01 PRIV23: PRIV23
0x50033230 C   FIELD 24w01 PRIV24: PRIV24
0x50033230 C   FIELD 25w01 PRIV25: PRIV25
0x50033230 C   FIELD 26w01 PRIV26: PRIV26
0x50033230 C   FIELD 27w01 PRIV27: PRIV27
0x50033230 C   FIELD 28w01 PRIV28: PRIV28
0x50033230 C   FIELD 29w01 PRIV29: PRIV29
0x50033230 C   FIELD 30w01 PRIV30: PRIV30
0x50033230 C   FIELD 31w01 PRIV31: PRIV31
0x50033234 B  REGISTER MPCBB2_PRIVCFGR13 (rw): MPCBB privileged configuration for super-block x register
0x50033234 C   FIELD 00w01 PRIV0: PRIV0
0x50033234 C   FIELD 01w01 PRIV1: PRIV1
0x50033234 C   FIELD 02w01 PRIV2: PRIV2
0x50033234 C   FIELD 03w01 PRIV3: PRIV3
0x50033234 C   FIELD 04w01 PRIV4: PRIV4
0x50033234 C   FIELD 05w01 PRIV5: PRIV5
0x50033234 C   FIELD 06w01 PRIV6: PRIV6
0x50033234 C   FIELD 07w01 PRIV7: PRIV7
0x50033234 C   FIELD 08w01 PRIV8: PRIV8
0x50033234 C   FIELD 09w01 PRIV9: PRIV9
0x50033234 C   FIELD 10w01 PRIV10: PRIV10
0x50033234 C   FIELD 11w01 PRIV11: PRIV11
0x50033234 C   FIELD 12w01 PRIV12: PRIV12
0x50033234 C   FIELD 13w01 PRIV13: PRIV13
0x50033234 C   FIELD 14w01 PRIV14: PRIV14
0x50033234 C   FIELD 15w01 PRIV15: PRIV15
0x50033234 C   FIELD 16w01 PRIV16: PRIV16
0x50033234 C   FIELD 17w01 PRIV17: PRIV17
0x50033234 C   FIELD 18w01 PRIV18: PRIV18
0x50033234 C   FIELD 19w01 PRIV19: PRIV19
0x50033234 C   FIELD 20w01 PRIV20: PRIV20
0x50033234 C   FIELD 21w01 PRIV21: PRIV21
0x50033234 C   FIELD 22w01 PRIV22: PRIV22
0x50033234 C   FIELD 23w01 PRIV23: PRIV23
0x50033234 C   FIELD 24w01 PRIV24: PRIV24
0x50033234 C   FIELD 25w01 PRIV25: PRIV25
0x50033234 C   FIELD 26w01 PRIV26: PRIV26
0x50033234 C   FIELD 27w01 PRIV27: PRIV27
0x50033234 C   FIELD 28w01 PRIV28: PRIV28
0x50033234 C   FIELD 29w01 PRIV29: PRIV29
0x50033234 C   FIELD 30w01 PRIV30: PRIV30
0x50033234 C   FIELD 31w01 PRIV31: PRIV31
0x50033238 B  REGISTER MPCBB2_PRIVCFGR14 (rw): MPCBB privileged configuration for super-block x register
0x50033238 C   FIELD 00w01 PRIV0: PRIV0
0x50033238 C   FIELD 01w01 PRIV1: PRIV1
0x50033238 C   FIELD 02w01 PRIV2: PRIV2
0x50033238 C   FIELD 03w01 PRIV3: PRIV3
0x50033238 C   FIELD 04w01 PRIV4: PRIV4
0x50033238 C   FIELD 05w01 PRIV5: PRIV5
0x50033238 C   FIELD 06w01 PRIV6: PRIV6
0x50033238 C   FIELD 07w01 PRIV7: PRIV7
0x50033238 C   FIELD 08w01 PRIV8: PRIV8
0x50033238 C   FIELD 09w01 PRIV9: PRIV9
0x50033238 C   FIELD 10w01 PRIV10: PRIV10
0x50033238 C   FIELD 11w01 PRIV11: PRIV11
0x50033238 C   FIELD 12w01 PRIV12: PRIV12
0x50033238 C   FIELD 13w01 PRIV13: PRIV13
0x50033238 C   FIELD 14w01 PRIV14: PRIV14
0x50033238 C   FIELD 15w01 PRIV15: PRIV15
0x50033238 C   FIELD 16w01 PRIV16: PRIV16
0x50033238 C   FIELD 17w01 PRIV17: PRIV17
0x50033238 C   FIELD 18w01 PRIV18: PRIV18
0x50033238 C   FIELD 19w01 PRIV19: PRIV19
0x50033238 C   FIELD 20w01 PRIV20: PRIV20
0x50033238 C   FIELD 21w01 PRIV21: PRIV21
0x50033238 C   FIELD 22w01 PRIV22: PRIV22
0x50033238 C   FIELD 23w01 PRIV23: PRIV23
0x50033238 C   FIELD 24w01 PRIV24: PRIV24
0x50033238 C   FIELD 25w01 PRIV25: PRIV25
0x50033238 C   FIELD 26w01 PRIV26: PRIV26
0x50033238 C   FIELD 27w01 PRIV27: PRIV27
0x50033238 C   FIELD 28w01 PRIV28: PRIV28
0x50033238 C   FIELD 29w01 PRIV29: PRIV29
0x50033238 C   FIELD 30w01 PRIV30: PRIV30
0x50033238 C   FIELD 31w01 PRIV31: PRIV31
0x5003323C B  REGISTER MPCBB2_PRIVCFGR15 (rw): MPCBB privileged configuration for super-block x register
0x5003323C C   FIELD 00w01 PRIV0: PRIV0
0x5003323C C   FIELD 01w01 PRIV1: PRIV1
0x5003323C C   FIELD 02w01 PRIV2: PRIV2
0x5003323C C   FIELD 03w01 PRIV3: PRIV3
0x5003323C C   FIELD 04w01 PRIV4: PRIV4
0x5003323C C   FIELD 05w01 PRIV5: PRIV5
0x5003323C C   FIELD 06w01 PRIV6: PRIV6
0x5003323C C   FIELD 07w01 PRIV7: PRIV7
0x5003323C C   FIELD 08w01 PRIV8: PRIV8
0x5003323C C   FIELD 09w01 PRIV9: PRIV9
0x5003323C C   FIELD 10w01 PRIV10: PRIV10
0x5003323C C   FIELD 11w01 PRIV11: PRIV11
0x5003323C C   FIELD 12w01 PRIV12: PRIV12
0x5003323C C   FIELD 13w01 PRIV13: PRIV13
0x5003323C C   FIELD 14w01 PRIV14: PRIV14
0x5003323C C   FIELD 15w01 PRIV15: PRIV15
0x5003323C C   FIELD 16w01 PRIV16: PRIV16
0x5003323C C   FIELD 17w01 PRIV17: PRIV17
0x5003323C C   FIELD 18w01 PRIV18: PRIV18
0x5003323C C   FIELD 19w01 PRIV19: PRIV19
0x5003323C C   FIELD 20w01 PRIV20: PRIV20
0x5003323C C   FIELD 21w01 PRIV21: PRIV21
0x5003323C C   FIELD 22w01 PRIV22: PRIV22
0x5003323C C   FIELD 23w01 PRIV23: PRIV23
0x5003323C C   FIELD 24w01 PRIV24: PRIV24
0x5003323C C   FIELD 25w01 PRIV25: PRIV25
0x5003323C C   FIELD 26w01 PRIV26: PRIV26
0x5003323C C   FIELD 27w01 PRIV27: PRIV27
0x5003323C C   FIELD 28w01 PRIV28: PRIV28
0x5003323C C   FIELD 29w01 PRIV29: PRIV29
0x5003323C C   FIELD 30w01 PRIV30: PRIV30
0x5003323C C   FIELD 31w01 PRIV31: PRIV31
0x50033240 B  REGISTER MPCBB2_PRIVCFGR16 (rw): MPCBB privileged configuration for super-block x register
0x50033240 C   FIELD 00w01 PRIV0: PRIV0
0x50033240 C   FIELD 01w01 PRIV1: PRIV1
0x50033240 C   FIELD 02w01 PRIV2: PRIV2
0x50033240 C   FIELD 03w01 PRIV3: PRIV3
0x50033240 C   FIELD 04w01 PRIV4: PRIV4
0x50033240 C   FIELD 05w01 PRIV5: PRIV5
0x50033240 C   FIELD 06w01 PRIV6: PRIV6
0x50033240 C   FIELD 07w01 PRIV7: PRIV7
0x50033240 C   FIELD 08w01 PRIV8: PRIV8
0x50033240 C   FIELD 09w01 PRIV9: PRIV9
0x50033240 C   FIELD 10w01 PRIV10: PRIV10
0x50033240 C   FIELD 11w01 PRIV11: PRIV11
0x50033240 C   FIELD 12w01 PRIV12: PRIV12
0x50033240 C   FIELD 13w01 PRIV13: PRIV13
0x50033240 C   FIELD 14w01 PRIV14: PRIV14
0x50033240 C   FIELD 15w01 PRIV15: PRIV15
0x50033240 C   FIELD 16w01 PRIV16: PRIV16
0x50033240 C   FIELD 17w01 PRIV17: PRIV17
0x50033240 C   FIELD 18w01 PRIV18: PRIV18
0x50033240 C   FIELD 19w01 PRIV19: PRIV19
0x50033240 C   FIELD 20w01 PRIV20: PRIV20
0x50033240 C   FIELD 21w01 PRIV21: PRIV21
0x50033240 C   FIELD 22w01 PRIV22: PRIV22
0x50033240 C   FIELD 23w01 PRIV23: PRIV23
0x50033240 C   FIELD 24w01 PRIV24: PRIV24
0x50033240 C   FIELD 25w01 PRIV25: PRIV25
0x50033240 C   FIELD 26w01 PRIV26: PRIV26
0x50033240 C   FIELD 27w01 PRIV27: PRIV27
0x50033240 C   FIELD 28w01 PRIV28: PRIV28
0x50033240 C   FIELD 29w01 PRIV29: PRIV29
0x50033240 C   FIELD 30w01 PRIV30: PRIV30
0x50033240 C   FIELD 31w01 PRIV31: PRIV31
0x50033244 B  REGISTER MPCBB2_PRIVCFGR17 (rw): MPCBB privileged configuration for super-block x register
0x50033244 C   FIELD 00w01 PRIV0: PRIV0
0x50033244 C   FIELD 01w01 PRIV1: PRIV1
0x50033244 C   FIELD 02w01 PRIV2: PRIV2
0x50033244 C   FIELD 03w01 PRIV3: PRIV3
0x50033244 C   FIELD 04w01 PRIV4: PRIV4
0x50033244 C   FIELD 05w01 PRIV5: PRIV5
0x50033244 C   FIELD 06w01 PRIV6: PRIV6
0x50033244 C   FIELD 07w01 PRIV7: PRIV7
0x50033244 C   FIELD 08w01 PRIV8: PRIV8
0x50033244 C   FIELD 09w01 PRIV9: PRIV9
0x50033244 C   FIELD 10w01 PRIV10: PRIV10
0x50033244 C   FIELD 11w01 PRIV11: PRIV11
0x50033244 C   FIELD 12w01 PRIV12: PRIV12
0x50033244 C   FIELD 13w01 PRIV13: PRIV13
0x50033244 C   FIELD 14w01 PRIV14: PRIV14
0x50033244 C   FIELD 15w01 PRIV15: PRIV15
0x50033244 C   FIELD 16w01 PRIV16: PRIV16
0x50033244 C   FIELD 17w01 PRIV17: PRIV17
0x50033244 C   FIELD 18w01 PRIV18: PRIV18
0x50033244 C   FIELD 19w01 PRIV19: PRIV19
0x50033244 C   FIELD 20w01 PRIV20: PRIV20
0x50033244 C   FIELD 21w01 PRIV21: PRIV21
0x50033244 C   FIELD 22w01 PRIV22: PRIV22
0x50033244 C   FIELD 23w01 PRIV23: PRIV23
0x50033244 C   FIELD 24w01 PRIV24: PRIV24
0x50033244 C   FIELD 25w01 PRIV25: PRIV25
0x50033244 C   FIELD 26w01 PRIV26: PRIV26
0x50033244 C   FIELD 27w01 PRIV27: PRIV27
0x50033244 C   FIELD 28w01 PRIV28: PRIV28
0x50033244 C   FIELD 29w01 PRIV29: PRIV29
0x50033244 C   FIELD 30w01 PRIV30: PRIV30
0x50033244 C   FIELD 31w01 PRIV31: PRIV31
0x50033248 B  REGISTER MPCBB2_PRIVCFGR18 (rw): MPCBB privileged configuration for super-block x register
0x50033248 C   FIELD 00w01 PRIV0: PRIV0
0x50033248 C   FIELD 01w01 PRIV1: PRIV1
0x50033248 C   FIELD 02w01 PRIV2: PRIV2
0x50033248 C   FIELD 03w01 PRIV3: PRIV3
0x50033248 C   FIELD 04w01 PRIV4: PRIV4
0x50033248 C   FIELD 05w01 PRIV5: PRIV5
0x50033248 C   FIELD 06w01 PRIV6: PRIV6
0x50033248 C   FIELD 07w01 PRIV7: PRIV7
0x50033248 C   FIELD 08w01 PRIV8: PRIV8
0x50033248 C   FIELD 09w01 PRIV9: PRIV9
0x50033248 C   FIELD 10w01 PRIV10: PRIV10
0x50033248 C   FIELD 11w01 PRIV11: PRIV11
0x50033248 C   FIELD 12w01 PRIV12: PRIV12
0x50033248 C   FIELD 13w01 PRIV13: PRIV13
0x50033248 C   FIELD 14w01 PRIV14: PRIV14
0x50033248 C   FIELD 15w01 PRIV15: PRIV15
0x50033248 C   FIELD 16w01 PRIV16: PRIV16
0x50033248 C   FIELD 17w01 PRIV17: PRIV17
0x50033248 C   FIELD 18w01 PRIV18: PRIV18
0x50033248 C   FIELD 19w01 PRIV19: PRIV19
0x50033248 C   FIELD 20w01 PRIV20: PRIV20
0x50033248 C   FIELD 21w01 PRIV21: PRIV21
0x50033248 C   FIELD 22w01 PRIV22: PRIV22
0x50033248 C   FIELD 23w01 PRIV23: PRIV23
0x50033248 C   FIELD 24w01 PRIV24: PRIV24
0x50033248 C   FIELD 25w01 PRIV25: PRIV25
0x50033248 C   FIELD 26w01 PRIV26: PRIV26
0x50033248 C   FIELD 27w01 PRIV27: PRIV27
0x50033248 C   FIELD 28w01 PRIV28: PRIV28
0x50033248 C   FIELD 29w01 PRIV29: PRIV29
0x50033248 C   FIELD 30w01 PRIV30: PRIV30
0x50033248 C   FIELD 31w01 PRIV31: PRIV31
0x5003324C B  REGISTER MPCBB2_PRIVCFGR19 (rw): MPCBB privileged configuration for super-block x register
0x5003324C C   FIELD 00w01 PRIV0: PRIV0
0x5003324C C   FIELD 01w01 PRIV1: PRIV1
0x5003324C C   FIELD 02w01 PRIV2: PRIV2
0x5003324C C   FIELD 03w01 PRIV3: PRIV3
0x5003324C C   FIELD 04w01 PRIV4: PRIV4
0x5003324C C   FIELD 05w01 PRIV5: PRIV5
0x5003324C C   FIELD 06w01 PRIV6: PRIV6
0x5003324C C   FIELD 07w01 PRIV7: PRIV7
0x5003324C C   FIELD 08w01 PRIV8: PRIV8
0x5003324C C   FIELD 09w01 PRIV9: PRIV9
0x5003324C C   FIELD 10w01 PRIV10: PRIV10
0x5003324C C   FIELD 11w01 PRIV11: PRIV11
0x5003324C C   FIELD 12w01 PRIV12: PRIV12
0x5003324C C   FIELD 13w01 PRIV13: PRIV13
0x5003324C C   FIELD 14w01 PRIV14: PRIV14
0x5003324C C   FIELD 15w01 PRIV15: PRIV15
0x5003324C C   FIELD 16w01 PRIV16: PRIV16
0x5003324C C   FIELD 17w01 PRIV17: PRIV17
0x5003324C C   FIELD 18w01 PRIV18: PRIV18
0x5003324C C   FIELD 19w01 PRIV19: PRIV19
0x5003324C C   FIELD 20w01 PRIV20: PRIV20
0x5003324C C   FIELD 21w01 PRIV21: PRIV21
0x5003324C C   FIELD 22w01 PRIV22: PRIV22
0x5003324C C   FIELD 23w01 PRIV23: PRIV23
0x5003324C C   FIELD 24w01 PRIV24: PRIV24
0x5003324C C   FIELD 25w01 PRIV25: PRIV25
0x5003324C C   FIELD 26w01 PRIV26: PRIV26
0x5003324C C   FIELD 27w01 PRIV27: PRIV27
0x5003324C C   FIELD 28w01 PRIV28: PRIV28
0x5003324C C   FIELD 29w01 PRIV29: PRIV29
0x5003324C C   FIELD 30w01 PRIV30: PRIV30
0x5003324C C   FIELD 31w01 PRIV31: PRIV31
0x50033250 B  REGISTER MPCBB2_PRIVCFGR20 (rw): MPCBB privileged configuration for super-block x register
0x50033250 C   FIELD 00w01 PRIV0: PRIV0
0x50033250 C   FIELD 01w01 PRIV1: PRIV1
0x50033250 C   FIELD 02w01 PRIV2: PRIV2
0x50033250 C   FIELD 03w01 PRIV3: PRIV3
0x50033250 C   FIELD 04w01 PRIV4: PRIV4
0x50033250 C   FIELD 05w01 PRIV5: PRIV5
0x50033250 C   FIELD 06w01 PRIV6: PRIV6
0x50033250 C   FIELD 07w01 PRIV7: PRIV7
0x50033250 C   FIELD 08w01 PRIV8: PRIV8
0x50033250 C   FIELD 09w01 PRIV9: PRIV9
0x50033250 C   FIELD 10w01 PRIV10: PRIV10
0x50033250 C   FIELD 11w01 PRIV11: PRIV11
0x50033250 C   FIELD 12w01 PRIV12: PRIV12
0x50033250 C   FIELD 13w01 PRIV13: PRIV13
0x50033250 C   FIELD 14w01 PRIV14: PRIV14
0x50033250 C   FIELD 15w01 PRIV15: PRIV15
0x50033250 C   FIELD 16w01 PRIV16: PRIV16
0x50033250 C   FIELD 17w01 PRIV17: PRIV17
0x50033250 C   FIELD 18w01 PRIV18: PRIV18
0x50033250 C   FIELD 19w01 PRIV19: PRIV19
0x50033250 C   FIELD 20w01 PRIV20: PRIV20
0x50033250 C   FIELD 21w01 PRIV21: PRIV21
0x50033250 C   FIELD 22w01 PRIV22: PRIV22
0x50033250 C   FIELD 23w01 PRIV23: PRIV23
0x50033250 C   FIELD 24w01 PRIV24: PRIV24
0x50033250 C   FIELD 25w01 PRIV25: PRIV25
0x50033250 C   FIELD 26w01 PRIV26: PRIV26
0x50033250 C   FIELD 27w01 PRIV27: PRIV27
0x50033250 C   FIELD 28w01 PRIV28: PRIV28
0x50033250 C   FIELD 29w01 PRIV29: PRIV29
0x50033250 C   FIELD 30w01 PRIV30: PRIV30
0x50033250 C   FIELD 31w01 PRIV31: PRIV31
0x50033254 B  REGISTER MPCBB2_PRIVCFGR21 (rw): MPCBB privileged configuration for super-block x register
0x50033254 C   FIELD 00w01 PRIV0: PRIV0
0x50033254 C   FIELD 01w01 PRIV1: PRIV1
0x50033254 C   FIELD 02w01 PRIV2: PRIV2
0x50033254 C   FIELD 03w01 PRIV3: PRIV3
0x50033254 C   FIELD 04w01 PRIV4: PRIV4
0x50033254 C   FIELD 05w01 PRIV5: PRIV5
0x50033254 C   FIELD 06w01 PRIV6: PRIV6
0x50033254 C   FIELD 07w01 PRIV7: PRIV7
0x50033254 C   FIELD 08w01 PRIV8: PRIV8
0x50033254 C   FIELD 09w01 PRIV9: PRIV9
0x50033254 C   FIELD 10w01 PRIV10: PRIV10
0x50033254 C   FIELD 11w01 PRIV11: PRIV11
0x50033254 C   FIELD 12w01 PRIV12: PRIV12
0x50033254 C   FIELD 13w01 PRIV13: PRIV13
0x50033254 C   FIELD 14w01 PRIV14: PRIV14
0x50033254 C   FIELD 15w01 PRIV15: PRIV15
0x50033254 C   FIELD 16w01 PRIV16: PRIV16
0x50033254 C   FIELD 17w01 PRIV17: PRIV17
0x50033254 C   FIELD 18w01 PRIV18: PRIV18
0x50033254 C   FIELD 19w01 PRIV19: PRIV19
0x50033254 C   FIELD 20w01 PRIV20: PRIV20
0x50033254 C   FIELD 21w01 PRIV21: PRIV21
0x50033254 C   FIELD 22w01 PRIV22: PRIV22
0x50033254 C   FIELD 23w01 PRIV23: PRIV23
0x50033254 C   FIELD 24w01 PRIV24: PRIV24
0x50033254 C   FIELD 25w01 PRIV25: PRIV25
0x50033254 C   FIELD 26w01 PRIV26: PRIV26
0x50033254 C   FIELD 27w01 PRIV27: PRIV27
0x50033254 C   FIELD 28w01 PRIV28: PRIV28
0x50033254 C   FIELD 29w01 PRIV29: PRIV29
0x50033254 C   FIELD 30w01 PRIV30: PRIV30
0x50033254 C   FIELD 31w01 PRIV31: PRIV31
0x50033258 B  REGISTER MPCBB2_PRIVCFGR22 (rw): MPCBB privileged configuration for super-block x register
0x50033258 C   FIELD 00w01 PRIV0: PRIV0
0x50033258 C   FIELD 01w01 PRIV1: PRIV1
0x50033258 C   FIELD 02w01 PRIV2: PRIV2
0x50033258 C   FIELD 03w01 PRIV3: PRIV3
0x50033258 C   FIELD 04w01 PRIV4: PRIV4
0x50033258 C   FIELD 05w01 PRIV5: PRIV5
0x50033258 C   FIELD 06w01 PRIV6: PRIV6
0x50033258 C   FIELD 07w01 PRIV7: PRIV7
0x50033258 C   FIELD 08w01 PRIV8: PRIV8
0x50033258 C   FIELD 09w01 PRIV9: PRIV9
0x50033258 C   FIELD 10w01 PRIV10: PRIV10
0x50033258 C   FIELD 11w01 PRIV11: PRIV11
0x50033258 C   FIELD 12w01 PRIV12: PRIV12
0x50033258 C   FIELD 13w01 PRIV13: PRIV13
0x50033258 C   FIELD 14w01 PRIV14: PRIV14
0x50033258 C   FIELD 15w01 PRIV15: PRIV15
0x50033258 C   FIELD 16w01 PRIV16: PRIV16
0x50033258 C   FIELD 17w01 PRIV17: PRIV17
0x50033258 C   FIELD 18w01 PRIV18: PRIV18
0x50033258 C   FIELD 19w01 PRIV19: PRIV19
0x50033258 C   FIELD 20w01 PRIV20: PRIV20
0x50033258 C   FIELD 21w01 PRIV21: PRIV21
0x50033258 C   FIELD 22w01 PRIV22: PRIV22
0x50033258 C   FIELD 23w01 PRIV23: PRIV23
0x50033258 C   FIELD 24w01 PRIV24: PRIV24
0x50033258 C   FIELD 25w01 PRIV25: PRIV25
0x50033258 C   FIELD 26w01 PRIV26: PRIV26
0x50033258 C   FIELD 27w01 PRIV27: PRIV27
0x50033258 C   FIELD 28w01 PRIV28: PRIV28
0x50033258 C   FIELD 29w01 PRIV29: PRIV29
0x50033258 C   FIELD 30w01 PRIV30: PRIV30
0x50033258 C   FIELD 31w01 PRIV31: PRIV31
0x5003325C B  REGISTER MPCBB2_PRIVCFGR23 (rw): MPCBB privileged configuration for super-block x register
0x5003325C C   FIELD 00w01 PRIV0: PRIV0
0x5003325C C   FIELD 01w01 PRIV1: PRIV1
0x5003325C C   FIELD 02w01 PRIV2: PRIV2
0x5003325C C   FIELD 03w01 PRIV3: PRIV3
0x5003325C C   FIELD 04w01 PRIV4: PRIV4
0x5003325C C   FIELD 05w01 PRIV5: PRIV5
0x5003325C C   FIELD 06w01 PRIV6: PRIV6
0x5003325C C   FIELD 07w01 PRIV7: PRIV7
0x5003325C C   FIELD 08w01 PRIV8: PRIV8
0x5003325C C   FIELD 09w01 PRIV9: PRIV9
0x5003325C C   FIELD 10w01 PRIV10: PRIV10
0x5003325C C   FIELD 11w01 PRIV11: PRIV11
0x5003325C C   FIELD 12w01 PRIV12: PRIV12
0x5003325C C   FIELD 13w01 PRIV13: PRIV13
0x5003325C C   FIELD 14w01 PRIV14: PRIV14
0x5003325C C   FIELD 15w01 PRIV15: PRIV15
0x5003325C C   FIELD 16w01 PRIV16: PRIV16
0x5003325C C   FIELD 17w01 PRIV17: PRIV17
0x5003325C C   FIELD 18w01 PRIV18: PRIV18
0x5003325C C   FIELD 19w01 PRIV19: PRIV19
0x5003325C C   FIELD 20w01 PRIV20: PRIV20
0x5003325C C   FIELD 21w01 PRIV21: PRIV21
0x5003325C C   FIELD 22w01 PRIV22: PRIV22
0x5003325C C   FIELD 23w01 PRIV23: PRIV23
0x5003325C C   FIELD 24w01 PRIV24: PRIV24
0x5003325C C   FIELD 25w01 PRIV25: PRIV25
0x5003325C C   FIELD 26w01 PRIV26: PRIV26
0x5003325C C   FIELD 27w01 PRIV27: PRIV27
0x5003325C C   FIELD 28w01 PRIV28: PRIV28
0x5003325C C   FIELD 29w01 PRIV29: PRIV29
0x5003325C C   FIELD 30w01 PRIV30: PRIV30
0x5003325C C   FIELD 31w01 PRIV31: PRIV31
0x50033260 B  REGISTER MPCBB2_PRIVCFGR24 (rw): MPCBB privileged configuration for super-block x register
0x50033260 C   FIELD 00w01 PRIV0: PRIV0
0x50033260 C   FIELD 01w01 PRIV1: PRIV1
0x50033260 C   FIELD 02w01 PRIV2: PRIV2
0x50033260 C   FIELD 03w01 PRIV3: PRIV3
0x50033260 C   FIELD 04w01 PRIV4: PRIV4
0x50033260 C   FIELD 05w01 PRIV5: PRIV5
0x50033260 C   FIELD 06w01 PRIV6: PRIV6
0x50033260 C   FIELD 07w01 PRIV7: PRIV7
0x50033260 C   FIELD 08w01 PRIV8: PRIV8
0x50033260 C   FIELD 09w01 PRIV9: PRIV9
0x50033260 C   FIELD 10w01 PRIV10: PRIV10
0x50033260 C   FIELD 11w01 PRIV11: PRIV11
0x50033260 C   FIELD 12w01 PRIV12: PRIV12
0x50033260 C   FIELD 13w01 PRIV13: PRIV13
0x50033260 C   FIELD 14w01 PRIV14: PRIV14
0x50033260 C   FIELD 15w01 PRIV15: PRIV15
0x50033260 C   FIELD 16w01 PRIV16: PRIV16
0x50033260 C   FIELD 17w01 PRIV17: PRIV17
0x50033260 C   FIELD 18w01 PRIV18: PRIV18
0x50033260 C   FIELD 19w01 PRIV19: PRIV19
0x50033260 C   FIELD 20w01 PRIV20: PRIV20
0x50033260 C   FIELD 21w01 PRIV21: PRIV21
0x50033260 C   FIELD 22w01 PRIV22: PRIV22
0x50033260 C   FIELD 23w01 PRIV23: PRIV23
0x50033260 C   FIELD 24w01 PRIV24: PRIV24
0x50033260 C   FIELD 25w01 PRIV25: PRIV25
0x50033260 C   FIELD 26w01 PRIV26: PRIV26
0x50033260 C   FIELD 27w01 PRIV27: PRIV27
0x50033260 C   FIELD 28w01 PRIV28: PRIV28
0x50033260 C   FIELD 29w01 PRIV29: PRIV29
0x50033260 C   FIELD 30w01 PRIV30: PRIV30
0x50033260 C   FIELD 31w01 PRIV31: PRIV31
0x50033264 B  REGISTER MPCBB2_PRIVCFGR25 (rw): MPCBB privileged configuration for super-block x register
0x50033264 C   FIELD 00w01 PRIV0: PRIV0
0x50033264 C   FIELD 01w01 PRIV1: PRIV1
0x50033264 C   FIELD 02w01 PRIV2: PRIV2
0x50033264 C   FIELD 03w01 PRIV3: PRIV3
0x50033264 C   FIELD 04w01 PRIV4: PRIV4
0x50033264 C   FIELD 05w01 PRIV5: PRIV5
0x50033264 C   FIELD 06w01 PRIV6: PRIV6
0x50033264 C   FIELD 07w01 PRIV7: PRIV7
0x50033264 C   FIELD 08w01 PRIV8: PRIV8
0x50033264 C   FIELD 09w01 PRIV9: PRIV9
0x50033264 C   FIELD 10w01 PRIV10: PRIV10
0x50033264 C   FIELD 11w01 PRIV11: PRIV11
0x50033264 C   FIELD 12w01 PRIV12: PRIV12
0x50033264 C   FIELD 13w01 PRIV13: PRIV13
0x50033264 C   FIELD 14w01 PRIV14: PRIV14
0x50033264 C   FIELD 15w01 PRIV15: PRIV15
0x50033264 C   FIELD 16w01 PRIV16: PRIV16
0x50033264 C   FIELD 17w01 PRIV17: PRIV17
0x50033264 C   FIELD 18w01 PRIV18: PRIV18
0x50033264 C   FIELD 19w01 PRIV19: PRIV19
0x50033264 C   FIELD 20w01 PRIV20: PRIV20
0x50033264 C   FIELD 21w01 PRIV21: PRIV21
0x50033264 C   FIELD 22w01 PRIV22: PRIV22
0x50033264 C   FIELD 23w01 PRIV23: PRIV23
0x50033264 C   FIELD 24w01 PRIV24: PRIV24
0x50033264 C   FIELD 25w01 PRIV25: PRIV25
0x50033264 C   FIELD 26w01 PRIV26: PRIV26
0x50033264 C   FIELD 27w01 PRIV27: PRIV27
0x50033264 C   FIELD 28w01 PRIV28: PRIV28
0x50033264 C   FIELD 29w01 PRIV29: PRIV29
0x50033264 C   FIELD 30w01 PRIV30: PRIV30
0x50033264 C   FIELD 31w01 PRIV31: PRIV31
0x50033268 B  REGISTER MPCBB2_PRIVCFGR26 (rw): MPCBB privileged configuration for super-block x register
0x50033268 C   FIELD 00w01 PRIV0: PRIV0
0x50033268 C   FIELD 01w01 PRIV1: PRIV1
0x50033268 C   FIELD 02w01 PRIV2: PRIV2
0x50033268 C   FIELD 03w01 PRIV3: PRIV3
0x50033268 C   FIELD 04w01 PRIV4: PRIV4
0x50033268 C   FIELD 05w01 PRIV5: PRIV5
0x50033268 C   FIELD 06w01 PRIV6: PRIV6
0x50033268 C   FIELD 07w01 PRIV7: PRIV7
0x50033268 C   FIELD 08w01 PRIV8: PRIV8
0x50033268 C   FIELD 09w01 PRIV9: PRIV9
0x50033268 C   FIELD 10w01 PRIV10: PRIV10
0x50033268 C   FIELD 11w01 PRIV11: PRIV11
0x50033268 C   FIELD 12w01 PRIV12: PRIV12
0x50033268 C   FIELD 13w01 PRIV13: PRIV13
0x50033268 C   FIELD 14w01 PRIV14: PRIV14
0x50033268 C   FIELD 15w01 PRIV15: PRIV15
0x50033268 C   FIELD 16w01 PRIV16: PRIV16
0x50033268 C   FIELD 17w01 PRIV17: PRIV17
0x50033268 C   FIELD 18w01 PRIV18: PRIV18
0x50033268 C   FIELD 19w01 PRIV19: PRIV19
0x50033268 C   FIELD 20w01 PRIV20: PRIV20
0x50033268 C   FIELD 21w01 PRIV21: PRIV21
0x50033268 C   FIELD 22w01 PRIV22: PRIV22
0x50033268 C   FIELD 23w01 PRIV23: PRIV23
0x50033268 C   FIELD 24w01 PRIV24: PRIV24
0x50033268 C   FIELD 25w01 PRIV25: PRIV25
0x50033268 C   FIELD 26w01 PRIV26: PRIV26
0x50033268 C   FIELD 27w01 PRIV27: PRIV27
0x50033268 C   FIELD 28w01 PRIV28: PRIV28
0x50033268 C   FIELD 29w01 PRIV29: PRIV29
0x50033268 C   FIELD 30w01 PRIV30: PRIV30
0x50033268 C   FIELD 31w01 PRIV31: PRIV31
0x5003326C B  REGISTER MPCBB2_PRIVCFGR27 (rw): MPCBB privileged configuration for super-block x register
0x5003326C C   FIELD 00w01 PRIV0: PRIV0
0x5003326C C   FIELD 01w01 PRIV1: PRIV1
0x5003326C C   FIELD 02w01 PRIV2: PRIV2
0x5003326C C   FIELD 03w01 PRIV3: PRIV3
0x5003326C C   FIELD 04w01 PRIV4: PRIV4
0x5003326C C   FIELD 05w01 PRIV5: PRIV5
0x5003326C C   FIELD 06w01 PRIV6: PRIV6
0x5003326C C   FIELD 07w01 PRIV7: PRIV7
0x5003326C C   FIELD 08w01 PRIV8: PRIV8
0x5003326C C   FIELD 09w01 PRIV9: PRIV9
0x5003326C C   FIELD 10w01 PRIV10: PRIV10
0x5003326C C   FIELD 11w01 PRIV11: PRIV11
0x5003326C C   FIELD 12w01 PRIV12: PRIV12
0x5003326C C   FIELD 13w01 PRIV13: PRIV13
0x5003326C C   FIELD 14w01 PRIV14: PRIV14
0x5003326C C   FIELD 15w01 PRIV15: PRIV15
0x5003326C C   FIELD 16w01 PRIV16: PRIV16
0x5003326C C   FIELD 17w01 PRIV17: PRIV17
0x5003326C C   FIELD 18w01 PRIV18: PRIV18
0x5003326C C   FIELD 19w01 PRIV19: PRIV19
0x5003326C C   FIELD 20w01 PRIV20: PRIV20
0x5003326C C   FIELD 21w01 PRIV21: PRIV21
0x5003326C C   FIELD 22w01 PRIV22: PRIV22
0x5003326C C   FIELD 23w01 PRIV23: PRIV23
0x5003326C C   FIELD 24w01 PRIV24: PRIV24
0x5003326C C   FIELD 25w01 PRIV25: PRIV25
0x5003326C C   FIELD 26w01 PRIV26: PRIV26
0x5003326C C   FIELD 27w01 PRIV27: PRIV27
0x5003326C C   FIELD 28w01 PRIV28: PRIV28
0x5003326C C   FIELD 29w01 PRIV29: PRIV29
0x5003326C C   FIELD 30w01 PRIV30: PRIV30
0x5003326C C   FIELD 31w01 PRIV31: PRIV31
0x50033270 B  REGISTER MPCBB2_PRIVCFGR28 (rw): MPCBB privileged configuration for super-block x register
0x50033270 C   FIELD 00w01 PRIV0: PRIV0
0x50033270 C   FIELD 01w01 PRIV1: PRIV1
0x50033270 C   FIELD 02w01 PRIV2: PRIV2
0x50033270 C   FIELD 03w01 PRIV3: PRIV3
0x50033270 C   FIELD 04w01 PRIV4: PRIV4
0x50033270 C   FIELD 05w01 PRIV5: PRIV5
0x50033270 C   FIELD 06w01 PRIV6: PRIV6
0x50033270 C   FIELD 07w01 PRIV7: PRIV7
0x50033270 C   FIELD 08w01 PRIV8: PRIV8
0x50033270 C   FIELD 09w01 PRIV9: PRIV9
0x50033270 C   FIELD 10w01 PRIV10: PRIV10
0x50033270 C   FIELD 11w01 PRIV11: PRIV11
0x50033270 C   FIELD 12w01 PRIV12: PRIV12
0x50033270 C   FIELD 13w01 PRIV13: PRIV13
0x50033270 C   FIELD 14w01 PRIV14: PRIV14
0x50033270 C   FIELD 15w01 PRIV15: PRIV15
0x50033270 C   FIELD 16w01 PRIV16: PRIV16
0x50033270 C   FIELD 17w01 PRIV17: PRIV17
0x50033270 C   FIELD 18w01 PRIV18: PRIV18
0x50033270 C   FIELD 19w01 PRIV19: PRIV19
0x50033270 C   FIELD 20w01 PRIV20: PRIV20
0x50033270 C   FIELD 21w01 PRIV21: PRIV21
0x50033270 C   FIELD 22w01 PRIV22: PRIV22
0x50033270 C   FIELD 23w01 PRIV23: PRIV23
0x50033270 C   FIELD 24w01 PRIV24: PRIV24
0x50033270 C   FIELD 25w01 PRIV25: PRIV25
0x50033270 C   FIELD 26w01 PRIV26: PRIV26
0x50033270 C   FIELD 27w01 PRIV27: PRIV27
0x50033270 C   FIELD 28w01 PRIV28: PRIV28
0x50033270 C   FIELD 29w01 PRIV29: PRIV29
0x50033270 C   FIELD 30w01 PRIV30: PRIV30
0x50033270 C   FIELD 31w01 PRIV31: PRIV31
0x50033274 B  REGISTER MPCBB2_PRIVCFGR29 (rw): MPCBB privileged configuration for super-block x register
0x50033274 C   FIELD 00w01 PRIV0: PRIV0
0x50033274 C   FIELD 01w01 PRIV1: PRIV1
0x50033274 C   FIELD 02w01 PRIV2: PRIV2
0x50033274 C   FIELD 03w01 PRIV3: PRIV3
0x50033274 C   FIELD 04w01 PRIV4: PRIV4
0x50033274 C   FIELD 05w01 PRIV5: PRIV5
0x50033274 C   FIELD 06w01 PRIV6: PRIV6
0x50033274 C   FIELD 07w01 PRIV7: PRIV7
0x50033274 C   FIELD 08w01 PRIV8: PRIV8
0x50033274 C   FIELD 09w01 PRIV9: PRIV9
0x50033274 C   FIELD 10w01 PRIV10: PRIV10
0x50033274 C   FIELD 11w01 PRIV11: PRIV11
0x50033274 C   FIELD 12w01 PRIV12: PRIV12
0x50033274 C   FIELD 13w01 PRIV13: PRIV13
0x50033274 C   FIELD 14w01 PRIV14: PRIV14
0x50033274 C   FIELD 15w01 PRIV15: PRIV15
0x50033274 C   FIELD 16w01 PRIV16: PRIV16
0x50033274 C   FIELD 17w01 PRIV17: PRIV17
0x50033274 C   FIELD 18w01 PRIV18: PRIV18
0x50033274 C   FIELD 19w01 PRIV19: PRIV19
0x50033274 C   FIELD 20w01 PRIV20: PRIV20
0x50033274 C   FIELD 21w01 PRIV21: PRIV21
0x50033274 C   FIELD 22w01 PRIV22: PRIV22
0x50033274 C   FIELD 23w01 PRIV23: PRIV23
0x50033274 C   FIELD 24w01 PRIV24: PRIV24
0x50033274 C   FIELD 25w01 PRIV25: PRIV25
0x50033274 C   FIELD 26w01 PRIV26: PRIV26
0x50033274 C   FIELD 27w01 PRIV27: PRIV27
0x50033274 C   FIELD 28w01 PRIV28: PRIV28
0x50033274 C   FIELD 29w01 PRIV29: PRIV29
0x50033274 C   FIELD 30w01 PRIV30: PRIV30
0x50033274 C   FIELD 31w01 PRIV31: PRIV31
0x50033278 B  REGISTER MPCBB2_PRIVCFGR30 (rw): MPCBB privileged configuration for super-block x register
0x50033278 C   FIELD 00w01 PRIV0: PRIV0
0x50033278 C   FIELD 01w01 PRIV1: PRIV1
0x50033278 C   FIELD 02w01 PRIV2: PRIV2
0x50033278 C   FIELD 03w01 PRIV3: PRIV3
0x50033278 C   FIELD 04w01 PRIV4: PRIV4
0x50033278 C   FIELD 05w01 PRIV5: PRIV5
0x50033278 C   FIELD 06w01 PRIV6: PRIV6
0x50033278 C   FIELD 07w01 PRIV7: PRIV7
0x50033278 C   FIELD 08w01 PRIV8: PRIV8
0x50033278 C   FIELD 09w01 PRIV9: PRIV9
0x50033278 C   FIELD 10w01 PRIV10: PRIV10
0x50033278 C   FIELD 11w01 PRIV11: PRIV11
0x50033278 C   FIELD 12w01 PRIV12: PRIV12
0x50033278 C   FIELD 13w01 PRIV13: PRIV13
0x50033278 C   FIELD 14w01 PRIV14: PRIV14
0x50033278 C   FIELD 15w01 PRIV15: PRIV15
0x50033278 C   FIELD 16w01 PRIV16: PRIV16
0x50033278 C   FIELD 17w01 PRIV17: PRIV17
0x50033278 C   FIELD 18w01 PRIV18: PRIV18
0x50033278 C   FIELD 19w01 PRIV19: PRIV19
0x50033278 C   FIELD 20w01 PRIV20: PRIV20
0x50033278 C   FIELD 21w01 PRIV21: PRIV21
0x50033278 C   FIELD 22w01 PRIV22: PRIV22
0x50033278 C   FIELD 23w01 PRIV23: PRIV23
0x50033278 C   FIELD 24w01 PRIV24: PRIV24
0x50033278 C   FIELD 25w01 PRIV25: PRIV25
0x50033278 C   FIELD 26w01 PRIV26: PRIV26
0x50033278 C   FIELD 27w01 PRIV27: PRIV27
0x50033278 C   FIELD 28w01 PRIV28: PRIV28
0x50033278 C   FIELD 29w01 PRIV29: PRIV29
0x50033278 C   FIELD 30w01 PRIV30: PRIV30
0x50033278 C   FIELD 31w01 PRIV31: PRIV31
0x5003327C B  REGISTER MPCBB2_PRIVCFGR31 (rw): MPCBB privileged configuration for super-block x register
0x5003327C C   FIELD 00w01 PRIV0: PRIV0
0x5003327C C   FIELD 01w01 PRIV1: PRIV1
0x5003327C C   FIELD 02w01 PRIV2: PRIV2
0x5003327C C   FIELD 03w01 PRIV3: PRIV3
0x5003327C C   FIELD 04w01 PRIV4: PRIV4
0x5003327C C   FIELD 05w01 PRIV5: PRIV5
0x5003327C C   FIELD 06w01 PRIV6: PRIV6
0x5003327C C   FIELD 07w01 PRIV7: PRIV7
0x5003327C C   FIELD 08w01 PRIV8: PRIV8
0x5003327C C   FIELD 09w01 PRIV9: PRIV9
0x5003327C C   FIELD 10w01 PRIV10: PRIV10
0x5003327C C   FIELD 11w01 PRIV11: PRIV11
0x5003327C C   FIELD 12w01 PRIV12: PRIV12
0x5003327C C   FIELD 13w01 PRIV13: PRIV13
0x5003327C C   FIELD 14w01 PRIV14: PRIV14
0x5003327C C   FIELD 15w01 PRIV15: PRIV15
0x5003327C C   FIELD 16w01 PRIV16: PRIV16
0x5003327C C   FIELD 17w01 PRIV17: PRIV17
0x5003327C C   FIELD 18w01 PRIV18: PRIV18
0x5003327C C   FIELD 19w01 PRIV19: PRIV19
0x5003327C C   FIELD 20w01 PRIV20: PRIV20
0x5003327C C   FIELD 21w01 PRIV21: PRIV21
0x5003327C C   FIELD 22w01 PRIV22: PRIV22
0x5003327C C   FIELD 23w01 PRIV23: PRIV23
0x5003327C C   FIELD 24w01 PRIV24: PRIV24
0x5003327C C   FIELD 25w01 PRIV25: PRIV25
0x5003327C C   FIELD 26w01 PRIV26: PRIV26
0x5003327C C   FIELD 27w01 PRIV27: PRIV27
0x5003327C C   FIELD 28w01 PRIV28: PRIV28
0x5003327C C   FIELD 29w01 PRIV29: PRIV29
0x5003327C C   FIELD 30w01 PRIV30: PRIV30
0x5003327C C   FIELD 31w01 PRIV31: PRIV31
0x50033400 A PERIPHERAL SEC_GTZC1_MPCBB3
0x50033400 B  REGISTER MPCBB3_CR (rw): MPCBB control register
0x50033400 C   FIELD 00w01 GLOCK: lock the control register of the MPCBB until next reset
0x50033400 C   FIELD 30w01 INVSECSTATE: SRAMx clocks security state
0x50033400 C   FIELD 31w01 SRWILADIS: secure read/write illegal access disable
0x50033410 B  REGISTER MPCBB3_CFGLOCKR1 (rw): GTZC1 SRAMz MPCBB configuration lock register
0x50033410 C   FIELD 00w01 SPLCK0: SPLCK0
0x50033410 C   FIELD 01w01 SPLCK1: SPLCK1
0x50033410 C   FIELD 02w01 SPLCK2: SPLCK2
0x50033410 C   FIELD 03w01 SPLCK3: SPLCK3
0x50033410 C   FIELD 04w01 SPLCK4: SPLCK4
0x50033410 C   FIELD 05w01 SPLCK5: SPLCK5
0x50033410 C   FIELD 06w01 SPLCK6: SPLCK6
0x50033410 C   FIELD 07w01 SPLCK7: SPLCK7
0x50033410 C   FIELD 08w01 SPLCK8: SPLCK8
0x50033410 C   FIELD 09w01 SPLCK9: SPLCK9
0x50033410 C   FIELD 10w01 SPLCK10: SPLCK10
0x50033410 C   FIELD 11w01 SPLCK11: SPLCK11
0x50033410 C   FIELD 12w01 SPLCK12: SPLCK12
0x50033410 C   FIELD 13w01 SPLCK13: SPLCK13
0x50033410 C   FIELD 14w01 SPLCK14: SPLCK14
0x50033410 C   FIELD 15w01 SPLCK15: SPLCK15
0x50033410 C   FIELD 16w01 SPLCK16: SPLCK16
0x50033410 C   FIELD 17w01 SPLCK17: SPLCK17
0x50033410 C   FIELD 18w01 SPLCK18: SPLCK18
0x50033410 C   FIELD 19w01 SPLCK19: SPLCK19
0x50033410 C   FIELD 20w01 SPLCK20: SPLCK20
0x50033410 C   FIELD 21w01 SPLCK21: SPLCK21
0x50033410 C   FIELD 22w01 SPLCK22: SPLCK22
0x50033410 C   FIELD 23w01 SPLCK23: SPLCK23
0x50033410 C   FIELD 24w01 SPLCK24: SPLCK24
0x50033410 C   FIELD 25w01 SPLCK25: SPLCK25
0x50033410 C   FIELD 26w01 SPLCK26: SPLCK26
0x50033410 C   FIELD 27w01 SPLCK27: SPLCK27
0x50033410 C   FIELD 28w01 SPLCK28: SPLCK28
0x50033410 C   FIELD 29w01 SPLCK29: SPLCK29
0x50033410 C   FIELD 30w01 SPLCK30: SPLCK30
0x50033410 C   FIELD 31w01 SPLCK31: SPLCK31
0x50033500 B  REGISTER MPCBB3_SECCFGR0 (rw): MPCBBx security configuration for super-block x register
0x50033500 C   FIELD 00w01 SEC0: SEC0
0x50033500 C   FIELD 01w01 SEC1: SEC1
0x50033500 C   FIELD 02w01 SEC2: SEC2
0x50033500 C   FIELD 03w01 SEC3: SEC3
0x50033500 C   FIELD 04w01 SEC4: SEC4
0x50033500 C   FIELD 05w01 SEC5: SEC5
0x50033500 C   FIELD 06w01 SEC6: SEC6
0x50033500 C   FIELD 07w01 SEC7: SEC7
0x50033500 C   FIELD 08w01 SEC8: SEC8
0x50033500 C   FIELD 09w01 SEC9: SEC9
0x50033500 C   FIELD 10w01 SEC10: SEC10
0x50033500 C   FIELD 11w01 SEC11: SEC11
0x50033500 C   FIELD 12w01 SEC12: SEC12
0x50033500 C   FIELD 13w01 SEC13: SEC13
0x50033500 C   FIELD 14w01 SEC14: SEC14
0x50033500 C   FIELD 15w01 SEC15: SEC15
0x50033500 C   FIELD 16w01 SEC16: SEC16
0x50033500 C   FIELD 17w01 SEC17: SEC17
0x50033500 C   FIELD 18w01 SEC18: SEC18
0x50033500 C   FIELD 19w01 SEC19: SEC19
0x50033500 C   FIELD 20w01 SEC20: SEC20
0x50033500 C   FIELD 21w01 SEC21: SEC21
0x50033500 C   FIELD 22w01 SEC22: SEC22
0x50033500 C   FIELD 23w01 SEC23: SEC23
0x50033500 C   FIELD 24w01 SEC24: SEC24
0x50033500 C   FIELD 25w01 SEC25: SEC25
0x50033500 C   FIELD 26w01 SEC26: SEC26
0x50033500 C   FIELD 27w01 SEC27: SEC27
0x50033500 C   FIELD 28w01 SEC28: SEC28
0x50033500 C   FIELD 29w01 SEC29: SEC29
0x50033500 C   FIELD 30w01 SEC30: SEC30
0x50033500 C   FIELD 31w01 SEC31: SEC31
0x50033504 B  REGISTER MPCBB3_SECCFGR1 (rw): MPCBBx security configuration for super-block x register
0x50033504 C   FIELD 00w01 SEC0: SEC0
0x50033504 C   FIELD 01w01 SEC1: SEC1
0x50033504 C   FIELD 02w01 SEC2: SEC2
0x50033504 C   FIELD 03w01 SEC3: SEC3
0x50033504 C   FIELD 04w01 SEC4: SEC4
0x50033504 C   FIELD 05w01 SEC5: SEC5
0x50033504 C   FIELD 06w01 SEC6: SEC6
0x50033504 C   FIELD 07w01 SEC7: SEC7
0x50033504 C   FIELD 08w01 SEC8: SEC8
0x50033504 C   FIELD 09w01 SEC9: SEC9
0x50033504 C   FIELD 10w01 SEC10: SEC10
0x50033504 C   FIELD 11w01 SEC11: SEC11
0x50033504 C   FIELD 12w01 SEC12: SEC12
0x50033504 C   FIELD 13w01 SEC13: SEC13
0x50033504 C   FIELD 14w01 SEC14: SEC14
0x50033504 C   FIELD 15w01 SEC15: SEC15
0x50033504 C   FIELD 16w01 SEC16: SEC16
0x50033504 C   FIELD 17w01 SEC17: SEC17
0x50033504 C   FIELD 18w01 SEC18: SEC18
0x50033504 C   FIELD 19w01 SEC19: SEC19
0x50033504 C   FIELD 20w01 SEC20: SEC20
0x50033504 C   FIELD 21w01 SEC21: SEC21
0x50033504 C   FIELD 22w01 SEC22: SEC22
0x50033504 C   FIELD 23w01 SEC23: SEC23
0x50033504 C   FIELD 24w01 SEC24: SEC24
0x50033504 C   FIELD 25w01 SEC25: SEC25
0x50033504 C   FIELD 26w01 SEC26: SEC26
0x50033504 C   FIELD 27w01 SEC27: SEC27
0x50033504 C   FIELD 28w01 SEC28: SEC28
0x50033504 C   FIELD 29w01 SEC29: SEC29
0x50033504 C   FIELD 30w01 SEC30: SEC30
0x50033504 C   FIELD 31w01 SEC31: SEC31
0x50033508 B  REGISTER MPCBB3_SECCFGR2 (rw): MPCBBx security configuration for super-block x register
0x50033508 C   FIELD 00w01 SEC0: SEC0
0x50033508 C   FIELD 01w01 SEC1: SEC1
0x50033508 C   FIELD 02w01 SEC2: SEC2
0x50033508 C   FIELD 03w01 SEC3: SEC3
0x50033508 C   FIELD 04w01 SEC4: SEC4
0x50033508 C   FIELD 05w01 SEC5: SEC5
0x50033508 C   FIELD 06w01 SEC6: SEC6
0x50033508 C   FIELD 07w01 SEC7: SEC7
0x50033508 C   FIELD 08w01 SEC8: SEC8
0x50033508 C   FIELD 09w01 SEC9: SEC9
0x50033508 C   FIELD 10w01 SEC10: SEC10
0x50033508 C   FIELD 11w01 SEC11: SEC11
0x50033508 C   FIELD 12w01 SEC12: SEC12
0x50033508 C   FIELD 13w01 SEC13: SEC13
0x50033508 C   FIELD 14w01 SEC14: SEC14
0x50033508 C   FIELD 15w01 SEC15: SEC15
0x50033508 C   FIELD 16w01 SEC16: SEC16
0x50033508 C   FIELD 17w01 SEC17: SEC17
0x50033508 C   FIELD 18w01 SEC18: SEC18
0x50033508 C   FIELD 19w01 SEC19: SEC19
0x50033508 C   FIELD 20w01 SEC20: SEC20
0x50033508 C   FIELD 21w01 SEC21: SEC21
0x50033508 C   FIELD 22w01 SEC22: SEC22
0x50033508 C   FIELD 23w01 SEC23: SEC23
0x50033508 C   FIELD 24w01 SEC24: SEC24
0x50033508 C   FIELD 25w01 SEC25: SEC25
0x50033508 C   FIELD 26w01 SEC26: SEC26
0x50033508 C   FIELD 27w01 SEC27: SEC27
0x50033508 C   FIELD 28w01 SEC28: SEC28
0x50033508 C   FIELD 29w01 SEC29: SEC29
0x50033508 C   FIELD 30w01 SEC30: SEC30
0x50033508 C   FIELD 31w01 SEC31: SEC31
0x5003350C B  REGISTER MPCBB3_SECCFGR3 (rw): MPCBBx security configuration for super-block x register
0x5003350C C   FIELD 00w01 SEC0: SEC0
0x5003350C C   FIELD 01w01 SEC1: SEC1
0x5003350C C   FIELD 02w01 SEC2: SEC2
0x5003350C C   FIELD 03w01 SEC3: SEC3
0x5003350C C   FIELD 04w01 SEC4: SEC4
0x5003350C C   FIELD 05w01 SEC5: SEC5
0x5003350C C   FIELD 06w01 SEC6: SEC6
0x5003350C C   FIELD 07w01 SEC7: SEC7
0x5003350C C   FIELD 08w01 SEC8: SEC8
0x5003350C C   FIELD 09w01 SEC9: SEC9
0x5003350C C   FIELD 10w01 SEC10: SEC10
0x5003350C C   FIELD 11w01 SEC11: SEC11
0x5003350C C   FIELD 12w01 SEC12: SEC12
0x5003350C C   FIELD 13w01 SEC13: SEC13
0x5003350C C   FIELD 14w01 SEC14: SEC14
0x5003350C C   FIELD 15w01 SEC15: SEC15
0x5003350C C   FIELD 16w01 SEC16: SEC16
0x5003350C C   FIELD 17w01 SEC17: SEC17
0x5003350C C   FIELD 18w01 SEC18: SEC18
0x5003350C C   FIELD 19w01 SEC19: SEC19
0x5003350C C   FIELD 20w01 SEC20: SEC20
0x5003350C C   FIELD 21w01 SEC21: SEC21
0x5003350C C   FIELD 22w01 SEC22: SEC22
0x5003350C C   FIELD 23w01 SEC23: SEC23
0x5003350C C   FIELD 24w01 SEC24: SEC24
0x5003350C C   FIELD 25w01 SEC25: SEC25
0x5003350C C   FIELD 26w01 SEC26: SEC26
0x5003350C C   FIELD 27w01 SEC27: SEC27
0x5003350C C   FIELD 28w01 SEC28: SEC28
0x5003350C C   FIELD 29w01 SEC29: SEC29
0x5003350C C   FIELD 30w01 SEC30: SEC30
0x5003350C C   FIELD 31w01 SEC31: SEC31
0x50033510 B  REGISTER MPCBB3_SECCFGR4 (rw): MPCBBx security configuration for super-block x register
0x50033510 C   FIELD 00w01 SEC0: SEC0
0x50033510 C   FIELD 01w01 SEC1: SEC1
0x50033510 C   FIELD 02w01 SEC2: SEC2
0x50033510 C   FIELD 03w01 SEC3: SEC3
0x50033510 C   FIELD 04w01 SEC4: SEC4
0x50033510 C   FIELD 05w01 SEC5: SEC5
0x50033510 C   FIELD 06w01 SEC6: SEC6
0x50033510 C   FIELD 07w01 SEC7: SEC7
0x50033510 C   FIELD 08w01 SEC8: SEC8
0x50033510 C   FIELD 09w01 SEC9: SEC9
0x50033510 C   FIELD 10w01 SEC10: SEC10
0x50033510 C   FIELD 11w01 SEC11: SEC11
0x50033510 C   FIELD 12w01 SEC12: SEC12
0x50033510 C   FIELD 13w01 SEC13: SEC13
0x50033510 C   FIELD 14w01 SEC14: SEC14
0x50033510 C   FIELD 15w01 SEC15: SEC15
0x50033510 C   FIELD 16w01 SEC16: SEC16
0x50033510 C   FIELD 17w01 SEC17: SEC17
0x50033510 C   FIELD 18w01 SEC18: SEC18
0x50033510 C   FIELD 19w01 SEC19: SEC19
0x50033510 C   FIELD 20w01 SEC20: SEC20
0x50033510 C   FIELD 21w01 SEC21: SEC21
0x50033510 C   FIELD 22w01 SEC22: SEC22
0x50033510 C   FIELD 23w01 SEC23: SEC23
0x50033510 C   FIELD 24w01 SEC24: SEC24
0x50033510 C   FIELD 25w01 SEC25: SEC25
0x50033510 C   FIELD 26w01 SEC26: SEC26
0x50033510 C   FIELD 27w01 SEC27: SEC27
0x50033510 C   FIELD 28w01 SEC28: SEC28
0x50033510 C   FIELD 29w01 SEC29: SEC29
0x50033510 C   FIELD 30w01 SEC30: SEC30
0x50033510 C   FIELD 31w01 SEC31: SEC31
0x50033514 B  REGISTER MPCBB3_SECCFGR5 (rw): MPCBBx security configuration for super-block x register
0x50033514 C   FIELD 00w01 SEC0: SEC0
0x50033514 C   FIELD 01w01 SEC1: SEC1
0x50033514 C   FIELD 02w01 SEC2: SEC2
0x50033514 C   FIELD 03w01 SEC3: SEC3
0x50033514 C   FIELD 04w01 SEC4: SEC4
0x50033514 C   FIELD 05w01 SEC5: SEC5
0x50033514 C   FIELD 06w01 SEC6: SEC6
0x50033514 C   FIELD 07w01 SEC7: SEC7
0x50033514 C   FIELD 08w01 SEC8: SEC8
0x50033514 C   FIELD 09w01 SEC9: SEC9
0x50033514 C   FIELD 10w01 SEC10: SEC10
0x50033514 C   FIELD 11w01 SEC11: SEC11
0x50033514 C   FIELD 12w01 SEC12: SEC12
0x50033514 C   FIELD 13w01 SEC13: SEC13
0x50033514 C   FIELD 14w01 SEC14: SEC14
0x50033514 C   FIELD 15w01 SEC15: SEC15
0x50033514 C   FIELD 16w01 SEC16: SEC16
0x50033514 C   FIELD 17w01 SEC17: SEC17
0x50033514 C   FIELD 18w01 SEC18: SEC18
0x50033514 C   FIELD 19w01 SEC19: SEC19
0x50033514 C   FIELD 20w01 SEC20: SEC20
0x50033514 C   FIELD 21w01 SEC21: SEC21
0x50033514 C   FIELD 22w01 SEC22: SEC22
0x50033514 C   FIELD 23w01 SEC23: SEC23
0x50033514 C   FIELD 24w01 SEC24: SEC24
0x50033514 C   FIELD 25w01 SEC25: SEC25
0x50033514 C   FIELD 26w01 SEC26: SEC26
0x50033514 C   FIELD 27w01 SEC27: SEC27
0x50033514 C   FIELD 28w01 SEC28: SEC28
0x50033514 C   FIELD 29w01 SEC29: SEC29
0x50033514 C   FIELD 30w01 SEC30: SEC30
0x50033514 C   FIELD 31w01 SEC31: SEC31
0x50033518 B  REGISTER MPCBB3_SECCFGR6 (rw): MPCBBx security configuration for super-block x register
0x50033518 C   FIELD 00w01 SEC0: SEC0
0x50033518 C   FIELD 01w01 SEC1: SEC1
0x50033518 C   FIELD 02w01 SEC2: SEC2
0x50033518 C   FIELD 03w01 SEC3: SEC3
0x50033518 C   FIELD 04w01 SEC4: SEC4
0x50033518 C   FIELD 05w01 SEC5: SEC5
0x50033518 C   FIELD 06w01 SEC6: SEC6
0x50033518 C   FIELD 07w01 SEC7: SEC7
0x50033518 C   FIELD 08w01 SEC8: SEC8
0x50033518 C   FIELD 09w01 SEC9: SEC9
0x50033518 C   FIELD 10w01 SEC10: SEC10
0x50033518 C   FIELD 11w01 SEC11: SEC11
0x50033518 C   FIELD 12w01 SEC12: SEC12
0x50033518 C   FIELD 13w01 SEC13: SEC13
0x50033518 C   FIELD 14w01 SEC14: SEC14
0x50033518 C   FIELD 15w01 SEC15: SEC15
0x50033518 C   FIELD 16w01 SEC16: SEC16
0x50033518 C   FIELD 17w01 SEC17: SEC17
0x50033518 C   FIELD 18w01 SEC18: SEC18
0x50033518 C   FIELD 19w01 SEC19: SEC19
0x50033518 C   FIELD 20w01 SEC20: SEC20
0x50033518 C   FIELD 21w01 SEC21: SEC21
0x50033518 C   FIELD 22w01 SEC22: SEC22
0x50033518 C   FIELD 23w01 SEC23: SEC23
0x50033518 C   FIELD 24w01 SEC24: SEC24
0x50033518 C   FIELD 25w01 SEC25: SEC25
0x50033518 C   FIELD 26w01 SEC26: SEC26
0x50033518 C   FIELD 27w01 SEC27: SEC27
0x50033518 C   FIELD 28w01 SEC28: SEC28
0x50033518 C   FIELD 29w01 SEC29: SEC29
0x50033518 C   FIELD 30w01 SEC30: SEC30
0x50033518 C   FIELD 31w01 SEC31: SEC31
0x5003351C B  REGISTER MPCBB3_SECCFGR7 (rw): MPCBBx security configuration for super-block x register
0x5003351C C   FIELD 00w01 SEC0: SEC0
0x5003351C C   FIELD 01w01 SEC1: SEC1
0x5003351C C   FIELD 02w01 SEC2: SEC2
0x5003351C C   FIELD 03w01 SEC3: SEC3
0x5003351C C   FIELD 04w01 SEC4: SEC4
0x5003351C C   FIELD 05w01 SEC5: SEC5
0x5003351C C   FIELD 06w01 SEC6: SEC6
0x5003351C C   FIELD 07w01 SEC7: SEC7
0x5003351C C   FIELD 08w01 SEC8: SEC8
0x5003351C C   FIELD 09w01 SEC9: SEC9
0x5003351C C   FIELD 10w01 SEC10: SEC10
0x5003351C C   FIELD 11w01 SEC11: SEC11
0x5003351C C   FIELD 12w01 SEC12: SEC12
0x5003351C C   FIELD 13w01 SEC13: SEC13
0x5003351C C   FIELD 14w01 SEC14: SEC14
0x5003351C C   FIELD 15w01 SEC15: SEC15
0x5003351C C   FIELD 16w01 SEC16: SEC16
0x5003351C C   FIELD 17w01 SEC17: SEC17
0x5003351C C   FIELD 18w01 SEC18: SEC18
0x5003351C C   FIELD 19w01 SEC19: SEC19
0x5003351C C   FIELD 20w01 SEC20: SEC20
0x5003351C C   FIELD 21w01 SEC21: SEC21
0x5003351C C   FIELD 22w01 SEC22: SEC22
0x5003351C C   FIELD 23w01 SEC23: SEC23
0x5003351C C   FIELD 24w01 SEC24: SEC24
0x5003351C C   FIELD 25w01 SEC25: SEC25
0x5003351C C   FIELD 26w01 SEC26: SEC26
0x5003351C C   FIELD 27w01 SEC27: SEC27
0x5003351C C   FIELD 28w01 SEC28: SEC28
0x5003351C C   FIELD 29w01 SEC29: SEC29
0x5003351C C   FIELD 30w01 SEC30: SEC30
0x5003351C C   FIELD 31w01 SEC31: SEC31
0x50033520 B  REGISTER MPCBB3_SECCFGR8 (rw): MPCBBx security configuration for super-block x register
0x50033520 C   FIELD 00w01 SEC0: SEC0
0x50033520 C   FIELD 01w01 SEC1: SEC1
0x50033520 C   FIELD 02w01 SEC2: SEC2
0x50033520 C   FIELD 03w01 SEC3: SEC3
0x50033520 C   FIELD 04w01 SEC4: SEC4
0x50033520 C   FIELD 05w01 SEC5: SEC5
0x50033520 C   FIELD 06w01 SEC6: SEC6
0x50033520 C   FIELD 07w01 SEC7: SEC7
0x50033520 C   FIELD 08w01 SEC8: SEC8
0x50033520 C   FIELD 09w01 SEC9: SEC9
0x50033520 C   FIELD 10w01 SEC10: SEC10
0x50033520 C   FIELD 11w01 SEC11: SEC11
0x50033520 C   FIELD 12w01 SEC12: SEC12
0x50033520 C   FIELD 13w01 SEC13: SEC13
0x50033520 C   FIELD 14w01 SEC14: SEC14
0x50033520 C   FIELD 15w01 SEC15: SEC15
0x50033520 C   FIELD 16w01 SEC16: SEC16
0x50033520 C   FIELD 17w01 SEC17: SEC17
0x50033520 C   FIELD 18w01 SEC18: SEC18
0x50033520 C   FIELD 19w01 SEC19: SEC19
0x50033520 C   FIELD 20w01 SEC20: SEC20
0x50033520 C   FIELD 21w01 SEC21: SEC21
0x50033520 C   FIELD 22w01 SEC22: SEC22
0x50033520 C   FIELD 23w01 SEC23: SEC23
0x50033520 C   FIELD 24w01 SEC24: SEC24
0x50033520 C   FIELD 25w01 SEC25: SEC25
0x50033520 C   FIELD 26w01 SEC26: SEC26
0x50033520 C   FIELD 27w01 SEC27: SEC27
0x50033520 C   FIELD 28w01 SEC28: SEC28
0x50033520 C   FIELD 29w01 SEC29: SEC29
0x50033520 C   FIELD 30w01 SEC30: SEC30
0x50033520 C   FIELD 31w01 SEC31: SEC31
0x50033524 B  REGISTER MPCBB3_SECCFGR9 (rw): MPCBBx security configuration for super-block x register
0x50033524 C   FIELD 00w01 SEC0: SEC0
0x50033524 C   FIELD 01w01 SEC1: SEC1
0x50033524 C   FIELD 02w01 SEC2: SEC2
0x50033524 C   FIELD 03w01 SEC3: SEC3
0x50033524 C   FIELD 04w01 SEC4: SEC4
0x50033524 C   FIELD 05w01 SEC5: SEC5
0x50033524 C   FIELD 06w01 SEC6: SEC6
0x50033524 C   FIELD 07w01 SEC7: SEC7
0x50033524 C   FIELD 08w01 SEC8: SEC8
0x50033524 C   FIELD 09w01 SEC9: SEC9
0x50033524 C   FIELD 10w01 SEC10: SEC10
0x50033524 C   FIELD 11w01 SEC11: SEC11
0x50033524 C   FIELD 12w01 SEC12: SEC12
0x50033524 C   FIELD 13w01 SEC13: SEC13
0x50033524 C   FIELD 14w01 SEC14: SEC14
0x50033524 C   FIELD 15w01 SEC15: SEC15
0x50033524 C   FIELD 16w01 SEC16: SEC16
0x50033524 C   FIELD 17w01 SEC17: SEC17
0x50033524 C   FIELD 18w01 SEC18: SEC18
0x50033524 C   FIELD 19w01 SEC19: SEC19
0x50033524 C   FIELD 20w01 SEC20: SEC20
0x50033524 C   FIELD 21w01 SEC21: SEC21
0x50033524 C   FIELD 22w01 SEC22: SEC22
0x50033524 C   FIELD 23w01 SEC23: SEC23
0x50033524 C   FIELD 24w01 SEC24: SEC24
0x50033524 C   FIELD 25w01 SEC25: SEC25
0x50033524 C   FIELD 26w01 SEC26: SEC26
0x50033524 C   FIELD 27w01 SEC27: SEC27
0x50033524 C   FIELD 28w01 SEC28: SEC28
0x50033524 C   FIELD 29w01 SEC29: SEC29
0x50033524 C   FIELD 30w01 SEC30: SEC30
0x50033524 C   FIELD 31w01 SEC31: SEC31
0x50033528 B  REGISTER MPCBB3_SECCFGR10 (rw): MPCBBx security configuration for super-block x register
0x50033528 C   FIELD 00w01 SEC0: SEC0
0x50033528 C   FIELD 01w01 SEC1: SEC1
0x50033528 C   FIELD 02w01 SEC2: SEC2
0x50033528 C   FIELD 03w01 SEC3: SEC3
0x50033528 C   FIELD 04w01 SEC4: SEC4
0x50033528 C   FIELD 05w01 SEC5: SEC5
0x50033528 C   FIELD 06w01 SEC6: SEC6
0x50033528 C   FIELD 07w01 SEC7: SEC7
0x50033528 C   FIELD 08w01 SEC8: SEC8
0x50033528 C   FIELD 09w01 SEC9: SEC9
0x50033528 C   FIELD 10w01 SEC10: SEC10
0x50033528 C   FIELD 11w01 SEC11: SEC11
0x50033528 C   FIELD 12w01 SEC12: SEC12
0x50033528 C   FIELD 13w01 SEC13: SEC13
0x50033528 C   FIELD 14w01 SEC14: SEC14
0x50033528 C   FIELD 15w01 SEC15: SEC15
0x50033528 C   FIELD 16w01 SEC16: SEC16
0x50033528 C   FIELD 17w01 SEC17: SEC17
0x50033528 C   FIELD 18w01 SEC18: SEC18
0x50033528 C   FIELD 19w01 SEC19: SEC19
0x50033528 C   FIELD 20w01 SEC20: SEC20
0x50033528 C   FIELD 21w01 SEC21: SEC21
0x50033528 C   FIELD 22w01 SEC22: SEC22
0x50033528 C   FIELD 23w01 SEC23: SEC23
0x50033528 C   FIELD 24w01 SEC24: SEC24
0x50033528 C   FIELD 25w01 SEC25: SEC25
0x50033528 C   FIELD 26w01 SEC26: SEC26
0x50033528 C   FIELD 27w01 SEC27: SEC27
0x50033528 C   FIELD 28w01 SEC28: SEC28
0x50033528 C   FIELD 29w01 SEC29: SEC29
0x50033528 C   FIELD 30w01 SEC30: SEC30
0x50033528 C   FIELD 31w01 SEC31: SEC31
0x5003352C B  REGISTER MPCBB3_SECCFGR11 (rw): MPCBBx security configuration for super-block x register
0x5003352C C   FIELD 00w01 SEC0: SEC0
0x5003352C C   FIELD 01w01 SEC1: SEC1
0x5003352C C   FIELD 02w01 SEC2: SEC2
0x5003352C C   FIELD 03w01 SEC3: SEC3
0x5003352C C   FIELD 04w01 SEC4: SEC4
0x5003352C C   FIELD 05w01 SEC5: SEC5
0x5003352C C   FIELD 06w01 SEC6: SEC6
0x5003352C C   FIELD 07w01 SEC7: SEC7
0x5003352C C   FIELD 08w01 SEC8: SEC8
0x5003352C C   FIELD 09w01 SEC9: SEC9
0x5003352C C   FIELD 10w01 SEC10: SEC10
0x5003352C C   FIELD 11w01 SEC11: SEC11
0x5003352C C   FIELD 12w01 SEC12: SEC12
0x5003352C C   FIELD 13w01 SEC13: SEC13
0x5003352C C   FIELD 14w01 SEC14: SEC14
0x5003352C C   FIELD 15w01 SEC15: SEC15
0x5003352C C   FIELD 16w01 SEC16: SEC16
0x5003352C C   FIELD 17w01 SEC17: SEC17
0x5003352C C   FIELD 18w01 SEC18: SEC18
0x5003352C C   FIELD 19w01 SEC19: SEC19
0x5003352C C   FIELD 20w01 SEC20: SEC20
0x5003352C C   FIELD 21w01 SEC21: SEC21
0x5003352C C   FIELD 22w01 SEC22: SEC22
0x5003352C C   FIELD 23w01 SEC23: SEC23
0x5003352C C   FIELD 24w01 SEC24: SEC24
0x5003352C C   FIELD 25w01 SEC25: SEC25
0x5003352C C   FIELD 26w01 SEC26: SEC26
0x5003352C C   FIELD 27w01 SEC27: SEC27
0x5003352C C   FIELD 28w01 SEC28: SEC28
0x5003352C C   FIELD 29w01 SEC29: SEC29
0x5003352C C   FIELD 30w01 SEC30: SEC30
0x5003352C C   FIELD 31w01 SEC31: SEC31
0x50033530 B  REGISTER MPCBB3_SECCFGR12 (rw): MPCBBx security configuration for super-block x register
0x50033530 C   FIELD 00w01 SEC0: SEC0
0x50033530 C   FIELD 01w01 SEC1: SEC1
0x50033530 C   FIELD 02w01 SEC2: SEC2
0x50033530 C   FIELD 03w01 SEC3: SEC3
0x50033530 C   FIELD 04w01 SEC4: SEC4
0x50033530 C   FIELD 05w01 SEC5: SEC5
0x50033530 C   FIELD 06w01 SEC6: SEC6
0x50033530 C   FIELD 07w01 SEC7: SEC7
0x50033530 C   FIELD 08w01 SEC8: SEC8
0x50033530 C   FIELD 09w01 SEC9: SEC9
0x50033530 C   FIELD 10w01 SEC10: SEC10
0x50033530 C   FIELD 11w01 SEC11: SEC11
0x50033530 C   FIELD 12w01 SEC12: SEC12
0x50033530 C   FIELD 13w01 SEC13: SEC13
0x50033530 C   FIELD 14w01 SEC14: SEC14
0x50033530 C   FIELD 15w01 SEC15: SEC15
0x50033530 C   FIELD 16w01 SEC16: SEC16
0x50033530 C   FIELD 17w01 SEC17: SEC17
0x50033530 C   FIELD 18w01 SEC18: SEC18
0x50033530 C   FIELD 19w01 SEC19: SEC19
0x50033530 C   FIELD 20w01 SEC20: SEC20
0x50033530 C   FIELD 21w01 SEC21: SEC21
0x50033530 C   FIELD 22w01 SEC22: SEC22
0x50033530 C   FIELD 23w01 SEC23: SEC23
0x50033530 C   FIELD 24w01 SEC24: SEC24
0x50033530 C   FIELD 25w01 SEC25: SEC25
0x50033530 C   FIELD 26w01 SEC26: SEC26
0x50033530 C   FIELD 27w01 SEC27: SEC27
0x50033530 C   FIELD 28w01 SEC28: SEC28
0x50033530 C   FIELD 29w01 SEC29: SEC29
0x50033530 C   FIELD 30w01 SEC30: SEC30
0x50033530 C   FIELD 31w01 SEC31: SEC31
0x50033534 B  REGISTER MPCBB3_SECCFGR13 (rw): MPCBBx security configuration for super-block x register
0x50033534 C   FIELD 00w01 SEC0: SEC0
0x50033534 C   FIELD 01w01 SEC1: SEC1
0x50033534 C   FIELD 02w01 SEC2: SEC2
0x50033534 C   FIELD 03w01 SEC3: SEC3
0x50033534 C   FIELD 04w01 SEC4: SEC4
0x50033534 C   FIELD 05w01 SEC5: SEC5
0x50033534 C   FIELD 06w01 SEC6: SEC6
0x50033534 C   FIELD 07w01 SEC7: SEC7
0x50033534 C   FIELD 08w01 SEC8: SEC8
0x50033534 C   FIELD 09w01 SEC9: SEC9
0x50033534 C   FIELD 10w01 SEC10: SEC10
0x50033534 C   FIELD 11w01 SEC11: SEC11
0x50033534 C   FIELD 12w01 SEC12: SEC12
0x50033534 C   FIELD 13w01 SEC13: SEC13
0x50033534 C   FIELD 14w01 SEC14: SEC14
0x50033534 C   FIELD 15w01 SEC15: SEC15
0x50033534 C   FIELD 16w01 SEC16: SEC16
0x50033534 C   FIELD 17w01 SEC17: SEC17
0x50033534 C   FIELD 18w01 SEC18: SEC18
0x50033534 C   FIELD 19w01 SEC19: SEC19
0x50033534 C   FIELD 20w01 SEC20: SEC20
0x50033534 C   FIELD 21w01 SEC21: SEC21
0x50033534 C   FIELD 22w01 SEC22: SEC22
0x50033534 C   FIELD 23w01 SEC23: SEC23
0x50033534 C   FIELD 24w01 SEC24: SEC24
0x50033534 C   FIELD 25w01 SEC25: SEC25
0x50033534 C   FIELD 26w01 SEC26: SEC26
0x50033534 C   FIELD 27w01 SEC27: SEC27
0x50033534 C   FIELD 28w01 SEC28: SEC28
0x50033534 C   FIELD 29w01 SEC29: SEC29
0x50033534 C   FIELD 30w01 SEC30: SEC30
0x50033534 C   FIELD 31w01 SEC31: SEC31
0x50033538 B  REGISTER MPCBB3_SECCFGR14 (rw): MPCBBx security configuration for super-block x register
0x50033538 C   FIELD 00w01 SEC0: SEC0
0x50033538 C   FIELD 01w01 SEC1: SEC1
0x50033538 C   FIELD 02w01 SEC2: SEC2
0x50033538 C   FIELD 03w01 SEC3: SEC3
0x50033538 C   FIELD 04w01 SEC4: SEC4
0x50033538 C   FIELD 05w01 SEC5: SEC5
0x50033538 C   FIELD 06w01 SEC6: SEC6
0x50033538 C   FIELD 07w01 SEC7: SEC7
0x50033538 C   FIELD 08w01 SEC8: SEC8
0x50033538 C   FIELD 09w01 SEC9: SEC9
0x50033538 C   FIELD 10w01 SEC10: SEC10
0x50033538 C   FIELD 11w01 SEC11: SEC11
0x50033538 C   FIELD 12w01 SEC12: SEC12
0x50033538 C   FIELD 13w01 SEC13: SEC13
0x50033538 C   FIELD 14w01 SEC14: SEC14
0x50033538 C   FIELD 15w01 SEC15: SEC15
0x50033538 C   FIELD 16w01 SEC16: SEC16
0x50033538 C   FIELD 17w01 SEC17: SEC17
0x50033538 C   FIELD 18w01 SEC18: SEC18
0x50033538 C   FIELD 19w01 SEC19: SEC19
0x50033538 C   FIELD 20w01 SEC20: SEC20
0x50033538 C   FIELD 21w01 SEC21: SEC21
0x50033538 C   FIELD 22w01 SEC22: SEC22
0x50033538 C   FIELD 23w01 SEC23: SEC23
0x50033538 C   FIELD 24w01 SEC24: SEC24
0x50033538 C   FIELD 25w01 SEC25: SEC25
0x50033538 C   FIELD 26w01 SEC26: SEC26
0x50033538 C   FIELD 27w01 SEC27: SEC27
0x50033538 C   FIELD 28w01 SEC28: SEC28
0x50033538 C   FIELD 29w01 SEC29: SEC29
0x50033538 C   FIELD 30w01 SEC30: SEC30
0x50033538 C   FIELD 31w01 SEC31: SEC31
0x5003353C B  REGISTER MPCBB3_SECCFGR15 (rw): MPCBBx security configuration for super-block x register
0x5003353C C   FIELD 00w01 SEC0: SEC0
0x5003353C C   FIELD 01w01 SEC1: SEC1
0x5003353C C   FIELD 02w01 SEC2: SEC2
0x5003353C C   FIELD 03w01 SEC3: SEC3
0x5003353C C   FIELD 04w01 SEC4: SEC4
0x5003353C C   FIELD 05w01 SEC5: SEC5
0x5003353C C   FIELD 06w01 SEC6: SEC6
0x5003353C C   FIELD 07w01 SEC7: SEC7
0x5003353C C   FIELD 08w01 SEC8: SEC8
0x5003353C C   FIELD 09w01 SEC9: SEC9
0x5003353C C   FIELD 10w01 SEC10: SEC10
0x5003353C C   FIELD 11w01 SEC11: SEC11
0x5003353C C   FIELD 12w01 SEC12: SEC12
0x5003353C C   FIELD 13w01 SEC13: SEC13
0x5003353C C   FIELD 14w01 SEC14: SEC14
0x5003353C C   FIELD 15w01 SEC15: SEC15
0x5003353C C   FIELD 16w01 SEC16: SEC16
0x5003353C C   FIELD 17w01 SEC17: SEC17
0x5003353C C   FIELD 18w01 SEC18: SEC18
0x5003353C C   FIELD 19w01 SEC19: SEC19
0x5003353C C   FIELD 20w01 SEC20: SEC20
0x5003353C C   FIELD 21w01 SEC21: SEC21
0x5003353C C   FIELD 22w01 SEC22: SEC22
0x5003353C C   FIELD 23w01 SEC23: SEC23
0x5003353C C   FIELD 24w01 SEC24: SEC24
0x5003353C C   FIELD 25w01 SEC25: SEC25
0x5003353C C   FIELD 26w01 SEC26: SEC26
0x5003353C C   FIELD 27w01 SEC27: SEC27
0x5003353C C   FIELD 28w01 SEC28: SEC28
0x5003353C C   FIELD 29w01 SEC29: SEC29
0x5003353C C   FIELD 30w01 SEC30: SEC30
0x5003353C C   FIELD 31w01 SEC31: SEC31
0x50033540 B  REGISTER MPCBB3_SECCFGR16 (rw): MPCBBx security configuration for super-block x register
0x50033540 C   FIELD 00w01 SEC0: SEC0
0x50033540 C   FIELD 01w01 SEC1: SEC1
0x50033540 C   FIELD 02w01 SEC2: SEC2
0x50033540 C   FIELD 03w01 SEC3: SEC3
0x50033540 C   FIELD 04w01 SEC4: SEC4
0x50033540 C   FIELD 05w01 SEC5: SEC5
0x50033540 C   FIELD 06w01 SEC6: SEC6
0x50033540 C   FIELD 07w01 SEC7: SEC7
0x50033540 C   FIELD 08w01 SEC8: SEC8
0x50033540 C   FIELD 09w01 SEC9: SEC9
0x50033540 C   FIELD 10w01 SEC10: SEC10
0x50033540 C   FIELD 11w01 SEC11: SEC11
0x50033540 C   FIELD 12w01 SEC12: SEC12
0x50033540 C   FIELD 13w01 SEC13: SEC13
0x50033540 C   FIELD 14w01 SEC14: SEC14
0x50033540 C   FIELD 15w01 SEC15: SEC15
0x50033540 C   FIELD 16w01 SEC16: SEC16
0x50033540 C   FIELD 17w01 SEC17: SEC17
0x50033540 C   FIELD 18w01 SEC18: SEC18
0x50033540 C   FIELD 19w01 SEC19: SEC19
0x50033540 C   FIELD 20w01 SEC20: SEC20
0x50033540 C   FIELD 21w01 SEC21: SEC21
0x50033540 C   FIELD 22w01 SEC22: SEC22
0x50033540 C   FIELD 23w01 SEC23: SEC23
0x50033540 C   FIELD 24w01 SEC24: SEC24
0x50033540 C   FIELD 25w01 SEC25: SEC25
0x50033540 C   FIELD 26w01 SEC26: SEC26
0x50033540 C   FIELD 27w01 SEC27: SEC27
0x50033540 C   FIELD 28w01 SEC28: SEC28
0x50033540 C   FIELD 29w01 SEC29: SEC29
0x50033540 C   FIELD 30w01 SEC30: SEC30
0x50033540 C   FIELD 31w01 SEC31: SEC31
0x50033544 B  REGISTER MPCBB3_SECCFGR17 (rw): MPCBBx security configuration for super-block x register
0x50033544 C   FIELD 00w01 SEC0: SEC0
0x50033544 C   FIELD 01w01 SEC1: SEC1
0x50033544 C   FIELD 02w01 SEC2: SEC2
0x50033544 C   FIELD 03w01 SEC3: SEC3
0x50033544 C   FIELD 04w01 SEC4: SEC4
0x50033544 C   FIELD 05w01 SEC5: SEC5
0x50033544 C   FIELD 06w01 SEC6: SEC6
0x50033544 C   FIELD 07w01 SEC7: SEC7
0x50033544 C   FIELD 08w01 SEC8: SEC8
0x50033544 C   FIELD 09w01 SEC9: SEC9
0x50033544 C   FIELD 10w01 SEC10: SEC10
0x50033544 C   FIELD 11w01 SEC11: SEC11
0x50033544 C   FIELD 12w01 SEC12: SEC12
0x50033544 C   FIELD 13w01 SEC13: SEC13
0x50033544 C   FIELD 14w01 SEC14: SEC14
0x50033544 C   FIELD 15w01 SEC15: SEC15
0x50033544 C   FIELD 16w01 SEC16: SEC16
0x50033544 C   FIELD 17w01 SEC17: SEC17
0x50033544 C   FIELD 18w01 SEC18: SEC18
0x50033544 C   FIELD 19w01 SEC19: SEC19
0x50033544 C   FIELD 20w01 SEC20: SEC20
0x50033544 C   FIELD 21w01 SEC21: SEC21
0x50033544 C   FIELD 22w01 SEC22: SEC22
0x50033544 C   FIELD 23w01 SEC23: SEC23
0x50033544 C   FIELD 24w01 SEC24: SEC24
0x50033544 C   FIELD 25w01 SEC25: SEC25
0x50033544 C   FIELD 26w01 SEC26: SEC26
0x50033544 C   FIELD 27w01 SEC27: SEC27
0x50033544 C   FIELD 28w01 SEC28: SEC28
0x50033544 C   FIELD 29w01 SEC29: SEC29
0x50033544 C   FIELD 30w01 SEC30: SEC30
0x50033544 C   FIELD 31w01 SEC31: SEC31
0x50033548 B  REGISTER MPCBB3_SECCFGR18 (rw): MPCBBx security configuration for super-block x register
0x50033548 C   FIELD 00w01 SEC0: SEC0
0x50033548 C   FIELD 01w01 SEC1: SEC1
0x50033548 C   FIELD 02w01 SEC2: SEC2
0x50033548 C   FIELD 03w01 SEC3: SEC3
0x50033548 C   FIELD 04w01 SEC4: SEC4
0x50033548 C   FIELD 05w01 SEC5: SEC5
0x50033548 C   FIELD 06w01 SEC6: SEC6
0x50033548 C   FIELD 07w01 SEC7: SEC7
0x50033548 C   FIELD 08w01 SEC8: SEC8
0x50033548 C   FIELD 09w01 SEC9: SEC9
0x50033548 C   FIELD 10w01 SEC10: SEC10
0x50033548 C   FIELD 11w01 SEC11: SEC11
0x50033548 C   FIELD 12w01 SEC12: SEC12
0x50033548 C   FIELD 13w01 SEC13: SEC13
0x50033548 C   FIELD 14w01 SEC14: SEC14
0x50033548 C   FIELD 15w01 SEC15: SEC15
0x50033548 C   FIELD 16w01 SEC16: SEC16
0x50033548 C   FIELD 17w01 SEC17: SEC17
0x50033548 C   FIELD 18w01 SEC18: SEC18
0x50033548 C   FIELD 19w01 SEC19: SEC19
0x50033548 C   FIELD 20w01 SEC20: SEC20
0x50033548 C   FIELD 21w01 SEC21: SEC21
0x50033548 C   FIELD 22w01 SEC22: SEC22
0x50033548 C   FIELD 23w01 SEC23: SEC23
0x50033548 C   FIELD 24w01 SEC24: SEC24
0x50033548 C   FIELD 25w01 SEC25: SEC25
0x50033548 C   FIELD 26w01 SEC26: SEC26
0x50033548 C   FIELD 27w01 SEC27: SEC27
0x50033548 C   FIELD 28w01 SEC28: SEC28
0x50033548 C   FIELD 29w01 SEC29: SEC29
0x50033548 C   FIELD 30w01 SEC30: SEC30
0x50033548 C   FIELD 31w01 SEC31: SEC31
0x5003354C B  REGISTER MPCBB3_SECCFGR19 (rw): MPCBBx security configuration for super-block x register
0x5003354C C   FIELD 00w01 SEC0: SEC0
0x5003354C C   FIELD 01w01 SEC1: SEC1
0x5003354C C   FIELD 02w01 SEC2: SEC2
0x5003354C C   FIELD 03w01 SEC3: SEC3
0x5003354C C   FIELD 04w01 SEC4: SEC4
0x5003354C C   FIELD 05w01 SEC5: SEC5
0x5003354C C   FIELD 06w01 SEC6: SEC6
0x5003354C C   FIELD 07w01 SEC7: SEC7
0x5003354C C   FIELD 08w01 SEC8: SEC8
0x5003354C C   FIELD 09w01 SEC9: SEC9
0x5003354C C   FIELD 10w01 SEC10: SEC10
0x5003354C C   FIELD 11w01 SEC11: SEC11
0x5003354C C   FIELD 12w01 SEC12: SEC12
0x5003354C C   FIELD 13w01 SEC13: SEC13
0x5003354C C   FIELD 14w01 SEC14: SEC14
0x5003354C C   FIELD 15w01 SEC15: SEC15
0x5003354C C   FIELD 16w01 SEC16: SEC16
0x5003354C C   FIELD 17w01 SEC17: SEC17
0x5003354C C   FIELD 18w01 SEC18: SEC18
0x5003354C C   FIELD 19w01 SEC19: SEC19
0x5003354C C   FIELD 20w01 SEC20: SEC20
0x5003354C C   FIELD 21w01 SEC21: SEC21
0x5003354C C   FIELD 22w01 SEC22: SEC22
0x5003354C C   FIELD 23w01 SEC23: SEC23
0x5003354C C   FIELD 24w01 SEC24: SEC24
0x5003354C C   FIELD 25w01 SEC25: SEC25
0x5003354C C   FIELD 26w01 SEC26: SEC26
0x5003354C C   FIELD 27w01 SEC27: SEC27
0x5003354C C   FIELD 28w01 SEC28: SEC28
0x5003354C C   FIELD 29w01 SEC29: SEC29
0x5003354C C   FIELD 30w01 SEC30: SEC30
0x5003354C C   FIELD 31w01 SEC31: SEC31
0x50033550 B  REGISTER MPCBB3_SECCFGR20 (rw): MPCBBx security configuration for super-block x register
0x50033550 C   FIELD 00w01 SEC0: SEC0
0x50033550 C   FIELD 01w01 SEC1: SEC1
0x50033550 C   FIELD 02w01 SEC2: SEC2
0x50033550 C   FIELD 03w01 SEC3: SEC3
0x50033550 C   FIELD 04w01 SEC4: SEC4
0x50033550 C   FIELD 05w01 SEC5: SEC5
0x50033550 C   FIELD 06w01 SEC6: SEC6
0x50033550 C   FIELD 07w01 SEC7: SEC7
0x50033550 C   FIELD 08w01 SEC8: SEC8
0x50033550 C   FIELD 09w01 SEC9: SEC9
0x50033550 C   FIELD 10w01 SEC10: SEC10
0x50033550 C   FIELD 11w01 SEC11: SEC11
0x50033550 C   FIELD 12w01 SEC12: SEC12
0x50033550 C   FIELD 13w01 SEC13: SEC13
0x50033550 C   FIELD 14w01 SEC14: SEC14
0x50033550 C   FIELD 15w01 SEC15: SEC15
0x50033550 C   FIELD 16w01 SEC16: SEC16
0x50033550 C   FIELD 17w01 SEC17: SEC17
0x50033550 C   FIELD 18w01 SEC18: SEC18
0x50033550 C   FIELD 19w01 SEC19: SEC19
0x50033550 C   FIELD 20w01 SEC20: SEC20
0x50033550 C   FIELD 21w01 SEC21: SEC21
0x50033550 C   FIELD 22w01 SEC22: SEC22
0x50033550 C   FIELD 23w01 SEC23: SEC23
0x50033550 C   FIELD 24w01 SEC24: SEC24
0x50033550 C   FIELD 25w01 SEC25: SEC25
0x50033550 C   FIELD 26w01 SEC26: SEC26
0x50033550 C   FIELD 27w01 SEC27: SEC27
0x50033550 C   FIELD 28w01 SEC28: SEC28
0x50033550 C   FIELD 29w01 SEC29: SEC29
0x50033550 C   FIELD 30w01 SEC30: SEC30
0x50033550 C   FIELD 31w01 SEC31: SEC31
0x50033554 B  REGISTER MPCBB3_SECCFGR21 (rw): MPCBBx security configuration for super-block x register
0x50033554 C   FIELD 00w01 SEC0: SEC0
0x50033554 C   FIELD 01w01 SEC1: SEC1
0x50033554 C   FIELD 02w01 SEC2: SEC2
0x50033554 C   FIELD 03w01 SEC3: SEC3
0x50033554 C   FIELD 04w01 SEC4: SEC4
0x50033554 C   FIELD 05w01 SEC5: SEC5
0x50033554 C   FIELD 06w01 SEC6: SEC6
0x50033554 C   FIELD 07w01 SEC7: SEC7
0x50033554 C   FIELD 08w01 SEC8: SEC8
0x50033554 C   FIELD 09w01 SEC9: SEC9
0x50033554 C   FIELD 10w01 SEC10: SEC10
0x50033554 C   FIELD 11w01 SEC11: SEC11
0x50033554 C   FIELD 12w01 SEC12: SEC12
0x50033554 C   FIELD 13w01 SEC13: SEC13
0x50033554 C   FIELD 14w01 SEC14: SEC14
0x50033554 C   FIELD 15w01 SEC15: SEC15
0x50033554 C   FIELD 16w01 SEC16: SEC16
0x50033554 C   FIELD 17w01 SEC17: SEC17
0x50033554 C   FIELD 18w01 SEC18: SEC18
0x50033554 C   FIELD 19w01 SEC19: SEC19
0x50033554 C   FIELD 20w01 SEC20: SEC20
0x50033554 C   FIELD 21w01 SEC21: SEC21
0x50033554 C   FIELD 22w01 SEC22: SEC22
0x50033554 C   FIELD 23w01 SEC23: SEC23
0x50033554 C   FIELD 24w01 SEC24: SEC24
0x50033554 C   FIELD 25w01 SEC25: SEC25
0x50033554 C   FIELD 26w01 SEC26: SEC26
0x50033554 C   FIELD 27w01 SEC27: SEC27
0x50033554 C   FIELD 28w01 SEC28: SEC28
0x50033554 C   FIELD 29w01 SEC29: SEC29
0x50033554 C   FIELD 30w01 SEC30: SEC30
0x50033554 C   FIELD 31w01 SEC31: SEC31
0x50033558 B  REGISTER MPCBB3_SECCFGR22 (rw): MPCBBx security configuration for super-block x register
0x50033558 C   FIELD 00w01 SEC0: SEC0
0x50033558 C   FIELD 01w01 SEC1: SEC1
0x50033558 C   FIELD 02w01 SEC2: SEC2
0x50033558 C   FIELD 03w01 SEC3: SEC3
0x50033558 C   FIELD 04w01 SEC4: SEC4
0x50033558 C   FIELD 05w01 SEC5: SEC5
0x50033558 C   FIELD 06w01 SEC6: SEC6
0x50033558 C   FIELD 07w01 SEC7: SEC7
0x50033558 C   FIELD 08w01 SEC8: SEC8
0x50033558 C   FIELD 09w01 SEC9: SEC9
0x50033558 C   FIELD 10w01 SEC10: SEC10
0x50033558 C   FIELD 11w01 SEC11: SEC11
0x50033558 C   FIELD 12w01 SEC12: SEC12
0x50033558 C   FIELD 13w01 SEC13: SEC13
0x50033558 C   FIELD 14w01 SEC14: SEC14
0x50033558 C   FIELD 15w01 SEC15: SEC15
0x50033558 C   FIELD 16w01 SEC16: SEC16
0x50033558 C   FIELD 17w01 SEC17: SEC17
0x50033558 C   FIELD 18w01 SEC18: SEC18
0x50033558 C   FIELD 19w01 SEC19: SEC19
0x50033558 C   FIELD 20w01 SEC20: SEC20
0x50033558 C   FIELD 21w01 SEC21: SEC21
0x50033558 C   FIELD 22w01 SEC22: SEC22
0x50033558 C   FIELD 23w01 SEC23: SEC23
0x50033558 C   FIELD 24w01 SEC24: SEC24
0x50033558 C   FIELD 25w01 SEC25: SEC25
0x50033558 C   FIELD 26w01 SEC26: SEC26
0x50033558 C   FIELD 27w01 SEC27: SEC27
0x50033558 C   FIELD 28w01 SEC28: SEC28
0x50033558 C   FIELD 29w01 SEC29: SEC29
0x50033558 C   FIELD 30w01 SEC30: SEC30
0x50033558 C   FIELD 31w01 SEC31: SEC31
0x5003355C B  REGISTER MPCBB3_SECCFGR23 (rw): MPCBBx security configuration for super-block x register
0x5003355C C   FIELD 00w01 SEC0: SEC0
0x5003355C C   FIELD 01w01 SEC1: SEC1
0x5003355C C   FIELD 02w01 SEC2: SEC2
0x5003355C C   FIELD 03w01 SEC3: SEC3
0x5003355C C   FIELD 04w01 SEC4: SEC4
0x5003355C C   FIELD 05w01 SEC5: SEC5
0x5003355C C   FIELD 06w01 SEC6: SEC6
0x5003355C C   FIELD 07w01 SEC7: SEC7
0x5003355C C   FIELD 08w01 SEC8: SEC8
0x5003355C C   FIELD 09w01 SEC9: SEC9
0x5003355C C   FIELD 10w01 SEC10: SEC10
0x5003355C C   FIELD 11w01 SEC11: SEC11
0x5003355C C   FIELD 12w01 SEC12: SEC12
0x5003355C C   FIELD 13w01 SEC13: SEC13
0x5003355C C   FIELD 14w01 SEC14: SEC14
0x5003355C C   FIELD 15w01 SEC15: SEC15
0x5003355C C   FIELD 16w01 SEC16: SEC16
0x5003355C C   FIELD 17w01 SEC17: SEC17
0x5003355C C   FIELD 18w01 SEC18: SEC18
0x5003355C C   FIELD 19w01 SEC19: SEC19
0x5003355C C   FIELD 20w01 SEC20: SEC20
0x5003355C C   FIELD 21w01 SEC21: SEC21
0x5003355C C   FIELD 22w01 SEC22: SEC22
0x5003355C C   FIELD 23w01 SEC23: SEC23
0x5003355C C   FIELD 24w01 SEC24: SEC24
0x5003355C C   FIELD 25w01 SEC25: SEC25
0x5003355C C   FIELD 26w01 SEC26: SEC26
0x5003355C C   FIELD 27w01 SEC27: SEC27
0x5003355C C   FIELD 28w01 SEC28: SEC28
0x5003355C C   FIELD 29w01 SEC29: SEC29
0x5003355C C   FIELD 30w01 SEC30: SEC30
0x5003355C C   FIELD 31w01 SEC31: SEC31
0x50033560 B  REGISTER MPCBB3_SECCFGR24 (rw): MPCBBx security configuration for super-block x register
0x50033560 C   FIELD 00w01 SEC0: SEC0
0x50033560 C   FIELD 01w01 SEC1: SEC1
0x50033560 C   FIELD 02w01 SEC2: SEC2
0x50033560 C   FIELD 03w01 SEC3: SEC3
0x50033560 C   FIELD 04w01 SEC4: SEC4
0x50033560 C   FIELD 05w01 SEC5: SEC5
0x50033560 C   FIELD 06w01 SEC6: SEC6
0x50033560 C   FIELD 07w01 SEC7: SEC7
0x50033560 C   FIELD 08w01 SEC8: SEC8
0x50033560 C   FIELD 09w01 SEC9: SEC9
0x50033560 C   FIELD 10w01 SEC10: SEC10
0x50033560 C   FIELD 11w01 SEC11: SEC11
0x50033560 C   FIELD 12w01 SEC12: SEC12
0x50033560 C   FIELD 13w01 SEC13: SEC13
0x50033560 C   FIELD 14w01 SEC14: SEC14
0x50033560 C   FIELD 15w01 SEC15: SEC15
0x50033560 C   FIELD 16w01 SEC16: SEC16
0x50033560 C   FIELD 17w01 SEC17: SEC17
0x50033560 C   FIELD 18w01 SEC18: SEC18
0x50033560 C   FIELD 19w01 SEC19: SEC19
0x50033560 C   FIELD 20w01 SEC20: SEC20
0x50033560 C   FIELD 21w01 SEC21: SEC21
0x50033560 C   FIELD 22w01 SEC22: SEC22
0x50033560 C   FIELD 23w01 SEC23: SEC23
0x50033560 C   FIELD 24w01 SEC24: SEC24
0x50033560 C   FIELD 25w01 SEC25: SEC25
0x50033560 C   FIELD 26w01 SEC26: SEC26
0x50033560 C   FIELD 27w01 SEC27: SEC27
0x50033560 C   FIELD 28w01 SEC28: SEC28
0x50033560 C   FIELD 29w01 SEC29: SEC29
0x50033560 C   FIELD 30w01 SEC30: SEC30
0x50033560 C   FIELD 31w01 SEC31: SEC31
0x50033564 B  REGISTER MPCBB3_SECCFGR25 (rw): MPCBBx security configuration for super-block x register
0x50033564 C   FIELD 00w01 SEC0: SEC0
0x50033564 C   FIELD 01w01 SEC1: SEC1
0x50033564 C   FIELD 02w01 SEC2: SEC2
0x50033564 C   FIELD 03w01 SEC3: SEC3
0x50033564 C   FIELD 04w01 SEC4: SEC4
0x50033564 C   FIELD 05w01 SEC5: SEC5
0x50033564 C   FIELD 06w01 SEC6: SEC6
0x50033564 C   FIELD 07w01 SEC7: SEC7
0x50033564 C   FIELD 08w01 SEC8: SEC8
0x50033564 C   FIELD 09w01 SEC9: SEC9
0x50033564 C   FIELD 10w01 SEC10: SEC10
0x50033564 C   FIELD 11w01 SEC11: SEC11
0x50033564 C   FIELD 12w01 SEC12: SEC12
0x50033564 C   FIELD 13w01 SEC13: SEC13
0x50033564 C   FIELD 14w01 SEC14: SEC14
0x50033564 C   FIELD 15w01 SEC15: SEC15
0x50033564 C   FIELD 16w01 SEC16: SEC16
0x50033564 C   FIELD 17w01 SEC17: SEC17
0x50033564 C   FIELD 18w01 SEC18: SEC18
0x50033564 C   FIELD 19w01 SEC19: SEC19
0x50033564 C   FIELD 20w01 SEC20: SEC20
0x50033564 C   FIELD 21w01 SEC21: SEC21
0x50033564 C   FIELD 22w01 SEC22: SEC22
0x50033564 C   FIELD 23w01 SEC23: SEC23
0x50033564 C   FIELD 24w01 SEC24: SEC24
0x50033564 C   FIELD 25w01 SEC25: SEC25
0x50033564 C   FIELD 26w01 SEC26: SEC26
0x50033564 C   FIELD 27w01 SEC27: SEC27
0x50033564 C   FIELD 28w01 SEC28: SEC28
0x50033564 C   FIELD 29w01 SEC29: SEC29
0x50033564 C   FIELD 30w01 SEC30: SEC30
0x50033564 C   FIELD 31w01 SEC31: SEC31
0x50033568 B  REGISTER MPCBB3_SECCFGR26 (rw): MPCBBx security configuration for super-block x register
0x50033568 C   FIELD 00w01 SEC0: SEC0
0x50033568 C   FIELD 01w01 SEC1: SEC1
0x50033568 C   FIELD 02w01 SEC2: SEC2
0x50033568 C   FIELD 03w01 SEC3: SEC3
0x50033568 C   FIELD 04w01 SEC4: SEC4
0x50033568 C   FIELD 05w01 SEC5: SEC5
0x50033568 C   FIELD 06w01 SEC6: SEC6
0x50033568 C   FIELD 07w01 SEC7: SEC7
0x50033568 C   FIELD 08w01 SEC8: SEC8
0x50033568 C   FIELD 09w01 SEC9: SEC9
0x50033568 C   FIELD 10w01 SEC10: SEC10
0x50033568 C   FIELD 11w01 SEC11: SEC11
0x50033568 C   FIELD 12w01 SEC12: SEC12
0x50033568 C   FIELD 13w01 SEC13: SEC13
0x50033568 C   FIELD 14w01 SEC14: SEC14
0x50033568 C   FIELD 15w01 SEC15: SEC15
0x50033568 C   FIELD 16w01 SEC16: SEC16
0x50033568 C   FIELD 17w01 SEC17: SEC17
0x50033568 C   FIELD 18w01 SEC18: SEC18
0x50033568 C   FIELD 19w01 SEC19: SEC19
0x50033568 C   FIELD 20w01 SEC20: SEC20
0x50033568 C   FIELD 21w01 SEC21: SEC21
0x50033568 C   FIELD 22w01 SEC22: SEC22
0x50033568 C   FIELD 23w01 SEC23: SEC23
0x50033568 C   FIELD 24w01 SEC24: SEC24
0x50033568 C   FIELD 25w01 SEC25: SEC25
0x50033568 C   FIELD 26w01 SEC26: SEC26
0x50033568 C   FIELD 27w01 SEC27: SEC27
0x50033568 C   FIELD 28w01 SEC28: SEC28
0x50033568 C   FIELD 29w01 SEC29: SEC29
0x50033568 C   FIELD 30w01 SEC30: SEC30
0x50033568 C   FIELD 31w01 SEC31: SEC31
0x5003356C B  REGISTER MPCBB3_SECCFGR27 (rw): MPCBBx security configuration for super-block x register
0x5003356C C   FIELD 00w01 SEC0: SEC0
0x5003356C C   FIELD 01w01 SEC1: SEC1
0x5003356C C   FIELD 02w01 SEC2: SEC2
0x5003356C C   FIELD 03w01 SEC3: SEC3
0x5003356C C   FIELD 04w01 SEC4: SEC4
0x5003356C C   FIELD 05w01 SEC5: SEC5
0x5003356C C   FIELD 06w01 SEC6: SEC6
0x5003356C C   FIELD 07w01 SEC7: SEC7
0x5003356C C   FIELD 08w01 SEC8: SEC8
0x5003356C C   FIELD 09w01 SEC9: SEC9
0x5003356C C   FIELD 10w01 SEC10: SEC10
0x5003356C C   FIELD 11w01 SEC11: SEC11
0x5003356C C   FIELD 12w01 SEC12: SEC12
0x5003356C C   FIELD 13w01 SEC13: SEC13
0x5003356C C   FIELD 14w01 SEC14: SEC14
0x5003356C C   FIELD 15w01 SEC15: SEC15
0x5003356C C   FIELD 16w01 SEC16: SEC16
0x5003356C C   FIELD 17w01 SEC17: SEC17
0x5003356C C   FIELD 18w01 SEC18: SEC18
0x5003356C C   FIELD 19w01 SEC19: SEC19
0x5003356C C   FIELD 20w01 SEC20: SEC20
0x5003356C C   FIELD 21w01 SEC21: SEC21
0x5003356C C   FIELD 22w01 SEC22: SEC22
0x5003356C C   FIELD 23w01 SEC23: SEC23
0x5003356C C   FIELD 24w01 SEC24: SEC24
0x5003356C C   FIELD 25w01 SEC25: SEC25
0x5003356C C   FIELD 26w01 SEC26: SEC26
0x5003356C C   FIELD 27w01 SEC27: SEC27
0x5003356C C   FIELD 28w01 SEC28: SEC28
0x5003356C C   FIELD 29w01 SEC29: SEC29
0x5003356C C   FIELD 30w01 SEC30: SEC30
0x5003356C C   FIELD 31w01 SEC31: SEC31
0x50033570 B  REGISTER MPCBB3_SECCFGR28 (rw): MPCBBx security configuration for super-block x register
0x50033570 C   FIELD 00w01 SEC0: SEC0
0x50033570 C   FIELD 01w01 SEC1: SEC1
0x50033570 C   FIELD 02w01 SEC2: SEC2
0x50033570 C   FIELD 03w01 SEC3: SEC3
0x50033570 C   FIELD 04w01 SEC4: SEC4
0x50033570 C   FIELD 05w01 SEC5: SEC5
0x50033570 C   FIELD 06w01 SEC6: SEC6
0x50033570 C   FIELD 07w01 SEC7: SEC7
0x50033570 C   FIELD 08w01 SEC8: SEC8
0x50033570 C   FIELD 09w01 SEC9: SEC9
0x50033570 C   FIELD 10w01 SEC10: SEC10
0x50033570 C   FIELD 11w01 SEC11: SEC11
0x50033570 C   FIELD 12w01 SEC12: SEC12
0x50033570 C   FIELD 13w01 SEC13: SEC13
0x50033570 C   FIELD 14w01 SEC14: SEC14
0x50033570 C   FIELD 15w01 SEC15: SEC15
0x50033570 C   FIELD 16w01 SEC16: SEC16
0x50033570 C   FIELD 17w01 SEC17: SEC17
0x50033570 C   FIELD 18w01 SEC18: SEC18
0x50033570 C   FIELD 19w01 SEC19: SEC19
0x50033570 C   FIELD 20w01 SEC20: SEC20
0x50033570 C   FIELD 21w01 SEC21: SEC21
0x50033570 C   FIELD 22w01 SEC22: SEC22
0x50033570 C   FIELD 23w01 SEC23: SEC23
0x50033570 C   FIELD 24w01 SEC24: SEC24
0x50033570 C   FIELD 25w01 SEC25: SEC25
0x50033570 C   FIELD 26w01 SEC26: SEC26
0x50033570 C   FIELD 27w01 SEC27: SEC27
0x50033570 C   FIELD 28w01 SEC28: SEC28
0x50033570 C   FIELD 29w01 SEC29: SEC29
0x50033570 C   FIELD 30w01 SEC30: SEC30
0x50033570 C   FIELD 31w01 SEC31: SEC31
0x50033574 B  REGISTER MPCBB3_SECCFGR29 (rw): MPCBBx security configuration for super-block x register
0x50033574 C   FIELD 00w01 SEC0: SEC0
0x50033574 C   FIELD 01w01 SEC1: SEC1
0x50033574 C   FIELD 02w01 SEC2: SEC2
0x50033574 C   FIELD 03w01 SEC3: SEC3
0x50033574 C   FIELD 04w01 SEC4: SEC4
0x50033574 C   FIELD 05w01 SEC5: SEC5
0x50033574 C   FIELD 06w01 SEC6: SEC6
0x50033574 C   FIELD 07w01 SEC7: SEC7
0x50033574 C   FIELD 08w01 SEC8: SEC8
0x50033574 C   FIELD 09w01 SEC9: SEC9
0x50033574 C   FIELD 10w01 SEC10: SEC10
0x50033574 C   FIELD 11w01 SEC11: SEC11
0x50033574 C   FIELD 12w01 SEC12: SEC12
0x50033574 C   FIELD 13w01 SEC13: SEC13
0x50033574 C   FIELD 14w01 SEC14: SEC14
0x50033574 C   FIELD 15w01 SEC15: SEC15
0x50033574 C   FIELD 16w01 SEC16: SEC16
0x50033574 C   FIELD 17w01 SEC17: SEC17
0x50033574 C   FIELD 18w01 SEC18: SEC18
0x50033574 C   FIELD 19w01 SEC19: SEC19
0x50033574 C   FIELD 20w01 SEC20: SEC20
0x50033574 C   FIELD 21w01 SEC21: SEC21
0x50033574 C   FIELD 22w01 SEC22: SEC22
0x50033574 C   FIELD 23w01 SEC23: SEC23
0x50033574 C   FIELD 24w01 SEC24: SEC24
0x50033574 C   FIELD 25w01 SEC25: SEC25
0x50033574 C   FIELD 26w01 SEC26: SEC26
0x50033574 C   FIELD 27w01 SEC27: SEC27
0x50033574 C   FIELD 28w01 SEC28: SEC28
0x50033574 C   FIELD 29w01 SEC29: SEC29
0x50033574 C   FIELD 30w01 SEC30: SEC30
0x50033574 C   FIELD 31w01 SEC31: SEC31
0x50033578 B  REGISTER MPCBB3_SECCFGR30 (rw): MPCBBx security configuration for super-block x register
0x50033578 C   FIELD 00w01 SEC0: SEC0
0x50033578 C   FIELD 01w01 SEC1: SEC1
0x50033578 C   FIELD 02w01 SEC2: SEC2
0x50033578 C   FIELD 03w01 SEC3: SEC3
0x50033578 C   FIELD 04w01 SEC4: SEC4
0x50033578 C   FIELD 05w01 SEC5: SEC5
0x50033578 C   FIELD 06w01 SEC6: SEC6
0x50033578 C   FIELD 07w01 SEC7: SEC7
0x50033578 C   FIELD 08w01 SEC8: SEC8
0x50033578 C   FIELD 09w01 SEC9: SEC9
0x50033578 C   FIELD 10w01 SEC10: SEC10
0x50033578 C   FIELD 11w01 SEC11: SEC11
0x50033578 C   FIELD 12w01 SEC12: SEC12
0x50033578 C   FIELD 13w01 SEC13: SEC13
0x50033578 C   FIELD 14w01 SEC14: SEC14
0x50033578 C   FIELD 15w01 SEC15: SEC15
0x50033578 C   FIELD 16w01 SEC16: SEC16
0x50033578 C   FIELD 17w01 SEC17: SEC17
0x50033578 C   FIELD 18w01 SEC18: SEC18
0x50033578 C   FIELD 19w01 SEC19: SEC19
0x50033578 C   FIELD 20w01 SEC20: SEC20
0x50033578 C   FIELD 21w01 SEC21: SEC21
0x50033578 C   FIELD 22w01 SEC22: SEC22
0x50033578 C   FIELD 23w01 SEC23: SEC23
0x50033578 C   FIELD 24w01 SEC24: SEC24
0x50033578 C   FIELD 25w01 SEC25: SEC25
0x50033578 C   FIELD 26w01 SEC26: SEC26
0x50033578 C   FIELD 27w01 SEC27: SEC27
0x50033578 C   FIELD 28w01 SEC28: SEC28
0x50033578 C   FIELD 29w01 SEC29: SEC29
0x50033578 C   FIELD 30w01 SEC30: SEC30
0x50033578 C   FIELD 31w01 SEC31: SEC31
0x5003357C B  REGISTER MPCBB3_SECCFGR31 (rw): MPCBBx security configuration for super-block x register
0x5003357C C   FIELD 00w01 SEC0: SEC0
0x5003357C C   FIELD 01w01 SEC1: SEC1
0x5003357C C   FIELD 02w01 SEC2: SEC2
0x5003357C C   FIELD 03w01 SEC3: SEC3
0x5003357C C   FIELD 04w01 SEC4: SEC4
0x5003357C C   FIELD 05w01 SEC5: SEC5
0x5003357C C   FIELD 06w01 SEC6: SEC6
0x5003357C C   FIELD 07w01 SEC7: SEC7
0x5003357C C   FIELD 08w01 SEC8: SEC8
0x5003357C C   FIELD 09w01 SEC9: SEC9
0x5003357C C   FIELD 10w01 SEC10: SEC10
0x5003357C C   FIELD 11w01 SEC11: SEC11
0x5003357C C   FIELD 12w01 SEC12: SEC12
0x5003357C C   FIELD 13w01 SEC13: SEC13
0x5003357C C   FIELD 14w01 SEC14: SEC14
0x5003357C C   FIELD 15w01 SEC15: SEC15
0x5003357C C   FIELD 16w01 SEC16: SEC16
0x5003357C C   FIELD 17w01 SEC17: SEC17
0x5003357C C   FIELD 18w01 SEC18: SEC18
0x5003357C C   FIELD 19w01 SEC19: SEC19
0x5003357C C   FIELD 20w01 SEC20: SEC20
0x5003357C C   FIELD 21w01 SEC21: SEC21
0x5003357C C   FIELD 22w01 SEC22: SEC22
0x5003357C C   FIELD 23w01 SEC23: SEC23
0x5003357C C   FIELD 24w01 SEC24: SEC24
0x5003357C C   FIELD 25w01 SEC25: SEC25
0x5003357C C   FIELD 26w01 SEC26: SEC26
0x5003357C C   FIELD 27w01 SEC27: SEC27
0x5003357C C   FIELD 28w01 SEC28: SEC28
0x5003357C C   FIELD 29w01 SEC29: SEC29
0x5003357C C   FIELD 30w01 SEC30: SEC30
0x5003357C C   FIELD 31w01 SEC31: SEC31
0x50033600 B  REGISTER MPCBB3_PRIVCFGR0 (rw): MPCBB privileged configuration for super-block x register
0x50033600 C   FIELD 00w01 PRIV0: PRIV0
0x50033600 C   FIELD 01w01 PRIV1: PRIV1
0x50033600 C   FIELD 02w01 PRIV2: PRIV2
0x50033600 C   FIELD 03w01 PRIV3: PRIV3
0x50033600 C   FIELD 04w01 PRIV4: PRIV4
0x50033600 C   FIELD 05w01 PRIV5: PRIV5
0x50033600 C   FIELD 06w01 PRIV6: PRIV6
0x50033600 C   FIELD 07w01 PRIV7: PRIV7
0x50033600 C   FIELD 08w01 PRIV8: PRIV8
0x50033600 C   FIELD 09w01 PRIV9: PRIV9
0x50033600 C   FIELD 10w01 PRIV10: PRIV10
0x50033600 C   FIELD 11w01 PRIV11: PRIV11
0x50033600 C   FIELD 12w01 PRIV12: PRIV12
0x50033600 C   FIELD 13w01 PRIV13: PRIV13
0x50033600 C   FIELD 14w01 PRIV14: PRIV14
0x50033600 C   FIELD 15w01 PRIV15: PRIV15
0x50033600 C   FIELD 16w01 PRIV16: PRIV16
0x50033600 C   FIELD 17w01 PRIV17: PRIV17
0x50033600 C   FIELD 18w01 PRIV18: PRIV18
0x50033600 C   FIELD 19w01 PRIV19: PRIV19
0x50033600 C   FIELD 20w01 PRIV20: PRIV20
0x50033600 C   FIELD 21w01 PRIV21: PRIV21
0x50033600 C   FIELD 22w01 PRIV22: PRIV22
0x50033600 C   FIELD 23w01 PRIV23: PRIV23
0x50033600 C   FIELD 24w01 PRIV24: PRIV24
0x50033600 C   FIELD 25w01 PRIV25: PRIV25
0x50033600 C   FIELD 26w01 PRIV26: PRIV26
0x50033600 C   FIELD 27w01 PRIV27: PRIV27
0x50033600 C   FIELD 28w01 PRIV28: PRIV28
0x50033600 C   FIELD 29w01 PRIV29: PRIV29
0x50033600 C   FIELD 30w01 PRIV30: PRIV30
0x50033600 C   FIELD 31w01 PRIV31: PRIV31
0x50033604 B  REGISTER MPCBB3_PRIVCFGR1 (rw): MPCBB privileged configuration for super-block x register
0x50033604 C   FIELD 00w01 PRIV0: PRIV0
0x50033604 C   FIELD 01w01 PRIV1: PRIV1
0x50033604 C   FIELD 02w01 PRIV2: PRIV2
0x50033604 C   FIELD 03w01 PRIV3: PRIV3
0x50033604 C   FIELD 04w01 PRIV4: PRIV4
0x50033604 C   FIELD 05w01 PRIV5: PRIV5
0x50033604 C   FIELD 06w01 PRIV6: PRIV6
0x50033604 C   FIELD 07w01 PRIV7: PRIV7
0x50033604 C   FIELD 08w01 PRIV8: PRIV8
0x50033604 C   FIELD 09w01 PRIV9: PRIV9
0x50033604 C   FIELD 10w01 PRIV10: PRIV10
0x50033604 C   FIELD 11w01 PRIV11: PRIV11
0x50033604 C   FIELD 12w01 PRIV12: PRIV12
0x50033604 C   FIELD 13w01 PRIV13: PRIV13
0x50033604 C   FIELD 14w01 PRIV14: PRIV14
0x50033604 C   FIELD 15w01 PRIV15: PRIV15
0x50033604 C   FIELD 16w01 PRIV16: PRIV16
0x50033604 C   FIELD 17w01 PRIV17: PRIV17
0x50033604 C   FIELD 18w01 PRIV18: PRIV18
0x50033604 C   FIELD 19w01 PRIV19: PRIV19
0x50033604 C   FIELD 20w01 PRIV20: PRIV20
0x50033604 C   FIELD 21w01 PRIV21: PRIV21
0x50033604 C   FIELD 22w01 PRIV22: PRIV22
0x50033604 C   FIELD 23w01 PRIV23: PRIV23
0x50033604 C   FIELD 24w01 PRIV24: PRIV24
0x50033604 C   FIELD 25w01 PRIV25: PRIV25
0x50033604 C   FIELD 26w01 PRIV26: PRIV26
0x50033604 C   FIELD 27w01 PRIV27: PRIV27
0x50033604 C   FIELD 28w01 PRIV28: PRIV28
0x50033604 C   FIELD 29w01 PRIV29: PRIV29
0x50033604 C   FIELD 30w01 PRIV30: PRIV30
0x50033604 C   FIELD 31w01 PRIV31: PRIV31
0x50033608 B  REGISTER MPCBB3_PRIVCFGR2 (rw): MPCBB privileged configuration for super-block x register
0x50033608 C   FIELD 00w01 PRIV0: PRIV0
0x50033608 C   FIELD 01w01 PRIV1: PRIV1
0x50033608 C   FIELD 02w01 PRIV2: PRIV2
0x50033608 C   FIELD 03w01 PRIV3: PRIV3
0x50033608 C   FIELD 04w01 PRIV4: PRIV4
0x50033608 C   FIELD 05w01 PRIV5: PRIV5
0x50033608 C   FIELD 06w01 PRIV6: PRIV6
0x50033608 C   FIELD 07w01 PRIV7: PRIV7
0x50033608 C   FIELD 08w01 PRIV8: PRIV8
0x50033608 C   FIELD 09w01 PRIV9: PRIV9
0x50033608 C   FIELD 10w01 PRIV10: PRIV10
0x50033608 C   FIELD 11w01 PRIV11: PRIV11
0x50033608 C   FIELD 12w01 PRIV12: PRIV12
0x50033608 C   FIELD 13w01 PRIV13: PRIV13
0x50033608 C   FIELD 14w01 PRIV14: PRIV14
0x50033608 C   FIELD 15w01 PRIV15: PRIV15
0x50033608 C   FIELD 16w01 PRIV16: PRIV16
0x50033608 C   FIELD 17w01 PRIV17: PRIV17
0x50033608 C   FIELD 18w01 PRIV18: PRIV18
0x50033608 C   FIELD 19w01 PRIV19: PRIV19
0x50033608 C   FIELD 20w01 PRIV20: PRIV20
0x50033608 C   FIELD 21w01 PRIV21: PRIV21
0x50033608 C   FIELD 22w01 PRIV22: PRIV22
0x50033608 C   FIELD 23w01 PRIV23: PRIV23
0x50033608 C   FIELD 24w01 PRIV24: PRIV24
0x50033608 C   FIELD 25w01 PRIV25: PRIV25
0x50033608 C   FIELD 26w01 PRIV26: PRIV26
0x50033608 C   FIELD 27w01 PRIV27: PRIV27
0x50033608 C   FIELD 28w01 PRIV28: PRIV28
0x50033608 C   FIELD 29w01 PRIV29: PRIV29
0x50033608 C   FIELD 30w01 PRIV30: PRIV30
0x50033608 C   FIELD 31w01 PRIV31: PRIV31
0x5003360C B  REGISTER MPCBB3_PRIVCFGR3 (rw): MPCBB privileged configuration for super-block x register
0x5003360C C   FIELD 00w01 PRIV0: PRIV0
0x5003360C C   FIELD 01w01 PRIV1: PRIV1
0x5003360C C   FIELD 02w01 PRIV2: PRIV2
0x5003360C C   FIELD 03w01 PRIV3: PRIV3
0x5003360C C   FIELD 04w01 PRIV4: PRIV4
0x5003360C C   FIELD 05w01 PRIV5: PRIV5
0x5003360C C   FIELD 06w01 PRIV6: PRIV6
0x5003360C C   FIELD 07w01 PRIV7: PRIV7
0x5003360C C   FIELD 08w01 PRIV8: PRIV8
0x5003360C C   FIELD 09w01 PRIV9: PRIV9
0x5003360C C   FIELD 10w01 PRIV10: PRIV10
0x5003360C C   FIELD 11w01 PRIV11: PRIV11
0x5003360C C   FIELD 12w01 PRIV12: PRIV12
0x5003360C C   FIELD 13w01 PRIV13: PRIV13
0x5003360C C   FIELD 14w01 PRIV14: PRIV14
0x5003360C C   FIELD 15w01 PRIV15: PRIV15
0x5003360C C   FIELD 16w01 PRIV16: PRIV16
0x5003360C C   FIELD 17w01 PRIV17: PRIV17
0x5003360C C   FIELD 18w01 PRIV18: PRIV18
0x5003360C C   FIELD 19w01 PRIV19: PRIV19
0x5003360C C   FIELD 20w01 PRIV20: PRIV20
0x5003360C C   FIELD 21w01 PRIV21: PRIV21
0x5003360C C   FIELD 22w01 PRIV22: PRIV22
0x5003360C C   FIELD 23w01 PRIV23: PRIV23
0x5003360C C   FIELD 24w01 PRIV24: PRIV24
0x5003360C C   FIELD 25w01 PRIV25: PRIV25
0x5003360C C   FIELD 26w01 PRIV26: PRIV26
0x5003360C C   FIELD 27w01 PRIV27: PRIV27
0x5003360C C   FIELD 28w01 PRIV28: PRIV28
0x5003360C C   FIELD 29w01 PRIV29: PRIV29
0x5003360C C   FIELD 30w01 PRIV30: PRIV30
0x5003360C C   FIELD 31w01 PRIV31: PRIV31
0x50033610 B  REGISTER MPCBB3_PRIVCFGR4 (rw): MPCBB privileged configuration for super-block x register
0x50033610 C   FIELD 00w01 PRIV0: PRIV0
0x50033610 C   FIELD 01w01 PRIV1: PRIV1
0x50033610 C   FIELD 02w01 PRIV2: PRIV2
0x50033610 C   FIELD 03w01 PRIV3: PRIV3
0x50033610 C   FIELD 04w01 PRIV4: PRIV4
0x50033610 C   FIELD 05w01 PRIV5: PRIV5
0x50033610 C   FIELD 06w01 PRIV6: PRIV6
0x50033610 C   FIELD 07w01 PRIV7: PRIV7
0x50033610 C   FIELD 08w01 PRIV8: PRIV8
0x50033610 C   FIELD 09w01 PRIV9: PRIV9
0x50033610 C   FIELD 10w01 PRIV10: PRIV10
0x50033610 C   FIELD 11w01 PRIV11: PRIV11
0x50033610 C   FIELD 12w01 PRIV12: PRIV12
0x50033610 C   FIELD 13w01 PRIV13: PRIV13
0x50033610 C   FIELD 14w01 PRIV14: PRIV14
0x50033610 C   FIELD 15w01 PRIV15: PRIV15
0x50033610 C   FIELD 16w01 PRIV16: PRIV16
0x50033610 C   FIELD 17w01 PRIV17: PRIV17
0x50033610 C   FIELD 18w01 PRIV18: PRIV18
0x50033610 C   FIELD 19w01 PRIV19: PRIV19
0x50033610 C   FIELD 20w01 PRIV20: PRIV20
0x50033610 C   FIELD 21w01 PRIV21: PRIV21
0x50033610 C   FIELD 22w01 PRIV22: PRIV22
0x50033610 C   FIELD 23w01 PRIV23: PRIV23
0x50033610 C   FIELD 24w01 PRIV24: PRIV24
0x50033610 C   FIELD 25w01 PRIV25: PRIV25
0x50033610 C   FIELD 26w01 PRIV26: PRIV26
0x50033610 C   FIELD 27w01 PRIV27: PRIV27
0x50033610 C   FIELD 28w01 PRIV28: PRIV28
0x50033610 C   FIELD 29w01 PRIV29: PRIV29
0x50033610 C   FIELD 30w01 PRIV30: PRIV30
0x50033610 C   FIELD 31w01 PRIV31: PRIV31
0x50033614 B  REGISTER MPCBB3_PRIVCFGR5 (rw): MPCBB privileged configuration for super-block x register
0x50033614 C   FIELD 00w01 PRIV0: PRIV0
0x50033614 C   FIELD 01w01 PRIV1: PRIV1
0x50033614 C   FIELD 02w01 PRIV2: PRIV2
0x50033614 C   FIELD 03w01 PRIV3: PRIV3
0x50033614 C   FIELD 04w01 PRIV4: PRIV4
0x50033614 C   FIELD 05w01 PRIV5: PRIV5
0x50033614 C   FIELD 06w01 PRIV6: PRIV6
0x50033614 C   FIELD 07w01 PRIV7: PRIV7
0x50033614 C   FIELD 08w01 PRIV8: PRIV8
0x50033614 C   FIELD 09w01 PRIV9: PRIV9
0x50033614 C   FIELD 10w01 PRIV10: PRIV10
0x50033614 C   FIELD 11w01 PRIV11: PRIV11
0x50033614 C   FIELD 12w01 PRIV12: PRIV12
0x50033614 C   FIELD 13w01 PRIV13: PRIV13
0x50033614 C   FIELD 14w01 PRIV14: PRIV14
0x50033614 C   FIELD 15w01 PRIV15: PRIV15
0x50033614 C   FIELD 16w01 PRIV16: PRIV16
0x50033614 C   FIELD 17w01 PRIV17: PRIV17
0x50033614 C   FIELD 18w01 PRIV18: PRIV18
0x50033614 C   FIELD 19w01 PRIV19: PRIV19
0x50033614 C   FIELD 20w01 PRIV20: PRIV20
0x50033614 C   FIELD 21w01 PRIV21: PRIV21
0x50033614 C   FIELD 22w01 PRIV22: PRIV22
0x50033614 C   FIELD 23w01 PRIV23: PRIV23
0x50033614 C   FIELD 24w01 PRIV24: PRIV24
0x50033614 C   FIELD 25w01 PRIV25: PRIV25
0x50033614 C   FIELD 26w01 PRIV26: PRIV26
0x50033614 C   FIELD 27w01 PRIV27: PRIV27
0x50033614 C   FIELD 28w01 PRIV28: PRIV28
0x50033614 C   FIELD 29w01 PRIV29: PRIV29
0x50033614 C   FIELD 30w01 PRIV30: PRIV30
0x50033614 C   FIELD 31w01 PRIV31: PRIV31
0x50033618 B  REGISTER MPCBB3_PRIVCFGR6 (rw): MPCBB privileged configuration for super-block x register
0x50033618 C   FIELD 00w01 PRIV0: PRIV0
0x50033618 C   FIELD 01w01 PRIV1: PRIV1
0x50033618 C   FIELD 02w01 PRIV2: PRIV2
0x50033618 C   FIELD 03w01 PRIV3: PRIV3
0x50033618 C   FIELD 04w01 PRIV4: PRIV4
0x50033618 C   FIELD 05w01 PRIV5: PRIV5
0x50033618 C   FIELD 06w01 PRIV6: PRIV6
0x50033618 C   FIELD 07w01 PRIV7: PRIV7
0x50033618 C   FIELD 08w01 PRIV8: PRIV8
0x50033618 C   FIELD 09w01 PRIV9: PRIV9
0x50033618 C   FIELD 10w01 PRIV10: PRIV10
0x50033618 C   FIELD 11w01 PRIV11: PRIV11
0x50033618 C   FIELD 12w01 PRIV12: PRIV12
0x50033618 C   FIELD 13w01 PRIV13: PRIV13
0x50033618 C   FIELD 14w01 PRIV14: PRIV14
0x50033618 C   FIELD 15w01 PRIV15: PRIV15
0x50033618 C   FIELD 16w01 PRIV16: PRIV16
0x50033618 C   FIELD 17w01 PRIV17: PRIV17
0x50033618 C   FIELD 18w01 PRIV18: PRIV18
0x50033618 C   FIELD 19w01 PRIV19: PRIV19
0x50033618 C   FIELD 20w01 PRIV20: PRIV20
0x50033618 C   FIELD 21w01 PRIV21: PRIV21
0x50033618 C   FIELD 22w01 PRIV22: PRIV22
0x50033618 C   FIELD 23w01 PRIV23: PRIV23
0x50033618 C   FIELD 24w01 PRIV24: PRIV24
0x50033618 C   FIELD 25w01 PRIV25: PRIV25
0x50033618 C   FIELD 26w01 PRIV26: PRIV26
0x50033618 C   FIELD 27w01 PRIV27: PRIV27
0x50033618 C   FIELD 28w01 PRIV28: PRIV28
0x50033618 C   FIELD 29w01 PRIV29: PRIV29
0x50033618 C   FIELD 30w01 PRIV30: PRIV30
0x50033618 C   FIELD 31w01 PRIV31: PRIV31
0x5003361C B  REGISTER MPCBB3_PRIVCFGR7 (rw): MPCBB privileged configuration for super-block x register
0x5003361C C   FIELD 00w01 PRIV0: PRIV0
0x5003361C C   FIELD 01w01 PRIV1: PRIV1
0x5003361C C   FIELD 02w01 PRIV2: PRIV2
0x5003361C C   FIELD 03w01 PRIV3: PRIV3
0x5003361C C   FIELD 04w01 PRIV4: PRIV4
0x5003361C C   FIELD 05w01 PRIV5: PRIV5
0x5003361C C   FIELD 06w01 PRIV6: PRIV6
0x5003361C C   FIELD 07w01 PRIV7: PRIV7
0x5003361C C   FIELD 08w01 PRIV8: PRIV8
0x5003361C C   FIELD 09w01 PRIV9: PRIV9
0x5003361C C   FIELD 10w01 PRIV10: PRIV10
0x5003361C C   FIELD 11w01 PRIV11: PRIV11
0x5003361C C   FIELD 12w01 PRIV12: PRIV12
0x5003361C C   FIELD 13w01 PRIV13: PRIV13
0x5003361C C   FIELD 14w01 PRIV14: PRIV14
0x5003361C C   FIELD 15w01 PRIV15: PRIV15
0x5003361C C   FIELD 16w01 PRIV16: PRIV16
0x5003361C C   FIELD 17w01 PRIV17: PRIV17
0x5003361C C   FIELD 18w01 PRIV18: PRIV18
0x5003361C C   FIELD 19w01 PRIV19: PRIV19
0x5003361C C   FIELD 20w01 PRIV20: PRIV20
0x5003361C C   FIELD 21w01 PRIV21: PRIV21
0x5003361C C   FIELD 22w01 PRIV22: PRIV22
0x5003361C C   FIELD 23w01 PRIV23: PRIV23
0x5003361C C   FIELD 24w01 PRIV24: PRIV24
0x5003361C C   FIELD 25w01 PRIV25: PRIV25
0x5003361C C   FIELD 26w01 PRIV26: PRIV26
0x5003361C C   FIELD 27w01 PRIV27: PRIV27
0x5003361C C   FIELD 28w01 PRIV28: PRIV28
0x5003361C C   FIELD 29w01 PRIV29: PRIV29
0x5003361C C   FIELD 30w01 PRIV30: PRIV30
0x5003361C C   FIELD 31w01 PRIV31: PRIV31
0x50033620 B  REGISTER MPCBB3_PRIVCFGR8 (rw): MPCBB privileged configuration for super-block x register
0x50033620 C   FIELD 00w01 PRIV0: PRIV0
0x50033620 C   FIELD 01w01 PRIV1: PRIV1
0x50033620 C   FIELD 02w01 PRIV2: PRIV2
0x50033620 C   FIELD 03w01 PRIV3: PRIV3
0x50033620 C   FIELD 04w01 PRIV4: PRIV4
0x50033620 C   FIELD 05w01 PRIV5: PRIV5
0x50033620 C   FIELD 06w01 PRIV6: PRIV6
0x50033620 C   FIELD 07w01 PRIV7: PRIV7
0x50033620 C   FIELD 08w01 PRIV8: PRIV8
0x50033620 C   FIELD 09w01 PRIV9: PRIV9
0x50033620 C   FIELD 10w01 PRIV10: PRIV10
0x50033620 C   FIELD 11w01 PRIV11: PRIV11
0x50033620 C   FIELD 12w01 PRIV12: PRIV12
0x50033620 C   FIELD 13w01 PRIV13: PRIV13
0x50033620 C   FIELD 14w01 PRIV14: PRIV14
0x50033620 C   FIELD 15w01 PRIV15: PRIV15
0x50033620 C   FIELD 16w01 PRIV16: PRIV16
0x50033620 C   FIELD 17w01 PRIV17: PRIV17
0x50033620 C   FIELD 18w01 PRIV18: PRIV18
0x50033620 C   FIELD 19w01 PRIV19: PRIV19
0x50033620 C   FIELD 20w01 PRIV20: PRIV20
0x50033620 C   FIELD 21w01 PRIV21: PRIV21
0x50033620 C   FIELD 22w01 PRIV22: PRIV22
0x50033620 C   FIELD 23w01 PRIV23: PRIV23
0x50033620 C   FIELD 24w01 PRIV24: PRIV24
0x50033620 C   FIELD 25w01 PRIV25: PRIV25
0x50033620 C   FIELD 26w01 PRIV26: PRIV26
0x50033620 C   FIELD 27w01 PRIV27: PRIV27
0x50033620 C   FIELD 28w01 PRIV28: PRIV28
0x50033620 C   FIELD 29w01 PRIV29: PRIV29
0x50033620 C   FIELD 30w01 PRIV30: PRIV30
0x50033620 C   FIELD 31w01 PRIV31: PRIV31
0x50033624 B  REGISTER MPCBB3_PRIVCFGR9 (rw): MPCBB privileged configuration for super-block x register
0x50033624 C   FIELD 00w01 PRIV0: PRIV0
0x50033624 C   FIELD 01w01 PRIV1: PRIV1
0x50033624 C   FIELD 02w01 PRIV2: PRIV2
0x50033624 C   FIELD 03w01 PRIV3: PRIV3
0x50033624 C   FIELD 04w01 PRIV4: PRIV4
0x50033624 C   FIELD 05w01 PRIV5: PRIV5
0x50033624 C   FIELD 06w01 PRIV6: PRIV6
0x50033624 C   FIELD 07w01 PRIV7: PRIV7
0x50033624 C   FIELD 08w01 PRIV8: PRIV8
0x50033624 C   FIELD 09w01 PRIV9: PRIV9
0x50033624 C   FIELD 10w01 PRIV10: PRIV10
0x50033624 C   FIELD 11w01 PRIV11: PRIV11
0x50033624 C   FIELD 12w01 PRIV12: PRIV12
0x50033624 C   FIELD 13w01 PRIV13: PRIV13
0x50033624 C   FIELD 14w01 PRIV14: PRIV14
0x50033624 C   FIELD 15w01 PRIV15: PRIV15
0x50033624 C   FIELD 16w01 PRIV16: PRIV16
0x50033624 C   FIELD 17w01 PRIV17: PRIV17
0x50033624 C   FIELD 18w01 PRIV18: PRIV18
0x50033624 C   FIELD 19w01 PRIV19: PRIV19
0x50033624 C   FIELD 20w01 PRIV20: PRIV20
0x50033624 C   FIELD 21w01 PRIV21: PRIV21
0x50033624 C   FIELD 22w01 PRIV22: PRIV22
0x50033624 C   FIELD 23w01 PRIV23: PRIV23
0x50033624 C   FIELD 24w01 PRIV24: PRIV24
0x50033624 C   FIELD 25w01 PRIV25: PRIV25
0x50033624 C   FIELD 26w01 PRIV26: PRIV26
0x50033624 C   FIELD 27w01 PRIV27: PRIV27
0x50033624 C   FIELD 28w01 PRIV28: PRIV28
0x50033624 C   FIELD 29w01 PRIV29: PRIV29
0x50033624 C   FIELD 30w01 PRIV30: PRIV30
0x50033624 C   FIELD 31w01 PRIV31: PRIV31
0x50033628 B  REGISTER MPCBB3_PRIVCFGR10 (rw): MPCBB privileged configuration for super-block x register
0x50033628 C   FIELD 00w01 PRIV0: PRIV0
0x50033628 C   FIELD 01w01 PRIV1: PRIV1
0x50033628 C   FIELD 02w01 PRIV2: PRIV2
0x50033628 C   FIELD 03w01 PRIV3: PRIV3
0x50033628 C   FIELD 04w01 PRIV4: PRIV4
0x50033628 C   FIELD 05w01 PRIV5: PRIV5
0x50033628 C   FIELD 06w01 PRIV6: PRIV6
0x50033628 C   FIELD 07w01 PRIV7: PRIV7
0x50033628 C   FIELD 08w01 PRIV8: PRIV8
0x50033628 C   FIELD 09w01 PRIV9: PRIV9
0x50033628 C   FIELD 10w01 PRIV10: PRIV10
0x50033628 C   FIELD 11w01 PRIV11: PRIV11
0x50033628 C   FIELD 12w01 PRIV12: PRIV12
0x50033628 C   FIELD 13w01 PRIV13: PRIV13
0x50033628 C   FIELD 14w01 PRIV14: PRIV14
0x50033628 C   FIELD 15w01 PRIV15: PRIV15
0x50033628 C   FIELD 16w01 PRIV16: PRIV16
0x50033628 C   FIELD 17w01 PRIV17: PRIV17
0x50033628 C   FIELD 18w01 PRIV18: PRIV18
0x50033628 C   FIELD 19w01 PRIV19: PRIV19
0x50033628 C   FIELD 20w01 PRIV20: PRIV20
0x50033628 C   FIELD 21w01 PRIV21: PRIV21
0x50033628 C   FIELD 22w01 PRIV22: PRIV22
0x50033628 C   FIELD 23w01 PRIV23: PRIV23
0x50033628 C   FIELD 24w01 PRIV24: PRIV24
0x50033628 C   FIELD 25w01 PRIV25: PRIV25
0x50033628 C   FIELD 26w01 PRIV26: PRIV26
0x50033628 C   FIELD 27w01 PRIV27: PRIV27
0x50033628 C   FIELD 28w01 PRIV28: PRIV28
0x50033628 C   FIELD 29w01 PRIV29: PRIV29
0x50033628 C   FIELD 30w01 PRIV30: PRIV30
0x50033628 C   FIELD 31w01 PRIV31: PRIV31
0x5003362C B  REGISTER MPCBB3_PRIVCFGR11 (rw): MPCBB privileged configuration for super-block x register
0x5003362C C   FIELD 00w01 PRIV0: PRIV0
0x5003362C C   FIELD 01w01 PRIV1: PRIV1
0x5003362C C   FIELD 02w01 PRIV2: PRIV2
0x5003362C C   FIELD 03w01 PRIV3: PRIV3
0x5003362C C   FIELD 04w01 PRIV4: PRIV4
0x5003362C C   FIELD 05w01 PRIV5: PRIV5
0x5003362C C   FIELD 06w01 PRIV6: PRIV6
0x5003362C C   FIELD 07w01 PRIV7: PRIV7
0x5003362C C   FIELD 08w01 PRIV8: PRIV8
0x5003362C C   FIELD 09w01 PRIV9: PRIV9
0x5003362C C   FIELD 10w01 PRIV10: PRIV10
0x5003362C C   FIELD 11w01 PRIV11: PRIV11
0x5003362C C   FIELD 12w01 PRIV12: PRIV12
0x5003362C C   FIELD 13w01 PRIV13: PRIV13
0x5003362C C   FIELD 14w01 PRIV14: PRIV14
0x5003362C C   FIELD 15w01 PRIV15: PRIV15
0x5003362C C   FIELD 16w01 PRIV16: PRIV16
0x5003362C C   FIELD 17w01 PRIV17: PRIV17
0x5003362C C   FIELD 18w01 PRIV18: PRIV18
0x5003362C C   FIELD 19w01 PRIV19: PRIV19
0x5003362C C   FIELD 20w01 PRIV20: PRIV20
0x5003362C C   FIELD 21w01 PRIV21: PRIV21
0x5003362C C   FIELD 22w01 PRIV22: PRIV22
0x5003362C C   FIELD 23w01 PRIV23: PRIV23
0x5003362C C   FIELD 24w01 PRIV24: PRIV24
0x5003362C C   FIELD 25w01 PRIV25: PRIV25
0x5003362C C   FIELD 26w01 PRIV26: PRIV26
0x5003362C C   FIELD 27w01 PRIV27: PRIV27
0x5003362C C   FIELD 28w01 PRIV28: PRIV28
0x5003362C C   FIELD 29w01 PRIV29: PRIV29
0x5003362C C   FIELD 30w01 PRIV30: PRIV30
0x5003362C C   FIELD 31w01 PRIV31: PRIV31
0x50033630 B  REGISTER MPCBB3_PRIVCFGR12 (rw): MPCBB privileged configuration for super-block x register
0x50033630 C   FIELD 00w01 PRIV0: PRIV0
0x50033630 C   FIELD 01w01 PRIV1: PRIV1
0x50033630 C   FIELD 02w01 PRIV2: PRIV2
0x50033630 C   FIELD 03w01 PRIV3: PRIV3
0x50033630 C   FIELD 04w01 PRIV4: PRIV4
0x50033630 C   FIELD 05w01 PRIV5: PRIV5
0x50033630 C   FIELD 06w01 PRIV6: PRIV6
0x50033630 C   FIELD 07w01 PRIV7: PRIV7
0x50033630 C   FIELD 08w01 PRIV8: PRIV8
0x50033630 C   FIELD 09w01 PRIV9: PRIV9
0x50033630 C   FIELD 10w01 PRIV10: PRIV10
0x50033630 C   FIELD 11w01 PRIV11: PRIV11
0x50033630 C   FIELD 12w01 PRIV12: PRIV12
0x50033630 C   FIELD 13w01 PRIV13: PRIV13
0x50033630 C   FIELD 14w01 PRIV14: PRIV14
0x50033630 C   FIELD 15w01 PRIV15: PRIV15
0x50033630 C   FIELD 16w01 PRIV16: PRIV16
0x50033630 C   FIELD 17w01 PRIV17: PRIV17
0x50033630 C   FIELD 18w01 PRIV18: PRIV18
0x50033630 C   FIELD 19w01 PRIV19: PRIV19
0x50033630 C   FIELD 20w01 PRIV20: PRIV20
0x50033630 C   FIELD 21w01 PRIV21: PRIV21
0x50033630 C   FIELD 22w01 PRIV22: PRIV22
0x50033630 C   FIELD 23w01 PRIV23: PRIV23
0x50033630 C   FIELD 24w01 PRIV24: PRIV24
0x50033630 C   FIELD 25w01 PRIV25: PRIV25
0x50033630 C   FIELD 26w01 PRIV26: PRIV26
0x50033630 C   FIELD 27w01 PRIV27: PRIV27
0x50033630 C   FIELD 28w01 PRIV28: PRIV28
0x50033630 C   FIELD 29w01 PRIV29: PRIV29
0x50033630 C   FIELD 30w01 PRIV30: PRIV30
0x50033630 C   FIELD 31w01 PRIV31: PRIV31
0x50033634 B  REGISTER MPCBB3_PRIVCFGR13 (rw): MPCBB privileged configuration for super-block x register
0x50033634 C   FIELD 00w01 PRIV0: PRIV0
0x50033634 C   FIELD 01w01 PRIV1: PRIV1
0x50033634 C   FIELD 02w01 PRIV2: PRIV2
0x50033634 C   FIELD 03w01 PRIV3: PRIV3
0x50033634 C   FIELD 04w01 PRIV4: PRIV4
0x50033634 C   FIELD 05w01 PRIV5: PRIV5
0x50033634 C   FIELD 06w01 PRIV6: PRIV6
0x50033634 C   FIELD 07w01 PRIV7: PRIV7
0x50033634 C   FIELD 08w01 PRIV8: PRIV8
0x50033634 C   FIELD 09w01 PRIV9: PRIV9
0x50033634 C   FIELD 10w01 PRIV10: PRIV10
0x50033634 C   FIELD 11w01 PRIV11: PRIV11
0x50033634 C   FIELD 12w01 PRIV12: PRIV12
0x50033634 C   FIELD 13w01 PRIV13: PRIV13
0x50033634 C   FIELD 14w01 PRIV14: PRIV14
0x50033634 C   FIELD 15w01 PRIV15: PRIV15
0x50033634 C   FIELD 16w01 PRIV16: PRIV16
0x50033634 C   FIELD 17w01 PRIV17: PRIV17
0x50033634 C   FIELD 18w01 PRIV18: PRIV18
0x50033634 C   FIELD 19w01 PRIV19: PRIV19
0x50033634 C   FIELD 20w01 PRIV20: PRIV20
0x50033634 C   FIELD 21w01 PRIV21: PRIV21
0x50033634 C   FIELD 22w01 PRIV22: PRIV22
0x50033634 C   FIELD 23w01 PRIV23: PRIV23
0x50033634 C   FIELD 24w01 PRIV24: PRIV24
0x50033634 C   FIELD 25w01 PRIV25: PRIV25
0x50033634 C   FIELD 26w01 PRIV26: PRIV26
0x50033634 C   FIELD 27w01 PRIV27: PRIV27
0x50033634 C   FIELD 28w01 PRIV28: PRIV28
0x50033634 C   FIELD 29w01 PRIV29: PRIV29
0x50033634 C   FIELD 30w01 PRIV30: PRIV30
0x50033634 C   FIELD 31w01 PRIV31: PRIV31
0x50033638 B  REGISTER MPCBB3_PRIVCFGR14 (rw): MPCBB privileged configuration for super-block x register
0x50033638 C   FIELD 00w01 PRIV0: PRIV0
0x50033638 C   FIELD 01w01 PRIV1: PRIV1
0x50033638 C   FIELD 02w01 PRIV2: PRIV2
0x50033638 C   FIELD 03w01 PRIV3: PRIV3
0x50033638 C   FIELD 04w01 PRIV4: PRIV4
0x50033638 C   FIELD 05w01 PRIV5: PRIV5
0x50033638 C   FIELD 06w01 PRIV6: PRIV6
0x50033638 C   FIELD 07w01 PRIV7: PRIV7
0x50033638 C   FIELD 08w01 PRIV8: PRIV8
0x50033638 C   FIELD 09w01 PRIV9: PRIV9
0x50033638 C   FIELD 10w01 PRIV10: PRIV10
0x50033638 C   FIELD 11w01 PRIV11: PRIV11
0x50033638 C   FIELD 12w01 PRIV12: PRIV12
0x50033638 C   FIELD 13w01 PRIV13: PRIV13
0x50033638 C   FIELD 14w01 PRIV14: PRIV14
0x50033638 C   FIELD 15w01 PRIV15: PRIV15
0x50033638 C   FIELD 16w01 PRIV16: PRIV16
0x50033638 C   FIELD 17w01 PRIV17: PRIV17
0x50033638 C   FIELD 18w01 PRIV18: PRIV18
0x50033638 C   FIELD 19w01 PRIV19: PRIV19
0x50033638 C   FIELD 20w01 PRIV20: PRIV20
0x50033638 C   FIELD 21w01 PRIV21: PRIV21
0x50033638 C   FIELD 22w01 PRIV22: PRIV22
0x50033638 C   FIELD 23w01 PRIV23: PRIV23
0x50033638 C   FIELD 24w01 PRIV24: PRIV24
0x50033638 C   FIELD 25w01 PRIV25: PRIV25
0x50033638 C   FIELD 26w01 PRIV26: PRIV26
0x50033638 C   FIELD 27w01 PRIV27: PRIV27
0x50033638 C   FIELD 28w01 PRIV28: PRIV28
0x50033638 C   FIELD 29w01 PRIV29: PRIV29
0x50033638 C   FIELD 30w01 PRIV30: PRIV30
0x50033638 C   FIELD 31w01 PRIV31: PRIV31
0x5003363C B  REGISTER MPCBB3_PRIVCFGR15 (rw): MPCBB privileged configuration for super-block x register
0x5003363C C   FIELD 00w01 PRIV0: PRIV0
0x5003363C C   FIELD 01w01 PRIV1: PRIV1
0x5003363C C   FIELD 02w01 PRIV2: PRIV2
0x5003363C C   FIELD 03w01 PRIV3: PRIV3
0x5003363C C   FIELD 04w01 PRIV4: PRIV4
0x5003363C C   FIELD 05w01 PRIV5: PRIV5
0x5003363C C   FIELD 06w01 PRIV6: PRIV6
0x5003363C C   FIELD 07w01 PRIV7: PRIV7
0x5003363C C   FIELD 08w01 PRIV8: PRIV8
0x5003363C C   FIELD 09w01 PRIV9: PRIV9
0x5003363C C   FIELD 10w01 PRIV10: PRIV10
0x5003363C C   FIELD 11w01 PRIV11: PRIV11
0x5003363C C   FIELD 12w01 PRIV12: PRIV12
0x5003363C C   FIELD 13w01 PRIV13: PRIV13
0x5003363C C   FIELD 14w01 PRIV14: PRIV14
0x5003363C C   FIELD 15w01 PRIV15: PRIV15
0x5003363C C   FIELD 16w01 PRIV16: PRIV16
0x5003363C C   FIELD 17w01 PRIV17: PRIV17
0x5003363C C   FIELD 18w01 PRIV18: PRIV18
0x5003363C C   FIELD 19w01 PRIV19: PRIV19
0x5003363C C   FIELD 20w01 PRIV20: PRIV20
0x5003363C C   FIELD 21w01 PRIV21: PRIV21
0x5003363C C   FIELD 22w01 PRIV22: PRIV22
0x5003363C C   FIELD 23w01 PRIV23: PRIV23
0x5003363C C   FIELD 24w01 PRIV24: PRIV24
0x5003363C C   FIELD 25w01 PRIV25: PRIV25
0x5003363C C   FIELD 26w01 PRIV26: PRIV26
0x5003363C C   FIELD 27w01 PRIV27: PRIV27
0x5003363C C   FIELD 28w01 PRIV28: PRIV28
0x5003363C C   FIELD 29w01 PRIV29: PRIV29
0x5003363C C   FIELD 30w01 PRIV30: PRIV30
0x5003363C C   FIELD 31w01 PRIV31: PRIV31
0x50033640 B  REGISTER MPCBB3_PRIVCFGR16 (rw): MPCBB privileged configuration for super-block x register
0x50033640 C   FIELD 00w01 PRIV0: PRIV0
0x50033640 C   FIELD 01w01 PRIV1: PRIV1
0x50033640 C   FIELD 02w01 PRIV2: PRIV2
0x50033640 C   FIELD 03w01 PRIV3: PRIV3
0x50033640 C   FIELD 04w01 PRIV4: PRIV4
0x50033640 C   FIELD 05w01 PRIV5: PRIV5
0x50033640 C   FIELD 06w01 PRIV6: PRIV6
0x50033640 C   FIELD 07w01 PRIV7: PRIV7
0x50033640 C   FIELD 08w01 PRIV8: PRIV8
0x50033640 C   FIELD 09w01 PRIV9: PRIV9
0x50033640 C   FIELD 10w01 PRIV10: PRIV10
0x50033640 C   FIELD 11w01 PRIV11: PRIV11
0x50033640 C   FIELD 12w01 PRIV12: PRIV12
0x50033640 C   FIELD 13w01 PRIV13: PRIV13
0x50033640 C   FIELD 14w01 PRIV14: PRIV14
0x50033640 C   FIELD 15w01 PRIV15: PRIV15
0x50033640 C   FIELD 16w01 PRIV16: PRIV16
0x50033640 C   FIELD 17w01 PRIV17: PRIV17
0x50033640 C   FIELD 18w01 PRIV18: PRIV18
0x50033640 C   FIELD 19w01 PRIV19: PRIV19
0x50033640 C   FIELD 20w01 PRIV20: PRIV20
0x50033640 C   FIELD 21w01 PRIV21: PRIV21
0x50033640 C   FIELD 22w01 PRIV22: PRIV22
0x50033640 C   FIELD 23w01 PRIV23: PRIV23
0x50033640 C   FIELD 24w01 PRIV24: PRIV24
0x50033640 C   FIELD 25w01 PRIV25: PRIV25
0x50033640 C   FIELD 26w01 PRIV26: PRIV26
0x50033640 C   FIELD 27w01 PRIV27: PRIV27
0x50033640 C   FIELD 28w01 PRIV28: PRIV28
0x50033640 C   FIELD 29w01 PRIV29: PRIV29
0x50033640 C   FIELD 30w01 PRIV30: PRIV30
0x50033640 C   FIELD 31w01 PRIV31: PRIV31
0x50033644 B  REGISTER MPCBB3_PRIVCFGR17 (rw): MPCBB privileged configuration for super-block x register
0x50033644 C   FIELD 00w01 PRIV0: PRIV0
0x50033644 C   FIELD 01w01 PRIV1: PRIV1
0x50033644 C   FIELD 02w01 PRIV2: PRIV2
0x50033644 C   FIELD 03w01 PRIV3: PRIV3
0x50033644 C   FIELD 04w01 PRIV4: PRIV4
0x50033644 C   FIELD 05w01 PRIV5: PRIV5
0x50033644 C   FIELD 06w01 PRIV6: PRIV6
0x50033644 C   FIELD 07w01 PRIV7: PRIV7
0x50033644 C   FIELD 08w01 PRIV8: PRIV8
0x50033644 C   FIELD 09w01 PRIV9: PRIV9
0x50033644 C   FIELD 10w01 PRIV10: PRIV10
0x50033644 C   FIELD 11w01 PRIV11: PRIV11
0x50033644 C   FIELD 12w01 PRIV12: PRIV12
0x50033644 C   FIELD 13w01 PRIV13: PRIV13
0x50033644 C   FIELD 14w01 PRIV14: PRIV14
0x50033644 C   FIELD 15w01 PRIV15: PRIV15
0x50033644 C   FIELD 16w01 PRIV16: PRIV16
0x50033644 C   FIELD 17w01 PRIV17: PRIV17
0x50033644 C   FIELD 18w01 PRIV18: PRIV18
0x50033644 C   FIELD 19w01 PRIV19: PRIV19
0x50033644 C   FIELD 20w01 PRIV20: PRIV20
0x50033644 C   FIELD 21w01 PRIV21: PRIV21
0x50033644 C   FIELD 22w01 PRIV22: PRIV22
0x50033644 C   FIELD 23w01 PRIV23: PRIV23
0x50033644 C   FIELD 24w01 PRIV24: PRIV24
0x50033644 C   FIELD 25w01 PRIV25: PRIV25
0x50033644 C   FIELD 26w01 PRIV26: PRIV26
0x50033644 C   FIELD 27w01 PRIV27: PRIV27
0x50033644 C   FIELD 28w01 PRIV28: PRIV28
0x50033644 C   FIELD 29w01 PRIV29: PRIV29
0x50033644 C   FIELD 30w01 PRIV30: PRIV30
0x50033644 C   FIELD 31w01 PRIV31: PRIV31
0x50033648 B  REGISTER MPCBB3_PRIVCFGR18 (rw): MPCBB privileged configuration for super-block x register
0x50033648 C   FIELD 00w01 PRIV0: PRIV0
0x50033648 C   FIELD 01w01 PRIV1: PRIV1
0x50033648 C   FIELD 02w01 PRIV2: PRIV2
0x50033648 C   FIELD 03w01 PRIV3: PRIV3
0x50033648 C   FIELD 04w01 PRIV4: PRIV4
0x50033648 C   FIELD 05w01 PRIV5: PRIV5
0x50033648 C   FIELD 06w01 PRIV6: PRIV6
0x50033648 C   FIELD 07w01 PRIV7: PRIV7
0x50033648 C   FIELD 08w01 PRIV8: PRIV8
0x50033648 C   FIELD 09w01 PRIV9: PRIV9
0x50033648 C   FIELD 10w01 PRIV10: PRIV10
0x50033648 C   FIELD 11w01 PRIV11: PRIV11
0x50033648 C   FIELD 12w01 PRIV12: PRIV12
0x50033648 C   FIELD 13w01 PRIV13: PRIV13
0x50033648 C   FIELD 14w01 PRIV14: PRIV14
0x50033648 C   FIELD 15w01 PRIV15: PRIV15
0x50033648 C   FIELD 16w01 PRIV16: PRIV16
0x50033648 C   FIELD 17w01 PRIV17: PRIV17
0x50033648 C   FIELD 18w01 PRIV18: PRIV18
0x50033648 C   FIELD 19w01 PRIV19: PRIV19
0x50033648 C   FIELD 20w01 PRIV20: PRIV20
0x50033648 C   FIELD 21w01 PRIV21: PRIV21
0x50033648 C   FIELD 22w01 PRIV22: PRIV22
0x50033648 C   FIELD 23w01 PRIV23: PRIV23
0x50033648 C   FIELD 24w01 PRIV24: PRIV24
0x50033648 C   FIELD 25w01 PRIV25: PRIV25
0x50033648 C   FIELD 26w01 PRIV26: PRIV26
0x50033648 C   FIELD 27w01 PRIV27: PRIV27
0x50033648 C   FIELD 28w01 PRIV28: PRIV28
0x50033648 C   FIELD 29w01 PRIV29: PRIV29
0x50033648 C   FIELD 30w01 PRIV30: PRIV30
0x50033648 C   FIELD 31w01 PRIV31: PRIV31
0x5003364C B  REGISTER MPCBB3_PRIVCFGR19 (rw): MPCBB privileged configuration for super-block x register
0x5003364C C   FIELD 00w01 PRIV0: PRIV0
0x5003364C C   FIELD 01w01 PRIV1: PRIV1
0x5003364C C   FIELD 02w01 PRIV2: PRIV2
0x5003364C C   FIELD 03w01 PRIV3: PRIV3
0x5003364C C   FIELD 04w01 PRIV4: PRIV4
0x5003364C C   FIELD 05w01 PRIV5: PRIV5
0x5003364C C   FIELD 06w01 PRIV6: PRIV6
0x5003364C C   FIELD 07w01 PRIV7: PRIV7
0x5003364C C   FIELD 08w01 PRIV8: PRIV8
0x5003364C C   FIELD 09w01 PRIV9: PRIV9
0x5003364C C   FIELD 10w01 PRIV10: PRIV10
0x5003364C C   FIELD 11w01 PRIV11: PRIV11
0x5003364C C   FIELD 12w01 PRIV12: PRIV12
0x5003364C C   FIELD 13w01 PRIV13: PRIV13
0x5003364C C   FIELD 14w01 PRIV14: PRIV14
0x5003364C C   FIELD 15w01 PRIV15: PRIV15
0x5003364C C   FIELD 16w01 PRIV16: PRIV16
0x5003364C C   FIELD 17w01 PRIV17: PRIV17
0x5003364C C   FIELD 18w01 PRIV18: PRIV18
0x5003364C C   FIELD 19w01 PRIV19: PRIV19
0x5003364C C   FIELD 20w01 PRIV20: PRIV20
0x5003364C C   FIELD 21w01 PRIV21: PRIV21
0x5003364C C   FIELD 22w01 PRIV22: PRIV22
0x5003364C C   FIELD 23w01 PRIV23: PRIV23
0x5003364C C   FIELD 24w01 PRIV24: PRIV24
0x5003364C C   FIELD 25w01 PRIV25: PRIV25
0x5003364C C   FIELD 26w01 PRIV26: PRIV26
0x5003364C C   FIELD 27w01 PRIV27: PRIV27
0x5003364C C   FIELD 28w01 PRIV28: PRIV28
0x5003364C C   FIELD 29w01 PRIV29: PRIV29
0x5003364C C   FIELD 30w01 PRIV30: PRIV30
0x5003364C C   FIELD 31w01 PRIV31: PRIV31
0x50033650 B  REGISTER MPCBB3_PRIVCFGR20 (rw): MPCBB privileged configuration for super-block x register
0x50033650 C   FIELD 00w01 PRIV0: PRIV0
0x50033650 C   FIELD 01w01 PRIV1: PRIV1
0x50033650 C   FIELD 02w01 PRIV2: PRIV2
0x50033650 C   FIELD 03w01 PRIV3: PRIV3
0x50033650 C   FIELD 04w01 PRIV4: PRIV4
0x50033650 C   FIELD 05w01 PRIV5: PRIV5
0x50033650 C   FIELD 06w01 PRIV6: PRIV6
0x50033650 C   FIELD 07w01 PRIV7: PRIV7
0x50033650 C   FIELD 08w01 PRIV8: PRIV8
0x50033650 C   FIELD 09w01 PRIV9: PRIV9
0x50033650 C   FIELD 10w01 PRIV10: PRIV10
0x50033650 C   FIELD 11w01 PRIV11: PRIV11
0x50033650 C   FIELD 12w01 PRIV12: PRIV12
0x50033650 C   FIELD 13w01 PRIV13: PRIV13
0x50033650 C   FIELD 14w01 PRIV14: PRIV14
0x50033650 C   FIELD 15w01 PRIV15: PRIV15
0x50033650 C   FIELD 16w01 PRIV16: PRIV16
0x50033650 C   FIELD 17w01 PRIV17: PRIV17
0x50033650 C   FIELD 18w01 PRIV18: PRIV18
0x50033650 C   FIELD 19w01 PRIV19: PRIV19
0x50033650 C   FIELD 20w01 PRIV20: PRIV20
0x50033650 C   FIELD 21w01 PRIV21: PRIV21
0x50033650 C   FIELD 22w01 PRIV22: PRIV22
0x50033650 C   FIELD 23w01 PRIV23: PRIV23
0x50033650 C   FIELD 24w01 PRIV24: PRIV24
0x50033650 C   FIELD 25w01 PRIV25: PRIV25
0x50033650 C   FIELD 26w01 PRIV26: PRIV26
0x50033650 C   FIELD 27w01 PRIV27: PRIV27
0x50033650 C   FIELD 28w01 PRIV28: PRIV28
0x50033650 C   FIELD 29w01 PRIV29: PRIV29
0x50033650 C   FIELD 30w01 PRIV30: PRIV30
0x50033650 C   FIELD 31w01 PRIV31: PRIV31
0x50033654 B  REGISTER MPCBB3_PRIVCFGR21 (rw): MPCBB privileged configuration for super-block x register
0x50033654 C   FIELD 00w01 PRIV0: PRIV0
0x50033654 C   FIELD 01w01 PRIV1: PRIV1
0x50033654 C   FIELD 02w01 PRIV2: PRIV2
0x50033654 C   FIELD 03w01 PRIV3: PRIV3
0x50033654 C   FIELD 04w01 PRIV4: PRIV4
0x50033654 C   FIELD 05w01 PRIV5: PRIV5
0x50033654 C   FIELD 06w01 PRIV6: PRIV6
0x50033654 C   FIELD 07w01 PRIV7: PRIV7
0x50033654 C   FIELD 08w01 PRIV8: PRIV8
0x50033654 C   FIELD 09w01 PRIV9: PRIV9
0x50033654 C   FIELD 10w01 PRIV10: PRIV10
0x50033654 C   FIELD 11w01 PRIV11: PRIV11
0x50033654 C   FIELD 12w01 PRIV12: PRIV12
0x50033654 C   FIELD 13w01 PRIV13: PRIV13
0x50033654 C   FIELD 14w01 PRIV14: PRIV14
0x50033654 C   FIELD 15w01 PRIV15: PRIV15
0x50033654 C   FIELD 16w01 PRIV16: PRIV16
0x50033654 C   FIELD 17w01 PRIV17: PRIV17
0x50033654 C   FIELD 18w01 PRIV18: PRIV18
0x50033654 C   FIELD 19w01 PRIV19: PRIV19
0x50033654 C   FIELD 20w01 PRIV20: PRIV20
0x50033654 C   FIELD 21w01 PRIV21: PRIV21
0x50033654 C   FIELD 22w01 PRIV22: PRIV22
0x50033654 C   FIELD 23w01 PRIV23: PRIV23
0x50033654 C   FIELD 24w01 PRIV24: PRIV24
0x50033654 C   FIELD 25w01 PRIV25: PRIV25
0x50033654 C   FIELD 26w01 PRIV26: PRIV26
0x50033654 C   FIELD 27w01 PRIV27: PRIV27
0x50033654 C   FIELD 28w01 PRIV28: PRIV28
0x50033654 C   FIELD 29w01 PRIV29: PRIV29
0x50033654 C   FIELD 30w01 PRIV30: PRIV30
0x50033654 C   FIELD 31w01 PRIV31: PRIV31
0x50033658 B  REGISTER MPCBB3_PRIVCFGR22 (rw): MPCBB privileged configuration for super-block x register
0x50033658 C   FIELD 00w01 PRIV0: PRIV0
0x50033658 C   FIELD 01w01 PRIV1: PRIV1
0x50033658 C   FIELD 02w01 PRIV2: PRIV2
0x50033658 C   FIELD 03w01 PRIV3: PRIV3
0x50033658 C   FIELD 04w01 PRIV4: PRIV4
0x50033658 C   FIELD 05w01 PRIV5: PRIV5
0x50033658 C   FIELD 06w01 PRIV6: PRIV6
0x50033658 C   FIELD 07w01 PRIV7: PRIV7
0x50033658 C   FIELD 08w01 PRIV8: PRIV8
0x50033658 C   FIELD 09w01 PRIV9: PRIV9
0x50033658 C   FIELD 10w01 PRIV10: PRIV10
0x50033658 C   FIELD 11w01 PRIV11: PRIV11
0x50033658 C   FIELD 12w01 PRIV12: PRIV12
0x50033658 C   FIELD 13w01 PRIV13: PRIV13
0x50033658 C   FIELD 14w01 PRIV14: PRIV14
0x50033658 C   FIELD 15w01 PRIV15: PRIV15
0x50033658 C   FIELD 16w01 PRIV16: PRIV16
0x50033658 C   FIELD 17w01 PRIV17: PRIV17
0x50033658 C   FIELD 18w01 PRIV18: PRIV18
0x50033658 C   FIELD 19w01 PRIV19: PRIV19
0x50033658 C   FIELD 20w01 PRIV20: PRIV20
0x50033658 C   FIELD 21w01 PRIV21: PRIV21
0x50033658 C   FIELD 22w01 PRIV22: PRIV22
0x50033658 C   FIELD 23w01 PRIV23: PRIV23
0x50033658 C   FIELD 24w01 PRIV24: PRIV24
0x50033658 C   FIELD 25w01 PRIV25: PRIV25
0x50033658 C   FIELD 26w01 PRIV26: PRIV26
0x50033658 C   FIELD 27w01 PRIV27: PRIV27
0x50033658 C   FIELD 28w01 PRIV28: PRIV28
0x50033658 C   FIELD 29w01 PRIV29: PRIV29
0x50033658 C   FIELD 30w01 PRIV30: PRIV30
0x50033658 C   FIELD 31w01 PRIV31: PRIV31
0x5003365C B  REGISTER MPCBB3_PRIVCFGR23 (rw): MPCBB privileged configuration for super-block x register
0x5003365C C   FIELD 00w01 PRIV0: PRIV0
0x5003365C C   FIELD 01w01 PRIV1: PRIV1
0x5003365C C   FIELD 02w01 PRIV2: PRIV2
0x5003365C C   FIELD 03w01 PRIV3: PRIV3
0x5003365C C   FIELD 04w01 PRIV4: PRIV4
0x5003365C C   FIELD 05w01 PRIV5: PRIV5
0x5003365C C   FIELD 06w01 PRIV6: PRIV6
0x5003365C C   FIELD 07w01 PRIV7: PRIV7
0x5003365C C   FIELD 08w01 PRIV8: PRIV8
0x5003365C C   FIELD 09w01 PRIV9: PRIV9
0x5003365C C   FIELD 10w01 PRIV10: PRIV10
0x5003365C C   FIELD 11w01 PRIV11: PRIV11
0x5003365C C   FIELD 12w01 PRIV12: PRIV12
0x5003365C C   FIELD 13w01 PRIV13: PRIV13
0x5003365C C   FIELD 14w01 PRIV14: PRIV14
0x5003365C C   FIELD 15w01 PRIV15: PRIV15
0x5003365C C   FIELD 16w01 PRIV16: PRIV16
0x5003365C C   FIELD 17w01 PRIV17: PRIV17
0x5003365C C   FIELD 18w01 PRIV18: PRIV18
0x5003365C C   FIELD 19w01 PRIV19: PRIV19
0x5003365C C   FIELD 20w01 PRIV20: PRIV20
0x5003365C C   FIELD 21w01 PRIV21: PRIV21
0x5003365C C   FIELD 22w01 PRIV22: PRIV22
0x5003365C C   FIELD 23w01 PRIV23: PRIV23
0x5003365C C   FIELD 24w01 PRIV24: PRIV24
0x5003365C C   FIELD 25w01 PRIV25: PRIV25
0x5003365C C   FIELD 26w01 PRIV26: PRIV26
0x5003365C C   FIELD 27w01 PRIV27: PRIV27
0x5003365C C   FIELD 28w01 PRIV28: PRIV28
0x5003365C C   FIELD 29w01 PRIV29: PRIV29
0x5003365C C   FIELD 30w01 PRIV30: PRIV30
0x5003365C C   FIELD 31w01 PRIV31: PRIV31
0x50033660 B  REGISTER MPCBB3_PRIVCFGR24 (rw): MPCBB privileged configuration for super-block x register
0x50033660 C   FIELD 00w01 PRIV0: PRIV0
0x50033660 C   FIELD 01w01 PRIV1: PRIV1
0x50033660 C   FIELD 02w01 PRIV2: PRIV2
0x50033660 C   FIELD 03w01 PRIV3: PRIV3
0x50033660 C   FIELD 04w01 PRIV4: PRIV4
0x50033660 C   FIELD 05w01 PRIV5: PRIV5
0x50033660 C   FIELD 06w01 PRIV6: PRIV6
0x50033660 C   FIELD 07w01 PRIV7: PRIV7
0x50033660 C   FIELD 08w01 PRIV8: PRIV8
0x50033660 C   FIELD 09w01 PRIV9: PRIV9
0x50033660 C   FIELD 10w01 PRIV10: PRIV10
0x50033660 C   FIELD 11w01 PRIV11: PRIV11
0x50033660 C   FIELD 12w01 PRIV12: PRIV12
0x50033660 C   FIELD 13w01 PRIV13: PRIV13
0x50033660 C   FIELD 14w01 PRIV14: PRIV14
0x50033660 C   FIELD 15w01 PRIV15: PRIV15
0x50033660 C   FIELD 16w01 PRIV16: PRIV16
0x50033660 C   FIELD 17w01 PRIV17: PRIV17
0x50033660 C   FIELD 18w01 PRIV18: PRIV18
0x50033660 C   FIELD 19w01 PRIV19: PRIV19
0x50033660 C   FIELD 20w01 PRIV20: PRIV20
0x50033660 C   FIELD 21w01 PRIV21: PRIV21
0x50033660 C   FIELD 22w01 PRIV22: PRIV22
0x50033660 C   FIELD 23w01 PRIV23: PRIV23
0x50033660 C   FIELD 24w01 PRIV24: PRIV24
0x50033660 C   FIELD 25w01 PRIV25: PRIV25
0x50033660 C   FIELD 26w01 PRIV26: PRIV26
0x50033660 C   FIELD 27w01 PRIV27: PRIV27
0x50033660 C   FIELD 28w01 PRIV28: PRIV28
0x50033660 C   FIELD 29w01 PRIV29: PRIV29
0x50033660 C   FIELD 30w01 PRIV30: PRIV30
0x50033660 C   FIELD 31w01 PRIV31: PRIV31
0x50033664 B  REGISTER MPCBB3_PRIVCFGR25 (rw): MPCBB privileged configuration for super-block x register
0x50033664 C   FIELD 00w01 PRIV0: PRIV0
0x50033664 C   FIELD 01w01 PRIV1: PRIV1
0x50033664 C   FIELD 02w01 PRIV2: PRIV2
0x50033664 C   FIELD 03w01 PRIV3: PRIV3
0x50033664 C   FIELD 04w01 PRIV4: PRIV4
0x50033664 C   FIELD 05w01 PRIV5: PRIV5
0x50033664 C   FIELD 06w01 PRIV6: PRIV6
0x50033664 C   FIELD 07w01 PRIV7: PRIV7
0x50033664 C   FIELD 08w01 PRIV8: PRIV8
0x50033664 C   FIELD 09w01 PRIV9: PRIV9
0x50033664 C   FIELD 10w01 PRIV10: PRIV10
0x50033664 C   FIELD 11w01 PRIV11: PRIV11
0x50033664 C   FIELD 12w01 PRIV12: PRIV12
0x50033664 C   FIELD 13w01 PRIV13: PRIV13
0x50033664 C   FIELD 14w01 PRIV14: PRIV14
0x50033664 C   FIELD 15w01 PRIV15: PRIV15
0x50033664 C   FIELD 16w01 PRIV16: PRIV16
0x50033664 C   FIELD 17w01 PRIV17: PRIV17
0x50033664 C   FIELD 18w01 PRIV18: PRIV18
0x50033664 C   FIELD 19w01 PRIV19: PRIV19
0x50033664 C   FIELD 20w01 PRIV20: PRIV20
0x50033664 C   FIELD 21w01 PRIV21: PRIV21
0x50033664 C   FIELD 22w01 PRIV22: PRIV22
0x50033664 C   FIELD 23w01 PRIV23: PRIV23
0x50033664 C   FIELD 24w01 PRIV24: PRIV24
0x50033664 C   FIELD 25w01 PRIV25: PRIV25
0x50033664 C   FIELD 26w01 PRIV26: PRIV26
0x50033664 C   FIELD 27w01 PRIV27: PRIV27
0x50033664 C   FIELD 28w01 PRIV28: PRIV28
0x50033664 C   FIELD 29w01 PRIV29: PRIV29
0x50033664 C   FIELD 30w01 PRIV30: PRIV30
0x50033664 C   FIELD 31w01 PRIV31: PRIV31
0x50033668 B  REGISTER MPCBB3_PRIVCFGR26 (rw): MPCBB privileged configuration for super-block x register
0x50033668 C   FIELD 00w01 PRIV0: PRIV0
0x50033668 C   FIELD 01w01 PRIV1: PRIV1
0x50033668 C   FIELD 02w01 PRIV2: PRIV2
0x50033668 C   FIELD 03w01 PRIV3: PRIV3
0x50033668 C   FIELD 04w01 PRIV4: PRIV4
0x50033668 C   FIELD 05w01 PRIV5: PRIV5
0x50033668 C   FIELD 06w01 PRIV6: PRIV6
0x50033668 C   FIELD 07w01 PRIV7: PRIV7
0x50033668 C   FIELD 08w01 PRIV8: PRIV8
0x50033668 C   FIELD 09w01 PRIV9: PRIV9
0x50033668 C   FIELD 10w01 PRIV10: PRIV10
0x50033668 C   FIELD 11w01 PRIV11: PRIV11
0x50033668 C   FIELD 12w01 PRIV12: PRIV12
0x50033668 C   FIELD 13w01 PRIV13: PRIV13
0x50033668 C   FIELD 14w01 PRIV14: PRIV14
0x50033668 C   FIELD 15w01 PRIV15: PRIV15
0x50033668 C   FIELD 16w01 PRIV16: PRIV16
0x50033668 C   FIELD 17w01 PRIV17: PRIV17
0x50033668 C   FIELD 18w01 PRIV18: PRIV18
0x50033668 C   FIELD 19w01 PRIV19: PRIV19
0x50033668 C   FIELD 20w01 PRIV20: PRIV20
0x50033668 C   FIELD 21w01 PRIV21: PRIV21
0x50033668 C   FIELD 22w01 PRIV22: PRIV22
0x50033668 C   FIELD 23w01 PRIV23: PRIV23
0x50033668 C   FIELD 24w01 PRIV24: PRIV24
0x50033668 C   FIELD 25w01 PRIV25: PRIV25
0x50033668 C   FIELD 26w01 PRIV26: PRIV26
0x50033668 C   FIELD 27w01 PRIV27: PRIV27
0x50033668 C   FIELD 28w01 PRIV28: PRIV28
0x50033668 C   FIELD 29w01 PRIV29: PRIV29
0x50033668 C   FIELD 30w01 PRIV30: PRIV30
0x50033668 C   FIELD 31w01 PRIV31: PRIV31
0x5003366C B  REGISTER MPCBB3_PRIVCFGR27 (rw): MPCBB privileged configuration for super-block x register
0x5003366C C   FIELD 00w01 PRIV0: PRIV0
0x5003366C C   FIELD 01w01 PRIV1: PRIV1
0x5003366C C   FIELD 02w01 PRIV2: PRIV2
0x5003366C C   FIELD 03w01 PRIV3: PRIV3
0x5003366C C   FIELD 04w01 PRIV4: PRIV4
0x5003366C C   FIELD 05w01 PRIV5: PRIV5
0x5003366C C   FIELD 06w01 PRIV6: PRIV6
0x5003366C C   FIELD 07w01 PRIV7: PRIV7
0x5003366C C   FIELD 08w01 PRIV8: PRIV8
0x5003366C C   FIELD 09w01 PRIV9: PRIV9
0x5003366C C   FIELD 10w01 PRIV10: PRIV10
0x5003366C C   FIELD 11w01 PRIV11: PRIV11
0x5003366C C   FIELD 12w01 PRIV12: PRIV12
0x5003366C C   FIELD 13w01 PRIV13: PRIV13
0x5003366C C   FIELD 14w01 PRIV14: PRIV14
0x5003366C C   FIELD 15w01 PRIV15: PRIV15
0x5003366C C   FIELD 16w01 PRIV16: PRIV16
0x5003366C C   FIELD 17w01 PRIV17: PRIV17
0x5003366C C   FIELD 18w01 PRIV18: PRIV18
0x5003366C C   FIELD 19w01 PRIV19: PRIV19
0x5003366C C   FIELD 20w01 PRIV20: PRIV20
0x5003366C C   FIELD 21w01 PRIV21: PRIV21
0x5003366C C   FIELD 22w01 PRIV22: PRIV22
0x5003366C C   FIELD 23w01 PRIV23: PRIV23
0x5003366C C   FIELD 24w01 PRIV24: PRIV24
0x5003366C C   FIELD 25w01 PRIV25: PRIV25
0x5003366C C   FIELD 26w01 PRIV26: PRIV26
0x5003366C C   FIELD 27w01 PRIV27: PRIV27
0x5003366C C   FIELD 28w01 PRIV28: PRIV28
0x5003366C C   FIELD 29w01 PRIV29: PRIV29
0x5003366C C   FIELD 30w01 PRIV30: PRIV30
0x5003366C C   FIELD 31w01 PRIV31: PRIV31
0x50033670 B  REGISTER MPCBB3_PRIVCFGR28 (rw): MPCBB privileged configuration for super-block x register
0x50033670 C   FIELD 00w01 PRIV0: PRIV0
0x50033670 C   FIELD 01w01 PRIV1: PRIV1
0x50033670 C   FIELD 02w01 PRIV2: PRIV2
0x50033670 C   FIELD 03w01 PRIV3: PRIV3
0x50033670 C   FIELD 04w01 PRIV4: PRIV4
0x50033670 C   FIELD 05w01 PRIV5: PRIV5
0x50033670 C   FIELD 06w01 PRIV6: PRIV6
0x50033670 C   FIELD 07w01 PRIV7: PRIV7
0x50033670 C   FIELD 08w01 PRIV8: PRIV8
0x50033670 C   FIELD 09w01 PRIV9: PRIV9
0x50033670 C   FIELD 10w01 PRIV10: PRIV10
0x50033670 C   FIELD 11w01 PRIV11: PRIV11
0x50033670 C   FIELD 12w01 PRIV12: PRIV12
0x50033670 C   FIELD 13w01 PRIV13: PRIV13
0x50033670 C   FIELD 14w01 PRIV14: PRIV14
0x50033670 C   FIELD 15w01 PRIV15: PRIV15
0x50033670 C   FIELD 16w01 PRIV16: PRIV16
0x50033670 C   FIELD 17w01 PRIV17: PRIV17
0x50033670 C   FIELD 18w01 PRIV18: PRIV18
0x50033670 C   FIELD 19w01 PRIV19: PRIV19
0x50033670 C   FIELD 20w01 PRIV20: PRIV20
0x50033670 C   FIELD 21w01 PRIV21: PRIV21
0x50033670 C   FIELD 22w01 PRIV22: PRIV22
0x50033670 C   FIELD 23w01 PRIV23: PRIV23
0x50033670 C   FIELD 24w01 PRIV24: PRIV24
0x50033670 C   FIELD 25w01 PRIV25: PRIV25
0x50033670 C   FIELD 26w01 PRIV26: PRIV26
0x50033670 C   FIELD 27w01 PRIV27: PRIV27
0x50033670 C   FIELD 28w01 PRIV28: PRIV28
0x50033670 C   FIELD 29w01 PRIV29: PRIV29
0x50033670 C   FIELD 30w01 PRIV30: PRIV30
0x50033670 C   FIELD 31w01 PRIV31: PRIV31
0x50033674 B  REGISTER MPCBB3_PRIVCFGR29 (rw): MPCBB privileged configuration for super-block x register
0x50033674 C   FIELD 00w01 PRIV0: PRIV0
0x50033674 C   FIELD 01w01 PRIV1: PRIV1
0x50033674 C   FIELD 02w01 PRIV2: PRIV2
0x50033674 C   FIELD 03w01 PRIV3: PRIV3
0x50033674 C   FIELD 04w01 PRIV4: PRIV4
0x50033674 C   FIELD 05w01 PRIV5: PRIV5
0x50033674 C   FIELD 06w01 PRIV6: PRIV6
0x50033674 C   FIELD 07w01 PRIV7: PRIV7
0x50033674 C   FIELD 08w01 PRIV8: PRIV8
0x50033674 C   FIELD 09w01 PRIV9: PRIV9
0x50033674 C   FIELD 10w01 PRIV10: PRIV10
0x50033674 C   FIELD 11w01 PRIV11: PRIV11
0x50033674 C   FIELD 12w01 PRIV12: PRIV12
0x50033674 C   FIELD 13w01 PRIV13: PRIV13
0x50033674 C   FIELD 14w01 PRIV14: PRIV14
0x50033674 C   FIELD 15w01 PRIV15: PRIV15
0x50033674 C   FIELD 16w01 PRIV16: PRIV16
0x50033674 C   FIELD 17w01 PRIV17: PRIV17
0x50033674 C   FIELD 18w01 PRIV18: PRIV18
0x50033674 C   FIELD 19w01 PRIV19: PRIV19
0x50033674 C   FIELD 20w01 PRIV20: PRIV20
0x50033674 C   FIELD 21w01 PRIV21: PRIV21
0x50033674 C   FIELD 22w01 PRIV22: PRIV22
0x50033674 C   FIELD 23w01 PRIV23: PRIV23
0x50033674 C   FIELD 24w01 PRIV24: PRIV24
0x50033674 C   FIELD 25w01 PRIV25: PRIV25
0x50033674 C   FIELD 26w01 PRIV26: PRIV26
0x50033674 C   FIELD 27w01 PRIV27: PRIV27
0x50033674 C   FIELD 28w01 PRIV28: PRIV28
0x50033674 C   FIELD 29w01 PRIV29: PRIV29
0x50033674 C   FIELD 30w01 PRIV30: PRIV30
0x50033674 C   FIELD 31w01 PRIV31: PRIV31
0x50033678 B  REGISTER MPCBB3_PRIVCFGR30 (rw): MPCBB privileged configuration for super-block x register
0x50033678 C   FIELD 00w01 PRIV0: PRIV0
0x50033678 C   FIELD 01w01 PRIV1: PRIV1
0x50033678 C   FIELD 02w01 PRIV2: PRIV2
0x50033678 C   FIELD 03w01 PRIV3: PRIV3
0x50033678 C   FIELD 04w01 PRIV4: PRIV4
0x50033678 C   FIELD 05w01 PRIV5: PRIV5
0x50033678 C   FIELD 06w01 PRIV6: PRIV6
0x50033678 C   FIELD 07w01 PRIV7: PRIV7
0x50033678 C   FIELD 08w01 PRIV8: PRIV8
0x50033678 C   FIELD 09w01 PRIV9: PRIV9
0x50033678 C   FIELD 10w01 PRIV10: PRIV10
0x50033678 C   FIELD 11w01 PRIV11: PRIV11
0x50033678 C   FIELD 12w01 PRIV12: PRIV12
0x50033678 C   FIELD 13w01 PRIV13: PRIV13
0x50033678 C   FIELD 14w01 PRIV14: PRIV14
0x50033678 C   FIELD 15w01 PRIV15: PRIV15
0x50033678 C   FIELD 16w01 PRIV16: PRIV16
0x50033678 C   FIELD 17w01 PRIV17: PRIV17
0x50033678 C   FIELD 18w01 PRIV18: PRIV18
0x50033678 C   FIELD 19w01 PRIV19: PRIV19
0x50033678 C   FIELD 20w01 PRIV20: PRIV20
0x50033678 C   FIELD 21w01 PRIV21: PRIV21
0x50033678 C   FIELD 22w01 PRIV22: PRIV22
0x50033678 C   FIELD 23w01 PRIV23: PRIV23
0x50033678 C   FIELD 24w01 PRIV24: PRIV24
0x50033678 C   FIELD 25w01 PRIV25: PRIV25
0x50033678 C   FIELD 26w01 PRIV26: PRIV26
0x50033678 C   FIELD 27w01 PRIV27: PRIV27
0x50033678 C   FIELD 28w01 PRIV28: PRIV28
0x50033678 C   FIELD 29w01 PRIV29: PRIV29
0x50033678 C   FIELD 30w01 PRIV30: PRIV30
0x50033678 C   FIELD 31w01 PRIV31: PRIV31
0x5003367C B  REGISTER MPCBB3_PRIVCFGR31 (rw): MPCBB privileged configuration for super-block x register
0x5003367C C   FIELD 00w01 PRIV0: PRIV0
0x5003367C C   FIELD 01w01 PRIV1: PRIV1
0x5003367C C   FIELD 02w01 PRIV2: PRIV2
0x5003367C C   FIELD 03w01 PRIV3: PRIV3
0x5003367C C   FIELD 04w01 PRIV4: PRIV4
0x5003367C C   FIELD 05w01 PRIV5: PRIV5
0x5003367C C   FIELD 06w01 PRIV6: PRIV6
0x5003367C C   FIELD 07w01 PRIV7: PRIV7
0x5003367C C   FIELD 08w01 PRIV8: PRIV8
0x5003367C C   FIELD 09w01 PRIV9: PRIV9
0x5003367C C   FIELD 10w01 PRIV10: PRIV10
0x5003367C C   FIELD 11w01 PRIV11: PRIV11
0x5003367C C   FIELD 12w01 PRIV12: PRIV12
0x5003367C C   FIELD 13w01 PRIV13: PRIV13
0x5003367C C   FIELD 14w01 PRIV14: PRIV14
0x5003367C C   FIELD 15w01 PRIV15: PRIV15
0x5003367C C   FIELD 16w01 PRIV16: PRIV16
0x5003367C C   FIELD 17w01 PRIV17: PRIV17
0x5003367C C   FIELD 18w01 PRIV18: PRIV18
0x5003367C C   FIELD 19w01 PRIV19: PRIV19
0x5003367C C   FIELD 20w01 PRIV20: PRIV20
0x5003367C C   FIELD 21w01 PRIV21: PRIV21
0x5003367C C   FIELD 22w01 PRIV22: PRIV22
0x5003367C C   FIELD 23w01 PRIV23: PRIV23
0x5003367C C   FIELD 24w01 PRIV24: PRIV24
0x5003367C C   FIELD 25w01 PRIV25: PRIV25
0x5003367C C   FIELD 26w01 PRIV26: PRIV26
0x5003367C C   FIELD 27w01 PRIV27: PRIV27
0x5003367C C   FIELD 28w01 PRIV28: PRIV28
0x5003367C C   FIELD 29w01 PRIV29: PRIV29
0x5003367C C   FIELD 30w01 PRIV30: PRIV30
0x5003367C C   FIELD 31w01 PRIV31: PRIV31
0x52020000 A PERIPHERAL SEC_GPIOA
0x52020000 B  REGISTER MODER (rw): GPIO port mode register
0x52020000 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52020000 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52020004 B  REGISTER OTYPER (rw): GPIO port output type register
0x52020004 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52020004 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52020008 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52020008 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x52020008 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x5202000C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5202000C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x5202000C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x52020010 B  REGISTER IDR (ro): GPIO port input data register
0x52020010 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x52020010 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x52020010 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x52020010 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x52020010 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x52020010 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x52020010 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x52020010 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x52020010 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x52020010 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x52020010 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x52020010 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x52020010 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x52020010 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x52020010 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x52020010 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x52020014 B  REGISTER ODR (rw): GPIO port output data register
0x52020014 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x52020014 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x52020014 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x52020014 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x52020014 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x52020014 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x52020014 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x52020014 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x52020014 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x52020014 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x52020014 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x52020014 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x52020014 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x52020014 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x52020014 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x52020014 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x52020018 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52020018 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x52020018 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x52020018 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5202001C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5202001C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5202001C C   FIELD 16w01 LCKK: Lock key
0x52020020 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52020020 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52020020 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52020020 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52020020 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52020020 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52020020 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52020020 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52020020 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52020024 B  REGISTER AFRH (rw): GPIO alternate function high register
0x52020024 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x52020024 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x52020024 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x52020024 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x52020024 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x52020024 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x52020024 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x52020024 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x52020028 B  REGISTER BRR (wo): GPIO port bit reset register
0x52020028 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52020028 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52020028 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52020028 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52020028 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52020028 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52020028 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52020028 C   FIELD 07w01 BR7: Port x reset IO pin y
0x52020028 C   FIELD 08w01 BR8: Port x reset IO pin y
0x52020028 C   FIELD 09w01 BR9: Port x reset IO pin y
0x52020028 C   FIELD 10w01 BR10: Port x reset IO pin y
0x52020028 C   FIELD 11w01 BR11: Port x reset IO pin y
0x52020028 C   FIELD 12w01 BR12: Port x reset IO pin y
0x52020028 C   FIELD 13w01 BR13: Port x reset IO pin y
0x52020028 C   FIELD 14w01 BR14: Port x reset IO pin y
0x52020028 C   FIELD 15w01 BR15: Port x reset IO pin y
0x5202002C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x5202002C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202002C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020030 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52020030 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x52020030 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x52020400 A PERIPHERAL SEC_GPIOB
0x52020400 B  REGISTER MODER (rw): GPIO port mode register
0x52020400 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52020400 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52020404 B  REGISTER OTYPER (rw): GPIO port output type register
0x52020404 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52020404 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52020408 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52020408 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x52020408 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x5202040C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5202040C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x5202040C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x52020410 B  REGISTER IDR (ro): GPIO port input data register
0x52020410 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x52020410 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x52020410 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x52020410 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x52020410 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x52020410 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x52020410 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x52020410 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x52020410 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x52020410 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x52020410 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x52020410 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x52020410 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x52020410 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x52020410 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x52020410 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x52020414 B  REGISTER ODR (rw): GPIO port output data register
0x52020414 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x52020414 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x52020414 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x52020414 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x52020414 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x52020414 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x52020414 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x52020414 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x52020414 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x52020414 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x52020414 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x52020414 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x52020414 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x52020414 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x52020414 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x52020414 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x52020418 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52020418 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x52020418 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x52020418 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5202041C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5202041C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5202041C C   FIELD 16w01 LCKK: Lock key
0x52020420 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52020420 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52020420 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52020420 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52020420 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52020420 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52020420 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52020420 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52020420 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52020424 B  REGISTER AFRH (rw): GPIO alternate function high register
0x52020424 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x52020424 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x52020424 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x52020424 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x52020424 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x52020424 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x52020424 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x52020424 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x52020428 B  REGISTER BRR (wo): GPIO port bit reset register
0x52020428 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52020428 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52020428 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52020428 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52020428 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52020428 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52020428 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52020428 C   FIELD 07w01 BR7: Port x reset IO pin y
0x52020428 C   FIELD 08w01 BR8: Port x reset IO pin y
0x52020428 C   FIELD 09w01 BR9: Port x reset IO pin y
0x52020428 C   FIELD 10w01 BR10: Port x reset IO pin y
0x52020428 C   FIELD 11w01 BR11: Port x reset IO pin y
0x52020428 C   FIELD 12w01 BR12: Port x reset IO pin y
0x52020428 C   FIELD 13w01 BR13: Port x reset IO pin y
0x52020428 C   FIELD 14w01 BR14: Port x reset IO pin y
0x52020428 C   FIELD 15w01 BR15: Port x reset IO pin y
0x5202042C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x5202042C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202042C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020430 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52020430 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x52020430 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x52020800 A PERIPHERAL SEC_GPIOC
0x52020800 B  REGISTER MODER (rw): GPIO port mode register
0x52020800 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52020800 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52020804 B  REGISTER OTYPER (rw): GPIO port output type register
0x52020804 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52020804 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52020808 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52020808 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x52020808 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x5202080C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5202080C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x5202080C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x52020810 B  REGISTER IDR (ro): GPIO port input data register
0x52020810 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x52020810 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x52020810 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x52020810 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x52020810 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x52020810 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x52020810 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x52020810 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x52020810 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x52020810 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x52020810 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x52020810 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x52020810 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x52020810 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x52020810 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x52020810 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x52020814 B  REGISTER ODR (rw): GPIO port output data register
0x52020814 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x52020814 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x52020814 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x52020814 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x52020814 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x52020814 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x52020814 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x52020814 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x52020814 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x52020814 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x52020814 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x52020814 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x52020814 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x52020814 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x52020814 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x52020814 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x52020818 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52020818 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x52020818 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x52020818 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5202081C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5202081C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5202081C C   FIELD 16w01 LCKK: Lock key
0x52020820 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52020820 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52020820 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52020820 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52020820 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52020820 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52020820 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52020820 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52020820 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52020824 B  REGISTER AFRH (rw): GPIO alternate function high register
0x52020824 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x52020824 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x52020824 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x52020824 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x52020824 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x52020824 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x52020824 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x52020824 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x52020828 B  REGISTER BRR (wo): GPIO port bit reset register
0x52020828 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52020828 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52020828 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52020828 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52020828 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52020828 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52020828 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52020828 C   FIELD 07w01 BR7: Port x reset IO pin y
0x52020828 C   FIELD 08w01 BR8: Port x reset IO pin y
0x52020828 C   FIELD 09w01 BR9: Port x reset IO pin y
0x52020828 C   FIELD 10w01 BR10: Port x reset IO pin y
0x52020828 C   FIELD 11w01 BR11: Port x reset IO pin y
0x52020828 C   FIELD 12w01 BR12: Port x reset IO pin y
0x52020828 C   FIELD 13w01 BR13: Port x reset IO pin y
0x52020828 C   FIELD 14w01 BR14: Port x reset IO pin y
0x52020828 C   FIELD 15w01 BR15: Port x reset IO pin y
0x5202082C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x5202082C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202082C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020830 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52020830 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x52020830 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x52020C00 A PERIPHERAL SEC_GPIOD
0x52020C00 B  REGISTER MODER (rw): GPIO port mode register
0x52020C00 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52020C00 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52020C04 B  REGISTER OTYPER (rw): GPIO port output type register
0x52020C04 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52020C04 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52020C08 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52020C08 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x52020C08 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x52020C0C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x52020C0C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x52020C0C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x52020C10 B  REGISTER IDR (ro): GPIO port input data register
0x52020C10 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x52020C10 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x52020C10 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x52020C10 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x52020C10 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x52020C10 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x52020C10 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x52020C10 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x52020C10 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x52020C10 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x52020C10 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x52020C10 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x52020C10 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x52020C10 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x52020C10 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x52020C10 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x52020C14 B  REGISTER ODR (rw): GPIO port output data register
0x52020C14 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x52020C14 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x52020C14 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x52020C14 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x52020C14 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x52020C14 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x52020C14 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x52020C14 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x52020C14 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x52020C14 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x52020C14 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x52020C14 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x52020C14 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x52020C14 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x52020C14 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x52020C14 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x52020C18 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52020C18 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x52020C18 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x52020C18 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x52020C1C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x52020C1C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x52020C1C C   FIELD 16w01 LCKK: Lock key
0x52020C20 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52020C20 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52020C20 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52020C20 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52020C20 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52020C20 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52020C20 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52020C20 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52020C20 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52020C24 B  REGISTER AFRH (rw): GPIO alternate function high register
0x52020C24 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x52020C24 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x52020C24 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x52020C24 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x52020C24 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x52020C24 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x52020C24 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x52020C24 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x52020C28 B  REGISTER BRR (wo): GPIO port bit reset register
0x52020C28 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52020C28 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52020C28 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52020C28 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52020C28 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52020C28 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52020C28 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52020C28 C   FIELD 07w01 BR7: Port x reset IO pin y
0x52020C28 C   FIELD 08w01 BR8: Port x reset IO pin y
0x52020C28 C   FIELD 09w01 BR9: Port x reset IO pin y
0x52020C28 C   FIELD 10w01 BR10: Port x reset IO pin y
0x52020C28 C   FIELD 11w01 BR11: Port x reset IO pin y
0x52020C28 C   FIELD 12w01 BR12: Port x reset IO pin y
0x52020C28 C   FIELD 13w01 BR13: Port x reset IO pin y
0x52020C28 C   FIELD 14w01 BR14: Port x reset IO pin y
0x52020C28 C   FIELD 15w01 BR15: Port x reset IO pin y
0x52020C2C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x52020C2C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C2C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52020C30 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52020C30 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x52020C30 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x52021000 A PERIPHERAL SEC_GPIOE
0x52021000 B  REGISTER MODER (rw): GPIO port mode register
0x52021000 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52021000 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52021004 B  REGISTER OTYPER (rw): GPIO port output type register
0x52021004 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52021004 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52021008 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52021008 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x52021008 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x5202100C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5202100C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x5202100C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x52021010 B  REGISTER IDR (ro): GPIO port input data register
0x52021010 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x52021010 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x52021010 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x52021010 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x52021010 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x52021010 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x52021010 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x52021010 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x52021010 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x52021010 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x52021010 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x52021010 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x52021010 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x52021010 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x52021010 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x52021010 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x52021014 B  REGISTER ODR (rw): GPIO port output data register
0x52021014 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x52021014 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x52021014 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x52021014 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x52021014 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x52021014 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x52021014 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x52021014 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x52021014 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x52021014 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x52021014 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x52021014 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x52021014 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x52021014 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x52021014 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x52021014 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x52021018 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52021018 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x52021018 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x52021018 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5202101C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5202101C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5202101C C   FIELD 16w01 LCKK: Lock key
0x52021020 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52021020 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52021020 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52021020 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52021020 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52021020 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52021020 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52021020 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52021020 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52021024 B  REGISTER AFRH (rw): GPIO alternate function high register
0x52021024 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x52021024 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x52021024 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x52021024 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x52021024 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x52021024 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x52021024 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x52021024 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x52021028 B  REGISTER BRR (wo): GPIO port bit reset register
0x52021028 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52021028 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52021028 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52021028 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52021028 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52021028 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52021028 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52021028 C   FIELD 07w01 BR7: Port x reset IO pin y
0x52021028 C   FIELD 08w01 BR8: Port x reset IO pin y
0x52021028 C   FIELD 09w01 BR9: Port x reset IO pin y
0x52021028 C   FIELD 10w01 BR10: Port x reset IO pin y
0x52021028 C   FIELD 11w01 BR11: Port x reset IO pin y
0x52021028 C   FIELD 12w01 BR12: Port x reset IO pin y
0x52021028 C   FIELD 13w01 BR13: Port x reset IO pin y
0x52021028 C   FIELD 14w01 BR14: Port x reset IO pin y
0x52021028 C   FIELD 15w01 BR15: Port x reset IO pin y
0x5202102C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x5202102C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202102C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021030 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52021030 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x52021030 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x52021400 A PERIPHERAL SEC_GPIOF
0x52021400 B  REGISTER MODER (rw): GPIO port mode register
0x52021400 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52021400 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52021404 B  REGISTER OTYPER (rw): GPIO port output type register
0x52021404 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52021404 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52021408 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52021408 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x52021408 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x5202140C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5202140C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x5202140C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x52021410 B  REGISTER IDR (ro): GPIO port input data register
0x52021410 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x52021410 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x52021410 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x52021410 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x52021410 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x52021410 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x52021410 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x52021410 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x52021410 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x52021410 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x52021410 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x52021410 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x52021410 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x52021410 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x52021410 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x52021410 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x52021414 B  REGISTER ODR (rw): GPIO port output data register
0x52021414 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x52021414 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x52021414 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x52021414 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x52021414 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x52021414 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x52021414 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x52021414 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x52021414 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x52021414 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x52021414 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x52021414 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x52021414 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x52021414 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x52021414 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x52021414 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x52021418 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52021418 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x52021418 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x52021418 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5202141C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5202141C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5202141C C   FIELD 16w01 LCKK: Lock key
0x52021420 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52021420 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52021420 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52021420 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52021420 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52021420 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52021420 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52021420 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52021420 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52021424 B  REGISTER AFRH (rw): GPIO alternate function high register
0x52021424 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x52021424 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x52021424 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x52021424 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x52021424 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x52021424 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x52021424 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x52021424 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x52021428 B  REGISTER BRR (wo): GPIO port bit reset register
0x52021428 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52021428 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52021428 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52021428 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52021428 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52021428 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52021428 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52021428 C   FIELD 07w01 BR7: Port x reset IO pin y
0x52021428 C   FIELD 08w01 BR8: Port x reset IO pin y
0x52021428 C   FIELD 09w01 BR9: Port x reset IO pin y
0x52021428 C   FIELD 10w01 BR10: Port x reset IO pin y
0x52021428 C   FIELD 11w01 BR11: Port x reset IO pin y
0x52021428 C   FIELD 12w01 BR12: Port x reset IO pin y
0x52021428 C   FIELD 13w01 BR13: Port x reset IO pin y
0x52021428 C   FIELD 14w01 BR14: Port x reset IO pin y
0x52021428 C   FIELD 15w01 BR15: Port x reset IO pin y
0x5202142C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x5202142C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202142C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021430 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52021430 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x52021430 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x52021800 A PERIPHERAL SEC_GPIOG
0x52021800 B  REGISTER MODER (rw): GPIO port mode register
0x52021800 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52021800 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52021804 B  REGISTER OTYPER (rw): GPIO port output type register
0x52021804 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52021804 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52021808 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52021808 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x52021808 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x5202180C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5202180C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x5202180C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x52021810 B  REGISTER IDR (ro): GPIO port input data register
0x52021810 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x52021810 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x52021810 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x52021810 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x52021810 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x52021810 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x52021810 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x52021810 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x52021810 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x52021810 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x52021810 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x52021810 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x52021810 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x52021810 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x52021810 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x52021810 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x52021814 B  REGISTER ODR (rw): GPIO port output data register
0x52021814 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x52021814 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x52021814 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x52021814 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x52021814 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x52021814 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x52021814 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x52021814 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x52021814 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x52021814 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x52021814 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x52021814 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x52021814 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x52021814 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x52021814 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x52021814 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x52021818 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52021818 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x52021818 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x52021818 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x5202181C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5202181C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x5202181C C   FIELD 16w01 LCKK: Lock key
0x52021820 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52021820 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52021820 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52021820 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52021820 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52021820 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52021820 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52021820 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52021820 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52021824 B  REGISTER AFRH (rw): GPIO alternate function high register
0x52021824 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x52021824 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x52021824 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x52021824 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x52021824 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x52021824 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x52021824 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x52021824 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x52021828 B  REGISTER BRR (wo): GPIO port bit reset register
0x52021828 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52021828 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52021828 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52021828 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52021828 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52021828 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52021828 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52021828 C   FIELD 07w01 BR7: Port x reset IO pin y
0x52021828 C   FIELD 08w01 BR8: Port x reset IO pin y
0x52021828 C   FIELD 09w01 BR9: Port x reset IO pin y
0x52021828 C   FIELD 10w01 BR10: Port x reset IO pin y
0x52021828 C   FIELD 11w01 BR11: Port x reset IO pin y
0x52021828 C   FIELD 12w01 BR12: Port x reset IO pin y
0x52021828 C   FIELD 13w01 BR13: Port x reset IO pin y
0x52021828 C   FIELD 14w01 BR14: Port x reset IO pin y
0x52021828 C   FIELD 15w01 BR15: Port x reset IO pin y
0x5202182C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x5202182C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x5202182C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021830 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52021830 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x52021830 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x52021C00 A PERIPHERAL SEC_GPIOH
0x52021C00 B  REGISTER MODER (rw): GPIO port mode register
0x52021C00 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52021C00 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52021C04 B  REGISTER OTYPER (rw): GPIO port output type register
0x52021C04 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52021C04 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52021C08 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52021C08 C   FIELD 00w02 OSPEED0: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 02w02 OSPEED1: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 04w02 OSPEED2: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 06w02 OSPEED3: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 08w02 OSPEED4: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 10w02 OSPEED5: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 12w02 OSPEED6: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 14w02 OSPEED7: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 16w02 OSPEED8: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 18w02 OSPEED9: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 20w02 OSPEED10: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 22w02 OSPEED11: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 24w02 OSPEED12: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 26w02 OSPEED13: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 28w02 OSPEED14: Port x configuration bits (y = 0..15)
0x52021C08 C   FIELD 30w02 OSPEED15: Port x configuration bits (y = 0..15)
0x52021C0C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x52021C0C C   FIELD 00w02 PUPD0: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 02w02 PUPD1: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 04w02 PUPD2: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 06w02 PUPD3: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 08w02 PUPD4: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 10w02 PUPD5: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 12w02 PUPD6: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 14w02 PUPD7: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 16w02 PUPD8: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 18w02 PUPD9: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 20w02 PUPD10: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 22w02 PUPD11: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 24w02 PUPD12: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 26w02 PUPD13: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 28w02 PUPD14: Port x configuration bits (y = 0..15)
0x52021C0C C   FIELD 30w02 PUPD15: Port x configuration bits (y = 0..15)
0x52021C10 B  REGISTER IDR (ro): GPIO port input data register
0x52021C10 C   FIELD 00w01 ID0: Port input data (y = 0..15)
0x52021C10 C   FIELD 01w01 ID1: Port input data (y = 0..15)
0x52021C10 C   FIELD 02w01 ID2: Port input data (y = 0..15)
0x52021C10 C   FIELD 03w01 ID3: Port input data (y = 0..15)
0x52021C10 C   FIELD 04w01 ID4: Port input data (y = 0..15)
0x52021C10 C   FIELD 05w01 ID5: Port input data (y = 0..15)
0x52021C10 C   FIELD 06w01 ID6: Port input data (y = 0..15)
0x52021C10 C   FIELD 07w01 ID7: Port input data (y = 0..15)
0x52021C10 C   FIELD 08w01 ID8: Port input data (y = 0..15)
0x52021C10 C   FIELD 09w01 ID9: Port input data (y = 0..15)
0x52021C10 C   FIELD 10w01 ID10: Port input data (y = 0..15)
0x52021C10 C   FIELD 11w01 ID11: Port input data (y = 0..15)
0x52021C10 C   FIELD 12w01 ID12: Port input data (y = 0..15)
0x52021C10 C   FIELD 13w01 ID13: Port input data (y = 0..15)
0x52021C10 C   FIELD 14w01 ID14: Port input data (y = 0..15)
0x52021C10 C   FIELD 15w01 ID15: Port input data (y = 0..15)
0x52021C14 B  REGISTER ODR (rw): GPIO port output data register
0x52021C14 C   FIELD 00w01 OD0: Port output data (y = 0..15)
0x52021C14 C   FIELD 01w01 OD1: Port output data (y = 0..15)
0x52021C14 C   FIELD 02w01 OD2: Port output data (y = 0..15)
0x52021C14 C   FIELD 03w01 OD3: Port output data (y = 0..15)
0x52021C14 C   FIELD 04w01 OD4: Port output data (y = 0..15)
0x52021C14 C   FIELD 05w01 OD5: Port output data (y = 0..15)
0x52021C14 C   FIELD 06w01 OD6: Port output data (y = 0..15)
0x52021C14 C   FIELD 07w01 OD7: Port output data (y = 0..15)
0x52021C14 C   FIELD 08w01 OD8: Port output data (y = 0..15)
0x52021C14 C   FIELD 09w01 OD9: Port output data (y = 0..15)
0x52021C14 C   FIELD 10w01 OD10: Port output data (y = 0..15)
0x52021C14 C   FIELD 11w01 OD11: Port output data (y = 0..15)
0x52021C14 C   FIELD 12w01 OD12: Port output data (y = 0..15)
0x52021C14 C   FIELD 13w01 OD13: Port output data (y = 0..15)
0x52021C14 C   FIELD 14w01 OD14: Port output data (y = 0..15)
0x52021C14 C   FIELD 15w01 OD15: Port output data (y = 0..15)
0x52021C18 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52021C18 C   FIELD 00w01 BS0: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 01w01 BS1: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 02w01 BS2: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 03w01 BS3: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 04w01 BS4: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 05w01 BS5: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 06w01 BS6: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 07w01 BS7: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 08w01 BS8: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 09w01 BS9: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 10w01 BS10: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 11w01 BS11: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 12w01 BS12: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 13w01 BS13: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 14w01 BS14: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 15w01 BS15: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 16w01 BR0: Port x set bit y (y= 0..15)
0x52021C18 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 24w01 BR8: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 25w01 BR9: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 26w01 BR10: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 27w01 BR11: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 28w01 BR12: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 29w01 BR13: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 30w01 BR14: Port x reset bit y (y = 0..15)
0x52021C18 C   FIELD 31w01 BR15: Port x reset bit y (y = 0..15)
0x52021C1C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x52021C1C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 08w01 LCK8: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 09w01 LCK9: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 10w01 LCK10: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 11w01 LCK11: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 12w01 LCK12: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 13w01 LCK13: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 14w01 LCK14: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 15w01 LCK15: Port x lock bit y (y= 0..15)
0x52021C1C C   FIELD 16w01 LCKK: Lock key
0x52021C20 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52021C20 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52021C20 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52021C20 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52021C20 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52021C20 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52021C20 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52021C20 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52021C20 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52021C24 B  REGISTER AFRH (rw): GPIO alternate function high register
0x52021C24 C   FIELD 00w04 AFSEL8: Alternate function selection for port x bit y (y = 8..15)
0x52021C24 C   FIELD 04w04 AFSEL9: Alternate function selection for port x bit y (y = 8..15)
0x52021C24 C   FIELD 08w04 AFSEL10: Alternate function selection for port x bit y (y = 8..15)
0x52021C24 C   FIELD 12w04 AFSEL11: Alternate function selection for port x bit y (y = 8..15)
0x52021C24 C   FIELD 16w04 AFSEL12: Alternate function selection for port x bit y (y = 8..15)
0x52021C24 C   FIELD 20w04 AFSEL13: Alternate function selection for port x bit y (y = 8..15)
0x52021C24 C   FIELD 24w04 AFSEL14: Alternate function selection for port x bit y (y = 8..15)
0x52021C24 C   FIELD 28w04 AFSEL15: Alternate function selection for port x bit y (y = 8..15)
0x52021C28 B  REGISTER BRR (wo): GPIO port bit reset register
0x52021C28 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52021C28 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52021C28 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52021C28 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52021C28 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52021C28 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52021C28 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52021C28 C   FIELD 07w01 BR7: Port x reset IO pin y
0x52021C28 C   FIELD 08w01 BR8: Port x reset IO pin y
0x52021C28 C   FIELD 09w01 BR9: Port x reset IO pin y
0x52021C28 C   FIELD 10w01 BR10: Port x reset IO pin y
0x52021C28 C   FIELD 11w01 BR11: Port x reset IO pin y
0x52021C28 C   FIELD 12w01 BR12: Port x reset IO pin y
0x52021C28 C   FIELD 13w01 BR13: Port x reset IO pin y
0x52021C28 C   FIELD 14w01 BR14: Port x reset IO pin y
0x52021C28 C   FIELD 15w01 BR15: Port x reset IO pin y
0x52021C2C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x52021C2C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 08w01 HSLV8: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 09w01 HSLV9: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 10w01 HSLV10: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 11w01 HSLV11: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 12w01 HSLV12: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 13w01 HSLV13: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 14w01 HSLV14: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C2C C   FIELD 15w01 HSLV15: Port x high-speed low-voltage configuration (y= 15 to 0)
0x52021C30 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52021C30 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 08w01 SEC8: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 09w01 SEC9: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 10w01 SEC10: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 11w01 SEC11: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 12w01 SEC12: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 13w01 SEC13: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 14w01 SEC14: I/O pin of Port x secure bit enable
0x52021C30 C   FIELD 15w01 SEC15: I/O pin of Port x secure bit enable
0x52022000 A PERIPHERAL SEC_GPIOI
0x52022000 B  REGISTER MODER (rw): GPIO port mode register
0x52022000 C   FIELD 00w02 MODE0: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 02w02 MODE1: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 04w02 MODE2: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 06w02 MODE3: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 08w02 MODE4: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 10w02 MODE5: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 12w02 MODE6: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 14w02 MODE7: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 16w02 MODE8: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 18w02 MODE9: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 20w02 MODE10: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 22w02 MODE11: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 24w02 MODE12: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 26w02 MODE13: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 28w02 MODE14: Port x configuration bits (y = 0..15)
0x52022000 C   FIELD 30w02 MODE15: Port x configuration bits (y = 0..15)
0x52022004 B  REGISTER OTYPER (rw): GPIO port output type register
0x52022004 C   FIELD 00w01 OT0: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 01w01 OT1: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 02w01 OT2: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 03w01 OT3: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 04w01 OT4: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 05w01 OT5: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 06w01 OT6: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 07w01 OT7: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 08w01 OT8: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 09w01 OT9: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 10w01 OT10: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 11w01 OT11: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 12w01 OT12: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 13w01 OT13: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 14w01 OT14: Port x configuration bits (y = 0..15)
0x52022004 C   FIELD 15w01 OT15: Port x configuration bits (y = 0..15)
0x52022008 B  REGISTER OSPEEDR (rw): GPIO port output speed register
0x52022008 C   FIELD 00w02 OSPEED0: Port x configuration bits (y =7 .. 0)
0x52022008 C   FIELD 02w02 OSPEED1: Port x configuration bits (y =7 .. 0)
0x52022008 C   FIELD 04w02 OSPEED2: Port x configuration bits (y =7 .. 0)
0x52022008 C   FIELD 06w02 OSPEED3: Port x configuration bits (y =7 .. 0)
0x52022008 C   FIELD 08w02 OSPEED4: Port x configuration bits (y =7 .. 0)
0x52022008 C   FIELD 10w02 OSPEED5: Port x configuration bits (y =7 .. 0)
0x52022008 C   FIELD 12w02 OSPEED6: Port x configuration bits (y =7 .. 0)
0x52022008 C   FIELD 14w02 OSPEED7: Port x configuration bits (y =7 .. 0)
0x5202200C B  REGISTER PUPDR (rw): GPIO port pull-up/pull-down register
0x5202200C C   FIELD 00w02 PUPD0: Port x configuration bits (y =7 .. 0)
0x5202200C C   FIELD 02w02 PUPD1: Port x configuration bits (y =7 .. 0)
0x5202200C C   FIELD 04w02 PUPD2: Port x configuration bits (y =7 .. 0)
0x5202200C C   FIELD 06w02 PUPD3: Port x configuration bits (y =7 .. 0)
0x5202200C C   FIELD 08w02 PUPD4: Port x configuration bits (y =7 .. 0)
0x5202200C C   FIELD 10w02 PUPD5: Port x configuration bits (y =7 .. 0)
0x5202200C C   FIELD 12w02 PUPD6: Port x configuration bits (y =7 .. 0)
0x5202200C C   FIELD 14w02 PUPD7: Port x configuration bits (y =7 .. 0)
0x52022010 B  REGISTER IDR (ro): GPIO port input data register
0x52022010 C   FIELD 00w01 ID0: Port input data (y = 0..7)
0x52022010 C   FIELD 01w01 ID1: Port input data (y = 0..7)
0x52022010 C   FIELD 02w01 ID2: Port input data (y = 0..7)
0x52022010 C   FIELD 03w01 ID3: Port input data (y = 0..7)
0x52022010 C   FIELD 04w01 ID4: Port input data (y = 0..7)
0x52022010 C   FIELD 05w01 ID5: Port input data (y = 0..7)
0x52022010 C   FIELD 06w01 ID6: Port input data (y = 0..7)
0x52022010 C   FIELD 07w01 ID7: Port input data (y = 0..7)
0x52022014 B  REGISTER ODR (rw): GPIO port output data register
0x52022014 C   FIELD 00w01 OD0: Port output data (y = 0..7)
0x52022014 C   FIELD 01w01 OD1: Port output data (y = 0..7)
0x52022014 C   FIELD 02w01 OD2: Port output data (y = 0..7)
0x52022014 C   FIELD 03w01 OD3: Port output data (y = 0..7)
0x52022014 C   FIELD 04w01 OD4: Port output data (y = 0..7)
0x52022014 C   FIELD 05w01 OD5: Port output data (y = 0..7)
0x52022014 C   FIELD 06w01 OD6: Port output data (y = 0..7)
0x52022014 C   FIELD 07w01 OD7: Port output data (y = 0..7)
0x52022018 B  REGISTER BSRR (wo): GPIO port bit set/reset register
0x52022018 C   FIELD 00w01 BS0: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 01w01 BS1: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 02w01 BS2: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 03w01 BS3: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 04w01 BS4: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 05w01 BS5: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 06w01 BS6: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 07w01 BS7: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 16w01 BR0: Port x set bit y (y= 0..7)
0x52022018 C   FIELD 17w01 BR1: Port x reset bit y (y = 0..7)
0x52022018 C   FIELD 18w01 BR2: Port x reset bit y (y = 0..7)
0x52022018 C   FIELD 19w01 BR3: Port x reset bit y (y = 0..7)
0x52022018 C   FIELD 20w01 BR4: Port x reset bit y (y = 0..7)
0x52022018 C   FIELD 21w01 BR5: Port x reset bit y (y = 0..7)
0x52022018 C   FIELD 22w01 BR6: Port x reset bit y (y = 0..7)
0x52022018 C   FIELD 23w01 BR7: Port x reset bit y (y = 0..7)
0x5202201C B  REGISTER LCKR (rw): GPIO port configuration lock register
0x5202201C C   FIELD 00w01 LCK0: Port x lock bit y (y= 0..15)
0x5202201C C   FIELD 01w01 LCK1: Port x lock bit y (y= 0..15)
0x5202201C C   FIELD 02w01 LCK2: Port x lock bit y (y= 0..15)
0x5202201C C   FIELD 03w01 LCK3: Port x lock bit y (y= 0..15)
0x5202201C C   FIELD 04w01 LCK4: Port x lock bit y (y= 0..15)
0x5202201C C   FIELD 05w01 LCK5: Port x lock bit y (y= 0..15)
0x5202201C C   FIELD 06w01 LCK6: Port x lock bit y (y= 0..15)
0x5202201C C   FIELD 07w01 LCK7: Port x lock bit y (y= 0..15)
0x5202201C C   FIELD 16w01 LCKK: Lock key
0x52022020 B  REGISTER AFRL (rw): GPIO alternate function low register
0x52022020 C   FIELD 00w04 AFSEL0: Alternate function selection for port x bit y (y = 0..7)
0x52022020 C   FIELD 04w04 AFSEL1: Alternate function selection for port x bit y (y = 0..7)
0x52022020 C   FIELD 08w04 AFSEL2: Alternate function selection for port x bit y (y = 0..7)
0x52022020 C   FIELD 12w04 AFSEL3: Alternate function selection for port x bit y (y = 0..7)
0x52022020 C   FIELD 16w04 AFSEL4: Alternate function selection for port x bit y (y = 0..7)
0x52022020 C   FIELD 20w04 AFSEL5: Alternate function selection for port x bit y (y = 0..7)
0x52022020 C   FIELD 24w04 AFSEL6: Alternate function selection for port x bit y (y = 0..7)
0x52022020 C   FIELD 28w04 AFSEL7: Alternate function selection for port x bit y (y = 0..7)
0x52022028 B  REGISTER BRR (wo): GPIO port bit reset register
0x52022028 C   FIELD 00w01 BR0: Port x reset IO pin y
0x52022028 C   FIELD 01w01 BR1: Port x reset IO pin y
0x52022028 C   FIELD 02w01 BR2: Port x reset IO pin y
0x52022028 C   FIELD 03w01 BR3: Port x reset IO pin y
0x52022028 C   FIELD 04w01 BR4: Port x reset IO pin y
0x52022028 C   FIELD 05w01 BR5: Port x reset IO pin y
0x52022028 C   FIELD 06w01 BR6: Port x reset IO pin y
0x52022028 C   FIELD 07w01 BR7: Port x reset IO pin y
0x5202202C B  REGISTER HSLVR (rw): GPIO high-speed low-voltage register
0x5202202C C   FIELD 00w01 HSLV0: Port x high-speed low-voltage configuration (y= 7 to 0)
0x5202202C C   FIELD 01w01 HSLV1: Port x high-speed low-voltage configuration (y= 7 to 0)
0x5202202C C   FIELD 02w01 HSLV2: Port x high-speed low-voltage configuration (y= 7 to 0)
0x5202202C C   FIELD 03w01 HSLV3: Port x high-speed low-voltage configuration (y= 7 to 0)
0x5202202C C   FIELD 04w01 HSLV4: Port x high-speed low-voltage configuration (y= 7 to 0)
0x5202202C C   FIELD 05w01 HSLV5: Port x high-speed low-voltage configuration (y= 7 to 0)
0x5202202C C   FIELD 06w01 HSLV6: Port x high-speed low-voltage configuration (y= 7 to 0)
0x5202202C C   FIELD 07w01 HSLV7: Port x high-speed low-voltage configuration (y= 7 to 0)
0x52022030 B  REGISTER SECCFGR (wo): GPIO secure configuration register
0x52022030 C   FIELD 00w01 SEC0: I/O pin of Port x secure bit enable
0x52022030 C   FIELD 01w01 SEC1: I/O pin of Port x secure bit enable
0x52022030 C   FIELD 02w01 SEC2: I/O pin of Port x secure bit enable
0x52022030 C   FIELD 03w01 SEC3: I/O pin of Port x secure bit enable
0x52022030 C   FIELD 04w01 SEC4: I/O pin of Port x secure bit enable
0x52022030 C   FIELD 05w01 SEC5: I/O pin of Port x secure bit enable
0x52022030 C   FIELD 06w01 SEC6: I/O pin of Port x secure bit enable
0x52022030 C   FIELD 07w01 SEC7: I/O pin of Port x secure bit enable
0x52028000 A PERIPHERAL SEC_ADC1
0x52028000 B  REGISTER ADC_ISR: ADC interrupt and status register
0x52028000 C   FIELD 00w01 ADRDY (rw): ADC ready This bit is set by hardware after the ADC has been enabled (bit ADEN = 1) and when the ADC reaches a state where it is ready to accept conversion requests. It is cleared by software writing 1 to it.
0x52028000 C   FIELD 01w01 EOSMP (rw): End of sampling flag This bit is set by hardware during the conversion of any channel (only for regular channels), at the end of the sampling phase.
0x52028000 C   FIELD 02w01 EOC (rw): End of conversion flag This bit is set by hardware at the end of each regular conversion of a channel when a new data is available in the ADC_DR register. It is cleared by software writing 1 to it or by reading the ADC_DR register
0x52028000 C   FIELD 03w01 EOS (rw): End of regular sequence flag This bit is set by hardware at the end of the conversions of a regular sequence of channels. It is cleared by software writing 1 to it.
0x52028000 C   FIELD 04w01 OVR (rw): ADC overrun This bit is set by hardware when an overrun occurs on a regular channel, meaning that a new conversion has completed while the EOC flag was already set. It is cleared by software writing 1 to it.
0x52028000 C   FIELD 05w01 JEOC (rw): Injected channel end of conversion flag This bit is set by hardware at the end of each injected conversion of a channel when a new data is available in the corresponding ADC_JDRy register. It is cleared by software writing 1 to it or by reading the corresponding ADC_JDRy register
0x52028000 C   FIELD 06w01 JEOS (rw): Injected channel end of sequence flag This bit is set by hardware at the end of the conversions of all injected channels in the group. It is cleared by software writing 1 to it.
0x52028000 C   FIELD 07w01 AWD1 (rw): Analog watchdog 1 flag This bit is set by hardware when the converted voltage crosses the values programmed in the fields LT1[11:0] and HT1[11:0] of ADC_LTR1, & ADC_HTR1 register. It is cleared by software. writing 1 to it.
0x52028000 C   FIELD 08w01 AWD2 (rw): Analog watchdog 2 flag This bit is set by hardware when the converted voltage crosses the values programmed in the fields LT2[7:0] and HT2[7:0] of ADC_LTR2 & ADC_HTR2 register. It is cleared by software writing 1 to it.
0x52028000 C   FIELD 09w01 AWD3 (rw): Analog watchdog 3 flag This bit is set by hardware when the converted voltage crosses the values programmed in the fields LT3[7:0] and HT3[7:0] of ADC_LTR3 & ADC_HTR3 register. It is cleared by software writing 1 to it.
0x52028000 C   FIELD 12w01 LDORDY (ro): ADC voltage regulator ready This bit is set by hardware. It indicates that the ADC internal supply is ready. The ADC is available after tADCVREG_SETUP time.
0x52028004 B  REGISTER ADC_IER: ADC interrupt enable register
0x52028004 C   FIELD 00w01 ADRDYIE (rw): ADC ready interrupt enable This bit is set and cleared by software to enable/disable the ADC Ready interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028004 C   FIELD 01w01 EOSMPIE (rw): End of sampling flag interrupt enable for regular conversions This bit is set and cleared by software to enable/disable the end of the sampling phase interrupt for regular conversions. Note: Software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028004 C   FIELD 02w01 EOCIE (rw): End of regular conversion interrupt enable This bit is set and cleared by software to enable/disable the end of a regular conversion interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028004 C   FIELD 03w01 EOSIE (rw): End of regular sequence of conversions interrupt enable This bit is set and cleared by software to enable/disable the end of regular sequence of conversions interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028004 C   FIELD 04w01 OVRIE (rw): Overrun interrupt enable This bit is set and cleared by software to enable/disable the Overrun interrupt of a regular conversion. Note: Software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028004 C   FIELD 05w01 JEOCIE (rw): End of injected conversion interrupt enable This bit is set and cleared by software to enable/disable the end of an injected conversion interrupt. Note: Software is allowed to write this bit only when JADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028004 C   FIELD 06w01 JEOSIE (rw): End of injected sequence of conversions interrupt enable This bit is set and cleared by software to enable/disable the end of injected sequence of conversions interrupt. Note: Software is allowed to write this bit only when JADSTART = 0 (which ensures that no injected conversion is ongoing).
0x52028004 C   FIELD 07w01 AWD1IE (rw): Analog watchdog 1 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog 1 interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028004 C   FIELD 08w01 AWD2IE (rw): Analog watchdog 2 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog 2 interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028004 C   FIELD 09w01 AWD3IE (rw): Analog watchdog 3 interrupt enable This bit is set and cleared by software to enable/disable the analog watchdog 2 interrupt. Note: Software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028008 B  REGISTER ADC_CR: ADC control register
0x52028008 C   FIELD 00w01 ADEN (rw): ADC enable control This bit is set by software to enable the ADC. The ADC is effectively ready to operate once the flag ADRDY has been set. It is cleared by hardware when the ADC is disabled, after the execution of the ADDIS command. Note: The software is allowed to set ADEN only when all bits of ADC_CR registers are 0 (ADCAL = 0, JADSTART = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0) except for bit ADVREGEN which must be 1 (and the software must have wait for the startup time of the voltage regulator)
0x52028008 C   FIELD 01w01 ADDIS (rw): ADC disable command This bit is set by software to disable the ADC (ADDIS command) and put it into power-down state (OFF state). It is cleared by hardware once the ADC is effectively disabled (ADEN is also cleared by hardware at this time). Note: The software is allowed to set ADDIS only when ADEN = 1 and both ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing)
0x52028008 C   FIELD 02w01 ADSTART (rw): ADC start of regular conversion This bit is set by software to start ADC conversion of regular channels. Depending on the configuration bits EXTEN[1:0], a conversion starts immediately (software trigger configuration) or once a regular hardware trigger event occurs (hardware trigger configuration). It is cleared by hardware: in Single conversion mode (CONT = 0, DISCEN = 0) when software trigger is selected (EXTEN[1:0] = 0x0): at the assertion of the end of regular conversion sequence (EOS) flag. In Discontinuous conversion mode (CONT = 0, DISCEN = 1), when the software trigger is selected (EXTEN[1:0] = 0x0): at the end of conversion (EOC) flag. in all other cases: after the execution of the ADSTP command, at the same time that ADSTP is cleared by hardware. Note: The software is allowed to set ADSTART only when ADEN = 1 and ADDIS = 0 (ADC is enabled and there is no pending request to disable the ADC) In Auto-injection mode (JAUTO = 1), regular and auto-injected conversions are started by setting bit ADSTART (JADSTART must be kept cleared)
0x52028008 C   FIELD 03w01 JADSTART (rw): ADC start of injected conversion This bit is set by software to start ADC conversion of injected channels. Depending on the configuration bits JEXTEN[1:0], a conversion starts immediately (software trigger configuration) or once an injected hardware trigger event occurs (hardware trigger configuration). It is cleared by hardware: in Single conversion mode when software trigger is selected (JEXTSEL = 0x0): at the assertion of the end of injected conversion sequence (JEOS) flag. in all cases: after the execution of the JADSTP command, at the same time as JADSTP is cleared by hardware. Note: The software is allowed to set JADSTART only when ADEN = 1 and ADDIS = 0 (ADC is enabled and there is no pending request to disable the ADC). In Auto-injection mode (JAUTO = 1), regular and auto-injected conversions are started by setting bit ADSTART (JADSTART must be kept cleared)
0x52028008 C   FIELD 04w01 ADSTP (rw): ADC stop of regular conversion command This bit is set by software to stop and discard an ongoing regular conversion (ADSTP Command). It is cleared by hardware when the conversion is effectively discarded and the ADC regular sequence and triggers can be re-configured. The ADC is then ready to accept a new start of regular conversions (ADSTART command). Note: The software is allowed to set ADSTP only when ADSTART = 1 and ADDIS = 0 (ADC is enabled and eventually converting a regular conversion and there is no pending request to disable the ADC). In Auto-injection mode (JAUTO = 1), setting ADSTP bit aborts both regular and injected conversions (do not use JADSTP).
0x52028008 C   FIELD 05w01 JADSTP (rw): ADC stop of injected conversion command This bit is set by software to stop and discard an ongoing injected conversion (JADSTP Command). It is cleared by hardware when the conversion is effectively discarded and the ADC injected sequence and triggers can be re-configured. The ADC is then ready to accept a new start of injected conversions (JADSTART command). Note: The software is allowed to set JADSTP only when JADSTART = 1 and ADDIS = 0 (ADC is enabled and eventually converting an injected conversion and there is no pending request to disable the ADC). In Auto-injection mode (JAUTO = 1), setting ADSTP bit aborts both regular and injected conversions (do not use JADSTP)
0x52028008 C   FIELD 16w01 ADCALLIN (rw): Linearity calibration This bit is set and cleared by software to enable the linearity calibration. Note: The software is allowed to write this bit only when the ADC is disabled and is not calibrating (ADCAL = 0, JADSTART = 0, JADSTP = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).
0x52028008 C   FIELD 24w04 CALINDEX (rw): Calibration factor This bitfield controls the calibration factor to be read or written. Calibration index 0 is dedicated to single-ended and differential offsets, calibration index 1 to 7 to the linearity calibration factors, and index 8 to the internal offset: Others: Reserved, must not be used Note: ADC_CALFACT2[31:0] correspond to the location of CALINDEX[3:0] calibration factor data (see for details).
0x52028008 C   FIELD 28w01 ADVREGEN (rw): ADC voltage regulator enable This bits is set by software to enable the ADC voltage regulator. Before performing any operation such as launching a calibration or enabling the ADC, the ADC voltage regulator must first be enabled and the software must wait for the regulator start-up time. For more details about the ADC voltage regulator enable and disable sequences, refer to (ADVREGEN). The software can program this bit field only when the ADC is disabled (ADCAL = 0, JADSTART = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).
0x52028008 C   FIELD 29w01 DEEPPWD (rw): Deep-power-down enable This bit is set and cleared by software to put the ADC in Deep-power-down mode. Note: The software is allowed to write this bit only when the ADC is disabled (ADCAL = 0, JADSTART = 0, JADSTP = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).
0x52028008 C   FIELD 31w01 ADCAL (rw): ADC calibration This bit is set by software to start the ADC calibration. It is cleared by hardware after calibration is complete. Note: The software is allowed to launch a calibration by setting ADCAL only when ADEN = 0.
0x5202800C B  REGISTER ADC_CFGR1: ADC configuration register
0x5202800C C   FIELD 00w02 DMNGT (rw): Data management configuration This bit is set and cleared by software to select how the ADC interface output data are managed. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202800C C   FIELD 02w02 RES (rw): Data resolution These bits are written by software to select the resolution of the conversion. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202800C C   FIELD 05w05 EXTSEL (rw): External trigger selection for regular group These bits select the external event used to trigger the start of conversion of a regular group: ... Refer to the ADC external trigger for regular channels in signals for details on trigger mapping. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202800C C   FIELD 10w02 EXTEN (rw): External trigger enable and polarity selection for regular channels These bits are set and cleared by software to select the external trigger polarity and enable the trigger of a regular group. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202800C C   FIELD 12w01 OVRMOD (rw): Overrun Mode This bit is set and cleared by software and configure the way data overrun is managed. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202800C C   FIELD 13w01 CONT (rw): Single / continuous conversion mode for regular conversions This bit is set and cleared by software. If it is set, regular conversion takes place continuously until it is cleared. Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both DISCEN = 1 and CONT = 1. The software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202800C C   FIELD 14w01 AUTDLY (rw): Delayed conversion mode This bit is set and cleared by software to enable/disable the Auto Delayed Conversion mode.. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202800C C   FIELD 16w01 DISCEN (rw): Discontinuous mode for regular channels This bit is set and cleared by software to enable/disable Discontinuous mode for regular channels. Note: It is not possible to have both discontinuous mode and continuous mode enabled: it is forbidden to set both DISCEN = 1 and CONT = 1. It is not possible to use both auto-injected mode and discontinuous mode simultaneously: the bits DISCEN and JDISCEN must be kept cleared by software when JAUTO is set. The software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202800C C   FIELD 17w03 DISCNUM (rw): Discontinuous mode channel count These bits are written by software to define the number of regular channels to be converted in discontinuous mode, after receiving an external trigger. ... Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202800C C   FIELD 20w01 JDISCEN (rw): Discontinuous mode on injected channels This bit is set and cleared by software to enable/disable discontinuous mode on the injected channels of a group. Note: The software is allowed to write this bit only when JADSTART = 0 (which ensures that no injected conversion is ongoing). It is not possible to use both auto-injected mode and discontinuous mode simultaneously: the bits DISCEN and JDISCEN must be kept cleared by software when JAUTO is set.
0x5202800C C   FIELD 22w01 AWD1SGL (rw): Enable the watchdog 1 on a single channel or on all channels This bit is set and cleared by software to enable the analog watchdog on the channel identified by the AWD1CH[4:0] bits or on all the channels Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202800C C   FIELD 23w01 AWD1EN (rw): Analog watchdog 1 enable on regular channels This bit is set and cleared by software Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202800C C   FIELD 24w01 JAWD1EN (rw): Analog watchdog 1 enable on injected channels This bit is set and cleared by software Note: The software is allowed to write this bit only when JADSTART = 0 (which ensures that no injected conversion is ongoing).
0x5202800C C   FIELD 25w01 JAUTO (rw): Automatic injected group conversion This bit is set and cleared by software to enable/disable automatic injected group conversion after regular group conversion. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no regular nor injected conversion is ongoing).
0x5202800C C   FIELD 26w05 AWD1CH (rw): Analog watchdog 1 channel selection These bits are set and cleared by software. They select the input channel to be guarded by the analog watchdog. ..... Others: Reserved, must not be used Note: The channel selected by AWD1CH must be also selected into the SQRi or JSQRi registers. Software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 B  REGISTER ADC_CFGR2: ADC configuration register 2
0x52028010 C   FIELD 00w01 ROVSE (rw): Regular Oversampling Enable This bit is set and cleared by software to enable regular oversampling. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing)
0x52028010 C   FIELD 01w01 JOVSE (rw): Injected Oversampling Enable This bit is set and cleared by software to enable injected oversampling. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing)
0x52028010 C   FIELD 05w04 OVSS (rw): Oversampling right shift This bit field is set and cleared by software to define the right shifting applied to the raw oversampling result. Others: Reserved, must not be used. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 C   FIELD 09w01 TROVS (rw): Triggered Regular Oversampling This bit is set and cleared by software to enable triggered oversampling Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 C   FIELD 10w01 ROVSM (rw): Regular Oversampling mode This bit is set and cleared by software to select the regular oversampling mode. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 C   FIELD 13w01 BULB (rw): Bulb sampling mode This bit is set and cleared by software to select the bulb sampling mode. SMPTRIG bit must not be set when the BULB bit is set. The very first ADC conversion is performed with the sampling time specified in SMPx bits. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 C   FIELD 14w01 SWTRIG (rw): Software trigger bit for sampling time control trigger mode This bit is set and cleared by software to enable the bulb sampling mode. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 C   FIELD 15w01 SMPTRIG (rw): Sampling time control trigger mode This bit is set and cleared by software to enable the sampling time control trigger mode. The sampling time starts on the trigger rising edge, and the conversion on the trigger falling edge. EXTEN[1:0] bits must be set to 01. BULB bit must not be set when the SMPTRIG bit is set. When EXTEN[1:0] bits is set to 00, set SWTRIG to start the sampling and clear SWTRIG bit to start the conversion. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 C   FIELD 16w10 OSR (rw): Oversampling ratio This bitfield is set and cleared by software to define the oversampling ratio. 2: 3x ... 1023: 1024x Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 C   FIELD 27w01 LFTRIG (rw): Low-frequency trigger This bit is set and cleared by software Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028010 C   FIELD 28w04 LSHIFT (rw): Left shift factor This bitfield is set and cleared by software to define the left shifting applied to the final result with or without oversampling. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 B  REGISTER ADC_SMPR1: ADC sample time register 1
0x52028014 C   FIELD 00w03 SMP0 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 03w03 SMP1 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 06w03 SMP2 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 09w03 SMP3 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 12w03 SMP4 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 15w03 SMP5 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 18w03 SMP6 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 21w03 SMP7 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 24w03 SMP8 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028014 C   FIELD 27w03 SMP9 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sample cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 B  REGISTER ADC_SMPR2: ADC sample time register 2
0x52028018 C   FIELD 00w03 SMP10 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 03w03 SMP11 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 06w03 SMP12 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 09w03 SMP13 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 12w03 SMP14 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 15w03 SMP15 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 18w03 SMP16 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 21w03 SMP17 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 24w03 SMP18 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028018 C   FIELD 27w03 SMP19 (rw): Channel x sampling time selection (x = 0 to 9) These bits are written by software to select the sampling time individually for each channel. During sampling cycles, the channel selection bits must remain unchanged. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C B  REGISTER ADC_PCSEL: ADC channel preselection register
0x5202801C C   FIELD 00w01 PCSEL0 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 01w01 PCSEL1 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 02w01 PCSEL2 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 03w01 PCSEL3 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 04w01 PCSEL4 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 05w01 PCSEL5 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 06w01 PCSEL6 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 07w01 PCSEL7 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 08w01 PCSEL8 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 09w01 PCSEL9 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 10w01 PCSEL10 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 11w01 PCSEL11 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 12w01 PCSEL12 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 13w01 PCSEL13 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 14w01 PCSEL14 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 15w01 PCSEL15 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 16w01 PCSEL16 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 17w01 PCSEL17 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 18w01 PCSEL18 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202801C C   FIELD 19w01 PCSEL19 (rw): Channel i (VINP[i]) preselection These bits are written by software to preselect the input channel I/O instance to be converted. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028030 B  REGISTER ADC_SQR1: ADC regular sequence register 1
0x52028030 C   FIELD 00w04 L (rw): Regular channel sequence length These bits are written by software to define the total number of conversions in the regular channel conversion sequence. ... Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028030 C   FIELD 06w05 SQ1 (rw): 1st conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 1st in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028030 C   FIELD 12w05 SQ2 (rw): 2nd conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 2nd in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028030 C   FIELD 18w05 SQ3 (rw): 3rd conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 3rd in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028030 C   FIELD 24w05 SQ4 (rw): 4th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 4th in the regular conversion sequence.
0x52028034 B  REGISTER ADC_SQR2: ADC regular sequence register 2
0x52028034 C   FIELD 00w05 SQ5 (rw): 5th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 5th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028034 C   FIELD 06w05 SQ6 (rw): 6th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 6th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028034 C   FIELD 12w05 SQ7 (rw): 7th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 7th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028034 C   FIELD 18w05 SQ8 (rw): 8th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 8th in the regular conversion sequence Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028034 C   FIELD 24w05 SQ9 (rw): 9th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 9th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028038 B  REGISTER ADC_SQR3: ADC regular sequence register 3
0x52028038 C   FIELD 00w05 SQ10 (rw): 10th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 10th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028038 C   FIELD 06w05 SQ11 (rw): 11th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 11th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028038 C   FIELD 12w05 SQ12 (rw): 12th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 12th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028038 C   FIELD 18w05 SQ13 (rw): 13th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 13th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028038 C   FIELD 24w05 SQ14 (rw): 14th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 14th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202803C B  REGISTER ADC_SQR4: ADC regular sequence register 4
0x5202803C C   FIELD 00w05 SQ15 (rw): 15th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 15th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x5202803C C   FIELD 06w05 SQ16 (rw): 16th conversion in regular sequence These bits are written by software with the channel number (0..19) assigned as the 16th in the regular conversion sequence. Note: The software is allowed to write these bits only when ADSTART = 0 (which ensures that no regular conversion is ongoing).
0x52028040 B  REGISTER ADC_DR: ADC regular Data Register
0x52028040 C   FIELD 00w32 RDATA (ro): Regular data converted These bits are read-only. They contain the conversion result from the last converted regular channel. The data are left- or right-aligned as described in .
0x5202804C B  REGISTER ADC_JSQR: ADC injected sequence register
0x5202804C C   FIELD 00w02 JL (rw): Injected channel sequence length These bits are written by software to define the total number of conversions in the injected channel conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x5202804C C   FIELD 02w05 JEXTSEL (rw): External trigger selection for injected group These bits select the external event used to trigger the start of conversion of an injected group: ... Refer to the ADC external trigger for injected channels in internal signals for details on trigger mapping. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x5202804C C   FIELD 07w02 JEXTEN (rw): External trigger enable and polarity selection for injected channels These bits are set and cleared by software to select the external trigger polarity and enable the trigger of an injected group. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x5202804C C   FIELD 09w05 JSQ1 (rw): 1st conversion in the injected sequence These bits are written by software with the channel number (0..19) assigned as the 1st in the injected conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x5202804C C   FIELD 15w05 JSQ2 (rw): 2nd conversion in the injected sequence These bits are written by software with the channel number (0..19) assigned as the 2nd in the injected conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x5202804C C   FIELD 21w05 JSQ3 (rw): 3rd conversion in the injected sequence These bits are written by software with the channel number (0..19) assigned as the 3rd in the injected conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x5202804C C   FIELD 27w05 JSQ4 (rw): 4th conversion in the injected sequence These bits are written by software with the channel number (0..19) assigned as the 4th in the injected conversion sequence. Note: The software is allowed to write these bits only when JADSTART = 0 (which ensures that no injected conversion is ongoing.
0x52028060 B  REGISTER ADC_OFR1: ADC offset register
0x52028060 C   FIELD 00w24 OFFSET (rw): Data offset y for the channel programmed into OFFSETy_CH[4:0] bits These bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion). When OFFSETy[21:0] bitfield is reset, the offset compensation is disabled. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction. For example, if OFFSET1_CH[4:0] = 4 and OFFSET2_CH[4:0] = 4, this is OFFSET1[25:0] that is subtracted when converting channel 4.
0x52028060 C   FIELD 24w01 POSOFF (rw): offset sign This bit is set and cleared by software to enable the positive offset. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028060 C   FIELD 25w01 USAT (rw): Unsigned saturation enable This bit is written by software to enable or disable the unsigned saturation feature. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028060 C   FIELD 26w01 SSAT (rw): Signed saturation enable This bit is written by software to enable or disable the Signed saturation feature. (see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details). Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028060 C   FIELD 27w05 OFFSET_CH (rw): Channel selection for the data offset y These bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.
0x52028064 B  REGISTER ADC_OFR2: ADC offset register
0x52028064 C   FIELD 00w24 OFFSET (rw): Data offset y for the channel programmed into OFFSETy_CH[4:0] bits These bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion). When OFFSETy[21:0] bitfield is reset, the offset compensation is disabled. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction. For example, if OFFSET1_CH[4:0] = 4 and OFFSET2_CH[4:0] = 4, this is OFFSET1[25:0] that is subtracted when converting channel 4.
0x52028064 C   FIELD 24w01 POSOFF (rw): offset sign This bit is set and cleared by software to enable the positive offset. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028064 C   FIELD 25w01 USAT (rw): Unsigned saturation enable This bit is written by software to enable or disable the unsigned saturation feature. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028064 C   FIELD 26w01 SSAT (rw): Signed saturation enable This bit is written by software to enable or disable the Signed saturation feature. (see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details). Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028064 C   FIELD 27w05 OFFSET_CH (rw): Channel selection for the data offset y These bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.
0x52028068 B  REGISTER ADC_OFR3: ADC offset register
0x52028068 C   FIELD 00w24 OFFSET (rw): Data offset y for the channel programmed into OFFSETy_CH[4:0] bits These bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion). When OFFSETy[21:0] bitfield is reset, the offset compensation is disabled. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction. For example, if OFFSET1_CH[4:0] = 4 and OFFSET2_CH[4:0] = 4, this is OFFSET1[25:0] that is subtracted when converting channel 4.
0x52028068 C   FIELD 24w01 POSOFF (rw): offset sign This bit is set and cleared by software to enable the positive offset. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028068 C   FIELD 25w01 USAT (rw): Unsigned saturation enable This bit is written by software to enable or disable the unsigned saturation feature. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028068 C   FIELD 26w01 SSAT (rw): Signed saturation enable This bit is written by software to enable or disable the Signed saturation feature. (see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details). Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x52028068 C   FIELD 27w05 OFFSET_CH (rw): Channel selection for the data offset y These bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.
0x5202806C B  REGISTER ADC_OFR4: ADC offset register
0x5202806C C   FIELD 00w24 OFFSET (rw): Data offset y for the channel programmed into OFFSETy_CH[4:0] bits These bits are written by software to define the offset y to be subtracted from the raw converted data when converting a channel (regular or injected). The channel to which the data offset y applies must be programmed to the OFFSETy_CH[4:0] bits. The conversion result can be read from in the ADC_DR (regular conversion) or from in the ADC_JDRyi registers (injected conversion). When OFFSETy[21:0] bitfield is reset, the offset compensation is disabled. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If several offsets (OFFSETy) point to the same channel, only the offset with the lowest y value is considered for the subtraction. For example, if OFFSET1_CH[4:0] = 4 and OFFSET2_CH[4:0] = 4, this is OFFSET1[25:0] that is subtracted when converting channel 4.
0x5202806C C   FIELD 24w01 POSOFF (rw): offset sign This bit is set and cleared by software to enable the positive offset. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202806C C   FIELD 25w01 USAT (rw): Unsigned saturation enable This bit is written by software to enable or disable the unsigned saturation feature. Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202806C C   FIELD 26w01 SSAT (rw): Signed saturation enable This bit is written by software to enable or disable the Signed saturation feature. (see OFFSETy_CH, OVSS, LSHIFT, USAT, SSAT) for details). Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x5202806C C   FIELD 27w05 OFFSET_CH (rw): Channel selection for the data offset y These bits are written by software to define the channel to which the offset programmed into OFFSETy[25:0] bits applies. Note: The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing). If OFFSETy_EN bit is set, it is not allowed to select the same channel in different ADC_OFRy registers.
0x52028070 B  REGISTER ADC_GCOMP: ADC gain compensation register
0x52028070 C   FIELD 00w14 GCOMPCOEFF (rw): Gain compensation coefficient These bits are set and cleared by software to program the gain compensation coefficient. ... ... The coefficient is divided by 4096 to get the gain factor ranging from 0 to 3.999756. Note: This gain compensation is only applied when GCOMP bit of ADCx_CFGR2 register is 1.
0x52028070 C   FIELD 31w01 GCOMP (rw): Gain compensation mode This bit is set and cleared by software to enable the gain compensation mode. Note: The software is allowed to write this bit only when ADSTART = 0 (which ensures that no conversion is ongoing).
0x52028080 B  REGISTER ADC_JDR1: ADC injected data register
0x52028080 C   FIELD 00w32 JDATA (ro): Injected data These bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .
0x52028084 B  REGISTER ADC_JDR2: ADC injected data register
0x52028084 C   FIELD 00w32 JDATA (ro): Injected data These bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .
0x52028088 B  REGISTER ADC_JDR3: ADC injected data register
0x52028088 C   FIELD 00w32 JDATA (ro): Injected data These bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .
0x5202808C B  REGISTER ADC_JDR4: ADC injected data register
0x5202808C C   FIELD 00w32 JDATA (ro): Injected data These bits are read-only. They contain the conversion result from injected channel y. The data are left -or right-aligned as described in .
0x520280A0 B  REGISTER ADC_AWD2CR: ADC analog watchdog 2 configuration register
0x520280A0 C   FIELD 00w20 AWD2CH (rw): Analog watchdog 2 channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by the analog watchdog 2. AWD2CH[i] = 0: ADC analog input channel-i is not monitored by AWD2 AWD2CH[i] = 1: ADC analog input channel-i is monitored by AWD2 When AWD2CH[19:0] = 000..0, the analog Watchdog 2 is disabled Note: The channels selected by AWD2CH must be also selected into the SQRi or JSQRi registers. Software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x520280A4 B  REGISTER ADC_AWD3CR: ADC analog watchdog 3 configuration register
0x520280A4 C   FIELD 00w20 AWD3CH (rw): Analog watchdog 3 channel selection These bits are set and cleared by software. They enable and select the input channels to be guarded by the analog watchdog 3. AWD3CH[i] = 0: ADC analog input channel-i is not monitored by AWD3 AWD3CH[i] = 1: ADC analog input channel-i is monitored by AWD3 When AWD3CH[19:0] = 000..0, the analog Watchdog 3 is disabled Note: The channels selected by AWD3CH must be also selected into the SQRi or JSQRi registers. The software is allowed to write these bits only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x520280A8 B  REGISTER ADC_LTR1: ADC watchdog threshold register 1
0x520280A8 C   FIELD 00w25 LTR1 (rw): Analog watchdog 1 lower threshold These bits are written by software to define the lower threshold for the analog watchdog 1. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x520280AC B  REGISTER ADC_HTR1: ADC watchdog threshold register 1
0x520280AC C   FIELD 00w25 HTR1 (rw): Analog watchdog 1 higher threshold These bits are written by software to define the higher threshold for the analog watchdog 1. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x520280AC C   FIELD 29w03 AWDFILT1 (rw): Analog watchdog filtering parameter This bit is set and cleared by software. ... Note: The software is allowed to write this bit only when ADSTART = 0 and JADSTART = 0 (which ensures that no conversion is ongoing).
0x520280B0 B  REGISTER ADC_LTR2: ADC watchdog lower threshold register 2
0x520280B0 C   FIELD 00w25 LTR2 (rw): Analog watchdog 2 lower threshold These bits are written by software to define the lower threshold for the analog watchdog 2. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x520280B4 B  REGISTER ADC_HTR2: ADC watchdog higher threshold register 2
0x520280B4 C   FIELD 00w25 HTR2 (rw): Analog watchdog 2 higher threshold These bits are written by software to define the higher threshold for the analog watchdog 2. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x520280B8 B  REGISTER ADC_LTR3: ADC watchdog lower threshold register 3
0x520280B8 C   FIELD 00w25 LTR3 (rw): Analog watchdog 3 lower threshold These bits are written by software to define the lower threshold for the analog watchdog 3. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x520280BC B  REGISTER ADC_HTR3: ADC watchdog higher threshold register 3
0x520280BC C   FIELD 00w25 HTR3 (rw): Analog watchdog 3 higher threshold These bits are written by software to define the higher threshold for the analog watchdog 3. Refer to AWD2CH, AWD3CH, AWD_HTRy, AWD_LTRy, AWDy).
0x520280C0 B  REGISTER ADC_DIFSEL: ADC differential mode selection register
0x520280C0 C   FIELD 00w20 DIFSEL (rw): Differential mode for channels 19 to 0 These bits are set and cleared by software. They allow selecting if a channel is configured as single ended or differential mode. DIFSEL[i] = 0: ADC analog input channel-i is configured in single ended mode DIFSEL[i] = 1: ADC analog input channel-i is configured in differential mode Note: The software is allowed to write these bits only when the ADC is disabled (ADCAL = 0, JADSTART = 0, JADSTP = 0, ADSTART = 0, ADSTP = 0, ADDIS = 0 and ADEN = 0).
0x520280C4 B  REGISTER ADC_CALFACT: ADC user control register
0x520280C4 C   FIELD 00w08 I_APB_ADDR (ro): Delayed write access address This bitfield contains the address that is being written during delayed write accesses.
0x520280C4 C   FIELD 08w08 I_APB_DATA (ro): Delayed write access data This bitfield contains the data that are being written during delayed write accesses.
0x520280C4 C   FIELD 16w01 VALIDITY (ro): Delayed write access status bit This bit indicates the communication status between the ADC digital and analog blocks.
0x520280C4 C   FIELD 24w01 LATCH_COEF (rw): Calibration factor latch enable bit This bit latches the calibration factor in the CALFACT[31:0] bits.
0x520280C4 C   FIELD 25w01 CAPTURE_COEF (rw): Calibration factor capture enable bit This bit enables the internal calibration factor capture.
0x520280C8 B  REGISTER ADC_CALFACT2: ADC calibration factor register
0x520280C8 C   FIELD 00w32 CALFACT (rw): Linearity or offset calibration factor These bits can be written either by hardware or by software. They contain the 32-bit offset or linearity calibration factor. When CAPTURE_COEF is set to 1, the calibration factor of the analog block is read back and stored in CALFACT[31:0], indexed by CALINDEX[3:0] bits. When LATCH_COEF is set to 1, the calibration factor of the analog block is updated with the value programmed in CALFACT[31:0], indexed by CALINDEX[3:0] bits. To read all calibration factors, perform nine accesses to the ADC_CALFACT2 register. To write all calibration factors, perform eight accesses to the ADC_CALFACT2 register. Note: The software is allowed to write these bits only when ADEN = 1, ADSTART = 0 and JADSTART = 0 (ADC is enabled and no calibration is ongoing and no conversion is ongoing).
0x5202C000 A PERIPHERAL SEC_DCMI
0x5202C000 B  REGISTER CR (rw): control register
0x5202C000 C   FIELD 00w01 CAPTURE: Capture enable
0x5202C000 C   FIELD 01w01 CM: Capture mode
0x5202C000 C   FIELD 02w01 CROP: Crop feature
0x5202C000 C   FIELD 03w01 JPEG: JPEG format
0x5202C000 C   FIELD 04w01 ESS: Embedded synchronization select
0x5202C000 C   FIELD 05w01 PCKPOL: Pixel clock polarity
0x5202C000 C   FIELD 06w01 HSPOL: Horizontal synchronization polarity
0x5202C000 C   FIELD 07w01 VSPOL: Vertical synchronization polarity
0x5202C000 C   FIELD 08w02 FCRC: Frame capture rate control
0x5202C000 C   FIELD 10w02 EDM: Extended data mode
0x5202C000 C   FIELD 14w01 ENABLE: DCMI enable
0x5202C000 C   FIELD 16w02 BSM: Byte Select mode
0x5202C000 C   FIELD 18w01 OEBS: Odd/Even Byte Select (Byte Select Start)
0x5202C000 C   FIELD 19w01 LSM: Line Select mode
0x5202C000 C   FIELD 20w01 OELS: Odd/Even Line Select (Line Select Start)
0x5202C004 B  REGISTER SR (ro): status register
0x5202C004 C   FIELD 00w01 HSYNC: Horizontal synchronization
0x5202C004 C   FIELD 01w01 VSYNC: Vertical synchronization
0x5202C004 C   FIELD 02w01 FNE: FIFO not empty
0x5202C008 B  REGISTER RIS (ro): raw interrupt status register
0x5202C008 C   FIELD 00w01 FRAME_RIS: Capture complete raw interrupt status
0x5202C008 C   FIELD 01w01 OVR_RIS: Overrun raw interrupt status
0x5202C008 C   FIELD 02w01 ERR_RIS: Synchronization error raw interrupt status
0x5202C008 C   FIELD 03w01 VSYNC_RIS: DCMI_VSYNC raw interrupt status
0x5202C008 C   FIELD 04w01 LINE_RIS: Line raw interrupt status
0x5202C00C B  REGISTER IER (rw): interrupt enable register
0x5202C00C C   FIELD 00w01 FRAME_IE: Capture complete interrupt enable
0x5202C00C C   FIELD 01w01 OVR_IE: Overrun interrupt enable
0x5202C00C C   FIELD 02w01 ERR_IE: Synchronization error interrupt enable
0x5202C00C C   FIELD 03w01 VSYNC_IE: DCMI_VSYNC interrupt enable
0x5202C00C C   FIELD 04w01 LINE_IE: Line interrupt enable
0x5202C010 B  REGISTER MIS (ro): masked interrupt status register
0x5202C010 C   FIELD 00w01 FRAME_MIS: Capture complete masked interrupt status
0x5202C010 C   FIELD 01w01 OVR_MIS: Overrun masked interrupt status
0x5202C010 C   FIELD 02w01 ERR_MIS: Synchronization error masked interrupt status
0x5202C010 C   FIELD 03w01 VSYNC_MIS: VSYNC masked interrupt status
0x5202C010 C   FIELD 04w01 LINE_MIS: Line masked interrupt status
0x5202C014 B  REGISTER ICR (wo): interrupt clear register
0x5202C014 C   FIELD 00w01 FRAME_ISC: Capture complete interrupt status clear
0x5202C014 C   FIELD 01w01 OVR_ISC: Overrun interrupt status clear
0x5202C014 C   FIELD 02w01 ERR_ISC: Synchronization error interrupt status clear
0x5202C014 C   FIELD 03w01 VSYNC_ISC: Vertical Synchronization interrupt status clear
0x5202C014 C   FIELD 04w01 LINE_ISC: line interrupt status clear
0x5202C018 B  REGISTER ESCR (rw): background offset register
0x5202C018 C   FIELD 00w08 FSC: Frame start delimiter code
0x5202C018 C   FIELD 08w08 LSC: Line start delimiter code
0x5202C018 C   FIELD 16w08 LEC: Line end delimiter code
0x5202C018 C   FIELD 24w08 FEC: Frame end delimiter code
0x5202C01C B  REGISTER ESUR (rw): embedded synchronization unmask register
0x5202C01C C   FIELD 00w08 FSU: Frame start delimiter unmask
0x5202C01C C   FIELD 08w08 LSU: Line start delimiter unmask
0x5202C01C C   FIELD 16w08 LEU: Line end delimiter unmask
0x5202C01C C   FIELD 24w08 FEU: Frame end delimiter unmask
0x5202C020 B  REGISTER CWSTRT (rw): crop window start
0x5202C020 C   FIELD 00w14 HOFFCNT: Horizontal offset count
0x5202C020 C   FIELD 16w13 VST: Vertical start line count
0x5202C024 B  REGISTER CWSIZE (rw): crop window size
0x5202C024 C   FIELD 00w14 CAPCNT: Capture count
0x5202C024 C   FIELD 16w14 VLINE: Vertical line count
0x5202C028 B  REGISTER DR (ro): data register
0x5202C028 C   FIELD 00w08 BYTE0: Data byte 0
0x5202C028 C   FIELD 08w08 BYTE1: Data byte 1
0x5202C028 C   FIELD 16w08 BYTE2: Data byte 2
0x5202C028 C   FIELD 24w08 BYTE3: Data byte 3
0x5202C400 A PERIPHERAL SEC_PSSI
0x5202C400 B  REGISTER CR (rw): PSSI control register
0x5202C400 C   FIELD 05w01 CKPOL: Parallel data clock polarity This bit configures the capture edge of the parallel clock or the edge used for driving outputs, depending on OUTEN.
0x5202C400 C   FIELD 06w01 DEPOL: Data enable (PSSI_DE) polarity This bit indicates the level on the PSSI_DE pin when the data are not valid on the parallel interface.
0x5202C400 C   FIELD 08w01 RDYPOL: Ready (PSSI_RDY) polarity This bit indicates the level on the PSSI_RDY pin when the data are not valid on the parallel interface.
0x5202C400 C   FIELD 10w02 EDM: Extended data mode
0x5202C400 C   FIELD 14w01 ENABLE: PSSI enable The contents of the FIFO are flushed when ENABLE is cleared to 0. Note: When ENABLE=1, the content of PSSI_CR must not be changed, except for the ENABLE bit itself. All configuration bits can change as soon as ENABLE changes from 0 to 1. The DMA controller and all PSSI configuration registers must be programmed correctly before setting the ENABLE bit to 1. The ENABLE bit and the DCMI ENABLE bit (bit 15 of DCMI_CR) must not be set to 1 at the same time.
0x5202C400 C   FIELD 18w03 DERDYCFG: Data enable and ready configuration When the PSSI_RDY function is mapped to the PSSI_DE pin (settings 101 or 111), it is still the RDYPOL bit which determines its polarity. Similarly, when the PSSI_DE function is mapped to the PSSI_RDY pin (settings 110 or 111), it is still the DEPOL bit which determines its polarity.
0x5202C400 C   FIELD 30w01 DMAEN: DMA enable bit
0x5202C400 C   FIELD 31w01 OUTEN: Data direction selection bit
0x5202C404 B  REGISTER SR (ro): PSSI status register
0x5202C404 C   FIELD 02w01 RTT4B: RTT4B
0x5202C404 C   FIELD 03w01 RTT1B: RTT1B
0x5202C408 B  REGISTER RIS (ro): PSSI raw interrupt status register
0x5202C408 C   FIELD 01w01 OVR_RIS: OVR_RIS
0x5202C40C B  REGISTER IER (rw): PSSI interrupt enable register
0x5202C40C C   FIELD 01w01 OVR_IE: OVR_IE
0x5202C410 B  REGISTER MIS (ro): PSSI masked interrupt status register
0x5202C410 C   FIELD 01w01 OVR_MIS: OVR_MIS
0x5202C414 B  REGISTER ICR (wo): PSSI interrupt clear register
0x5202C414 C   FIELD 01w01 OVR_ISC: OVR_ISC
0x5202C428 B  REGISTER DR (rw): PSSI data register
0x5202C428 C   FIELD 00w08 BYTE0: Data byte 0
0x5202C428 C   FIELD 08w08 BYTE1: Data byte 1
0x5202C428 C   FIELD 16w08 BYTE2: Data byte 2
0x5202C428 C   FIELD 24w08 BYTE3: Data byte 3
0x52038000 A PERIPHERAL SEC_OTG_FS
0x52038000 B  REGISTER GOTGCTL: The GOTGCTL register controls the behavior and reflects the status of the OTG function of the core.
0x52038000 C   FIELD 00w01 SRQSCS (ro): SRQSCS
0x52038000 C   FIELD 01w01 SRQ (rw): SRQ
0x52038000 C   FIELD 02w01 VBVALOEN (rw): VBVALOEN
0x52038000 C   FIELD 03w01 VBVALOVAL (rw): VBVALOVAL
0x52038000 C   FIELD 04w01 AVALOEN (rw): AVALOEN
0x52038000 C   FIELD 05w01 AVALOVAL (rw): AVALOVAL
0x52038000 C   FIELD 06w01 BVALOEN (rw): BVALOEN
0x52038000 C   FIELD 07w01 BVALOVAL (rw): BVALOVAL
0x52038000 C   FIELD 08w01 HNGSCS (ro): HNGSCS
0x52038000 C   FIELD 09w01 HNPRQ (rw): HNPRQ
0x52038000 C   FIELD 10w01 HSHNPEN (rw): HSHNPEN
0x52038000 C   FIELD 11w01 DHNPEN (rw): DHNPEN
0x52038000 C   FIELD 12w01 EHEN (rw): EHEN
0x52038000 C   FIELD 16w01 CIDSTS (ro): CIDSTS
0x52038000 C   FIELD 17w01 DBCT (ro): DBCT
0x52038000 C   FIELD 18w01 ASVLD (ro): ASVLD
0x52038000 C   FIELD 19w01 BSVLD (ro): BSVLD
0x52038000 C   FIELD 20w01 OTGVER (rw): OTGVER
0x52038000 C   FIELD 21w01 CURMOD (ro): CURMOD
0x52038004 B  REGISTER GOTGINT (rw): The application reads this register whenever there is an OTG interrupt and clears the bits in this register to clear the OTG interrupt.
0x52038004 C   FIELD 02w01 SEDET: SEDET
0x52038004 C   FIELD 08w01 SRSSCHG: SRSSCHG
0x52038004 C   FIELD 09w01 HNSSCHG: HNSSCHG
0x52038004 C   FIELD 17w01 HNGDET: HNGDET
0x52038004 C   FIELD 18w01 ADTOCHG: ADTOCHG
0x52038004 C   FIELD 19w01 DBCDNE: DBCDNE
0x52038008 B  REGISTER GAHBCFG (rw): This register can be used to configure the core after power-on or a change in mode. This register mainly contains AHB system-related configuration parameters. Do not change this register after the initial programming. The application must program this register before starting any transactions on either the AHB or the USB.
0x52038008 C   FIELD 00w01 GINTMSK: GINTMSK
0x52038008 C   FIELD 07w01 TXFELVL: TXFELVL
0x52038008 C   FIELD 08w01 PTXFELVL: PTXFELVL
0x5203800C B  REGISTER GUSBCFG: This register can be used to configure the core after power-on or a changing to host mode or device mode. It contains USB and USB-PHY related configuration parameters. The application must program this register before starting any transactions on either the AHB or the USB. Do not make changes to this register after the initial programming.
0x5203800C C   FIELD 00w03 TOCAL (rw): TOCAL
0x5203800C C   FIELD 06w01 PHYSEL (ro): PHYSEL
0x5203800C C   FIELD 08w01 SRPCAP (rw): SRPCAP
0x5203800C C   FIELD 09w01 HNPCAP (rw): HNPCAP
0x5203800C C   FIELD 10w04 TRDT (rw): TRDT
0x5203800C C   FIELD 29w01 FHMOD (rw): FHMOD
0x5203800C C   FIELD 30w01 FDMOD (rw): FDMOD
0x52038010 B  REGISTER GRSTCTL: The application uses this register to reset various hardware features inside the core.
0x52038010 C   FIELD 00w01 CSRST (ro): CSRST
0x52038010 C   FIELD 01w01 PSRST (rw): PSRST
0x52038010 C   FIELD 02w01 FSRST (rw): FSRST
0x52038010 C   FIELD 04w01 RXFFLSH (rw): RXFFLSH
0x52038010 C   FIELD 05w01 TXFFLSH (rw): TXFFLSH
0x52038010 C   FIELD 06w05 TXFNUM (rw): TXFNUM
0x52038010 C   FIELD 31w01 AHBIDL (ro): AHBIDL
0x52038014 B  REGISTER GINTSTS: This register interrupts the application for system-level events in the current mode (device mode or host mode). Some of the bits in this register are valid only in host mode, while others are valid in device mode only. This register also indicates the current mode. To clear the interrupt status bits of the rc_w1 type, the application must write 1 into the bit. The FIFO status interrupts are read-only; once software reads from or writes to the FIFO while servicing these interrupts, FIFO interrupt conditions are cleared automatically. The application must clear the GINTSTS register at initialization before unmasking the interrupt bit to avoid any interrupts generated prior to initialization.
0x52038014 C   FIELD 00w01 CMOD (ro): CMOD
0x52038014 C   FIELD 01w01 MMIS (rw): MMIS
0x52038014 C   FIELD 02w01 OTGINT (ro): OTGINT
0x52038014 C   FIELD 03w01 SOF (rw): SOF
0x52038014 C   FIELD 04w01 RXFLVL (ro): RXFLVL
0x52038014 C   FIELD 05w01 NPTXFE (ro): NPTXFE
0x52038014 C   FIELD 06w01 GINAKEFF (ro): GINAKEFF
0x52038014 C   FIELD 07w01 GONAKEFF (ro): GONAKEFF
0x52038014 C   FIELD 10w01 ESUSP (rw): ESUSP
0x52038014 C   FIELD 11w01 USBSUSP (rw): USBSUSP
0x52038014 C   FIELD 12w01 USBRST (rw): USBRST
0x52038014 C   FIELD 13w01 ENUMDNE (rw): ENUMDNE
0x52038014 C   FIELD 14w01 ISOODRP (rw): ISOODRP
0x52038014 C   FIELD 15w01 EOPF (rw): EOPF
0x52038014 C   FIELD 18w01 IEPINT (ro): IEPINT
0x52038014 C   FIELD 19w01 OEPINT (ro): OEPINT
0x52038014 C   FIELD 20w01 IISOIXFR (rw): IISOIXFR
0x52038014 C   FIELD 21w01 IPXFR (rw): IPXFR
0x52038014 C   FIELD 23w01 RSTDET (rw): RSTDET
0x52038014 C   FIELD 24w01 HPRTINT (ro): HPRTINT
0x52038014 C   FIELD 25w01 HCINT (ro): HCINT
0x52038014 C   FIELD 26w01 PTXFE (ro): PTXFE
0x52038014 C   FIELD 27w01 LPMINT (rw): LPMINT
0x52038014 C   FIELD 28w01 CIDSCHG (rw): CIDSCHG
0x52038014 C   FIELD 29w01 DISCINT (rw): DISCINT
0x52038014 C   FIELD 30w01 SRQINT (rw): SRQINT
0x52038014 C   FIELD 31w01 WKUPINT (rw): WKUPINT
0x52038018 B  REGISTER GINTMSK: This register works with the core interrupt register to interrupt the application. When an interrupt bit is masked, the interrupt associated with that bit is not generated. However, the core interrupt (GINTSTS) register bit corresponding to that interrupt is still set.
0x52038018 C   FIELD 01w01 MMISM (rw): MMISM
0x52038018 C   FIELD 02w01 OTGINT (rw): OTGINT
0x52038018 C   FIELD 03w01 SOFM (rw): SOFM
0x52038018 C   FIELD 04w01 RXFLVLM (rw): RXFLVLM
0x52038018 C   FIELD 05w01 NPTXFEM (rw): NPTXFEM
0x52038018 C   FIELD 06w01 GINAKEFFM (rw): GINAKEFFM
0x52038018 C   FIELD 07w01 GONAKEFFM (rw): GONAKEFFM
0x52038018 C   FIELD 10w01 ESUSPM (rw): ESUSPM
0x52038018 C   FIELD 11w01 USBSUSPM (rw): USBSUSPM
0x52038018 C   FIELD 12w01 USBRST (rw): USBRST
0x52038018 C   FIELD 13w01 ENUMDNEM (rw): ENUMDNEM
0x52038018 C   FIELD 14w01 ISOODRPM (rw): ISOODRPM
0x52038018 C   FIELD 15w01 EOPFM (rw): EOPFM
0x52038018 C   FIELD 18w01 IEPINT (rw): IEPINT
0x52038018 C   FIELD 19w01 OEPINT (rw): OEPINT
0x52038018 C   FIELD 20w01 IISOIXFRM (rw): IISOIXFRM
0x52038018 C   FIELD 21w01 IPXFRM (rw): IPXFRM
0x52038018 C   FIELD 23w01 RSTDETM (rw): RSTDETM
0x52038018 C   FIELD 24w01 PRTIM (rw): PRTIM
0x52038018 C   FIELD 25w01 HCIM (rw): HCIM
0x52038018 C   FIELD 26w01 PTXFEM (rw): PTXFEM
0x52038018 C   FIELD 27w01 LPMINTM (rw): LPMINTM
0x52038018 C   FIELD 28w01 CIDSCHGM (rw): CIDSCHGM
0x52038018 C   FIELD 29w01 DISCINT (rw): DISCINT
0x52038018 C   FIELD 30w01 SRQIM (rw): SRQIM
0x52038018 C   FIELD 31w01 WUIM (rw): WUIM
0x5203801C B  REGISTER GRXSTSR_DEVICE (ro): This description is for register GRXSTSR in Device mode. A read to the receive status debug read register returns the contents of the top of the receive FIFO. The core ignores the receive status read when the receive FIFO is empty and returns a value of 0x00000000.
0x5203801C B  REGISTER GRXSTSR_HOST (ro): This description is for register GRXSTSR in Host mode
0x5203801C C   FIELD 00w04 CHNUM: CHNUM
0x5203801C C   FIELD 00w04 EPNUM: EPNUM
0x5203801C C   FIELD 04w11 BCNT: BCNT
0x5203801C C   FIELD 04w11 BCNT: BCNT
0x5203801C C   FIELD 15w02 DPID: DPID
0x5203801C C   FIELD 15w02 DPID: DPID
0x5203801C C   FIELD 17w04 PKTSTS: PKTSTS
0x5203801C C   FIELD 17w04 PKTSTS: PKTSTS
0x5203801C C   FIELD 21w04 FRMNUM: FRMNUM
0x5203801C C   FIELD 27w01 STSPHST: STSPHST
0x52038020 B  REGISTER GRXSTSP_DEVICE (ro): This description is for register GRXSTSP in Device mode. Similarly to GRXSTSR (receive status debug read register) where a read returns the contents of the top of the receive FIFO, a read to GRXSTSP (receive status read and pop register) additionally pops the top data entry out of the Rx FIFO. The core ignores the receive status pop/read when the receive FIFO is empty and returns a value of 0x00000000. The application must only pop the receive status FIFO when the receive FIFO non-empty bit of the core interrupt register (RXFLVL bit in GINTSTS) is asserted.
0x52038020 B  REGISTER GRXSTSP_HOST (ro): This description is for register GRXSTSP in HOST mode
0x52038020 C   FIELD 00w04 CHNUM: CHNUM
0x52038020 C   FIELD 00w04 EPNUM: EPNUM
0x52038020 C   FIELD 04w11 BCNT: BCNT
0x52038020 C   FIELD 04w11 BCNT: BCNT
0x52038020 C   FIELD 15w02 DPID: DPID
0x52038020 C   FIELD 15w02 DPID: DPID
0x52038020 C   FIELD 17w04 PKTSTS: PKTSTS
0x52038020 C   FIELD 17w04 PKTSTS: PKTSTS
0x52038020 C   FIELD 21w04 FRMNUM: FRMNUM
0x52038020 C   FIELD 27w01 STSPHST: STSPHST
0x52038024 B  REGISTER GRXFSIZ (rw): The application can program the RAM size that must be allocated to the Rx FIFO.
0x52038024 C   FIELD 00w16 RXFD: RXFD
0x52038028 B  REGISTER HNPTXFSIZ (rw): Host mode
0x52038028 C   FIELD 00w16 NPTXFSA: NPTXFSA
0x52038028 C   FIELD 16w16 NPTXFD: NPTXFD
0x5203802C B  REGISTER HNPTXSTS (ro): In device mode, this register is not valid. This read-only register contains the free space information for the non-periodic Tx FIFO and the non-periodic transmit request queue.
0x5203802C C   FIELD 00w16 NPTXFSAV: NPTXFSAV
0x5203802C C   FIELD 16w08 NPTQXSAV: NPTQXSAV
0x5203802C C   FIELD 24w07 NPTXQTOP: NPTXQTOP
0x52038038 B  REGISTER GCCFG: OTG general core configuration register
0x52038038 C   FIELD 00w01 DCDET (ro): DCDET
0x52038038 C   FIELD 01w01 PDET (ro): PDET
0x52038038 C   FIELD 02w01 SDET (ro): SDET
0x52038038 C   FIELD 03w01 PS2DET (ro): PS2DET
0x52038038 C   FIELD 16w01 PWRDWN (rw): PWRDWN
0x52038038 C   FIELD 17w01 BCDEN (rw): BCDEN
0x52038038 C   FIELD 18w01 DCDEN (rw): DCDEN
0x52038038 C   FIELD 19w01 PDEN (rw): PDEN
0x52038038 C   FIELD 20w01 SDEN (rw): SDEN
0x52038038 C   FIELD 21w01 VBDEN (rw): VBDEN
0x5203803C B  REGISTER CID (rw): This is a register containing the Product ID as reset value.
0x5203803C C   FIELD 00w32 PRODUCT_ID: PRODUCT_ID
0x52038054 B  REGISTER GLPMCFG: OTG core LPM configuration register
0x52038054 C   FIELD 00w01 LPMEN (rw): LPMEN
0x52038054 C   FIELD 01w01 LPMACK (rw): LPMACK
0x52038054 C   FIELD 02w04 BESL (rw): BESL
0x52038054 C   FIELD 06w01 REMWAKE (rw): REMWAKE
0x52038054 C   FIELD 07w01 L1SSEN (rw): L1SSEN
0x52038054 C   FIELD 08w04 BESLTHRS (rw): BESLTHRS
0x52038054 C   FIELD 12w01 L1DSEN (rw): L1DSEN
0x52038054 C   FIELD 13w02 LPMRSP (ro): LPMRSP
0x52038054 C   FIELD 15w01 SLPSTS (ro): SLPSTS
0x52038054 C   FIELD 16w01 L1RSMOK (ro): L1RSMOK
0x52038054 C   FIELD 17w04 LPMCHIDX (rw): LPMCHIDX
0x52038054 C   FIELD 21w03 LPMRCNT (rw): LPMRCNT
0x52038054 C   FIELD 24w01 SNDLPM (rw): SNDLPM
0x52038054 C   FIELD 25w03 LPMRCNTSTS (ro): LPMRCNTSTS
0x52038054 C   FIELD 28w01 ENBESL (rw): ENBESL
0x52038100 B  REGISTER HPTXFSIZ (rw): OTG host periodic transmit FIFO size register
0x52038100 C   FIELD 00w16 PTXSA: PTXSA
0x52038100 C   FIELD 16w16 PTXFSIZ: PTXFSIZ
0x52038104 B  REGISTER DIEPTXF1 (rw): OTG device IN endpoint transmit FIFO 1 size register
0x52038104 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x52038104 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x52038108 B  REGISTER DIEPTXF2 (rw): OTG device IN endpoint transmit FIFO 2 size register
0x52038108 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x52038108 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x5203810C B  REGISTER DIEPTXF3 (rw): OTG device IN endpoint transmit FIFO 3 size register
0x5203810C C   FIELD 00w16 INEPTXSA: INEPTXSA
0x5203810C C   FIELD 16w16 INEPTXFD: INEPTXFD
0x52038110 B  REGISTER DIEPTXF4 (rw): OTG device IN endpoint transmit FIFO 4 size register
0x52038110 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x52038110 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x52038114 B  REGISTER DIEPTXF5 (rw): OTG device IN endpoint transmit FIFO 5 size register
0x52038114 C   FIELD 00w16 INEPTXSA: INEPTXSA
0x52038114 C   FIELD 16w16 INEPTXFD: INEPTXFD
0x52038400 B  REGISTER HCFG: This register configures the core after power-on. Do not make changes to this register after initializing the host.
0x52038400 C   FIELD 00w02 FSLSPCS (rw): FSLSPCS
0x52038400 C   FIELD 02w01 FSLSS (ro): FSLSS
0x52038404 B  REGISTER HFIR (rw): This register stores the frame interval information for the current speed to which the OTG controller has enumerated.
0x52038404 C   FIELD 00w16 FRIVL: FRIVL
0x52038404 C   FIELD 16w01 RLDCTRL: RLDCTRL
0x52038408 B  REGISTER HFNUM (ro): This register indicates the current frame number. It also indicates the time remaining (in terms of the number of PHY clocks) in the current frame.
0x52038408 C   FIELD 00w16 FRNUM: FRNUM
0x52038408 C   FIELD 16w16 FTREM: FTREM
0x52038410 B  REGISTER HPTXSTS (ro): This read-only register contains the free space information for the periodic Tx FIFO and the periodic transmit request queue.
0x52038410 C   FIELD 00w16 PTXFSAVL: PTXFSAVL
0x52038410 C   FIELD 16w08 PTXQSAV: PTXQSAV
0x52038410 C   FIELD 24w08 PTXQTOP: PTXQTOP
0x52038414 B  REGISTER HAINT (ro): When a significant event occurs on a channel, the host all channels interrupt register interrupts the application using the host channels interrupt bit of the core interrupt register (HCINT bit in GINTSTS). This is shown in Figure724. There is one interrupt bit per channel, up to a maximum of 16 bits. Bits in this register are set and cleared when the application sets and clears bits in the corresponding host channel-x interrupt register.
0x52038414 C   FIELD 00w16 HAINT: HAINT
0x52038418 B  REGISTER HAINTMSK (rw): The host all channel interrupt mask register works with the host all channel interrupt register to interrupt the application when an event occurs on a channel. There is one interrupt mask bit per channel, up to a maximum of 16 bits.
0x52038418 C   FIELD 00w16 HAINTM: HAINTM
0x52038440 B  REGISTER HPRT: This register is available only in host mode. Currently, the OTG host supports only one port. A single register holds USB port-related information such as USB reset, enable, suspend, resume, connect status, and test mode for each port. It is shown in Figure724. The rc_w1 bits in this register can trigger an interrupt to the application through the host port interrupt bit of the core interrupt register (HPRTINT bit in GINTSTS). On a port interrupt, the application must read this register and clear the bit that caused the interrupt. For the rc_w1 bits, the application must write a 1 to the bit to clear the interrupt.
0x52038440 C   FIELD 00w01 PCSTS (ro): PCSTS
0x52038440 C   FIELD 01w01 PCDET (rw): PCDET
0x52038440 C   FIELD 02w01 PENA (rw): PENA
0x52038440 C   FIELD 03w01 PENCHNG (rw): PENCHNG
0x52038440 C   FIELD 04w01 POCA (ro): POCA
0x52038440 C   FIELD 05w01 POCCHNG (rw): POCCHNG
0x52038440 C   FIELD 06w01 PRES (rw): PRES
0x52038440 C   FIELD 07w01 PSUSP (rw): PSUSP
0x52038440 C   FIELD 08w01 PRST (rw): PRST
0x52038440 C   FIELD 10w02 PLSTS (ro): PLSTS
0x52038440 C   FIELD 12w01 PPWR (rw): PPWR
0x52038440 C   FIELD 13w04 PTCTL (rw): PTCTL
0x52038440 C   FIELD 17w02 PSPD (ro): PSPD
0x52038500 B  REGISTER HCCHAR0 (rw): OTG host channel 0 characteristics register
0x52038500 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038500 C   FIELD 11w04 EPNUM: EPNUM
0x52038500 C   FIELD 15w01 EPDIR: EPDIR
0x52038500 C   FIELD 17w01 LSDEV: LSDEV
0x52038500 C   FIELD 18w02 EPTYP: EPTYP
0x52038500 C   FIELD 20w02 MCNT: MCNT
0x52038500 C   FIELD 22w07 DAD: DAD
0x52038500 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038500 C   FIELD 30w01 CHDIS: CHDIS
0x52038500 C   FIELD 31w01 CHENA: CHENA
0x52038508 B  REGISTER HCINT0 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038508 C   FIELD 00w01 XFRC: XFRC
0x52038508 C   FIELD 01w01 CHH: CHH
0x52038508 C   FIELD 03w01 STALL: STALL
0x52038508 C   FIELD 04w01 NAK: NAK
0x52038508 C   FIELD 05w01 ACK: ACK
0x52038508 C   FIELD 07w01 TXERR: TXERR
0x52038508 C   FIELD 08w01 BBERR: BBERR
0x52038508 C   FIELD 09w01 FRMOR: FRMOR
0x52038508 C   FIELD 10w01 DTERR: DTERR
0x5203850C B  REGISTER HCINTMSK0 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203850C C   FIELD 00w01 XFRCM: XFRCM
0x5203850C C   FIELD 01w01 CHHM: CHHM
0x5203850C C   FIELD 03w01 STALLM: STALLM
0x5203850C C   FIELD 04w01 NAKM: NAKM
0x5203850C C   FIELD 05w01 ACKM: ACKM
0x5203850C C   FIELD 07w01 TXERRM: TXERRM
0x5203850C C   FIELD 08w01 BBERRM: BBERRM
0x5203850C C   FIELD 09w01 FRMORM: FRMORM
0x5203850C C   FIELD 10w01 DTERRM: DTERRM
0x52038510 B  REGISTER HCTSIZ0 (rw): OTG host channel 0 transfer size register
0x52038510 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038510 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038510 C   FIELD 29w02 DPID: DPID
0x52038510 C   FIELD 31w01 DOPNG: DOPNG
0x52038520 B  REGISTER HCCHAR1 (rw): OTG host channel 1 characteristics register
0x52038520 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038520 C   FIELD 11w04 EPNUM: EPNUM
0x52038520 C   FIELD 15w01 EPDIR: EPDIR
0x52038520 C   FIELD 17w01 LSDEV: LSDEV
0x52038520 C   FIELD 18w02 EPTYP: EPTYP
0x52038520 C   FIELD 20w02 MCNT: MCNT
0x52038520 C   FIELD 22w07 DAD: DAD
0x52038520 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038520 C   FIELD 30w01 CHDIS: CHDIS
0x52038520 C   FIELD 31w01 CHENA: CHENA
0x52038528 B  REGISTER HCINT1_DEVICE (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038528 C   FIELD 00w01 XFRC: XFRC
0x52038528 C   FIELD 01w01 CHH: CHH
0x52038528 C   FIELD 03w01 STALL: STALL
0x52038528 C   FIELD 04w01 NAK: NAK
0x52038528 C   FIELD 05w01 ACK: ACK
0x52038528 C   FIELD 07w01 TXERR: TXERR
0x52038528 C   FIELD 08w01 BBERR: BBERR
0x52038528 C   FIELD 09w01 FRMOR: FRMOR
0x52038528 C   FIELD 10w01 DTERR: DTERR
0x5203852C B  REGISTER HCINTMSK1 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203852C C   FIELD 00w01 XFRCM: XFRCM
0x5203852C C   FIELD 01w01 CHHM: CHHM
0x5203852C C   FIELD 03w01 STALLM: STALLM
0x5203852C C   FIELD 04w01 NAKM: NAKM
0x5203852C C   FIELD 05w01 ACKM: ACKM
0x5203852C C   FIELD 07w01 TXERRM: TXERRM
0x5203852C C   FIELD 08w01 BBERRM: BBERRM
0x5203852C C   FIELD 09w01 FRMORM: FRMORM
0x5203852C C   FIELD 10w01 DTERRM: DTERRM
0x52038530 B  REGISTER HCTSIZ1 (rw): OTG host channel 1 transfer size register
0x52038530 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038530 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038530 C   FIELD 29w02 DPID: DPID
0x52038530 C   FIELD 31w01 DOPNG: DOPNG
0x52038540 B  REGISTER HCCHAR2 (rw): OTG host channel 2 characteristics register
0x52038540 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038540 C   FIELD 11w04 EPNUM: EPNUM
0x52038540 C   FIELD 15w01 EPDIR: EPDIR
0x52038540 C   FIELD 17w01 LSDEV: LSDEV
0x52038540 C   FIELD 18w02 EPTYP: EPTYP
0x52038540 C   FIELD 20w02 MCNT: MCNT
0x52038540 C   FIELD 22w07 DAD: DAD
0x52038540 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038540 C   FIELD 30w01 CHDIS: CHDIS
0x52038540 C   FIELD 31w01 CHENA: CHENA
0x52038548 B  REGISTER HCINT2 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038548 C   FIELD 00w01 XFRC: XFRC
0x52038548 C   FIELD 01w01 CHH: CHH
0x52038548 C   FIELD 03w01 STALL: STALL
0x52038548 C   FIELD 04w01 NAK: NAK
0x52038548 C   FIELD 05w01 ACK: ACK
0x52038548 C   FIELD 07w01 TXERR: TXERR
0x52038548 C   FIELD 08w01 BBERR: BBERR
0x52038548 C   FIELD 09w01 FRMOR: FRMOR
0x52038548 C   FIELD 10w01 DTERR: DTERR
0x5203854C B  REGISTER HCINTMSK2 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203854C C   FIELD 00w01 XFRCM: XFRCM
0x5203854C C   FIELD 01w01 CHHM: CHHM
0x5203854C C   FIELD 03w01 STALLM: STALLM
0x5203854C C   FIELD 04w01 NAKM: NAKM
0x5203854C C   FIELD 05w01 ACKM: ACKM
0x5203854C C   FIELD 07w01 TXERRM: TXERRM
0x5203854C C   FIELD 08w01 BBERRM: BBERRM
0x5203854C C   FIELD 09w01 FRMORM: FRMORM
0x5203854C C   FIELD 10w01 DTERRM: DTERRM
0x52038550 B  REGISTER HCTSIZ2 (rw): OTG host channel 2 transfer size register
0x52038550 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038550 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038550 C   FIELD 29w02 DPID: DPID
0x52038550 C   FIELD 31w01 DOPNG: DOPNG
0x52038560 B  REGISTER HCCHAR3 (rw): OTG host channel 3 characteristics register
0x52038560 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038560 C   FIELD 11w04 EPNUM: EPNUM
0x52038560 C   FIELD 15w01 EPDIR: EPDIR
0x52038560 C   FIELD 17w01 LSDEV: LSDEV
0x52038560 C   FIELD 18w02 EPTYP: EPTYP
0x52038560 C   FIELD 20w02 MCNT: MCNT
0x52038560 C   FIELD 22w07 DAD: DAD
0x52038560 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038560 C   FIELD 30w01 CHDIS: CHDIS
0x52038560 C   FIELD 31w01 CHENA: CHENA
0x52038568 B  REGISTER HCINT3 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038568 C   FIELD 00w01 XFRC: XFRC
0x52038568 C   FIELD 01w01 CHH: CHH
0x52038568 C   FIELD 03w01 STALL: STALL
0x52038568 C   FIELD 04w01 NAK: NAK
0x52038568 C   FIELD 05w01 ACK: ACK
0x52038568 C   FIELD 07w01 TXERR: TXERR
0x52038568 C   FIELD 08w01 BBERR: BBERR
0x52038568 C   FIELD 09w01 FRMOR: FRMOR
0x52038568 C   FIELD 10w01 DTERR: DTERR
0x5203856C B  REGISTER HCINTMSK3 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203856C C   FIELD 00w01 XFRCM: XFRCM
0x5203856C C   FIELD 01w01 CHHM: CHHM
0x5203856C C   FIELD 03w01 STALLM: STALLM
0x5203856C C   FIELD 04w01 NAKM: NAKM
0x5203856C C   FIELD 05w01 ACKM: ACKM
0x5203856C C   FIELD 07w01 TXERRM: TXERRM
0x5203856C C   FIELD 08w01 BBERRM: BBERRM
0x5203856C C   FIELD 09w01 FRMORM: FRMORM
0x5203856C C   FIELD 10w01 DTERRM: DTERRM
0x52038570 B  REGISTER HCTSIZ3 (rw): OTG host channel 3 transfer size register
0x52038570 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038570 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038570 C   FIELD 29w02 DPID: DPID
0x52038570 C   FIELD 31w01 DOPNG: DOPNG
0x52038580 B  REGISTER HCCHAR4 (rw): OTG host channel 4 characteristics register
0x52038580 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038580 C   FIELD 11w04 EPNUM: EPNUM
0x52038580 C   FIELD 15w01 EPDIR: EPDIR
0x52038580 C   FIELD 17w01 LSDEV: LSDEV
0x52038580 C   FIELD 18w02 EPTYP: EPTYP
0x52038580 C   FIELD 20w02 MCNT: MCNT
0x52038580 C   FIELD 22w07 DAD: DAD
0x52038580 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038580 C   FIELD 30w01 CHDIS: CHDIS
0x52038580 C   FIELD 31w01 CHENA: CHENA
0x52038588 B  REGISTER HCINT4 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038588 C   FIELD 00w01 XFRC: XFRC
0x52038588 C   FIELD 01w01 CHH: CHH
0x52038588 C   FIELD 03w01 STALL: STALL
0x52038588 C   FIELD 04w01 NAK: NAK
0x52038588 C   FIELD 05w01 ACK: ACK
0x52038588 C   FIELD 07w01 TXERR: TXERR
0x52038588 C   FIELD 08w01 BBERR: BBERR
0x52038588 C   FIELD 09w01 FRMOR: FRMOR
0x52038588 C   FIELD 10w01 DTERR: DTERR
0x5203858C B  REGISTER HCINTMSK4 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203858C C   FIELD 00w01 XFRCM: XFRCM
0x5203858C C   FIELD 01w01 CHHM: CHHM
0x5203858C C   FIELD 03w01 STALLM: STALLM
0x5203858C C   FIELD 04w01 NAKM: NAKM
0x5203858C C   FIELD 05w01 ACKM: ACKM
0x5203858C C   FIELD 07w01 TXERRM: TXERRM
0x5203858C C   FIELD 08w01 BBERRM: BBERRM
0x5203858C C   FIELD 09w01 FRMORM: FRMORM
0x5203858C C   FIELD 10w01 DTERRM: DTERRM
0x52038590 B  REGISTER HCTSIZ4 (rw): OTG host channel 4 transfer size register
0x52038590 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038590 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038590 C   FIELD 29w02 DPID: DPID
0x52038590 C   FIELD 31w01 DOPNG: DOPNG
0x520385A0 B  REGISTER HCCHAR5 (rw): OTG host channel 5 characteristics register
0x520385A0 C   FIELD 00w11 MPSIZ: MPSIZ
0x520385A0 C   FIELD 11w04 EPNUM: EPNUM
0x520385A0 C   FIELD 15w01 EPDIR: EPDIR
0x520385A0 C   FIELD 17w01 LSDEV: LSDEV
0x520385A0 C   FIELD 18w02 EPTYP: EPTYP
0x520385A0 C   FIELD 20w02 MCNT: MCNT
0x520385A0 C   FIELD 22w07 DAD: DAD
0x520385A0 C   FIELD 29w01 ODDFRM: ODDFRM
0x520385A0 C   FIELD 30w01 CHDIS: CHDIS
0x520385A0 C   FIELD 31w01 CHENA: CHENA
0x520385A8 B  REGISTER HCINT5 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x520385A8 C   FIELD 00w01 XFRC: XFRC
0x520385A8 C   FIELD 01w01 CHH: CHH
0x520385A8 C   FIELD 03w01 STALL: STALL
0x520385A8 C   FIELD 04w01 NAK: NAK
0x520385A8 C   FIELD 05w01 ACK: ACK
0x520385A8 C   FIELD 07w01 TXERR: TXERR
0x520385A8 C   FIELD 08w01 BBERR: BBERR
0x520385A8 C   FIELD 09w01 FRMOR: FRMOR
0x520385A8 C   FIELD 10w01 DTERR: DTERR
0x520385AC B  REGISTER HCINTMSK5 (rw): This register reflects the mask for each channel status described in the previous section.
0x520385AC C   FIELD 00w01 XFRCM: XFRCM
0x520385AC C   FIELD 01w01 CHHM: CHHM
0x520385AC C   FIELD 03w01 STALLM: STALLM
0x520385AC C   FIELD 04w01 NAKM: NAKM
0x520385AC C   FIELD 05w01 ACKM: ACKM
0x520385AC C   FIELD 07w01 TXERRM: TXERRM
0x520385AC C   FIELD 08w01 BBERRM: BBERRM
0x520385AC C   FIELD 09w01 FRMORM: FRMORM
0x520385AC C   FIELD 10w01 DTERRM: DTERRM
0x520385B0 B  REGISTER HCTSIZ5 (rw): OTG host channel 5 transfer size register
0x520385B0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x520385B0 C   FIELD 19w10 PKTCNT: PKTCNT
0x520385B0 C   FIELD 29w02 DPID: DPID
0x520385B0 C   FIELD 31w01 DOPNG: DOPNG
0x520385C0 B  REGISTER HCCHAR6 (rw): OTG host channel 6 characteristics register
0x520385C0 C   FIELD 00w11 MPSIZ: MPSIZ
0x520385C0 C   FIELD 11w04 EPNUM: EPNUM
0x520385C0 C   FIELD 15w01 EPDIR: EPDIR
0x520385C0 C   FIELD 17w01 LSDEV: LSDEV
0x520385C0 C   FIELD 18w02 EPTYP: EPTYP
0x520385C0 C   FIELD 20w02 MCNT: MCNT
0x520385C0 C   FIELD 22w07 DAD: DAD
0x520385C0 C   FIELD 29w01 ODDFRM: ODDFRM
0x520385C0 C   FIELD 30w01 CHDIS: CHDIS
0x520385C0 C   FIELD 31w01 CHENA: CHENA
0x520385C8 B  REGISTER HCINT6 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x520385C8 C   FIELD 00w01 XFRC: XFRC
0x520385C8 C   FIELD 01w01 CHH: CHH
0x520385C8 C   FIELD 03w01 STALL: STALL
0x520385C8 C   FIELD 04w01 NAK: NAK
0x520385C8 C   FIELD 05w01 ACK: ACK
0x520385C8 C   FIELD 07w01 TXERR: TXERR
0x520385C8 C   FIELD 08w01 BBERR: BBERR
0x520385C8 C   FIELD 09w01 FRMOR: FRMOR
0x520385C8 C   FIELD 10w01 DTERR: DTERR
0x520385CC B  REGISTER HCINTMSK6 (rw): This register reflects the mask for each channel status described in the previous section.
0x520385CC C   FIELD 00w01 XFRCM: XFRCM
0x520385CC C   FIELD 01w01 CHHM: CHHM
0x520385CC C   FIELD 03w01 STALLM: STALLM
0x520385CC C   FIELD 04w01 NAKM: NAKM
0x520385CC C   FIELD 05w01 ACKM: ACKM
0x520385CC C   FIELD 07w01 TXERRM: TXERRM
0x520385CC C   FIELD 08w01 BBERRM: BBERRM
0x520385CC C   FIELD 09w01 FRMORM: FRMORM
0x520385CC C   FIELD 10w01 DTERRM: DTERRM
0x520385D0 B  REGISTER HCTSIZ6 (rw): OTG host channel 6 transfer size register
0x520385D0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x520385D0 C   FIELD 19w10 PKTCNT: PKTCNT
0x520385D0 C   FIELD 29w02 DPID: DPID
0x520385D0 C   FIELD 31w01 DOPNG: DOPNG
0x520385E0 B  REGISTER HCCHAR7 (rw): OTG host channel 7 characteristics register
0x520385E0 C   FIELD 00w11 MPSIZ: MPSIZ
0x520385E0 C   FIELD 11w04 EPNUM: EPNUM
0x520385E0 C   FIELD 15w01 EPDIR: EPDIR
0x520385E0 C   FIELD 17w01 LSDEV: LSDEV
0x520385E0 C   FIELD 18w02 EPTYP: EPTYP
0x520385E0 C   FIELD 20w02 MCNT: MCNT
0x520385E0 C   FIELD 22w07 DAD: DAD
0x520385E0 C   FIELD 29w01 ODDFRM: ODDFRM
0x520385E0 C   FIELD 30w01 CHDIS: CHDIS
0x520385E0 C   FIELD 31w01 CHENA: CHENA
0x520385E8 B  REGISTER HCINT7 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x520385E8 C   FIELD 00w01 XFRC: XFRC
0x520385E8 C   FIELD 01w01 CHH: CHH
0x520385E8 C   FIELD 03w01 STALL: STALL
0x520385E8 C   FIELD 04w01 NAK: NAK
0x520385E8 C   FIELD 05w01 ACK: ACK
0x520385E8 C   FIELD 07w01 TXERR: TXERR
0x520385E8 C   FIELD 08w01 BBERR: BBERR
0x520385E8 C   FIELD 09w01 FRMOR: FRMOR
0x520385E8 C   FIELD 10w01 DTERR: DTERR
0x520385EC B  REGISTER HCINTMSK7 (rw): This register reflects the mask for each channel status described in the previous section.
0x520385EC C   FIELD 00w01 XFRCM: XFRCM
0x520385EC C   FIELD 01w01 CHHM: CHHM
0x520385EC C   FIELD 03w01 STALLM: STALLM
0x520385EC C   FIELD 04w01 NAKM: NAKM
0x520385EC C   FIELD 05w01 ACKM: ACKM
0x520385EC C   FIELD 07w01 TXERRM: TXERRM
0x520385EC C   FIELD 08w01 BBERRM: BBERRM
0x520385EC C   FIELD 09w01 FRMORM: FRMORM
0x520385EC C   FIELD 10w01 DTERRM: DTERRM
0x520385F0 B  REGISTER HCTSIZ7 (rw): OTG host channel 7 transfer size register
0x520385F0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x520385F0 C   FIELD 19w10 PKTCNT: PKTCNT
0x520385F0 C   FIELD 29w02 DPID: DPID
0x520385F0 C   FIELD 31w01 DOPNG: DOPNG
0x52038600 B  REGISTER HCCHAR8 (rw): OTG host channel 8 characteristics register
0x52038600 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038600 C   FIELD 11w04 EPNUM: EPNUM
0x52038600 C   FIELD 15w01 EPDIR: EPDIR
0x52038600 C   FIELD 17w01 LSDEV: LSDEV
0x52038600 C   FIELD 18w02 EPTYP: EPTYP
0x52038600 C   FIELD 20w02 MCNT: MCNT
0x52038600 C   FIELD 22w07 DAD: DAD
0x52038600 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038600 C   FIELD 30w01 CHDIS: CHDIS
0x52038600 C   FIELD 31w01 CHENA: CHENA
0x52038608 B  REGISTER HCINT8 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038608 C   FIELD 00w01 XFRC: XFRC
0x52038608 C   FIELD 01w01 CHH: CHH
0x52038608 C   FIELD 03w01 STALL: STALL
0x52038608 C   FIELD 04w01 NAK: NAK
0x52038608 C   FIELD 05w01 ACK: ACK
0x52038608 C   FIELD 07w01 TXERR: TXERR
0x52038608 C   FIELD 08w01 BBERR: BBERR
0x52038608 C   FIELD 09w01 FRMOR: FRMOR
0x52038608 C   FIELD 10w01 DTERR: DTERR
0x5203860C B  REGISTER HCINTMSK8 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203860C C   FIELD 00w01 XFRCM: XFRCM
0x5203860C C   FIELD 01w01 CHHM: CHHM
0x5203860C C   FIELD 03w01 STALLM: STALLM
0x5203860C C   FIELD 04w01 NAKM: NAKM
0x5203860C C   FIELD 05w01 ACKM: ACKM
0x5203860C C   FIELD 07w01 TXERRM: TXERRM
0x5203860C C   FIELD 08w01 BBERRM: BBERRM
0x5203860C C   FIELD 09w01 FRMORM: FRMORM
0x5203860C C   FIELD 10w01 DTERRM: DTERRM
0x52038610 B  REGISTER HCTSIZ8 (rw): OTG host channel 8 transfer size register
0x52038610 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038610 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038610 C   FIELD 29w02 DPID: DPID
0x52038610 C   FIELD 31w01 DOPNG: DOPNG
0x52038620 B  REGISTER HCCHAR9 (rw): OTG host channel 9 characteristics register
0x52038620 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038620 C   FIELD 11w04 EPNUM: EPNUM
0x52038620 C   FIELD 15w01 EPDIR: EPDIR
0x52038620 C   FIELD 17w01 LSDEV: LSDEV
0x52038620 C   FIELD 18w02 EPTYP: EPTYP
0x52038620 C   FIELD 20w02 MCNT: MCNT
0x52038620 C   FIELD 22w07 DAD: DAD
0x52038620 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038620 C   FIELD 30w01 CHDIS: CHDIS
0x52038620 C   FIELD 31w01 CHENA: CHENA
0x52038628 B  REGISTER HCINT9 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038628 C   FIELD 00w01 XFRC: XFRC
0x52038628 C   FIELD 01w01 CHH: CHH
0x52038628 C   FIELD 03w01 STALL: STALL
0x52038628 C   FIELD 04w01 NAK: NAK
0x52038628 C   FIELD 05w01 ACK: ACK
0x52038628 C   FIELD 07w01 TXERR: TXERR
0x52038628 C   FIELD 08w01 BBERR: BBERR
0x52038628 C   FIELD 09w01 FRMOR: FRMOR
0x52038628 C   FIELD 10w01 DTERR: DTERR
0x5203862C B  REGISTER HCINTMSK9 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203862C C   FIELD 00w01 XFRCM: XFRCM
0x5203862C C   FIELD 01w01 CHHM: CHHM
0x5203862C C   FIELD 03w01 STALLM: STALLM
0x5203862C C   FIELD 04w01 NAKM: NAKM
0x5203862C C   FIELD 05w01 ACKM: ACKM
0x5203862C C   FIELD 07w01 TXERRM: TXERRM
0x5203862C C   FIELD 08w01 BBERRM: BBERRM
0x5203862C C   FIELD 09w01 FRMORM: FRMORM
0x5203862C C   FIELD 10w01 DTERRM: DTERRM
0x52038630 B  REGISTER HCTSIZ9 (rw): OTG host channel 9 transfer size register
0x52038630 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038630 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038630 C   FIELD 29w02 DPID: DPID
0x52038630 C   FIELD 31w01 DOPNG: DOPNG
0x52038640 B  REGISTER HCCHAR10 (rw): OTG host channel 10 characteristics register
0x52038640 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038640 C   FIELD 11w04 EPNUM: EPNUM
0x52038640 C   FIELD 15w01 EPDIR: EPDIR
0x52038640 C   FIELD 17w01 LSDEV: LSDEV
0x52038640 C   FIELD 18w02 EPTYP: EPTYP
0x52038640 C   FIELD 20w02 MCNT: MCNT
0x52038640 C   FIELD 22w07 DAD: DAD
0x52038640 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038640 C   FIELD 30w01 CHDIS: CHDIS
0x52038640 C   FIELD 31w01 CHENA: CHENA
0x52038648 B  REGISTER HCINT10 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038648 C   FIELD 00w01 XFRC: XFRC
0x52038648 C   FIELD 01w01 CHH: CHH
0x52038648 C   FIELD 03w01 STALL: STALL
0x52038648 C   FIELD 04w01 NAK: NAK
0x52038648 C   FIELD 05w01 ACK: ACK
0x52038648 C   FIELD 07w01 TXERR: TXERR
0x52038648 C   FIELD 08w01 BBERR: BBERR
0x52038648 C   FIELD 09w01 FRMOR: FRMOR
0x52038648 C   FIELD 10w01 DTERR: DTERR
0x5203864C B  REGISTER HCINTMSK10 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203864C C   FIELD 00w01 XFRCM: XFRCM
0x5203864C C   FIELD 01w01 CHHM: CHHM
0x5203864C C   FIELD 03w01 STALLM: STALLM
0x5203864C C   FIELD 04w01 NAKM: NAKM
0x5203864C C   FIELD 05w01 ACKM: ACKM
0x5203864C C   FIELD 07w01 TXERRM: TXERRM
0x5203864C C   FIELD 08w01 BBERRM: BBERRM
0x5203864C C   FIELD 09w01 FRMORM: FRMORM
0x5203864C C   FIELD 10w01 DTERRM: DTERRM
0x52038650 B  REGISTER HCTSIZ10 (rw): OTG host channel 10 transfer size register
0x52038650 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038650 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038650 C   FIELD 29w02 DPID: DPID
0x52038650 C   FIELD 31w01 DOPNG: DOPNG
0x52038660 B  REGISTER HCCHAR11 (rw): OTG host channel 11 characteristics register
0x52038660 C   FIELD 00w11 MPSIZ: MPSIZ
0x52038660 C   FIELD 11w04 EPNUM: EPNUM
0x52038660 C   FIELD 15w01 EPDIR: EPDIR
0x52038660 C   FIELD 17w01 LSDEV: LSDEV
0x52038660 C   FIELD 18w02 EPTYP: EPTYP
0x52038660 C   FIELD 20w02 MCNT: MCNT
0x52038660 C   FIELD 22w07 DAD: DAD
0x52038660 C   FIELD 29w01 ODDFRM: ODDFRM
0x52038660 C   FIELD 30w01 CHDIS: CHDIS
0x52038660 C   FIELD 31w01 CHENA: CHENA
0x52038668 B  REGISTER HCINT11 (rw): This register indicates the status of a channel with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the host channels interrupt bit in the core interrupt register (HCINT bit in GINTSTS) is set. Before the application can read this register, it must first read the host all channels interrupt (HAINT) register to get the exact channel number for the host channel-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the HAINT and GINTSTS registers.
0x52038668 C   FIELD 00w01 XFRC: XFRC
0x52038668 C   FIELD 01w01 CHH: CHH
0x52038668 C   FIELD 03w01 STALL: STALL
0x52038668 C   FIELD 04w01 NAK: NAK
0x52038668 C   FIELD 05w01 ACK: ACK
0x52038668 C   FIELD 07w01 TXERR: TXERR
0x52038668 C   FIELD 08w01 BBERR: BBERR
0x52038668 C   FIELD 09w01 FRMOR: FRMOR
0x52038668 C   FIELD 10w01 DTERR: DTERR
0x5203866C B  REGISTER HCINTMSK11 (rw): This register reflects the mask for each channel status described in the previous section.
0x5203866C C   FIELD 00w01 XFRCM: XFRCM
0x5203866C C   FIELD 01w01 CHHM: CHHM
0x5203866C C   FIELD 03w01 STALLM: STALLM
0x5203866C C   FIELD 04w01 NAKM: NAKM
0x5203866C C   FIELD 05w01 ACKM: ACKM
0x5203866C C   FIELD 07w01 TXERRM: TXERRM
0x5203866C C   FIELD 08w01 BBERRM: BBERRM
0x5203866C C   FIELD 09w01 FRMORM: FRMORM
0x5203866C C   FIELD 10w01 DTERRM: DTERRM
0x52038670 B  REGISTER HCTSIZ11 (rw): OTG host channel 11 transfer size register
0x52038670 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038670 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038670 C   FIELD 29w02 DPID: DPID
0x52038670 C   FIELD 31w01 DOPNG: DOPNG
0x52038800 B  REGISTER DCFG (rw): This register configures the core in device mode after power-on or after certain control commands or enumeration. Do not make changes to this register after initial programming.
0x52038800 C   FIELD 00w02 DSPD: DSPD
0x52038800 C   FIELD 02w01 NZLSOHSK: NZLSOHSK
0x52038800 C   FIELD 04w07 DAD: DAD
0x52038800 C   FIELD 11w02 PFIVL: PFIVL
0x52038800 C   FIELD 15w01 ERRATIM: ERRATIM
0x52038804 B  REGISTER DCTL: OTG device control register
0x52038804 C   FIELD 00w01 RWUSIG (rw): RWUSIG
0x52038804 C   FIELD 01w01 SDIS (rw): SDIS
0x52038804 C   FIELD 02w01 GINSTS (ro): GINSTS
0x52038804 C   FIELD 03w01 GONSTS (ro): GONSTS
0x52038804 C   FIELD 04w03 TCTL (rw): TCTL
0x52038804 C   FIELD 07w01 SGINAK (wo): SGINAK
0x52038804 C   FIELD 08w01 CGINAK (wo): CGINAK
0x52038804 C   FIELD 09w01 SGONAK (wo): SGONAK
0x52038804 C   FIELD 10w01 CGONAK (wo): CGONAK
0x52038804 C   FIELD 11w01 POPRGDNE (rw): POPRGDNE
0x52038804 C   FIELD 18w01 DSBESLRJCT (rw): DSBESLRJCT
0x52038808 B  REGISTER DSTS (ro): This register indicates the status of the core with respect to USB-related events. It must be read on interrupts from the device all interrupts (DAINT) register.
0x52038808 C   FIELD 00w01 SUSPSTS: SUSPSTS
0x52038808 C   FIELD 01w02 ENUMSPD: ENUMSPD
0x52038808 C   FIELD 03w01 EERR: EERR
0x52038808 C   FIELD 08w14 FNSOF: FNSOF
0x52038808 C   FIELD 22w02 DEVLNSTS: DEVLNSTS
0x52038810 B  REGISTER DIEPMSK (rw): This register works with each of the DIEPINTx registers for all endpoints to generate an interrupt per IN endpoint. The IN endpoint interrupt for a specific status in the DIEPINTx register can be masked by writing to the corresponding bit in this register. Status bits are masked by default.
0x52038810 C   FIELD 00w01 XFRCM: XFRCM
0x52038810 C   FIELD 01w01 EPDM: EPDM
0x52038810 C   FIELD 03w01 TOM: TOM
0x52038810 C   FIELD 04w01 ITTXFEMSK: ITTXFEMSK
0x52038810 C   FIELD 05w01 INEPNMM: INEPNMM
0x52038810 C   FIELD 06w01 INEPNEM: INEPNEM
0x52038810 C   FIELD 13w01 NAKM: NAKM
0x52038814 B  REGISTER DOEPMSK (rw): This register works with each of the DOEPINTx registers for all endpoints to generate an interrupt per OUT endpoint. The OUT endpoint interrupt for a specific status in the DOEPINTx register can be masked by writing into the corresponding bit in this register. Status bits are masked by default.
0x52038814 C   FIELD 00w01 XFRCM: XFRCM
0x52038814 C   FIELD 01w01 EPDM: EPDM
0x52038814 C   FIELD 03w01 STUPM: STUPM
0x52038814 C   FIELD 04w01 OTEPDM: OTEPDM
0x52038814 C   FIELD 05w01 STSPHSRXM: STSPHSRXM
0x52038814 C   FIELD 08w01 OUTPKTERRM: OUTPKTERRM
0x52038814 C   FIELD 12w01 BERRM: BERRM
0x52038814 C   FIELD 13w01 NAKMSK: NAKMSK
0x52038818 B  REGISTER DAINT (ro): When a significant event occurs on an endpoint, a DAINT register interrupts the application using the device OUT endpoints interrupt bit or device IN endpoints interrupt bit of the GINTSTS register (OEPINT or IEPINT in GINTSTS, respectively). There is one interrupt bit per endpoint, up to a maximum of 16 bits for OUT endpoints and 16 bits for IN endpoints. For a bidirectional endpoint, the corresponding IN and OUT interrupt bits are used. Bits in this register are set and cleared when the application sets and clears bits in the corresponding device endpoint-x interrupt register (DIEPINTx/DOEPINTx).
0x52038818 C   FIELD 00w16 IEPINT: IEPINT
0x52038818 C   FIELD 16w16 OEPINT: OEPINT
0x5203881C B  REGISTER DAINTMSK (rw): The DAINTMSK register works with the device endpoint interrupt register to interrupt the application when an event occurs on a device endpoint. However, the DAINT register bit corresponding to that interrupt is still set.
0x5203881C C   FIELD 00w16 IEPM: IEPM
0x5203881C C   FIELD 16w16 OEPM: OEPM
0x52038828 B  REGISTER DVBUSDIS (rw): This register specifies the VBUS discharge time after VBUS pulsing during SRP.
0x52038828 C   FIELD 00w16 VBUSDT: VBUSDT
0x5203882C B  REGISTER DVBUSPULSE (rw): This register specifies the VBUS pulsing time during SRP.
0x5203882C C   FIELD 00w16 DVBUSP: DVBUSP
0x52038834 B  REGISTER DIEPEMPMSK (rw): This register is used to control the IN endpoint FIFO empty interrupt generation (TXFE_DIEPINTx).
0x52038834 C   FIELD 00w16 INEPTXFEM: INEPTXFEM
0x52038900 B  REGISTER DIEPCTL0: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038900 C   FIELD 00w02 MPSIZ (rw): MPSIZ
0x52038900 C   FIELD 15w01 USBAEP (ro): USBAEP
0x52038900 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038900 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038900 C   FIELD 21w01 STALL (rw): STALL
0x52038900 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x52038900 C   FIELD 26w01 CNAK (wo): CNAK
0x52038900 C   FIELD 27w01 SNAK (wo): SNAK
0x52038900 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038900 C   FIELD 31w01 EPENA (rw): EPENA
0x52038908 B  REGISTER DIEPINT0: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038908 C   FIELD 00w01 XFRC (rw): XFRC
0x52038908 C   FIELD 01w01 EPDISD (rw): EPDISD
0x52038908 C   FIELD 03w01 TOC (rw): TOC
0x52038908 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x52038908 C   FIELD 05w01 INEPNM (rw): INEPNM
0x52038908 C   FIELD 06w01 INEPNE (ro): INEPNE
0x52038908 C   FIELD 07w01 TXFE (ro): TXFE
0x52038908 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x52038908 C   FIELD 13w01 NAK (rw): NAK
0x52038910 B  REGISTER DIEPTSIZ0 (rw): The application must modify this register before enabling endpoint 0.
0x52038910 C   FIELD 00w07 XFRSIZ: XFRSIZ
0x52038910 C   FIELD 19w02 PKTCNT: PKTCNT
0x52038918 B  REGISTER DTXFSTS0 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x52038918 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x52038920 B  REGISTER DIEPCTL1: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038920 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038920 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038920 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038920 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038920 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038920 C   FIELD 21w01 STALL (rw): STALL
0x52038920 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x52038920 C   FIELD 26w01 CNAK (wo): CNAK
0x52038920 C   FIELD 27w01 SNAK (wo): SNAK
0x52038920 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038920 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x52038920 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038920 C   FIELD 31w01 EPENA (rw): EPENA
0x52038928 B  REGISTER DIEPINT1: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038928 C   FIELD 00w01 XFRC (rw): XFRC
0x52038928 C   FIELD 01w01 EPDISD (rw): EPDISD
0x52038928 C   FIELD 03w01 TOC (rw): TOC
0x52038928 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x52038928 C   FIELD 05w01 INEPNM (rw): INEPNM
0x52038928 C   FIELD 06w01 INEPNE (ro): INEPNE
0x52038928 C   FIELD 07w01 TXFE (ro): TXFE
0x52038928 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x52038928 C   FIELD 13w01 NAK (rw): NAK
0x52038930 B  REGISTER DIEPTSIZ1 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038930 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038930 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038930 C   FIELD 29w02 MCNT: MCNT
0x52038934 B  REGISTER DIEPDMA1 (rw): OTG device IN endpoint 1 DMA address register
0x52038934 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038938 B  REGISTER DTXFSTS1 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x52038938 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x52038940 B  REGISTER DIEPCTL2: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038940 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038940 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038940 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038940 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038940 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038940 C   FIELD 21w01 STALL (rw): STALL
0x52038940 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x52038940 C   FIELD 26w01 CNAK (wo): CNAK
0x52038940 C   FIELD 27w01 SNAK (wo): SNAK
0x52038940 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038940 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x52038940 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038940 C   FIELD 31w01 EPENA (rw): EPENA
0x52038948 B  REGISTER DIEPINT2: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038948 C   FIELD 00w01 XFRC (rw): XFRC
0x52038948 C   FIELD 01w01 EPDISD (rw): EPDISD
0x52038948 C   FIELD 03w01 TOC (rw): TOC
0x52038948 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x52038948 C   FIELD 05w01 INEPNM (rw): INEPNM
0x52038948 C   FIELD 06w01 INEPNE (ro): INEPNE
0x52038948 C   FIELD 07w01 TXFE (ro): TXFE
0x52038948 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x52038948 C   FIELD 13w01 NAK (rw): NAK
0x52038950 B  REGISTER DIEPTSIZ2 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038950 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038950 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038950 C   FIELD 29w02 MCNT: MCNT
0x52038954 B  REGISTER DIEPDMA2 (rw): OTG device IN endpoint 2 DMA address register
0x52038954 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038958 B  REGISTER DTXFSTS2 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x52038958 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x52038960 B  REGISTER DIEPCTL3: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038960 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038960 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038960 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038960 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038960 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038960 C   FIELD 21w01 STALL (rw): STALL
0x52038960 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x52038960 C   FIELD 26w01 CNAK (wo): CNAK
0x52038960 C   FIELD 27w01 SNAK (wo): SNAK
0x52038960 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038960 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x52038960 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038960 C   FIELD 31w01 EPENA (rw): EPENA
0x52038968 B  REGISTER DIEPINT3: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038968 C   FIELD 00w01 XFRC (rw): XFRC
0x52038968 C   FIELD 01w01 EPDISD (rw): EPDISD
0x52038968 C   FIELD 03w01 TOC (rw): TOC
0x52038968 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x52038968 C   FIELD 05w01 INEPNM (rw): INEPNM
0x52038968 C   FIELD 06w01 INEPNE (ro): INEPNE
0x52038968 C   FIELD 07w01 TXFE (ro): TXFE
0x52038968 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x52038968 C   FIELD 13w01 NAK (rw): NAK
0x52038970 B  REGISTER DIEPTSIZ3 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038970 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038970 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038970 C   FIELD 29w02 MCNT: MCNT
0x52038974 B  REGISTER DIEPDMA3 (rw): OTG device IN endpoint 3 DMA address register
0x52038974 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038978 B  REGISTER DTXFSTS3 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x52038978 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x52038980 B  REGISTER DIEPCTL4: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038980 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038980 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038980 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038980 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038980 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038980 C   FIELD 21w01 STALL (rw): STALL
0x52038980 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x52038980 C   FIELD 26w01 CNAK (wo): CNAK
0x52038980 C   FIELD 27w01 SNAK (wo): SNAK
0x52038980 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038980 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x52038980 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038980 C   FIELD 31w01 EPENA (rw): EPENA
0x52038988 B  REGISTER DIEPINT4: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038988 C   FIELD 00w01 XFRC (rw): XFRC
0x52038988 C   FIELD 01w01 EPDISD (rw): EPDISD
0x52038988 C   FIELD 03w01 TOC (rw): TOC
0x52038988 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x52038988 C   FIELD 05w01 INEPNM (rw): INEPNM
0x52038988 C   FIELD 06w01 INEPNE (ro): INEPNE
0x52038988 C   FIELD 07w01 TXFE (ro): TXFE
0x52038988 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x52038988 C   FIELD 13w01 NAK (rw): NAK
0x52038990 B  REGISTER DIEPTSIZ4 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038990 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038990 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038990 C   FIELD 29w02 MCNT: MCNT
0x52038994 B  REGISTER DIEPDMA4 (rw): OTG device IN endpoint 4 DMA address register
0x52038994 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038998 B  REGISTER DTXFSTS4 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x52038998 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x520389A0 B  REGISTER DIEPCTL5: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x520389A0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x520389A0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x520389A0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x520389A0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x520389A0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x520389A0 C   FIELD 21w01 STALL (rw): STALL
0x520389A0 C   FIELD 22w04 TXFNUM (rw): TXFNUM
0x520389A0 C   FIELD 26w01 CNAK (wo): CNAK
0x520389A0 C   FIELD 27w01 SNAK (wo): SNAK
0x520389A0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x520389A0 C   FIELD 29w01 SODDFRM (wo): SODDFRM
0x520389A0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x520389A0 C   FIELD 31w01 EPENA (rw): EPENA
0x520389A8 B  REGISTER DIEPINT5: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x520389A8 C   FIELD 00w01 XFRC (rw): XFRC
0x520389A8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x520389A8 C   FIELD 03w01 TOC (rw): TOC
0x520389A8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x520389A8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x520389A8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x520389A8 C   FIELD 07w01 TXFE (ro): TXFE
0x520389A8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x520389A8 C   FIELD 13w01 NAK (rw): NAK
0x520389B0 B  REGISTER DIEPTSIZ5 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x520389B0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x520389B0 C   FIELD 19w10 PKTCNT: PKTCNT
0x520389B0 C   FIELD 29w02 MCNT: MCNT
0x520389B4 B  REGISTER DIEPDMA5 (rw): OTG device IN endpoint 5 DMA address register
0x520389B4 C   FIELD 00w32 DMAADDR: DMAADDR
0x520389B8 B  REGISTER DTXFSTS5 (ro): This read-only register contains the free space information for the device IN endpoint Tx FIFO.
0x520389B8 C   FIELD 00w16 INEPTFSAV: INEPTFSAV
0x520389C8 B  REGISTER DIEPINT6: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x520389C8 C   FIELD 00w01 XFRC (rw): XFRC
0x520389C8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x520389C8 C   FIELD 02w01 AHBERR (rw): AHBERR
0x520389C8 C   FIELD 03w01 TOC (rw): TOC
0x520389C8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x520389C8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x520389C8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x520389C8 C   FIELD 07w01 TXFE (ro): TXFE
0x520389C8 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x520389C8 C   FIELD 09w01 BNA (rw): BNA
0x520389C8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x520389C8 C   FIELD 13w01 NAK (rw): NAK
0x520389D0 B  REGISTER DIEPTSIZ6 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x520389D0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x520389D0 C   FIELD 19w10 PKTCNT: PKTCNT
0x520389D0 C   FIELD 29w02 MCNT: MCNT
0x520389D4 B  REGISTER DIEPDMA6 (rw): OTG device IN endpoint 6 DMA address register
0x520389D4 C   FIELD 00w32 DMAADDR: DMAADDR
0x520389E8 B  REGISTER DIEPINT7: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x520389E8 C   FIELD 00w01 XFRC (rw): XFRC
0x520389E8 C   FIELD 01w01 EPDISD (rw): EPDISD
0x520389E8 C   FIELD 02w01 AHBERR (rw): AHBERR
0x520389E8 C   FIELD 03w01 TOC (rw): TOC
0x520389E8 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x520389E8 C   FIELD 05w01 INEPNM (rw): INEPNM
0x520389E8 C   FIELD 06w01 INEPNE (ro): INEPNE
0x520389E8 C   FIELD 07w01 TXFE (ro): TXFE
0x520389E8 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x520389E8 C   FIELD 09w01 BNA (rw): BNA
0x520389E8 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x520389E8 C   FIELD 13w01 NAK (rw): NAK
0x520389F0 B  REGISTER DIEPTSIZ7 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x520389F0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x520389F0 C   FIELD 19w10 PKTCNT: PKTCNT
0x520389F0 C   FIELD 29w02 MCNT: MCNT
0x520389F4 B  REGISTER DIEPDMA7 (rw): OTG device IN endpoint 7 DMA address register
0x520389F4 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038A08 B  REGISTER DIEPINT8: This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the IN endpoints interrupt bit of the core interrupt register (IEPINT in GINTSTS) is set. Before the application can read this register, it must first read the device all endpoints interrupt (DAINT) register to get the exact endpoint number for the device endpoint-x interrupt register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038A08 C   FIELD 00w01 XFRC (rw): XFRC
0x52038A08 C   FIELD 01w01 EPDISD (rw): EPDISD
0x52038A08 C   FIELD 02w01 AHBERR (rw): AHBERR
0x52038A08 C   FIELD 03w01 TOC (rw): TOC
0x52038A08 C   FIELD 04w01 ITTXFE (rw): ITTXFE
0x52038A08 C   FIELD 05w01 INEPNM (rw): INEPNM
0x52038A08 C   FIELD 06w01 INEPNE (ro): INEPNE
0x52038A08 C   FIELD 07w01 TXFE (ro): TXFE
0x52038A08 C   FIELD 08w01 TXFIFOUDRN (rw): TXFIFOUDRN
0x52038A08 C   FIELD 09w01 BNA (rw): BNA
0x52038A08 C   FIELD 11w01 PKTDRPSTS (rw): PKTDRPSTS
0x52038A08 C   FIELD 13w01 NAK (rw): NAK
0x52038A10 B  REGISTER DIEPTSIZ8 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using the endpoint enable bit in the DIEPCTLx registers (EPENA bit in DIEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038A10 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038A10 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038A10 C   FIELD 29w02 MCNT: MCNT
0x52038A14 B  REGISTER DIEPDMA8 (rw): OTG device IN endpoint 8 DMA address register
0x52038A14 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038B00 B  REGISTER DOEPCTL0: This section describes the DOEPCTL0 register.
0x52038B00 C   FIELD 00w02 MPSIZ (ro): MPSIZ
0x52038B00 C   FIELD 15w01 USBAEP (ro): USBAEP
0x52038B00 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038B00 C   FIELD 18w02 EPTYP (ro): EPTYP
0x52038B00 C   FIELD 20w01 SNPM (rw): SNPM
0x52038B00 C   FIELD 21w01 STALL (rw): STALL
0x52038B00 C   FIELD 26w01 CNAK (wo): CNAK
0x52038B00 C   FIELD 27w01 SNAK (wo): SNAK
0x52038B00 C   FIELD 30w01 EPDIS (ro): EPDIS
0x52038B00 C   FIELD 31w01 EPENA (wo): EPENA
0x52038B08 B  REGISTER DOEPINT0 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038B08 C   FIELD 00w01 XFRC: XFRC
0x52038B08 C   FIELD 01w01 EPDISD: EPDISD
0x52038B08 C   FIELD 02w01 AHBERR: AHBERR
0x52038B08 C   FIELD 03w01 STUP: STUP
0x52038B08 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038B08 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038B08 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038B08 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038B08 C   FIELD 09w01 BNA: BNA
0x52038B08 C   FIELD 12w01 BERR: BERR
0x52038B08 C   FIELD 13w01 NAK: NAK
0x52038B08 C   FIELD 14w01 NYET: NYET
0x52038B08 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038B10 B  REGISTER DOEPTSIZ0 (rw): The application must modify this register before enabling endpoint 0.
0x52038B10 C   FIELD 00w07 XFRSIZ: XFRSIZ
0x52038B10 C   FIELD 19w01 PKTCNT: PKTCNT
0x52038B10 C   FIELD 29w02 STUPCNT: STUPCNT
0x52038B14 B  REGISTER DOEPDMA0 (rw): OTG device OUT endpoint 0 DMA address register
0x52038B14 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038B20 B  REGISTER DOEPCTL1: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038B20 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038B20 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038B20 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038B20 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038B20 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038B20 C   FIELD 20w01 SNPM (rw): SNPM
0x52038B20 C   FIELD 21w01 STALL (rw): STALL
0x52038B20 C   FIELD 26w01 CNAK (wo): CNAK
0x52038B20 C   FIELD 27w01 SNAK (wo): SNAK
0x52038B20 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038B20 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x52038B20 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038B20 C   FIELD 31w01 EPENA (rw): EPENA
0x52038B28 B  REGISTER DOEPINT1 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038B28 C   FIELD 00w01 XFRC: XFRC
0x52038B28 C   FIELD 01w01 EPDISD: EPDISD
0x52038B28 C   FIELD 02w01 AHBERR: AHBERR
0x52038B28 C   FIELD 03w01 STUP: STUP
0x52038B28 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038B28 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038B28 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038B28 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038B28 C   FIELD 09w01 BNA: BNA
0x52038B28 C   FIELD 12w01 BERR: BERR
0x52038B28 C   FIELD 13w01 NAK: NAK
0x52038B28 C   FIELD 14w01 NYET: NYET
0x52038B28 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038B30 B  REGISTER DOEPTSIZ1 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038B30 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038B30 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038B30 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x52038B34 B  REGISTER DOEPDMA1 (rw): OTG device OUT endpoint 1 DMA address register
0x52038B34 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038B40 B  REGISTER DOEPCTL2: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038B40 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038B40 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038B40 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038B40 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038B40 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038B40 C   FIELD 20w01 SNPM (rw): SNPM
0x52038B40 C   FIELD 21w01 STALL (rw): STALL
0x52038B40 C   FIELD 26w01 CNAK (wo): CNAK
0x52038B40 C   FIELD 27w01 SNAK (wo): SNAK
0x52038B40 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038B40 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x52038B40 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038B40 C   FIELD 31w01 EPENA (rw): EPENA
0x52038B48 B  REGISTER DOEPINT2 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038B48 C   FIELD 00w01 XFRC: XFRC
0x52038B48 C   FIELD 01w01 EPDISD: EPDISD
0x52038B48 C   FIELD 02w01 AHBERR: AHBERR
0x52038B48 C   FIELD 03w01 STUP: STUP
0x52038B48 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038B48 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038B48 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038B48 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038B48 C   FIELD 09w01 BNA: BNA
0x52038B48 C   FIELD 12w01 BERR: BERR
0x52038B48 C   FIELD 13w01 NAK: NAK
0x52038B48 C   FIELD 14w01 NYET: NYET
0x52038B48 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038B50 B  REGISTER DOEPTSIZ2 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038B50 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038B50 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038B50 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x52038B54 B  REGISTER DOEPDMA2 (rw): OTG device OUT endpoint 2 DMA address register
0x52038B54 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038B60 B  REGISTER DOEPCTL3: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038B60 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038B60 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038B60 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038B60 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038B60 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038B60 C   FIELD 20w01 SNPM (rw): SNPM
0x52038B60 C   FIELD 21w01 STALL (rw): STALL
0x52038B60 C   FIELD 26w01 CNAK (wo): CNAK
0x52038B60 C   FIELD 27w01 SNAK (wo): SNAK
0x52038B60 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038B60 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x52038B60 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038B60 C   FIELD 31w01 EPENA (rw): EPENA
0x52038B68 B  REGISTER DOEPINT3 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038B68 C   FIELD 00w01 XFRC: XFRC
0x52038B68 C   FIELD 01w01 EPDISD: EPDISD
0x52038B68 C   FIELD 02w01 AHBERR: AHBERR
0x52038B68 C   FIELD 03w01 STUP: STUP
0x52038B68 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038B68 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038B68 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038B68 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038B68 C   FIELD 09w01 BNA: BNA
0x52038B68 C   FIELD 12w01 BERR: BERR
0x52038B68 C   FIELD 13w01 NAK: NAK
0x52038B68 C   FIELD 14w01 NYET: NYET
0x52038B68 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038B70 B  REGISTER DOEPTSIZ3 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038B70 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038B70 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038B70 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x52038B74 B  REGISTER DOEPDMA3 (rw): OTG device OUT endpoint 3 DMA address register
0x52038B74 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038B80 B  REGISTER DOEPCTL4: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038B80 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038B80 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038B80 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038B80 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038B80 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038B80 C   FIELD 20w01 SNPM (rw): SNPM
0x52038B80 C   FIELD 21w01 STALL (rw): STALL
0x52038B80 C   FIELD 26w01 CNAK (wo): CNAK
0x52038B80 C   FIELD 27w01 SNAK (wo): SNAK
0x52038B80 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038B80 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x52038B80 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038B80 C   FIELD 31w01 EPENA (rw): EPENA
0x52038B88 B  REGISTER DOEPINT4 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038B88 C   FIELD 00w01 XFRC: XFRC
0x52038B88 C   FIELD 01w01 EPDISD: EPDISD
0x52038B88 C   FIELD 02w01 AHBERR: AHBERR
0x52038B88 C   FIELD 03w01 STUP: STUP
0x52038B88 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038B88 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038B88 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038B88 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038B88 C   FIELD 09w01 BNA: BNA
0x52038B88 C   FIELD 12w01 BERR: BERR
0x52038B88 C   FIELD 13w01 NAK: NAK
0x52038B88 C   FIELD 14w01 NYET: NYET
0x52038B88 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038B90 B  REGISTER DOEPTSIZ4 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038B90 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038B90 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038B90 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x52038B94 B  REGISTER DOEPDMA4 (rw): OTG device OUT endpoint 4 DMA address register
0x52038B94 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038BA0 B  REGISTER DOEPCTL5: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038BA0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038BA0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038BA0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038BA0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038BA0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038BA0 C   FIELD 20w01 SNPM (rw): SNPM
0x52038BA0 C   FIELD 21w01 STALL (rw): STALL
0x52038BA0 C   FIELD 26w01 CNAK (wo): CNAK
0x52038BA0 C   FIELD 27w01 SNAK (wo): SNAK
0x52038BA0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038BA0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x52038BA0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038BA0 C   FIELD 31w01 EPENA (rw): EPENA
0x52038BA8 B  REGISTER DOEPINT5 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038BA8 C   FIELD 00w01 XFRC: XFRC
0x52038BA8 C   FIELD 01w01 EPDISD: EPDISD
0x52038BA8 C   FIELD 02w01 AHBERR: AHBERR
0x52038BA8 C   FIELD 03w01 STUP: STUP
0x52038BA8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038BA8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038BA8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038BA8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038BA8 C   FIELD 09w01 BNA: BNA
0x52038BA8 C   FIELD 12w01 BERR: BERR
0x52038BA8 C   FIELD 13w01 NAK: NAK
0x52038BA8 C   FIELD 14w01 NYET: NYET
0x52038BA8 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038BB0 B  REGISTER DOEPTSIZ5 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038BB0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038BB0 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038BB0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x52038BB4 B  REGISTER DOEPDMA5 (rw): OTG device OUT endpoint 5 DMA address register
0x52038BB4 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038BC0 B  REGISTER DOEPCTL6: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038BC0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038BC0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038BC0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038BC0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038BC0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038BC0 C   FIELD 20w01 SNPM (rw): SNPM
0x52038BC0 C   FIELD 21w01 STALL (rw): STALL
0x52038BC0 C   FIELD 26w01 CNAK (wo): CNAK
0x52038BC0 C   FIELD 27w01 SNAK (wo): SNAK
0x52038BC0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038BC0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x52038BC0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038BC0 C   FIELD 31w01 EPENA (rw): EPENA
0x52038BC8 B  REGISTER DOEPINT6 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038BC8 C   FIELD 00w01 XFRC: XFRC
0x52038BC8 C   FIELD 01w01 EPDISD: EPDISD
0x52038BC8 C   FIELD 02w01 AHBERR: AHBERR
0x52038BC8 C   FIELD 03w01 STUP: STUP
0x52038BC8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038BC8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038BC8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038BC8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038BC8 C   FIELD 09w01 BNA: BNA
0x52038BC8 C   FIELD 12w01 BERR: BERR
0x52038BC8 C   FIELD 13w01 NAK: NAK
0x52038BC8 C   FIELD 14w01 NYET: NYET
0x52038BC8 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038BD0 B  REGISTER DOEPTSIZ6 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038BD0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038BD0 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038BD0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x52038BD4 B  REGISTER DOEPDMA6 (rw): OTG device OUT endpoint 6 DMA address register
0x52038BD4 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038BE0 B  REGISTER DOEPCTL7: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038BE0 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038BE0 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038BE0 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038BE0 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038BE0 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038BE0 C   FIELD 20w01 SNPM (rw): SNPM
0x52038BE0 C   FIELD 21w01 STALL (rw): STALL
0x52038BE0 C   FIELD 26w01 CNAK (wo): CNAK
0x52038BE0 C   FIELD 27w01 SNAK (wo): SNAK
0x52038BE0 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038BE0 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x52038BE0 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038BE0 C   FIELD 31w01 EPENA (rw): EPENA
0x52038BE8 B  REGISTER DOEPINT7 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038BE8 C   FIELD 00w01 XFRC: XFRC
0x52038BE8 C   FIELD 01w01 EPDISD: EPDISD
0x52038BE8 C   FIELD 02w01 AHBERR: AHBERR
0x52038BE8 C   FIELD 03w01 STUP: STUP
0x52038BE8 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038BE8 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038BE8 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038BE8 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038BE8 C   FIELD 09w01 BNA: BNA
0x52038BE8 C   FIELD 12w01 BERR: BERR
0x52038BE8 C   FIELD 13w01 NAK: NAK
0x52038BE8 C   FIELD 14w01 NYET: NYET
0x52038BE8 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038BF0 B  REGISTER DOEPTSIZ7 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038BF0 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038BF0 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038BF0 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x52038BF4 B  REGISTER DOEPDMA7 (rw): OTG device OUT endpoint 7 DMA address register
0x52038BF4 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038C00 B  REGISTER DOEPCTL8: The application uses this register to control the behavior of each logical endpoint other than endpoint 0.
0x52038C00 C   FIELD 00w11 MPSIZ (rw): MPSIZ
0x52038C00 C   FIELD 15w01 USBAEP (rw): USBAEP
0x52038C00 C   FIELD 16w01 EONUM_DPIP (ro): EONUM_DPIP
0x52038C00 C   FIELD 17w01 NAKSTS (ro): NAKSTS
0x52038C00 C   FIELD 18w02 EPTYP (rw): EPTYP
0x52038C00 C   FIELD 20w01 SNPM (rw): SNPM
0x52038C00 C   FIELD 21w01 STALL (rw): STALL
0x52038C00 C   FIELD 26w01 CNAK (wo): CNAK
0x52038C00 C   FIELD 27w01 SNAK (wo): SNAK
0x52038C00 C   FIELD 28w01 SD0PID_SEVNFRM (wo): SD0PID_SEVNFRM
0x52038C00 C   FIELD 29w01 SD1PID_SODDFRM (wo): SD1PID_SODDFRM
0x52038C00 C   FIELD 30w01 EPDIS (rw): EPDIS
0x52038C00 C   FIELD 31w01 EPENA (rw): EPENA
0x52038C08 B  REGISTER DOEPINT8 (rw): This register indicates the status of an endpoint with respect to USB- and AHB-related events. It is shown in Figure724. The application must read this register when the OUT endpoints interrupt bit of the GINTSTS register (OEPINT bit in GINTSTS) is set. Before the application can read this register, it must first read the DAINT register to get the exact endpoint number for the DOEPINTx register. The application must clear the appropriate bit in this register to clear the corresponding bits in the DAINT and GINTSTS registers.
0x52038C08 C   FIELD 00w01 XFRC: XFRC
0x52038C08 C   FIELD 01w01 EPDISD: EPDISD
0x52038C08 C   FIELD 02w01 AHBERR: AHBERR
0x52038C08 C   FIELD 03w01 STUP: STUP
0x52038C08 C   FIELD 04w01 OTEPDIS: OTEPDIS
0x52038C08 C   FIELD 05w01 STSPHSRX: STSPHSRX
0x52038C08 C   FIELD 06w01 B2BSTUP: B2BSTUP
0x52038C08 C   FIELD 08w01 OUTPKTERR: OUTPKTERR
0x52038C08 C   FIELD 09w01 BNA: BNA
0x52038C08 C   FIELD 12w01 BERR: BERR
0x52038C08 C   FIELD 13w01 NAK: NAK
0x52038C08 C   FIELD 14w01 NYET: NYET
0x52038C08 C   FIELD 15w01 STPKTRX: STPKTRX
0x52038C10 B  REGISTER DOEPTSIZ8 (rw): The application must modify this register before enabling the endpoint. Once the endpoint is enabled using endpoint enable bit of the DOEPCTLx registers (EPENA bit in DOEPCTLx), the core modifies this register. The application can only read this register once the core has cleared the endpoint enable bit.
0x52038C10 C   FIELD 00w19 XFRSIZ: XFRSIZ
0x52038C10 C   FIELD 19w10 PKTCNT: PKTCNT
0x52038C10 C   FIELD 29w02 RXDPID_STUPCNT: RXDPID_STUPCNT
0x52038C14 B  REGISTER DOEPDMA8 (rw): OTG device OUT endpoint 8 DMA address register
0x52038C14 C   FIELD 00w32 DMAADDR: DMAADDR
0x52038E00 B  REGISTER PCGCCTL: This register is available in host and device modes.
0x52038E00 C   FIELD 00w01 STPPCLK (rw): STPPCLK
0x52038E00 C   FIELD 01w01 GATEHCLK (rw): GATEHCLK
0x52038E00 C   FIELD 04w01 PHYSUSP (ro): PHYSUSP
0x52038E00 C   FIELD 05w01 ENL1GTG (rw): ENL1GTG
0x52038E00 C   FIELD 06w01 PHYSLEEP (ro): PHYSLEEP
0x52038E00 C   FIELD 07w01 SUSP (ro): SUSP
0x520C0000 A PERIPHERAL SEC_AES
0x520C0000 B  REGISTER CR (rw): control register
0x520C0000 C   FIELD 00w01 EN: AES enable
0x520C0000 C   FIELD 01w02 DATATYPE: Data type selection (for data in and data out to/from the cryptographic block)
0x520C0000 C   FIELD 03w02 MODE: AES operating mode
0x520C0000 C   FIELD 05w02 CHMOD: AES chaining mode
0x520C0000 C   FIELD 11w01 DMAINEN: Enable DMA management of data input phase
0x520C0000 C   FIELD 12w01 DMAOUTEN: Enable DMA management of data output phase
0x520C0000 C   FIELD 13w02 GCMPH: GCMPH
0x520C0000 C   FIELD 16w01 CHMOD_2: CHMOD_2
0x520C0000 C   FIELD 18w01 KEYSIZE: KEYSIZE
0x520C0000 C   FIELD 20w04 NPBLB: NPBLB
0x520C0000 C   FIELD 24w02 KMOD: KMOD
0x520C0000 C   FIELD 31w01 IPRST: IPRST
0x520C0004 B  REGISTER SR (ro): status register
0x520C0004 C   FIELD 00w01 CCF: Computation complete flag
0x520C0004 C   FIELD 01w01 RDERR: Read error flag
0x520C0004 C   FIELD 02w01 WRERR: Write error flag
0x520C0004 C   FIELD 03w01 BUSY: BUSY
0x520C0004 C   FIELD 07w01 KEYVALID: Key Valid flag
0x520C0008 B  REGISTER DINR (wo): data input register
0x520C0008 C   FIELD 00w32 DIN: Input data word
0x520C000C B  REGISTER DOUTR (ro): data output register
0x520C000C C   FIELD 00w32 DOUT: Output data word
0x520C0010 B  REGISTER KEYR0 (wo): key register 0
0x520C0010 C   FIELD 00w32 KEY: Cryptographic key, bits [31:0]
0x520C0014 B  REGISTER KEYR1 (wo): key register 1
0x520C0014 C   FIELD 00w32 KEY: Cryptographic key, bits [63:32]
0x520C0018 B  REGISTER KEYR2 (wo): key register 2
0x520C0018 C   FIELD 00w32 KEYR: Cryptographic key, bits [95:64]
0x520C001C B  REGISTER KEYR3 (wo): key register 3
0x520C001C C   FIELD 00w32 AES_KEYR3: Cryptographic key, bits [127:96]
0x520C0020 B  REGISTER IVR0 (rw): initialization vector register 0
0x520C0020 C   FIELD 00w32 IVI: Initialization vector input, bits [31:0]
0x520C0024 B  REGISTER IVR1 (rw): initialization vector register 1
0x520C0024 C   FIELD 00w32 IVI: Initialization vector input, bits [63:32]
0x520C0028 B  REGISTER IVR2 (rw): initialization vector register 2
0x520C0028 C   FIELD 00w32 IVI: Initialization vector input, bits [95:64]
0x520C002C B  REGISTER IVR3 (rw): initialization vector register 3
0x520C002C C   FIELD 00w32 IVI: Initialization vector input, bits [127:96]
0x520C0030 B  REGISTER KEYR4 (wo): key register 4
0x520C0030 C   FIELD 00w32 KEY: Cryptographic key, bits [159:128]
0x520C0034 B  REGISTER KEYR5 (wo): key register 5
0x520C0034 C   FIELD 00w32 KEY: Cryptographic key, bits [191:160]
0x520C0038 B  REGISTER KEYR6 (wo): key register 6
0x520C0038 C   FIELD 00w32 KEY: Cryptographic key, bits [223:192]
0x520C003C B  REGISTER KEYR7 (wo): key register 7
0x520C003C C   FIELD 00w32 KEY: Cryptographic key, bits [255:224]
0x520C0040 B  REGISTER SUSP0R (wo): suspend registers
0x520C0040 C   FIELD 00w32 SUSP0: AES suspend
0x520C0044 B  REGISTER SUSP1R (wo): suspend registers
0x520C0044 C   FIELD 00w32 SUSP1: AES suspend
0x520C0048 B  REGISTER SUSP2R (wo): suspend registers
0x520C0048 C   FIELD 00w32 SUSP2: AES suspend
0x520C004C B  REGISTER SUSP3R (wo): suspend registers
0x520C004C C   FIELD 00w32 SUSP3: AES suspend
0x520C0050 B  REGISTER SUSP4R (wo): suspend registers
0x520C0050 C   FIELD 00w32 SUSP4: AES suspend
0x520C0054 B  REGISTER SUSP5R (wo): suspend registers
0x520C0054 C   FIELD 00w32 SUSP5: AES suspend
0x520C0058 B  REGISTER SUSP6R (wo): suspend registers
0x520C0058 C   FIELD 00w32 SUSP6: AES suspend
0x520C005C B  REGISTER SUSP7R (wo): suspend registers
0x520C005C C   FIELD 00w32 SUSP7: AES suspend
0x520C0300 B  REGISTER IER (rw): interrupt enable register
0x520C0300 C   FIELD 00w01 CCFIE: Computation complete flag
0x520C0300 C   FIELD 01w01 RWEIE: Read or write error interrupt flag
0x520C0300 C   FIELD 02w01 KEIE: Key error interrupt flag
0x520C0300 C   FIELD 03w01 RNGEIE: Key error interrupt flag
0x520C0304 B  REGISTER ISR (ro): interrupt status register
0x520C0304 C   FIELD 00w01 CCF: Computation complete flag
0x520C0304 C   FIELD 01w01 RWEIF: Read or write error interrupt flag
0x520C0304 C   FIELD 02w01 KEIF: Key error interrupt flag
0x520C0304 C   FIELD 03w01 RNGEIF: Key error interrupt flag
0x520C0308 B  REGISTER ICR (wo): interrupt clear register
0x520C0308 C   FIELD 00w01 CCF: Computation complete flag clear
0x520C0308 C   FIELD 01w01 RWEIF: Read or write error interrupt flag clear
0x520C0308 C   FIELD 02w01 KEIF: Key error interrupt flag clear
0x520C0400 A PERIPHERAL SEC_HASH
0x520C0400 B  REGISTER CR: control register
0x520C0400 C   FIELD 02w01 INIT (wo): Initialize message digest calculation
0x520C0400 C   FIELD 03w01 DMAE (rw): DMA enable
0x520C0400 C   FIELD 04w02 DATATYPE (rw): Data type selection
0x520C0400 C   FIELD 06w01 MODE (rw): Mode selection
0x520C0400 C   FIELD 08w04 NBW (ro): Number of words already pushed
0x520C0400 C   FIELD 12w01 DINNE (ro): DIN not empty
0x520C0400 C   FIELD 13w01 MDMAT (rw): Multiple DMA Transfers
0x520C0400 C   FIELD 16w01 LKEY (rw): Long key selection
0x520C0400 C   FIELD 17w02 ALGO (rw): Algorithm selection
0x520C0404 B  REGISTER DIN (wo): data input register
0x520C0404 C   FIELD 00w32 DATAIN: Data input
0x520C0408 B  REGISTER STR: start register
0x520C0408 C   FIELD 00w05 NBLW (rw): Number of valid bits in the last word of the message
0x520C0408 C   FIELD 08w01 DCAL (wo): Digest calculation
0x520C040C B  REGISTER HRA0 (ro): HASH aliased digest register 0
0x520C040C C   FIELD 00w32 H0: H0
0x520C0410 B  REGISTER HRA1 (ro): HASH aliased digest register 1
0x520C0410 C   FIELD 00w32 H1: H1
0x520C0414 B  REGISTER HRA2 (ro): HASH aliased digest register 2
0x520C0414 C   FIELD 00w32 H2: H2
0x520C0418 B  REGISTER HRA3 (ro): HASH aliased digest register 3
0x520C0418 C   FIELD 00w32 H3: H3
0x520C041C B  REGISTER HRA4 (ro): HASH aliased digest register 4
0x520C041C C   FIELD 00w32 H4: H4
0x520C0420 B  REGISTER IMR (rw): interrupt enable register
0x520C0420 C   FIELD 00w01 DINIE: Data input interrupt enable
0x520C0420 C   FIELD 01w01 DCIE: Digest calculation completion interrupt enable
0x520C0424 B  REGISTER SR: status register
0x520C0424 C   FIELD 00w01 DINIS (rw): Data input interrupt status
0x520C0424 C   FIELD 01w01 DCIS (rw): Digest calculation completion interrupt status
0x520C0424 C   FIELD 02w01 DMAS (ro): DMA Status
0x520C0424 C   FIELD 03w01 BUSY (ro): Busy bit
0x520C0424 C   FIELD 09w05 NBWP (ro): Number of words already pushed
0x520C0424 C   FIELD 15w01 DINNE (ro): DIN not empty
0x520C0424 C   FIELD 16w05 NBWE (ro): Number of words expected
0x520C04F8 B  REGISTER CSR0 (rw): context swap registers
0x520C04F8 C   FIELD 00w32 CSR0: CSR0
0x520C04FC B  REGISTER CSR1 (rw): context swap registers
0x520C04FC C   FIELD 00w32 CSR1: CSR1
0x520C0500 B  REGISTER CSR2 (rw): context swap registers
0x520C0500 C   FIELD 00w32 CSR2: CSR2
0x520C0504 B  REGISTER CSR3 (rw): context swap registers
0x520C0504 C   FIELD 00w32 CSR3: CSR3
0x520C0508 B  REGISTER CSR4 (rw): context swap registers
0x520C0508 C   FIELD 00w32 CSR4: CSR4
0x520C050C B  REGISTER CSR5 (rw): context swap registers
0x520C050C C   FIELD 00w32 CSR5: CSR5
0x520C0510 B  REGISTER CSR6 (rw): context swap registers
0x520C0510 C   FIELD 00w32 CSR6: CSR6
0x520C0514 B  REGISTER CSR7 (rw): context swap registers
0x520C0514 C   FIELD 00w32 CSR7: CSR7
0x520C0518 B  REGISTER CSR8 (rw): context swap registers
0x520C0518 C   FIELD 00w32 CSR8: CSR8
0x520C051C B  REGISTER CSR9 (rw): context swap registers
0x520C051C C   FIELD 00w32 CSR9: CSR9
0x520C0520 B  REGISTER CSR10 (rw): context swap registers
0x520C0520 C   FIELD 00w32 CSR10: CSR10
0x520C0524 B  REGISTER CSR11 (rw): context swap registers
0x520C0524 C   FIELD 00w32 CSR11: CSR11
0x520C0528 B  REGISTER CSR12 (rw): context swap registers
0x520C0528 C   FIELD 00w32 CSR12: CSR12
0x520C052C B  REGISTER CSR13 (rw): context swap registers
0x520C052C C   FIELD 00w32 CSR13: CSR13
0x520C0530 B  REGISTER CSR14 (rw): context swap registers
0x520C0530 C   FIELD 00w32 CSR14: CSR14
0x520C0534 B  REGISTER CSR15 (rw): context swap registers
0x520C0534 C   FIELD 00w32 CSR15: CSR15
0x520C0538 B  REGISTER CSR16 (rw): context swap registers
0x520C0538 C   FIELD 00w32 CSR16: CSR16
0x520C053C B  REGISTER CSR17 (rw): context swap registers
0x520C053C C   FIELD 00w32 CSR17: CSR17
0x520C0540 B  REGISTER CSR18 (rw): context swap registers
0x520C0540 C   FIELD 00w32 CSR18: CSR18
0x520C0544 B  REGISTER CSR19 (rw): context swap registers
0x520C0544 C   FIELD 00w32 CSR19: CSR19
0x520C0548 B  REGISTER CSR20 (rw): context swap registers
0x520C0548 C   FIELD 00w32 CSR20: CSR20
0x520C054C B  REGISTER CSR21 (rw): context swap registers
0x520C054C C   FIELD 00w32 CSR21: CSR21
0x520C0550 B  REGISTER CSR22 (rw): context swap registers
0x520C0550 C   FIELD 00w32 CSR22: CSR22
0x520C0554 B  REGISTER CSR23 (rw): context swap registers
0x520C0554 C   FIELD 00w32 CSR23: CSR23
0x520C0558 B  REGISTER CSR24 (rw): context swap registers
0x520C0558 C   FIELD 00w32 CSR24: CSR24
0x520C055C B  REGISTER CSR25 (rw): context swap registers
0x520C055C C   FIELD 00w32 CSR25: CSR25
0x520C0560 B  REGISTER CSR26 (rw): context swap registers
0x520C0560 C   FIELD 00w32 CSR26: CSR26
0x520C0564 B  REGISTER CSR27 (rw): context swap registers
0x520C0564 C   FIELD 00w32 CSR27: CSR27
0x520C0568 B  REGISTER CSR28 (rw): context swap registers
0x520C0568 C   FIELD 00w32 CSR28: CSR28
0x520C056C B  REGISTER CSR29 (rw): context swap registers
0x520C056C C   FIELD 00w32 CSR29: CSR29
0x520C0570 B  REGISTER CSR30 (rw): context swap registers
0x520C0570 C   FIELD 00w32 CSR30: CSR30
0x520C0574 B  REGISTER CSR31 (rw): context swap registers
0x520C0574 C   FIELD 00w32 CSR31: CSR31
0x520C0578 B  REGISTER CSR32 (rw): context swap registers
0x520C0578 C   FIELD 00w32 CSR32: CSR32
0x520C057C B  REGISTER CSR33 (rw): context swap registers
0x520C057C C   FIELD 00w32 CSR33: CSR33
0x520C0580 B  REGISTER CSR34 (rw): context swap registers
0x520C0580 C   FIELD 00w32 CSR34: CSR34
0x520C0584 B  REGISTER CSR35 (rw): context swap registers
0x520C0584 C   FIELD 00w32 CSR35: CSR35
0x520C0588 B  REGISTER CSR36 (rw): context swap registers
0x520C0588 C   FIELD 00w32 CSR36: CSR36
0x520C058C B  REGISTER CSR37 (rw): context swap registers
0x520C058C C   FIELD 00w32 CSR37: CSR37
0x520C0590 B  REGISTER CSR38 (rw): context swap registers
0x520C0590 C   FIELD 00w32 CSR38: CSR38
0x520C0594 B  REGISTER CSR39 (rw): context swap registers
0x520C0594 C   FIELD 00w32 CSR39: CSR39
0x520C0598 B  REGISTER CSR40 (rw): context swap registers
0x520C0598 C   FIELD 00w32 CSR40: CSR40
0x520C059C B  REGISTER CSR41 (rw): context swap registers
0x520C059C C   FIELD 00w32 CSR41: CSR41
0x520C05A0 B  REGISTER CSR42 (rw): context swap registers
0x520C05A0 C   FIELD 00w32 CSR42: CSR42
0x520C05A4 B  REGISTER CSR43 (rw): context swap registers
0x520C05A4 C   FIELD 00w32 CSR43: CSR43
0x520C05A8 B  REGISTER CSR44 (rw): context swap registers
0x520C05A8 C   FIELD 00w32 CSR44: CSR44
0x520C05AC B  REGISTER CSR45 (rw): context swap registers
0x520C05AC C   FIELD 00w32 CSR45: CSR45
0x520C05B0 B  REGISTER CSR46 (rw): context swap registers
0x520C05B0 C   FIELD 00w32 CSR46: CSR46
0x520C05B4 B  REGISTER CSR47 (rw): context swap registers
0x520C05B4 C   FIELD 00w32 CSR47: CSR47
0x520C05B8 B  REGISTER CSR48 (rw): context swap registers
0x520C05B8 C   FIELD 00w32 CSR48: CSR48
0x520C05BC B  REGISTER CSR49 (rw): context swap registers
0x520C05BC C   FIELD 00w32 CSR49: CSR49
0x520C05C0 B  REGISTER CSR50 (rw): context swap registers
0x520C05C0 C   FIELD 00w32 CSR50: CSR50
0x520C05C4 B  REGISTER CSR51 (rw): context swap registers
0x520C05C4 C   FIELD 00w32 CSR51: CSR51
0x520C05C8 B  REGISTER CSR52 (rw): context swap registers
0x520C05C8 C   FIELD 00w32 CSR52: CSR52
0x520C05CC B  REGISTER CSR53 (rw): context swap registers
0x520C05CC C   FIELD 00w32 CSR53: CSR53
0x520C0710 B  REGISTER HR0 (ro): digest register 0
0x520C0710 C   FIELD 00w32 H0: H0
0x520C0714 B  REGISTER HR1 (ro): digest register 1
0x520C0714 C   FIELD 00w32 H1: H1
0x520C0718 B  REGISTER HR2 (ro): digest register 4
0x520C0718 C   FIELD 00w32 H2: H2
0x520C071C B  REGISTER HR3 (ro): digest register 3
0x520C071C C   FIELD 00w32 H3: H3
0x520C0720 B  REGISTER HR4 (ro): digest register 4
0x520C0720 C   FIELD 00w32 H4: H4
0x520C0724 B  REGISTER HR5 (ro): supplementary digest register 5
0x520C0724 C   FIELD 00w32 H5: H5
0x520C0728 B  REGISTER HR6 (ro): supplementary digest register 6
0x520C0728 C   FIELD 00w32 H6: H6
0x520C072C B  REGISTER HR7 (ro): supplementary digest register 7
0x520C072C C   FIELD 00w32 H7: H7
0x520C0800 A PERIPHERAL SEC_RNG
0x520C0800 B  REGISTER CR (rw): control register
0x520C0800 C   FIELD 02w01 RNGEN: True random number generator enable
0x520C0800 C   FIELD 03w01 IE: Interrupt Enable
0x520C0800 C   FIELD 05w01 CED: Clock error detection
0x520C0800 C   FIELD 07w01 ARDIS: Auto reset disable
0x520C0800 C   FIELD 08w04 RNG_CONFIG3: RNG configuration 3
0x520C0800 C   FIELD 12w01 NISTC: Non NIST compliant
0x520C0800 C   FIELD 13w03 RNG_CONFIG2: RNG configuration 2
0x520C0800 C   FIELD 16w04 CLKDIV: Clock divider factor
0x520C0800 C   FIELD 20w06 RNG_CONFIG1: RNG configuration 1
0x520C0800 C   FIELD 30w01 CONDRST: Conditioning soft reset
0x520C0800 C   FIELD 31w01 CONFIGLOCK: RNG Config Lock
0x520C0804 B  REGISTER SR: status register
0x520C0804 C   FIELD 00w01 DRDY (ro): Data ready
0x520C0804 C   FIELD 01w01 CECS (ro): Clock error current status
0x520C0804 C   FIELD 02w01 SECS (ro): Seed error current status
0x520C0804 C   FIELD 05w01 CEIS (rw): Clock error interrupt status
0x520C0804 C   FIELD 06w01 SEIS (rw): Seed error interrupt status
0x520C0808 B  REGISTER DR (ro): data register
0x520C0808 C   FIELD 00w32 RNDATA: Random data
0x520C0810 B  REGISTER HTCR (rw): health test control register
0x520C0810 C   FIELD 00w32 HTCFG: health test configuration
0x520C0C00 A PERIPHERAL SEC_SAES
0x520C0C00 B  REGISTER CR (rw): control register
0x520C0C00 C   FIELD 00w01 EN: SAES enable
0x520C0C00 C   FIELD 01w02 DATATYPE: DATATYPE
0x520C0C00 C   FIELD 03w02 MODE: MODE
0x520C0C00 C   FIELD 05w02 CHMOD: CHMOD
0x520C0C00 C   FIELD 11w01 DMAINEN: DMAINEN
0x520C0C00 C   FIELD 12w01 DMAOUTEN: DMAOUTEN
0x520C0C00 C   FIELD 18w01 KEYSIZE: KEYSIZE
0x520C0C00 C   FIELD 19w01 KEYPROT: KEYPROT
0x520C0C00 C   FIELD 24w02 KMOD: KMOD
0x520C0C00 C   FIELD 26w02 KSHAREID: KSHAREID
0x520C0C00 C   FIELD 28w03 KEYSEL: KEYSEL
0x520C0C00 C   FIELD 31w01 IPRST: IPRST
0x520C0C04 B  REGISTER SR (ro): status register
0x520C0C04 C   FIELD 00w01 CCF: Computation complete flag
0x520C0C04 C   FIELD 01w01 RDERR: Read error flag
0x520C0C04 C   FIELD 02w01 WRERR: Write error flag
0x520C0C04 C   FIELD 03w01 BUSY: BUSY
0x520C0C04 C   FIELD 07w01 KEYVALID: Key Valid flag
0x520C0C08 B  REGISTER DINR (wo): data input register
0x520C0C08 C   FIELD 00w32 DIN: Input data word
0x520C0C0C B  REGISTER DOUTR (ro): data output register
0x520C0C0C C   FIELD 00w32 DOUT: Output data word
0x520C0C10 B  REGISTER KEYR0 (wo): key register 0
0x520C0C10 C   FIELD 00w32 KEY: Cryptographic key, bits [31:0]
0x520C0C14 B  REGISTER KEYR1 (wo): key register 1
0x520C0C14 C   FIELD 00w32 KEY: Cryptographic key, bits [63:32]
0x520C0C18 B  REGISTER KEYR2 (wo): key register 2
0x520C0C18 C   FIELD 00w32 KEYR: Cryptographic key, bits [95:64]
0x520C0C1C B  REGISTER KEYR3 (wo): key register 3
0x520C0C1C C   FIELD 00w32 SAES_KEYR3: Cryptographic key, bits [127:96]
0x520C0C20 B  REGISTER IVR0 (rw): initialization vector register 0
0x520C0C20 C   FIELD 00w32 IVI: Initialization vector input, bits [31:0]
0x520C0C24 B  REGISTER IVR1 (rw): initialization vector register 1
0x520C0C24 C   FIELD 00w32 IVI: Initialization vector input, bits [63:32]
0x520C0C28 B  REGISTER IVR2 (rw): initialization vector register 2
0x520C0C28 C   FIELD 00w32 IVI: Initialization vector input, bits [95:64]
0x520C0C2C B  REGISTER IVR3 (rw): initialization vector register 3
0x520C0C2C C   FIELD 00w32 IVI: Initialization vector input, bits [127:96]
0x520C0C30 B  REGISTER KEYR4 (wo): key register 4
0x520C0C30 C   FIELD 00w32 KEY: Cryptographic key, bits [159:128]
0x520C0C34 B  REGISTER KEYR5 (wo): key register 5
0x520C0C34 C   FIELD 00w32 KEY: Cryptographic key, bits [191:160]
0x520C0C38 B  REGISTER KEYR6 (wo): key register 6
0x520C0C38 C   FIELD 00w32 KEY: Cryptographic key, bits [223:192]
0x520C0C3C B  REGISTER KEYR7 (wo): key register 7
0x520C0C3C C   FIELD 00w32 KEY: Cryptographic key, bits [255:224]
0x520C0D00 B  REGISTER DPACFGR: configuration register
0x520C0D00 C   FIELD 01w01 REDCFG (rw): REDCFG
0x520C0D00 C   FIELD 02w01 RESEED (rw): RESEED
0x520C0D00 C   FIELD 03w02 TRIMCFG (rw): TRIMCFG
0x520C0D00 C   FIELD 31w01 CONFIGLOCK (ro): CONFIGLOCK
0x520C0F00 B  REGISTER IER (rw): interrupt enable register
0x520C0F00 C   FIELD 00w01 CCFIE: Computation complete flag interrupt enable
0x520C0F00 C   FIELD 01w01 RWEIE: Read or write error interrupt enable
0x520C0F00 C   FIELD 02w01 KEIE: Key error interrupt enable
0x520C0F00 C   FIELD 03w01 RNGEIE: RNGEIE
0x520C0F04 B  REGISTER ISR (ro): interrupt status register
0x520C0F04 C   FIELD 00w01 CCF: Computation complete flag
0x520C0F04 C   FIELD 01w01 RWEIF: Read or write error interrupt flag
0x520C0F04 C   FIELD 02w01 KEIF: Key error interrupt flag
0x520C0F04 C   FIELD 03w01 RNGEIF: RNGEIF
0x520C0F08 B  REGISTER ICR (wo): interrupt clear register
0x520C0F08 C   FIELD 00w01 CCF: Computation complete flag clear
0x520C0F08 C   FIELD 01w01 RWEIF: Read or write error interrupt flag clear
0x520C0F08 C   FIELD 02w01 KEIF: Key error interrupt flag clear
0x520C0F08 C   FIELD 03w01 RNGEIF: RNGEIF
0x520C2000 A PERIPHERAL SEC_PKA
0x520C2000 B  REGISTER CR (rw): Control register
0x520C2000 C   FIELD 00w01 EN: Peripheral Enable
0x520C2000 C   FIELD 01w01 START: Start the operation
0x520C2000 C   FIELD 08w06 MODE: PKA Operation Mode
0x520C2000 C   FIELD 17w01 PROCENDIE: End of operation interrupt enable
0x520C2000 C   FIELD 19w01 RAMERRIE: RAM error interrupt enable
0x520C2000 C   FIELD 20w01 ADDRERRIE: Address error interrupt enable
0x520C2000 C   FIELD 21w01 OPERRIE: Operation error interrupt enable
0x520C2004 B  REGISTER SR (ro): PKA status register
0x520C2004 C   FIELD 00w01 INITOK: INITOK
0x520C2004 C   FIELD 16w01 BUSY: PKA operation is in progress
0x520C2004 C   FIELD 17w01 PROCENDF: PKA End of Operation flag
0x520C2004 C   FIELD 19w01 RAMERRF: RAMERRF
0x520C2004 C   FIELD 20w01 ADDRERRF: ADDRERRF
0x520C2004 C   FIELD 21w01 OPERRF: OPERRF
0x520C2008 B  REGISTER CLRFR (wo): PKA clear flag register
0x520C2008 C   FIELD 17w01 PROCENDFC: Clear PKA End of Operation flag
0x520C2008 C   FIELD 19w01 RAMERRFC: RAMERRFC
0x520C2008 C   FIELD 20w01 ADDRERRFC: ADDRERRFC
0x520C2008 C   FIELD 21w01 OPERRFC: OPERRFC
0x520C4000 A PERIPHERAL SEC_OCTOSPIM
0x520C4000 B  REGISTER CR (rw): control register
0x520C4000 C   FIELD 00w01 MUXEN: Multiplexed mode enable
0x520C4000 C   FIELD 16w08 REQ2ACK_TIME: REQ to ACK time
0x520C4004 B  REGISTER P1CR (rw): OCTOSPI I/O manager Port 1 configuration register
0x520C4004 C   FIELD 00w01 CLKEN: CLKEN
0x520C4004 C   FIELD 01w01 CLKSRC: CLKSRC
0x520C4004 C   FIELD 04w01 DQSEN: DQSEN
0x520C4004 C   FIELD 05w01 DQSSRC: DQSSRC
0x520C4004 C   FIELD 08w01 NCSEN: NCSEN
0x520C4004 C   FIELD 09w01 NCSSRC: NCSSRC
0x520C4004 C   FIELD 16w01 IOLEN: IOLEN
0x520C4004 C   FIELD 17w02 IOLSRC: IOLSRC
0x520C4004 C   FIELD 24w01 IOHEN: IOHEN
0x520C4004 C   FIELD 25w02 IOHSRC: IOHSR
0x520C4008 B  REGISTER P2CR (rw): OCTOSPI I/O manager Port 2 configuration register
0x520C4008 C   FIELD 00w01 CLKEN: CLKEN
0x520C4008 C   FIELD 01w01 CLKSRC: CLKSRC
0x520C4008 C   FIELD 04w01 DQSEN: DQSEN
0x520C4008 C   FIELD 05w01 DQSSRC: DQSSRC
0x520C4008 C   FIELD 08w01 NCSEN: NCSEN
0x520C4008 C   FIELD 09w01 NCSSRC: NCSSRC
0x520C4008 C   FIELD 16w01 IOLEN: IOLEN
0x520C4008 C   FIELD 17w02 IOLSRC: IOLSRC
0x520C4008 C   FIELD 24w01 IOHEN: IOHEN
0x520C4008 C   FIELD 25w02 IOHSRC: IOHSR
0x520C5000 A PERIPHERAL SEC_OTFDEC1
0x520C5000 B  REGISTER CR (rw): OTFDEC control register
0x520C5000 C   FIELD 00w01 ENC: Encryption mode bit
0x520C5010 B  REGISTER PRIVCFGR (rw): OTFDEC privileged access control configuration register
0x520C5010 C   FIELD 00w01 PRIV: Encryption mode bit
0x520C5020 B  REGISTER R1CFGR: OTFDEC region x configuration register
0x520C5020 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x520C5020 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x520C5020 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x520C5020 C   FIELD 04w02 MODE (rw): operating mode
0x520C5020 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x520C5020 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x520C5024 B  REGISTER R1STARTADDR (rw): OTFDEC region x start address register
0x520C5024 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x520C5028 B  REGISTER R1ENDADDR (rw): OTFDEC region x end address register
0x520C5028 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x520C502C B  REGISTER R1NONCER0 (rw): OTFDEC region x nonce register 0
0x520C502C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C5030 B  REGISTER R1NONCER1 (rw): OTFDEC region x nonce register 1
0x520C5030 C   FIELD 00w32 REGx_NONCE: Region nonce
0x520C5034 B  REGISTER R1KEYR0 (wo): OTFDEC region x key register 0
0x520C5034 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5038 B  REGISTER R1KEYR1 (wo): OTFDEC region x key register 1
0x520C5038 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C503C B  REGISTER R1KEYR2 (wo): OTFDEC region x key register 2
0x520C503C C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5040 B  REGISTER R1KEYR3 (wo): OTFDEC region x key register 3
0x520C5040 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5050 B  REGISTER R2CFGR: OTFDEC region x configuration register
0x520C5050 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x520C5050 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x520C5050 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x520C5050 C   FIELD 04w02 MODE (rw): operating mode
0x520C5050 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x520C5050 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x520C5054 B  REGISTER R2STARTADDR (rw): OTFDEC region x start address register
0x520C5054 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x520C5058 B  REGISTER R2ENDADDR (rw): OTFDEC region x end address register
0x520C5058 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x520C505C B  REGISTER R2NONCER0 (rw): OTFDEC region x nonce register 0
0x520C505C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C5060 B  REGISTER R2NONCER1 (rw): OTFDEC region x nonce register 1
0x520C5060 C   FIELD 00w32 REGx_NONCE: Region nonce, bits [63:32]REGx_NONCE[63:32]
0x520C5064 B  REGISTER R2KEYR0 (wo): OTFDEC region x key register 0
0x520C5064 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5068 B  REGISTER R2KEYR1 (wo): OTFDEC region x key register 1
0x520C5068 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C506C B  REGISTER R2KEYR2 (wo): OTFDEC region x key register 2
0x520C506C C   FIELD 00w32 REGx_KEY_: REGx_KEY
0x520C5070 B  REGISTER R2KEYR3 (wo): OTFDEC region x key register 3
0x520C5070 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5080 B  REGISTER R3CFGR: OTFDEC region x configuration register
0x520C5080 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x520C5080 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x520C5080 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x520C5080 C   FIELD 04w02 MODE (rw): operating mode
0x520C5080 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x520C5080 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x520C5084 B  REGISTER R3STARTADDR (rw): OTFDEC region x start address register
0x520C5084 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x520C5088 B  REGISTER R3ENDADDR (rw): OTFDEC region x end address register
0x520C5088 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x520C508C B  REGISTER R3NONCER0 (rw): OTFDEC region x nonce register 0
0x520C508C B  REGISTER R4ENDADDR (rw): OTFDEC region x end address register
0x520C508C C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x520C508C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C5090 B  REGISTER R3NONCER1 (rw): OTFDEC region x nonce register 1
0x520C5090 C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C5094 B  REGISTER R3KEYR0 (wo): OTFDEC region x key register 0
0x520C5094 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5098 B  REGISTER R3KEYR1 (wo): OTFDEC region x key register 1
0x520C5098 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C509C B  REGISTER R3KEYR2 (wo): OTFDEC region x key register 2
0x520C509C C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C50A0 B  REGISTER R3KEYR3 (wo): OTFDEC region x key register 3
0x520C50A0 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C50B0 B  REGISTER R4CFGR: OTFDEC region x configuration register
0x520C50B0 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x520C50B0 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x520C50B0 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x520C50B0 C   FIELD 04w02 MODE (rw): operating mode
0x520C50B0 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x520C50B0 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x520C50B4 B  REGISTER R4STARTADDR (rw): OTFDEC region x start address register
0x520C50B4 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x520C50BC B  REGISTER R4NONCER0 (rw): OTFDEC region x nonce register 0
0x520C50BC C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C50C0 B  REGISTER R4NONCER1 (rw): OTFDEC region x nonce register 1
0x520C50C0 C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C50C4 B  REGISTER R4KEYR0 (wo): OTFDEC region x key register 0
0x520C50C4 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C50C8 B  REGISTER R4KEYR1 (wo): OTFDEC region x key register 1
0x520C50C8 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C50CC B  REGISTER R4KEYR2 (wo): OTFDEC region x key register 2
0x520C50CC C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C50D0 B  REGISTER R4KEYR3 (wo): OTFDEC region x key register 3
0x520C50D0 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5300 B  REGISTER ISR (ro): OTFDEC interrupt status register
0x520C5300 C   FIELD 00w01 SEIF: Security Error Interrupt Flag status
0x520C5300 C   FIELD 01w01 XONEIF: Execute-only execute-Never Error Interrupt Flag status
0x520C5300 C   FIELD 02w01 KEIF: Key Error Interrupt Flag status
0x520C5304 B  REGISTER ICR (ro): OTFDEC interrupt clear register
0x520C5304 C   FIELD 00w01 SEIF: SEIF
0x520C5304 C   FIELD 01w01 XONEIF: Execute-only execute-Never Error Interrupt Flag clear
0x520C5304 C   FIELD 02w01 KEIF: KEIF
0x520C5308 B  REGISTER IER (rw): OTFDEC interrupt enable register
0x520C5308 C   FIELD 00w01 SEIE: Security Error Interrupt Enable
0x520C5308 C   FIELD 01w01 XONEIE: XONEIE
0x520C5308 C   FIELD 02w01 KEIE: KEIE
0x520C5400 A PERIPHERAL SEC_OTFDEC2
0x520C5400 B  REGISTER CR (rw): OTFDEC control register
0x520C5400 C   FIELD 00w01 ENC: Encryption mode bit
0x520C5410 B  REGISTER PRIVCFGR (rw): OTFDEC privileged access control configuration register
0x520C5410 C   FIELD 00w01 PRIV: Encryption mode bit
0x520C5420 B  REGISTER R1CFGR: OTFDEC region x configuration register
0x520C5420 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x520C5420 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x520C5420 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x520C5420 C   FIELD 04w02 MODE (rw): operating mode
0x520C5420 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x520C5420 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x520C5424 B  REGISTER R1STARTADDR (rw): OTFDEC region x start address register
0x520C5424 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x520C5428 B  REGISTER R1ENDADDR (rw): OTFDEC region x end address register
0x520C5428 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x520C542C B  REGISTER R1NONCER0 (rw): OTFDEC region x nonce register 0
0x520C542C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C5430 B  REGISTER R1NONCER1 (rw): OTFDEC region x nonce register 1
0x520C5430 C   FIELD 00w32 REGx_NONCE: Region nonce
0x520C5434 B  REGISTER R1KEYR0 (wo): OTFDEC region x key register 0
0x520C5434 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5438 B  REGISTER R1KEYR1 (wo): OTFDEC region x key register 1
0x520C5438 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C543C B  REGISTER R1KEYR2 (wo): OTFDEC region x key register 2
0x520C543C C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5440 B  REGISTER R1KEYR3 (wo): OTFDEC region x key register 3
0x520C5440 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5450 B  REGISTER R2CFGR: OTFDEC region x configuration register
0x520C5450 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x520C5450 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x520C5450 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x520C5450 C   FIELD 04w02 MODE (rw): operating mode
0x520C5450 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x520C5450 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x520C5454 B  REGISTER R2STARTADDR (rw): OTFDEC region x start address register
0x520C5454 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x520C5458 B  REGISTER R2ENDADDR (rw): OTFDEC region x end address register
0x520C5458 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x520C545C B  REGISTER R2NONCER0 (rw): OTFDEC region x nonce register 0
0x520C545C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C5460 B  REGISTER R2NONCER1 (rw): OTFDEC region x nonce register 1
0x520C5460 C   FIELD 00w32 REGx_NONCE: Region nonce, bits [63:32]REGx_NONCE[63:32]
0x520C5464 B  REGISTER R2KEYR0 (wo): OTFDEC region x key register 0
0x520C5464 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5468 B  REGISTER R2KEYR1 (wo): OTFDEC region x key register 1
0x520C5468 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C546C B  REGISTER R2KEYR2 (wo): OTFDEC region x key register 2
0x520C546C C   FIELD 00w32 REGx_KEY_: REGx_KEY
0x520C5470 B  REGISTER R2KEYR3 (wo): OTFDEC region x key register 3
0x520C5470 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5480 B  REGISTER R3CFGR: OTFDEC region x configuration register
0x520C5480 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x520C5480 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x520C5480 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x520C5480 C   FIELD 04w02 MODE (rw): operating mode
0x520C5480 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x520C5480 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x520C5484 B  REGISTER R3STARTADDR (rw): OTFDEC region x start address register
0x520C5484 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x520C5488 B  REGISTER R3ENDADDR (rw): OTFDEC region x end address register
0x520C5488 C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x520C548C B  REGISTER R3NONCER0 (rw): OTFDEC region x nonce register 0
0x520C548C B  REGISTER R4ENDADDR (rw): OTFDEC region x end address register
0x520C548C C   FIELD 00w32 REGx_END_ADDR: Region AXI end address
0x520C548C C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C5490 B  REGISTER R3NONCER1 (rw): OTFDEC region x nonce register 1
0x520C5490 C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C5494 B  REGISTER R3KEYR0 (wo): OTFDEC region x key register 0
0x520C5494 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5498 B  REGISTER R3KEYR1 (wo): OTFDEC region x key register 1
0x520C5498 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C549C B  REGISTER R3KEYR2 (wo): OTFDEC region x key register 2
0x520C549C C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C54A0 B  REGISTER R3KEYR3 (wo): OTFDEC region x key register 3
0x520C54A0 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C54B0 B  REGISTER R4CFGR: OTFDEC region x configuration register
0x520C54B0 C   FIELD 00w01 REG_EN (rw): region on-the-fly decryption enable
0x520C54B0 C   FIELD 01w01 CONFIGLOCK (rw): region config lock
0x520C54B0 C   FIELD 02w01 KEYLOCK (rw): region key lock
0x520C54B0 C   FIELD 04w02 MODE (rw): operating mode
0x520C54B0 C   FIELD 08w08 KEYCRC (ro): region key 8-bit CRC
0x520C54B0 C   FIELD 16w16 REGx_VERSION (rw): region firmware version
0x520C54B4 B  REGISTER R4STARTADDR (rw): OTFDEC region x start address register
0x520C54B4 C   FIELD 00w32 REGx_START_ADDR: Region AXI start address
0x520C54BC B  REGISTER R4NONCER0 (rw): OTFDEC region x nonce register 0
0x520C54BC C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C54C0 B  REGISTER R4NONCER1 (rw): OTFDEC region x nonce register 1
0x520C54C0 C   FIELD 00w32 REGx_NONCE: REGx_NONCE
0x520C54C4 B  REGISTER R4KEYR0 (wo): OTFDEC region x key register 0
0x520C54C4 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C54C8 B  REGISTER R4KEYR1 (wo): OTFDEC region x key register 1
0x520C54C8 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C54CC B  REGISTER R4KEYR2 (wo): OTFDEC region x key register 2
0x520C54CC C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C54D0 B  REGISTER R4KEYR3 (wo): OTFDEC region x key register 3
0x520C54D0 C   FIELD 00w32 REGx_KEY: REGx_KEY
0x520C5700 B  REGISTER ISR (ro): OTFDEC interrupt status register
0x520C5700 C   FIELD 00w01 SEIF: Security Error Interrupt Flag status
0x520C5700 C   FIELD 01w01 XONEIF: Execute-only execute-Never Error Interrupt Flag status
0x520C5700 C   FIELD 02w01 KEIF: Key Error Interrupt Flag status
0x520C5704 B  REGISTER ICR (ro): OTFDEC interrupt clear register
0x520C5704 C   FIELD 00w01 SEIF: SEIF
0x520C5704 C   FIELD 01w01 XONEIF: Execute-only execute-Never Error Interrupt Flag clear
0x520C5704 C   FIELD 02w01 KEIF: KEIF
0x520C5708 B  REGISTER IER (rw): OTFDEC interrupt enable register
0x520C5708 C   FIELD 00w01 SEIE: Security Error Interrupt Enable
0x520C5708 C   FIELD 01w01 XONEIE: XONEIE
0x520C5708 C   FIELD 02w01 KEIE: KEIE
0x520C8000 A PERIPHERAL SEC_SDMMC1
0x520C8000 B  REGISTER POWER (rw): power control register
0x520C8000 C   FIELD 00w02 PWRCTRL: SDMMC state control bits
0x520C8000 C   FIELD 02w01 VSWITCH: Voltage switch sequence start
0x520C8000 C   FIELD 03w01 VSWITCHEN: Voltage switch procedure enable
0x520C8000 C   FIELD 04w01 DIRPOL: Data and command direction signals polarity selection
0x520C8004 B  REGISTER CLKCR (rw): clock control register
0x520C8004 C   FIELD 00w10 CLKDIV: Clock divide factor
0x520C8004 C   FIELD 12w01 PWRSAV: Power saving configuration bit
0x520C8004 C   FIELD 14w02 WIDBUS: Wide bus mode enable bit
0x520C8004 C   FIELD 16w01 NEGEDGE: SDIO_CK dephasing selection bit
0x520C8004 C   FIELD 17w01 HWFC_EN: HW Flow Control enable
0x520C8004 C   FIELD 18w01 DDR: Data rate signaling selection
0x520C8004 C   FIELD 19w01 BUSSPEED: Bus speed mode selection between DS, HS, SDR12, SDR25 and SDR50,DDR50, SDR104
0x520C8004 C   FIELD 20w02 SELCLKRX: Receive clock selection
0x520C8008 B  REGISTER ARGR (rw): argument register
0x520C8008 C   FIELD 00w32 CMDARG: Command argument
0x520C800C B  REGISTER CMDR (rw): command register
0x520C800C C   FIELD 00w06 CMDINDEX: Command index
0x520C800C C   FIELD 06w01 CMDTRANS: The CPSM treats the command as a data transfer command, stops the interrupt period, and signals DataEnable to the DPSM
0x520C800C C   FIELD 07w01 CMDSTOP: The CPSM treats the command as a Stop Transmission command and signals Abort to the DPSM
0x520C800C C   FIELD 08w02 WAITRESP: Wait for response bits
0x520C800C C   FIELD 10w01 WAITINT: CPSM waits for interrupt request
0x520C800C C   FIELD 11w01 WAITPEND: CPSM Waits for ends of data transfer (CmdPend internal signal) from DPSM
0x520C800C C   FIELD 12w01 CPSMEN: Command path state machine (CPSM) Enable bit
0x520C800C C   FIELD 13w01 DTHOLD: Hold new data block transmission and reception in the DPSM
0x520C800C C   FIELD 14w01 BOOTMODE: Select the boot mode procedure to be used
0x520C800C C   FIELD 15w01 BOOTEN: Enable boot mode procedure
0x520C800C C   FIELD 16w01 CMDSUSPEND: The CPSM treats the command as a Suspend or Resume command and signals interrupt period start/end
0x520C8010 B  REGISTER RESPCMDR (ro): command response register
0x520C8010 C   FIELD 00w06 RESPCMD: Response command index
0x520C8014 B  REGISTER RESP1 (ro): response 1 register
0x520C8014 C   FIELD 00w32 CARDSTATUS1: CARDSTATUS1
0x520C8018 B  REGISTER RESP2 (ro): response 2 register
0x520C8018 C   FIELD 00w32 CARDSTATUS2: CARDSTATUS2
0x520C801C B  REGISTER RESP3 (ro): response 3 register
0x520C801C C   FIELD 00w32 CARDSTATUS3: CARDSTATUS3
0x520C8020 B  REGISTER RESP4 (ro): response 4 register
0x520C8020 C   FIELD 00w32 CARDSTATUS4: CARDSTATUS4
0x520C8024 B  REGISTER DTIMER (rw): data timer register
0x520C8024 C   FIELD 00w32 DATATIME: Data and R1b busy timeout period
0x520C8028 B  REGISTER DLENR (rw): data length register
0x520C8028 C   FIELD 00w25 DATALENGTH: Data length value
0x520C802C B  REGISTER DCTRL (rw): data control register
0x520C802C C   FIELD 00w01 DTEN: DTEN
0x520C802C C   FIELD 01w01 DTDIR: Data transfer direction selection
0x520C802C C   FIELD 02w02 DTMODE: Data transfer mode selection
0x520C802C C   FIELD 04w04 DBLOCKSIZE: Data block size
0x520C802C C   FIELD 08w01 RWSTART: Read wait start
0x520C802C C   FIELD 09w01 RWSTOP: Read wait stop
0x520C802C C   FIELD 10w01 RWMOD: Read wait mode
0x520C802C C   FIELD 11w01 SDIOEN: SD I/O enable functions
0x520C802C C   FIELD 12w01 BOOTACKEN: Enable the reception of the boot acknowledgment
0x520C802C C   FIELD 13w01 FIFORST: FIFO reset, will flush any remaining data
0x520C8030 B  REGISTER DCNTR (ro): data counter register
0x520C8030 C   FIELD 00w25 DATACOUNT: Data count value
0x520C8034 B  REGISTER STAR (ro): status register
0x520C8034 C   FIELD 00w01 CCRCFAIL: Command response received (CRC check failed)
0x520C8034 C   FIELD 01w01 DCRCFAIL: Data block sent/received (CRC check failed)
0x520C8034 C   FIELD 02w01 CTIMEOUT: Command response timeout
0x520C8034 C   FIELD 03w01 DTIMEOUT: Data timeout
0x520C8034 C   FIELD 04w01 TXUNDERR: Transmit FIFO underrun error (masked by hardware when IDMA is enabled)
0x520C8034 C   FIELD 05w01 RXOVERR: Received FIFO overrun error (masked by hardware when IDMA is enabled)
0x520C8034 C   FIELD 06w01 CMDREND: Command response received (CRC check passed, or no CRC)
0x520C8034 C   FIELD 07w01 CMDSENT: Command sent (no response required)
0x520C8034 C   FIELD 08w01 DATAEND: Data transfer ended correctly
0x520C8034 C   FIELD 09w01 DHOLD: Data transfer Hold
0x520C8034 C   FIELD 10w01 DBCKEND: Data block sent/received
0x520C8034 C   FIELD 11w01 DABORT: Data transfer aborted by CMD12
0x520C8034 C   FIELD 12w01 DPSMACT: Data path state machine active, i.e. not in Idle state
0x520C8034 C   FIELD 13w01 CPSMACT: Command path state machine active, i.e. not in Idle state
0x520C8034 C   FIELD 14w01 TXFIFOHE: Transmit FIFO half empty
0x520C8034 C   FIELD 15w01 RXFIFOHF: Receive FIFO half full
0x520C8034 C   FIELD 16w01 TXFIFOF: Transmit FIFO full
0x520C8034 C   FIELD 17w01 RXFIFOF: Receive FIFO full
0x520C8034 C   FIELD 18w01 TXFIFOE: Transmit FIFO empty
0x520C8034 C   FIELD 19w01 RXFIFOE: Receive FIFO empty
0x520C8034 C   FIELD 20w01 BUSYD0: Inverted value of SDMMC_D0 line (Busy), sampled at the end of a CMD response and a second time 2 SDMMC_CK cycles after the CMD response
0x520C8034 C   FIELD 21w01 BUSYD0END: end of SDMMC_D0 Busy following a CMD response detected
0x520C8034 C   FIELD 22w01 SDIOIT: SDIO interrupt received
0x520C8034 C   FIELD 23w01 ACKFAIL: Boot acknowledgment received (boot acknowledgment check fail)
0x520C8034 C   FIELD 24w01 ACKTIMEOUT: Boot acknowledgment timeout
0x520C8034 C   FIELD 25w01 VSWEND: Voltage switch critical timing section completion
0x520C8034 C   FIELD 26w01 CKSTOP: SDMMC_CK stopped in Voltage switch procedure
0x520C8034 C   FIELD 27w01 IDMATE: IDMA transfer error
0x520C8034 C   FIELD 28w01 IDMABTC: IDMA buffer transfer complete
0x520C8038 B  REGISTER ICR (rw): interrupt clear register
0x520C8038 C   FIELD 00w01 CCRCFAILC: CCRCFAIL flag clear bit
0x520C8038 C   FIELD 01w01 DCRCFAILC: DCRCFAIL flag clear bit
0x520C8038 C   FIELD 02w01 CTIMEOUTC: CTIMEOUT flag clear bit
0x520C8038 C   FIELD 03w01 DTIMEOUTC: DTIMEOUT flag clear bit
0x520C8038 C   FIELD 04w01 TXUNDERRC: TXUNDERR flag clear bit
0x520C8038 C   FIELD 05w01 RXOVERRC: RXOVERR flag clear bit
0x520C8038 C   FIELD 06w01 CMDRENDC: CMDREND flag clear bit
0x520C8038 C   FIELD 07w01 CMDSENTC: CMDSENT flag clear bit
0x520C8038 C   FIELD 08w01 DATAENDC: DATAEND flag clear bit
0x520C8038 C   FIELD 09w01 DHOLDC: DHOLD flag clear bit
0x520C8038 C   FIELD 10w01 DBCKENDC: DBCKEND flag clear bit
0x520C8038 C   FIELD 11w01 DABORTC: DABORT flag clear bit
0x520C8038 C   FIELD 21w01 BUSYD0ENDC: BUSYD0END flag clear bit
0x520C8038 C   FIELD 22w01 SDIOITC: SDIOIT flag clear bit
0x520C8038 C   FIELD 23w01 ACKFAILC: ACKFAIL flag clear bit
0x520C8038 C   FIELD 24w01 ACKTIMEOUTC: ACKTIMEOUT flag clear bit
0x520C8038 C   FIELD 25w01 VSWENDC: VSWEND flag clear bit
0x520C8038 C   FIELD 26w01 CKSTOPC: CKSTOP flag clear bit
0x520C8038 C   FIELD 27w01 IDMATEC: IDMA transfer error clear bit
0x520C8038 C   FIELD 28w01 IDMABTCC: IDMA buffer transfer complete clear bit
0x520C803C B  REGISTER MASKR (rw): mask register
0x520C803C C   FIELD 00w01 CCRCFAILIE: Command CRC fail interrupt enable
0x520C803C C   FIELD 01w01 DCRCFAILIE: Data CRC fail interrupt enable
0x520C803C C   FIELD 02w01 CTIMEOUTIE: Command timeout interrupt enable
0x520C803C C   FIELD 03w01 DTIMEOUTIE: Data timeout interrupt enable
0x520C803C C   FIELD 04w01 TXUNDERRIE: Tx FIFO underrun error interrupt enable
0x520C803C C   FIELD 05w01 RXOVERRIE: Rx FIFO overrun error interrupt enable
0x520C803C C   FIELD 06w01 CMDRENDIE: Command response received interrupt enable
0x520C803C C   FIELD 07w01 CMDSENTIE: Command sent interrupt enable
0x520C803C C   FIELD 08w01 DATAENDIE: Data end interrupt enable
0x520C803C C   FIELD 09w01 DHOLDIE: Data hold interrupt enable
0x520C803C C   FIELD 10w01 DBCKENDIE: Data block end interrupt enable
0x520C803C C   FIELD 11w01 DABORTIE: Data transfer aborted interrupt enable
0x520C803C C   FIELD 14w01 TXFIFOHEIE: Tx FIFO half empty interrupt enable
0x520C803C C   FIELD 15w01 RXFIFOHFIE: Rx FIFO half full interrupt enable
0x520C803C C   FIELD 17w01 RXFIFOFIE: Rx FIFO full interrupt enable
0x520C803C C   FIELD 18w01 TXFIFOEIE: Tx FIFO empty interrupt enable
0x520C803C C   FIELD 21w01 BUSYD0ENDIE: BUSYD0END interrupt enable
0x520C803C C   FIELD 22w01 SDIOITIE: SDIO mode interrupt received interrupt enable
0x520C803C C   FIELD 23w01 ACKFAILIE: Acknowledgment Fail interrupt enable
0x520C803C C   FIELD 24w01 ACKTIMEOUTIE: Acknowledgment timeout interrupt enable
0x520C803C C   FIELD 25w01 VSWENDIE: Voltage switch critical timing section completion interrupt enable
0x520C803C C   FIELD 26w01 CKSTOPIE: Voltage Switch clock stopped interrupt enable
0x520C803C C   FIELD 28w01 IDMABTCIE: IDMA buffer transfer complete interrupt enable
0x520C8040 B  REGISTER ACKTIMER (rw): acknowledgment timer register
0x520C8040 C   FIELD 00w25 ACKTIME: Boot acknowledgment timeout period
0x520C8050 B  REGISTER SDMMC_IDMACTRLR (rw): DMA control register
0x520C8050 C   FIELD 00w01 IDMAEN: IDMA enable This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0).
0x520C8050 C   FIELD 01w01 IDMABMODE: Buffer mode selection. This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0).
0x520C8054 B  REGISTER SDMMC_IDMABSIZER (rw): buffer size register
0x520C8054 C   FIELD 05w12 IDMABNDT: Number of bytes per buffer
0x520C8058 B  REGISTER SDMMC_IDMABASER (rw): buffer base address register
0x520C8058 C   FIELD 00w32 IDMABASE: Buffer memory base address bits [31:2], shall be word aligned (bit [1:0] are always 0 and read only)
0x520C8064 B  REGISTER SDMMC_IDMALAR (rw): linked list address register
0x520C8064 C   FIELD 02w14 IDMALA: Acknowledge linked list buffer ready
0x520C8064 C   FIELD 29w01 ABR: Acknowledge linked list buffer ready
0x520C8064 C   FIELD 30w01 ULS: Update SDMMC_IDMABSIZE from the next linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode and ULA = 1)
0x520C8064 C   FIELD 31w01 ULA: Update SDMMC_IDMALAR from linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode)
0x520C8068 B  REGISTER SDMMC_IDMABAR (rw): linked list memory base register
0x520C8068 C   FIELD 02w30 IDMABA: Word aligned Linked list memory base address
0x520C8080 B  REGISTER FIFOR0 (rw): data FIFO register 0
0x520C8080 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8084 B  REGISTER FIFOR1 (rw): data FIFO register 1
0x520C8084 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8088 B  REGISTER FIFOR2 (rw): data FIFO register 2
0x520C8088 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C808C B  REGISTER FIFOR3 (rw): data FIFO register 3
0x520C808C C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8090 B  REGISTER FIFOR4 (rw): data FIFO register 4
0x520C8090 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8094 B  REGISTER FIFOR5 (rw): data FIFO register 5
0x520C8094 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8098 B  REGISTER FIFOR6 (rw): data FIFO register 6
0x520C8098 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C809C B  REGISTER FIFOR7 (rw): data FIFO register 7
0x520C809C C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C80A0 B  REGISTER FIFOR8 (rw): data FIFO register 8
0x520C80A0 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C80A4 B  REGISTER FIFOR9 (rw): data FIFO register 9
0x520C80A4 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C80A8 B  REGISTER FIFOR10 (rw): data FIFO register 10
0x520C80A8 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C80AC B  REGISTER FIFOR11 (rw): data FIFO register 11
0x520C80AC C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C80B0 B  REGISTER FIFOR12 (rw): data FIFO register 12
0x520C80B0 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C80B4 B  REGISTER FIFOR13 (rw): data FIFO register 13
0x520C80B4 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C80B8 B  REGISTER FIFOR14 (rw): data FIFO register 14
0x520C80B8 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C80BC B  REGISTER FIFOR15 (rw): data FIFO register 15
0x520C80BC C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8400 A PERIPHERAL SEC_DLYBSD1
0x520C8400 B  REGISTER DLYB_CR (rw): control register
0x520C8400 C   FIELD 00w01 DEN: Operational amplifier Enable
0x520C8400 C   FIELD 01w01 SEN: OPALPM
0x520C8404 B  REGISTER DLYB_CFGR: configuration register
0x520C8404 C   FIELD 00w04 SEL (rw): SEL
0x520C8404 C   FIELD 08w07 UNIT (rw): UNIT
0x520C8404 C   FIELD 16w12 LNG (ro): LNG
0x520C8404 C   FIELD 31w01 LNGF (ro): LNGF
0x520C8800 A PERIPHERAL SEC_DLYBSD2
0x520C8800 B  REGISTER DLYB_CR (rw): control register
0x520C8800 C   FIELD 00w01 DEN: Operational amplifier Enable
0x520C8800 C   FIELD 01w01 SEN: OPALPM
0x520C8804 B  REGISTER DLYB_CFGR: configuration register
0x520C8804 C   FIELD 00w04 SEL (rw): SEL
0x520C8804 C   FIELD 08w07 UNIT (rw): UNIT
0x520C8804 C   FIELD 16w12 LNG (ro): LNG
0x520C8804 C   FIELD 31w01 LNGF (ro): LNGF
0x520C8C00 A PERIPHERAL SEC_SDMMC2
0x520C8C00 B  REGISTER POWER (rw): power control register
0x520C8C00 C   FIELD 00w02 PWRCTRL: SDMMC state control bits
0x520C8C00 C   FIELD 02w01 VSWITCH: Voltage switch sequence start
0x520C8C00 C   FIELD 03w01 VSWITCHEN: Voltage switch procedure enable
0x520C8C00 C   FIELD 04w01 DIRPOL: Data and command direction signals polarity selection
0x520C8C04 B  REGISTER CLKCR (rw): clock control register
0x520C8C04 C   FIELD 00w10 CLKDIV: Clock divide factor
0x520C8C04 C   FIELD 12w01 PWRSAV: Power saving configuration bit
0x520C8C04 C   FIELD 14w02 WIDBUS: Wide bus mode enable bit
0x520C8C04 C   FIELD 16w01 NEGEDGE: SDIO_CK dephasing selection bit
0x520C8C04 C   FIELD 17w01 HWFC_EN: HW Flow Control enable
0x520C8C04 C   FIELD 18w01 DDR: Data rate signaling selection
0x520C8C04 C   FIELD 19w01 BUSSPEED: Bus speed mode selection between DS, HS, SDR12, SDR25 and SDR50,DDR50, SDR104
0x520C8C04 C   FIELD 20w02 SELCLKRX: Receive clock selection
0x520C8C08 B  REGISTER ARGR (rw): argument register
0x520C8C08 C   FIELD 00w32 CMDARG: Command argument
0x520C8C0C B  REGISTER CMDR (rw): command register
0x520C8C0C C   FIELD 00w06 CMDINDEX: Command index
0x520C8C0C C   FIELD 06w01 CMDTRANS: The CPSM treats the command as a data transfer command, stops the interrupt period, and signals DataEnable to the DPSM
0x520C8C0C C   FIELD 07w01 CMDSTOP: The CPSM treats the command as a Stop Transmission command and signals Abort to the DPSM
0x520C8C0C C   FIELD 08w02 WAITRESP: Wait for response bits
0x520C8C0C C   FIELD 10w01 WAITINT: CPSM waits for interrupt request
0x520C8C0C C   FIELD 11w01 WAITPEND: CPSM Waits for ends of data transfer (CmdPend internal signal) from DPSM
0x520C8C0C C   FIELD 12w01 CPSMEN: Command path state machine (CPSM) Enable bit
0x520C8C0C C   FIELD 13w01 DTHOLD: Hold new data block transmission and reception in the DPSM
0x520C8C0C C   FIELD 14w01 BOOTMODE: Select the boot mode procedure to be used
0x520C8C0C C   FIELD 15w01 BOOTEN: Enable boot mode procedure
0x520C8C0C C   FIELD 16w01 CMDSUSPEND: The CPSM treats the command as a Suspend or Resume command and signals interrupt period start/end
0x520C8C10 B  REGISTER RESPCMDR (ro): command response register
0x520C8C10 C   FIELD 00w06 RESPCMD: Response command index
0x520C8C14 B  REGISTER RESP1 (ro): response 1 register
0x520C8C14 C   FIELD 00w32 CARDSTATUS1: CARDSTATUS1
0x520C8C18 B  REGISTER RESP2 (ro): response 2 register
0x520C8C18 C   FIELD 00w32 CARDSTATUS2: CARDSTATUS2
0x520C8C1C B  REGISTER RESP3 (ro): response 3 register
0x520C8C1C C   FIELD 00w32 CARDSTATUS3: CARDSTATUS3
0x520C8C20 B  REGISTER RESP4 (ro): response 4 register
0x520C8C20 C   FIELD 00w32 CARDSTATUS4: CARDSTATUS4
0x520C8C24 B  REGISTER DTIMER (rw): data timer register
0x520C8C24 C   FIELD 00w32 DATATIME: Data and R1b busy timeout period
0x520C8C28 B  REGISTER DLENR (rw): data length register
0x520C8C28 C   FIELD 00w25 DATALENGTH: Data length value
0x520C8C2C B  REGISTER DCTRL (rw): data control register
0x520C8C2C C   FIELD 00w01 DTEN: DTEN
0x520C8C2C C   FIELD 01w01 DTDIR: Data transfer direction selection
0x520C8C2C C   FIELD 02w02 DTMODE: Data transfer mode selection
0x520C8C2C C   FIELD 04w04 DBLOCKSIZE: Data block size
0x520C8C2C C   FIELD 08w01 RWSTART: Read wait start
0x520C8C2C C   FIELD 09w01 RWSTOP: Read wait stop
0x520C8C2C C   FIELD 10w01 RWMOD: Read wait mode
0x520C8C2C C   FIELD 11w01 SDIOEN: SD I/O enable functions
0x520C8C2C C   FIELD 12w01 BOOTACKEN: Enable the reception of the boot acknowledgment
0x520C8C2C C   FIELD 13w01 FIFORST: FIFO reset, will flush any remaining data
0x520C8C30 B  REGISTER DCNTR (ro): data counter register
0x520C8C30 C   FIELD 00w25 DATACOUNT: Data count value
0x520C8C34 B  REGISTER STAR (ro): status register
0x520C8C34 C   FIELD 00w01 CCRCFAIL: Command response received (CRC check failed)
0x520C8C34 C   FIELD 01w01 DCRCFAIL: Data block sent/received (CRC check failed)
0x520C8C34 C   FIELD 02w01 CTIMEOUT: Command response timeout
0x520C8C34 C   FIELD 03w01 DTIMEOUT: Data timeout
0x520C8C34 C   FIELD 04w01 TXUNDERR: Transmit FIFO underrun error (masked by hardware when IDMA is enabled)
0x520C8C34 C   FIELD 05w01 RXOVERR: Received FIFO overrun error (masked by hardware when IDMA is enabled)
0x520C8C34 C   FIELD 06w01 CMDREND: Command response received (CRC check passed, or no CRC)
0x520C8C34 C   FIELD 07w01 CMDSENT: Command sent (no response required)
0x520C8C34 C   FIELD 08w01 DATAEND: Data transfer ended correctly
0x520C8C34 C   FIELD 09w01 DHOLD: Data transfer Hold
0x520C8C34 C   FIELD 10w01 DBCKEND: Data block sent/received
0x520C8C34 C   FIELD 11w01 DABORT: Data transfer aborted by CMD12
0x520C8C34 C   FIELD 12w01 DPSMACT: Data path state machine active, i.e. not in Idle state
0x520C8C34 C   FIELD 13w01 CPSMACT: Command path state machine active, i.e. not in Idle state
0x520C8C34 C   FIELD 14w01 TXFIFOHE: Transmit FIFO half empty
0x520C8C34 C   FIELD 15w01 RXFIFOHF: Receive FIFO half full
0x520C8C34 C   FIELD 16w01 TXFIFOF: Transmit FIFO full
0x520C8C34 C   FIELD 17w01 RXFIFOF: Receive FIFO full
0x520C8C34 C   FIELD 18w01 TXFIFOE: Transmit FIFO empty
0x520C8C34 C   FIELD 19w01 RXFIFOE: Receive FIFO empty
0x520C8C34 C   FIELD 20w01 BUSYD0: Inverted value of SDMMC_D0 line (Busy), sampled at the end of a CMD response and a second time 2 SDMMC_CK cycles after the CMD response
0x520C8C34 C   FIELD 21w01 BUSYD0END: end of SDMMC_D0 Busy following a CMD response detected
0x520C8C34 C   FIELD 22w01 SDIOIT: SDIO interrupt received
0x520C8C34 C   FIELD 23w01 ACKFAIL: Boot acknowledgment received (boot acknowledgment check fail)
0x520C8C34 C   FIELD 24w01 ACKTIMEOUT: Boot acknowledgment timeout
0x520C8C34 C   FIELD 25w01 VSWEND: Voltage switch critical timing section completion
0x520C8C34 C   FIELD 26w01 CKSTOP: SDMMC_CK stopped in Voltage switch procedure
0x520C8C34 C   FIELD 27w01 IDMATE: IDMA transfer error
0x520C8C34 C   FIELD 28w01 IDMABTC: IDMA buffer transfer complete
0x520C8C38 B  REGISTER ICR (rw): interrupt clear register
0x520C8C38 C   FIELD 00w01 CCRCFAILC: CCRCFAIL flag clear bit
0x520C8C38 C   FIELD 01w01 DCRCFAILC: DCRCFAIL flag clear bit
0x520C8C38 C   FIELD 02w01 CTIMEOUTC: CTIMEOUT flag clear bit
0x520C8C38 C   FIELD 03w01 DTIMEOUTC: DTIMEOUT flag clear bit
0x520C8C38 C   FIELD 04w01 TXUNDERRC: TXUNDERR flag clear bit
0x520C8C38 C   FIELD 05w01 RXOVERRC: RXOVERR flag clear bit
0x520C8C38 C   FIELD 06w01 CMDRENDC: CMDREND flag clear bit
0x520C8C38 C   FIELD 07w01 CMDSENTC: CMDSENT flag clear bit
0x520C8C38 C   FIELD 08w01 DATAENDC: DATAEND flag clear bit
0x520C8C38 C   FIELD 09w01 DHOLDC: DHOLD flag clear bit
0x520C8C38 C   FIELD 10w01 DBCKENDC: DBCKEND flag clear bit
0x520C8C38 C   FIELD 11w01 DABORTC: DABORT flag clear bit
0x520C8C38 C   FIELD 21w01 BUSYD0ENDC: BUSYD0END flag clear bit
0x520C8C38 C   FIELD 22w01 SDIOITC: SDIOIT flag clear bit
0x520C8C38 C   FIELD 23w01 ACKFAILC: ACKFAIL flag clear bit
0x520C8C38 C   FIELD 24w01 ACKTIMEOUTC: ACKTIMEOUT flag clear bit
0x520C8C38 C   FIELD 25w01 VSWENDC: VSWEND flag clear bit
0x520C8C38 C   FIELD 26w01 CKSTOPC: CKSTOP flag clear bit
0x520C8C38 C   FIELD 27w01 IDMATEC: IDMA transfer error clear bit
0x520C8C38 C   FIELD 28w01 IDMABTCC: IDMA buffer transfer complete clear bit
0x520C8C3C B  REGISTER MASKR (rw): mask register
0x520C8C3C C   FIELD 00w01 CCRCFAILIE: Command CRC fail interrupt enable
0x520C8C3C C   FIELD 01w01 DCRCFAILIE: Data CRC fail interrupt enable
0x520C8C3C C   FIELD 02w01 CTIMEOUTIE: Command timeout interrupt enable
0x520C8C3C C   FIELD 03w01 DTIMEOUTIE: Data timeout interrupt enable
0x520C8C3C C   FIELD 04w01 TXUNDERRIE: Tx FIFO underrun error interrupt enable
0x520C8C3C C   FIELD 05w01 RXOVERRIE: Rx FIFO overrun error interrupt enable
0x520C8C3C C   FIELD 06w01 CMDRENDIE: Command response received interrupt enable
0x520C8C3C C   FIELD 07w01 CMDSENTIE: Command sent interrupt enable
0x520C8C3C C   FIELD 08w01 DATAENDIE: Data end interrupt enable
0x520C8C3C C   FIELD 09w01 DHOLDIE: Data hold interrupt enable
0x520C8C3C C   FIELD 10w01 DBCKENDIE: Data block end interrupt enable
0x520C8C3C C   FIELD 11w01 DABORTIE: Data transfer aborted interrupt enable
0x520C8C3C C   FIELD 14w01 TXFIFOHEIE: Tx FIFO half empty interrupt enable
0x520C8C3C C   FIELD 15w01 RXFIFOHFIE: Rx FIFO half full interrupt enable
0x520C8C3C C   FIELD 17w01 RXFIFOFIE: Rx FIFO full interrupt enable
0x520C8C3C C   FIELD 18w01 TXFIFOEIE: Tx FIFO empty interrupt enable
0x520C8C3C C   FIELD 21w01 BUSYD0ENDIE: BUSYD0END interrupt enable
0x520C8C3C C   FIELD 22w01 SDIOITIE: SDIO mode interrupt received interrupt enable
0x520C8C3C C   FIELD 23w01 ACKFAILIE: Acknowledgment Fail interrupt enable
0x520C8C3C C   FIELD 24w01 ACKTIMEOUTIE: Acknowledgment timeout interrupt enable
0x520C8C3C C   FIELD 25w01 VSWENDIE: Voltage switch critical timing section completion interrupt enable
0x520C8C3C C   FIELD 26w01 CKSTOPIE: Voltage Switch clock stopped interrupt enable
0x520C8C3C C   FIELD 28w01 IDMABTCIE: IDMA buffer transfer complete interrupt enable
0x520C8C40 B  REGISTER ACKTIMER (rw): acknowledgment timer register
0x520C8C40 C   FIELD 00w25 ACKTIME: Boot acknowledgment timeout period
0x520C8C50 B  REGISTER SDMMC_IDMACTRLR (rw): DMA control register
0x520C8C50 C   FIELD 00w01 IDMAEN: IDMA enable This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0).
0x520C8C50 C   FIELD 01w01 IDMABMODE: Buffer mode selection. This bit can only be written by firmware when DPSM is inactive (DPSMACT = 0).
0x520C8C54 B  REGISTER SDMMC_IDMABSIZER (rw): buffer size register
0x520C8C54 C   FIELD 05w12 IDMABNDT: Number of bytes per buffer
0x520C8C58 B  REGISTER SDMMC_IDMABASER (rw): buffer base address register
0x520C8C58 C   FIELD 00w32 IDMABASE: Buffer memory base address bits [31:2], shall be word aligned (bit [1:0] are always 0 and read only)
0x520C8C64 B  REGISTER SDMMC_IDMALAR (rw): linked list address register
0x520C8C64 C   FIELD 02w14 IDMALA: Acknowledge linked list buffer ready
0x520C8C64 C   FIELD 29w01 ABR: Acknowledge linked list buffer ready
0x520C8C64 C   FIELD 30w01 ULS: Update SDMMC_IDMABSIZE from the next linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode and ULA = 1)
0x520C8C64 C   FIELD 31w01 ULA: Update SDMMC_IDMALAR from linked list when in linked list mode (SDMMC_IDMACTRLR.IDMABMODE select linked list mode)
0x520C8C68 B  REGISTER SDMMC_IDMABAR (rw): linked list memory base register
0x520C8C68 C   FIELD 02w30 IDMABA: Word aligned Linked list memory base address
0x520C8C80 B  REGISTER FIFOR0 (rw): data FIFO register 0
0x520C8C80 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8C84 B  REGISTER FIFOR1 (rw): data FIFO register 1
0x520C8C84 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8C88 B  REGISTER FIFOR2 (rw): data FIFO register 2
0x520C8C88 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8C8C B  REGISTER FIFOR3 (rw): data FIFO register 3
0x520C8C8C C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8C90 B  REGISTER FIFOR4 (rw): data FIFO register 4
0x520C8C90 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8C94 B  REGISTER FIFOR5 (rw): data FIFO register 5
0x520C8C94 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8C98 B  REGISTER FIFOR6 (rw): data FIFO register 6
0x520C8C98 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8C9C B  REGISTER FIFOR7 (rw): data FIFO register 7
0x520C8C9C C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8CA0 B  REGISTER FIFOR8 (rw): data FIFO register 8
0x520C8CA0 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8CA4 B  REGISTER FIFOR9 (rw): data FIFO register 9
0x520C8CA4 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8CA8 B  REGISTER FIFOR10 (rw): data FIFO register 10
0x520C8CA8 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8CAC B  REGISTER FIFOR11 (rw): data FIFO register 11
0x520C8CAC C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8CB0 B  REGISTER FIFOR12 (rw): data FIFO register 12
0x520C8CB0 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8CB4 B  REGISTER FIFOR13 (rw): data FIFO register 13
0x520C8CB4 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8CB8 B  REGISTER FIFOR14 (rw): data FIFO register 14
0x520C8CB8 C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520C8CBC B  REGISTER FIFOR15 (rw): data FIFO register 15
0x520C8CBC C   FIELD 00w32 FIFODATA: Receive and transmit FIFO data
0x520CF000 A PERIPHERAL SEC_DLYBOS1
0x520CF000 B  REGISTER DLYB_CR (rw): control register
0x520CF000 C   FIELD 00w01 DEN: Operational amplifier Enable
0x520CF000 C   FIELD 01w01 SEN: OPALPM
0x520CF004 B  REGISTER DLYB_CFGR: configuration register
0x520CF004 C   FIELD 00w04 SEL (rw): SEL
0x520CF004 C   FIELD 08w07 UNIT (rw): UNIT
0x520CF004 C   FIELD 16w12 LNG (ro): LNG
0x520CF004 C   FIELD 31w01 LNGF (ro): LNGF
0x520CF400 A PERIPHERAL SEC_DLYBOS2
0x520CF400 B  REGISTER DLYB_CR (rw): control register
0x520CF400 C   FIELD 00w01 DEN: Operational amplifier Enable
0x520CF400 C   FIELD 01w01 SEN: OPALPM
0x520CF404 B  REGISTER DLYB_CFGR: configuration register
0x520CF404 C   FIELD 00w04 SEL (rw): SEL
0x520CF404 C   FIELD 08w07 UNIT (rw): UNIT
0x520CF404 C   FIELD 16w12 LNG (ro): LNG
0x520CF404 C   FIELD 31w01 LNGF (ro): LNGF
0x520D0400 A PERIPHERAL SEC_FMC
0x520D0400 B  REGISTER BCR1 (rw): SRAM/NOR-Flash chip-select control register for bank 1
0x520D0400 C   FIELD 00w01 MBKEN: Memory bank enable bit
0x520D0400 C   FIELD 01w01 MUXEN: Address/data multiplexing enable bit
0x520D0400 C   FIELD 02w02 MTYP: Memory type
0x520D0400 C   FIELD 04w02 MWID: Memory data bus width
0x520D0400 C   FIELD 06w01 FACCEN: Flash access enable
0x520D0400 C   FIELD 08w01 BURSTEN: Burst enable bit
0x520D0400 C   FIELD 09w01 WAITPOL: Wait signal polarity bit
0x520D0400 C   FIELD 11w01 WAITCFG: Wait timing configuration
0x520D0400 C   FIELD 12w01 WREN: Write enable bit
0x520D0400 C   FIELD 13w01 WAITEN: Wait enable bit
0x520D0400 C   FIELD 14w01 EXTMOD: Extended mode enable
0x520D0400 C   FIELD 15w01 ASYNCWAIT: Wait signal during asynchronous transfers
0x520D0400 C   FIELD 16w03 CPSIZE: CRAM Page Size
0x520D0400 C   FIELD 19w01 CBURSTRW: Write burst enable
0x520D0400 C   FIELD 20w01 CCLKEN: Continuous clock enable
0x520D0400 C   FIELD 21w01 WFDIS: Write FIFO disable
0x520D0400 C   FIELD 22w02 NBLSET: Byte lane (NBL) setup
0x520D0400 C   FIELD 31w01 FMCEN: FMC controller enable
0x520D0404 B  REGISTER BTR1 (rw): SRAM/NOR-Flash chip-select timing register for bank 1
0x520D0404 C   FIELD 00w04 ADDSET: Address setup phase duration
0x520D0404 C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x520D0404 C   FIELD 08w08 DATAST: Data-phase duration
0x520D0404 C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x520D0404 C   FIELD 20w04 CLKDIV: Clock divide ratio (for FMC_CLK signal)
0x520D0404 C   FIELD 24w04 DATLAT: Data latency for synchronous memory
0x520D0404 C   FIELD 28w02 ACCMOD: Access mode
0x520D0404 C   FIELD 30w02 DATAHLD: Data hold phase duration
0x520D0408 B  REGISTER BCR2 (rw): SRAM/NOR-Flash chip-select control register for bank 2
0x520D0408 C   FIELD 00w01 MBKEN: Memory bank enable bit
0x520D0408 C   FIELD 01w01 MUXEN: Address/data multiplexing enable bit
0x520D0408 C   FIELD 02w02 MTYP: Memory type
0x520D0408 C   FIELD 04w02 MWID: Memory data bus width
0x520D0408 C   FIELD 06w01 FACCEN: Flash access enable
0x520D0408 C   FIELD 08w01 BURSTEN: Burst enable bit
0x520D0408 C   FIELD 09w01 WAITPOL: Wait signal polarity bit
0x520D0408 C   FIELD 11w01 WAITCFG: Wait timing configuration
0x520D0408 C   FIELD 12w01 WREN: Write enable bit
0x520D0408 C   FIELD 13w01 WAITEN: Wait enable bit
0x520D0408 C   FIELD 14w01 EXTMOD: Extended mode enable
0x520D0408 C   FIELD 15w01 ASYNCWAIT: Wait signal during asynchronous transfers
0x520D0408 C   FIELD 16w03 CPSIZE: CRAM Page Size
0x520D0408 C   FIELD 19w01 CBURSTRW: Write burst enable
0x520D0408 C   FIELD 20w01 CCLKEN: Continuous clock enable
0x520D0408 C   FIELD 21w01 WFDIS: Write FIFO disable
0x520D0408 C   FIELD 22w02 NBLSET: Byte lane (NBL) setup
0x520D0408 C   FIELD 31w01 FMCEN: FMC controller enable
0x520D040C B  REGISTER BTR2 (rw): SRAM/NOR-Flash chip-select timing register for bank 2
0x520D040C C   FIELD 00w04 ADDSET: Address setup phase duration
0x520D040C C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x520D040C C   FIELD 08w08 DATAST: Data-phase duration
0x520D040C C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x520D040C C   FIELD 20w04 CLKDIV: Clock divide ratio (for FMC_CLK signal)
0x520D040C C   FIELD 24w04 DATLAT: Data latency for synchronous memory
0x520D040C C   FIELD 28w02 ACCMOD: Access mode
0x520D040C C   FIELD 30w02 DATAHLD: Data hold phase duration
0x520D0410 B  REGISTER BCR3 (rw): SRAM/NOR-Flash chip-select control register for bank 3
0x520D0410 C   FIELD 00w01 MBKEN: Memory bank enable bit
0x520D0410 C   FIELD 01w01 MUXEN: Address/data multiplexing enable bit
0x520D0410 C   FIELD 02w02 MTYP: Memory type
0x520D0410 C   FIELD 04w02 MWID: Memory data bus width
0x520D0410 C   FIELD 06w01 FACCEN: Flash access enable
0x520D0410 C   FIELD 08w01 BURSTEN: Burst enable bit
0x520D0410 C   FIELD 09w01 WAITPOL: Wait signal polarity bit
0x520D0410 C   FIELD 11w01 WAITCFG: Wait timing configuration
0x520D0410 C   FIELD 12w01 WREN: Write enable bit
0x520D0410 C   FIELD 13w01 WAITEN: Wait enable bit
0x520D0410 C   FIELD 14w01 EXTMOD: Extended mode enable
0x520D0410 C   FIELD 15w01 ASYNCWAIT: Wait signal during asynchronous transfers
0x520D0410 C   FIELD 16w03 CPSIZE: CRAM Page Size
0x520D0410 C   FIELD 19w01 CBURSTRW: Write burst enable
0x520D0410 C   FIELD 20w01 CCLKEN: Continuous clock enable
0x520D0410 C   FIELD 21w01 WFDIS: Write FIFO disable
0x520D0410 C   FIELD 22w02 NBLSET: Byte lane (NBL) setup
0x520D0410 C   FIELD 31w01 FMCEN: FMC controller enable
0x520D0414 B  REGISTER BTR3 (rw): SRAM/NOR-Flash chip-select timing register for bank 3
0x520D0414 C   FIELD 00w04 ADDSET: Address setup phase duration
0x520D0414 C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x520D0414 C   FIELD 08w08 DATAST: Data-phase duration
0x520D0414 C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x520D0414 C   FIELD 20w04 CLKDIV: Clock divide ratio (for FMC_CLK signal)
0x520D0414 C   FIELD 24w04 DATLAT: Data latency for synchronous memory
0x520D0414 C   FIELD 28w02 ACCMOD: Access mode
0x520D0414 C   FIELD 30w02 DATAHLD: Data hold phase duration
0x520D0418 B  REGISTER BCR4 (rw): SRAM/NOR-Flash chip-select control register for bank 4
0x520D0418 C   FIELD 00w01 MBKEN: Memory bank enable bit
0x520D0418 C   FIELD 01w01 MUXEN: Address/data multiplexing enable bit
0x520D0418 C   FIELD 02w02 MTYP: Memory type
0x520D0418 C   FIELD 04w02 MWID: Memory data bus width
0x520D0418 C   FIELD 06w01 FACCEN: Flash access enable
0x520D0418 C   FIELD 08w01 BURSTEN: Burst enable bit
0x520D0418 C   FIELD 09w01 WAITPOL: Wait signal polarity bit
0x520D0418 C   FIELD 11w01 WAITCFG: Wait timing configuration
0x520D0418 C   FIELD 12w01 WREN: Write enable bit
0x520D0418 C   FIELD 13w01 WAITEN: Wait enable bit
0x520D0418 C   FIELD 14w01 EXTMOD: Extended mode enable
0x520D0418 C   FIELD 15w01 ASYNCWAIT: Wait signal during asynchronous transfers
0x520D0418 C   FIELD 16w03 CPSIZE: CRAM Page Size
0x520D0418 C   FIELD 19w01 CBURSTRW: Write burst enable
0x520D0418 C   FIELD 20w01 CCLKEN: Continuous clock enable
0x520D0418 C   FIELD 21w01 WFDIS: Write FIFO disable
0x520D0418 C   FIELD 22w02 NBLSET: Byte lane (NBL) setup
0x520D0418 C   FIELD 31w01 FMCEN: FMC controller enable
0x520D041C B  REGISTER BTR4 (rw): SRAM/NOR-Flash chip-select timing register for bank 4
0x520D041C C   FIELD 00w04 ADDSET: Address setup phase duration
0x520D041C C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x520D041C C   FIELD 08w08 DATAST: Data-phase duration
0x520D041C C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x520D041C C   FIELD 20w04 CLKDIV: Clock divide ratio (for FMC_CLK signal)
0x520D041C C   FIELD 24w04 DATLAT: Data latency for synchronous memory
0x520D041C C   FIELD 28w02 ACCMOD: Access mode
0x520D041C C   FIELD 30w02 DATAHLD: Data hold phase duration
0x520D0420 B  REGISTER PCSCNTR (rw): PSRAM chip select counter register
0x520D0420 C   FIELD 00w16 CSCOUNT: Chip select counter
0x520D0420 C   FIELD 16w01 CNTB1EN: Counter Bank 1 enable
0x520D0420 C   FIELD 17w01 CNTB2EN: Counter Bank 2 enable
0x520D0420 C   FIELD 18w01 CNTB3EN: Counter Bank 3 enable
0x520D0420 C   FIELD 19w01 CNTB4EN: Counter Bank 4 enable
0x520D0480 B  REGISTER PCR (rw): NAND Flash control registers
0x520D0480 C   FIELD 01w01 PWAITEN: Wait feature enable bit
0x520D0480 C   FIELD 02w01 PBKEN: NAND Flash memory bank enable bit
0x520D0480 C   FIELD 03w01 PTYP: Memory type
0x520D0480 C   FIELD 04w02 PWID: Data bus width
0x520D0480 C   FIELD 06w01 ECCEN: ECC computation logic enable bit
0x520D0480 C   FIELD 09w04 TCLR: CLE to RE delay
0x520D0480 C   FIELD 13w03 TAR: ALE to RE delay
0x520D0480 C   FIELD 17w03 ECCPS: ECC page size
0x520D0484 B  REGISTER SR: status and interrupt register
0x520D0484 C   FIELD 00w01 IRS (rw): Interrupt rising edge status The flag is set by hardware and reset by software. Note: If this bit is written by software to 1 it will be set.
0x520D0484 C   FIELD 01w01 ILS (rw): Interrupt high-level status The flag is set by hardware and reset by software.
0x520D0484 C   FIELD 02w01 IFS (rw): Interrupt falling edge status The flag is set by hardware and reset by software. Note: If this bit is written by software to 1 it will be set.
0x520D0484 C   FIELD 03w01 IREN (rw): Interrupt rising edge detection enable bit
0x520D0484 C   FIELD 04w01 ILEN (rw): Interrupt high-level detection enable bit
0x520D0484 C   FIELD 05w01 IFEN (rw): Interrupt falling edge detection enable bit
0x520D0484 C   FIELD 06w01 FEMPT (ro): FIFO empty. Read-only bit that provides the status of the FIFO
0x520D0488 B  REGISTER PMEM (rw): Common memory space timing register
0x520D0488 C   FIELD 00w08 MEMSET: Common memory x setup time These bits define the number of KCK_FMC (+1) clock cycles to set up the address before the command assertion (NWE, NOE), for NAND Flash read or write access to common memory space:
0x520D0488 C   FIELD 08w08 MEMWAIT: Common memory wait time These bits define the minimum number of KCK_FMC (+1) clock cycles to assert the command (NWE, NOE), for NAND Flash read or write access to common memory space. The duration of command assertion is extended if the wait signal (NWAIT) is active (low) at the end of the programmed value of KCK_FMC:
0x520D0488 C   FIELD 16w08 MEMHOLD: Common memory hold time These bits define the number of KCK_FMC clock cycles for write accesses and KCK_FMC+1 clock cycles for read accesses during which the address is held (and data for write accesses) after the command is de-asserted (NWE, NOE), for NAND Flash read or write access to common memory space:
0x520D0488 C   FIELD 24w08 MEMHIZ: Common memory x data bus Hi-Z time These bits define the number of KCK_FMC clock cycles during which the data bus is kept Hi-Z after the start of a NAND Flash write access to common memory space. This is only valid for write transactions:
0x520D048C B  REGISTER PATT (rw): The FMC_PATT read/write register contains the timing information for NAND Flash memory bank. It is used for 8-bit accesses to the attribute memory space of the NAND Flash for the last address write access if the timing must differ from that of previous accesses (for Ready/Busy management, refer to Section20.8.5: NAND Flash prewait feature).
0x520D048C C   FIELD 00w08 ATTSET: Attribute memory setup time These bits define the number of KCK_FMC (+1) clock cycles to set up address before the command assertion (NWE, NOE), for NAND Flash read or write access to attribute memory space:
0x520D048C C   FIELD 08w08 ATTWAIT: Attribute memory wait time These bits define the minimum number of x KCK_FMC (+1) clock cycles to assert the command (NWE, NOE), for NAND Flash read or write access to attribute memory space. The duration for command assertion is extended if the wait signal (NWAIT) is active (low) at the end of the programmed value of KCK_FMC:
0x520D048C C   FIELD 16w08 ATTHOLD: Attribute memory hold time These bits define the number of KCK_FMC clock cycles during which the address is held (and data for write access) after the command de-assertion (NWE, NOE), for NAND Flash read or write access to attribute memory space:
0x520D048C C   FIELD 24w08 ATTHIZ: Attribute memory data bus Hi-Z time These bits define the number of KCK_FMC clock cycles during which the data bus is kept in Hi-Z after the start of a NAND Flash write access to attribute memory space on socket. Only valid for writ transaction:
0x520D0494 B  REGISTER ECCR (ro): This register contain the current error correction code value computed by the ECC computation modules of the FMC NAND controller. When the CPU reads/writes the data from a NAND Flash memory page at the correct address (refer to Section20.8.6: Computation of the error correction code (ECC) in NAND Flash memory), the data read/written from/to the NAND Flash memory are processed automatically by the ECC computation module. When X bytes have been read (according to the ECCPS field in the FMC_PCR registers), the CPU must read the computed ECC value from the FMC_ECC registers. It then verifies if these computed parity data are the same as the parity value recorded in the spare area, to determine whether a page is valid, and, to correct it otherwise. The FMC_ECCR register should be cleared after being read by setting the ECCEN bit to 0. To compute a new data block, the ECCEN bit must be set to 1.
0x520D0494 C   FIELD 00w32 ECC: ECC result This field contains the value computed by the ECC computation logic. Table167 describes the contents of these bit fields.
0x520D0504 B  REGISTER BWTR1 (rw): SRAM/NOR-Flash write timing registers 1
0x520D0504 C   FIELD 00w04 ADDSET: Address setup phase duration
0x520D0504 C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x520D0504 C   FIELD 08w08 DATAST: Data-phase duration
0x520D0504 C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x520D0504 C   FIELD 28w02 ACCMOD: Access mode
0x520D0504 C   FIELD 30w02 DATAHLD: Data hold phase duration
0x520D050C B  REGISTER BWTR2 (rw): SRAM/NOR-Flash write timing registers 2
0x520D050C C   FIELD 00w04 ADDSET: Address setup phase duration
0x520D050C C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x520D050C C   FIELD 08w08 DATAST: Data-phase duration
0x520D050C C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x520D050C C   FIELD 28w02 ACCMOD: Access mode
0x520D050C C   FIELD 30w02 DATAHLD: Data hold phase duration
0x520D0514 B  REGISTER BWTR3 (rw): SRAM/NOR-Flash write timing registers 3
0x520D0514 C   FIELD 00w04 ADDSET: Address setup phase duration
0x520D0514 C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x520D0514 C   FIELD 08w08 DATAST: Data-phase duration
0x520D0514 C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x520D0514 C   FIELD 28w02 ACCMOD: Access mode
0x520D0514 C   FIELD 30w02 DATAHLD: Data hold phase duration
0x520D051C B  REGISTER BWTR4 (rw): SRAM/NOR-Flash write timing registers 4
0x520D051C C   FIELD 00w04 ADDSET: Address setup phase duration
0x520D051C C   FIELD 04w04 ADDHLD: Address-hold phase duration
0x520D051C C   FIELD 08w08 DATAST: Data-phase duration
0x520D051C C   FIELD 16w04 BUSTURN: Bus turnaround phase duration
0x520D051C C   FIELD 28w02 ACCMOD: Access mode
0x520D051C C   FIELD 30w02 DATAHLD: Data hold phase duration
0x520D1400 A PERIPHERAL SEC_OCTOSPI1
0x520D1400 B  REGISTER CR (rw): control register
0x520D1400 C   FIELD 00w01 EN: Enable
0x520D1400 C   FIELD 01w01 ABORT: Abort request
0x520D1400 C   FIELD 02w01 DMAEN: DMA enable
0x520D1400 C   FIELD 03w01 TCEN: Timeout counter enable
0x520D1400 C   FIELD 06w01 DQM: Dual-quad mode
0x520D1400 C   FIELD 07w01 FSEL: FLASH memory selection
0x520D1400 C   FIELD 08w05 FTHRES: IFO threshold level
0x520D1400 C   FIELD 16w01 TEIE: Transfer error interrupt enable
0x520D1400 C   FIELD 17w01 TCIE: Transfer complete interrupt enable
0x520D1400 C   FIELD 18w01 FTIE: FIFO threshold interrupt enable
0x520D1400 C   FIELD 19w01 SMIE: Status match interrupt enable
0x520D1400 C   FIELD 20w01 TOIE: TimeOut interrupt enable
0x520D1400 C   FIELD 22w01 APMS: Automatic poll mode stop
0x520D1400 C   FIELD 23w01 PMM: Polling match mode
0x520D1400 C   FIELD 28w02 FMODE: Functional mode
0x520D1408 B  REGISTER DCR1 (rw): device configuration register 1
0x520D1408 C   FIELD 00w01 CKMODE: Mode 0 / mode 3
0x520D1408 C   FIELD 01w01 FRCK: Free running clock
0x520D1408 C   FIELD 03w01 DLYBYP: Delay block bypass
0x520D1408 C   FIELD 08w06 CSHT: Chip-select high time
0x520D1408 C   FIELD 16w05 DEVSIZE: Device size
0x520D1408 C   FIELD 24w03 MTYP: Memory type
0x520D140C B  REGISTER DCR2 (rw): device configuration register 2
0x520D140C C   FIELD 00w08 PRESCALER: Clock prescaler
0x520D140C C   FIELD 16w03 WRAPSIZE: Wrap size
0x520D1410 B  REGISTER DCR3 (rw): device configuration register 3
0x520D1410 C   FIELD 00w08 MAXTRAN: Maximum transfer
0x520D1410 C   FIELD 16w05 CSBOUND: CS boundary
0x520D1414 B  REGISTER DCR4 (rw): DCR4
0x520D1414 C   FIELD 00w32 REFRESH: Refresh rate
0x520D1420 B  REGISTER SR (ro): status register
0x520D1420 C   FIELD 00w01 TEF: Transfer error flag
0x520D1420 C   FIELD 01w01 TCF: transfer complete flag
0x520D1420 C   FIELD 02w01 FTF: FIFO threshold flag
0x520D1420 C   FIELD 03w01 SMF: status match flag
0x520D1420 C   FIELD 04w01 TOF: timeout flag
0x520D1420 C   FIELD 05w01 BUSY: BUSY
0x520D1420 C   FIELD 08w06 FLEVEL: FIFO level
0x520D1424 B  REGISTER FCR (wo): flag clear register
0x520D1424 C   FIELD 00w01 CTEF: Clear Transfer error flag
0x520D1424 C   FIELD 01w01 CTCF: Clear transfer complete flag
0x520D1424 C   FIELD 03w01 CSMF: Clear status match flag
0x520D1424 C   FIELD 04w01 CTOF: Clear timeout flag
0x520D1440 B  REGISTER DLR (rw): data length register
0x520D1440 C   FIELD 00w32 DL: Data length
0x520D1448 B  REGISTER AR (rw): address register
0x520D1448 C   FIELD 00w32 ADDRESS: ADDRESS
0x520D1450 B  REGISTER DR (rw): data register
0x520D1450 C   FIELD 00w32 DATA: DATA
0x520D1480 B  REGISTER PSMKR (rw): polling status mask register
0x520D1480 C   FIELD 00w32 MASK: Status MASK
0x520D1488 B  REGISTER PSMAR (rw): polling status match register
0x520D1488 C   FIELD 00w32 MATCH: Status match
0x520D1490 B  REGISTER PIR (rw): polling interval register
0x520D1490 C   FIELD 00w16 INTERVAL: polling interval
0x520D1500 B  REGISTER CCR (rw): communication configuration register
0x520D1500 C   FIELD 00w03 IMODE: Instruction mode
0x520D1500 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x520D1500 C   FIELD 04w02 ISIZE: Instruction size
0x520D1500 C   FIELD 08w03 ADMODE: Address mode
0x520D1500 C   FIELD 11w01 ADDTR: Address double transfer rate
0x520D1500 C   FIELD 12w02 ADSIZE: Address size
0x520D1500 C   FIELD 16w03 ABMODE: Alternate byte mode
0x520D1500 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x520D1500 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x520D1500 C   FIELD 24w03 DMODE: Data mode
0x520D1500 C   FIELD 27w01 DDTR: Alternate bytes double transfer rate
0x520D1500 C   FIELD 29w01 DQSE: DQS enable
0x520D1500 C   FIELD 31w01 SIOO: Send instruction only once mode
0x520D1508 B  REGISTER TCR (rw): timing configuration register
0x520D1508 C   FIELD 00w05 DCYC: Number of dummy cycles
0x520D1508 C   FIELD 28w01 DHQC: Delay hold quarter cycle
0x520D1508 C   FIELD 30w01 SSHIFT: Sample shift
0x520D1510 B  REGISTER IR (rw): instruction register
0x520D1510 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x520D1520 B  REGISTER ABR (rw): alternate bytes register
0x520D1520 C   FIELD 00w32 ALTERNATE: Alternate bytes
0x520D1530 B  REGISTER LPTR (rw): low-power timeout register
0x520D1530 C   FIELD 00w16 TIMEOUT: Timeout period
0x520D1540 B  REGISTER WPCCR (rw): wrap communication configuration register
0x520D1540 C   FIELD 00w03 IMODE: Instruction mode
0x520D1540 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x520D1540 C   FIELD 04w02 ISIZE: Instruction size
0x520D1540 C   FIELD 08w03 ADMODE: Address mode
0x520D1540 C   FIELD 11w01 ADDTR: Address double transfer rate
0x520D1540 C   FIELD 12w02 ADSIZE: Address size
0x520D1540 C   FIELD 16w03 ABMODE: Alternate byte mode
0x520D1540 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x520D1540 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x520D1540 C   FIELD 24w03 DMODE: Data mode
0x520D1540 C   FIELD 27w01 DDTR: alternate bytes double transfer rate
0x520D1540 C   FIELD 29w01 DQSE: DQS enable
0x520D1548 B  REGISTER WPTCR (rw): wrap timing configuration register
0x520D1548 C   FIELD 00w05 DCYC: Number of dummy cycles
0x520D1548 C   FIELD 28w01 DHQC: Delay hold quarter cycle
0x520D1548 C   FIELD 30w01 SSHIFT: Sample shift
0x520D1550 B  REGISTER WPIR (rw): wrap instruction register
0x520D1550 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x520D1560 B  REGISTER WPABR (rw): wrap alternate bytes register
0x520D1560 C   FIELD 00w32 ALTERNATE: Alternate bytes
0x520D1580 B  REGISTER WCCR (rw): write communication configuration register
0x520D1580 C   FIELD 00w03 IMODE: Instruction mode
0x520D1580 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x520D1580 C   FIELD 04w02 ISIZE: Instruction size
0x520D1580 C   FIELD 08w03 ADMODE: Address mode
0x520D1580 C   FIELD 11w01 ADDTR: Address double transfer rate
0x520D1580 C   FIELD 12w02 ADSIZE: Address size
0x520D1580 C   FIELD 16w03 ABMODE: Alternate byte mode
0x520D1580 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x520D1580 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x520D1580 C   FIELD 24w03 DMODE: Data mode
0x520D1580 C   FIELD 27w01 DDTR: alternate bytes double transfer rate
0x520D1580 C   FIELD 29w01 DQSE: DQS enable
0x520D1588 B  REGISTER WTCR (rw): write timing configuration register
0x520D1588 C   FIELD 00w05 DCYC: Number of dummy cycles
0x520D1590 B  REGISTER WIR (rw): write instruction register
0x520D1590 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x520D15A0 B  REGISTER WABR (rw): write alternate bytes register
0x520D15A0 C   FIELD 00w32 ALTERNATE: ALTERNATE
0x520D1600 B  REGISTER HLCR (rw): HyperBus latency configuration register
0x520D1600 C   FIELD 00w01 LM: Latency mode
0x520D1600 C   FIELD 01w01 WZL: Write zero latency
0x520D1600 C   FIELD 08w08 TACC: Access time
0x520D1600 C   FIELD 16w08 TRWR: Read write recovery time
0x520D2400 A PERIPHERAL SEC_OCTOSPI2
0x520D2400 B  REGISTER CR (rw): control register
0x520D2400 C   FIELD 00w01 EN: Enable
0x520D2400 C   FIELD 01w01 ABORT: Abort request
0x520D2400 C   FIELD 02w01 DMAEN: DMA enable
0x520D2400 C   FIELD 03w01 TCEN: Timeout counter enable
0x520D2400 C   FIELD 06w01 DQM: Dual-quad mode
0x520D2400 C   FIELD 07w01 FSEL: FLASH memory selection
0x520D2400 C   FIELD 08w05 FTHRES: IFO threshold level
0x520D2400 C   FIELD 16w01 TEIE: Transfer error interrupt enable
0x520D2400 C   FIELD 17w01 TCIE: Transfer complete interrupt enable
0x520D2400 C   FIELD 18w01 FTIE: FIFO threshold interrupt enable
0x520D2400 C   FIELD 19w01 SMIE: Status match interrupt enable
0x520D2400 C   FIELD 20w01 TOIE: TimeOut interrupt enable
0x520D2400 C   FIELD 22w01 APMS: Automatic poll mode stop
0x520D2400 C   FIELD 23w01 PMM: Polling match mode
0x520D2400 C   FIELD 28w02 FMODE: Functional mode
0x520D2408 B  REGISTER DCR1 (rw): device configuration register 1
0x520D2408 C   FIELD 00w01 CKMODE: Mode 0 / mode 3
0x520D2408 C   FIELD 01w01 FRCK: Free running clock
0x520D2408 C   FIELD 03w01 DLYBYP: Delay block bypass
0x520D2408 C   FIELD 08w06 CSHT: Chip-select high time
0x520D2408 C   FIELD 16w05 DEVSIZE: Device size
0x520D2408 C   FIELD 24w03 MTYP: Memory type
0x520D240C B  REGISTER DCR2 (rw): device configuration register 2
0x520D240C C   FIELD 00w08 PRESCALER: Clock prescaler
0x520D240C C   FIELD 16w03 WRAPSIZE: Wrap size
0x520D2410 B  REGISTER DCR3 (rw): device configuration register 3
0x520D2410 C   FIELD 00w08 MAXTRAN: Maximum transfer
0x520D2410 C   FIELD 16w05 CSBOUND: CS boundary
0x520D2414 B  REGISTER DCR4 (rw): DCR4
0x520D2414 C   FIELD 00w32 REFRESH: Refresh rate
0x520D2420 B  REGISTER SR (ro): status register
0x520D2420 C   FIELD 00w01 TEF: Transfer error flag
0x520D2420 C   FIELD 01w01 TCF: transfer complete flag
0x520D2420 C   FIELD 02w01 FTF: FIFO threshold flag
0x520D2420 C   FIELD 03w01 SMF: status match flag
0x520D2420 C   FIELD 04w01 TOF: timeout flag
0x520D2420 C   FIELD 05w01 BUSY: BUSY
0x520D2420 C   FIELD 08w06 FLEVEL: FIFO level
0x520D2424 B  REGISTER FCR (wo): flag clear register
0x520D2424 C   FIELD 00w01 CTEF: Clear Transfer error flag
0x520D2424 C   FIELD 01w01 CTCF: Clear transfer complete flag
0x520D2424 C   FIELD 03w01 CSMF: Clear status match flag
0x520D2424 C   FIELD 04w01 CTOF: Clear timeout flag
0x520D2440 B  REGISTER DLR (rw): data length register
0x520D2440 C   FIELD 00w32 DL: Data length
0x520D2448 B  REGISTER AR (rw): address register
0x520D2448 C   FIELD 00w32 ADDRESS: ADDRESS
0x520D2450 B  REGISTER DR (rw): data register
0x520D2450 C   FIELD 00w32 DATA: DATA
0x520D2480 B  REGISTER PSMKR (rw): polling status mask register
0x520D2480 C   FIELD 00w32 MASK: Status MASK
0x520D2488 B  REGISTER PSMAR (rw): polling status match register
0x520D2488 C   FIELD 00w32 MATCH: Status match
0x520D2490 B  REGISTER PIR (rw): polling interval register
0x520D2490 C   FIELD 00w16 INTERVAL: polling interval
0x520D2500 B  REGISTER CCR (rw): communication configuration register
0x520D2500 C   FIELD 00w03 IMODE: Instruction mode
0x520D2500 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x520D2500 C   FIELD 04w02 ISIZE: Instruction size
0x520D2500 C   FIELD 08w03 ADMODE: Address mode
0x520D2500 C   FIELD 11w01 ADDTR: Address double transfer rate
0x520D2500 C   FIELD 12w02 ADSIZE: Address size
0x520D2500 C   FIELD 16w03 ABMODE: Alternate byte mode
0x520D2500 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x520D2500 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x520D2500 C   FIELD 24w03 DMODE: Data mode
0x520D2500 C   FIELD 27w01 DDTR: Alternate bytes double transfer rate
0x520D2500 C   FIELD 29w01 DQSE: DQS enable
0x520D2500 C   FIELD 31w01 SIOO: Send instruction only once mode
0x520D2508 B  REGISTER TCR (rw): timing configuration register
0x520D2508 C   FIELD 00w05 DCYC: Number of dummy cycles
0x520D2508 C   FIELD 28w01 DHQC: Delay hold quarter cycle
0x520D2508 C   FIELD 30w01 SSHIFT: Sample shift
0x520D2510 B  REGISTER IR (rw): instruction register
0x520D2510 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x520D2520 B  REGISTER ABR (rw): alternate bytes register
0x520D2520 C   FIELD 00w32 ALTERNATE: Alternate bytes
0x520D2530 B  REGISTER LPTR (rw): low-power timeout register
0x520D2530 C   FIELD 00w16 TIMEOUT: Timeout period
0x520D2540 B  REGISTER WPCCR (rw): wrap communication configuration register
0x520D2540 C   FIELD 00w03 IMODE: Instruction mode
0x520D2540 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x520D2540 C   FIELD 04w02 ISIZE: Instruction size
0x520D2540 C   FIELD 08w03 ADMODE: Address mode
0x520D2540 C   FIELD 11w01 ADDTR: Address double transfer rate
0x520D2540 C   FIELD 12w02 ADSIZE: Address size
0x520D2540 C   FIELD 16w03 ABMODE: Alternate byte mode
0x520D2540 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x520D2540 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x520D2540 C   FIELD 24w03 DMODE: Data mode
0x520D2540 C   FIELD 27w01 DDTR: alternate bytes double transfer rate
0x520D2540 C   FIELD 29w01 DQSE: DQS enable
0x520D2548 B  REGISTER WPTCR (rw): wrap timing configuration register
0x520D2548 C   FIELD 00w05 DCYC: Number of dummy cycles
0x520D2548 C   FIELD 28w01 DHQC: Delay hold quarter cycle
0x520D2548 C   FIELD 30w01 SSHIFT: Sample shift
0x520D2550 B  REGISTER WPIR (rw): wrap instruction register
0x520D2550 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x520D2560 B  REGISTER WPABR (rw): wrap alternate bytes register
0x520D2560 C   FIELD 00w32 ALTERNATE: Alternate bytes
0x520D2580 B  REGISTER WCCR (rw): write communication configuration register
0x520D2580 C   FIELD 00w03 IMODE: Instruction mode
0x520D2580 C   FIELD 03w01 IDTR: Instruction double transfer rate
0x520D2580 C   FIELD 04w02 ISIZE: Instruction size
0x520D2580 C   FIELD 08w03 ADMODE: Address mode
0x520D2580 C   FIELD 11w01 ADDTR: Address double transfer rate
0x520D2580 C   FIELD 12w02 ADSIZE: Address size
0x520D2580 C   FIELD 16w03 ABMODE: Alternate byte mode
0x520D2580 C   FIELD 19w01 ABDTR: Alternate bytes double transfer rate
0x520D2580 C   FIELD 20w02 ABSIZE: Alternate bytes size
0x520D2580 C   FIELD 24w03 DMODE: Data mode
0x520D2580 C   FIELD 27w01 DDTR: alternate bytes double transfer rate
0x520D2580 C   FIELD 29w01 DQSE: DQS enable
0x520D2588 B  REGISTER WTCR (rw): write timing configuration register
0x520D2588 C   FIELD 00w05 DCYC: Number of dummy cycles
0x520D2590 B  REGISTER WIR (rw): write instruction register
0x520D2590 C   FIELD 00w32 INSTRUCTION: INSTRUCTION
0x520D25A0 B  REGISTER WABR (rw): write alternate bytes register
0x520D25A0 C   FIELD 00w32 ALTERNATE: ALTERNATE
0x520D2600 B  REGISTER HLCR (rw): HyperBus latency configuration register
0x520D2600 C   FIELD 00w01 LM: Latency mode
0x520D2600 C   FIELD 01w01 WZL: Write zero latency
0x520D2600 C   FIELD 08w08 TACC: Access time
0x520D2600 C   FIELD 16w08 TRWR: Read write recovery time
0x56000400 A PERIPHERAL SEC_SYSCFG
0x56000400 B  REGISTER SECCFGR (rw): SYSCFG secure configuration register
0x56000400 C   FIELD 00w01 SYSCFGSEC: SYSCFG clock control security
0x56000400 C   FIELD 01w01 CLASSBSEC: CLASSBSEC
0x56000400 C   FIELD 03w01 FPUSEC: FPUSEC
0x56000404 B  REGISTER CFGR1 (rw): configuration register 1
0x56000404 C   FIELD 08w01 BOOSTEN: I/O analog switch voltage booster enable
0x56000404 C   FIELD 09w01 ANASWVDD: GPIO analog switch control voltage selection
0x56000404 C   FIELD 16w01 PB6_FMP: PB6_FMP
0x56000404 C   FIELD 17w01 PB7_FMP: PB7_FMP
0x56000404 C   FIELD 18w01 PB8_FMP: PB8_FMP
0x56000404 C   FIELD 19w01 PB9_FMP: PB9_FMP
0x56000408 B  REGISTER FPUIMR (rw): FPU interrupt mask register
0x56000408 C   FIELD 00w06 FPU_IE: Floating point unit interrupts enable bits
0x5600040C B  REGISTER CNSLCKR (rw): SYSCFG CPU non-secure lock register
0x5600040C C   FIELD 00w01 LOCKNSVTOR: VTOR_NS register lock
0x5600040C C   FIELD 01w01 LOCKNSMPU: Non-secure MPU registers lock
0x56000410 B  REGISTER CSLOCKR (rw): SYSCFG CPU secure lock register
0x56000410 C   FIELD 00w01 LOCKSVTAIRCR: LOCKSVTAIRCR
0x56000410 C   FIELD 01w01 LOCKSMPU: LOCKSMPU
0x56000410 C   FIELD 02w01 LOCKSAU: LOCKSAU
0x56000414 B  REGISTER CFGR2 (rw): configuration register 2
0x56000414 C   FIELD 00w01 CLL: LOCKUP (hardfault) output enable bit
0x56000414 C   FIELD 01w01 SPL: SRAM ECC lock bit
0x56000414 C   FIELD 02w01 PVDL: PVD lock enable bit
0x56000414 C   FIELD 03w01 ECCL: ECC Lock
0x56000418 B  REGISTER MESR (rw): memory erase status register
0x56000418 C   FIELD 00w01 MCLR: MCLR
0x56000418 C   FIELD 16w01 IPMEE: IPMEE
0x5600041C B  REGISTER CCCSR: compensation cell control/status register
0x5600041C C   FIELD 00w01 EN1 (rw): EN1
0x5600041C C   FIELD 01w01 CS1 (rw): CS1
0x5600041C C   FIELD 02w01 EN2 (rw): EN2
0x5600041C C   FIELD 03w01 CS2 (rw): CS2
0x5600041C C   FIELD 08w01 RDY1 (ro): RDY1
0x5600041C C   FIELD 09w01 RDY2 (ro): RDY2
0x56000420 B  REGISTER CCVR (ro): compensation cell value register
0x56000420 C   FIELD 00w04 NCV1: NCV1
0x56000420 C   FIELD 04w04 PCV1: PCV1
0x56000420 C   FIELD 08w04 NCV2: NCV2
0x56000420 C   FIELD 12w04 PCV2: PCV2
0x56000424 B  REGISTER CCCR (rw): compensation cell code register
0x56000424 C   FIELD 00w04 NCC1: NCC1
0x56000424 C   FIELD 04w04 PCC1: PCC1
0x56000424 C   FIELD 08w04 NCC2: NCC2
0x56000424 C   FIELD 12w04 PCC2: PCC2
0x5600042C B  REGISTER RSSCMDR (rw): RSS command register
0x5600042C C   FIELD 00w16 RSSCMD: RSS commands
0x56000470 B  REGISTER UCPDR (rw): USB Type C and Power Delivery register
0x56000470 C   FIELD 00w01 CC1ENRXFILTER: CC1ENRXFILTER
0x56000470 C   FIELD 01w01 CC2ENRXFILTER: CC2ENRXFILTER
0x56002000 A PERIPHERAL SEC_SPI3
0x56002000 B  REGISTER SPI_CR1: 
0x56002000 C   FIELD 00w01 SPE (rw): serial peripheral enable This bit is set by and cleared by software. When SPE=1, SPI data transfer is enabled, SPI_CFG1 and SPI_CFG2 configuration registers, CRCPOLY, UDRDR, part of SPI_AUTOCR register and IOLOCK bit in the SPI_CR1 register are write protected. They can be changed only when SPE=0. When SPE=0 any SPI operation is stopped and disabled, all the pending requests of the events with enabled interrupt are blocked except the MODF interrupt request (but their pending still propagates the request of the spi_plck clock), the SS output is deactivated at master, the RDY signal keeps not ready status at slave, the internal state machine is reseted, all the FIFOs content is flushed, CRC calculation initialized, receive data register is read zero. SPE is cleared and cannot be set when MODF error flag is active.
0x56002000 C   FIELD 08w01 MASRX (rw): master automatic suspension in Receive mode This bit is set and cleared by software to control continuous SPI transfer in master receiver mode and automatic management in order to avoid overrun condition. When SPI communication is suspended by hardware automatically, it could happen that few bits of next frame are already clocked out due to internal synchronization delay. This is why, the automatic suspension is not quite reliable when size of data drops below 8 bits. In this case, a safe suspension can be achieved by combination with delay inserted between data frames applied when MIDI parameter keeps a non zero value; sum of data size and the interleaved SPI cycles should always produce interval at length of 8 SPI clock periods at minimum. After software clearing of the SUSP bit, the communication resumes and continues by subsequent bits transaction without any next constraint. Prior the SUSP bit is cleared, the user must release the RxFIFO space as much as possible by reading out all the data packets available at RxFIFO based on the RXP flag indication to prevent any subsequent suspension.
0x56002000 C   FIELD 09w01 CSTART (rw): master transfer start This bit can be set by software if SPI is enabled only to start an SPI communication. it is cleared by hardware when end of transfer (EOT) flag is set or when a transaction suspend request is accepted. In SPI mode, the bit is taken into account at master mode only. If transmission is enabled, communication starts or continues only if any data is available in the transmission FIFO.
0x56002000 C   FIELD 10w01 CSUSP (wo): master SUSPend request This bit reads as zero. In Master mode, when this bit is set by software, the CSTART bit is reset at the end of the current frame and SPI communication is suspended. The user has to check SUSP flag to check end of the frame transaction. The Master mode communication must be suspended (using this bit or keeping TXDR empty) before disabling the SPI or going to Low-power mode. After software suspension, SUSP flag has to be cleared and SPI disabled and re-enabled before the next transaction starts.
0x56002000 C   FIELD 11w01 HDDIR (rw): Rx/Tx direction at Half-duplex mode In Half-Duplex configuration the HDDIR bit establishes the Rx/Tx direction of the data transfer. This bit is ignored in Full-Duplex or any Simplex configuration.
0x56002000 C   FIELD 12w01 SSI (rw): internal SS signal input level This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the peripheral SS input internally and the I/O value of the SS pin is ignored.
0x56002000 C   FIELD 13w01 CRC33_17 (rw): 32-bit CRC polynomial configuration
0x56002000 C   FIELD 14w01 RCRCINI (rw): CRC calculation initialization pattern control for receiver
0x56002000 C   FIELD 15w01 TCRCINI (rw): CRC calculation initialization pattern control for transmitter
0x56002000 C   FIELD 16w01 IOLOCK (rw): locking the AF configuration of associated IOs This bit is set by software and cleared by hardware whenever the SPE bit is changed from 1 to 0. When this bit is set, SPI_CFG2 register content cannot be modified. This bit can be set when SPI is disabled only else it is write protected. It is cleared and cannot be set when MODF bit is set.
0x56002004 B  REGISTER SPI_CR2: 
0x56002004 C   FIELD 00w16 TSIZE (rw): number of data at current transfer When these bits are changed by software, the SPI has to be disabled. Endless transaction is initialized when CSTART is set while zero value is stored at TSIZE. TSIZE cannot be set to 0xFFFF respective 0x3FFF value when CRC is enabled. Note: TSIZE[15:10] bits are reserved at limited feature set instances and must be kept at reset value.
0x56002008 B  REGISTER SPI_CFG1: SPI configuration register 1
0x56002008 C   FIELD 00w05 DSIZE (rw): number of bits in at single SPI data frame ..... Note: Maximum data size can be limited up to 16-bits at some instances. At instances with limited set of features, DSIZE2:0] bits are reserved and must be kept at reset state. DSIZE[4:3] bits then control next settings of data size: 00xxx: 8-bits 01xxx: 16-bits 10xxx: 24-bits 11xxx: 32-bits.
0x56002008 C   FIELD 05w04 FTHLV (rw): FIFO threshold level Defines number of data frames at single data packet. Size of the packet should not exceed 1/2 of FIFO space. SPI interface is more efficient if configured packet sizes are aligned with data register access parallelism: If SPI data register is accessed as a 16-bit register and DSIZE ¤ 8 bit, better to select FTHLV = 2, 4, 6. If SPI data register is accessed as a 32-bit register and DSIZE> 8 bit, better to select FTHLV = 2, 4, 6, while if DSIZE ¤ 8bit, better to select FTHLV = 4, 8, 12. Note: FTHLV[3:2] bits are reserved at instances with limited set of features
0x56002008 C   FIELD 09w01 UDRCFG (rw): behavior of slave transmitter at underrun condition For more details see underrun condition.
0x56002008 C   FIELD 14w01 RXDMAEN (rw): Rx DMA stream enable
0x56002008 C   FIELD 15w01 TXDMAEN (rw): Tx DMA stream enable
0x56002008 C   FIELD 16w05 CRCSIZE (rw): length of CRC frame to be transacted and compared Most significant bits are taken into account from polynomial calculation when CRC result is transacted or compared. The length of the polynomial is not affected by this setting. ..... The value must be set equal or multiply of data size (DSIZE[4:0]). Its maximum size corresponds to DSIZE maximum at the instance. Note: The most significant bit at CRCSIZE bit field is reserved at the peripheral instances where data size is limited to 16-bit.
0x56002008 C   FIELD 22w01 CRCEN (rw): hardware CRC computation enable
0x56002008 C   FIELD 28w03 MBR (rw): master baud rate prescaler setting Note: MBR setting is considered at slave working at TI mode, too (see mode).
0x56002008 C   FIELD 31w01 BPASS (rw): bypass of the prescaler at master baud rate clock generator
0x5600200C B  REGISTER SPI_CFG2: SPI configuration register 2
0x5600200C C   FIELD 00w04 MSSI (rw): Master SS Idleness Specifies an extra delay, expressed in number of SPI clock cycle periods, inserted additionally between active edge of SS opening a session and the beginning of the first data frame of the session in Master mode when SSOE is enabled. ... Note: This feature is not supported in TI mode. To include the delay, the SPI must be disabled and re-enabled between sessions.
0x5600200C C   FIELD 04w04 MIDI (rw): master Inter-Data Idleness Specifies minimum time delay (expressed in SPI clock cycles periods) inserted between two consecutive data frames in Master mode. ... Note: This feature is not supported in TI mode.
0x5600200C C   FIELD 13w01 RDIOM (rw): RDY signal input/output management Note: When DSIZE at the SPI_CFG1 register is configured shorter than 8-bit, the RDIOM bit has to be kept at zero.
0x5600200C C   FIELD 14w01 RDIOP (rw): RDY signal input/output polarity
0x5600200C C   FIELD 15w01 IOSWP (rw): swap functionality of MISO and MOSI pins When this bit is set, the function of MISO and MOSI pins alternate functions are inverted. Original MISO pin becomes MOSI and original MOSI pin becomes MISO.
0x5600200C C   FIELD 17w02 COMM (rw): SPI Communication Mode
0x5600200C C   FIELD 19w03 SP (rw): serial protocol others: reserved, must not be used
0x5600200C C   FIELD 22w01 MASTER (rw): SPI Master
0x5600200C C   FIELD 23w01 LSBFRST (rw): data frame format
0x5600200C C   FIELD 24w01 CPHA (rw): clock phase
0x5600200C C   FIELD 25w01 CPOL (rw): clock polarity
0x5600200C C   FIELD 26w01 SSM (rw): software management of SS signal input When master uses hardware SS output (SSM=0 and SSOE=1) the SS signal input is forced to not active state internally to prevent master mode fault error.
0x5600200C C   FIELD 28w01 SSIOP (rw): SS input/output polarity
0x5600200C C   FIELD 29w01 SSOE (rw): SS output enable This bit is taken into account in Master mode only
0x5600200C C   FIELD 30w01 SSOM (rw): SS output management in Master mode This bit is taken into account in Master mode when SSOE is enabled. It allows the SS output to be configured between two consecutive data transfers.
0x5600200C C   FIELD 31w01 AFCNTR (rw): alternate function GPIOs control This bit is taken into account when SPE=0 only When SPI has to be disabled temporary for a specific configuration reason (e.g. CRC reset, CPHA or HDDIR change) setting this bit prevents any glitches on the associated outputs configured at alternate function mode by keeping them forced at state corresponding the current SPI configuration.
0x56002010 B  REGISTER SPI_IER: 
0x56002010 C   FIELD 00w01 RXPIE (rw): RXP interrupt enable
0x56002010 C   FIELD 01w01 TXPIE (rw): TXP interrupt enable TXPIE is set by software and cleared by TXTF flag set event.
0x56002010 C   FIELD 02w01 DXPIE (rw): DXP interrupt enabled DXPIE is set by software and cleared by TXTF flag set event.
0x56002010 C   FIELD 03w01 EOTIE (rw): EOT, SUSP and TXC interrupt enable
0x56002010 C   FIELD 04w01 TXTFIE (rw): TXTFIE interrupt enable
0x56002010 C   FIELD 05w01 UDRIE (rw): UDR interrupt enable
0x56002010 C   FIELD 06w01 OVRIE (rw): OVR interrupt enable
0x56002010 C   FIELD 07w01 CRCEIE (rw): CRC error interrupt enable
0x56002010 C   FIELD 08w01 TIFREIE (rw): TIFRE interrupt enable
0x56002010 C   FIELD 09w01 MODFIE (rw): mode Fault interrupt enable
0x56002014 B  REGISTER SPI_SR: 
0x56002014 C   FIELD 00w01 RXP (ro): Rx-Packet available RXP flag is changed by hardware. It monitors number of overall data currently available at RxFIFO if SPI is enabled. It has to be checked once a data packet is completely read out from RxFIFO.
0x56002014 C   FIELD 01w01 TXP (ro): Tx-Packet space available TXP flag is changed by hardware. It monitors overall space currently available at TxFIFO no matter if SPI is enabled or not. It has to be checked once a complete data packet is stored at TxFIFO.
0x56002014 C   FIELD 02w01 DXP (ro): duplex packet DXP flag is set whenever both TXP and RXP flags are set regardless SPI mode.
0x56002014 C   FIELD 03w01 EOT (ro): end of transfer EOT is set by hardware as soon as a full transfer is complete, that is when TSIZE number of data have been transmitted and/or received on the SPI. EOT is cleared by software write 1 to EOTC bit at SPI_IFCR. EOT flag triggers an interrupt if EOTIE bit is set. If DXP flag is used until TXTF flag is set and DXPIE is cleared, EOT can be used to download the last packets contained into RxFIFO in one-shot. In master, EOT event terminates the data transaction and handles SS output optionally. When CRC is applied, the EOT event is extended over the CRC frame transaction. To restart the internal state machine properly, SPI is strongly suggested to be disabled and re-enabled before next transaction starts despite its setting is not changed.
0x56002014 C   FIELD 04w01 TXTF (ro): transmission transfer filled TXTF is set by hardware as soon as all of the data packets in a transfer have been submitted for transmission by application software or DMA, that is when TSIZE number of data have been pushed into the TxFIFO. This bit is cleared by software write 1 to TXTFC bit at SPI_IFCR TXTF flag triggers an interrupt if TXTFIE bit is set. TXTF setting clears the TXPIE and DXPIE masks so to off-load application software from calculating when to disable TXP and DXP interrupts.
0x56002014 C   FIELD 05w01 UDR (ro): underrun at slave transmission mode This bit is cleared by writing 1 to UDRC bit at SPI_IFCR Note: UDR flag applies to Slave mode only
0x56002014 C   FIELD 06w01 OVR (ro): overrun This bit is cleared by writing 1 to OVRC bit at SPI_IFCR
0x56002014 C   FIELD 07w01 CRCE (ro): CRC error This bit is cleared by writing 1 to CRCEC bit at SPI_IFCR
0x56002014 C   FIELD 08w01 TIFRE (ro): TI frame format error This bit is cleared by writing 1 to TIFREC bit at SPI_IFCR
0x56002014 C   FIELD 09w01 MODF (ro): mode fault This bit is cleared by writing 1 to MODFC bit at SPI_IFCR
0x56002014 C   FIELD 11w01 SUSP (ro): suspension status In Master mode, SUSP is set by hardware either as soon as the current frame is completed after CSUSP request is done or at master automatic suspend receive mode (MASRX bit is set at SPI_CR1 register) on RxFIFO full condition. SUSP generates an interrupt when EOTIE is set. This bit has to be cleared prior SPI is disabled by writing 1 to SUSPC bit at SPI_IFCR.
0x56002014 C   FIELD 12w01 TXC (ro): TxFIFO transmission complete The flag behavior depends on TSIZE setting. When TSIZE=0 the TXC is changed by hardware exclusively and it raises each time the TxFIFO becomes empty and there is no activity on the bus. If TSIZE <>0 there is no specific reason to monitor TXC as it just copies the EOT flag value including its software clearing. The TXC generates an interrupt when EOTIE is set.
0x56002014 C   FIELD 13w02 RXPLVL (ro): RxFIFO packing level When RXWNE=0 and data size is set up to 16-bit, the value gives number of remaining data frames persisting at RxFIFO. Note: (*): Optional value when data size is set up to 8-bit only. When data size is greater than 16-bit, these bits are always read as 00. In that consequence, the single data frame received at the FIFO cannot be detected neither by RWNE nor by RXPLVL bits if data size is set from 17 to 24 bits. The user then must apply other methods like TSIZE>0 or FTHLV=0.
0x56002014 C   FIELD 15w01 RXWNE (ro): RxFIFO word not empty Note: This bit value does not depend on DSIZE setting and keeps together with RXPLVL[1:0] information about RxFIFO occupancy by residual data.
0x56002014 C   FIELD 16w16 CTSIZE (ro): number of data frames remaining in current TSIZE session The value is not quite reliable when traffic is ongoing on bus or during autonomous operation at low-power mode. Note: CTSIZE[15:0] bits are not available at instances with limited set of features
0x56002018 B  REGISTER SPI_IFCR: 
0x56002018 C   FIELD 03w01 EOTC (wo): end of transfer flag clear Writing a 1 into this bit clears EOT flag in the SPI_SR register
0x56002018 C   FIELD 04w01 TXTFC (wo): transmission transfer filled flag clear Writing a 1 into this bit clears TXTF flag in the SPI_SR register
0x56002018 C   FIELD 05w01 UDRC (wo): underrun flag clear Writing a 1 into this bit clears UDR flag in the SPI_SR register
0x56002018 C   FIELD 06w01 OVRC (wo): overrun flag clear Writing a 1 into this bit clears OVR flag in the SPI_SR register
0x56002018 C   FIELD 07w01 CRCEC (wo): CRC error flag clear Writing a 1 into this bit clears CRCE flag in the SPI_SR register
0x56002018 C   FIELD 08w01 TIFREC (wo): TI frame format error flag clear Writing a 1 into this bit clears TIFRE flag in the SPI_SR register
0x56002018 C   FIELD 09w01 MODFC (wo): mode fault flag clear Writing a 1 into this bit clears MODF flag in the SPI_SR register
0x56002018 C   FIELD 11w01 SUSPC (wo): SUSPend flag clear Writing a 1 into this bit clears SUSP flag in the SPI_SR register
0x5600201C B  REGISTER SPI_AUTOCR: 
0x5600201C C   FIELD 16w04 TRIGSEL (rw): trigger selection (refer ). ... Note: these bits can be written only when SPE = 0.
0x5600201C C   FIELD 20w01 TRIGPOL (rw): trigger polarity Note: This bit can be written only when SPE = 0.
0x5600201C C   FIELD 21w01 TRIGEN (rw): trigger of CSTART control enable Note: if user can't prevent trigger event during write, the TRIGEN has to be changed when SPI is disabled
0x56002020 B  REGISTER SPI_TXDR: 
0x56002020 C   FIELD 00w32 TXDR (wo): transmit data register The register serves as an interface with TxFIFO. A write to it accesses TxFIFO. Note: data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is written by single access. halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be written by single access. word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be written by single access. Write access of this register less than the configured data size is forbidden.
0x56002030 B  REGISTER SPI_RXDR: 
0x56002030 C   FIELD 00w32 RXDR (ro): receive data register The register serves as an interface with RxFIFO. When it is read, RxFIFO is accessed. Note: data is always right-aligned. Unused bits are read as zero when the register is read. Writing to the register is ignored. Note: DR can be accessed byte-wise (8-bit access): in this case only one data-byte is read by single access halfword-wise (16 bit access) in this case 2 data-bytes or 1 halfword-data can be read by single access word-wise (32 bit access). In this case 4 data-bytes or 2 halfword-data or word-data can be read by single access. Read access of this register less than the configured data size is forbidden.
0x56002040 B  REGISTER SPI_CRCPOLY: SPI polynomial register
0x56002040 C   FIELD 00w32 CRCPOLY (rw): CRC polynomial register This register contains the polynomial for the CRC calculation. The default 9-bit polynomial setting 0x107 corresponds to default 8-bit setting of DSIZE. It is compatible with setting 0x07 used at some other ST products with fixed length of the polynomial string where the most significant bit of the string is always kept hidden. Length of the polynomial is given by the most significant bit of the value stored at this register. It has to be set greater than DSIZE. CRC33_17 bit has to be set additionally with CRCPOLY register when DSIZE is configured to maximum 32-bit or 16-bit size and CRC is enabled (to keep polynomial length grater than data size). Note: CRCPOLY[31:16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x56002044 B  REGISTER SPI_TXCRC: 
0x56002044 C   FIELD 00w32 TXCRC (ro): CRC register for transmitter When CRC calculation is enabled, the TXCRC[31:0] bits contain the computed CRC value of the subsequently transmitted bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. Note: TXCRC[31-16] bits are reserved at instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x56002048 B  REGISTER SPI_RXCRC: 
0x56002048 C   FIELD 00w32 RXCRC (ro): CRC register for receiver When CRC calculation is enabled, the RXCRC[31:0] bits contain the computed CRC value of the subsequently received bytes. CRC calculation is initialized when the CRCEN bit of SPI_CR1 is written to 1 or when a data block is transacted completely. The CRC is calculated serially using the polynomial programmed in the SPI_CRCPOLY register. The number of bits considered at calculation depends on SPI_CRCPOLY register and CRCSIZE bits settings at SPI_CFG1 register. Note: a read to this register when the communication is ongoing could return an incorrect value. RXCRC[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constrain when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored. Note: The configuration of CRCSIZE bit field is not taken into account when the content of this register is read by software. No masking is applied for unused bits at this case.
0x5600204C B  REGISTER SPI_UDRDR: SPI underrun data register
0x5600204C C   FIELD 00w32 UDRDR (rw): data at slave underrun condition The register is taken into account in Slave mode and at underrun condition only. The number of bits considered depends on DSIZE bit settings of the SPI_CFG1 register. Underrun condition handling depends on setting UDRCFG bit at SPI_CFG1 register. Note: UDRDR[31-16] bits are reserved at the peripheral instances with data size limited to 16-bit. There is no constraint when 32-bit access is applied at these addresses. Reserved bits 31-16 are always read zero while any write to them is ignored.
0x56002400 A PERIPHERAL SEC_LPUART1
0x56002400 B  REGISTER CR1 (rw): Control register 1
0x56002400 C   FIELD 00w01 UE: USART enable
0x56002400 C   FIELD 01w01 UESM: USART enable in Stop mode
0x56002400 C   FIELD 02w01 RE: Receiver enable
0x56002400 C   FIELD 03w01 TE: Transmitter enable
0x56002400 C   FIELD 04w01 IDLEIE: IDLE interrupt enable
0x56002400 C   FIELD 05w01 RXFNEIE: RXFNEIE
0x56002400 C   FIELD 06w01 TCIE: Transmission complete interrupt enable
0x56002400 C   FIELD 07w01 TXFNFIE: TXFIFO not full interrupt enable
0x56002400 C   FIELD 08w01 PEIE: PE interrupt enable
0x56002400 C   FIELD 09w01 PS: Parity selection
0x56002400 C   FIELD 10w01 PCE: Parity control enable
0x56002400 C   FIELD 11w01 WAKE: Receiver wakeup method
0x56002400 C   FIELD 12w01 M0: Word length
0x56002400 C   FIELD 13w01 MME: Mute mode enable
0x56002400 C   FIELD 14w01 CMIE: Character match interrupt enable
0x56002400 C   FIELD 16w05 DEDT: DEDT
0x56002400 C   FIELD 21w05 DEAT: DEAT
0x56002400 C   FIELD 28w01 M1: Word length
0x56002400 C   FIELD 29w01 FIFOEN: FIFOEN
0x56002400 C   FIELD 30w01 TXFEIE: TXFEIE
0x56002400 C   FIELD 31w01 RXFFIE: RXFFIE
0x56002404 B  REGISTER CR2 (rw): Control register 2
0x56002404 C   FIELD 04w01 ADDM7: 7-bit Address Detection/4-bit Address Detection
0x56002404 C   FIELD 12w02 STOP: STOP bits
0x56002404 C   FIELD 15w01 SWAP: Swap TX/RX pins
0x56002404 C   FIELD 16w01 RXINV: RX pin active level inversion
0x56002404 C   FIELD 17w01 TXINV: TX pin active level inversion
0x56002404 C   FIELD 18w01 DATAINV: Binary data inversion
0x56002404 C   FIELD 19w01 MSBFIRST: Most significant bit first
0x56002404 C   FIELD 24w08 ADD: Address of the LPUART node
0x56002408 B  REGISTER CR3 (rw): Control register 3
0x56002408 C   FIELD 00w01 EIE: Error interrupt enable
0x56002408 C   FIELD 03w01 HDSEL: Half-duplex selection
0x56002408 C   FIELD 06w01 DMAR: DMA enable receiver
0x56002408 C   FIELD 07w01 DMAT: DMA enable transmitter
0x56002408 C   FIELD 08w01 RTSE: RTS enable
0x56002408 C   FIELD 09w01 CTSE: CTS enable
0x56002408 C   FIELD 10w01 CTSIE: CTS interrupt enable
0x56002408 C   FIELD 12w01 OVRDIS: Overrun Disable
0x56002408 C   FIELD 13w01 DDRE: DMA Disable on Reception Error
0x56002408 C   FIELD 14w01 DEM: Driver enable mode
0x56002408 C   FIELD 15w01 DEP: Driver enable polarity selection
0x56002408 C   FIELD 23w01 TXFTIE: TXFTIE
0x56002408 C   FIELD 25w03 RXFTCFG: RXFTCFG
0x56002408 C   FIELD 28w01 RXFTIE: RXFTIE
0x56002408 C   FIELD 29w03 TXFTCFG: TXFTCFG
0x5600240C B  REGISTER BRR (rw): Baud rate register
0x5600240C C   FIELD 00w20 BRR: BRR
0x56002418 B  REGISTER RQR (wo): Request register
0x56002418 C   FIELD 01w01 SBKRQ: Send break request
0x56002418 C   FIELD 02w01 MMRQ: Mute mode request
0x56002418 C   FIELD 03w01 RXFRQ: Receive data flush request
0x56002418 C   FIELD 04w01 TXFRQ: TXFRQ
0x5600241C B  REGISTER ISR (ro): Interrupt and status register
0x5600241C C   FIELD 00w01 PE: PE
0x5600241C C   FIELD 01w01 FE: FE
0x5600241C C   FIELD 02w01 NE: NE
0x5600241C C   FIELD 03w01 ORE: ORE
0x5600241C C   FIELD 04w01 IDLE: IDLE
0x5600241C C   FIELD 05w01 RXFNE: RXFNE
0x5600241C C   FIELD 06w01 TC: TC
0x5600241C C   FIELD 07w01 TXFNF: TXFNF
0x5600241C C   FIELD 09w01 CTSIF: CTSIF
0x5600241C C   FIELD 10w01 CTS: CTS
0x5600241C C   FIELD 16w01 BUSY: BUSY
0x5600241C C   FIELD 17w01 CMF: CMF
0x5600241C C   FIELD 18w01 SBKF: SBKF
0x5600241C C   FIELD 19w01 RWU: RWU
0x5600241C C   FIELD 21w01 TEACK: TEACK
0x5600241C C   FIELD 22w01 REACK: REACK
0x5600241C C   FIELD 23w01 TXFE: TXFE
0x5600241C C   FIELD 24w01 RXFF: RXFF
0x5600241C C   FIELD 26w01 RXFT: RXFT
0x5600241C C   FIELD 27w01 TXFT: TXFT
0x56002420 B  REGISTER ICR (wo): Interrupt flag clear register
0x56002420 C   FIELD 00w01 PECF: Parity error clear flag
0x56002420 C   FIELD 01w01 FECF: Framing error clear flag
0x56002420 C   FIELD 02w01 NECF: Noise detected clear flag
0x56002420 C   FIELD 03w01 ORECF: Overrun error clear flag
0x56002420 C   FIELD 04w01 IDLECF: Idle line detected clear flag
0x56002420 C   FIELD 06w01 TCCF: Transmission complete clear flag
0x56002420 C   FIELD 09w01 CTSCF: CTS clear flag
0x56002420 C   FIELD 17w01 CMCF: Character match clear flag
0x56002424 B  REGISTER RDR (ro): Receive data register
0x56002424 C   FIELD 00w09 RDR: Receive data value
0x56002428 B  REGISTER TDR (rw): Transmit data register
0x56002428 C   FIELD 00w09 TDR: Transmit data value
0x5600242C B  REGISTER PRESC (rw): prescaler register
0x5600242C C   FIELD 00w04 PRESCALER: PRESCALER
0x56002430 B  REGISTER AUTOCR (rw): Autonomous mode control register
0x56002430 C   FIELD 00w16 TDN: TDN
0x56002430 C   FIELD 16w01 TRIGPOL: TRIGPOL
0x56002430 C   FIELD 17w01 TRIGEN: TRIGEN
0x56002430 C   FIELD 18w01 IDLEDIS: IDLEDIS
0x56002430 C   FIELD 19w04 TRIGSEL: TRIGSEL
0x56002430 C   FIELD 31w01 TECLREN: TECLREN
0x56002800 A PERIPHERAL SEC_I2C3
0x56002800 B  REGISTER CR1 (rw): Control register 1
0x56002800 C   FIELD 00w01 PE: Peripheral enable
0x56002800 C   FIELD 01w01 TXIE: TX Interrupt enable
0x56002800 C   FIELD 02w01 RXIE: RX Interrupt enable
0x56002800 C   FIELD 03w01 ADDRIE: Address match interrupt enable (slave only)
0x56002800 C   FIELD 04w01 NACKIE: Not acknowledge received interrupt enable
0x56002800 C   FIELD 05w01 STOPIE: STOP detection Interrupt enable
0x56002800 C   FIELD 06w01 TCIE: Transfer Complete interrupt enable
0x56002800 C   FIELD 07w01 ERRIE: Error interrupts enable
0x56002800 C   FIELD 08w04 DNF: Digital noise filter
0x56002800 C   FIELD 12w01 ANFOFF: Analog noise filter OFF
0x56002800 C   FIELD 14w01 TXDMAEN: DMA transmission requests enable
0x56002800 C   FIELD 15w01 RXDMAEN: DMA reception requests enable
0x56002800 C   FIELD 16w01 SBC: Slave byte control
0x56002800 C   FIELD 17w01 NOSTRETCH: Clock stretching disable
0x56002800 C   FIELD 18w01 WUPEN: Wakeup from STOP enable
0x56002800 C   FIELD 19w01 GCEN: General call enable
0x56002800 C   FIELD 20w01 SMBHEN: SMBus Host address enable
0x56002800 C   FIELD 21w01 SMBDEN: SMBus Device Default address enable
0x56002800 C   FIELD 22w01 ALERTEN: SMBUS alert enable
0x56002800 C   FIELD 23w01 PECEN: PEC enable
0x56002800 C   FIELD 24w01 FMP: Fast-mode Plus 20 mA drive enable
0x56002800 C   FIELD 30w01 ADDRACLR: Address match flag (ADDR) automatic clear
0x56002800 C   FIELD 31w01 STOPFACLR: STOP detection flag (STOPF) automatic clear
0x56002804 B  REGISTER CR2 (rw): Control register 2
0x56002804 C   FIELD 00w10 SADD: Slave address bit (master mode)
0x56002804 C   FIELD 10w01 RD_WRN: Transfer direction (master mode)
0x56002804 C   FIELD 11w01 ADD10: 10-bit addressing mode (master mode)
0x56002804 C   FIELD 12w01 HEAD10R: 10-bit address header only read direction (master receiver mode)
0x56002804 C   FIELD 13w01 START: Start generation
0x56002804 C   FIELD 14w01 STOP: Stop generation (master mode)
0x56002804 C   FIELD 15w01 NACK: NACK generation (slave mode)
0x56002804 C   FIELD 16w08 NBYTES: Number of bytes
0x56002804 C   FIELD 24w01 RELOAD: NBYTES reload mode
0x56002804 C   FIELD 25w01 AUTOEND: Automatic end mode (master mode)
0x56002804 C   FIELD 26w01 PECBYTE: Packet error checking byte
0x56002808 B  REGISTER OAR1 (rw): Own address register 1
0x56002808 C   FIELD 00w10 OA1: Interface address
0x56002808 C   FIELD 10w01 OA1MODE: Own Address 1 10-bit mode
0x56002808 C   FIELD 15w01 OA1EN: Own Address 1 enable
0x5600280C B  REGISTER OAR2 (rw): Own address register 2
0x5600280C C   FIELD 01w07 OA2: Interface address
0x5600280C C   FIELD 08w03 OA2MSK: Own Address 2 masks
0x5600280C C   FIELD 15w01 OA2EN: Own Address 2 enable
0x56002810 B  REGISTER TIMINGR (rw): Timing register
0x56002810 C   FIELD 00w08 SCLL: SCL low period (master mode)
0x56002810 C   FIELD 08w08 SCLH: SCL high period (master mode)
0x56002810 C   FIELD 16w04 SDADEL: Data hold time
0x56002810 C   FIELD 20w04 SCLDEL: Data setup time
0x56002810 C   FIELD 28w04 PRESC: Timing prescaler
0x56002814 B  REGISTER TIMEOUTR (rw): Status register 1
0x56002814 C   FIELD 00w12 TIMEOUTA: Bus timeout A
0x56002814 C   FIELD 12w01 TIDLE: Idle clock timeout detection
0x56002814 C   FIELD 15w01 TIMOUTEN: Clock timeout enable
0x56002814 C   FIELD 16w12 TIMEOUTB: Bus timeout B
0x56002814 C   FIELD 31w01 TEXTEN: Extended clock timeout enable
0x56002818 B  REGISTER ISR: Interrupt and Status register
0x56002818 C   FIELD 00w01 TXE (rw): Transmit data register empty (transmitters)
0x56002818 C   FIELD 01w01 TXIS (rw): Transmit interrupt status (transmitters)
0x56002818 C   FIELD 02w01 RXNE (ro): Receive data register not empty (receivers)
0x56002818 C   FIELD 03w01 ADDR (ro): Address matched (slave mode)
0x56002818 C   FIELD 04w01 NACKF (ro): Not acknowledge received flag
0x56002818 C   FIELD 05w01 STOPF (ro): Stop detection flag
0x56002818 C   FIELD 06w01 TC (ro): Transfer Complete (master mode)
0x56002818 C   FIELD 07w01 TCR (ro): Transfer Complete Reload
0x56002818 C   FIELD 08w01 BERR (ro): Bus error
0x56002818 C   FIELD 09w01 ARLO (ro): Arbitration lost
0x56002818 C   FIELD 10w01 OVR (ro): Overrun/Underrun (slave mode)
0x56002818 C   FIELD 11w01 PECERR (ro): PEC Error in reception
0x56002818 C   FIELD 12w01 TIMEOUT (ro): Timeout or t_low detection flag
0x56002818 C   FIELD 13w01 ALERT (ro): SMBus alert
0x56002818 C   FIELD 15w01 BUSY (ro): Bus busy
0x56002818 C   FIELD 16w01 DIR (ro): Transfer direction (Slave mode)
0x56002818 C   FIELD 17w07 ADDCODE (ro): Address match code (Slave mode)
0x5600281C B  REGISTER ICR (wo): Interrupt clear register
0x5600281C C   FIELD 03w01 ADDRCF: Address Matched flag clear
0x5600281C C   FIELD 04w01 NACKCF: Not Acknowledge flag clear
0x5600281C C   FIELD 05w01 STOPCF: Stop detection flag clear
0x5600281C C   FIELD 08w01 BERRCF: Bus error flag clear
0x5600281C C   FIELD 09w01 ARLOCF: Arbitration lost flag clear
0x5600281C C   FIELD 10w01 OVRCF: Overrun/Underrun flag clear
0x5600281C C   FIELD 11w01 PECCF: PEC Error flag clear
0x5600281C C   FIELD 12w01 TIMOUTCF: Timeout detection flag clear
0x5600281C C   FIELD 13w01 ALERTCF: Alert flag clear
0x56002820 B  REGISTER PECR (ro): PEC register
0x56002820 C   FIELD 00w08 PEC: Packet error checking register
0x56002824 B  REGISTER RXDR (ro): Receive data register
0x56002824 C   FIELD 00w08 RXDATA: 8-bit receive data
0x56002828 B  REGISTER TXDR (rw): Transmit data register
0x56002828 C   FIELD 00w08 TXDATA: 8-bit transmit data
0x5600282C B  REGISTER I2C_AUTOCR (rw): I2C Autonomous mode control register
0x5600282C C   FIELD 06w01 TCDMAEN: DMA request enable on Transfer Complete event
0x5600282C C   FIELD 07w01 TCRDMAEN: DMA request enable on Transfer Complete Reload event
0x5600282C C   FIELD 16w04 TRIGSEL: Trigger selection
0x5600282C C   FIELD 20w01 TRIGPOL: Trigger polarity
0x5600282C C   FIELD 21w01 TRIGEN: Trigger enable
0x56004400 A PERIPHERAL SEC_LPTIM1
0x56004400 B  REGISTER ISR_intput (ro): Interrupt and Status Register (intput mode)
0x56004400 B  REGISTER ISR_output (ro): Interrupt and Status Register (output mode)
0x56004400 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x56004400 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x56004400 C   FIELD 01w01 ARRM: Autoreload match
0x56004400 C   FIELD 01w01 ARRM: Autoreload match
0x56004400 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x56004400 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x56004400 C   FIELD 03w01 CMP1OK: Compare register 1 update OK
0x56004400 C   FIELD 04w01 ARROK: Autoreload register update OK
0x56004400 C   FIELD 04w01 ARROK: Autoreload register update OK
0x56004400 C   FIELD 05w01 UP: Counter direction change down to up
0x56004400 C   FIELD 05w01 UP: Counter direction change down to up
0x56004400 C   FIELD 06w01 DOWN: Counter direction change up to down
0x56004400 C   FIELD 06w01 DOWN: Counter direction change up to down
0x56004400 C   FIELD 07w01 UE: LPTIM update event occurred
0x56004400 C   FIELD 07w01 UE: LPTIM update event occurred
0x56004400 C   FIELD 08w01 REPOK: Repetition register update Ok
0x56004400 C   FIELD 08w01 REPOK: Repetition register update Ok
0x56004400 C   FIELD 09w01 CC2IF: Capture 2 interrupt flag
0x56004400 C   FIELD 09w01 CC2IF: Compare 2 interrupt flag
0x56004400 C   FIELD 12w01 CC1OF: Capture 1 over-capture flag
0x56004400 C   FIELD 13w01 CC2OF: Capture 2 over-capture flag
0x56004400 C   FIELD 19w01 CMP2OK: Compare register 2 update OK
0x56004400 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x56004400 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x56004404 B  REGISTER ICR_intput (wo): Interrupt Clear Register (intput mode)
0x56004404 B  REGISTER ICR_output (wo): Interrupt Clear Register (output mode)
0x56004404 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004404 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004404 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x56004404 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x56004404 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x56004404 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x56004404 C   FIELD 03w01 CMP1OKCF: Compare register 1 update OK Clear Flag
0x56004404 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x56004404 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x56004404 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x56004404 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x56004404 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x56004404 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x56004404 C   FIELD 07w01 UECF: Update event clear flag
0x56004404 C   FIELD 07w01 UECF: Update event clear flag
0x56004404 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x56004404 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x56004404 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x56004404 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x56004404 C   FIELD 12w01 CC1OCF: Capture/compare 1 over-capture clear flag
0x56004404 C   FIELD 13w01 CC2OCF: Capture/compare 2 over-capture clear flag
0x56004404 C   FIELD 19w01 CMP2OKCF: Compare register 2 update OK clear flag
0x56004404 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x56004404 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x56004408 B  REGISTER DIER_intput (rw): LPTIM interrupt Enable Register (intput mode)
0x56004408 B  REGISTER DIER_output (rw): LPTIM interrupt Enable Register (output mode)
0x56004408 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004408 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004408 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x56004408 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x56004408 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x56004408 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x56004408 C   FIELD 03w01 CMP1OKIE: Compare register 1 update OK Interrupt Enable
0x56004408 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x56004408 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x56004408 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x56004408 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x56004408 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x56004408 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x56004408 C   FIELD 07w01 UEIE: Update event interrupt enable
0x56004408 C   FIELD 07w01 UEIE: Update event interrupt enable
0x56004408 C   FIELD 08w01 REPOKIE: REPOKIE
0x56004408 C   FIELD 08w01 REPOKIE: REPOKIE
0x56004408 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x56004408 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x56004408 C   FIELD 12w01 CC1OIE: Capture/compare 1 over-capture interrupt enable
0x56004408 C   FIELD 13w01 CC2OIE: Capture/compare 2 over-capture interrupt enable
0x56004408 C   FIELD 16w01 CC1DE: Capture/compare 1 DMA request enable
0x56004408 C   FIELD 19w01 CMP2OKIE: Compare register 2 update OK interrupt enable
0x56004408 C   FIELD 23w01 UEDE: Update event DMA request enable
0x56004408 C   FIELD 25w01 CC2DE: Capture/compare 2 DMA request enable
0x5600440C B  REGISTER CFGR (rw): Configuration Register
0x5600440C C   FIELD 00w01 CKSEL: Clock selector
0x5600440C C   FIELD 01w02 CKPOL: Clock Polarity
0x5600440C C   FIELD 03w02 CKFLT: Configurable digital filter for external clock
0x5600440C C   FIELD 06w02 TRGFLT: Configurable digital filter for trigger
0x5600440C C   FIELD 09w03 PRESC: Clock prescaler
0x5600440C C   FIELD 13w03 TRIGSEL: Trigger selector
0x5600440C C   FIELD 17w02 TRIGEN: Trigger enable and polarity
0x5600440C C   FIELD 19w01 TIMOUT: Timeout enable
0x5600440C C   FIELD 20w01 WAVE: Waveform shape
0x5600440C C   FIELD 21w01 WAVPOL: Waveform shape polarity
0x5600440C C   FIELD 22w01 PRELOAD: Registers update mode
0x5600440C C   FIELD 23w01 COUNTMODE: counter mode enabled
0x5600440C C   FIELD 24w01 ENC: Encoder mode enable
0x56004410 B  REGISTER CR (rw): Control Register
0x56004410 C   FIELD 00w01 ENABLE: LPTIM Enable
0x56004410 C   FIELD 01w01 SNGSTRT: LPTIM start in single mode
0x56004410 C   FIELD 02w01 CNTSTRT: Timer start in continuous mode
0x56004410 C   FIELD 03w01 COUNTRST: Counter reset
0x56004410 C   FIELD 04w01 RSTARE: Reset after read enable
0x56004414 B  REGISTER CCR1 (rw): Compare Register
0x56004414 C   FIELD 00w16 CCR1: Capture/compare 1 value
0x56004418 B  REGISTER ARR (rw): Autoreload Register
0x56004418 C   FIELD 00w16 ARR: Auto reload value
0x5600441C B  REGISTER CNT (ro): Counter Register
0x5600441C C   FIELD 00w16 CNT: Counter value
0x56004424 B  REGISTER CFGR2 (rw): LPTIM configuration register 2
0x56004424 C   FIELD 00w02 IN1SEL: LPTIM input 1 selection
0x56004424 C   FIELD 04w02 IN2SEL: LPTIM input 2 selection
0x56004424 C   FIELD 16w02 IC1SEL: LPTIM input capture 1 selection
0x56004424 C   FIELD 20w02 IC2SEL: LPTIM input capture 2 selection
0x56004428 B  REGISTER RCR (rw): LPTIM repetition register
0x56004428 C   FIELD 00w08 REP: Repetition register value
0x5600442C B  REGISTER CCMR1 (rw): LPTIM capture/compare mode register 1
0x5600442C C   FIELD 00w01 CC1SEL: Capture/compare 1 selection
0x5600442C C   FIELD 01w01 CC1E: Capture/compare 1 output enable
0x5600442C C   FIELD 02w02 CC1P: Capture/compare 1 output polarity
0x5600442C C   FIELD 08w02 IC1PSC: Input capture 1 prescaler
0x5600442C C   FIELD 12w02 IC1F: Input capture 1 filter
0x5600442C C   FIELD 16w01 CC2SEL: Capture/compare 2 selection
0x5600442C C   FIELD 17w01 CC2E: Capture/compare 2 output enable
0x5600442C C   FIELD 18w02 CC2P: Capture/compare 2 output polarity
0x5600442C C   FIELD 24w02 IC2PSC: Input capture 2 prescaler
0x5600442C C   FIELD 28w02 IC2F: Input capture 2 filter
0x56004434 B  REGISTER CCR2 (rw): LPTIM Compare Register 2
0x56004434 C   FIELD 00w16 CCR2: Capture/compare 2 value
0x560047EC B  REGISTER HWCFGR2 (ro): LPTIM peripheral hardware configuration register 2
0x560047EC C   FIELD 00w04 CFG1: peripheral hardware configuration 1
0x560047EC C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x560047EC C   FIELD 16w01 CFG3: peripheral hardware configuration 3
0x560047F0 B  REGISTER HWCFGR1 (ro): LPTIM peripheral hardware configuration register 1
0x560047F0 C   FIELD 00w08 CFG1: peripheral hardware configuration 1
0x560047F0 C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x560047F0 C   FIELD 16w04 CFG3: peripheral hardware configuration 3
0x560047F0 C   FIELD 24w08 CFG4: peripheral hardware configuration 4
0x56004800 A PERIPHERAL SEC_LPTIM3
0x56004800 B  REGISTER ISR_intput (ro): Interrupt and Status Register (intput mode)
0x56004800 B  REGISTER ISR_output (ro): Interrupt and Status Register (output mode)
0x56004800 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x56004800 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x56004800 C   FIELD 01w01 ARRM: Autoreload match
0x56004800 C   FIELD 01w01 ARRM: Autoreload match
0x56004800 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x56004800 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x56004800 C   FIELD 03w01 CMP1OK: Compare register 1 update OK
0x56004800 C   FIELD 04w01 ARROK: Autoreload register update OK
0x56004800 C   FIELD 04w01 ARROK: Autoreload register update OK
0x56004800 C   FIELD 05w01 UP: Counter direction change down to up
0x56004800 C   FIELD 05w01 UP: Counter direction change down to up
0x56004800 C   FIELD 06w01 DOWN: Counter direction change up to down
0x56004800 C   FIELD 06w01 DOWN: Counter direction change up to down
0x56004800 C   FIELD 07w01 UE: LPTIM update event occurred
0x56004800 C   FIELD 07w01 UE: LPTIM update event occurred
0x56004800 C   FIELD 08w01 REPOK: Repetition register update Ok
0x56004800 C   FIELD 08w01 REPOK: Repetition register update Ok
0x56004800 C   FIELD 09w01 CC2IF: Capture 2 interrupt flag
0x56004800 C   FIELD 09w01 CC2IF: Compare 2 interrupt flag
0x56004800 C   FIELD 12w01 CC1OF: Capture 1 over-capture flag
0x56004800 C   FIELD 13w01 CC2OF: Capture 2 over-capture flag
0x56004800 C   FIELD 19w01 CMP2OK: Compare register 2 update OK
0x56004800 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x56004800 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x56004804 B  REGISTER ICR_intput (wo): Interrupt Clear Register (intput mode)
0x56004804 B  REGISTER ICR_output (wo): Interrupt Clear Register (output mode)
0x56004804 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004804 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004804 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x56004804 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x56004804 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x56004804 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x56004804 C   FIELD 03w01 CMP1OKCF: Compare register 1 update OK Clear Flag
0x56004804 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x56004804 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x56004804 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x56004804 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x56004804 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x56004804 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x56004804 C   FIELD 07w01 UECF: Update event clear flag
0x56004804 C   FIELD 07w01 UECF: Update event clear flag
0x56004804 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x56004804 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x56004804 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x56004804 C   FIELD 09w01 CC2CF: Capture/compare 2 clear flag
0x56004804 C   FIELD 12w01 CC1OCF: Capture/compare 1 over-capture clear flag
0x56004804 C   FIELD 13w01 CC2OCF: Capture/compare 2 over-capture clear flag
0x56004804 C   FIELD 19w01 CMP2OKCF: Compare register 2 update OK clear flag
0x56004804 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x56004804 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x56004808 B  REGISTER DIER_intput (rw): LPTIM interrupt Enable Register (intput mode)
0x56004808 B  REGISTER DIER_output (rw): LPTIM interrupt Enable Register (output mode)
0x56004808 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004808 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004808 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x56004808 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x56004808 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x56004808 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x56004808 C   FIELD 03w01 CMP1OKIE: Compare register 1 update OK Interrupt Enable
0x56004808 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x56004808 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x56004808 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x56004808 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x56004808 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x56004808 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x56004808 C   FIELD 07w01 UEIE: Update event interrupt enable
0x56004808 C   FIELD 07w01 UEIE: Update event interrupt enable
0x56004808 C   FIELD 08w01 REPOKIE: REPOKIE
0x56004808 C   FIELD 08w01 REPOKIE: REPOKIE
0x56004808 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x56004808 C   FIELD 09w01 CC2IE: Capture/compare 2 interrupt enable
0x56004808 C   FIELD 12w01 CC1OIE: Capture/compare 1 over-capture interrupt enable
0x56004808 C   FIELD 13w01 CC2OIE: Capture/compare 2 over-capture interrupt enable
0x56004808 C   FIELD 16w01 CC1DE: Capture/compare 1 DMA request enable
0x56004808 C   FIELD 19w01 CMP2OKIE: Compare register 2 update OK interrupt enable
0x56004808 C   FIELD 23w01 UEDE: Update event DMA request enable
0x56004808 C   FIELD 25w01 CC2DE: Capture/compare 2 DMA request enable
0x5600480C B  REGISTER CFGR (rw): Configuration Register
0x5600480C C   FIELD 00w01 CKSEL: Clock selector
0x5600480C C   FIELD 01w02 CKPOL: Clock Polarity
0x5600480C C   FIELD 03w02 CKFLT: Configurable digital filter for external clock
0x5600480C C   FIELD 06w02 TRGFLT: Configurable digital filter for trigger
0x5600480C C   FIELD 09w03 PRESC: Clock prescaler
0x5600480C C   FIELD 13w03 TRIGSEL: Trigger selector
0x5600480C C   FIELD 17w02 TRIGEN: Trigger enable and polarity
0x5600480C C   FIELD 19w01 TIMOUT: Timeout enable
0x5600480C C   FIELD 20w01 WAVE: Waveform shape
0x5600480C C   FIELD 21w01 WAVPOL: Waveform shape polarity
0x5600480C C   FIELD 22w01 PRELOAD: Registers update mode
0x5600480C C   FIELD 23w01 COUNTMODE: counter mode enabled
0x5600480C C   FIELD 24w01 ENC: Encoder mode enable
0x56004810 B  REGISTER CR (rw): Control Register
0x56004810 C   FIELD 00w01 ENABLE: LPTIM Enable
0x56004810 C   FIELD 01w01 SNGSTRT: LPTIM start in single mode
0x56004810 C   FIELD 02w01 CNTSTRT: Timer start in continuous mode
0x56004810 C   FIELD 03w01 COUNTRST: Counter reset
0x56004810 C   FIELD 04w01 RSTARE: Reset after read enable
0x56004814 B  REGISTER CCR1 (rw): Compare Register
0x56004814 C   FIELD 00w16 CCR1: Capture/compare 1 value
0x56004818 B  REGISTER ARR (rw): Autoreload Register
0x56004818 C   FIELD 00w16 ARR: Auto reload value
0x5600481C B  REGISTER CNT (ro): Counter Register
0x5600481C C   FIELD 00w16 CNT: Counter value
0x56004824 B  REGISTER CFGR2 (rw): LPTIM configuration register 2
0x56004824 C   FIELD 00w02 IN1SEL: LPTIM input 1 selection
0x56004824 C   FIELD 04w02 IN2SEL: LPTIM input 2 selection
0x56004824 C   FIELD 16w02 IC1SEL: LPTIM input capture 1 selection
0x56004824 C   FIELD 20w02 IC2SEL: LPTIM input capture 2 selection
0x56004828 B  REGISTER RCR (rw): LPTIM repetition register
0x56004828 C   FIELD 00w08 REP: Repetition register value
0x5600482C B  REGISTER CCMR1 (rw): LPTIM capture/compare mode register 1
0x5600482C C   FIELD 00w01 CC1SEL: Capture/compare 1 selection
0x5600482C C   FIELD 01w01 CC1E: Capture/compare 1 output enable
0x5600482C C   FIELD 02w02 CC1P: Capture/compare 1 output polarity
0x5600482C C   FIELD 08w02 IC1PSC: Input capture 1 prescaler
0x5600482C C   FIELD 12w02 IC1F: Input capture 1 filter
0x5600482C C   FIELD 16w01 CC2SEL: Capture/compare 2 selection
0x5600482C C   FIELD 17w01 CC2E: Capture/compare 2 output enable
0x5600482C C   FIELD 18w02 CC2P: Capture/compare 2 output polarity
0x5600482C C   FIELD 24w02 IC2PSC: Input capture 2 prescaler
0x5600482C C   FIELD 28w02 IC2F: Input capture 2 filter
0x56004834 B  REGISTER CCR2 (rw): LPTIM Compare Register 2
0x56004834 C   FIELD 00w16 CCR2: Capture/compare 2 value
0x56004BEC B  REGISTER HWCFGR2 (ro): LPTIM peripheral hardware configuration register 2
0x56004BEC C   FIELD 00w04 CFG1: peripheral hardware configuration 1
0x56004BEC C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x56004BEC C   FIELD 16w01 CFG3: peripheral hardware configuration 3
0x56004BF0 B  REGISTER HWCFGR1 (ro): LPTIM peripheral hardware configuration register 1
0x56004BF0 C   FIELD 00w08 CFG1: peripheral hardware configuration 1
0x56004BF0 C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x56004BF0 C   FIELD 16w04 CFG3: peripheral hardware configuration 3
0x56004BF0 C   FIELD 24w08 CFG4: peripheral hardware configuration 4
0x56004C00 A PERIPHERAL SEC_LPTIM4
0x56004C00 B  REGISTER ISR (ro): Interrupt and Status Register
0x56004C00 C   FIELD 00w01 CC1IF: Compare 1 interrupt flag
0x56004C00 C   FIELD 01w01 ARRM: Autoreload match
0x56004C00 C   FIELD 02w01 EXTTRIG: External trigger edge event
0x56004C00 C   FIELD 03w01 CMP1OK: Compare register 1 update OK
0x56004C00 C   FIELD 04w01 ARROK: Autoreload register update OK
0x56004C00 C   FIELD 05w01 UP: Counter direction change down to up
0x56004C00 C   FIELD 06w01 DOWN: Counter direction change up to down
0x56004C00 C   FIELD 07w01 UE: LPTIM update event occurred
0x56004C00 C   FIELD 08w01 REPOK: Repetition register update Ok
0x56004C00 C   FIELD 24w01 DIEROK: Interrupt enable register update OK
0x56004C04 B  REGISTER ICR (wo): Interrupt Clear Register
0x56004C04 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004C04 C   FIELD 01w01 ARRMCF: Autoreload match Clear Flag
0x56004C04 C   FIELD 02w01 EXTTRIGCF: External trigger valid edge Clear Flag
0x56004C04 C   FIELD 03w01 CMP1OKCF: Compare register 1 update OK Clear Flag
0x56004C04 C   FIELD 04w01 ARROKCF: Autoreload register update OK Clear Flag
0x56004C04 C   FIELD 05w01 UPCF: Direction change to UP Clear Flag
0x56004C04 C   FIELD 06w01 DOWNCF: Direction change to down Clear Flag
0x56004C04 C   FIELD 07w01 UECF: Update event clear flag
0x56004C04 C   FIELD 08w01 REPOKCF: Repetition register update OK clear flag
0x56004C04 C   FIELD 24w01 DIEROKCF: Interrupt enable register update OK clear flag
0x56004C08 B  REGISTER DIER (rw): LPTIM interrupt Enable Register
0x56004C08 C   FIELD 00w01 CC1IF: Capture/compare 1 clear flag
0x56004C08 C   FIELD 01w01 ARRMIE: Autoreload match Interrupt Enable
0x56004C08 C   FIELD 02w01 EXTTRIGIE: External trigger valid edge Interrupt Enable
0x56004C08 C   FIELD 03w01 CMP1OKIE: Compare register 1 update OK Interrupt Enable
0x56004C08 C   FIELD 04w01 ARROKIE: Autoreload register update OK Interrupt Enable
0x56004C08 C   FIELD 05w01 UPIE: Direction change to UP Interrupt Enable
0x56004C08 C   FIELD 06w01 DOWNIE: Direction change to down Interrupt Enable
0x56004C08 C   FIELD 07w01 UEIE: Update event interrupt enable
0x56004C08 C   FIELD 08w01 REPOKIE: REPOKIE
0x56004C0C B  REGISTER CFGR (rw): Configuration Register
0x56004C0C C   FIELD 00w01 CKSEL: Clock selector
0x56004C0C C   FIELD 01w02 CKPOL: Clock Polarity
0x56004C0C C   FIELD 03w02 CKFLT: Configurable digital filter for external clock
0x56004C0C C   FIELD 06w02 TRGFLT: Configurable digital filter for trigger
0x56004C0C C   FIELD 09w03 PRESC: Clock prescaler
0x56004C0C C   FIELD 13w03 TRIGSEL: Trigger selector
0x56004C0C C   FIELD 17w02 TRIGEN: Trigger enable and polarity
0x56004C0C C   FIELD 19w01 TIMOUT: Timeout enable
0x56004C0C C   FIELD 20w01 WAVE: Waveform shape
0x56004C0C C   FIELD 21w01 WAVPOL: Waveform shape polarity
0x56004C0C C   FIELD 22w01 PRELOAD: Registers update mode
0x56004C0C C   FIELD 23w01 COUNTMODE: counter mode enabled
0x56004C0C C   FIELD 24w01 ENC: Encoder mode enable
0x56004C10 B  REGISTER CR (rw): Control Register
0x56004C10 C   FIELD 00w01 ENABLE: LPTIM Enable
0x56004C10 C   FIELD 01w01 SNGSTRT: LPTIM start in single mode
0x56004C10 C   FIELD 02w01 CNTSTRT: Timer start in continuous mode
0x56004C10 C   FIELD 03w01 COUNTRST: Counter reset
0x56004C10 C   FIELD 04w01 RSTARE: Reset after read enable
0x56004C14 B  REGISTER CCR1 (rw): Compare Register
0x56004C14 C   FIELD 00w16 CCR1: Capture/compare 1 value
0x56004C18 B  REGISTER ARR (rw): Autoreload Register
0x56004C18 C   FIELD 00w16 ARR: Auto reload value
0x56004C1C B  REGISTER CNT (ro): Counter Register
0x56004C1C C   FIELD 00w16 CNT: Counter value
0x56004C24 B  REGISTER CFGR2 (rw): LPTIM configuration register 2
0x56004C24 C   FIELD 00w02 IN1SEL: LPTIM input 1 selection
0x56004C24 C   FIELD 04w02 IN2SEL: LPTIM input 2 selection
0x56004C24 C   FIELD 16w02 IC1SEL: LPTIM input capture 1 selection
0x56004C24 C   FIELD 20w02 IC2SEL: LPTIM input capture 2 selection
0x56004C28 B  REGISTER RCR (rw): LPTIM repetition register
0x56004C28 C   FIELD 00w08 REP: Repetition register value
0x56004C2C B  REGISTER CCMR1 (rw): LPTIM capture/compare mode register 1
0x56004C2C C   FIELD 00w01 CC1SEL: Capture/compare 1 selection
0x56004C2C C   FIELD 01w01 CC1E: Capture/compare 1 output enable
0x56004C2C C   FIELD 02w02 CC1P: Capture/compare 1 output polarity
0x56004C2C C   FIELD 08w02 IC1PSC: Input capture 1 prescaler
0x56004C2C C   FIELD 12w02 IC1F: Input capture 1 filter
0x56004C2C C   FIELD 16w01 CC2SEL: Capture/compare 2 selection
0x56004C2C C   FIELD 17w01 CC2E: Capture/compare 2 output enable
0x56004C2C C   FIELD 18w02 CC2P: Capture/compare 2 output polarity
0x56004C2C C   FIELD 24w02 IC2PSC: Input capture 2 prescaler
0x56004C2C C   FIELD 28w02 IC2F: Input capture 2 filter
0x56004C34 B  REGISTER CCR2 (rw): LPTIM Compare Register 2
0x56004C34 C   FIELD 00w16 CCR2: Capture/compare 2 value
0x56004FEC B  REGISTER HWCFGR2 (ro): LPTIM peripheral hardware configuration register 2
0x56004FEC C   FIELD 00w04 CFG1: peripheral hardware configuration 1
0x56004FEC C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x56004FEC C   FIELD 16w01 CFG3: peripheral hardware configuration 3
0x56004FF0 B  REGISTER HWCFGR1 (ro): LPTIM peripheral hardware configuration register 1
0x56004FF0 C   FIELD 00w08 CFG1: peripheral hardware configuration 1
0x56004FF0 C   FIELD 08w08 CFG2: peripheral hardware configuration 2
0x56004FF0 C   FIELD 16w04 CFG3: peripheral hardware configuration 3
0x56004FF0 C   FIELD 24w08 CFG4: peripheral hardware configuration 4
0x56005000 A PERIPHERAL SEC_OPAMP
0x56005000 B  REGISTER OPAMP1_CSR (rw): OPAMP1 control/status register
0x56005000 C   FIELD 00w01 OPAEN: Operational amplifier Enable
0x56005000 C   FIELD 01w01 OPALPM: OPALPM
0x56005000 C   FIELD 02w02 OPAMODE: OPAMODE
0x56005000 C   FIELD 04w02 PGA_GAIN: USERTRIM
0x56005000 C   FIELD 08w02 VM_SEL: VM_SEL
0x56005000 C   FIELD 10w01 VP_SEL: VP_SEL
0x56005000 C   FIELD 12w01 CALON: CALON
0x56005000 C   FIELD 13w01 CALSEL: CALSEL
0x56005000 C   FIELD 14w01 USERTRIM: USERTRIM
0x56005000 C   FIELD 15w01 CALOUT: CALOUT
0x56005000 C   FIELD 30w01 OPAHSM: OPAHSM
0x56005004 B  REGISTER OPAMP1_OTR (rw): offset trimming register in normal mode
0x56005004 C   FIELD 00w05 TRIMOFFSETN: TRIMOFFSETN
0x56005004 C   FIELD 08w05 TRIMOFFSETP: TRIMOFFSETP
0x56005008 B  REGISTER OPAMP1_LPOTR (rw): offset trimming register in low-power mode
0x56005008 C   FIELD 00w05 TRIMLPOFFSETN: TRIMLPOFFSETN
0x56005008 C   FIELD 08w05 TRIMLPOFFSETP: TRIMLPOFFSETP
0x56005010 B  REGISTER OPAMP2_CRS: control/status register
0x56005010 C   FIELD 00w01 OPAEN (rw): OPAEN
0x56005010 C   FIELD 01w01 OPALPM (rw): OPALPM
0x56005010 C   FIELD 02w02 OPAMODE (rw): OPAMODE
0x56005010 C   FIELD 04w02 PGA_GAIN (rw): PGA_GAIN
0x56005010 C   FIELD 08w02 VM_SEL (rw): VM_SEL
0x56005010 C   FIELD 10w01 VP_SEL (rw): VP_SEL
0x56005010 C   FIELD 12w01 CALON (rw): CALON
0x56005010 C   FIELD 13w01 CALSEL (rw): CALSEL
0x56005010 C   FIELD 14w01 USERTRIM (rw): USERTRIM
0x56005010 C   FIELD 15w01 CALOUT (ro): CALOUT
0x56005010 C   FIELD 30w01 OPAHSM (rw): OPAHSM
0x56005014 B  REGISTER OPAMP2_OTR (rw): offset trimming register in normal mode
0x56005014 C   FIELD 00w05 TRIMOFFSETN: TRIMOFFSETN
0x56005014 C   FIELD 08w05 TRIMOFFSETP: TRIMOFFSETP
0x56005018 B  REGISTER OPAMP2_LPOTR (rw): offset trimming register in low-power mode
0x56005018 C   FIELD 00w05 TRIMLPOFFSETN: TRIMLPOFFSETN
0x56005018 C   FIELD 08w05 TRIMLPOFFSETP: TRIMLPOFFSETP
0x56005400 A PERIPHERAL SEC_COMP
0x56005400 B  REGISTER COMP1_CSR: Comparator 1 control and status register
0x56005400 C   FIELD 00w01 COMP1_EN (rw): Comparator 1 enable bit
0x56005400 C   FIELD 04w04 COMP1_INMSEL (rw): Comparator 1 Input Minus connection configuration bit
0x56005400 C   FIELD 08w02 COMP1_INPSEL (rw): Comparator1 input plus selection bit
0x56005400 C   FIELD 11w01 COMP1_WINMODE (rw): COMP1_WINMODE
0x56005400 C   FIELD 14w01 COMP1_WINOUT (rw): COMP1_WINOUT
0x56005400 C   FIELD 15w01 COMP1_POLARITY (rw): Comparator 1 polarity selection bit
0x56005400 C   FIELD 16w02 COMP1_HYST (rw): Comparator 1 hysteresis selection bits
0x56005400 C   FIELD 18w02 COMP1_PWRMODE (rw): COMP1_PWRMODE
0x56005400 C   FIELD 20w05 COMP1_BLANKSEL (rw): COMP1_BLANKSEL
0x56005400 C   FIELD 30w01 COMP1_VALUE (ro): Comparator 1 output status bit
0x56005400 C   FIELD 31w01 COMP1_LOCK (rw): COMP1_CSR register lock bit
0x56005404 B  REGISTER COMP2_CSR: Comparator 2 control and status register
0x56005404 C   FIELD 00w01 COM2_EN (rw): Comparator 2 enable bit
0x56005404 C   FIELD 04w04 COM2_INMSEL (rw): Comparator 2 Input Minus connection configuration bit
0x56005404 C   FIELD 08w02 COM2_INPSEL (rw): Comparator 2 input plus selection bit
0x56005404 C   FIELD 11w01 COM2_WINMODE (rw): COM2_WINMODE
0x56005404 C   FIELD 14w01 COM2_WINOUT (rw): COM2_WINOUT
0x56005404 C   FIELD 15w01 COM2_POLARITY (rw): Comparator 2 polarity selection bit
0x56005404 C   FIELD 16w02 COM2_HYST (rw): Comparator 2 hysteresis selection bits
0x56005404 C   FIELD 18w02 COM2_PWRMODE (rw): COM2_PWRMODE
0x56005404 C   FIELD 20w05 COM2_BLANKSEL (rw): COM2_BLANKSEL
0x56005404 C   FIELD 30w01 COM2_VALUE (ro): Comparator 2 output status bit
0x56005404 C   FIELD 31w01 COM2_LOCK (rw): COMP2_CSR register lock bit
0x56007400 A PERIPHERAL SEC_VREFBUF
0x56007400 B  REGISTER VREFBUF_CSR: VREFBUF control and status register
0x56007400 C   FIELD 00w01 ENVR (rw): ENVR
0x56007400 C   FIELD 01w01 HIZ (rw): HIZ
0x56007400 C   FIELD 03w01 VRR (ro): VRR
0x56007400 C   FIELD 04w03 VRS (rw): VRS
0x56007404 B  REGISTER VREFBUF_CCR (rw): VREFBUF calibration control register
0x56007404 C   FIELD 00w06 TRIM: TRIM
0x56007800 A PERIPHERAL SEC_RTC
0x56007800 B  REGISTER TR (rw): time register
0x56007800 C   FIELD 00w04 SU: Second units in BCD format
0x56007800 C   FIELD 04w03 ST: Second tens in BCD format
0x56007800 C   FIELD 08w04 MNU: Minute units in BCD format
0x56007800 C   FIELD 12w03 MNT: Minute tens in BCD format
0x56007800 C   FIELD 16w04 HU: Hour units in BCD format
0x56007800 C   FIELD 20w02 HT: Hour tens in BCD format
0x56007800 C   FIELD 22w01 PM: AM/PM notation
0x56007804 B  REGISTER DR (rw): date register
0x56007804 C   FIELD 00w04 DU: Date units in BCD format
0x56007804 C   FIELD 04w02 DT: Date tens in BCD format
0x56007804 C   FIELD 08w04 MU: Month units in BCD format
0x56007804 C   FIELD 12w01 MT: Month tens in BCD format
0x56007804 C   FIELD 13w03 WDU: Week day units
0x56007804 C   FIELD 16w04 YU: Year units in BCD format
0x56007804 C   FIELD 20w04 YT: Year tens in BCD format
0x56007808 B  REGISTER SSR (ro): RTC sub second register
0x56007808 C   FIELD 00w32 SS: SS
0x5600780C B  REGISTER ICSR: RTC initialization control and status register
0x5600780C C   FIELD 02w01 WUTWF (ro): Wakeup timer write flag
0x5600780C C   FIELD 03w01 SHPF (ro): Shift operation pending
0x5600780C C   FIELD 04w01 INITS (ro): Initialization status flag
0x5600780C C   FIELD 05w01 RSF (rw): Registers synchronization flag
0x5600780C C   FIELD 06w01 INITF (ro): Initialization flag
0x5600780C C   FIELD 07w01 INIT (rw): Initialization mode
0x5600780C C   FIELD 08w02 BIN (rw): BIN
0x5600780C C   FIELD 10w03 BCDU (rw): BCDU
0x5600780C C   FIELD 16w01 RECALPF (ro): Recalibration pending Flag
0x56007810 B  REGISTER PRER (rw): prescaler register
0x56007810 C   FIELD 00w15 PREDIV_S: Synchronous prescaler factor
0x56007810 C   FIELD 16w07 PREDIV_A: Asynchronous prescaler factor
0x56007814 B  REGISTER WUTR (rw): wakeup timer register
0x56007814 C   FIELD 00w16 WUT: Wakeup auto-reload value bits
0x56007814 C   FIELD 16w16 WUTOCLR: WUTOCLR
0x56007818 B  REGISTER CR: RTC control register
0x56007818 C   FIELD 00w03 WUCKSEL (rw): WUCKSEL
0x56007818 C   FIELD 03w01 TSEDGE (rw): TSEDGE
0x56007818 C   FIELD 04w01 REFCKON (rw): REFCKON
0x56007818 C   FIELD 05w01 BYPSHAD (rw): BYPSHAD
0x56007818 C   FIELD 06w01 FMT (rw): FMT
0x56007818 C   FIELD 07w01 SSRUIE (rw): SSRUIE
0x56007818 C   FIELD 08w01 ALRAE (rw): ALRAE
0x56007818 C   FIELD 09w01 ALRBE (rw): ALRBE
0x56007818 C   FIELD 10w01 WUTE (rw): WUTE
0x56007818 C   FIELD 11w01 TSE (rw): TSE
0x56007818 C   FIELD 12w01 ALRAIE (rw): ALRAIE
0x56007818 C   FIELD 13w01 ALRBIE (rw): ALRBIE
0x56007818 C   FIELD 14w01 WUTIE (rw): WUTIE
0x56007818 C   FIELD 15w01 TSIE (rw): TSIE
0x56007818 C   FIELD 16w01 ADD1H (wo): ADD1H
0x56007818 C   FIELD 17w01 SUB1H (wo): SUB1H
0x56007818 C   FIELD 18w01 BKP (rw): BKP
0x56007818 C   FIELD 19w01 COSEL (rw): COSEL
0x56007818 C   FIELD 20w01 POL (rw): POL
0x56007818 C   FIELD 21w02 OSEL (rw): OSEL
0x56007818 C   FIELD 23w01 COE (rw): COE
0x56007818 C   FIELD 24w01 ITSE (rw): ITSE
0x56007818 C   FIELD 25w01 TAMPTS (rw): TAMPTS
0x56007818 C   FIELD 26w01 TAMPOE (rw): TAMPOE
0x56007818 C   FIELD 27w01 ALRAFCLR (rw): ALRAFCLR
0x56007818 C   FIELD 28w01 ALRBFCLR (rw): ALRBFCLR
0x56007818 C   FIELD 29w01 TAMPALRM_PU (rw): TAMPALRM_PU
0x56007818 C   FIELD 30w01 TAMPALRM_TYPE (rw): TAMPALRM_TYPE
0x56007818 C   FIELD 31w01 OUT2EN (rw): OUT2EN
0x5600781C B  REGISTER PRIVCR (rw): RTC privilege mode control register
0x5600781C C   FIELD 00w01 ALRAPRIV: ALRAPRIV
0x5600781C C   FIELD 01w01 ALRBPRIV: ALRBPRIV
0x5600781C C   FIELD 02w01 WUTPRIV: WUTPRIV
0x5600781C C   FIELD 03w01 TSPRIV: TSPRIV
0x5600781C C   FIELD 13w01 CALPRIV: CALPRIV
0x5600781C C   FIELD 14w01 INITPRIV: INITPRIV
0x5600781C C   FIELD 15w01 PRIV: PRIV
0x56007820 B  REGISTER SECCFGR (rw): RTC secure mode control register
0x56007820 C   FIELD 00w01 ALRASEC: ALRASEC
0x56007820 C   FIELD 01w01 ALRBSEC: ALRBSEC
0x56007820 C   FIELD 02w01 WUTSEC: WUTSEC
0x56007820 C   FIELD 03w01 TSSEC: TSSEC
0x56007820 C   FIELD 13w01 CALSEC: CALSEC
0x56007820 C   FIELD 14w01 INITSEC: INITSEC
0x56007820 C   FIELD 15w01 SEC: SEC
0x56007824 B  REGISTER WPR (wo): write protection register
0x56007824 C   FIELD 00w08 KEY: Write protection key
0x56007828 B  REGISTER CALR (rw): calibration register
0x56007828 C   FIELD 00w09 CALM: Calibration minus
0x56007828 C   FIELD 12w01 LPCAL: LPCAL
0x56007828 C   FIELD 13w01 CALW16: Use a 16-second calibration cycle period
0x56007828 C   FIELD 14w01 CALW8: Use an 8-second calibration cycle period
0x56007828 C   FIELD 15w01 CALP: Increase frequency of RTC by 488.5 ppm
0x5600782C B  REGISTER SHIFTR (wo): shift control register
0x5600782C C   FIELD 00w15 SUBFS: Subtract a fraction of a second
0x5600782C C   FIELD 31w01 ADD1S: Add one second
0x56007830 B  REGISTER TSTR (ro): time stamp time register
0x56007830 C   FIELD 00w04 SU: Second units in BCD format
0x56007830 C   FIELD 04w03 ST: Second tens in BCD format
0x56007830 C   FIELD 08w04 MNU: Minute units in BCD format
0x56007830 C   FIELD 12w03 MNT: Minute tens in BCD format
0x56007830 C   FIELD 16w04 HU: Hour units in BCD format
0x56007830 C   FIELD 20w02 HT: Hour tens in BCD format
0x56007830 C   FIELD 22w01 PM: AM/PM notation
0x56007834 B  REGISTER TSDR (ro): time stamp date register
0x56007834 C   FIELD 00w04 DU: Date units in BCD format
0x56007834 C   FIELD 04w02 DT: Date tens in BCD format
0x56007834 C   FIELD 08w04 MU: Month units in BCD format
0x56007834 C   FIELD 12w01 MT: Month tens in BCD format
0x56007834 C   FIELD 13w03 WDU: Week day units
0x56007838 B  REGISTER TSSSR (ro): timestamp sub second register
0x56007838 C   FIELD 00w32 SS: Sub second value
0x56007840 B  REGISTER ALRMAR (rw): alarm A register
0x56007840 C   FIELD 00w04 SU: Second units in BCD format
0x56007840 C   FIELD 04w03 ST: Second tens in BCD format
0x56007840 C   FIELD 07w01 MSK1: Alarm A seconds mask
0x56007840 C   FIELD 08w04 MNU: Minute units in BCD format
0x56007840 C   FIELD 12w03 MNT: Minute tens in BCD format
0x56007840 C   FIELD 15w01 MSK2: Alarm A minutes mask
0x56007840 C   FIELD 16w04 HU: Hour units in BCD format
0x56007840 C   FIELD 20w02 HT: Hour tens in BCD format
0x56007840 C   FIELD 22w01 PM: AM/PM notation
0x56007840 C   FIELD 23w01 MSK3: Alarm A hours mask
0x56007840 C   FIELD 24w04 DU: Date units or day in BCD format
0x56007840 C   FIELD 28w02 DT: Date tens in BCD format
0x56007840 C   FIELD 30w01 WDSEL: Week day selection
0x56007840 C   FIELD 31w01 MSK4: Alarm A date mask
0x56007844 B  REGISTER ALRMASSR (rw): alarm A sub second register
0x56007844 C   FIELD 00w15 SS: Sub seconds value
0x56007844 C   FIELD 24w06 MASKSS: Mask the most-significant bits starting at this bit
0x56007844 C   FIELD 31w01 SSCLR: SSCLR
0x56007848 B  REGISTER ALRMBR (rw): alarm B register
0x56007848 C   FIELD 00w04 SU: Second units in BCD format
0x56007848 C   FIELD 04w03 ST: Second tens in BCD format
0x56007848 C   FIELD 07w01 MSK1: Alarm B seconds mask
0x56007848 C   FIELD 08w04 MNU: Minute units in BCD format
0x56007848 C   FIELD 12w03 MNT: Minute tens in BCD format
0x56007848 C   FIELD 15w01 MSK2: Alarm B minutes mask
0x56007848 C   FIELD 16w04 HU: Hour units in BCD format
0x56007848 C   FIELD 20w02 HT: Hour tens in BCD format
0x56007848 C   FIELD 22w01 PM: AM/PM notation
0x56007848 C   FIELD 23w01 MSK3: Alarm B hours mask
0x56007848 C   FIELD 24w04 DU: Date units or day in BCD format
0x56007848 C   FIELD 28w02 DT: Date tens in BCD format
0x56007848 C   FIELD 30w01 WDSEL: Week day selection
0x56007848 C   FIELD 31w01 MSK4: Alarm B date mask
0x5600784C B  REGISTER ALRMBSSR (rw): alarm B sub second register
0x5600784C C   FIELD 00w15 SS: Sub seconds value
0x5600784C C   FIELD 24w06 MASKSS: Mask the most-significant bits starting at this bit
0x5600784C C   FIELD 31w01 SSCLR: SSCLR
0x56007850 B  REGISTER SR (ro): RTC status register
0x56007850 C   FIELD 00w01 ALRAF: ALRAF
0x56007850 C   FIELD 01w01 ALRBF: ALRBF
0x56007850 C   FIELD 02w01 WUTF: WUTF
0x56007850 C   FIELD 03w01 TSF: TSF
0x56007850 C   FIELD 04w01 TSOVF: TSOVF
0x56007850 C   FIELD 05w01 ITSF: ITSF
0x56007850 C   FIELD 06w01 SSRUF: SSRUF
0x56007854 B  REGISTER MISR (ro): RTC non-secure masked interrupt status register
0x56007854 C   FIELD 00w01 ALRAMF: ALRAMF
0x56007854 C   FIELD 01w01 ALRBMF: ALRBMF
0x56007854 C   FIELD 02w01 WUTMF: WUTMF
0x56007854 C   FIELD 03w01 TSMF: TSMF
0x56007854 C   FIELD 04w01 TSOVMF: TSOVMF
0x56007854 C   FIELD 05w01 ITSMF: ITSMF
0x56007854 C   FIELD 06w01 SSRUMF: SSRUMF
0x56007858 B  REGISTER SMISR (ro): RTC secure masked interrupt status register
0x56007858 C   FIELD 00w01 ALRAMF: ALRAMF
0x56007858 C   FIELD 01w01 ALRBMF: ALRBMF
0x56007858 C   FIELD 02w01 WUTMF: WUTMF
0x56007858 C   FIELD 03w01 TSMF: TSMF
0x56007858 C   FIELD 04w01 TSOVMF: TSOVMF
0x56007858 C   FIELD 05w01 ITSMF: ITSMF
0x56007858 C   FIELD 06w01 SSRUMF: SSRUMF
0x5600785C B  REGISTER SCR (wo): RTC status clear register
0x5600785C C   FIELD 00w01 CALRAF: CALRAF
0x5600785C C   FIELD 01w01 CALRBF: CALRBF
0x5600785C C   FIELD 02w01 CWUTF: CWUTF
0x5600785C C   FIELD 03w01 CTSF: CTSF
0x5600785C C   FIELD 04w01 CTSOVF: CTSOVF
0x5600785C C   FIELD 05w01 CITSF: CITSF
0x5600785C C   FIELD 06w01 CSSRUF: CSSRUF
0x56007870 B  REGISTER ALRABINR (rw): RTC alarm A binary mode register
0x56007870 C   FIELD 00w32 SS: Synchronous counter alarm value in Binary mode
0x56007874 B  REGISTER ALRBBINR (rw): RTC alarm B binary mode register
0x56007874 C   FIELD 00w32 SS: Synchronous counter alarm value in Binary mode
0x56007C00 A PERIPHERAL SEC_TAMP
0x56007C00 B  REGISTER TAMP_CR1: TAMP control register 1
0x56007C00 C   FIELD 00w01 TAMP1E (rw): Tamper detection on TAMP_IN1 enable
0x56007C00 C   FIELD 01w01 TAMP2E (rw): Tamper detection on TAMP_IN2 enable
0x56007C00 C   FIELD 02w01 TAMP3E (rw): Tamper detection on TAMP_IN3 enable
0x56007C00 C   FIELD 03w01 TAMP4E (rw): Tamper detection on TAMP_IN4 enable
0x56007C00 C   FIELD 04w01 TAMP5E (rw): Tamper detection on TAMP_IN5 enable
0x56007C00 C   FIELD 05w01 TAMP6E (rw): Tamper detection on TAMP_IN6 enable
0x56007C00 C   FIELD 06w01 TAMP7E (rw): Tamper detection on TAMP_IN7 enable
0x56007C00 C   FIELD 07w01 TAMP8E (rw): Tamper detection on TAMP_IN8 enable
0x56007C00 C   FIELD 16w01 ITAMP1E (rw): Internal tamper 1 enable
0x56007C00 C   FIELD 17w01 ITAMP2E (rw): Internal tamper 2 enable
0x56007C00 C   FIELD 18w01 ITAMP3E (rw): Internal tamper 3 enable
0x56007C00 C   FIELD 20w01 ITAMP5E (rw): Internal tamper 5 enable
0x56007C00 C   FIELD 21w01 ITAMP6E (rw): Internal tamper 6 enable
0x56007C00 C   FIELD 22w01 ITAMP7E (rw): Internal tamper 7 enable
0x56007C00 C   FIELD 23w01 ITAMP8E (rw): Internal tamper 8 enable
0x56007C00 C   FIELD 24w01 ITAMP9E (rw): Internal tamper 9 enable
0x56007C00 C   FIELD 26w01 ITAMP11E (rw): Internal tamper 11 enable
0x56007C00 C   FIELD 27w01 ITAMP12E (rw): Internal tamper 12 enable
0x56007C00 C   FIELD 28w01 ITAMP13E (rw): Internal tamper 13 enable
0x56007C04 B  REGISTER TAMP_CR2: TAMP control register 2
0x56007C04 C   FIELD 00w01 TAMP1NOER (rw): Tamper 1 no erase
0x56007C04 C   FIELD 01w01 TAMP2NOER (rw): Tamper 2 no erase
0x56007C04 C   FIELD 02w01 TAMP3NOER (rw): Tamper 3 no erase
0x56007C04 C   FIELD 03w01 TAMP4NOER (rw): Tamper 4 no erase
0x56007C04 C   FIELD 04w01 TAMP5NOER (rw): Tamper 5 no erase
0x56007C04 C   FIELD 05w01 TAMP6NOER (rw): Tamper 6 no erase
0x56007C04 C   FIELD 06w01 TAMP7NOER (rw): Tamper 7 no erase
0x56007C04 C   FIELD 07w01 TAMP8NOER (rw): Tamper 8 no erase
0x56007C04 C   FIELD 16w01 TAMP1MSK (rw): Tamper 1 mask The tamper 1 interrupt must not be enabled when TAMP1MSK is set.
0x56007C04 C   FIELD 17w01 TAMP2MSK (rw): Tamper 2 mask The tamper 2 interrupt must not be enabled when TAMP2MSK is set.
0x56007C04 C   FIELD 18w01 TAMP3MSK (rw): Tamper 3 mask The tamper 3 interrupt must not be enabled when TAMP3MSK is set.
0x56007C04 C   FIELD 22w01 BKBLOCK (rw): Backup registers and device secrets access blocked
0x56007C04 C   FIELD 23w01 BKERASE (wo): Backup registers and device secrets erase Writing '1 to this bit reset the backup registers and device secrets(1). Writing 0 has no effect. This bit is always read as 0.
0x56007C04 C   FIELD 24w01 TAMP1TRG (rw): Active level for tamper 1 input If TAMPFLT = 00 Tamper 1 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 1 input falling edge and low level triggers a tamper detection event.
0x56007C04 C   FIELD 25w01 TAMP2TRG (rw): Active level for tamper 2 input If TAMPFLT = 00 Tamper 2 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 2 input falling edge and low level triggers a tamper detection event.
0x56007C04 C   FIELD 26w01 TAMP3TRG (rw): Active level for tamper 3 input If TAMPFLT = 00 Tamper 3 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 3 input falling edge and low level triggers a tamper detection event.
0x56007C04 C   FIELD 27w01 TAMP4TRG (rw): Active level for tamper 4 input (active mode disabled) If TAMPFLT = 00 Tamper 4 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 4 input falling edge and low level triggers a tamper detection event.
0x56007C04 C   FIELD 28w01 TAMP5TRG (rw): Active level for tamper 5 input (active mode disabled) If TAMPFLT = 00 Tamper 5 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 5 input falling edge and low level triggers a tamper detection event.
0x56007C04 C   FIELD 29w01 TAMP6TRG (rw): Active level for tamper 6 input (active mode disabled) If TAMPFLT = 00 Tamper 6 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 6 input falling edge and low level triggers a tamper detection event.
0x56007C04 C   FIELD 30w01 TAMP7TRG (rw): Active level for tamper 7 input (active mode disabled) If TAMPFLT = 00 Tamper 7 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 7 input falling edge and low level triggers a tamper detection event.
0x56007C04 C   FIELD 31w01 TAMP8TRG (rw): Active level for tamper 8 input (active mode disabled) If TAMPFLT = 00 Tamper 8 input rising edge and high level triggers a tamper detection event. If TAMPFLT = 00 Tamper 8 input falling edge and low level triggers a tamper detection event.
0x56007C08 B  REGISTER TAMP_CR3: TAMP control register 3
0x56007C08 C   FIELD 00w01 ITAMP1NOER (rw): Internal Tamper 1 no erase
0x56007C08 C   FIELD 01w01 ITAMP2NOER (rw): Internal Tamper 2 no erase
0x56007C08 C   FIELD 02w01 ITAMP3NOER (rw): Internal Tamper 3 no erase
0x56007C08 C   FIELD 04w01 ITAMP5NOER (rw): Internal Tamper 5 no erase
0x56007C08 C   FIELD 05w01 ITAMP6NOER (rw): Internal Tamper 6 no erase
0x56007C08 C   FIELD 06w01 ITAMP7NOER (rw): Internal Tamper 7 no erase
0x56007C08 C   FIELD 07w01 ITAMP8NOER (rw): Internal Tamper 8 no erase
0x56007C08 C   FIELD 08w01 ITAMP9NOER (rw): Internal Tamper 9 no erase
0x56007C08 C   FIELD 10w01 ITAMP11NOER (rw): Internal Tamper 11 no erase
0x56007C08 C   FIELD 11w01 ITAMP12NOER (rw): Internal Tamper 12 no erase
0x56007C08 C   FIELD 12w01 ITAMP13NOER (rw): Internal Tamper 13 no erase
0x56007C0C B  REGISTER TAMP_FLTCR: TAMP filter control register
0x56007C0C C   FIELD 00w03 TAMPFREQ (rw): Tamper sampling frequency Determines the frequency at which each of the TAMP_INx inputs are sampled.
0x56007C0C C   FIELD 03w02 TAMPFLT (rw): TAMP_INx filter count These bits determines the number of consecutive samples at the specified level (TAMP*TRG) needed to activate a tamper event. TAMPFLT is valid for each of the TAMP_INx inputs.
0x56007C0C C   FIELD 05w02 TAMPPRCH (rw): TAMP_INx precharge duration These bit determines the duration of time during which the pull-up/is activated before each sample. TAMPPRCH is valid for each of the TAMP_INx inputs.
0x56007C0C C   FIELD 07w01 TAMPPUDIS (rw): TAMP_INx pull-up disable This bit determines if each of the TAMPx pins are precharged before each sample.
0x56007C10 B  REGISTER TAMP_ATCR1: TAMP active tamper control register 1
0x56007C10 C   FIELD 00w01 TAMP1AM (rw): Tamper 1 active mode
0x56007C10 C   FIELD 01w01 TAMP2AM (rw): Tamper 2 active mode
0x56007C10 C   FIELD 02w01 TAMP3AM (rw): Tamper 3 active mode
0x56007C10 C   FIELD 03w01 TAMP4AM (rw): Tamper 4 active mode
0x56007C10 C   FIELD 04w01 TAMP5AM (rw): Tamper 5 active mode
0x56007C10 C   FIELD 05w01 TAMP6AM (rw): Tamper 6 active mode
0x56007C10 C   FIELD 06w01 TAMP7AM (rw): Tamper 7 active mode
0x56007C10 C   FIELD 07w01 TAMP8AM (rw): Tamper 8 active mode
0x56007C10 C   FIELD 08w02 ATOSEL1 (rw): Active tamper shared output 1 selection The selected output must be available in the package pinout
0x56007C10 C   FIELD 10w02 ATOSEL2 (rw): Active tamper shared output 2 selection The selected output must be available in the package pinout
0x56007C10 C   FIELD 12w02 ATOSEL3 (rw): Active tamper shared output 3 selection The selected output must be available in the package pinout
0x56007C10 C   FIELD 14w02 ATOSEL4 (rw): Active tamper shared output 4 selection The selected output must be available in the package pinout.
0x56007C10 C   FIELD 16w03 ATCKSEL (rw): Active tamper RTC asynchronous prescaler clock selection These bits selects the RTC asynchronous prescaler stage output.The selected clock is CK_ATPRE. fCK_ATPRE = fRTCCLK / 2ATCKSEL when (PREDIV_A+1) = 128. ... These bits can be written only when all active tampers are disabled. The write protection remains for up to 1.5 ck_atpre cycles after all the active tampers are disable.
0x56007C10 C   FIELD 24w03 ATPER (rw): Active tamper output change period The tamper output is changed every CK_ATPER = (2ATPER x CK_ATPRE) cycles. Refer to .
0x56007C10 C   FIELD 30w01 ATOSHARE (rw): Active tamper output sharing TAMP_IN1 is compared with TAMPOUTSEL1 TAMP_IN2 is compared with TAMPOUTSEL2 TAMP_IN3 is compared with TAMPOUTSEL3 TAMP_IN4 is compared with TAMPOUTSEL4 TAMP_IN5 is compared with TAMPOUTSEL5 TAMP_IN6 is compared with TAMPOUTSEL6 TAMP_IN7 is compared with TAMPOUTSEL7 TAMP_IN8 is compared with TAMPOUTSEL8
0x56007C10 C   FIELD 31w01 FLTEN (rw): Active tamper filter enable
0x56007C14 B  REGISTER TAMP_ATSEEDR: TAMP active tamper seed register
0x56007C14 C   FIELD 00w32 SEED (wo): Pseudo-random generator seed value This register must be written four times with 32-bit values to provide the 128-bit seed to the PRNG. Writing to this register automatically sends the seed value to the PRNG.
0x56007C18 B  REGISTER TAMP_ATOR: TAMP active tamper output register
0x56007C18 C   FIELD 00w08 PRNG (ro): Pseudo-random generator value This field provides the values of the PRNG output. Because of potential inconsistencies due to synchronization delays, PRNG must be read at least twice. The read value is correct if it is equal to previous read value. This field can only be read when the APB is in secure mode.
0x56007C18 C   FIELD 14w01 SEEDF (ro): Seed running flag This flag is set by hardware when a new seed is written in the TAMP_ATSEEDR. It is cleared by hardware when the PRNG has absorbed this new seed, and by system reset. The TAMP APB cock must not be switched off as long as SEEDF is set.
0x56007C18 C   FIELD 15w01 INITS (ro): Active tamper initialization status This flag is set by hardware when the PRNG has absorbed the first 128-bit seed, meaning that the enabled active tampers are functional. This flag is cleared when the active tampers are disabled.
0x56007C1C B  REGISTER TAMP_ATCR2: TAMP active tamper control register 2
0x56007C1C C   FIELD 08w03 ATOSEL1 (rw): Active tamper shared output 1 selection The selected output must be available in the package pinout. Bits 9:8 are the mirror of ATOSEL1[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.
0x56007C1C C   FIELD 11w03 ATOSEL2 (rw): Active tamper shared output 2 selection The selected output must be available in the package pinout. Bits 12:11 are the mirror of ATOSEL2[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.
0x56007C1C C   FIELD 14w03 ATOSEL3 (rw): Active tamper shared output 3 selection The selected output must be available in the package pinout. Bits 15:14 are the mirror of ATOSEL3[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.
0x56007C1C C   FIELD 17w03 ATOSEL4 (rw): Active tamper shared output 4 selection The selected output must be available in the package pinout. Bits 18:17 are the mirror of ATOSEL2[1:0] in the TAMP_ATCR1, and so can also be read or written through TAMP_ATCR1.
0x56007C1C C   FIELD 20w03 ATOSEL5 (rw): Active tamper shared output 5 selection The selected output must be available in the package pinout.
0x56007C1C C   FIELD 23w03 ATOSEL6 (rw): Active tamper shared output 6 selection The selected output must be available in the package pinout.
0x56007C1C C   FIELD 26w03 ATOSEL7 (rw): Active tamper shared output 7 selection The selected output must be available in the package pinout.
0x56007C1C C   FIELD 29w03 ATOSEL8 (rw): Active tamper shared output 8 selection The selected output must be available in the package pinout.
0x56007C20 B  REGISTER TAMP_SECCFGR: TAMP secure mode register
0x56007C20 C   FIELD 00w08 BKPRWSEC (rw): Backup registers read/write protection offset Protection zone 1 is defined for backup registers from TAMP_BKP0R to TAMP_BKPxR (x = BKPRWSEC-1, from 0 to 128). if TZEN=1, these backup registers can be read and written only with secure access. If TZEN=0: the protection zone 1 can be read and written with non-secure access. If BKPRWSEC = 0: there is no protection zone 1. If BKPRWPRIV is set, BKPRWSEC[7:0] can be written only in privileged mode.
0x56007C20 C   FIELD 15w01 CNT1SEC (rw): Monotonic counter 1 secure protection
0x56007C20 C   FIELD 16w08 BKPWSEC (rw): Backup registers write protection offset Protection zone 2 is defined for backup registers from TAMP_BKPyR (y = BKPRWSEC, from 0 to 128) to TAMP_BKPzR (z = BKPWSEC-1, from 0 to 128, BKPWSEC ¥ BKPRWSEC): if TZEN=1, these backup registers can be written only with secure access. They can be read with secure or non-secure access. Protection zone 3 defined for backup registers from TAMP_BKPtR (t = BKPWSEC, from 0 to 127). They can be read or written with secure or non-secure access. If TZEN=0: the protection zone 2 can be read and written with non-secure access. If BKPWSEC = 0 or if BKPWSEC ¤ BKPRWSEC: there is no protection zone 2. If BKPWPRIV is set, BKPRWSEC[7:0] can be written only in privileged mode.
0x56007C20 C   FIELD 30w01 BHKLOCK (rw): Boot hardware key lock This bit can be read and can only be written to 1 by software. It is cleared by hardware together with the backup registers following a tamper detection event or when the readout protection (RDP) is disabled.
0x56007C20 C   FIELD 31w01 TAMPSEC (rw): Tamper protection (excluding monotonic counters and backup registers) Note: Refer to for details on the read protection.
0x56007C24 B  REGISTER TAMP_PRIVCR: TAMP privilege mode control register
0x56007C24 C   FIELD 15w01 CNT1PRIV (rw): Monotonic counter 1 privilege protection
0x56007C24 C   FIELD 29w01 BKPRWPRIV (rw): Backup registers zone 1 privilege protection
0x56007C24 C   FIELD 30w01 BKPWPRIV (rw): Backup registers zone 2 privilege protection
0x56007C24 C   FIELD 31w01 TAMPPRIV (rw): Tamper privilege protection (excluding backup registers) Note: Refer to for details on the read protection.
0x56007C2C B  REGISTER TAMP_IER: TAMP interrupt enable register
0x56007C2C C   FIELD 00w01 TAMP1IE (rw): Tamper 1 interrupt enable
0x56007C2C C   FIELD 01w01 TAMP2IE (rw): Tamper 2 interrupt enable
0x56007C2C C   FIELD 02w01 TAMP3IE (rw): Tamper 3 interrupt enable
0x56007C2C C   FIELD 03w01 TAMP4IE (rw): Tamper 4 interrupt enable
0x56007C2C C   FIELD 04w01 TAMP5IE (rw): Tamper 5 interrupt enable
0x56007C2C C   FIELD 05w01 TAMP6IE (rw): Tamper 6 interrupt enable
0x56007C2C C   FIELD 06w01 TAMP7IE (rw): Tamper 7interrupt enable
0x56007C2C C   FIELD 07w01 TAMP8IE (rw): Tamper 8 interrupt enable
0x56007C2C C   FIELD 16w01 ITAMP1IE (rw): Internal tamper 1 interrupt enable
0x56007C2C C   FIELD 17w01 ITAMP2IE (rw): Internal tamper 2 interrupt enable
0x56007C2C C   FIELD 18w01 ITAMP3IE (rw): Internal tamper 3 interrupt enable
0x56007C2C C   FIELD 20w01 ITAMP5IE (rw): Internal tamper 5 interrupt enable
0x56007C2C C   FIELD 21w01 ITAMP6IE (rw): Internal tamper 6 interrupt enable
0x56007C2C C   FIELD 22w01 ITAMP7IE (rw): Internal tamper 7 interrupt enable
0x56007C2C C   FIELD 23w01 ITAMP8IE (rw): Internal tamper 8 interrupt enable
0x56007C2C C   FIELD 24w01 ITAMP9IE (rw): Internal tamper 9 interrupt enable
0x56007C2C C   FIELD 26w01 ITAMP11IE (rw): Internal tamper 11 interrupt enable
0x56007C2C C   FIELD 27w01 ITAMP12IE (rw): Internal tamper 12 interrupt enable
0x56007C2C C   FIELD 28w01 ITAMP13IE (rw): Internal tamper 13 interrupt enable
0x56007C30 B  REGISTER TAMP_SR: TAMP status register
0x56007C30 C   FIELD 00w01 TAMP1F (ro): TAMP1 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP1 input.
0x56007C30 C   FIELD 01w01 TAMP2F (ro): TAMP2 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP2 input.
0x56007C30 C   FIELD 02w01 TAMP3F (ro): TAMP3 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP3 input.
0x56007C30 C   FIELD 03w01 TAMP4F (ro): TAMP4 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP4 input.
0x56007C30 C   FIELD 04w01 TAMP5F (ro): TAMP5 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP5 input.
0x56007C30 C   FIELD 05w01 TAMP6F (ro): TAMP6 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP6 input.
0x56007C30 C   FIELD 06w01 TAMP7F (ro): TAMP7 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP7 input.
0x56007C30 C   FIELD 07w01 TAMP8F (ro): TAMP8 detection flag This flag is set by hardware when a tamper detection event is detected on the TAMP8 input
0x56007C30 C   FIELD 16w01 ITAMP1F (ro): Internal tamper 1 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 1.
0x56007C30 C   FIELD 17w01 ITAMP2F (ro): Internal tamper 2 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 2.
0x56007C30 C   FIELD 18w01 ITAMP3F (ro): Internal tamper 3 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 3.
0x56007C30 C   FIELD 20w01 ITAMP5F (ro): Internal tamper 5 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 5.
0x56007C30 C   FIELD 21w01 ITAMP6F (ro): Internal tamper 6 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 6.
0x56007C30 C   FIELD 22w01 ITAMP7F (ro): Internal tamper 7 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 7.
0x56007C30 C   FIELD 23w01 ITAMP8F (ro): Internal tamper 8 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 8.
0x56007C30 C   FIELD 24w01 ITAMP9F (ro): Internal tamper 9 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 9.
0x56007C30 C   FIELD 26w01 ITAMP11F (ro): Internal tamper 11 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 11.
0x56007C30 C   FIELD 27w01 ITAMP12F (ro): Internal tamper 12 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 12.
0x56007C30 C   FIELD 28w01 ITAMP13F (ro): Internal tamper 13 flag This flag is set by hardware when a tamper detection event is detected on the internal tamper 13.
0x56007C34 B  REGISTER TAMP_MISR: TAMP non-secure masked interrupt status register
0x56007C34 C   FIELD 00w01 TAMP1MF (ro): TAMP1 non-secure interrupt masked flag This flag is set by hardware when the tamper 1 non-secure interrupt is raised.
0x56007C34 C   FIELD 01w01 TAMP2MF (ro): TAMP2 non-secure interrupt masked flag This flag is set by hardware when the tamper 2 non-secure interrupt is raised.
0x56007C34 C   FIELD 02w01 TAMP3MF (ro): TAMP3 non-secure interrupt masked flag This flag is set by hardware when the tamper 3 non-secure interrupt is raised.
0x56007C34 C   FIELD 03w01 TAMP4MF (ro): TAMP4 non-secure interrupt masked flag This flag is set by hardware when the tamper 4 non-secure interrupt is raised.
0x56007C34 C   FIELD 04w01 TAMP5MF (ro): TAMP5 non-secure interrupt masked flag This flag is set by hardware when the tamper 5 non-secure interrupt is raised.
0x56007C34 C   FIELD 05w01 TAMP6MF (ro): TAMP6 non-secure interrupt masked flag This flag is set by hardware when the tamper 6 non-secure interrupt is raised.
0x56007C34 C   FIELD 06w01 TAMP7MF (ro): TAMP7 non-secure interrupt masked flag This flag is set by hardware when the tamper 7 non-secure interrupt is raised.
0x56007C34 C   FIELD 07w01 TAMP8MF (ro): TAMP8 non-secure interrupt masked flag This flag is set by hardware when the tamper 8 non-secure interrupt is raised.
0x56007C34 C   FIELD 16w01 ITAMP1MF (ro): Internal tamper 1 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 1 non-secure interrupt is raised.
0x56007C34 C   FIELD 17w01 ITAMP2MF (ro): Internal tamper 2 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 2 non-secure interrupt is raised.
0x56007C34 C   FIELD 18w01 ITAMP3MF (ro): Internal tamper 3 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 3 non-secure interrupt is raised.
0x56007C34 C   FIELD 20w01 ITAMP5MF (ro): Internal tamper 5 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 5 non-secure interrupt is raised.
0x56007C34 C   FIELD 21w01 ITAMP6MF (ro): Internal tamper 6 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 6 non-secure interrupt is raised.
0x56007C34 C   FIELD 22w01 ITAMP7MF (ro): VCORE monitoring tamper non-secure interrupt masked flag This flag is set by hardware when the internal tamper 7 non-secure interrupt is raised.
0x56007C34 C   FIELD 23w01 ITAMP8MF (ro): Internal tamper 8 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 8 non-secure interrupt is raised.
0x56007C34 C   FIELD 24w01 ITAMP9MF (ro): internal tamper 9 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 9 non-secure interrupt is raised.
0x56007C34 C   FIELD 26w01 ITAMP11MF (ro): internal tamper 11 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 11 non-secure interrupt is raised.
0x56007C34 C   FIELD 27w01 ITAMP12MF (ro): internal tamper 12 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 12 non-secure interrupt is raised.
0x56007C34 C   FIELD 28w01 ITAMP13MF (ro): internal tamper 13 non-secure interrupt masked flag This flag is set by hardware when the internal tamper 13 non-secure interrupt is raised.
0x56007C38 B  REGISTER TAMP_SMISR: TAMP secure masked interrupt status register
0x56007C38 C   FIELD 00w01 TAMP1MF (ro): TAMP1 secure interrupt masked flag This flag is set by hardware when the tamper 1 secure interrupt is raised.
0x56007C38 C   FIELD 01w01 TAMP2MF (ro): TAMP2 secure interrupt masked flag This flag is set by hardware when the tamper 2 secure interrupt is raised.
0x56007C38 C   FIELD 02w01 TAMP3MF (ro): TAMP3 secure interrupt masked flag This flag is set by hardware when the tamper 3 secure interrupt is raised.
0x56007C38 C   FIELD 03w01 TAMP4MF (ro): TAMP4 secure interrupt masked flag This flag is set by hardware when the tamper 4 secure interrupt is raised.
0x56007C38 C   FIELD 04w01 TAMP5MF (ro): TAMP5 secure interrupt masked flag This flag is set by hardware when the tamper 5 secure interrupt is raised.
0x56007C38 C   FIELD 05w01 TAMP6MF (ro): TAMP6 secure interrupt masked flag This flag is set by hardware when the tamper 6 secure interrupt is raised.
0x56007C38 C   FIELD 06w01 TAMP7MF (ro): TAMP7 secure interrupt masked flag This flag is set by hardware when the tamper 7 secure interrupt is raised.
0x56007C38 C   FIELD 07w01 TAMP8MF (ro): TAMP8 secure interrupt masked flag This flag is set by hardware when the tamper 8 secure interrupt is raised.
0x56007C38 C   FIELD 16w01 ITAMP1MF (ro): Internal tamper 1 secure interrupt masked flag This flag is set by hardware when the internal tamper 1 secure interrupt is raised.
0x56007C38 C   FIELD 17w01 ITAMP2MF (ro): Internal tamper 2 secure interrupt masked flag This flag is set by hardware when the internal tamper 2 secure interrupt is raised.
0x56007C38 C   FIELD 18w01 ITAMP3MF (ro): Internal tamper 3 secure interrupt masked flag This flag is set by hardware when the internal tamper 3 secure interrupt is raised.
0x56007C38 C   FIELD 20w01 ITAMP5MF (ro): Internal tamper 5 secure interrupt masked flag This flag is set by hardware when the internal tamper 5 secure interrupt is raised.
0x56007C38 C   FIELD 21w01 ITAMP6MF (ro): Internal tamper 6 secure interrupt masked flag This flag is set by hardware when the internal tamper 6 secure interrupt is raised.
0x56007C38 C   FIELD 22w01 ITAMP7MF (ro): VCORE monitoring tamper secure interrupt masked flag This flag is set by hardware when the internal tamper 7 secure interrupt is raised.
0x56007C38 C   FIELD 23w01 ITAMP8MF (ro): Internal tamper 8 secure interrupt masked flag This flag is set by hardware when the internal tamper 8 secure interrupt is raised.
0x56007C38 C   FIELD 24w01 ITAMP9MF (ro): internal tamper 9 secure interrupt masked flag This flag is set by hardware when the internal tamper 9 secure interrupt is raised.
0x56007C38 C   FIELD 26w01 ITAMP11MF (ro): internal tamper 11 secure interrupt masked flag This flag is set by hardware when the internal tamper 11 secure interrupt is raised.
0x56007C38 C   FIELD 27w01 ITAMP12MF (ro): internal tamper 12 secure interrupt masked flag This flag is set by hardware when the internal tamper 12 secure interrupt is raised.
0x56007C38 C   FIELD 28w01 ITAMP13MF (ro): internal tamper 13 secure interrupt masked flag This flag is set by hardware when the internal tamper 13 secure interrupt is raised.
0x56007C3C B  REGISTER TAMP_SCR: TAMP status clear register
0x56007C3C C   FIELD 00w01 CTAMP1F (wo): Clear TAMP1 detection flag Writing 1 in this bit clears the TAMP1F bit in the TAMP_SR register.
0x56007C3C C   FIELD 01w01 CTAMP2F (wo): Clear TAMP2 detection flag Writing 1 in this bit clears the TAMP2F bit in the TAMP_SR register.
0x56007C3C C   FIELD 02w01 CTAMP3F (wo): Clear TAMP3 detection flag Writing 1 in this bit clears the TAMP3F bit in the TAMP_SR register.
0x56007C3C C   FIELD 03w01 CTAMP4F (wo): Clear TAMP4 detection flag Writing 1 in this bit clears the TAMP4F bit in the TAMP_SR register.
0x56007C3C C   FIELD 04w01 CTAMP5F (wo): Clear TAMP5 detection flag Writing 1 in this bit clears the TAMP5F bit in the TAMP_SR register.
0x56007C3C C   FIELD 05w01 CTAMP6F (wo): Clear TAMP6 detection flag Writing 1 in this bit clears the TAMP6F bit in the TAMP_SR register.
0x56007C3C C   FIELD 06w01 CTAMP7F (wo): Clear TAMP7 detection flag Writing 1 in this bit clears the TAMP7F bit in the TAMP_SR register.
0x56007C3C C   FIELD 07w01 CTAMP8F (wo): Clear TAMP8 detection flag Writing 1 in this bit clears the TAMP8F bit in the TAMP_SR register.
0x56007C3C C   FIELD 16w01 CITAMP1F (wo): Clear ITAMP1 detection flag Writing 1 in this bit clears the ITAMP1F bit in the TAMP_SR register.
0x56007C3C C   FIELD 17w01 CITAMP2F (wo): Clear ITAMP2 detection flag Writing 1 in this bit clears the ITAMP2F bit in the TAMP_SR register.
0x56007C3C C   FIELD 18w01 CITAMP3F (wo): Clear ITAMP3 detection flag Writing 1 in this bit clears the ITAMP3F bit in the TAMP_SR register.
0x56007C3C C   FIELD 20w01 CITAMP5F (wo): Clear ITAMP5 detection flag Writing 1 in this bit clears the ITAMP5F bit in the TAMP_SR register.
0x56007C3C C   FIELD 21w01 CITAMP6F (wo): Clear ITAMP6 detection flag Writing 1 in this bit clears the ITAMP6F bit in the TAMP_SR register.
0x56007C3C C   FIELD 22w01 CITAMP7F (wo): Clear ITAMP7 detection flag Writing 1 in this bit clears the ITAMP7F bit in the TAMP_SR register.
0x56007C3C C   FIELD 23w01 CITAMP8F (wo): Clear ITAMP8 detection flag Writing 1 in this bit clears the ITAMP8F bit in the TAMP_SR register.
0x56007C3C C   FIELD 24w01 CITAMP9F (wo): Clear ITAMP9 detection flag Writing 1 in this bit clears the ITAMP9F bit in the TAMP_SR register.
0x56007C3C C   FIELD 26w01 CITAMP11F (wo): Clear ITAMP11 detection flag Writing 1 in this bit clears the ITAMP11F bit in the TAMP_SR register.
0x56007C3C C   FIELD 27w01 CITAMP12F (wo): Clear ITAMP12 detection flag Writing 1 in this bit clears the ITAMP12F bit in the TAMP_SR register.
0x56007C3C C   FIELD 28w01 CITAMP13F (wo): Clear ITAMP13 detection flag Writing 1 in this bit clears the ITAMP13F bit in the TAMP_SR register.
0x56007C40 B  REGISTER TAMP_COUNT1R: TAMP monotonic counter 1 register
0x56007C40 C   FIELD 00w32 COUNT (ro): This register is read-only only and is incremented by one when a write access is done to this register. This register cannot roll-over and is frozen when reaching the maximum value.
0x56007C54 B  REGISTER TAMP_ERCFGR: TAMP erase configuration register
0x56007C54 C   FIELD 00w01 ERCFG0 (rw): Configurable device secrets configuration
0x56007D00 B  REGISTER TAMP_BKP0R: TAMP backup 0 register
0x56007D00 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D04 B  REGISTER TAMP_BKP1R: TAMP backup 1 register
0x56007D04 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D08 B  REGISTER TAMP_BKP2R: TAMP backup 2 register
0x56007D08 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D0C B  REGISTER TAMP_BKP3R: TAMP backup 3 register
0x56007D0C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D10 B  REGISTER TAMP_BKP4R: TAMP backup 4 register
0x56007D10 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D14 B  REGISTER TAMP_BKP5R: TAMP backup 5 register
0x56007D14 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D18 B  REGISTER TAMP_BKP6R: TAMP backup 6 register
0x56007D18 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D1C B  REGISTER TAMP_BKP7R: TAMP backup 7 register
0x56007D1C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D20 B  REGISTER TAMP_BKP8R: TAMP backup 8 register
0x56007D20 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D24 B  REGISTER TAMP_BKP9R: TAMP backup 9 register
0x56007D24 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D28 B  REGISTER TAMP_BKP10R: TAMP backup 10 register
0x56007D28 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D2C B  REGISTER TAMP_BKP11R: TAMP backup 11 register
0x56007D2C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D30 B  REGISTER TAMP_BKP12R: TAMP backup 12 register
0x56007D30 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D34 B  REGISTER TAMP_BKP13R: TAMP backup 13 register
0x56007D34 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D38 B  REGISTER TAMP_BKP14R: TAMP backup 14 register
0x56007D38 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D3C B  REGISTER TAMP_BKP15R: TAMP backup 15 register
0x56007D3C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D40 B  REGISTER TAMP_BKP16R: TAMP backup 16 register
0x56007D40 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D44 B  REGISTER TAMP_BKP17R: TAMP backup 17 register
0x56007D44 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D48 B  REGISTER TAMP_BKP18R: TAMP backup 18 register
0x56007D48 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D4C B  REGISTER TAMP_BKP19R: TAMP backup 19 register
0x56007D4C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D50 B  REGISTER TAMP_BKP20R: TAMP backup 20 register
0x56007D50 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D54 B  REGISTER TAMP_BKP21R: TAMP backup 21 register
0x56007D54 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D58 B  REGISTER TAMP_BKP22R: TAMP backup 22 register
0x56007D58 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D5C B  REGISTER TAMP_BKP23R: TAMP backup 23 register
0x56007D5C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D60 B  REGISTER TAMP_BKP24R: TAMP backup 24 register
0x56007D60 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D64 B  REGISTER TAMP_BKP25R: TAMP backup 25 register
0x56007D64 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D68 B  REGISTER TAMP_BKP26R: TAMP backup 26 register
0x56007D68 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D6C B  REGISTER TAMP_BKP27R: TAMP backup 27 register
0x56007D6C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D70 B  REGISTER TAMP_BKP28R: TAMP backup 28 register
0x56007D70 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D74 B  REGISTER TAMP_BKP29R: TAMP backup 29 register
0x56007D74 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D78 B  REGISTER TAMP_BKP30R: TAMP backup 30 register
0x56007D78 C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56007D7C B  REGISTER TAMP_BKP31R: TAMP backup 31 register
0x56007D7C C   FIELD 00w32 BKP (rw): The application can write or read data to and from these registers. In the default (ERASE) configuration this register is reset on a tamper detection event. It is forced to reset value as long as there is at least one internal or external tamper flag being set. This register is also reset when the readout protection (RDP) is disabled.
0x56020000 A PERIPHERAL SEC_LPGPIO1
0x56020000 B  REGISTER LPGPIO_MODER (rw): LPGPIO port mode register
0x56020000 C   FIELD 00w01 MODE0: MODE0
0x56020000 C   FIELD 01w01 MODE1: MODE1
0x56020000 C   FIELD 02w01 MODE2: MODE2
0x56020000 C   FIELD 03w01 MODE3: MODE3
0x56020000 C   FIELD 04w01 MODE4: MODE4
0x56020000 C   FIELD 05w01 MODE5: MODE5
0x56020000 C   FIELD 06w01 MODE6: MODE6
0x56020000 C   FIELD 07w01 MODE7: MODE7
0x56020000 C   FIELD 08w01 MODE8: MODE8
0x56020000 C   FIELD 09w01 MODE9: MODE9
0x56020000 C   FIELD 10w01 MODE10: MODE10
0x56020000 C   FIELD 11w01 MODE11: MODE11
0x56020000 C   FIELD 12w01 MODE12: MODE12
0x56020000 C   FIELD 13w01 MODE13: MODE13
0x56020000 C   FIELD 14w01 MODE14: MODE14
0x56020000 C   FIELD 15w01 MODE15: MODE15
0x56020010 B  REGISTER LPGPIO_IDR (ro): LPGPIO port input data register
0x56020010 C   FIELD 00w16 IDy: IDy
0x56020014 B  REGISTER LPGPIO_ODR (rw): LPGPIO port output data register
0x56020014 C   FIELD 00w01 ODy0: ODy0
0x56020014 C   FIELD 01w01 ODy1: ODy1
0x56020014 C   FIELD 02w01 ODy2: ODy2
0x56020014 C   FIELD 03w01 ODy3: ODy3
0x56020014 C   FIELD 04w01 ODy4: ODy4
0x56020014 C   FIELD 05w01 ODy5: ODy5
0x56020014 C   FIELD 06w01 ODy6: ODy6
0x56020014 C   FIELD 07w01 ODy7: ODy7
0x56020014 C   FIELD 08w01 ODy8: ODy8
0x56020014 C   FIELD 09w01 ODy9: ODy9
0x56020014 C   FIELD 10w01 ODy10: ODy10
0x56020014 C   FIELD 11w01 ODy11: ODy11
0x56020014 C   FIELD 12w01 ODy12: ODy12
0x56020014 C   FIELD 13w01 ODy13: ODy13
0x56020014 C   FIELD 14w01 ODy14: ODy14
0x56020014 C   FIELD 15w01 ODy15: ODy15
0x56020018 B  REGISTER LPGPIO_BSRR (wo): LPGPIO port bit set/reset register
0x56020018 C   FIELD 00w01 BSy0: BSy0
0x56020018 C   FIELD 01w01 BSy1: BSy1
0x56020018 C   FIELD 02w01 BSy2: BSy2
0x56020018 C   FIELD 03w01 BSy3: BSy3
0x56020018 C   FIELD 04w01 BSy4: BSy4
0x56020018 C   FIELD 05w01 BSy5: BSy5
0x56020018 C   FIELD 06w01 BSy6: BSy6
0x56020018 C   FIELD 07w01 BSy7: BSy7
0x56020018 C   FIELD 08w01 BSy8: BSy8
0x56020018 C   FIELD 09w01 BSy9: BSy9
0x56020018 C   FIELD 10w01 BSy10: BSy10
0x56020018 C   FIELD 11w01 BSy11: BSy11
0x56020018 C   FIELD 12w01 BSy12: BSy12
0x56020018 C   FIELD 13w01 BSy13: BSy13
0x56020018 C   FIELD 14w01 BSy14: BSy14
0x56020018 C   FIELD 15w01 BSy15: BSy15
0x56020018 C   FIELD 16w01 BRy16: BRy16
0x56020018 C   FIELD 17w01 BRy17: BRy17
0x56020018 C   FIELD 18w01 BRy18: BRy18
0x56020018 C   FIELD 19w01 BRy19: BRy19
0x56020018 C   FIELD 20w01 BRy20: BRy20
0x56020018 C   FIELD 21w01 BRy21: BRy21
0x56020018 C   FIELD 22w01 BRy22: BRy22
0x56020018 C   FIELD 23w01 BRy23: BRy23
0x56020018 C   FIELD 24w01 BRy24: BRy24
0x56020018 C   FIELD 25w01 BRy25: BRy25
0x56020018 C   FIELD 26w01 BRy26: BRy26
0x56020018 C   FIELD 27w01 BRy27: BRy27
0x56020018 C   FIELD 28w01 BRy28: BRy28
0x56020018 C   FIELD 29w01 BRy29: BRy29
0x56020018 C   FIELD 30w01 BRy30: BRy30
0x56020018 C   FIELD 31w01 BRy31: BRy31
0x56020028 B  REGISTER LPGPIO_BRR (ro): LPGPIO port bit reset register
0x56020028 C   FIELD 00w01 BRy0: BRy0
0x56020028 C   FIELD 01w01 BRy1: BRy1
0x56020028 C   FIELD 02w01 BRy2: BRy2
0x56020028 C   FIELD 03w01 BRy3: BRy3
0x56020028 C   FIELD 04w01 BRy4: BRy4
0x56020028 C   FIELD 05w01 BRy5: BRy5
0x56020028 C   FIELD 06w01 BRy6: BRy6
0x56020028 C   FIELD 07w01 BRy7: BRy7
0x56020028 C   FIELD 08w01 BRy8: BRy8
0x56020028 C   FIELD 09w01 BRy9: BRy9
0x56020028 C   FIELD 10w01 BRy10: BRy10
0x56020028 C   FIELD 11w01 BRy11: BRy11
0x56020028 C   FIELD 12w01 BRy12: BRy12
0x56020028 C   FIELD 13w01 BRy13: BRy13
0x56020028 C   FIELD 14w01 BRy14: BRy14
0x56020028 C   FIELD 15w01 BRy15: BRy15
0x56020800 A PERIPHERAL SEC_PWR
0x56020800 B  REGISTER PWR_CR1: PWR control register 1
0x56020800 C   FIELD 00w03 LPMS (rw): Low-power mode selection These bits select the low-power mode entered when the CPU enters the Deepsleep mode. 10x: Standby mode (Standby mode also entered if LPMS = 11X in PWR_CR1 with BREN = 1 in PWR_BDCR1) 11x: Shutdown mode if BREN = 0 in PWR_BDCR1
0x56020800 C   FIELD 05w01 RRSB1 (rw): SRAM2 page 1 retention in Stop 3 and Standby modes This bit is used to keep the SRAM2 page 1 content in Stop 3 and Standby modes. The SRAM2 page 1 corresponds to the first 8 Kbytes of the SRAM2 (from SRAM2 base address to SRAM2 base address + 0x1FFF). Note: This bit has no effect in Shutdown mode.
0x56020800 C   FIELD 06w01 RRSB2 (rw): SRAM2 page 2 retention in Stop 3 and Standby modes This bit is used to keep the SRAM2 page 2 content in Stop 3 and Standby modes. The SRAM2 page 2 corresponds to the last 56 Kbytes of the SRAM2 (from SRAM2 base address + 0x2000 to SRAM2 base address + 0xFFFF). Note: This bit has no effect in Shutdown mode.
0x56020800 C   FIELD 07w01 ULPMEN (rw): BOR ultra-low power mode This bit is used to reduce the consumption by configuring the BOR in discontinuous mode. This bit must be set to reach the lowest power consumption in the low-power modes.
0x56020800 C   FIELD 08w01 SRAM1PD (rw): SRAM1 power down This bit is used to reduce the consumption by powering off the SRAM1.
0x56020800 C   FIELD 09w01 SRAM2PD (rw): SRAM2 power down This bit is used to reduce the consumption by powering off the SRAM2.
0x56020800 C   FIELD 10w01 SRAM3PD (rw): SRAM3 power down This bit is used to reduce the consumption by powering off the SRAM3.
0x56020800 C   FIELD 11w01 SRAM4PD (rw): SRAM4 power down This bit is used to reduce the consumption by powering off the SRAM4.
0x56020804 B  REGISTER PWR_CR2: PWR control register 2
0x56020804 C   FIELD 00w01 SRAM1PDS1 (rw): SRAM1 page 1 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 01w01 SRAM1PDS2 (rw): SRAM1 page 2 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 02w01 SRAM1PDS3 (rw): SRAM1 page 3 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 04w01 SRAM2PDS1 (rw): SRAM2 page 1 (8 Kbytes) power-down in Stop modes (Stop 0, 1, 2) Note: The SRAM2 page 1 retention in Stop 3 is controlled by RRSB1 bit in PWR_CR1.
0x56020804 C   FIELD 05w01 SRAM2PDS2 (rw): SRAM2 page 2 (56 Kbytes) power-down in Stop modes (Stop 0, 1, 2) Note: The SRAM2 page 2 retention in Stop 3 is controlled by RRSB2 bit in PWR_CR1.
0x56020804 C   FIELD 06w01 SRAM4PDS (rw): SRAM4 power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 08w01 ICRAMPDS (rw): ICACHE SRAM power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 09w01 DC1RAMPDS (rw): DCACHE1 SRAM power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 10w01 DMA2DRAMPDS (rw): DMA2D SRAM power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 11w01 PRAMPDS (rw): FMAC, FDCAN and USB peripherals SRAM power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 12w01 PKARAMPDS (rw): PKA SRAM power-down
0x56020804 C   FIELD 13w01 SRAM4FWU (rw): SRAM4 fast wakeup from Stop 0, Stop 1 and Stop 2 modes This bit is used to obtain the best trade-off between low-power consumption and wakeup time. SRAM4 wakeup time increases the wakeup time when exiting Stop 0, 1 and 2 modes, and also increases the LPDMA access time to SRAM4 during Stop modes.
0x56020804 C   FIELD 14w01 FLASHFWU (rw): Flash memory fast wakeup from Stop 0 and Stop 1 modes This bit is used to obtain the best trade-off between low-power consumption and wakeup time when exiting the Stop 0 or Stop 1 modes. When this bit is set, the Flash memory remains in normal mode in Stop 0 and Stop 1 modes, which offers a faster startup time with higher consumption.
0x56020804 C   FIELD 16w01 SRAM3PDS1 (rw): SRAM3 page 1 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 17w01 SRAM3PDS2 (rw): SRAM3 page 2 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 18w01 SRAM3PDS3 (rw): SRAM3 page 3 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 19w01 SRAM3PDS4 (rw): SRAM3 page 4 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 20w01 SRAM3PDS5 (rw): SRAM3 page 5 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 21w01 SRAM3PDS6 (rw): SRAM3 page 6 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 22w01 SRAM3PDS7 (rw): SRAM3 page 7 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 23w01 SRAM3PDS8 (rw): SRAM3 page 8 (64 Kbytes) power-down in Stop modes (Stop 0, 1, 2, 3)
0x56020804 C   FIELD 31w01 SRDRUN (rw): SmartRun domain in Run mode
0x56020808 B  REGISTER PWR_CR3: PWR control register 3
0x56020808 C   FIELD 01w01 REGSEL (rw): Regulator selection Note: REGSEL is reserved and must be kept at reset value in packages without SMPS.
0x56020808 C   FIELD 02w01 FSTEN (rw): Fast soft start
0x5602080C B  REGISTER PWR_VOSR: PWR voltage scaling register
0x5602080C C   FIELD 14w01 BOOSTRDY (ro): EPOD booster ready This bit is set to 1 by hardware when the power booster startup time is reached. The system clock frequency can be switched higher than 50 MHz only after this bit is set.
0x5602080C C   FIELD 15w01 VOSRDY (ro): Ready bit for VCORE voltage scaling output selection
0x5602080C C   FIELD 16w02 VOS (rw): Voltage scaling range selection This field is protected against non-secure access when SYSCLKSEC = 1 in RCC_SECCFGR. It is protected against unprivileged access when SYSCLKSEC = 1 in RCC_SECCFGR and SPRIV = 1 in PWR_PRIVCFGR, or when SYSCLKSEC = 0 and NSPRIV = 1.
0x5602080C C   FIELD 18w01 BOOSTEN (rw): EPOD booster enable
0x56020810 B  REGISTER PWR_SVMCR: PWR supply voltage monitoring control register
0x56020810 C   FIELD 04w01 PVDE (rw): Power voltage detector enable
0x56020810 C   FIELD 05w03 PVDLS (rw): Power voltage detector level selection These bits select the voltage threshold detected by the power voltage detector:
0x56020810 C   FIELD 24w01 UVMEN (rw): VDDUSB independent USB voltage monitor enable
0x56020810 C   FIELD 25w01 IO2VMEN (rw): VDDIO2 independent I/Os voltage monitor enable
0x56020810 C   FIELD 26w01 AVM1EN (rw): VDDA independent analog supply voltage monitor 1 enable (1.6 V threshold)
0x56020810 C   FIELD 27w01 AVM2EN (rw): VDDA independent analog supply voltage monitor 2 enable (1.8 V threshold)
0x56020810 C   FIELD 28w01 USV (rw): VDDUSB independent USB supply valid
0x56020810 C   FIELD 29w01 IO2SV (rw): VDDIO2 independent I/Os supply valid This bit is used to validate the VDDIO2 supply for electrical and logical isolation purpose. Setting this bit is mandatory to use PG[15:2]. If VDDIO2 is not always present in the application, the VDDIO2 voltage monitor can be used to determine whether this supply is ready or not.
0x56020810 C   FIELD 30w01 ASV (rw): VDDA independent analog supply valid
0x56020814 B  REGISTER PWR_WUCR1: PWR wakeup control register 1
0x56020814 C   FIELD 00w01 WUPEN1 (rw): Wakeup pin WKUP1 enable
0x56020814 C   FIELD 01w01 WUPEN2 (rw): Wakeup pin WKUP2 enable
0x56020814 C   FIELD 02w01 WUPEN3 (rw): Wakeup pin WKUP3 enable
0x56020814 C   FIELD 03w01 WUPEN4 (rw): Wakeup pin WKUP4 enable
0x56020814 C   FIELD 04w01 WUPEN5 (rw): Wakeup pin WKUP5 enable
0x56020814 C   FIELD 05w01 WUPEN6 (rw): Wakeup pin WKUP6 enable
0x56020814 C   FIELD 06w01 WUPEN7 (rw): Wakeup pin WKUP7 enable
0x56020814 C   FIELD 07w01 WUPEN8 (rw): Wakeup pin WKUP8 enable
0x56020818 B  REGISTER PWR_WUCR2: PWR wakeup control register 2
0x56020818 C   FIELD 00w01 WUPP1 (rw): Wakeup pin WKUP1 polarity. This bit must be configured when WUPEN1 = 0.
0x56020818 C   FIELD 01w01 WUPP2 (rw): Wakeup pin WKUP2 polarity This bit must be configured when WUPEN2 = 0.
0x56020818 C   FIELD 02w01 WUPP3 (rw): Wakeup pin WKUP3 polarity This bit must be configured when WUPEN3 = 0.
0x56020818 C   FIELD 03w01 WUPP4 (rw): Wakeup pin WKUP4 polarity This bit must be configured when WUPEN4 = 0.
0x56020818 C   FIELD 04w01 WUPP5 (rw): Wakeup pin WKUP5 polarity This bit must be configured when WUPEN5 = 0.
0x56020818 C   FIELD 05w01 WUPP6 (rw): Wakeup pin WKUP6 polarity This bit must be configured when WUPEN6 = 0.
0x56020818 C   FIELD 06w01 WUPP7 (rw): Wakeup pin WKUP7 polarity This bit must be configured when WUPEN7 = 0.
0x56020818 C   FIELD 07w01 WUPP8 (rw): Wakeup pin WKUP8 polarity This bit must be configured when WUPEN8 = 0.
0x5602081C B  REGISTER PWR_WUCR3: PWR wakeup control register 3
0x5602081C C   FIELD 00w02 WUSEL1 (rw): Wakeup pin WKUP1 selection This field must be configured when WUPEN1 = 0.
0x5602081C C   FIELD 02w02 WUSEL2 (rw): Wakeup pin WKUP2 selection This field must be configured when WUPEN2 = 0.
0x5602081C C   FIELD 04w02 WUSEL3 (rw): Wakeup pin WKUP3 selection This field must be configured when WUPEN3 = 0.
0x5602081C C   FIELD 06w02 WUSEL4 (rw): Wakeup pin WKUP4 selection This field must be configured when WUPEN4 = 0.
0x5602081C C   FIELD 08w02 WUSEL5 (rw): Wakeup pin WKUP5 selection This field must be configured when WUPEN5 = 0.
0x5602081C C   FIELD 10w02 WUSEL6 (rw): Wakeup pin WKUP6 selection This field must be configured when WUPEN6 = 0.
0x5602081C C   FIELD 12w02 WUSEL7 (rw): Wakeup pin WKUP7 selection This field must be configured when WUPEN7 = 0.
0x5602081C C   FIELD 14w02 WUSEL8 (rw): Wakeup pin WKUP8 selection This field must be configured when WUPEN8 = 0.
0x56020820 B  REGISTER PWR_BDCR1: PWR Backup domain control register 1
0x56020820 C   FIELD 00w01 BREN (rw): Backup RAM retention in Standby and VBAT modes When this bit is set, the backup RAM content is kept in Standby and VBAT modes. If BREN is reset, the backup RAM can still be used in Run, Sleep and Stop modes. However, its content is lost in Standby, Shutdown and VBAT modes. This bit can be written only when the regulator is LDO, which must be configured before switching to SMPS. Note: Backup RAM cannot be preserved in Shutdown mode.
0x56020820 C   FIELD 04w01 MONEN (rw): Backup domain voltage and temperature monitoring enable
0x56020824 B  REGISTER PWR_BDCR2: PWR Backup domain control register 2
0x56020824 C   FIELD 00w01 VBE (rw): VBAT charging enable
0x56020824 C   FIELD 01w01 VBRS (rw): VBAT charging resistor selection
0x56020828 B  REGISTER PWR_DBPR: PWR disable Backup domain register
0x56020828 C   FIELD 00w01 DBP (rw): Disable Backup domain write protection In reset state, all registers and SRAM in Backup domain are protected against parasitic write access. This bit must be set to enable the write access to these registers.
0x5602082C B  REGISTER PWR_UCPDR: PWR USB Type-C™ and Power Delivery register
0x5602082C C   FIELD 00w01 UCPD_DBDIS (rw): UCPD dead battery disable After exiting reset, the USB Type-C “dead battery” behavior is enabled, which may have a pull-down effect on CC1 and CC2 pins. It is recommended to disable it in all cases, either to stop this pull-down or to handover control to the UCPD (the UCPD must be initialized before doing the disable).
0x5602082C C   FIELD 01w01 UCPD_STBY (rw): UCPD Standby mode When set, this bit is used to memorize the UCPD configuration in Standby mode. This bit must be written to 1 just before entering Standby mode when using UCPD. It must be written to 0 after exiting the Standby mode and before writing any UCPD registers.
0x56020830 B  REGISTER PWR_SECCFGR: PWR security configuration register
0x56020830 C   FIELD 00w01 WUP1SEC (rw): WUP1 secure protection
0x56020830 C   FIELD 01w01 WUP2SEC (rw): WUP2 secure protection
0x56020830 C   FIELD 02w01 WUP3SEC (rw): WUP3 secure protection
0x56020830 C   FIELD 03w01 WUP4SEC (rw): WUP4 secure protection
0x56020830 C   FIELD 04w01 WUP5SEC (rw): WUP5 secure protection
0x56020830 C   FIELD 05w01 WUP6SEC (rw): WUP6 secure protection
0x56020830 C   FIELD 06w01 WUP7SEC (rw): WUP7 secure protection
0x56020830 C   FIELD 07w01 WUP8SEC (rw): WUP8 secure protection
0x56020830 C   FIELD 12w01 LPMSEC (rw): Low-power modes secure protection
0x56020830 C   FIELD 13w01 VDMSEC (rw): Voltage detection and monitoring secure protection
0x56020830 C   FIELD 14w01 VBSEC (rw): Backup domain secure protection
0x56020830 C   FIELD 15w01 APCSEC (rw): Pull-up/pull-down secure protection
0x56020834 B  REGISTER PWR_PRIVCFGR: PWR privilege control register
0x56020834 C   FIELD 00w01 SPRIV (rw): PWR secure functions privilege configuration This bit is set and reset by software. It can be written only by a secure privileged access.
0x56020834 C   FIELD 01w01 NSPRIV (rw): PWR non-secure functions privilege configuration This bit is set and reset by software. It can be written only by privileged access, secure or non-secure.
0x56020838 B  REGISTER PWR_SR: PWR status register
0x56020838 C   FIELD 00w01 CSSF (wo): Clear Stop and Standby flags This bit is protected against non-secure access when LPMSEC = 1 in PWR_SECCFGR. This bit is protected against unprivileged access when LPMSEC = 1 and SPRIV = 1 in PWR_PRIVCFGR, or when LPMSEC = 0 and NSPRIV = 1. Writing 1 to this bit clears the STOPF and SBF flags.
0x56020838 C   FIELD 01w01 STOPF (ro): Stop flag This bit is set by hardware when the device enters a Stop mode, and is cleared by software by writing 1 to the CSSF bit.
0x56020838 C   FIELD 02w01 SBF (ro): Standby flag This bit is set by hardware when the device enters the Standby mode, and is cleared by writing 1 to the CSSF bit, or by a power-on reset. It is not cleared by the system reset.
0x5602083C B  REGISTER PWR_SVMSR: 
0x5602083C C   FIELD 01w01 REGS (ro): Regulator selection
0x5602083C C   FIELD 04w01 PVDO (ro): VDD voltage detector output
0x5602083C C   FIELD 15w01 ACTVOSRDY (ro): Voltage level ready for currently used VOS
0x5602083C C   FIELD 16w02 ACTVOS (ro): VOS currently applied to VCORE This field provides the last VOS value.
0x5602083C C   FIELD 24w01 VDDUSBRDY (ro): VDDUSB ready
0x5602083C C   FIELD 25w01 VDDIO2RDY (ro): VDDIO2 ready
0x5602083C C   FIELD 26w01 VDDA1RDY (ro): VDDA ready versus 1.6V voltage monitor
0x5602083C C   FIELD 27w01 VDDA2RDY (ro): VDDA ready versus 1.8 V voltage monitor
0x56020840 B  REGISTER PWR_BDSR: PWR Backup domain status register
0x56020840 C   FIELD 01w01 VBATH (ro): Backup domain voltage level monitoring versus high threshold
0x56020840 C   FIELD 02w01 TEMPL (ro): Temperature level monitoring versus low threshold
0x56020840 C   FIELD 03w01 TEMPH (ro): Temperature level monitoring versus high threshold
0x56020844 B  REGISTER PWR_WUSR: PWR wakeup status register
0x56020844 C   FIELD 00w01 WUF1 (ro): Wakeup flag 1 This bit is set when a wakeup event is detected on WKUP1 pin. This bit is cleared by writing 1 in the CWUF1 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN1 = 0.
0x56020844 C   FIELD 01w01 WUF2 (ro): Wakeup flag 2 This bit is set when a wakeup event is detected on WKUP2 pin. This bit is cleared by writing 1 in the CWUF2 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN2 = 0.
0x56020844 C   FIELD 02w01 WUF3 (ro): Wakeup flag 3 This bit is set when a wakeup event is detected on WKUP3 pin. This bit is cleared by writing 1 in the CWUF3 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN3 = 0.
0x56020844 C   FIELD 03w01 WUF4 (ro): Wakeup flag 4 This bit is set when a wakeup event is detected on WKUP4 pin. This bit is cleared by writing 1 in the CWUF4 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN4 = 0.
0x56020844 C   FIELD 04w01 WUF5 (ro): Wakeup flag 5 This bit is set when a wakeup event is detected on WKUP5 pin. This bit is cleared by writing 1 in the CWUF5 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN5 = 0.
0x56020844 C   FIELD 05w01 WUF6 (ro): Wakeup flag 6 This bit is set when a wakeup event is detected on WKUP6 pin. This bit is cleared by writing 1 in the CWUF6 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN6 = 0. If WUSEL = 11, this bit is cleared by hardware when all internal wakeup source are cleared.
0x56020844 C   FIELD 06w01 WUF7 (ro): Wakeup flag 7 This bit is set when a wakeup event is detected on WKUP7 pin. This bit is cleared by writing 1 in the CWUF7 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN7 = 0. If WUSEL = 11, this bit is cleared by hardware when all internal wakeup source are cleared.
0x56020844 C   FIELD 07w01 WUF8 (ro): Wakeup flag 8 This bit is set when a wakeup event is detected on WKUP8 pin. This bit is cleared by writing 1 in the CWUF8 bit of PWR_WUSCR when WUSEL ≠ 11, or by hardware when WUPEN8 = 0. If WUSEL = 11, this bit is cleared by hardware when all internal wakeup source are cleared.
0x56020848 B  REGISTER PWR_WUSCR: PWR wakeup status clear register
0x56020848 C   FIELD 00w01 CWUF1 (wo): Wakeup flag 1 Writing 1 to this bit clears the WUF1 flag in PWR_WUSR.
0x56020848 C   FIELD 01w01 CWUF2 (wo): Wakeup flag 2 Writing 1 to this bit clears the WUF2 flag in PWR_WUSR.
0x56020848 C   FIELD 02w01 CWUF3 (wo): Wakeup flag 3 Writing 1 to this bit clears the WUF3 flag in PWR_WUSR.
0x56020848 C   FIELD 03w01 CWUF4 (wo): Wakeup flag 4 Writing 1 to this bit clears the WUF4 flag in PWR_WUSR.
0x56020848 C   FIELD 04w01 CWUF5 (wo): Wakeup flag 5 Writing 1 to this bit clears the WUF5 flag in PWR_WUSR.
0x56020848 C   FIELD 05w01 CWUF6 (wo): Wakeup flag 6 Writing 1 to this bit clears the WUF6 flag in PWR_WUSR.
0x56020848 C   FIELD 06w01 CWUF7 (wo): Wakeup flag 7 Writing 1 to this bit clears the WUF7 flag in PWR_WUSR.
0x56020848 C   FIELD 07w01 CWUF8 (wo): Wakeup flag 8 Writing 1 to this bit clears the WUF8 flag in PWR_WUSR.
0x5602084C B  REGISTER PWR_APCR: PWR apply pull configuration register
0x5602084C C   FIELD 00w01 APC (rw): Apply pull-up and pull-down configuration When this bit is set, the I/O pull-up and pull-down configurations defined in PWR_PUCRx and PWR_PDCRx are applied. When this bit is cleared, PWR_PUCRx and PWR_PDCRx are not applied to the I/Os.
0x56020850 B  REGISTER PWR_PUCRA: PWR port A pull-up control register
0x56020850 C   FIELD 00w01 PU0 (rw): Port A pull-up bit
0x56020850 C   FIELD 01w01 PU1 (rw): Port A pull-up bit
0x56020850 C   FIELD 02w01 PU2 (rw): Port A pull-up bit
0x56020850 C   FIELD 03w01 PU3 (rw): Port A pull-up bit
0x56020850 C   FIELD 04w01 PU4 (rw): Port A pull-up bit
0x56020850 C   FIELD 05w01 PU5 (rw): Port A pull-up bit
0x56020850 C   FIELD 06w01 PU6 (rw): Port A pull-up bit
0x56020850 C   FIELD 07w01 PU7 (rw): Port A pull-up bit
0x56020850 C   FIELD 08w01 PU8 (rw): Port A pull-up bit
0x56020850 C   FIELD 09w01 PU9 (rw): Port A pull-up bit
0x56020850 C   FIELD 10w01 PU10 (rw): Port A pull-up bit
0x56020850 C   FIELD 11w01 PU11 (rw): Port A pull-up bit
0x56020850 C   FIELD 12w01 PU12 (rw): Port A pull-up bit
0x56020850 C   FIELD 13w01 PU13 (rw): Port A pull-up bit
0x56020850 C   FIELD 15w01 PU15 (rw): Port A pull-up bit 15 When set, this bit activates the pull-up on PA15 when the APC bit is set in PWR_APCR. The pull-up is not activated if the corresponding PD15 bit is also set.
0x56020854 B  REGISTER PWR_PDCRA: PWR port A pull-down control register
0x56020854 C   FIELD 00w01 PD0 (rw): Port A pull-down bit
0x56020854 C   FIELD 01w01 PD1 (rw): Port A pull-down bit
0x56020854 C   FIELD 02w01 PD2 (rw): Port A pull-down bit
0x56020854 C   FIELD 03w01 PD3 (rw): Port A pull-down bit
0x56020854 C   FIELD 04w01 PD4 (rw): Port A pull-down bit
0x56020854 C   FIELD 05w01 PD5 (rw): Port A pull-down bit
0x56020854 C   FIELD 06w01 PD6 (rw): Port A pull-down bit
0x56020854 C   FIELD 07w01 PD7 (rw): Port A pull-down bit
0x56020854 C   FIELD 08w01 PD8 (rw): Port A pull-down bit
0x56020854 C   FIELD 09w01 PD9 (rw): Port A pull-down bit
0x56020854 C   FIELD 10w01 PD10 (rw): Port A pull-down bit
0x56020854 C   FIELD 11w01 PD11 (rw): Port A pull-down bit
0x56020854 C   FIELD 12w01 PD12 (rw): Port A pull-down bit
0x56020854 C   FIELD 14w01 PD14 (rw): Port A pull-down bit
0x56020858 B  REGISTER PWR_PUCRB: PWR port B pull-up control register
0x56020858 C   FIELD 00w01 PU0 (rw): Port B pull-up bit
0x56020858 C   FIELD 01w01 PU1 (rw): Port B pull-up bit
0x56020858 C   FIELD 02w01 PU2 (rw): Port B pull-up bit
0x56020858 C   FIELD 03w01 PU3 (rw): Port B pull-up bit
0x56020858 C   FIELD 04w01 PU4 (rw): Port B pull-up bit
0x56020858 C   FIELD 05w01 PU5 (rw): Port B pull-up bit
0x56020858 C   FIELD 06w01 PU6 (rw): Port B pull-up bit
0x56020858 C   FIELD 07w01 PU7 (rw): Port B pull-up bit
0x56020858 C   FIELD 08w01 PU8 (rw): Port B pull-up bit
0x56020858 C   FIELD 09w01 PU9 (rw): Port B pull-up bit
0x56020858 C   FIELD 10w01 PU10 (rw): Port B pull-up bit
0x56020858 C   FIELD 11w01 PU11 (rw): Port B pull-up bit
0x56020858 C   FIELD 12w01 PU12 (rw): Port B pull-up bit
0x56020858 C   FIELD 13w01 PU13 (rw): Port B pull-up bit
0x56020858 C   FIELD 14w01 PU14 (rw): Port B pull-up bit
0x56020858 C   FIELD 15w01 PU15 (rw): Port B pull-up bit
0x5602085C B  REGISTER PWR_PDCRB: PWR port B pull-down control register
0x5602085C C   FIELD 00w01 PD0 (rw): Port B pull-down bit
0x5602085C C   FIELD 01w01 PD1 (rw): Port B pull-down bit
0x5602085C C   FIELD 02w01 PD2 (rw): Port B pull-down bit
0x5602085C C   FIELD 03w01 PD3 (rw): Port B pull-down bit
0x5602085C C   FIELD 05w01 PD5 (rw): Port B pull-down bit
0x5602085C C   FIELD 06w01 PD6 (rw): Port B pull-down bit
0x5602085C C   FIELD 07w01 PD7 (rw): Port B pull-down bit
0x5602085C C   FIELD 08w01 PD8 (rw): Port B pull-down bit
0x5602085C C   FIELD 09w01 PD9 (rw): Port B pull-down bit
0x5602085C C   FIELD 10w01 PD10 (rw): Port B pull-down bit
0x5602085C C   FIELD 11w01 PD11 (rw): Port B pull-down bit
0x5602085C C   FIELD 12w01 PD12 (rw): Port B pull-down bit
0x5602085C C   FIELD 13w01 PD13 (rw): Port B pull-down bit
0x5602085C C   FIELD 14w01 PD14 (rw): Port B pull-down bit
0x5602085C C   FIELD 15w01 PD15 (rw): Port B pull-down bit
0x56020860 B  REGISTER PWR_PUCRC: PWR port C pull-up control register
0x56020860 C   FIELD 00w01 PU0 (rw): Port C pull-up bit
0x56020860 C   FIELD 01w01 PU1 (rw): Port C pull-up bit
0x56020860 C   FIELD 02w01 PU2 (rw): Port C pull-up bit
0x56020860 C   FIELD 03w01 PU3 (rw): Port C pull-up bit
0x56020860 C   FIELD 04w01 PU4 (rw): Port C pull-up bit
0x56020860 C   FIELD 05w01 PU5 (rw): Port C pull-up bit
0x56020860 C   FIELD 06w01 PU6 (rw): Port C pull-up bit
0x56020860 C   FIELD 07w01 PU7 (rw): Port C pull-up bit
0x56020860 C   FIELD 08w01 PU8 (rw): Port C pull-up bit
0x56020860 C   FIELD 09w01 PU9 (rw): Port C pull-up bit
0x56020860 C   FIELD 10w01 PU10 (rw): Port C pull-up bit
0x56020860 C   FIELD 11w01 PU11 (rw): Port C pull-up bit
0x56020860 C   FIELD 12w01 PU12 (rw): Port C pull-up bit
0x56020860 C   FIELD 13w01 PU13 (rw): Port C pull-up bit
0x56020860 C   FIELD 14w01 PU14 (rw): Port C pull-up bit
0x56020860 C   FIELD 15w01 PU15 (rw): Port C pull-up bit
0x56020864 B  REGISTER PWR_PDCRC: PWR port C pull-down control register
0x56020864 C   FIELD 00w01 PD0 (rw): Port C pull-down bit
0x56020864 C   FIELD 01w01 PD1 (rw): Port C pull-down bit
0x56020864 C   FIELD 02w01 PD2 (rw): Port C pull-down bit
0x56020864 C   FIELD 03w01 PD3 (rw): Port C pull-down bit
0x56020864 C   FIELD 04w01 PD4 (rw): Port C pull-down bit
0x56020864 C   FIELD 05w01 PD5 (rw): Port C pull-down bit
0x56020864 C   FIELD 06w01 PD6 (rw): Port C pull-down bit
0x56020864 C   FIELD 07w01 PD7 (rw): Port C pull-down bit
0x56020864 C   FIELD 08w01 PD8 (rw): Port C pull-down bit
0x56020864 C   FIELD 09w01 PD9 (rw): Port C pull-down bit
0x56020864 C   FIELD 10w01 PD10 (rw): Port C pull-down bit
0x56020864 C   FIELD 11w01 PD11 (rw): Port C pull-down bit
0x56020864 C   FIELD 12w01 PD12 (rw): Port C pull-down bit
0x56020864 C   FIELD 13w01 PD13 (rw): Port C pull-down bit
0x56020864 C   FIELD 14w01 PD14 (rw): Port C pull-down bit
0x56020864 C   FIELD 15w01 PD15 (rw): Port C pull-down bit
0x56020868 B  REGISTER PWR_PUCRD: PWR port D pull-up control register
0x56020868 C   FIELD 00w01 PU0 (rw): Port D pull-up bit
0x56020868 C   FIELD 01w01 PU1 (rw): Port D pull-up bit
0x56020868 C   FIELD 02w01 PU2 (rw): Port D pull-up bit
0x56020868 C   FIELD 03w01 PU3 (rw): Port D pull-up bit
0x56020868 C   FIELD 04w01 PU4 (rw): Port D pull-up bit
0x56020868 C   FIELD 05w01 PU5 (rw): Port D pull-up bit
0x56020868 C   FIELD 06w01 PU6 (rw): Port D pull-up bit
0x56020868 C   FIELD 07w01 PU7 (rw): Port D pull-up bit
0x56020868 C   FIELD 08w01 PU8 (rw): Port D pull-up bit
0x56020868 C   FIELD 09w01 PU9 (rw): Port D pull-up bit
0x56020868 C   FIELD 10w01 PU10 (rw): Port D pull-up bit
0x56020868 C   FIELD 11w01 PU11 (rw): Port D pull-up bit
0x56020868 C   FIELD 12w01 PU12 (rw): Port D pull-up bit
0x56020868 C   FIELD 13w01 PU13 (rw): Port D pull-up bit
0x56020868 C   FIELD 14w01 PU14 (rw): Port D pull-up bit
0x56020868 C   FIELD 15w01 PU15 (rw): Port D pull-up bit
0x5602086C B  REGISTER PWR_PDCRD: PWR port D pull-down control register
0x5602086C C   FIELD 00w01 PD0 (rw): Port D pull-down bit
0x5602086C C   FIELD 01w01 PD1 (rw): Port D pull-down bit
0x5602086C C   FIELD 02w01 PD2 (rw): Port D pull-down bit
0x5602086C C   FIELD 03w01 PD3 (rw): Port D pull-down bit
0x5602086C C   FIELD 04w01 PD4 (rw): Port D pull-down bit
0x5602086C C   FIELD 05w01 PD5 (rw): Port D pull-down bit
0x5602086C C   FIELD 06w01 PD6 (rw): Port D pull-down bit
0x5602086C C   FIELD 07w01 PD7 (rw): Port D pull-down bit
0x5602086C C   FIELD 08w01 PD8 (rw): Port D pull-down bit
0x5602086C C   FIELD 09w01 PD9 (rw): Port D pull-down bit
0x5602086C C   FIELD 10w01 PD10 (rw): Port D pull-down bit
0x5602086C C   FIELD 11w01 PD11 (rw): Port D pull-down bit
0x5602086C C   FIELD 12w01 PD12 (rw): Port D pull-down bit
0x5602086C C   FIELD 13w01 PD13 (rw): Port D pull-down bit
0x5602086C C   FIELD 14w01 PD14 (rw): Port D pull-down bit
0x5602086C C   FIELD 15w01 PD15 (rw): Port D pull-down bit
0x56020870 B  REGISTER PWR_PUCRE: PWR port E pull-up control register
0x56020870 C   FIELD 00w01 PU0 (rw): Port E pull-up bit
0x56020870 C   FIELD 01w01 PU1 (rw): Port E pull-up bit
0x56020870 C   FIELD 02w01 PU2 (rw): Port E pull-up bit
0x56020870 C   FIELD 03w01 PU3 (rw): Port E pull-up bit
0x56020870 C   FIELD 04w01 PU4 (rw): Port E pull-up bit
0x56020870 C   FIELD 05w01 PU5 (rw): Port E pull-up bit
0x56020870 C   FIELD 06w01 PU6 (rw): Port E pull-up bit
0x56020870 C   FIELD 07w01 PU7 (rw): Port E pull-up bit
0x56020870 C   FIELD 08w01 PU8 (rw): Port E pull-up bit
0x56020870 C   FIELD 09w01 PU9 (rw): Port E pull-up bit
0x56020870 C   FIELD 10w01 PU10 (rw): Port E pull-up bit
0x56020870 C   FIELD 11w01 PU11 (rw): Port E pull-up bit
0x56020870 C   FIELD 12w01 PU12 (rw): Port E pull-up bit
0x56020870 C   FIELD 13w01 PU13 (rw): Port E pull-up bit
0x56020870 C   FIELD 14w01 PU14 (rw): Port E pull-up bit
0x56020870 C   FIELD 15w01 PU15 (rw): Port E pull-up bit
0x56020874 B  REGISTER PWR_PDCRE: PWR port E pull-down control register
0x56020874 C   FIELD 00w01 PD0 (rw): Port E pull-down bit
0x56020874 C   FIELD 01w01 PD1 (rw): Port E pull-down bit
0x56020874 C   FIELD 02w01 PD2 (rw): Port E pull-down bit
0x56020874 C   FIELD 03w01 PD3 (rw): Port E pull-down bit
0x56020874 C   FIELD 04w01 PD4 (rw): Port E pull-down bit
0x56020874 C   FIELD 05w01 PD5 (rw): Port E pull-down bit
0x56020874 C   FIELD 06w01 PD6 (rw): Port E pull-down bit
0x56020874 C   FIELD 07w01 PD7 (rw): Port E pull-down bit
0x56020874 C   FIELD 08w01 PD8 (rw): Port E pull-down bit
0x56020874 C   FIELD 09w01 PD9 (rw): Port E pull-down bit
0x56020874 C   FIELD 10w01 PD10 (rw): Port E pull-down bit
0x56020874 C   FIELD 11w01 PD11 (rw): Port E pull-down bit
0x56020874 C   FIELD 12w01 PD12 (rw): Port E pull-down bit
0x56020874 C   FIELD 13w01 PD13 (rw): Port E pull-down bit
0x56020874 C   FIELD 14w01 PD14 (rw): Port E pull-down bit
0x56020874 C   FIELD 15w01 PD15 (rw): Port E pull-down bit
0x56020878 B  REGISTER PWR_PUCRF: PWR port F pull-up control register
0x56020878 C   FIELD 00w01 PU0 (rw): Port F pull-up bit
0x56020878 C   FIELD 01w01 PU1 (rw): Port F pull-up bit
0x56020878 C   FIELD 02w01 PU2 (rw): Port F pull-up bit
0x56020878 C   FIELD 03w01 PU3 (rw): Port F pull-up bit
0x56020878 C   FIELD 04w01 PU4 (rw): Port F pull-up bit
0x56020878 C   FIELD 05w01 PU5 (rw): Port F pull-up bit
0x56020878 C   FIELD 06w01 PU6 (rw): Port F pull-up bit
0x56020878 C   FIELD 07w01 PU7 (rw): Port F pull-up bit
0x56020878 C   FIELD 08w01 PU8 (rw): Port F pull-up bit
0x56020878 C   FIELD 09w01 PU9 (rw): Port F pull-up bit
0x56020878 C   FIELD 10w01 PU10 (rw): Port F pull-up bit
0x56020878 C   FIELD 11w01 PU11 (rw): Port F pull-up bit
0x56020878 C   FIELD 12w01 PU12 (rw): Port F pull-up bit
0x56020878 C   FIELD 13w01 PU13 (rw): Port F pull-up bit
0x56020878 C   FIELD 14w01 PU14 (rw): Port F pull-up bit
0x56020878 C   FIELD 15w01 PU15 (rw): Port F pull-up bit
0x5602087C B  REGISTER PWR_PDCRF: PWR port F pull-down control register
0x5602087C C   FIELD 00w01 PD0 (rw): Port F pull-down bit
0x5602087C C   FIELD 01w01 PD1 (rw): Port F pull-down bit
0x5602087C C   FIELD 02w01 PD2 (rw): Port F pull-down bit
0x5602087C C   FIELD 03w01 PD3 (rw): Port F pull-down bit
0x5602087C C   FIELD 04w01 PD4 (rw): Port F pull-down bit
0x5602087C C   FIELD 05w01 PD5 (rw): Port F pull-down bit
0x5602087C C   FIELD 06w01 PD6 (rw): Port F pull-down bit
0x5602087C C   FIELD 07w01 PD7 (rw): Port F pull-down bit
0x5602087C C   FIELD 08w01 PD8 (rw): Port F pull-down bit
0x5602087C C   FIELD 09w01 PD9 (rw): Port F pull-down bit
0x5602087C C   FIELD 10w01 PD10 (rw): Port F pull-down bit
0x5602087C C   FIELD 11w01 PD11 (rw): Port F pull-down bit
0x5602087C C   FIELD 12w01 PD12 (rw): Port F pull-down bit
0x5602087C C   FIELD 13w01 PD13 (rw): Port F pull-down bit
0x5602087C C   FIELD 14w01 PD14 (rw): Port F pull-down bit
0x5602087C C   FIELD 15w01 PD15 (rw): Port F pull-down bit
0x56020880 B  REGISTER PWR_PUCRG: PWR port G pull-up control register
0x56020880 C   FIELD 00w01 PU0 (rw): Port G pull-up bit
0x56020880 C   FIELD 01w01 PU1 (rw): Port G pull-up bit
0x56020880 C   FIELD 02w01 PU2 (rw): Port G pull-up bit
0x56020880 C   FIELD 03w01 PU3 (rw): Port G pull-up bit
0x56020880 C   FIELD 04w01 PU4 (rw): Port G pull-up bit
0x56020880 C   FIELD 05w01 PU5 (rw): Port G pull-up bit
0x56020880 C   FIELD 06w01 PU6 (rw): Port G pull-up bit
0x56020880 C   FIELD 07w01 PU7 (rw): Port G pull-up bit
0x56020880 C   FIELD 08w01 PU8 (rw): Port G pull-up bit
0x56020880 C   FIELD 09w01 PU9 (rw): Port G pull-up bit
0x56020880 C   FIELD 10w01 PU10 (rw): Port G pull-up bit
0x56020880 C   FIELD 11w01 PU11 (rw): Port G pull-up bit
0x56020880 C   FIELD 12w01 PU12 (rw): Port G pull-up bit
0x56020880 C   FIELD 13w01 PU13 (rw): Port G pull-up bit
0x56020880 C   FIELD 14w01 PU14 (rw): Port G pull-up bit
0x56020880 C   FIELD 15w01 PU15 (rw): Port G pull-up bit
0x56020884 B  REGISTER PWR_PDCRG: PWR port G pull-down control register
0x56020884 C   FIELD 00w01 PD0 (rw): Port G pull-down bit
0x56020884 C   FIELD 01w01 PD1 (rw): Port G pull-down bit
0x56020884 C   FIELD 02w01 PD2 (rw): Port G pull-down bit
0x56020884 C   FIELD 03w01 PD3 (rw): Port G pull-down bit
0x56020884 C   FIELD 04w01 PD4 (rw): Port G pull-down bit
0x56020884 C   FIELD 05w01 PD5 (rw): Port G pull-down bit
0x56020884 C   FIELD 06w01 PD6 (rw): Port G pull-down bit
0x56020884 C   FIELD 07w01 PD7 (rw): Port G pull-down bit
0x56020884 C   FIELD 08w01 PD8 (rw): Port G pull-down bit
0x56020884 C   FIELD 09w01 PD9 (rw): Port G pull-down bit
0x56020884 C   FIELD 10w01 PD10 (rw): Port G pull-down bit
0x56020884 C   FIELD 11w01 PD11 (rw): Port G pull-down bit
0x56020884 C   FIELD 12w01 PD12 (rw): Port G pull-down bit
0x56020884 C   FIELD 13w01 PD13 (rw): Port G pull-down bit
0x56020884 C   FIELD 14w01 PD14 (rw): Port G pull-down bit
0x56020884 C   FIELD 15w01 PD15 (rw): Port G pull-down bit
0x56020888 B  REGISTER PWR_PUCRH: PWR port H pull-up control register
0x56020888 C   FIELD 00w01 PU0 (rw): Port H pull-up bit
0x56020888 C   FIELD 01w01 PU1 (rw): Port H pull-up bit
0x56020888 C   FIELD 02w01 PU2 (rw): Port H pull-up bit
0x56020888 C   FIELD 03w01 PU3 (rw): Port H pull-up bit
0x56020888 C   FIELD 04w01 PU4 (rw): Port H pull-up bit
0x56020888 C   FIELD 05w01 PU5 (rw): Port H pull-up bit
0x56020888 C   FIELD 06w01 PU6 (rw): Port H pull-up bit
0x56020888 C   FIELD 07w01 PU7 (rw): Port H pull-up bit
0x56020888 C   FIELD 08w01 PU8 (rw): Port H pull-up bit
0x56020888 C   FIELD 09w01 PU9 (rw): Port H pull-up bit
0x56020888 C   FIELD 10w01 PU10 (rw): Port H pull-up bit
0x56020888 C   FIELD 11w01 PU11 (rw): Port H pull-up bit
0x56020888 C   FIELD 12w01 PU12 (rw): Port H pull-up bit
0x56020888 C   FIELD 13w01 PU13 (rw): Port H pull-up bit
0x56020888 C   FIELD 14w01 PU14 (rw): Port H pull-up bit
0x56020888 C   FIELD 15w01 PU15 (rw): Port H pull-up bit
0x5602088C B  REGISTER PWR_PDCRH: PWR port H pull-down control register
0x5602088C C   FIELD 00w01 PD0 (rw): Port H pull-down bit
0x5602088C C   FIELD 01w01 PD1 (rw): Port H pull-down bit
0x5602088C C   FIELD 02w01 PD2 (rw): Port H pull-down bit
0x5602088C C   FIELD 03w01 PD3 (rw): Port H pull-down bit
0x5602088C C   FIELD 04w01 PD4 (rw): Port H pull-down bit
0x5602088C C   FIELD 05w01 PD5 (rw): Port H pull-down bit
0x5602088C C   FIELD 06w01 PD6 (rw): Port H pull-down bit
0x5602088C C   FIELD 07w01 PD7 (rw): Port H pull-down bit
0x5602088C C   FIELD 08w01 PD8 (rw): Port H pull-down bit
0x5602088C C   FIELD 09w01 PD9 (rw): Port H pull-down bit
0x5602088C C   FIELD 10w01 PD10 (rw): Port H pull-down bit
0x5602088C C   FIELD 11w01 PD11 (rw): Port H pull-down bit
0x5602088C C   FIELD 12w01 PD12 (rw): Port H pull-down bit
0x5602088C C   FIELD 13w01 PD13 (rw): Port H pull-down bit
0x5602088C C   FIELD 14w01 PD14 (rw): Port H pull-down bit
0x5602088C C   FIELD 15w01 PD15 (rw): Port H pull-down bit
0x56020890 B  REGISTER PWR_PUCRI: PWR port I pull-up control register
0x56020890 C   FIELD 00w01 PU0 (rw): Port I pull-up bit
0x56020890 C   FIELD 01w01 PU1 (rw): Port I pull-up bit
0x56020890 C   FIELD 02w01 PU2 (rw): Port I pull-up bit
0x56020890 C   FIELD 03w01 PU3 (rw): Port I pull-up bit
0x56020890 C   FIELD 04w01 PU4 (rw): Port I pull-up bit
0x56020890 C   FIELD 05w01 PU5 (rw): Port I pull-up bit
0x56020890 C   FIELD 06w01 PU6 (rw): Port I pull-up bit
0x56020890 C   FIELD 07w01 PU7 (rw): Port I pull-up bit
0x56020894 B  REGISTER PWR_PDCRI: PWR port I pull-down control register
0x56020894 C   FIELD 00w01 PD0 (rw): Port I pull-down bit
0x56020894 C   FIELD 01w01 PD1 (rw): Port I pull-down bit
0x56020894 C   FIELD 02w01 PD2 (rw): Port I pull-down bit
0x56020894 C   FIELD 03w01 PD3 (rw): Port I pull-down bit
0x56020894 C   FIELD 04w01 PD4 (rw): Port I pull-down bit
0x56020894 C   FIELD 05w01 PD5 (rw): Port I pull-down bit
0x56020894 C   FIELD 06w01 PD6 (rw): Port I pull-down bit
0x56020894 C   FIELD 07w01 PD7 (rw): Port I pull-down bit
0x56020C00 A PERIPHERAL SEC_RCC
0x56020C00 B  REGISTER RCC_CR: RCC clock control register
0x56020C00 C   FIELD 00w01 MSISON (rw): MSIS clock enable Set and cleared by software. Cleared by hardware to stop the MSIS oscillator when entering Stop, Standby or Shutdown mode. Set by hardware to force the MSIS oscillator ON when exiting Standby or Shutdown mode. Set by hardware to force the MSIS oscillator ON when STOPWUCK = 0 when exiting Stop modes or in case of a failure of the HSE oscillator. Set by hardware when used directly or indirectly as system clock.
0x56020C00 C   FIELD 01w01 MSIKERON (rw): MSI enable for some peripheral kernels Set and cleared by software to force MSI ON even in Stop modes. Keeping the MSI ON in Stop mode allows the communication speed not to be reduced by the MSI startup time. This bit has no effect on MSISON and MSIKON values (see autonomous mode for more details). The MSIKERON must be configured at 0 before entering Stop 3 mode.
0x56020C00 C   FIELD 02w01 MSISRDY (ro): MSIS clock ready flag Set by hardware to indicate that the MSIS oscillator is stable. This bit is set only when MSIS is enabled by software by setting MSISON. Note: Once the MSISON bit is cleared, MSISRDY goes low after six MSIS clock cycles.
0x56020C00 C   FIELD 03w01 MSIPLLEN (rw): MSI clock PLL-mode enable Set and cleared by software to enable/disable the PLL part of the MSI clock source. MSIPLLEN must be enabled after LSE is enabled (LSEON enabled) and ready (LSERDY set by hardware). A hardware protection prevents from enabling MSIPLLEN if LSE is not ready. This bit is cleared by hardware when LSE is disabled (LSEON = 0) or when the CSS on LSE detects a LSE failure (see RCC_CSR).
0x56020C00 C   FIELD 04w01 MSIKON (rw): MSIK clock enable Set and cleared by software. Cleared by hardware to stop the MSIK when entering Stop, Standby or Shutdown mode. Set by hardware to force the MSIK oscillator ON when exiting Standby or Shutdown mode. Set by hardware to force the MSIK oscillator ON when STOPWUCK = 0 or STOPKERWUCK = 0 when exiting Stop modes or in case of a failure of the HSE oscillator.
0x56020C00 C   FIELD 05w01 MSIKRDY (ro): MSIK clock ready flag Set by hardware to indicate that the MSIK is stable. This bit is set only when MSI kernel oscillator is enabled by software by setting MSIKON. Note: Once the MSIKON bit is cleared, MSIKRDY goes low after six MSIK oscillator clock cycles.
0x56020C00 C   FIELD 06w01 MSIPLLSEL (rw): MSI clock with PLL mode selection Set and cleared by software to select which MSI output clock uses the PLL mode. This bit can be written only when the MSI PLL mode is disabled (MSIPLLEN = 0). Note: If the MSI kernel clock output uses the same oscillator source than the MSI system clock output, then the PLL mode is applied to the both clocks outputs.
0x56020C00 C   FIELD 07w01 MSIPLLFAST (rw): MSI PLL mode fast startup Set and reset by software to enable/disable the fast PLL mode start-up of the MSI clock source. This bit is used only if PLL mode is selected (MSIPLLEN = 1). The fast start-up feature is not active the first time the PLL mode is selected. The fast start-up is active when the MSI in PLL mode returns from switch off.
0x56020C00 C   FIELD 08w01 HSION (rw): HSI16 clock enable Set and cleared by software. Cleared by hardware to stop the HSI16 oscillator when entering Stop, Standby or Shutdown mode. Set by hardware to force the HSI16 oscillator ON when STOPWUCK = 1 when leaving Stop modes, or in case of failure of the HSE crystal oscillator. This bit is set by hardware if the HSI16 is used directly or indirectly as system clock.
0x56020C00 C   FIELD 09w01 HSIKERON (rw): HSI16 enable for some peripheral kernels Set and cleared by software to force HSI16 ON even in Stop modes. Keeping the HSI16 ON in Stop mode allows the communication speed not to be reduced by the HSI16 startup time. This bit has no effect on HSION value. Refer to for more details. The HSIKERON must be configured at 0 before entering Stop 3 mode.
0x56020C00 C   FIELD 10w01 HSIRDY (ro): HSI16 clock ready flag Set by hardware to indicate that HSI16 oscillator is stable. This bit is set only when HSI16 is enabled by software by setting HSION. Note: Once the HSION bit is cleared, HSIRDY goes low after six HSI16 clock cycles.
0x56020C00 C   FIELD 12w01 HSI48ON (rw): HSI48 clock enable Set and cleared by software. Cleared by hardware to stop the HSI48 when entering in Stop, Standby or Shutdown modes.
0x56020C00 C   FIELD 13w01 HSI48RDY (ro): HSI48 clock ready flag Set by hardware to indicate that HSI48 oscillator is stable. This bit is set only when HSI48 is enabled by software by setting HSI48ON.
0x56020C00 C   FIELD 14w01 SHSION (rw): SHSI clock enable Set and cleared by software. Cleared by hardware to stop the SHSI when entering in Stop, Standby or Shutdown modes.
0x56020C00 C   FIELD 15w01 SHSIRDY (ro): SHSI clock ready flag Set by hardware to indicate that the SHSI oscillator is stable. This bit is set only when SHSI is enabled by software by setting SHSION. Note: Once the SHSION bit is cleared, SHSIRDY goes low after six SHSI clock cycles.
0x56020C00 C   FIELD 16w01 HSEON (rw): HSE clock enable Set and cleared by software. Cleared by hardware to stop the HSE oscillator when entering Stop, Standby or Shutdown mode. This bit cannot be reset if the HSE oscillator is used directly or indirectly as the system clock.
0x56020C00 C   FIELD 17w01 HSERDY (ro): HSE clock ready flag Set by hardware to indicate that the HSE oscillator is stable. Note: Once the HSEON bit is cleared, HSERDY goes low after six HSE clock cycles.
0x56020C00 C   FIELD 18w01 HSEBYP (rw): HSE crystal oscillator bypass Set and cleared by software to bypass the oscillator with an external clock. The external clock must be enabled with the HSEON bit set, to be used by the device. The HSEBYP bit can be written only if the HSE oscillator is disabled.
0x56020C00 C   FIELD 19w01 CSSON (rw): Clock security system enable Set by software to enable the clock security system. When CSSON is set, the clock detector is enabled by hardware when the HSE oscillator is ready, and disabled by hardware if a HSE clock failure is detected. This bit is set only and is cleared by reset.
0x56020C00 C   FIELD 20w01 HSEEXT (rw): HSE external clock bypass mode Set and reset by software to select the external clock mode in bypass mode. External clock mode must be configured with HSEON bit to be used by the device. This bit can be written only if the HSE oscillator is disabled. This bit is active only if the HSE bypass mode is enabled.
0x56020C00 C   FIELD 24w01 PLL1ON (rw): PLL1 enable Set and cleared by software to enable the main PLL. Cleared by hardware when entering Stop, Standby or Shutdown mode. This bit cannot be reset if the PLL1 clock is used as the system clock.
0x56020C00 C   FIELD 25w01 PLL1RDY (ro): PLL1 clock ready flag Set by hardware to indicate that the PLL1 is locked.
0x56020C00 C   FIELD 26w01 PLL2ON (rw): PLL2 enable Set and cleared by software to enable PLL2. Cleared by hardware when entering Stop, Standby or Shutdown mode.
0x56020C00 C   FIELD 27w01 PLL2RDY (ro): PLL2 clock ready flag Set by hardware to indicate that the PLL2 is locked.
0x56020C00 C   FIELD 28w01 PLL3ON (rw): PLL3 enable Set and cleared by software to enable PLL3. Cleared by hardware when entering Stop, Standby or Shutdown mode.
0x56020C00 C   FIELD 29w01 PLL3RDY (ro): PLL3 clock ready flag Set by hardware to indicate that the PLL3 is locked.
0x56020C08 B  REGISTER RCC_ICSCR1: RCC internal clock sources calibration register 1
0x56020C08 C   FIELD 00w05 MSICAL3 (ro): MSIRC3 clock calibration for MSI ranges 12 to 15 These bits are initialized at startup with the factory-programmed MSIRC3 calibration trim value for ranges 12 to 15. When MSITRIM3 is written, MSICAL3 is updated with the sum of MSITRIM3[4:0] and the factory calibration trim value MSIRC2[4:0]. There is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.
0x56020C08 C   FIELD 05w05 MSICAL2 (ro): MSIRC2 clock calibration for MSI ranges 8 to 11 These bits are initialized at startup with the factory-programmed MSIRC2 calibration trim value for ranges 8 to 11. When MSITRIM2 is written, MSICAL2 is updated with the sum of MSITRIM2[4:0] and the factory calibration trim value MSIRC2[4:0]. There is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.
0x56020C08 C   FIELD 10w05 MSICAL1 (ro): MSIRC1 clock calibration for MSI ranges 4 to 7 These bits are initialized at startup with the factory-programmed MSIRC1 calibration trim value for ranges 4 to 7. When MSITRIM1 is written, MSICAL1 is updated with the sum of MSITRIM1[4:0] and the factory calibration trim value MSIRC1[4:0]. There is no hardware protection to limit a potential overflow due to the addition of MSITRIM bitfield and factory program bitfield for this calibration value. Control must be managed by software at user level.
0x56020C08 C   FIELD 15w05 MSICAL0 (ro): MSIRC0 clock calibration for MSI ranges 0 to 3 These bits are initialized at startup with the factory-programmed MSIRC0 calibration trim value for ranges 0 to 3. When MSITRIM0 is written, MSICAL0 is updated with the sum of MSITRIM0[4:0] and the factory-programmed calibration trim value MSIRC0[4:0].
0x56020C08 C   FIELD 22w01 MSIBIAS (rw): MSI bias mode selection Set by software to select the MSI bias mode. By default, the MSI bias is in continuous mode in order to maintain the output clocks accuracy. Setting this bit reduces the MSI consumption under range 4 but decrease its accuracy.
0x56020C08 C   FIELD 23w01 MSIRGSEL (rw): MSI clock range selection Set by software to select the MSIS and MSIK clocks range with MSISRANGE[3:0] and MSIKRANGE[3:0]. Write 0 has no effect. After exiting Standby or Shutdown mode, or after a reset, this bit is at 0 and the MSIS and MSIK ranges are provided by MSISSRANGE[3:0] and MSIKSRANGE[3:0] in RCC_CSR.
0x56020C08 C   FIELD 24w04 MSIKRANGE (rw): MSIK clock ranges These bits are configured by software to choose the frequency range of MSIK oscillator when MSIRGSEL is set. 16 frequency ranges are available: Note: MSIKRANGE can be modified when MSIK is OFF (MSISON = 0) or when MSIK is ready (MSIKRDY = 1). MSIKRANGE must NOT be modified when MSIK is ON and NOT ready (MSIKON = 1 and MSIKRDY = 0) MSIKRANGE is kept when the device wakes up from Stop mode, except when the MSIK range is above 24 MHz. In this case MSIKRANGE is changed by hardware into Range 2 (24 MHz).
0x56020C08 C   FIELD 28w04 MSISRANGE (rw): MSIS clock ranges These bits are configured by software to choose the frequency range of MSIS oscillator when MSIRGSEL is set. 16 frequency ranges are available: Note: MSISRANGE can be modified when MSIS is OFF (MSISON = 0) or when MSIS is ready (MSISRDY = 1). MSISRANGE must NOT be modified when MSIS is ON and NOT ready (MSISON = 1 and MSISRDY = 0) MSISRANGE is kept when the device wakes up from Stop mode, except when the MSIS range is above 24 MHz. In this case MSISRANGE is changed by hardware into Range 2 (24 MHz).
0x56020C0C B  REGISTER RCC_ICSCR2: RCC internal clock sources calibration register 2
0x56020C0C C   FIELD 00w05 MSITRIM3 (rw): MSI clock trimming for ranges 12 to 15 These bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC3[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.
0x56020C0C C   FIELD 05w05 MSITRIM2 (rw): MSI clock trimming for ranges 8 to 11 These bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC2[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.
0x56020C0C C   FIELD 10w05 MSITRIM1 (rw): MSI clock trimming for ranges 4 to 7 These bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC1[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.
0x56020C0C C   FIELD 15w05 MSITRIM0 (rw): MSI clock trimming for ranges 0 to 3 These bits provide an additional user-programmable trimming value that is added to the factory-programmed calibration trim value MSIRC0[4:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the MSI.
0x56020C10 B  REGISTER RCC_ICSCR3: RCC internal clock sources calibration register 3
0x56020C10 C   FIELD 00w12 HSICAL (ro): HSI clock calibration These bits are initialized at startup with the factory-programmed HSI calibration trim value. When HSITRIM is written, HSICAL is updated with the sum of HSITRIM and the factory trim value.
0x56020C10 C   FIELD 16w05 HSITRIM (rw): HSI clock trimming These bits provide an additional user-programmable trimming value that is added to the HSICAL[11:0] bits. It can be programmed to adjust to voltage and temperature variations that influence the frequency of the HSI.
0x56020C14 B  REGISTER RCC_CRRCR: RCC clock recovery RC register
0x56020C14 C   FIELD 00w09 HSI48CAL (ro): HSI48 clock calibration These bits are initialized at startup with the factory-programmed HSI48 calibration trim value.
0x56020C1C B  REGISTER RCC_CFGR1: RCC clock configuration register 1
0x56020C1C C   FIELD 00w02 SW (rw): system clock switch Set and cleared by software to select system clock source (SYSCLK). Configured by hardware to force MSIS oscillator selection when exiting Standby or Shutdown mode. Configured by hardware to force MSIS or HSI16 oscillator selection when exiting Stop mode or in case of HSE oscillator failure, depending on STOPWUCK value.
0x56020C1C C   FIELD 02w02 SWS (ro): system clock switch status Set and cleared by hardware to indicate which clock source is used as system clock.
0x56020C1C C   FIELD 04w01 STOPWUCK (rw): wakeup from Stop and CSS backup clock selection Set and cleared by software to select the system clock used when exiting Stop mode. The selected clock is also used as emergency clock for the clock security system on HSE. Warning: STOPWUCK must not be modified when the CSS is enabled by HSECSSON bit in RCC_CR and the system clock is HSE (SWS = 10) or a switch on HSE is requested (SW = 10).
0x56020C1C C   FIELD 05w01 STOPKERWUCK (rw): wakeup from Stop kernel clock automatic enable selection Set and cleared by software to enable automatically another oscillator when exiting Stop mode. This oscillator can be used as independent kernel clock by peripherals.
0x56020C1C C   FIELD 24w04 MCOSEL (rw): microcontroller clock output Set and cleared by software. Others: reserved Note: This clock output may have some truncated cycles at startup or during MCO clock source switching.
0x56020C1C C   FIELD 28w03 MCOPRE (rw): microcontroller clock output prescaler Set and cleared by software. It is highly recommended to change this prescaler before MCO output is enabled. Others: not allowed
0x56020C20 B  REGISTER RCC_CFGR2: RCC clock configuration register 2
0x56020C20 C   FIELD 00w04 HPRE (rw): AHB prescaler Set and cleared by software to control the division factor of the AHB clock (HCLK). Depending on the device voltage range, the software must set these bits correctly to ensure that the system frequency does not exceed the maximum allowed frequency (for more details, refer to ). After a write operation to these bits and before decreasing the voltage range, this register must be read to be sure that the new value is taken into account. 0xxx: SYSCLK not divided
0x56020C20 C   FIELD 04w03 PPRE1 (rw): APB1 prescaler Set and cleared by software to control the division factor of the APB1 clock (PCLK1). 0xx: HCLK not divided
0x56020C20 C   FIELD 08w03 PPRE2 (rw): APB2 prescaler Set and cleared by software to control the division factor of the APB2 clock (PCLK2). 0xx: HCLK not divided
0x56020C20 C   FIELD 16w01 AHB1DIS (rw): AHB1 clock disable This bit can be set in order to further reduce power consumption, when none of the AHB1 peripherals (except those listed hereafter) are used and when their clocks are disabled in RCC_AHB1ENR. When this bit is set, all the AHB1 peripherals clocks are off, except for FLASH, BKPSRAM, ICACHE, DCACHE1 and SRAM1.
0x56020C20 C   FIELD 17w01 AHB2DIS1 (rw): AHB2_1 clock disable This bit can be set in order to further reduce power consumption, when none of the AHB2 peripherals from RCC_AHB2ENR1 (except SRAM2 and SRAM3) are used and when their clocks are disabled in RCC_AHB2ENR1. When this bit is set, all the AHB2 peripherals clocks from RCC_AHB2ENR1 are off, except for SRAM2 and SRAM3.
0x56020C20 C   FIELD 18w01 AHB2DIS2 (rw): AHB2_2 clock disable This bit can be set in order to further reduce power consumption, when none of the AHB2 peripherals from RCC_AHB2ENR2 are used and when their clocks are disabled in RCC_AHB2ENR2. When this bit is set, all the AHB2 peripherals clocks from RCC_AHB2EBNR2 are off.
0x56020C20 C   FIELD 19w01 APB1DIS (rw): APB1 clock disable This bit can be set in order to further reduce power consumption, when none of the APB1 peripherals (except IWDG) are used and when their clocks are disabled in RCC_APB1ENR. When this bit is set, all the APB1 peripherals clocks are off, except for IWDG.
0x56020C20 C   FIELD 20w01 APB2DIS (rw): APB2 clock disable This bit can be set in order to further reduce power consumption, when none of the APB2 peripherals are used and when their clocks are disabled in RCC_APB2ENR. When this bit is set, all the APB2 peripherals clocks are off.
0x56020C24 B  REGISTER RCC_CFGR3: RCC clock configuration register 3
0x56020C24 C   FIELD 04w03 PPRE3 (rw): APB3 prescaler Set and cleared by software to control the division factor of the APB3 clock (PCLK3). 0xx: HCLK not divided
0x56020C24 C   FIELD 16w01 AHB3DIS (rw): AHB3 clock disable This bit can be set in order to further reduce power consumption, when none of the AHB3 peripherals (except SRAM4) are used and when their clocks are disabled in RCC_AHB3ENR. When this bit is set, all the AHB3 peripherals clocks are off, except for SRAM4.
0x56020C24 C   FIELD 17w01 APB3DIS (rw): APB3 clock disable This bit can be set in order to further reduce power consumption, when none of the APB3 peripherals from RCC_APB3ENR are used and when their clocks are disabled in RCC_APB3ENR. When this bit is set, all the APB3 peripherals clocks are off.
0x56020C28 B  REGISTER RCC_PLL1CFGR: RCC PLL1 configuration register
0x56020C28 C   FIELD 00w02 PLL1SRC (rw): PLL1 entry clock source Set and cleared by software to select PLL1 clock source. These bits can be written only when the PLL1 is disabled. In order to save power, when no PLL1 is used, the value of PLL1SRC must be 0.
0x56020C28 C   FIELD 02w02 PLL1RGE (rw): PLL1 input frequency range Set and reset by software to select the proper reference frequency range used for PLL1. This bit must be written before enabling the PLL1. 00-01-10: PLL1 input (ref1_ck) clock range frequency between 4 and 8 MHz
0x56020C28 C   FIELD 04w01 PLL1FRACEN (rw): PLL1 fractional latch enable Set and reset by software to latch the content of PLL1FRACN into the Î£Î modulator. In order to latch the PLL1FRACN value into the Î£Î modulator, PLL1FRACEN must be set to 0, then set to 1: the transition 0 to 1 transfers the content of PLL1FRACN into the modulator (see for details).
0x56020C28 C   FIELD 08w04 PLL1M (rw): Prescaler for PLL1 Set and cleared by software to configure the prescaler of the PLL1. The VCO1 input frequency is PLL1 input clock frequency/PLL1M. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). ...
0x56020C28 C   FIELD 12w04 PLL1MBOOST (rw): Prescaler for EPOD booster input clock Set and cleared by software to configure the prescaler of the PLL1, used for the EPOD booster. The EPOD booster input frequency is PLL1 input clock frequency/PLL1MBOOST. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0) and EPOD Boost mode is disabled (see ). others: reserved
0x56020C28 C   FIELD 16w01 PLL1PEN (rw): PLL1 DIVP divider output enable Set and reset by software to enable the pll1_p_ck output of the PLL1. To save power, PLL1PEN and PLL1P bits must be set to 0 when the pll1_p_ck is not used. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0).
0x56020C28 C   FIELD 17w01 PLL1QEN (rw): PLL1 DIVQ divider output enable Set and reset by software to enable the pll1_q_ck output of the PLL1. To save power, PLL1QEN and PLL1Q bits must be set to 0 when the pll1_q_ck is not used. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0).
0x56020C28 C   FIELD 18w01 PLL1REN (rw): PLL1 DIVR divider output enable Set and reset by software to enable the pll1_r_ck output of the PLL1. To save power, PLL1RENPLL2REN and PLL1R bits must be set to 0 when the pll1_r_ck is not used. This bit can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0).
0x56020C2C B  REGISTER RCC_PLL2CFGR: RCC PLL2 configuration register
0x56020C2C C   FIELD 00w02 PLL2SRC (rw): PLL2 entry clock source Set and cleared by software to select PLL2 clock source. These bits can be written only when the PLL2 is disabled. In order to save power, when no PLL2 is used, the value of PLL2SRC must be 0.
0x56020C2C C   FIELD 02w02 PLL2RGE (rw): PLL2 input frequency range Set and reset by software to select the proper reference frequency range used for PLL2. This bit must be written before enabling the PLL2. 00-01-10: PLL2 input (ref2_ck) clock range frequency between 4 and 8 MHz
0x56020C2C C   FIELD 04w01 PLL2FRACEN (rw): PLL2 fractional latch enable Set and reset by software to latch the content of PLL2FRACN into the Î£Î modulator. In order to latch the PLL2FRACN value into the Î£Î modulator, PLL2FRACEN must be set to 0, then set to 1: the transition 0 to 1 transfers the content of PLL2FRACN into the modulator (see for details).
0x56020C2C C   FIELD 08w04 PLL2M (rw): Prescaler for PLL2 Set and cleared by software to configure the prescaler of the PLL2. The VCO2 input frequency is PLL2 input clock frequency/PLL2M. This bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). ...
0x56020C2C C   FIELD 16w01 PLL2PEN (rw): PLL2 DIVP divider output enable Set and reset by software to enable the pll2_p_ck output of the PLL2. To save power, PLL2PEN and PLL2P bits must be set to 0 when the pll2_p_ck is not used. This bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0).
0x56020C2C C   FIELD 17w01 PLL2QEN (rw): PLL2 DIVQ divider output enable Set and reset by software to enable the pll2_q_ck output of the PLL2. To save power, PLL2QEN and PLL2Q bits must be set to 0 when the pll2_q_ck is not used. This bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0.
0x56020C2C C   FIELD 18w01 PLL2REN (rw): PLL2 DIVR divider output enable Set and reset by software to enable the pll2_r_ck output of the PLL2. To save power, PLL2REN and PLL2R bits must be set to 0 when the pll2_r_ck is not used. This bit can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0).
0x56020C30 B  REGISTER RCC_PLL3CFGR: RCC PLL3 configuration register
0x56020C30 C   FIELD 00w02 PLL3SRC (rw): PLL3 entry clock source Set and cleared by software to select PLL3 clock source. These bits can be written only when the PLL3 is disabled. In order to save power, when no PLL3 is used, the value of PLL3SRC must be 00.
0x56020C30 C   FIELD 02w02 PLL3RGE (rw): PLL3 input frequency range Set and reset by software to select the proper reference frequency range used for PLL3. This bit must be written before enabling the PLL3. 00-01-10: PLL3 input (ref3_ck) clock range frequency between 4 and 8 MHz
0x56020C30 C   FIELD 04w01 PLL3FRACEN (rw): PLL3 fractional latch enable Set and reset by software to latch the content of PLL3FRACN into the Î£Î modulator. In order to latch the PLL3FRACN value into the Î£Î modulator, PLL3FRACEN must be set to 0, then set to 1: the transition 0 to 1 transfers the content of PLL3FRACN into the modulator (see for details).
0x56020C30 C   FIELD 08w04 PLL3M (rw): Prescaler for PLL3 Set and cleared by software to configure the prescaler of the PLL3. The VCO3 input frequency is PLL3 input clock frequency/PLL3M. This bit can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). ...
0x56020C30 C   FIELD 16w01 PLL3PEN (rw): PLL3 DIVP divider output enable Set and reset by software to enable the pll3_p_ck output of the PLL3. To save power, PLL3PEN and PLL3P bits must be set to 0 when the pll3_p_ck is not used. This bit can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).
0x56020C30 C   FIELD 17w01 PLL3QEN (rw): PLL3 DIVQ divider output enable Set and reset by software to enable the pll3_q_ck output of the PLL3. To save power, PLL3QEN and PLL3Q bits must be set to 0 when the pll3_q_ck is not used. This bit can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).
0x56020C30 C   FIELD 18w01 PLL3REN (rw): PLL3 DIVR divider output enable Set and reset by software to enable the pll3_r_ck output of the PLL3. To save power, PLL3REN and PLL3R bits must be set to 0 when the pll3_r_ck is not used. This bit can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0).
0x56020C34 B  REGISTER RCC_PLL1DIVR: RCC PLL1 dividers register
0x56020C34 C   FIELD 00w09 PLL1N (rw): Multiplication factor for PLL1 VCO Set and reset by software to control the multiplication factor of the VCO. These bits can be written only when the PLL is disabled (PLL1ON = 0 and PLL1RDY = 0). ... ... Others: reserved VCO output frequency = Fref1_ck x PLL1N, when fractional value 0 has been loaded into PLL1FRACN, with: PLL1N between 4 and 512 input frequency Fref1_ck between 4 and 16 MHz
0x56020C34 C   FIELD 09w07 PLL1P (rw): PLL1 DIVP division factor Set and reset by software to control the frequency of the pll1_p_ck clock. These bits can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). Note that odd division factors are not allowed. ...
0x56020C34 C   FIELD 16w07 PLL1Q (rw): PLL1 DIVQ division factor Set and reset by software to control the frequency of the pll1_q_ck clock. These bits can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). ...
0x56020C34 C   FIELD 24w07 PLL1R (rw): PLL1 DIVR division factor Set and reset by software to control the frequency of the pll1_r_ck clock. These bits can be written only when the PLL1 is disabled (PLL1ON = 0 and PLL1RDY = 0). ...
0x56020C38 B  REGISTER RCC_PLL1FRACR: RCC PLL1 fractional divider register
0x56020C38 C   FIELD 03w13 PLL1FRACN (rw): Fractional part of the multiplication factor for PLL1 VCO Set and reset by software to control the fractional part of the multiplication factor of the VCO. These bits can be written at any time, allowing dynamic fine-tuning of the PLL1 VCO. VCO output frequency = Fref1_ck x (PLL1N + (PLL1FRACN / 213)), with: PLL1N must be between 4 and 512. PLL1FRACN can be between 0 and 213- 1. The input frequency Fref1_ck must be between 4 and 16 MHz. To change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as follows: Set the bit PLL1FRACEN to 0. Write the new fractional value into PLL1FRACN. Set the bit PLL1FRACEN to 1.
0x56020C3C B  REGISTER RCC_PLL2DIVR: RCC PLL2 dividers configuration register
0x56020C3C C   FIELD 00w09 PLL2N (rw): Multiplication factor for PLL2 VCO Set and reset by software to control the multiplication factor of the VCO. These bits can be written only when the PLL is disabled (PLL2ON = 0 and PLL2RDY = 0). ... ... Others: reserved VCO output frequency = Fref2_ck x PLL2N, when fractional value 0 has been loaded into PLL2FRACN, with: PLL2N between 4 and 512 input frequency Fref2_ck between 1MHz and 16MHz
0x56020C3C C   FIELD 09w07 PLL2P (rw): PLL2 DIVP division factor Set and reset by software to control the frequency of the pll2_p_ck clock. These bits can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). ...
0x56020C3C C   FIELD 16w07 PLL2Q (rw): PLL2 DIVQ division factor Set and reset by software to control the frequency of the pll2_q_ck clock. These bits can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). ...
0x56020C3C C   FIELD 24w07 PLL2R (rw): PLL2 DIVR division factor Set and reset by software to control the frequency of the pll2_r_ck clock. These bits can be written only when the PLL2 is disabled (PLL2ON = 0 and PLL2RDY = 0). ...
0x56020C40 B  REGISTER RCC_PLL2FRACR: RCC PLL2 fractional divider register
0x56020C40 C   FIELD 03w13 PLL2FRACN (rw): Fractional part of the multiplication factor for PLL2 VCO Set and reset by software to control the fractional part of the multiplication factor of the VCO. These bits can be written at any time, allowing dynamic fine-tuning of the PLL2 VCO. VCO output frequency = Fref2_ck x (PLL2N + (PLL2FRACN / 213)), with PLL2N must be between 4 and 512. PLL2FRACN can be between 0 and 213 - 1. The input frequency Fref2_ck must be between 4 and 16 MHz. In order to change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as follows: Set the bit PLL2FRACEN to 0. Write the new fractional value into PLL2FRACN. Set the bit PLL2FRACEN to 1.
0x56020C44 B  REGISTER RCC_PLL3DIVR: RCC PLL3 dividers configuration register
0x56020C44 C   FIELD 00w09 PLL3N (rw): Multiplication factor for PLL3 VCO Set and reset by software to control the multiplication factor of the VCO. These bits can be written only when the PLL is disabled (PLL3ON = 0 and PLL3RDY = 0). ... ... Others: reserved VCO output frequency = Fref3_ck x PLL3N, when fractional value 0 has been loaded into PLL3FRACN, with: PLL3N between 4 and 512 input frequency Fref3_ck between 4 and 16MHz
0x56020C44 C   FIELD 09w07 PLL3P (rw): PLL3 DIVP division factor Set and reset by software to control the frequency of the pll3_p_ck clock. These bits can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). ...
0x56020C44 C   FIELD 16w07 PLL3Q (rw): PLL3 DIVQ division factor Set and reset by software to control the frequency of the pll3_q_ck clock. These bits can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). ...
0x56020C44 C   FIELD 24w07 PLL3R (rw): PLL3 DIVR division factor Set and reset by software to control the frequency of the pll3_r_ck clock. These bits can be written only when the PLL3 is disabled (PLL3ON = 0 and PLL3RDY = 0). ...
0x56020C48 B  REGISTER RCC_PLL3FRACR: RCC PLL3 fractional divider register
0x56020C48 C   FIELD 03w13 PLL3FRACN (rw): Fractional part of the multiplication factor for PLL3 VCO Set and reset by software to control the fractional part of the multiplication factor of the VCO. These bits can be written at any time, allowing dynamic fine-tuning of the PLL3 VCO. VCO output frequency = Fref3_ck x (PLL3N + (PLL3FRACN / 213)), with: PLL3N must be between 4 and 512. PLL3FRACN can be between 0 and 213 - 1. The input frequency Fref3_ck must be between 4 and 16 MHz. In order to change the FRACN value on-the-fly even if the PLL is enabled, the application must proceed as follows: Set the bit PLL3FRACEN to 0. Write the new fractional value into PLL3FRACN. Set the bit PLL3FRACEN to 1.
0x56020C50 B  REGISTER RCC_CIER: RCC clock interrupt enable register
0x56020C50 C   FIELD 00w01 LSIRDYIE (rw): LSI ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the LSI oscillator stabilization.
0x56020C50 C   FIELD 01w01 LSERDYIE (rw): LSE ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the LSE oscillator stabilization.
0x56020C50 C   FIELD 02w01 MSISRDYIE (rw): MSIS ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the MSIS oscillator stabilization.
0x56020C50 C   FIELD 03w01 HSIRDYIE (rw): HSI16 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the HSI16 oscillator stabilization.
0x56020C50 C   FIELD 04w01 HSERDYIE (rw): HSE ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the HSE oscillator stabilization.
0x56020C50 C   FIELD 05w01 HSI48RDYIE (rw): HSI48 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the HSI48 oscillator stabilization.
0x56020C50 C   FIELD 06w01 PLL1RDYIE (rw): PLL ready interrupt enable Set and cleared by software to enable/disable interrupt caused by PLL1 lock.
0x56020C50 C   FIELD 07w01 PLL2RDYIE (rw): PLL2 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by PLL2 lock.
0x56020C50 C   FIELD 08w01 PLL3RDYIE (rw): PLL3 ready interrupt enable Set and cleared by software to enable/disable interrupt caused by PLL3 lock.
0x56020C50 C   FIELD 11w01 MSIKRDYIE (rw): MSIK ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the MSIK oscillator stabilization.
0x56020C50 C   FIELD 12w01 SHSIRDYIE (rw): SHSI ready interrupt enable Set and cleared by software to enable/disable interrupt caused by the SHSI oscillator stabilization.
0x56020C54 B  REGISTER RCC_CIFR: RCC clock interrupt flag register
0x56020C54 C   FIELD 00w01 LSIRDYF (ro): LSI ready interrupt flag Set by hardware when the LSI clock becomes stable and LSIRDYIE is set. Cleared by software setting the LSIRDYC bit.
0x56020C54 C   FIELD 01w01 LSERDYF (ro): LSE ready interrupt flag Set by hardware when the LSE clock becomes stable and LSERDYIE is set. Cleared by software setting the LSERDYC bit.
0x56020C54 C   FIELD 02w01 MSISRDYF (ro): MSIS ready interrupt flag Set by hardware when the MSIS clock becomes stable and MSISRDYIE is set. Cleared by software setting the MSISRDYC bit.
0x56020C54 C   FIELD 03w01 HSIRDYF (ro): HSI16 ready interrupt flag Set by hardware when the HSI16 clock becomes stable and HSIRDYIE is set in a response to setting the HSION (see RCC_CR). When HSION is not set but the HSI16 oscillator is enabled by the peripheral through a clock request, this bit is not set and no interrupt is generated. Cleared by software setting the HSIRDYC bit.
0x56020C54 C   FIELD 04w01 HSERDYF (ro): HSE ready interrupt flag Set by hardware when the HSE clock becomes stable and HSERDYIE is set. Cleared by software setting the HSERDYC bit.
0x56020C54 C   FIELD 05w01 HSI48RDYF (ro): HSI48 ready interrupt flag Set by hardware when the HSI48 clock becomes stable and HSI48RDYIE is set. Cleared by software setting the HSI48RDYC bit.
0x56020C54 C   FIELD 06w01 PLL1RDYF (ro): PLL1 ready interrupt flag Set by hardware when the PLL1 locks and PLL1RDYIE is set. Cleared by software setting the PLL1RDYC bit.
0x56020C54 C   FIELD 07w01 PLL2RDYF (ro): PLL2 ready interrupt flag Set by hardware when the PLL2 locks and PLL2RDYIE is set. Cleared by software setting the PLL2RDYC bit.
0x56020C54 C   FIELD 08w01 PLL3RDYF (ro): PLL3 ready interrupt flag Set by hardware when the PLL3 locks and PLL3RDYIE is set. Cleared by software setting the PLL3RDYC bit.
0x56020C54 C   FIELD 10w01 CSSF (ro): Clock security system interrupt flag Set by hardware when a failure is detected in the HSE oscillator. Cleared by software setting the CSSC bit.
0x56020C54 C   FIELD 11w01 MSIKRDYF (ro): MSIK ready interrupt flag Set by hardware when the MSIK clock becomes stable and MSIKRDYIE is set. Cleared by software setting the MSIKRDYC bit.
0x56020C54 C   FIELD 12w01 SHSIRDYF (ro): SHSI ready interrupt flag Set by hardware when the SHSI clock becomes stable and SHSIRDYIE is set. Cleared by software setting the SHSIRDYC bit.
0x56020C58 B  REGISTER RCC_CICR: RCC clock interrupt clear register
0x56020C58 C   FIELD 00w01 LSIRDYC (wo): LSI ready interrupt clear Writing this bit to 1 clears the LSIRDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 01w01 LSERDYC (wo): LSE ready interrupt clear Writing this bit to 1 clears the LSERDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 02w01 MSISRDYC (wo): MSIS ready interrupt clear Writing this bit to 1 clears the MSISRDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 03w01 HSIRDYC (wo): HSI16 ready interrupt clear Writing this bit to 1 clears the HSIRDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 04w01 HSERDYC (wo): HSE ready interrupt clear Writing this bit to 1 clears the HSERDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 05w01 HSI48RDYC (wo): HSI48 ready interrupt clear Writing this bit to 1 clears the HSI48RDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 06w01 PLL1RDYC (wo): PLL1 ready interrupt clear Writing this bit to 1 clears the PLL1RDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 07w01 PLL2RDYC (wo): PLL2 ready interrupt clear Writing this bit to 1 clears the PLL2RDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 08w01 PLL3RDYC (wo): PLL3 ready interrupt clear Writing this bit to 1 clears the PLL3RDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 10w01 CSSC (wo): Clock security system interrupt clear Writing this bit to 1 clears the CSSF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 11w01 MSIKRDYC (wo): MSIK oscillator ready interrupt clear Writing this bit to 1 clears the MSIKRDYF flag. Writing 0 has no effect.
0x56020C58 C   FIELD 12w01 SHSIRDYC (wo): SHSI oscillator ready interrupt clear Writing this bit to 1 clears the SHSIRDYF flag. Writing 0 has no effect.
0x56020C60 B  REGISTER RCC_AHB1RSTR: RCC AHB1 peripheral reset register
0x56020C60 C   FIELD 00w01 GPDMA1RST (rw): GPDMA1 reset Set and cleared by software.
0x56020C60 C   FIELD 01w01 CORDICRST (rw): CORDIC reset Set and cleared by software.
0x56020C60 C   FIELD 02w01 FMACRST (rw): FMAC reset Set and cleared by software.
0x56020C60 C   FIELD 03w01 MDF1RST (rw): MDF1 reset Set and cleared by software.
0x56020C60 C   FIELD 12w01 CRCRST (rw): CRC reset Set and cleared by software.
0x56020C60 C   FIELD 16w01 TSCRST (rw): TSC reset Set and cleared by software.
0x56020C60 C   FIELD 17w01 RAMCFGRST (rw): RAMCFG reset Set and cleared by software.
0x56020C60 C   FIELD 18w01 DMA2DRST (rw): DMA2D reset Set and cleared by software.
0x56020C64 B  REGISTER RCC_AHB2RSTR1: RCC AHB2 peripheral reset register 1
0x56020C64 C   FIELD 00w01 GPIOARST (rw): IO port A reset Set and cleared by software.
0x56020C64 C   FIELD 01w01 GPIOBRST (rw): IO port B reset Set and cleared by software.
0x56020C64 C   FIELD 02w01 GPIOCRST (rw): IO port C reset Set and cleared by software.
0x56020C64 C   FIELD 03w01 GPIODRST (rw): IO port D reset Set and cleared by software.
0x56020C64 C   FIELD 04w01 GPIOERST (rw): IO port E reset Set and cleared by software.
0x56020C64 C   FIELD 05w01 GPIOFRST (rw): IO port F reset Set and cleared by software.
0x56020C64 C   FIELD 06w01 GPIOGRST (rw): IO port G reset Set and cleared by software.
0x56020C64 C   FIELD 07w01 GPIOHRST (rw): IO port H reset Set and cleared by software.
0x56020C64 C   FIELD 08w01 GPIOIRST (rw): IO port I reset Set and cleared by software.
0x56020C64 C   FIELD 10w01 ADC1RST (rw): ADC1 reset Set and cleared by software.
0x56020C64 C   FIELD 12w01 DCMI_PSSIRST (rw): DCMI and PSSI reset Set and cleared by software.
0x56020C64 C   FIELD 14w01 OTGRST (rw): OTG_FS reset Set and cleared by software.
0x56020C64 C   FIELD 16w01 AESRST (rw): AES hardware accelerator reset Set and cleared by software.
0x56020C64 C   FIELD 17w01 HASHRST (rw): Hash reset Set and cleared by software.
0x56020C64 C   FIELD 18w01 RNGRST (rw): Random number generator reset Set and cleared by software.
0x56020C64 C   FIELD 19w01 PKARST (rw): PKA reset Set and cleared by software.
0x56020C64 C   FIELD 20w01 SAESRST (rw): SAES hardware accelerator reset Set and cleared by software.
0x56020C64 C   FIELD 21w01 OCTOSPIMRST (rw): OCTOSPIM reset Set and cleared by software.
0x56020C64 C   FIELD 23w01 OTFDEC1RST (rw): OTFDEC1 reset Set and cleared by software.
0x56020C64 C   FIELD 24w01 OTFDEC2RST (rw): OTFDEC2 reset Set and cleared by software.
0x56020C64 C   FIELD 27w01 SDMMC1RST (rw): SDMMC1 reset Set and cleared by software.
0x56020C64 C   FIELD 28w01 SDMMC2RST (rw): SDMMC2 reset Set and cleared by software.
0x56020C68 B  REGISTER RCC_AHB2RSTR2: RCC AHB2 peripheral reset register 2
0x56020C68 C   FIELD 00w01 FSMCRST (rw): Flexible memory controller reset Set and cleared by software.
0x56020C68 C   FIELD 04w01 OCTOSPI1RST (rw): OCTOSPI1 reset Set and cleared by software.
0x56020C68 C   FIELD 08w01 OCTOSPI2RST (rw): OCTOSPI2 reset Set and cleared by software.
0x56020C6C B  REGISTER RCC_AHB3RSTR: RCC AHB3 peripheral reset register
0x56020C6C C   FIELD 00w01 LPGPIO1RST (rw): LPGPIO1 reset Set and cleared by software.
0x56020C6C C   FIELD 05w01 ADC4RST (rw): ADC4 reset Set and cleared by software.
0x56020C6C C   FIELD 06w01 DAC1RST (rw): DAC1 reset Set and cleared by software.
0x56020C6C C   FIELD 09w01 LPDMA1RST (rw): LPDMA1 reset Set and cleared by software.
0x56020C6C C   FIELD 10w01 ADF1RST (rw): ADF1 reset Set and cleared by software.
0x56020C74 B  REGISTER RCC_APB1RSTR1: RCC APB1 peripheral reset register 1
0x56020C74 C   FIELD 00w01 TIM2RST (rw): TIM2 reset Set and cleared by software.
0x56020C74 C   FIELD 01w01 TIM3RST (rw): TIM3 reset Set and cleared by software.
0x56020C74 C   FIELD 02w01 TIM4RST (rw): TIM4 reset Set and cleared by software.
0x56020C74 C   FIELD 03w01 TIM5RST (rw): TIM5 reset Set and cleared by software.
0x56020C74 C   FIELD 04w01 TIM6RST (rw): TIM6 reset Set and cleared by software.
0x56020C74 C   FIELD 05w01 TIM7RST (rw): TIM7 reset Set and cleared by software.
0x56020C74 C   FIELD 14w01 SPI2RST (rw): SPI2 reset Set and cleared by software.
0x56020C74 C   FIELD 17w01 USART2RST (rw): USART2 reset Set and cleared by software.
0x56020C74 C   FIELD 18w01 USART3RST (rw): USART3 reset Set and cleared by software.
0x56020C74 C   FIELD 19w01 UART4RST (rw): UART4 reset Set and cleared by software.
0x56020C74 C   FIELD 20w01 UART5RST (rw): UART5 reset Set and cleared by software.
0x56020C74 C   FIELD 21w01 I2C1RST (rw): I2C1 reset Set and cleared by software.
0x56020C74 C   FIELD 22w01 I2C2RST (rw): I2C2 reset Set and cleared by software.
0x56020C74 C   FIELD 24w01 CRSRST (rw): CRS reset Set and cleared by software.
0x56020C78 B  REGISTER RCC_APB1RSTR2: RCC APB1 peripheral reset register 2
0x56020C78 C   FIELD 01w01 I2C4RST (rw): I2C4 reset Set and cleared by software
0x56020C78 C   FIELD 05w01 LPTIM2RST (rw): LPTIM2 reset Set and cleared by software.
0x56020C78 C   FIELD 09w01 FDCAN1RST (rw): FDCAN1 reset Set and cleared by software.
0x56020C78 C   FIELD 23w01 UCPD1RST (rw): UCPD1 reset Set and cleared by software.
0x56020C7C B  REGISTER RCC_APB2RSTR: RCC APB2 peripheral reset register
0x56020C7C C   FIELD 11w01 TIM1RST (rw): TIM1 reset Set and cleared by software.
0x56020C7C C   FIELD 12w01 SPI1RST (rw): SPI1 reset Set and cleared by software.
0x56020C7C C   FIELD 13w01 TIM8RST (rw): TIM8 reset Set and cleared by software.
0x56020C7C C   FIELD 14w01 USART1RST (rw): USART1 reset Set and cleared by software.
0x56020C7C C   FIELD 16w01 TIM15RST (rw): TIM15 reset Set and cleared by software.
0x56020C7C C   FIELD 17w01 TIM16RST (rw): TIM16 reset Set and cleared by software.
0x56020C7C C   FIELD 18w01 TIM17RST (rw): TIM17 reset Set and cleared by software.
0x56020C7C C   FIELD 21w01 SAI1RST (rw): SAI1 reset Set and cleared by software.
0x56020C7C C   FIELD 22w01 SAI2RST (rw): SAI2 reset Set and cleared by software.
0x56020C80 B  REGISTER RCC_APB3RSTR: RCC APB3 peripheral reset register
0x56020C80 C   FIELD 01w01 SYSCFGRST (rw): SYSCFG reset Set and cleared by software.
0x56020C80 C   FIELD 05w01 SPI3RST (rw): SPI3 reset Set and cleared by software.
0x56020C80 C   FIELD 06w01 LPUART1RST (rw): LPUART1 reset Set and cleared by software.
0x56020C80 C   FIELD 07w01 I2C3RST (rw): I2C3 reset Set and cleared by software.
0x56020C80 C   FIELD 11w01 LPTIM1RST (rw): LPTIM1 reset Set and cleared by software.
0x56020C80 C   FIELD 12w01 LPTIM3RST (rw): LPTIM3 reset Set and cleared by software.
0x56020C80 C   FIELD 13w01 LPTIM4RST (rw): LPTIM4 reset Set and cleared by software.
0x56020C80 C   FIELD 14w01 OPAMPRST (rw): OPAMP reset Set and cleared by software.
0x56020C80 C   FIELD 15w01 COMPRST (rw): COMP reset Set and cleared by software.
0x56020C80 C   FIELD 20w01 VREFRST (rw): VREFBUF reset Set and cleared by software.
0x56020C88 B  REGISTER RCC_AHB1ENR: RCC AHB1 peripheral clock enable register
0x56020C88 C   FIELD 00w01 GPDMA1EN (rw): GPDMA1 clock enable Set and cleared by software.
0x56020C88 C   FIELD 01w01 CORDICEN (rw): CORDIC clock enable Set and cleared by software.
0x56020C88 C   FIELD 02w01 FMACEN (rw): FMAC clock enable Set and reset by software.
0x56020C88 C   FIELD 03w01 MDF1EN (rw): MDF1 clock enable Set and reset by software.
0x56020C88 C   FIELD 08w01 FLASHEN (rw): FLASH clock enable Set and cleared by software. This bit can be disabled only when the Flash memory is in power down mode.
0x56020C88 C   FIELD 12w01 CRCEN (rw): CRC clock enable Set and cleared by software.
0x56020C88 C   FIELD 16w01 TSCEN (rw): Touch sensing controller clock enable Set and cleared by software.
0x56020C88 C   FIELD 17w01 RAMCFGEN (rw): RAMCFG clock enable Set and cleared by software.
0x56020C88 C   FIELD 18w01 DMA2DEN (rw): DMA2D clock enable Set and cleared by software.
0x56020C88 C   FIELD 24w01 GTZC1EN (rw): GTZC1 clock enable Set and reset by software.
0x56020C88 C   FIELD 28w01 BKPSRAMEN (rw): BKPSRAM clock enable Set and reset by software.
0x56020C88 C   FIELD 30w01 DCACHE1EN (rw): DCACHE1 clock enable Set and reset by software. Note: DCACHE1 clock must be enabled when external memories are accessed through OCTOSPI1, OCTOSPI2 or FSMC, even if the DCACHE1 is bypassed.
0x56020C88 C   FIELD 31w01 SRAM1EN (rw): SRAM1 clock enable Set and reset by software.
0x56020C8C B  REGISTER RCC_AHB2ENR1: RCC AHB2 peripheral clock enable register 1
0x56020C8C C   FIELD 00w01 GPIOAEN (rw): IO port A clock enable Set and cleared by software.
0x56020C8C C   FIELD 01w01 GPIOBEN (rw): IO port B clock enable Set and cleared by software.
0x56020C8C C   FIELD 02w01 GPIOCEN (rw): IO port C clock enable Set and cleared by software.
0x56020C8C C   FIELD 03w01 GPIODEN (rw): IO port D clock enable Set and cleared by software.
0x56020C8C C   FIELD 04w01 GPIOEEN (rw): IO port E clock enable Set and cleared by software.
0x56020C8C C   FIELD 05w01 GPIOFEN (rw): IO port F clock enable Set and cleared by software.
0x56020C8C C   FIELD 06w01 GPIOGEN (rw): IO port G clock enable Set and cleared by software.
0x56020C8C C   FIELD 07w01 GPIOHEN (rw): IO port H clock enable Set and cleared by software.
0x56020C8C C   FIELD 08w01 GPIOIEN (rw): IO port I clock enable Set and cleared by software.
0x56020C8C C   FIELD 10w01 ADC1EN (rw): ADC1 clock enable Set and cleared by software.
0x56020C8C C   FIELD 12w01 DCMI_PSSIEN (rw): DCMI and PSSI clock enable Set and cleared by software.
0x56020C8C C   FIELD 14w01 OTGEN (rw): OTG_FS clock enable Set and cleared by software.
0x56020C8C C   FIELD 16w01 AESEN (rw): AES clock enable Set and cleared by software.
0x56020C8C C   FIELD 17w01 HASHEN (rw): HASH clock enable Set and cleared by software
0x56020C8C C   FIELD 18w01 RNGEN (rw): RNG clock enable Set and cleared by software.
0x56020C8C C   FIELD 19w01 PKAEN (rw): PKA clock enable Set and cleared by software.
0x56020C8C C   FIELD 20w01 SAESEN (rw): SAES clock enable Set and cleared by software.
0x56020C8C C   FIELD 21w01 OCTOSPIMEN (rw): OCTOSPIM clock enable Set and cleared by software.
0x56020C8C C   FIELD 23w01 OTFDEC1EN (rw): OTFDEC1 clock enable Set and cleared by software.
0x56020C8C C   FIELD 24w01 OTFDEC2EN (rw): OTFDEC2 clock enable Set and cleared by software.
0x56020C8C C   FIELD 27w01 SDMMC1EN (rw): SDMMC1 clock enable Set and cleared by software.
0x56020C8C C   FIELD 28w01 SDMMC2EN (rw): SDMMC2 clock enable Set and cleared by software.
0x56020C8C C   FIELD 30w01 SRAM2EN (rw): SRAM2 clock enable Set and reset by software.
0x56020C8C C   FIELD 31w01 SRAM3EN (rw): SRAM3 clock enable Set and reset by software.
0x56020C90 B  REGISTER RCC_AHB2ENR2: RCC AHB2 peripheral clock enable register 2
0x56020C90 C   FIELD 00w01 FSMCEN (rw): FSMC clock enable Set and cleared by software.
0x56020C90 C   FIELD 04w01 OCTOSPI1EN (rw): OCTOSPI1 clock enable Set and cleared by software.
0x56020C90 C   FIELD 08w01 OCTOSPI2EN (rw): OCTOSPI2 clock enable Set and cleared by software.
0x56020C94 B  REGISTER RCC_AHB3ENR: RCC AHB3 peripheral clock enable register
0x56020C94 C   FIELD 00w01 LPGPIO1EN (rw): LPGPIO1 enable Set and cleared by software.
0x56020C94 C   FIELD 02w01 PWREN (rw): PWR clock enable Set and cleared by software.
0x56020C94 C   FIELD 05w01 ADC4EN (rw): ADC4 clock enable Set and cleared by software.
0x56020C94 C   FIELD 06w01 DAC1EN (rw): DAC1 clock enable Set and cleared by software.
0x56020C94 C   FIELD 09w01 LPDMA1EN (rw): LPDMA1 clock enable Set and cleared by software.
0x56020C94 C   FIELD 10w01 ADF1EN (rw): ADF1 clock enable Set and cleared by software.
0x56020C94 C   FIELD 12w01 GTZC2EN (rw): GTZC2 clock enable Set and cleared by software.
0x56020C94 C   FIELD 31w01 SRAM4EN (rw): SRAM4 clock enable Set and reset by software.
0x56020C9C B  REGISTER RCC_APB1ENR1: RCC APB1 peripheral clock enable register 1
0x56020C9C C   FIELD 00w01 TIM2EN (rw): TIM2 clock enable Set and cleared by software.
0x56020C9C C   FIELD 01w01 TIM3EN (rw): TIM3 clock enable Set and cleared by software.
0x56020C9C C   FIELD 02w01 TIM4EN (rw): TIM4 clock enable Set and cleared by software.
0x56020C9C C   FIELD 03w01 TIM5EN (rw): TIM5 clock enable Set and cleared by software.
0x56020C9C C   FIELD 04w01 TIM6EN (rw): TIM6 clock enable Set and cleared by software.
0x56020C9C C   FIELD 05w01 TIM7EN (rw): TIM7 clock enable Set and cleared by software.
0x56020C9C C   FIELD 11w01 WWDGEN (rw): WWDG clock enable Set by software to enable the window watchdog clock. Reset by hardware system reset. This bit can also be set by hardware if the WWDG_SW option bit is reset.
0x56020C9C C   FIELD 14w01 SPI2EN (rw): SPI2 clock enable Set and cleared by software.
0x56020C9C C   FIELD 17w01 USART2EN (rw): USART2 clock enable Set and cleared by software.
0x56020C9C C   FIELD 18w01 USART3EN (rw): USART3 clock enable Set and cleared by software.
0x56020C9C C   FIELD 19w01 UART4EN (rw): UART4 clock enable Set and cleared by software.
0x56020C9C C   FIELD 20w01 UART5EN (rw): UART5 clock enable Set and cleared by software.
0x56020C9C C   FIELD 21w01 I2C1EN (rw): I2C1 clock enable Set and cleared by software.
0x56020C9C C   FIELD 22w01 I2C2EN (rw): I2C2 clock enable Set and cleared by software.
0x56020C9C C   FIELD 24w01 CRSEN (rw): CRS clock enable Set and cleared by software.
0x56020CA0 B  REGISTER RCC_APB1ENR2: RCC APB1 peripheral clock enable register 2
0x56020CA0 C   FIELD 01w01 I2C4EN (rw): I2C4 clock enable Set and cleared by software
0x56020CA0 C   FIELD 05w01 LPTIM2EN (rw): LPTIM2 clock enable Set and cleared by software.
0x56020CA0 C   FIELD 09w01 FDCAN1EN (rw): FDCAN1 clock enable Set and cleared by software.
0x56020CA0 C   FIELD 23w01 UCPD1EN (rw): UCPD1 clock enable Set and cleared by software.
0x56020CA4 B  REGISTER RCC_APB2ENR: RCC APB2 peripheral clock enable register
0x56020CA4 C   FIELD 11w01 TIM1EN (rw): TIM1 clock enable Set and cleared by software.
0x56020CA4 C   FIELD 12w01 SPI1EN (rw): SPI1 clock enable Set and cleared by software.
0x56020CA4 C   FIELD 13w01 TIM8EN (rw): TIM8 clock enable Set and cleared by software.
0x56020CA4 C   FIELD 14w01 USART1EN (rw): USART1clock enable Set and cleared by software.
0x56020CA4 C   FIELD 16w01 TIM15EN (rw): TIM15 clock enable Set and cleared by software.
0x56020CA4 C   FIELD 17w01 TIM16EN (rw): TIM16 clock enable Set and cleared by software.
0x56020CA4 C   FIELD 18w01 TIM17EN (rw): TIM17 clock enable Set and cleared by software.
0x56020CA4 C   FIELD 21w01 SAI1EN (rw): SAI1 clock enable Set and cleared by software.
0x56020CA4 C   FIELD 22w01 SAI2EN (rw): SAI2 clock enable Set and cleared by software.
0x56020CA8 B  REGISTER RCC_APB3ENR: RCC APB3 peripheral clock enable register
0x56020CA8 C   FIELD 01w01 SYSCFGEN (rw): SYSCFG clock enable Set and cleared by software.
0x56020CA8 C   FIELD 05w01 SPI3EN (rw): SPI3 clock enable Set and cleared by software.
0x56020CA8 C   FIELD 06w01 LPUART1EN (rw): LPUART1 clock enable Set and cleared by software.
0x56020CA8 C   FIELD 07w01 I2C3EN (rw): I2C3 clock enable Set and cleared by software.
0x56020CA8 C   FIELD 11w01 LPTIM1EN (rw): LPTIM1 clock enable Set and cleared by software.
0x56020CA8 C   FIELD 12w01 LPTIM3EN (rw): LPTIM3 clock enable Set and cleared by software.
0x56020CA8 C   FIELD 13w01 LPTIM4EN (rw): LPTIM4 clock enable Set and cleared by software.
0x56020CA8 C   FIELD 14w01 OPAMPEN (rw): OPAMP clock enable Set and cleared by software.
0x56020CA8 C   FIELD 15w01 COMPEN (rw): COMP clock enable Set and cleared by software.
0x56020CA8 C   FIELD 20w01 VREFEN (rw): VREFBUF clock enable Set and cleared by software.
0x56020CA8 C   FIELD 21w01 RTCAPBEN (rw): RTC and TAMP APB clock enable Set and cleared by software.
0x56020CB0 B  REGISTER RCC_AHB1SMENR: RCC AHB1 peripheral clocks enable in Sleep and Stop modes register
0x56020CB0 C   FIELD 00w01 GPDMA1SMEN (rw): GPDMA1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CB0 C   FIELD 01w01 CORDICSMEN (rw): CORDIC clocks enable during Sleep and Stop modes Set and cleared by software during Sleep mode.
0x56020CB0 C   FIELD 02w01 FMACSMEN (rw): FMAC clocks enable during Sleep and Stop modes. Set and cleared by software.
0x56020CB0 C   FIELD 03w01 MDF1SMEN (rw): MDF1 clocks enable during Sleep and Stop modes. Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CB0 C   FIELD 08w01 FLASHSMEN (rw): FLASH clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB0 C   FIELD 12w01 CRCSMEN (rw): CRC clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB0 C   FIELD 16w01 TSCSMEN (rw): TSC clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB0 C   FIELD 17w01 RAMCFGSMEN (rw): RAMCFG clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB0 C   FIELD 18w01 DMA2DSMEN (rw): DMA2D clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB0 C   FIELD 24w01 GTZC1SMEN (rw): GTZC1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB0 C   FIELD 28w01 BKPSRAMSMEN (rw): BKPSRAM clocks enable during Sleep and Stop modes Set and cleared by software
0x56020CB0 C   FIELD 29w01 ICACHESMEN (rw): ICACHE clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB0 C   FIELD 30w01 DCACHE1SMEN (rw): DCACHE1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB0 C   FIELD 31w01 SRAM1SMEN (rw): SRAM1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 B  REGISTER RCC_AHB2SMENR1: RCC AHB2 peripheral clocks enable in Sleep and Stop modes register 1
0x56020CB4 C   FIELD 00w01 GPIOASMEN (rw): IO port A clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 01w01 GPIOBSMEN (rw): IO port B clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 02w01 GPIOCSMEN (rw): IO port C clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 03w01 GPIODSMEN (rw): IO port D clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 04w01 GPIOESMEN (rw): IO port E clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 05w01 GPIOFSMEN (rw): IO port F clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 06w01 GPIOGSMEN (rw): IO port G clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 07w01 GPIOHSMEN (rw): IO port H clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 08w01 GPIOISMEN (rw): IO port I clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 10w01 ADC1SMEN (rw): ADC1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 12w01 DCMI_PSSISMEN (rw): DCMI and PSSI clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 14w01 OTGSMEN (rw): OTG_FS clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 16w01 AESSMEN (rw): AES clock enable during Sleep and Stop modes Set and cleared by software
0x56020CB4 C   FIELD 17w01 HASHSMEN (rw): HASH clock enable during Sleep and Stop modes Set and cleared by software
0x56020CB4 C   FIELD 18w01 RNGSMEN (rw): Random number generator (RNG) clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 19w01 PKASMEN (rw): PKA clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 20w01 SAESSMEN (rw): SAES accelerator clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 21w01 OCTOSPIMSMEN (rw): OCTOSPIM clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 23w01 OTFDEC1SMEN (rw): OTFDEC1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 24w01 OTFDEC2SMEN (rw): OTFDEC2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 27w01 SDMMC1SMEN (rw): SDMMC1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 28w01 SDMMC2SMEN (rw): SDMMC2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 30w01 SRAM2SMEN (rw): SRAM2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB4 C   FIELD 31w01 SRAM3SMEN (rw): SRAM3 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB8 B  REGISTER RCC_AHB2SMENR2: RCC AHB2 peripheral clocks enable in Sleep and Stop modes register 2
0x56020CB8 C   FIELD 00w01 FSMCSMEN (rw): FSMC clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB8 C   FIELD 04w01 OCTOSPI1SMEN (rw): OCTOSPI1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CB8 C   FIELD 08w01 OCTOSPI2SMEN (rw): OCTOSPI2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CBC B  REGISTER RCC_AHB3SMENR: RCC AHB3 peripheral clocks enable in Sleep and Stop modes register
0x56020CBC C   FIELD 00w01 LPGPIO1SMEN (rw): LPGPIO1 enable during Sleep and Stop modes Set and cleared by software.
0x56020CBC C   FIELD 02w01 PWRSMEN (rw): PWR clock enable during Sleep and Stop modes Set and cleared by software.
0x56020CBC C   FIELD 05w01 ADC4SMEN (rw): ADC4 clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CBC C   FIELD 06w01 DAC1SMEN (rw): DAC1 clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CBC C   FIELD 09w01 LPDMA1SMEN (rw): LPDMA1 clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CBC C   FIELD 10w01 ADF1SMEN (rw): ADF1 clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CBC C   FIELD 12w01 GTZC2SMEN (rw): GTZC2 clock enable during Sleep and Stop modes Set and cleared by software.
0x56020CBC C   FIELD 31w01 SRAM4SMEN (rw): SRAM4 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CC4 B  REGISTER RCC_APB1SMENR1: RCC APB1 peripheral clocks enable in Sleep and Stop modes register 1
0x56020CC4 C   FIELD 00w01 TIM2SMEN (rw): TIM2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CC4 C   FIELD 01w01 TIM3SMEN (rw): TIM3 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CC4 C   FIELD 02w01 TIM4SMEN (rw): TIM4 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CC4 C   FIELD 03w01 TIM5SMEN (rw): TIM5 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CC4 C   FIELD 04w01 TIM6SMEN (rw): TIM6 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CC4 C   FIELD 05w01 TIM7SMEN (rw): TIM7 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CC4 C   FIELD 11w01 WWDGSMEN (rw): Window watchdog clocks enable during Sleep and Stop modes Set and cleared by software. This bit is forced to 1 by hardware when the hardware WWDG option is activated.
0x56020CC4 C   FIELD 14w01 SPI2SMEN (rw): SPI2 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC4 C   FIELD 17w01 USART2SMEN (rw): USART2 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC4 C   FIELD 18w01 USART3SMEN (rw): USART3 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC4 C   FIELD 19w01 UART4SMEN (rw): UART4 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC4 C   FIELD 20w01 UART5SMEN (rw): UART5 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC4 C   FIELD 21w01 I2C1SMEN (rw): I2C1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC4 C   FIELD 22w01 I2C2SMEN (rw): I2C2 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC4 C   FIELD 24w01 CRSSMEN (rw): CRS clock enable during Sleep and Stop modes Set and cleared by software.
0x56020CC8 B  REGISTER RCC_APB1SMENR2: RCC APB1 peripheral clocks enable in Sleep and Stop modes register 2
0x56020CC8 C   FIELD 01w01 I2C4SMEN (rw): I2C4 clocks enable during Sleep and Stop modes Set and cleared by software Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC8 C   FIELD 05w01 LPTIM2SMEN (rw): LPTIM2 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CC8 C   FIELD 09w01 FDCAN1SMEN (rw): FDCAN1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CC8 C   FIELD 23w01 UCPD1SMEN (rw): UCPD1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CCC B  REGISTER RCC_APB2SMENR: RCC APB2 peripheral clocks enable in Sleep and Stop modes register
0x56020CCC C   FIELD 11w01 TIM1SMEN (rw): TIM1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CCC C   FIELD 12w01 SPI1SMEN (rw): SPI1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CCC C   FIELD 13w01 TIM8SMEN (rw): TIM8 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CCC C   FIELD 14w01 USART1SMEN (rw): USART1clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CCC C   FIELD 16w01 TIM15SMEN (rw): TIM15 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CCC C   FIELD 17w01 TIM16SMEN (rw): TIM16 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CCC C   FIELD 18w01 TIM17SMEN (rw): TIM17 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CCC C   FIELD 21w01 SAI1SMEN (rw): SAI1 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CCC C   FIELD 22w01 SAI2SMEN (rw): SAI2 clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CD0 B  REGISTER RCC_APB3SMENR: RCC APB3 peripheral clock enable in Sleep and Stop modes register
0x56020CD0 C   FIELD 01w01 SYSCFGSMEN (rw): SYSCFG clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CD0 C   FIELD 05w01 SPI3SMEN (rw): SPI3 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD0 C   FIELD 06w01 LPUART1SMEN (rw): LPUART1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD0 C   FIELD 07w01 I2C3SMEN (rw): I2C3 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD0 C   FIELD 11w01 LPTIM1SMEN (rw): LPTIM1 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD0 C   FIELD 12w01 LPTIM3SMEN (rw): LPTIM3 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD0 C   FIELD 13w01 LPTIM4SMEN (rw): LPTIM4 clocks enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD0 C   FIELD 14w01 OPAMPSMEN (rw): OPAMP clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CD0 C   FIELD 15w01 COMPSMEN (rw): COMP clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CD0 C   FIELD 20w01 VREFSMEN (rw): VREFBUF clocks enable during Sleep and Stop modes Set and cleared by software.
0x56020CD0 C   FIELD 21w01 RTCAPBSMEN (rw): RTC and TAMP APB clock enable during Sleep and Stop modes Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 B  REGISTER RCC_SRDAMR: RCC SmartRun domain peripheral autonomous mode register
0x56020CD8 C   FIELD 05w01 SPI3AMEN (rw): SPI3 autonomous mode enable in Stop 0,1, 2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 06w01 LPUART1AMEN (rw): LPUART1 autonomous mode enable in Stop 0,1, 2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 07w01 I2C3AMEN (rw): I2C3 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 11w01 LPTIM1AMEN (rw): LPTIM1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 12w01 LPTIM3AMEN (rw): LPTIM3 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 13w01 LPTIM4AMEN (rw): LPTIM4 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 14w01 OPAMPAMEN (rw): OPAMP autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x56020CD8 C   FIELD 15w01 COMPAMEN (rw): COMP autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x56020CD8 C   FIELD 20w01 VREFAMEN (rw): VREFBUF autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x56020CD8 C   FIELD 21w01 RTCAPBAMEN (rw): RTC and TAMP autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 25w01 ADC4AMEN (rw): ADC4 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 26w01 LPGPIO1AMEN (rw): LPGPIO1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x56020CD8 C   FIELD 27w01 DAC1AMEN (rw): DAC1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 28w01 LPDMA1AMEN (rw): LPDMA1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 29w01 ADF1AMEN (rw): ADF1 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software. Note: This bit must be set to allow the peripheral to wake up from Stop modes.
0x56020CD8 C   FIELD 31w01 SRAM4AMEN (rw): SRAM4 autonomous mode enable in Stop 0,1,2 mode Set and cleared by software.
0x56020CE0 B  REGISTER RCC_CCIPR1: RCC peripherals independent clock configuration register 1
0x56020CE0 C   FIELD 00w02 USART1SEL (rw): USART1 kernel clock source selection This bits are used to select the USART1 kernel clock source. Note: The USART1 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x56020CE0 C   FIELD 02w02 USART2SEL (rw): USART2 kernel clock source selection This bits are used to select the USART2 kernel clock source. Note: The USART2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x56020CE0 C   FIELD 04w02 USART3SEL (rw): USART3 kernel clock source selection This bits are used to select the USART3 kernel clock source. Note: The USART3 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x56020CE0 C   FIELD 06w02 UART4SEL (rw): UART4 kernel clock source selection This bits are used to select the UART4 kernel clock source. Note: The UART4 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x56020CE0 C   FIELD 08w02 UART5SEL (rw): UART5 kernel clock source selection These bits are used to select the UART5 kernel clock source. Note: The UART5 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or LSE.
0x56020CE0 C   FIELD 10w02 I2C1SEL (rw): I2C1 kernel clock source selection These bits are used to select the I2C1 kernel clock source. Note: The I2C1 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x56020CE0 C   FIELD 12w02 I2C2SEL (rw): I2C2 kernel clock source selection These bits are used to select the I2C2 kernel clock source. Note: The I2C2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x56020CE0 C   FIELD 14w02 I2C4SEL (rw): I2C4 kernel clock source selection These bits are used to select the I2C4 kernel clock source. Note: The I2C4 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x56020CE0 C   FIELD 16w02 SPI2SEL (rw): SPI2 kernel clock source selection These bits are used to select the SPI2 kernel clock source. Note: The SPI2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x56020CE0 C   FIELD 18w02 LPTIM2SEL (rw): Low-power timer 2 kernel clock source selection These bits are used to select the LPTIM2 kernel clock source. Note: The LPTIM2 is functional in Stop 0 and Stop 1 mode only when the kernel clock is LSI, LSE or HSI16 if HSIKERON = 1.
0x56020CE0 C   FIELD 20w02 SPI1SEL (rw): SPI1 kernel clock source selection These bits are used to select the SPI1 kernel clock source. Note: The SPI1 is functional in Stop 0 and Stop 1 mode only when the kernel clock is HSI16 or MSIK.
0x56020CE0 C   FIELD 22w02 SYSTICKSEL (rw): SysTick clock source selection These bits are used to select the SysTick clock source. Note: When LSE or LSI is selected, the AHB frequency must be at least four times higher than the LSI or LSE frequency. In addition, a jitter up to one HCLK cycle is introduced, due to the LSE or LSI sampling with HCLK in the SysTick circuitry.
0x56020CE0 C   FIELD 24w02 FDCAN1SEL (rw): FDCAN1 kernel clock source selection These bits are used to select the FDCAN1 kernel clock source.
0x56020CE0 C   FIELD 26w02 ICLKSEL (rw): intermediate clock source selection These bits are used to select the clock source used by OTG_FS and SDMMC.
0x56020CE0 C   FIELD 29w03 TIMICSEL (rw): Clocks sources for TIM16,TIM17 and LPTIM2 internal input capture When the TIMICSEL2 bit is set, the TIM16, TIM17 and LPTIM2 internal input capture can be connected either to HSI/256, MSI/4 or MSI/1024. Depending on TIMICSEL[1:0] value, MSI is either MSIK or MSIS. When TIMICSEL2 is cleared, the HSI, MSIK and MSIS clock sources cannot be selected as TIM16, TIM17 or LPTIM2 internal input capture. 0xx: HSI, MSIK and MSIS dividers disabled Note: The clock division must be disabled (TIMICSEL configured to 0xx) before selecting or changing a clock sources division.
0x56020CE4 B  REGISTER RCC_CCIPR2: RCC peripherals independent clock configuration register 2
0x56020CE4 C   FIELD 00w03 MDF1SEL (rw): MDF1 kernel clock source selection These bits are used to select the MDF1 kernel clock source. others: reserved
0x56020CE4 C   FIELD 05w03 SAI1SEL (rw): SAI1 kernel clock source selection These bits are used to select the SAI1 kernel clock source. others: reserved Note: If the selected clock is the external clock and this clock is stopped, a switch to another clock is impossible.
0x56020CE4 C   FIELD 08w03 SAI2SEL (rw): SAI2 kernel clock source selection These bits are used to select the SAI2 kernel clock source. others: reserved Note: If the selected clock is the external clock and this clock is stopped, a switch to another clock is impossible.
0x56020CE4 C   FIELD 11w01 SAESSEL (rw): SAES kernel clock source selection This bit is used to select the SAES kernel clock source.
0x56020CE4 C   FIELD 12w02 RNGSEL (rw): RNGSEL kernel clock source selection These bits are used to select the RNG kernel clock source.
0x56020CE4 C   FIELD 14w01 SDMMCSEL (rw): SDMMC1 and SDMMC2 kernel clock source selection This bit is used to select the SDMMC kernel clock source. It is recommended to change this bit only after reset and before enabling the SDMMC.
0x56020CE4 C   FIELD 20w02 OCTOSPISEL (rw): OCTOSPI1 and OCTOSPI2 kernel clock source selection These bits are used to select the OCTOSPI1 and OCTOSPI2 kernel clock source.
0x56020CE8 B  REGISTER RCC_CCIPR3: RCC peripherals independent clock configuration register 3
0x56020CE8 C   FIELD 00w03 LPUART1SEL (rw): LPUART1 kernel clock source selection These bits are used to select the LPUART1 kernel clock source. others: reserved Note: The LPUART1 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is HSI16, LSE or MSIK.
0x56020CE8 C   FIELD 03w02 SPI3SEL (rw): SPI3 kernel clock source selection These bits are used to select the SPI3 kernel clock source. Note: The SPI3 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is HSI16 or MSIK.
0x56020CE8 C   FIELD 06w02 I2C3SEL (rw): I2C3 kernel clock source selection These bits are used to select the I2C3 kernel clock source. Note: The I2C3 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is HSI16 or MSIK.
0x56020CE8 C   FIELD 08w02 LPTIM34SEL (rw): LPTIM3 and LPTIM4 kernel clock source selection These bits are used to select the LPTIM3 and LPTIM4 kernel clock source. Note: The LPTIM3 and LPTIM4 are functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is LSI, LSE, HSI16 with HSIKERON = 1 or MSIK with MSIKERON = 1.
0x56020CE8 C   FIELD 10w02 LPTIM1SEL (rw): LPTIM1 kernel clock source selection These bits are used to select the LPTIM1 kernel clock source. Note: The LPTIM1 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is LSI, LSE, HSI16 with HSIKERON = 1 or MSIK with MSIKERON = 1.
0x56020CE8 C   FIELD 12w03 ADCDACSEL (rw): ADC1, ADC4 and DAC1 kernel clock source selection These bits are used to select the ADC1, ADC4 and DAC1 kernel clock source. others: reserved Note: The ADC1, ADC4 and DAC1 are functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is HSI16 or MSIK (only ADC4 and DAC1 are functional in Stop 2 mode).
0x56020CE8 C   FIELD 15w01 DAC1SEL (rw): DAC1 sample and hold clock source selection This bit is used to select the DAC1 sample and hold clock source.
0x56020CE8 C   FIELD 16w03 ADF1SEL (rw): ADF1 kernel clock source selection These bits are used to select the ADF1 kernel clock source. others: reserved Note: The ADF1 is functional in Stop 0, Stop 1 and Stop 2 modes only when the kernel clock is AUDIOCLK or MSIK.
0x56020CF0 B  REGISTER RCC_BDCR: RCC Backup domain control register
0x56020CF0 C   FIELD 00w01 LSEON (rw): LSE oscillator enable Set and cleared by software.
0x56020CF0 C   FIELD 01w01 LSERDY (ro): LSE oscillator ready Set and cleared by hardware to indicate when the external 32 kHz oscillator is stable. After the LSEON bit is cleared, LSERDY goes low after six external low-speed oscillator clock cycles.
0x56020CF0 C   FIELD 02w01 LSEBYP (rw): LSE oscillator bypass Set and cleared by software to bypass oscillator in debug mode. This bit can be written only when the external 32 kHz oscillator is disabled (LSEON = 0 and LSERDY = 0).
0x56020CF0 C   FIELD 03w02 LSEDRV (rw): LSE oscillator drive capability Set by software to modulate the drive capability of the LSE oscillator. This field can be written only when the external 32 kHz oscillator is disabled (LSEON = 0 and LSERDY = 0). Note: The oscillator is in 'Xtal mode when it is not in bypass mode.
0x56020CF0 C   FIELD 05w01 LSECSSON (rw): CSS on LSE enable Set by software to enable the CSS on LSE. LSECSSON must be enabled after the LSE oscillator is enabled (LSEON bit enabled) and ready (LSERDY flag set by hardware), and after the RTCSEL bit is selected. Once enabled, this bit cannot be disabled, except after a LSE failure detection (LSECSSD = 1). In that case, the software must disable the LSECSSON bit.
0x56020CF0 C   FIELD 06w01 LSECSSD (ro): CSS on LSE failure Detection Set by hardware to indicate when a failure is detected by the CCS on the external 32 kHz oscillator (LSE).
0x56020CF0 C   FIELD 07w01 LSESYSEN (rw): LSE system clock (LSESYS) enable Set by software to enable always the LSE system clock generated by RCC. This clock can be used by any peripheral when its source clock is the LSE or at system level in case of one of the LSCOSEL, MCO, MSI PLL mode or CSS on LSE is needed. The LSESYS clock can be generated even if LSESYSEN= 0 if the LSE clock is requested by the CSS on LSE, by a peripheral or any other source clock using LSE.
0x56020CF0 C   FIELD 08w02 RTCSEL (rw): RTC and TAMP clock source selection Set by software to select the clock source for the RTC and TAMP . Once the RTC and TAMP clock source has been selected, it cannot be changed anymore unless the Backup domain is reset, or unless a failure is detected on LSE (LSECSSD is set). The BDRST bit can be used to reset them.
0x56020CF0 C   FIELD 11w01 LSESYSRDY (ro): LSE system clock (LSESYS) ready Set and cleared by hardware to indicate when the LSE system clock is stable.When the LSESYSEN bit is set, the LSESYSRDY flag is set after two LSE clock cycles. The LSE clock must be already enabled and stable (LSEON and LSERDY are set). When the LSEON bit is cleared, LSERDY goes low after six external low-speed oscillator clock cycles.
0x56020CF0 C   FIELD 12w01 LSEGFON (rw): LSE clock glitch filter enable Set and cleared by hardware to enable the LSE glitch filter. This bit can be written only when the LSE is disabled (LSEON = 0 and LSERDY = 0)
0x56020CF0 C   FIELD 15w01 RTCEN (rw): RTC and TAMP clock enable Set and cleared by software.
0x56020CF0 C   FIELD 16w01 BDRST (rw): Backup domain software reset Set and cleared by software.
0x56020CF0 C   FIELD 24w01 LSCOEN (rw): Low-speed clock output (LSCO) enable Set and cleared by software.
0x56020CF0 C   FIELD 25w01 LSCOSEL (rw): Low-speed clock output selection Set and cleared by software.
0x56020CF0 C   FIELD 26w01 LSION (rw): LSI oscillator enable Set and cleared by software.
0x56020CF0 C   FIELD 27w01 LSIRDY (rw): LSI oscillator ready Set and cleared by hardware to indicate when the LSI oscillator is stable. After the LSION bit is cleared, LSIRDY goes low after three internal low-speed oscillator clock cycles. This bit is set when the LSI is used by IWDG or RTC, even if LSION = 0.
0x56020CF0 C   FIELD 28w01 LSIPREDIV (rw): Low-speed clock divider configuration Set and cleared by software to enable the LSI division. This bit can be written only when the LSI is disabled (LSION = 0 and LSIRDY = 0). If the LSI was previously enabled, it is necessary to wait for at least 60 Î¼s after clearing LSION bit (synchronization time for LSI to be really disabled), before writing LSIPREDIV. The LSIPREDIV cannot be changed if the LSI is used by the IWDG or by the RTC.
0x56020CF4 B  REGISTER RCC_CSR: RCC control/status register
0x56020CF4 C   FIELD 08w04 MSIKSRANGE (rw): MSIK range after Standby mode Set by software to chose the MSIK frequency at startup. This range is used after exiting Standby mode until MSIRGSEL is set. After a NRST pin or a power-on reset or when exiting Shutdown mode, the range is always 4 MHz. MSIKSRANGE can be written only when MSIRGSEL = 1. others: reserved Note: Changing the MSIKSRANGE does not change the current MSIK frequency.
0x56020CF4 C   FIELD 12w04 MSISSRANGE (rw): MSIS range after Standby mode Set by software to chose the MSIS frequency at startup. This range is used after exiting Standby mode until MSIRGSEL is set. After a NRST pin or a power-on reset or when exiting Shutdown mode, the range is always 4 MHz. MSISSRANGE can be written only when MSIRGSEL = 1. others: reserved Note: Changing the MSISSRANGE does not change the current MSIS frequency.
0x56020CF4 C   FIELD 23w01 RMVF (rw): Remove reset flag Set by software to clear the reset flags.
0x56020CF4 C   FIELD 25w01 OBLRSTF (ro): Option byte loader reset flag Set by hardware when a reset from the option byte loading occurs. Cleared by writing to the RMVF bit.
0x56020CF4 C   FIELD 26w01 PINRSTF (ro): NRST pin reset flag Set by hardware when a reset from the NRST pin occurs. Cleared by writing to the RMVF bit.
0x56020CF4 C   FIELD 27w01 BORRSTF (ro): BOR flag Set by hardware when a BOR occurs. Cleared by writing to the RMVF bit.
0x56020CF4 C   FIELD 28w01 SFTRSTF (ro): Software reset flag Set by hardware when a software reset occurs. Cleared by writing to the RMVF bit.
0x56020CF4 C   FIELD 29w01 IWDGRSTF (ro): Independent watchdog reset flag Set by hardware when an independent watchdog reset domain occurs. Cleared by writing to the RMVF bit.
0x56020CF4 C   FIELD 30w01 WWDGRSTF (ro): Window watchdog reset flag Set by hardware when a window watchdog reset occurs. Cleared by writing to the RMVF bit.
0x56020CF4 C   FIELD 31w01 LPWRRSTF (ro): Low-power reset flag Set by hardware when a reset occurs due to Stop, Standby or Shutdown mode entry, whereas the corresponding nRST_STOP, nRST_STBY or nRST_SHDW option bit is cleared. Cleared by writing to the RMVF bit.
0x56020D10 B  REGISTER RCC_SECCFGR: RCC secure configuration register
0x56020D10 C   FIELD 00w01 HSISEC (rw): HSI clock configuration and status bits security Set and reset by software.
0x56020D10 C   FIELD 01w01 HSESEC (rw): HSE clock configuration bits, status bits and HSE_CSS security Set and reset by software.
0x56020D10 C   FIELD 02w01 MSISEC (rw): MSI clock configuration and status bits security Set and reset by software.
0x56020D10 C   FIELD 03w01 LSISEC (rw): LSI clock configuration and status bits security Set and reset by software.
0x56020D10 C   FIELD 04w01 LSESEC (rw): LSE clock configuration and status bits security Set and reset by software.
0x56020D10 C   FIELD 05w01 SYSCLKSEC (rw): SYSCLK clock selection, STOPWUCK bit, clock output on MCO configuration security Set and reset by software.
0x56020D10 C   FIELD 06w01 PRESCSEC (rw): AHBx/APBx prescaler configuration bits security Set and reset by software.
0x56020D10 C   FIELD 07w01 PLL1SEC (rw): PLL1 clock configuration and status bits security Set and reset by software.
0x56020D10 C   FIELD 08w01 PLL2SEC (rw): PLL2 clock configuration and status bits security Set and reset by software.
0x56020D10 C   FIELD 09w01 PLL3SEC (rw): PLL3 clock configuration and status bits security Set and reset by software.
0x56020D10 C   FIELD 10w01 ICLKSEC (rw): intermediate clock source selection security Set and reset by software.
0x56020D10 C   FIELD 11w01 HSI48SEC (rw): HSI48 clock configuration and status bits security Set and reset by software.
0x56020D10 C   FIELD 12w01 RMVFSEC (rw): Remove reset flag security Set and reset by software.
0x56020D14 B  REGISTER RCC_PRIVCFGR: RCC privilege configuration register
0x56020D14 C   FIELD 00w01 SPRIV (rw): RCC secure functions privilege configuration Set and reset by software. This bit can be written only by a secure privileged access.
0x56020D14 C   FIELD 01w01 NSPRIV (rw): RCC non-secure functions privilege configuration Set and reset by software. This bit can be written only by privileged access, secure or non-secure.
0x56021000 A PERIPHERAL SEC_ADC4
0x56021000 B  REGISTER ADC_ISR (rw): ADC interrupt and status register
0x56021000 C   FIELD 00w01 ADRDY: ADRDY
0x56021000 C   FIELD 01w01 EOSMP: EOSMP
0x56021000 C   FIELD 02w01 EOC: EOC
0x56021000 C   FIELD 03w01 EOS: EOS
0x56021000 C   FIELD 04w01 OVR: OVR
0x56021000 C   FIELD 07w01 AWD1: AWD1
0x56021000 C   FIELD 08w01 AWD2: AWD2
0x56021000 C   FIELD 09w01 AWD3: AWD3
0x56021000 C   FIELD 11w01 EOCAL: EOCAL
0x56021000 C   FIELD 12w01 LDORDY: LDORDY
0x56021004 B  REGISTER ADC_IER (rw): ADC interrupt enable register
0x56021004 C   FIELD 00w01 ADRDYIE: ADRDYIE
0x56021004 C   FIELD 01w01 EOSMPIE: EOSMPIE
0x56021004 C   FIELD 02w01 EOCIE: EOCIE
0x56021004 C   FIELD 03w01 EOSIE: EOSIE
0x56021004 C   FIELD 04w01 OVRIE: OVRIE
0x56021004 C   FIELD 07w01 AWD1IE: AWD1IE
0x56021004 C   FIELD 08w01 AWD2IE: AWD2IE
0x56021004 C   FIELD 09w01 AWD3IE: AWD3IE
0x56021004 C   FIELD 11w01 EOCALIE: EOCALIE
0x56021004 C   FIELD 12w01 LDORDYIE: LDORDYIE
0x56021008 B  REGISTER ADC_CR: ADC control register
0x56021008 C   FIELD 00w01 ADEN (ro): ADEN
0x56021008 C   FIELD 01w01 ADDIS (ro): ADDIS
0x56021008 C   FIELD 02w01 ADSTART (ro): ADSTART
0x56021008 C   FIELD 04w01 ADSTP (ro): ADSTP
0x56021008 C   FIELD 28w01 ADVREGEN (rw): ADVREGEN
0x56021008 C   FIELD 31w01 ADCAL (ro): ADCAL
0x5602100C B  REGISTER ADC_CFGR1 (rw): ADC configuration register
0x5602100C C   FIELD 00w01 DMAEN: DMAEN
0x5602100C C   FIELD 01w01 DMACFG: DMACFG
0x5602100C C   FIELD 02w02 RES: RES
0x5602100C C   FIELD 04w01 SCANDIR: SCANDIR
0x5602100C C   FIELD 05w01 ALIGN: ALIGN
0x5602100C C   FIELD 06w03 EXTSEL: EXTSEL
0x5602100C C   FIELD 10w02 EXTEN: EXTEN
0x5602100C C   FIELD 12w01 OVRMOD: OVRMOD
0x5602100C C   FIELD 13w01 CONT: CONT
0x5602100C C   FIELD 14w01 WAIT: WAIT
0x5602100C C   FIELD 16w01 DISCEN: DISCEN
0x5602100C C   FIELD 21w01 CHSELRMOD: CHSELRMOD
0x5602100C C   FIELD 22w01 AWD1SGL: AWD1SGL
0x5602100C C   FIELD 23w01 AWD1EN: AWD1EN
0x5602100C C   FIELD 26w05 AWD1CH: AWD1CH
0x56021010 B  REGISTER ADC_CFGR2 (rw): ADC configuration register 2
0x56021010 C   FIELD 00w01 OVSE: OVSE
0x56021010 C   FIELD 02w03 OVSR: OVSR
0x56021010 C   FIELD 05w04 OVSS: OVSS
0x56021010 C   FIELD 09w01 TOVS: TOVS
0x56021010 C   FIELD 29w01 LFTRIG: LFTRIG
0x56021014 B  REGISTER ADC_SMPR (rw): ADC sample time register
0x56021014 C   FIELD 00w03 SMP1: SMP1
0x56021014 C   FIELD 04w03 SMP2: SMP2
0x56021014 C   FIELD 08w01 SMPSEL0: SMPSEL0
0x56021014 C   FIELD 09w01 SMPSEL1: SMPSEL1
0x56021014 C   FIELD 10w01 SMPSEL2: SMPSEL2
0x56021014 C   FIELD 11w01 SMPSEL3: SMPSEL3
0x56021014 C   FIELD 12w01 SMPSEL4: SMPSEL4
0x56021014 C   FIELD 13w01 SMPSEL5: SMPSEL5
0x56021014 C   FIELD 14w01 SMPSEL6: SMPSEL6
0x56021014 C   FIELD 15w01 SMPSEL7: SMPSEL7
0x56021014 C   FIELD 16w01 SMPSEL8: SMPSEL8
0x56021014 C   FIELD 17w01 SMPSEL9: SMPSEL9
0x56021014 C   FIELD 18w01 SMPSEL10: SMPSEL10
0x56021014 C   FIELD 19w01 SMPSEL11: SMPSEL11
0x56021014 C   FIELD 20w01 SMPSEL12: SMPSEL12
0x56021014 C   FIELD 21w01 SMPSEL13: SMPSEL13
0x56021014 C   FIELD 22w01 SMPSEL14: SMPSEL14
0x56021014 C   FIELD 23w01 SMPSEL15: SMPSEL15
0x56021014 C   FIELD 24w01 SMPSEL16: SMPSEL16
0x56021014 C   FIELD 25w01 SMPSEL17: SMPSEL17
0x56021014 C   FIELD 26w01 SMPSEL18: SMPSEL18
0x56021014 C   FIELD 27w01 SMPSEL19: SMPSEL19
0x56021014 C   FIELD 28w01 SMPSEL20: SMPSEL20
0x56021014 C   FIELD 29w01 SMPSEL21: SMPSEL21
0x56021014 C   FIELD 30w01 SMPSEL22: SMPSEL22
0x56021014 C   FIELD 31w01 SMPSEL23: SMPSEL23
0x56021020 B  REGISTER ADC_AWD1TR (rw): ADC watchdog threshold register
0x56021020 C   FIELD 00w12 LT1: LT1
0x56021020 C   FIELD 16w12 HT1: HT1
0x56021024 B  REGISTER ADC_AWD2TR (rw): ADC watchdog threshold register
0x56021024 C   FIELD 00w12 LT2: LT2
0x56021024 C   FIELD 16w12 HT2: HT2
0x56021028 B  REGISTER ADC_CHSELRMOD0 (rw): ADC channel selection register [alternate]
0x56021028 B  REGISTER ADC_CHSELRMOD1 (rw): ADC channel selection register [alternate]
0x56021028 C   FIELD 00w04 SQ1: SQ1
0x56021028 C   FIELD 00w24 CHSEL: CHSEL
0x56021028 C   FIELD 04w04 SQ2: SQ2
0x56021028 C   FIELD 08w04 SQ3: SQ3
0x56021028 C   FIELD 12w04 SQ4: SQ4
0x56021028 C   FIELD 16w04 SQ5: SQ5
0x56021028 C   FIELD 20w04 SQ6: SQ6
0x56021028 C   FIELD 24w04 SQ7: SQ7
0x56021028 C   FIELD 28w04 SQ8: SQ8
0x5602102C B  REGISTER ADC_AWD3TR (rw): ADC watchdog threshold register
0x5602102C C   FIELD 00w12 LT3: LT3
0x5602102C C   FIELD 16w12 HT3: HT3
0x56021040 B  REGISTER ADC_DR (ro): ADC data register
0x56021040 C   FIELD 00w16 DATA: DATA
0x56021044 B  REGISTER ADC_PWR (rw): ADC data register
0x56021044 C   FIELD 00w01 AUTOFF: AUTOFF
0x56021044 C   FIELD 01w01 DPD: DPD
0x56021044 C   FIELD 02w01 VREFPROT: VREFPROT
0x56021044 C   FIELD 03w01 VREFSECSMP: VREFSECSMP
0x560210A0 B  REGISTER ADC_AWD2CR (rw): ADC Analog Watchdog 2 Configuration register
0x560210A0 C   FIELD 00w01 AWD2CH0: AWD2CH0
0x560210A0 C   FIELD 01w01 AWD2CH1: AWD2CH1
0x560210A0 C   FIELD 02w01 AWD2CH2: AWD2CH2
0x560210A0 C   FIELD 03w01 AWD2CH3: AWD2CH3
0x560210A0 C   FIELD 04w01 AWD2CH4: AWD2CH4
0x560210A0 C   FIELD 05w01 AWD2CH5: AWD2CH5
0x560210A0 C   FIELD 06w01 AWD2CH6: AWD2CH6
0x560210A0 C   FIELD 07w01 AWD2CH7: AWD2CH7
0x560210A0 C   FIELD 08w01 AWD2CH8: AWD2CH8
0x560210A0 C   FIELD 09w01 AWD2CH9: AWD2CH9
0x560210A0 C   FIELD 10w01 AWD2CH10: AWD2CH10
0x560210A0 C   FIELD 11w01 AWD2CH11: AWD2CH11
0x560210A0 C   FIELD 12w01 AWD2CH12: AWD2CH12
0x560210A0 C   FIELD 13w01 AWD2CH13: AWD2CH13
0x560210A0 C   FIELD 14w01 AWD2CH14: AWD2CH14
0x560210A0 C   FIELD 15w01 AWD2CH15: AWD2CH15
0x560210A0 C   FIELD 16w01 AWD2CH16: AWD2CH16
0x560210A0 C   FIELD 17w01 AWD2CH17: AWD2CH17
0x560210A0 C   FIELD 18w01 AWD2CH18: AWD2CH18
0x560210A0 C   FIELD 19w01 AWD2CH19: AWD2CH19
0x560210A0 C   FIELD 20w01 AWD2CH20: AWD2CH20
0x560210A0 C   FIELD 21w01 AWD2CH21: AWD2CH21
0x560210A0 C   FIELD 22w01 AWD2CH22: AWD2CH22
0x560210A0 C   FIELD 23w01 AWD2CH23: AWD2CH23
0x560210A4 B  REGISTER ADC_AWD3CR (rw): ADC Analog Watchdog 3 Configuration register
0x560210A4 C   FIELD 00w01 AWD3CH0: AWD3CH0
0x560210A4 C   FIELD 01w01 AWD3CH1: AWD3CH1
0x560210A4 C   FIELD 02w01 AWD3CH2: AWD3CH2
0x560210A4 C   FIELD 03w01 AWD3CH3: AWD3CH3
0x560210A4 C   FIELD 04w01 AWD3CH4: AWD3CH4
0x560210A4 C   FIELD 05w01 AWD3CH5: AWD3CH5
0x560210A4 C   FIELD 06w01 AWD3CH6: AWD3CH6
0x560210A4 C   FIELD 07w01 AWD3CH7: AWD3CH7
0x560210A4 C   FIELD 08w01 AWD3CH8: AWD3CH8
0x560210A4 C   FIELD 09w01 AWD3CH9: AWD3CH9
0x560210A4 C   FIELD 10w01 AWD3CH10: AWD3CH10
0x560210A4 C   FIELD 11w01 AWD3CH11: AWD3CH11
0x560210A4 C   FIELD 12w01 AWD3CH12: AWD3CH12
0x560210A4 C   FIELD 13w01 AWD3CH13: AWD3CH13
0x560210A4 C   FIELD 14w01 AWD3CH14: AWD3CH14
0x560210A4 C   FIELD 15w01 AWD3CH15: AWD3CH15
0x560210A4 C   FIELD 16w01 AWD3CH16: AWD3CH16
0x560210A4 C   FIELD 17w01 AWD3CH17: AWD3CH17
0x560210A4 C   FIELD 18w01 AWD3CH18: AWD3CH18
0x560210A4 C   FIELD 19w01 AWD3CH19: AWD3CH19
0x560210A4 C   FIELD 20w01 AWD3CH20: AWD3CH20
0x560210A4 C   FIELD 21w01 AWD3CH21: AWD3CH21
0x560210A4 C   FIELD 22w01 AWD3CH22: AWD3CH22
0x560210A4 C   FIELD 23w01 AWD3CH23: AWD3CH23
0x560210C4 B  REGISTER ADC_CALFACT (rw): ADC Calibration factor
0x560210C4 C   FIELD 00w07 CALFACT: CALFACT
0x560210D0 B  REGISTER ADC_OR (rw): ADC option register
0x560210D0 C   FIELD 00w01 CHN21SEL: CHN21SEL
0x56021308 B  REGISTER ADC_CCR (rw): ADC common configuration register
0x56021308 C   FIELD 18w04 PRESC: PRESC
0x56021308 C   FIELD 22w01 VREFEN: VREFEN
0x56021308 C   FIELD 23w01 VSENSESEL: VSENSESEL
0x56021308 C   FIELD 24w01 VBATEN: VBATEN
0x56021800 A PERIPHERAL SEC_DAC1
0x56021800 B  REGISTER DAC_CR (rw): DAC control register
0x56021800 C   FIELD 00w01 EN1: DAC channel1 enable
0x56021800 C   FIELD 01w01 TEN1: DAC channel1 trigger enable
0x56021800 C   FIELD 02w04 TSEL1: DAC channel1 trigger selection
0x56021800 C   FIELD 06w02 WAVE1: DAC channel1 noise/triangle wave generation enable
0x56021800 C   FIELD 08w04 MAMP1: DAC channel1 mask/amplitude selector
0x56021800 C   FIELD 12w01 DMAEN1: DAC channel1 DMA enable
0x56021800 C   FIELD 13w01 DMAUDRIE1: DAC channel1 DMA Underrun Interrupt enable
0x56021800 C   FIELD 14w01 CEN1: DAC channel1 calibration enable
0x56021800 C   FIELD 16w01 EN2: DAC channel2 enable
0x56021800 C   FIELD 17w01 TEN2: DAC channel2 trigger enable
0x56021800 C   FIELD 18w04 TSEL2: DAC channel2 trigger selection
0x56021800 C   FIELD 22w02 WAVE2: DAC channel2 noise/triangle wave generation enable
0x56021800 C   FIELD 24w04 MAMP2: DAC channel2 mask/amplitude selector
0x56021800 C   FIELD 28w01 DMAEN2: DAC channel2 DMA enable
0x56021800 C   FIELD 29w01 DMAUDRIE2: DAC channel2 DMA underrun interrupt enable
0x56021800 C   FIELD 30w01 CEN2: DAC channel2 calibration enable
0x56021804 B  REGISTER DAC_SWTRGR (wo): DAC software trigger register
0x56021804 C   FIELD 00w01 SWTRIG1: DAC channel1 software trigger
0x56021804 C   FIELD 01w01 SWTRIG2: DAC channel2 software trigger
0x56021808 B  REGISTER DAC_DHR12R1 (rw): DAC channel1 12-bit right-aligned data holding register
0x56021808 C   FIELD 00w12 DACC1DHR: DAC channel1 12-bit right-aligned data
0x56021808 C   FIELD 16w12 DACC1DHRB: DAC channel1 12-bit right-aligned data B
0x5602180C B  REGISTER DAC_DHR12L1 (rw): DAC channel1 12-bit left aligned data holding register
0x5602180C C   FIELD 04w12 DACC1DHR: DAC channel1 12-bit left-aligned data
0x5602180C C   FIELD 20w12 DACC1DHRB: DAC channel1 12-bit left-aligned data B
0x56021810 B  REGISTER DAC_DHR8R1 (rw): DAC channel1 8-bit right aligned data holding register
0x56021810 C   FIELD 00w08 DACC1DHR: DAC channel1 8-bit right-aligned data
0x56021810 C   FIELD 08w08 DACC1DHRB: DAC channel1 8-bit right-aligned Sdata
0x56021814 B  REGISTER DAC_DHR12R2 (rw): DAC channel2 12-bit right aligned data holding register
0x56021814 C   FIELD 00w12 DACC2DHR: DAC channel2 12-bit right-aligned data
0x56021814 C   FIELD 16w12 DACC2DHRB: DAC channel2 12-bit right-aligned data
0x56021818 B  REGISTER DAC_DHR12L2 (rw): DAC channel2 12-bit left aligned data holding register
0x56021818 C   FIELD 04w12 DACC2DHR: DAC channel2 12-bit left-aligned data
0x56021818 C   FIELD 20w12 DACC2DHRB: DAC channel2 12-bit left-aligned data B
0x5602181C B  REGISTER DAC_DHR8R2 (rw): DAC channel2 8-bit right-aligned data holding register
0x5602181C C   FIELD 00w08 DACC2DHR: DAC channel2 8-bit right-aligned data
0x5602181C C   FIELD 08w08 DACC2DHRB: DAC channel2 8-bit right-aligned data
0x56021820 B  REGISTER DAC_DHR12RD (rw): Dual DAC 12-bit right-aligned data holding register
0x56021820 C   FIELD 00w12 DACC1DHR: DAC channel1 12-bit right-aligned data
0x56021820 C   FIELD 16w12 DACC2DHR: DAC channel2 12-bit right-aligned data
0x56021824 B  REGISTER DAC_DHR12LD (rw): DUAL DAC 12-bit left aligned data holding register
0x56021824 C   FIELD 04w12 DACC1DHR: DAC channel1 12-bit left-aligned data
0x56021824 C   FIELD 20w12 DACC2DHR: DAC channel2 12-bit left-aligned data
0x56021828 B  REGISTER DAC_DHR8RD (rw): DUAL DAC 8-bit right aligned data holding register
0x56021828 C   FIELD 00w08 DACC1DHR: DAC channel1 8-bit right-aligned data
0x56021828 C   FIELD 08w08 DACC2DHR: DAC channel2 8-bit right-aligned data
0x5602182C B  REGISTER DAC_DOR1 (ro): DAC channel1 data output register
0x5602182C C   FIELD 00w12 DACC1DOR: DAC channel1 data output
0x5602182C C   FIELD 16w12 DACC1DORB: DAC channel1 data output
0x56021830 B  REGISTER DAC_DOR2 (ro): DAC channel2 data output register
0x56021830 C   FIELD 00w12 DACC2DOR: DAC channel2 data output
0x56021830 C   FIELD 16w12 DACC2DORB: DAC channel2 data output
0x56021834 B  REGISTER DAC_SR: DAC status register
0x56021834 C   FIELD 11w01 DAC1RDY (ro): DAC channel1 ready status bit
0x56021834 C   FIELD 12w01 DORSTAT1 (ro): DAC channel1 output register status bit
0x56021834 C   FIELD 13w01 DMAUDR1 (rw): DAC channel1 DMA underrun flag
0x56021834 C   FIELD 14w01 CAL_FLAG1 (ro): DAC Channel 1 calibration offset status
0x56021834 C   FIELD 15w01 BWST1 (ro): DAC Channel 1 busy writing sample time flag
0x56021834 C   FIELD 27w01 DAC2RDY (ro): DAC channel 2 ready status bit
0x56021834 C   FIELD 28w01 DORSTAT2 (ro): DAC channel 2 output register status bit
0x56021834 C   FIELD 29w01 DMAUDR2 (rw): DAC channel2 DMA underrun flag
0x56021834 C   FIELD 30w01 CAL_FLAG2 (ro): DAC Channel 2 calibration offset status
0x56021834 C   FIELD 31w01 BWST2 (ro): DAC Channel 2 busy writing sample time flag
0x56021838 B  REGISTER DAC_CCR (rw): DAC calibration control register
0x56021838 C   FIELD 00w05 OTRIM1: DAC Channel 1 offset trimming value
0x56021838 C   FIELD 16w05 OTRIM2: DAC Channel 2 offset trimming value
0x5602183C B  REGISTER DAC_MCR (rw): DAC mode control register
0x5602183C C   FIELD 00w03 MODE1: DAC Channel 1 mode
0x5602183C C   FIELD 08w01 DMADOUBLE1: DAC Channel1 DMA double data mode
0x5602183C C   FIELD 09w01 SINFORMAT1: Enable signed format for DAC channel1
0x5602183C C   FIELD 14w02 HFSEL: High frequency interface mode selection
0x5602183C C   FIELD 16w03 MODE2: DAC Channel 2 mode
0x5602183C C   FIELD 24w01 DMADOUBLE2: DAC Channel2 DMA double data mode
0x5602183C C   FIELD 25w01 SINFORMAT2: Enable signed format for DAC channel2
0x56021840 B  REGISTER DAC_SHSR1 (rw): DAC Sample and Hold sample time register 1
0x56021840 C   FIELD 00w10 TSAMPLE1: DAC Channel 1 sample Time (only valid in sample &amp; hold mode)
0x56021844 B  REGISTER DAC_SHSR2 (rw): DAC channel2 sample and hold sample time register
0x56021844 C   FIELD 00w10 TSAMPLE2: DAC Channel 2 sample Time (only valid in sample and hold mode)
0x56021848 B  REGISTER DAC_SHHR (rw): DAC Sample and Hold hold time register
0x56021848 C   FIELD 00w10 THOLD1: DAC Channel 1 hold Time (only valid in sample and hold mode)
0x56021848 C   FIELD 16w10 THOLD2: DAC Channel 2 hold time (only valid in sample and hold mode)
0x5602184C B  REGISTER DAC_SHRR (rw): DAC Sample and Hold refresh time register
0x5602184C C   FIELD 00w08 TREFRESH1: DAC Channel 1 refresh Time (only valid in sample and hold mode)
0x5602184C C   FIELD 16w08 TREFRESH2: DAC Channel 2 refresh Time (only valid in sample and hold mode)
0x56021854 B  REGISTER DAC_AUTOCR (rw): Autonomous mode control register
0x56021854 C   FIELD 22w01 AUTOMODE: DAC Autonomous mode
0x56022000 A PERIPHERAL SEC_EXTI
0x56022000 B  REGISTER RTSR1 (rw): EXTI rising trigger selection register
0x56022000 C   FIELD 00w01 RT0: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 01w01 RT1: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 02w01 RT2: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 03w01 RT3: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 04w01 RT4: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 05w01 RT5: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 06w01 RT6: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 07w01 RT7: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 08w01 RT8: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 09w01 RT9: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 10w01 RT10: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 11w01 RT11: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 12w01 RT12: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 13w01 RT13: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 14w01 RT14: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 15w01 RT15: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 16w01 RT16: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 17w01 RT17: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 18w01 RT18: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 19w01 RT19: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 20w01 RT20: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 21w01 RT21: Rising trigger event configuration bit of configurable event input x
0x56022000 C   FIELD 22w01 RT22: Rising trigger event configuration bit of configurable event input x
0x56022004 B  REGISTER FTSR1 (rw): EXTI falling trigger selection register
0x56022004 C   FIELD 00w01 FT0: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 01w01 FT1: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 02w01 FT2: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 03w01 FT3: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 04w01 FT4: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 05w01 FT5: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 06w01 FT6: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 07w01 FT7: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 08w01 FT8: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 09w01 FT9: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 10w01 FT10: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 11w01 FT11: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 12w01 FT12: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 13w01 FT13: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 14w01 FT14: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 15w01 FT15: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 16w01 FT16: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 17w01 FT17: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 18w01 FT18: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 19w01 FT19: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 20w01 FT20: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 21w01 FT21: Falling trigger event configuration bit of configurable event input x
0x56022004 C   FIELD 22w01 FT22: Falling trigger event configuration bit of configurable event input x
0x56022008 B  REGISTER SWIER1 (rw): EXTI software interrupt event register
0x56022008 C   FIELD 00w01 SWI0: Software interrupt on event x
0x56022008 C   FIELD 01w01 SWI1: Software interrupt on event x
0x56022008 C   FIELD 02w01 SWI2: Software interrupt on event x
0x56022008 C   FIELD 03w01 SWI3: Software interrupt on event x
0x56022008 C   FIELD 04w01 SWI4: Software interrupt on event x
0x56022008 C   FIELD 05w01 SWI5: Software interrupt on event x
0x56022008 C   FIELD 06w01 SWI6: Software interrupt on event x
0x56022008 C   FIELD 07w01 SWI7: Software interrupt on event x
0x56022008 C   FIELD 08w01 SWI8: Software interrupt on event x
0x56022008 C   FIELD 09w01 SWI9: Software interrupt on event x
0x56022008 C   FIELD 10w01 SWI10: Software interrupt on event x
0x56022008 C   FIELD 11w01 SWI11: Software interrupt on event x
0x56022008 C   FIELD 12w01 SWI12: Software interrupt on event x
0x56022008 C   FIELD 13w01 SWI13: Software interrupt on event x
0x56022008 C   FIELD 14w01 SWI14: Software interrupt on event x
0x56022008 C   FIELD 15w01 SWI15: Software interrupt on event x
0x56022008 C   FIELD 16w01 SWI16: Software interrupt on event x
0x56022008 C   FIELD 17w01 SWI17: Software interrupt on event x
0x56022008 C   FIELD 18w01 SWI18: Software interrupt on event x
0x56022008 C   FIELD 19w01 SWI19: Software interrupt on event x
0x56022008 C   FIELD 20w01 SWI20: Software interrupt on event x
0x56022008 C   FIELD 21w01 SWI21: Software interrupt on event x
0x56022008 C   FIELD 22w01 SWI22: Software interrupt on event x
0x5602200C B  REGISTER RPR1 (rw): EXTI rising edge pending register
0x5602200C C   FIELD 00w01 RPIF0: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 01w01 RPIF1: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 02w01 RPIF2: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 03w01 RPIF3: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 04w01 RPIF4: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 05w01 RPIF5: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 06w01 RPIF6: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 07w01 RPIF7: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 08w01 RPIF8: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 09w01 RPIF9: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 10w01 RPIF10: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 11w01 RPIF11: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 12w01 RPIF12: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 13w01 RPIF13: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 14w01 RPIF14: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 15w01 RPIF15: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 16w01 RPIF16: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 17w01 RPIF17: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 18w01 RPIF18: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 19w01 RPIF19: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 20w01 RPIF20: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 21w01 RPIF21: configurable event inputs x rising edge pending bit
0x5602200C C   FIELD 22w01 RPIF22: configurable event inputs x rising edge pending bit
0x56022010 B  REGISTER FPR1 (rw): EXTI falling edge pending register
0x56022010 C   FIELD 00w01 FPIF0: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 01w01 FPIF1: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 02w01 FPIF2: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 03w01 FPIF3: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 04w01 FPIF4: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 05w01 FPIF5: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 06w01 FPIF6: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 07w01 FPIF7: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 08w01 FPIF8: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 09w01 FPIF9: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 10w01 FPIF10: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 11w01 FPIF11: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 12w01 FPIF12: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 13w01 FPIF13: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 14w01 FPIF14: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 15w01 FPIF15: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 16w01 FPIF16: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 17w01 FPIF17: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 18w01 FPIF18: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 19w01 FPIF19: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 20w01 FPIF20: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 21w01 FPIF21: configurable event inputs x falling edge pending bit.
0x56022010 C   FIELD 22w01 FPIF22: configurable event inputs x falling edge pending bit.
0x56022014 B  REGISTER SECCFGR1 (rw): EXTI security configuration register
0x56022014 C   FIELD 00w01 SEC0: Security enable on event input x
0x56022014 C   FIELD 01w01 SEC1: Security enable on event input x
0x56022014 C   FIELD 02w01 SEC2: Security enable on event input x
0x56022014 C   FIELD 03w01 SEC3: Security enable on event input x
0x56022014 C   FIELD 04w01 SEC4: Security enable on event input x
0x56022014 C   FIELD 05w01 SEC5: Security enable on event input x
0x56022014 C   FIELD 06w01 SEC6: Security enable on event input x
0x56022014 C   FIELD 07w01 SEC7: Security enable on event input x
0x56022014 C   FIELD 08w01 SEC8: Security enable on event input x
0x56022014 C   FIELD 09w01 SEC9: Security enable on event input x
0x56022014 C   FIELD 10w01 SEC10: Security enable on event input x
0x56022014 C   FIELD 11w01 SEC11: Security enable on event input x
0x56022014 C   FIELD 12w01 SEC12: Security enable on event input x
0x56022014 C   FIELD 13w01 SEC13: Security enable on event input x
0x56022014 C   FIELD 14w01 SEC14: Security enable on event input x
0x56022014 C   FIELD 15w01 SEC15: Security enable on event input x
0x56022014 C   FIELD 16w01 SEC16: Security enable on event input x
0x56022014 C   FIELD 17w01 SEC17: Security enable on event input x
0x56022014 C   FIELD 18w01 SEC18: Security enable on event input x
0x56022014 C   FIELD 19w01 SEC19: Security enable on event input x
0x56022014 C   FIELD 20w01 SEC20: Security enable on event input x
0x56022014 C   FIELD 21w01 SEC21: Security enable on event input x
0x56022014 C   FIELD 22w01 SEC22: Security enable on event input x
0x56022018 B  REGISTER PRIVCFGR1 (rw): EXTI privilege configuration register
0x56022018 C   FIELD 00w01 PRIV0: Security enable on event input x
0x56022018 C   FIELD 01w01 PRIV1: Security enable on event input x
0x56022018 C   FIELD 02w01 PRIV2: Security enable on event input x
0x56022018 C   FIELD 03w01 PRIV3: Security enable on event input x
0x56022018 C   FIELD 04w01 PRIV4: Security enable on event input x
0x56022018 C   FIELD 05w01 PRIV5: Security enable on event input x
0x56022018 C   FIELD 06w01 PRIV6: Security enable on event input x
0x56022018 C   FIELD 07w01 PRIV7: Security enable on event input x
0x56022018 C   FIELD 08w01 PRIV8: Security enable on event input x
0x56022018 C   FIELD 09w01 PRIV9: Security enable on event input x
0x56022018 C   FIELD 10w01 PRIV10: Security enable on event input x
0x56022018 C   FIELD 11w01 PRIV11: Security enable on event input x
0x56022018 C   FIELD 12w01 PRIV12: Security enable on event input x
0x56022018 C   FIELD 13w01 PRIV13: Security enable on event input x
0x56022018 C   FIELD 14w01 PRIV14: Security enable on event input x
0x56022018 C   FIELD 15w01 PRIV15: Security enable on event input x
0x56022018 C   FIELD 16w01 PRIV16: Security enable on event input x
0x56022018 C   FIELD 17w01 PRIV17: Security enable on event input x
0x56022018 C   FIELD 18w01 PRIV18: Security enable on event input x
0x56022018 C   FIELD 19w01 PRIV19: Security enable on event input x
0x56022018 C   FIELD 20w01 PRIV20: Security enable on event input x
0x56022018 C   FIELD 21w01 PRIV21: Security enable on event input x
0x56022018 C   FIELD 22w01 PRIV22: Security enable on event input x
0x56022060 B  REGISTER EXTICR1 (rw): EXTI external interrupt selection register
0x56022060 C   FIELD 00w08 EXTI0_7: EXTIm GPIO port selection
0x56022060 C   FIELD 08w08 EXTI8_15: EXTIm+1 GPIO port selection
0x56022060 C   FIELD 16w08 EXTI16_23: EXTIm+2 GPIO port selection
0x56022060 C   FIELD 24w08 EXTI24_31: EXTIm+3 GPIO port selection
0x56022064 B  REGISTER EXTICR2 (rw): EXTI external interrupt selection register
0x56022064 C   FIELD 00w08 EXTI0_7: EXTIm GPIO port selection
0x56022064 C   FIELD 08w08 EXTI8_15: EXTIm+1 GPIO port selection
0x56022064 C   FIELD 16w08 EXTI16_23: EXTIm+2 GPIO port selection
0x56022064 C   FIELD 24w08 EXTI24_31: EXTIm+3 GPIO port selection
0x56022068 B  REGISTER EXTICR3 (rw): EXTI external interrupt selection register
0x56022068 C   FIELD 00w08 EXTI0_7: EXTIm GPIO port selection
0x56022068 C   FIELD 08w08 EXTI8_15: EXTIm+1 GPIO port selection
0x56022068 C   FIELD 16w08 EXTI16_23: EXTIm+2 GPIO port selection
0x56022068 C   FIELD 24w08 EXTI24_31: EXTIm+3 GPIO port selection
0x5602206C B  REGISTER EXTICR4 (rw): EXTI external interrupt selection register
0x5602206C C   FIELD 00w08 EXTI0_7: EXTIm GPIO port selection
0x5602206C C   FIELD 08w08 EXTI8_15: EXTIm+1 GPIO port selection
0x5602206C C   FIELD 16w08 EXTI16_23: EXTIm+2 GPIO port selection
0x5602206C C   FIELD 24w08 EXTI24_31: EXTIm+3 GPIO port selection
0x56022070 B  REGISTER LOCKR (rw): EXTI lock register
0x56022070 C   FIELD 00w01 LOCK: LOCK
0x56022080 B  REGISTER IMR1 (rw): EXTI CPU wakeup with interrupt mask register
0x56022080 C   FIELD 00w01 IM0: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 01w01 IM1: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 02w01 IM2: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 03w01 IM3: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 04w01 IM4: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 05w01 IM5: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 06w01 IM6: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 07w01 IM7: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 08w01 IM8: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 09w01 IM9: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 10w01 IM10: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 11w01 IM11: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 12w01 IM12: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 13w01 IM13: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 14w01 IM14: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 15w01 IM15: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 16w01 IM16: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 17w01 IM17: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 18w01 IM18: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 19w01 IM19: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 20w01 IM20: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 21w01 IM21: CPU wakeup with interrupt mask on event input
0x56022080 C   FIELD 22w01 IM22: CPU wakeup with interrupt mask on event input
0x56022084 B  REGISTER EMR1 (rw): EXTI CPU wakeup with event mask register
0x56022084 C   FIELD 00w01 EM0: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 01w01 EM1: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 02w01 EM2: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 03w01 EM3: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 04w01 EM4: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 05w01 EM5: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 06w01 EM6: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 07w01 EM7: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 08w01 EM8: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 09w01 EM9: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 10w01 EM10: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 11w01 EM11: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 12w01 EM12: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 13w01 EM13: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 14w01 EM14: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 15w01 EM15: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 16w01 EM16: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 17w01 EM17: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 18w01 EM18: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 19w01 EM19: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 20w01 EM20: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 21w01 EM21: CPU wakeup with event generation mask on event input
0x56022084 C   FIELD 22w01 EM22: CPU wakeup with event generation mask on event input
0x56023000 A PERIPHERAL SEC_GTZC2_TZSC
0x56023000 B  REGISTER TZSC_CR (rw): TZSC control register
0x56023000 C   FIELD 00w01 LCK: lock the configuration of GTZC1_TZSC_SECCFGRx and GTZC1_TZSC_PRIVCFGRx registers until next reset
0x56023010 B  REGISTER TZSC_SECCFGR1 (rw): TZSC secure configuration register 1
0x56023010 C   FIELD 00w01 SPI3SEC: secure access mode for SPI3
0x56023010 C   FIELD 01w01 LPUART1SEC: secure access mode for LPUART1
0x56023010 C   FIELD 02w01 I2C3SEC: secure access mode for I2C3
0x56023010 C   FIELD 03w01 LPTIM1SEC: secure access mode for LPTIM1
0x56023010 C   FIELD 04w01 LPTIM3SEC: secure access mode for LPTIM3
0x56023010 C   FIELD 05w01 LPTIM4SEC: secure access mode for LPTIM4
0x56023010 C   FIELD 06w01 OPAMPSEC: secure access mode for OPAMP
0x56023010 C   FIELD 07w01 COMPSEC: secure access mode for COMP
0x56023010 C   FIELD 08w01 ADC4SEC: secure access mode for ADC4
0x56023010 C   FIELD 09w01 VREFBUFSEC: secure access mode for VREFBUF
0x56023010 C   FIELD 11w01 DAC1SEC: secure access mode for DAC1
0x56023010 C   FIELD 12w01 ADF1SEC: secure access mode for ADF1
0x56023020 B  REGISTER TZSC_PRIVCFGR1 (rw): TZSC privilege configuration register 1
0x56023020 C   FIELD 00w01 SPI3PRIV: privileged access mode for SPI3
0x56023020 C   FIELD 01w01 LPUART1PRIV: privileged access mode for LPUART1
0x56023020 C   FIELD 02w01 I2C3PRIV: privileged access mode for I2C3
0x56023020 C   FIELD 03w01 LPTIM1PRIV: privileged access mode for LPTIM1
0x56023020 C   FIELD 04w01 LPTIM3PRIV: privileged access mode for LPTIM3
0x56023020 C   FIELD 05w01 LPTIM4PRIV: privileged access mode for LPTIM4
0x56023020 C   FIELD 06w01 OPAMPPRIV: privileged access mode for OPAMP
0x56023020 C   FIELD 07w01 COMPPRIV: privileged access mode for COMP
0x56023020 C   FIELD 08w01 ADC4PRIV: privileged access mode for ADC4
0x56023020 C   FIELD 09w01 VREFBUFPRIV: privileged access mode for VREFBUF
0x56023020 C   FIELD 11w01 DAC1PRIV: privileged access mode for DAC1
0x56023020 C   FIELD 12w01 ADF1PRIV: privileged access mode for ADF1
0x56023400 A PERIPHERAL SEC_GTZC2_TZIC
0x56023400 B  REGISTER IER1 (rw): TZIC interrupt enable register 1
0x56023400 C   FIELD 00w01 SPI3IE: illegal access interrupt enable for SPI3
0x56023400 C   FIELD 01w01 LPUART1IE: illegal access interrupt enable for LPUART1
0x56023400 C   FIELD 02w01 I2C3IE: illegal access interrupt enable for I2C3
0x56023400 C   FIELD 03w01 LPTIM1IE: illegal access interrupt enable for LPTIM1
0x56023400 C   FIELD 04w01 LPTIM3IE: illegal access interrupt enable for LPTIM3
0x56023400 C   FIELD 05w01 LPTIM4IE: illegal access interrupt enable for LPTIM4
0x56023400 C   FIELD 06w01 OPAMPIE: illegal access interrupt enable for OPAMP
0x56023400 C   FIELD 07w01 COMPIE: illegal access interrupt enable for COMP
0x56023400 C   FIELD 08w01 ADC4IE: illegal access interrupt enable for ADC4
0x56023400 C   FIELD 09w01 VREFBUFIE: illegal access interrupt enable for VREFBUF
0x56023400 C   FIELD 11w01 DAC1IE: illegal access interrupt enable for DAC1
0x56023400 C   FIELD 12w01 ADF1IE: illegal access interrupt enable for ADF1
0x56023404 B  REGISTER IER2 (rw): TZIC interrupt enable register 2
0x56023404 C   FIELD 00w01 SYSCFGIE: illegal access interrupt enable for SYSCFG
0x56023404 C   FIELD 01w01 RTCIE: illegal access interrupt enable for RTC
0x56023404 C   FIELD 02w01 TAMPIE: illegal access interrupt enable for TAMP
0x56023404 C   FIELD 03w01 PWRIE: illegal access interrupt enable for PWR
0x56023404 C   FIELD 04w01 RCCIE: illegal access interrupt enable for RCC
0x56023404 C   FIELD 05w01 LPDMA1IE: illegal access interrupt enable for LPDMA
0x56023404 C   FIELD 06w01 EXTIIE: illegal access interrupt enable for EXTI
0x56023404 C   FIELD 14w01 TZSC2IE: illegal access interrupt enable for GTZC2 TZSC registers
0x56023404 C   FIELD 15w01 TZIC2IE: illegal access interrupt enable for GTZC2 TZIC registers
0x56023404 C   FIELD 24w01 SRAM4IE: illegal access interrupt enable for SRAM4
0x56023404 C   FIELD 25w01 MPCBB4_REGIE: illegal access interrupt enable for MPCBB4 registers
0x56023410 B  REGISTER SR1 (ro): TZIC status register 1
0x56023410 C   FIELD 00w01 SPI3F: illegal access flag for SPI3
0x56023410 C   FIELD 01w01 LPUART1F: illegal access flag for LPUART1
0x56023410 C   FIELD 02w01 I2C3F: illegal access flag for I2C3
0x56023410 C   FIELD 03w01 LPTIM1F: illegal access flag for LPTIM1
0x56023410 C   FIELD 04w01 LPTIM3F: illegal access flag for LPTIM3
0x56023410 C   FIELD 05w01 LPTIM4F: illegal access flag for LPTIM4
0x56023410 C   FIELD 06w01 OPAMPF: illegal access flag for OPAMP
0x56023410 C   FIELD 07w01 COMPF: illegal access flag for COMP
0x56023410 C   FIELD 08w01 ADC4F: illegal access flag for ADC4
0x56023410 C   FIELD 09w01 VREFBUFF: illegal access flag for VREFBUF
0x56023410 C   FIELD 11w01 DAC1F: illegal access flag for DAC1
0x56023410 C   FIELD 12w01 ADF1F: illegal access flag for ADF1
0x56023414 B  REGISTER SR2 (ro): TZIC status register 2
0x56023414 C   FIELD 00w01 SYSCFGF: illegal access flag for SYSCFG
0x56023414 C   FIELD 01w01 RTCF: illegal access flag for RTC
0x56023414 C   FIELD 02w01 TAMPF: illegal access flag for TAMP
0x56023414 C   FIELD 03w01 PWRF: illegal access flag for PWRUSART1F
0x56023414 C   FIELD 04w01 RCCF: illegal access flag for RCC
0x56023414 C   FIELD 05w01 LPDMA1F: illegal access flag for LPDMA
0x56023414 C   FIELD 06w01 EXTIF: illegal access flag for EXTI
0x56023414 C   FIELD 14w01 TZSC2F: illegal access flag for GTZC2 TZSC registers
0x56023414 C   FIELD 15w01 TZIC2F: illegal access flag for GTZC2 TZIC registers
0x56023414 C   FIELD 24w01 SRAM4F: illegal access flag for SRAM4
0x56023414 C   FIELD 25w01 MPCBB4_REGF: illegal access flag for MPCBB4 registers
0x56023420 B  REGISTER FCR1 (wo): TZIC flag clear register 1
0x56023420 C   FIELD 00w01 CSPI3F: clear the illegal access flag for SPI3
0x56023420 C   FIELD 01w01 CLPUART1F: clear the illegal access flag for LPUART1
0x56023420 C   FIELD 02w01 CI2C3F: clear the illegal access flag for I2C3
0x56023420 C   FIELD 03w01 CLPTIM1F: clear the illegal access flag for LPTIM1
0x56023420 C   FIELD 04w01 CLPTIM3F: clear the illegal access flag for LPTIM3
0x56023420 C   FIELD 05w01 CLPTIM4F: clear the illegal access flag for LPTIM4
0x56023420 C   FIELD 06w01 COPAMPF: clear the illegal access flag for OPAMP
0x56023420 C   FIELD 07w01 CCOMPF: clear the illegal access flag for COMP
0x56023420 C   FIELD 08w01 CADC4F: clear the illegal access flag for ADC4
0x56023420 C   FIELD 09w01 CVREFBUFF: clear the illegal access flag for VREFBUF
0x56023420 C   FIELD 11w01 CDAC1F: clear the illegal access flag for DAC1
0x56023420 C   FIELD 12w01 CADF1F: clear the illegal access flag for ADF1
0x56023424 B  REGISTER FCR2 (wo): TZIC flag clear register 2
0x56023424 C   FIELD 00w01 CSYSCFGF: clear the illegal access flag for SYSCFG
0x56023424 C   FIELD 01w01 CRTCF: clear the illegal access flag for RTC
0x56023424 C   FIELD 02w01 CTAMPF: clear the illegal access flag for TAMP
0x56023424 C   FIELD 03w01 CPWRF: clear the illegal access flag for PWR
0x56023424 C   FIELD 04w01 CRCCF: clear the illegal access flag for RCC
0x56023424 C   FIELD 05w01 CLPDMA1F: clear the illegal access flag for LPDMA
0x56023424 C   FIELD 06w01 CEXTIF: clear the illegal access flag for EXTI
0x56023424 C   FIELD 14w01 CTZSC2F: clear the illegal access flag for GTZC2 TZSC registers
0x56023424 C   FIELD 15w01 CTZIC2F: clear the illegal access flag for GTZC2 TZIC registers
0x56023424 C   FIELD 24w01 CSRAM4F: clear the illegal access flag for SRAM4
0x56023424 C   FIELD 25w01 CMPCBB4_REGF: clear the illegal access flag for MPCBB4 registers
0x56023800 A PERIPHERAL SEC_GTZC2_MPCBB4
0x56023800 B  REGISTER MPCBB4_CR (rw): MPCBB control register
0x56023800 C   FIELD 00w01 GLOCK: lock the control register of the MPCBB until next reset
0x56023800 C   FIELD 30w01 INVSECSTATE: SRAMx clocks security state
0x56023800 C   FIELD 31w01 SRWILADIS: secure read/write illegal access disable
0x56023810 B  REGISTER MPCBB4_CFGLOCK (rw): GTZC2 SRAM4 MPCBB configuration lock register
0x56023810 C   FIELD 00w01 SPLCK0: Security/privilege configuration lock for super-block 0
0x56023900 B  REGISTER MPCBB4_SECCFGR0 (rw): MPCBB security configuration for super-block 0 register
0x56023900 C   FIELD 00w01 SEC0: SEC0
0x56023900 C   FIELD 01w01 SEC1: SEC1
0x56023900 C   FIELD 02w01 SEC2: SEC2
0x56023900 C   FIELD 03w01 SEC3: SEC3
0x56023900 C   FIELD 04w01 SEC4: SEC4
0x56023900 C   FIELD 05w01 SEC5: SEC5
0x56023900 C   FIELD 06w01 SEC6: SEC6
0x56023900 C   FIELD 07w01 SEC7: SEC7
0x56023900 C   FIELD 08w01 SEC8: SEC8
0x56023900 C   FIELD 09w01 SEC9: SEC9
0x56023900 C   FIELD 10w01 SEC10: SEC10
0x56023900 C   FIELD 11w01 SEC11: SEC11
0x56023900 C   FIELD 12w01 SEC12: SEC12
0x56023900 C   FIELD 13w01 SEC13: SEC13
0x56023900 C   FIELD 14w01 SEC14: SEC14
0x56023900 C   FIELD 15w01 SEC15: SEC15
0x56023900 C   FIELD 16w01 SEC16: SEC16
0x56023900 C   FIELD 17w01 SEC17: SEC17
0x56023900 C   FIELD 18w01 SEC18: SEC18
0x56023900 C   FIELD 19w01 SEC19: SEC19
0x56023900 C   FIELD 20w01 SEC20: SEC20
0x56023900 C   FIELD 21w01 SEC21: SEC21
0x56023900 C   FIELD 22w01 SEC22: SEC22
0x56023900 C   FIELD 23w01 SEC23: SEC23
0x56023900 C   FIELD 24w01 SEC24: SEC24
0x56023900 C   FIELD 25w01 SEC25: SEC25
0x56023900 C   FIELD 26w01 SEC26: SEC26
0x56023900 C   FIELD 27w01 SEC27: SEC27
0x56023900 C   FIELD 28w01 SEC28: SEC28
0x56023900 C   FIELD 29w01 SEC29: SEC29
0x56023900 C   FIELD 30w01 SEC30: SEC30
0x56023900 C   FIELD 31w01 SEC31: SEC31
0x56023A00 B  REGISTER MPCBB4_PRIVCFGR0 (rw): MPCBB privileged configuration for super-block 0 register
0x56023A00 C   FIELD 00w01 PRIV0: PRIV0
0x56023A00 C   FIELD 01w01 PRIV1: PRIV1
0x56023A00 C   FIELD 02w01 PRIV2: PRIV2
0x56023A00 C   FIELD 03w01 PRIV3: PRIV3
0x56023A00 C   FIELD 04w01 PRIV4: PRIV4
0x56023A00 C   FIELD 05w01 PRIV5: PRIV5
0x56023A00 C   FIELD 06w01 PRIV6: PRIV6
0x56023A00 C   FIELD 07w01 PRIV7: PRIV7
0x56023A00 C   FIELD 08w01 PRIV8: PRIV8
0x56023A00 C   FIELD 09w01 PRIV9: PRIV9
0x56023A00 C   FIELD 10w01 PRIV10: PRIV10
0x56023A00 C   FIELD 11w01 PRIV11: PRIV11
0x56023A00 C   FIELD 12w01 PRIV12: PRIV12
0x56023A00 C   FIELD 13w01 PRIV13: PRIV13
0x56023A00 C   FIELD 14w01 PRIV14: PRIV14
0x56023A00 C   FIELD 15w01 PRIV15: PRIV15
0x56023A00 C   FIELD 16w01 PRIV16: PRIV16
0x56023A00 C   FIELD 17w01 PRIV17: PRIV17
0x56023A00 C   FIELD 18w01 PRIV18: PRIV18
0x56023A00 C   FIELD 19w01 PRIV19: PRIV19
0x56023A00 C   FIELD 20w01 PRIV20: PRIV20
0x56023A00 C   FIELD 21w01 PRIV21: PRIV21
0x56023A00 C   FIELD 22w01 PRIV22: PRIV22
0x56023A00 C   FIELD 23w01 PRIV23: PRIV23
0x56023A00 C   FIELD 24w01 PRIV24: PRIV24
0x56023A00 C   FIELD 25w01 PRIV25: PRIV25
0x56023A00 C   FIELD 26w01 PRIV26: PRIV26
0x56023A00 C   FIELD 27w01 PRIV27: PRIV27
0x56023A00 C   FIELD 28w01 PRIV28: PRIV28
0x56023A00 C   FIELD 29w01 PRIV29: PRIV29
0x56023A00 C   FIELD 30w01 PRIV30: PRIV30
0x56023A00 C   FIELD 31w01 PRIV31: PRIV31
0x56024000 A PERIPHERAL SEC_ADF1
0x56024000 B  REGISTER ADF_GCR (rw): ADF Global Control Register
0x56024000 C   FIELD 00w01 TRGO: Trigger output control Set by software and reset by
0x56024004 B  REGISTER ADF_CKGCR (rw): ADF clock generator control register
0x56024004 C   FIELD 00w01 CKGDEN: CKGEN dividers enable
0x56024004 C   FIELD 01w01 CCK0EN: ADF_CCK0 clock enable
0x56024004 C   FIELD 02w01 CCK1EN: ADF_CCK1 clock enable
0x56024004 C   FIELD 04w01 CKGMOD: Clock generator mode
0x56024004 C   FIELD 05w01 CCK0DIR: ADF_CCK0 direction
0x56024004 C   FIELD 06w01 CCK1DIR: ADF_CCK1 direction
0x56024004 C   FIELD 08w01 TRGSENS: CKGEN trigger sensitivity selection
0x56024004 C   FIELD 12w04 TRGSRC: Digital filter trigger signal selection
0x56024004 C   FIELD 16w04 CCKDIV: Divider to control the ADF_CCK clock
0x56024004 C   FIELD 24w07 PROCDIV: Divider to control the serial interface clock
0x56024004 C   FIELD 31w01 CKGACTIVE: Clock generator active flag
0x56024080 B  REGISTER ADF_SITF0CR (rw): ADF serial interface control register 0
0x56024080 C   FIELD 00w01 SITFEN: SITFEN
0x56024080 C   FIELD 01w02 SCKSRC: SCKSRC
0x56024080 C   FIELD 04w02 SITFMOD: SITFMOD
0x56024080 C   FIELD 08w05 STH: STH
0x56024080 C   FIELD 31w01 SITFACTIVE: SITFACTIVE
0x56024084 B  REGISTER ADF_BSMX0CR (rw): ADF bitstream matrix control register 0
0x56024084 C   FIELD 00w05 BSSEL: Bitstream selection
0x56024084 C   FIELD 31w01 BSMXACTIVE: BSMX active flag
0x56024088 B  REGISTER ADF_DFLT0CR (rw): ADF digital filter control register 0
0x56024088 C   FIELD 00w01 DFLTEN: DFLT0 enable
0x56024088 C   FIELD 01w01 DMAEN: DMA requests enable
0x56024088 C   FIELD 02w01 FTH: RXFIFO threshold selection
0x56024088 C   FIELD 04w03 ACQMOD: DFLT0 trigger mode
0x56024088 C   FIELD 12w04 TRGSRC: DFLT0 trigger signal selection
0x56024088 C   FIELD 20w08 NBDIS: Number of samples to be discarded
0x56024088 C   FIELD 30w01 DFLTRUN: DFLT0 run status flag
0x56024088 C   FIELD 31w01 DFLTACTIVE: DFLT0 active flag
0x5602408C B  REGISTER ADF_DFLT0CICR (rw): ADF digital filer configuration register 0
0x5602408C C   FIELD 00w02 DATSRC: Source data for the digital filter
0x5602408C C   FIELD 04w03 CICMOD: Select the CIC order
0x5602408C C   FIELD 08w09 MCICD: CIC decimation ratio selection
0x5602408C C   FIELD 20w06 SCALE: Scaling factor selection
0x56024090 B  REGISTER ADF_DFLT0RSFR (rw): ADF reshape filter configuration register 0
0x56024090 C   FIELD 00w01 RSFLTBYP: Reshaper filter bypass
0x56024090 C   FIELD 04w01 RSFLTD: Reshaper filter decimation ratio
0x56024090 C   FIELD 07w01 HPFBYP: High-pass filter bypass
0x56024090 C   FIELD 08w02 HPFC: High-pass filter cut-off frequency
0x560240A4 B  REGISTER ADF_DLY0CR (rw): ADF delay control register 0
0x560240A4 C   FIELD 00w07 SKPDLY: Delay to apply to a bitstream
0x560240A4 C   FIELD 31w01 SKPBF: Skip busy flag
0x560240AC B  REGISTER ADF_DFLT0IER (rw): ADF DFLT0 interrupt enable register
0x560240AC C   FIELD 00w01 FTHIE: RXFIFO threshold interrupt enable
0x560240AC C   FIELD 01w01 DOVRIE: Data overflow interrupt enable
0x560240AC C   FIELD 09w01 SATIE: Saturation detection interrupt enable
0x560240AC C   FIELD 10w01 CKABIE: Clock absence detection interrupt enable
0x560240AC C   FIELD 11w01 RFOVRIE: Reshape filter overrun interrupt enable
0x560240AC C   FIELD 12w01 SDDETIE: Sound activity detection interrupt enable
0x560240AC C   FIELD 13w01 SDLVLIE: SAD sound-level value ready enable
0x560240B0 B  REGISTER ADF_DFLT0ISR: ADF DFLT0 interrupt status register 0
0x560240B0 C   FIELD 00w01 FTHF (ro): RXFIFO threshold flag
0x560240B0 C   FIELD 01w01 DOVRF (rw): Data overflow flag
0x560240B0 C   FIELD 03w01 RXNEF (ro): RXFIFO not empty flag
0x560240B0 C   FIELD 09w01 SATF (rw): Saturation detection flag
0x560240B0 C   FIELD 10w01 CKABF (rw): Clock absence detection flag
0x560240B0 C   FIELD 11w01 RFOVRF (rw): Reshape filter overrun detection flag
0x560240B0 C   FIELD 12w01 SDDETF (rw): Sound activity detection flag
0x560240B0 C   FIELD 13w01 SDLVLF (rw): Sound level value ready flag
0x560240B8 B  REGISTER ADF_SADCR: ADF SAD control register
0x560240B8 C   FIELD 00w01 SADEN (rw): Sound activity detector enable
0x560240B8 C   FIELD 01w02 DATCAP (rw): Data capture mode
0x560240B8 C   FIELD 03w01 DETCFG (rw): Sound trigger event configuration
0x560240B8 C   FIELD 04w02 SADST (ro): SAD state
0x560240B8 C   FIELD 07w01 HYSTEN (rw): Hysteresis enable
0x560240B8 C   FIELD 08w03 FRSIZE (rw): Frame size
0x560240B8 C   FIELD 12w02 SADMOD (rw): SAD working mode
0x560240B8 C   FIELD 31w01 SADACTIVE (ro): SAD Active flag
0x560240BC B  REGISTER ADF_SADCFGR (rw): ADF SAD configuration register
0x560240BC C   FIELD 00w04 SNTHR: SNTHR
0x560240BC C   FIELD 04w03 ANSLP: ANSLP
0x560240BC C   FIELD 08w03 LFRNB: LFRNB
0x560240BC C   FIELD 12w03 HGOVR: Hangover time window
0x560240BC C   FIELD 16w13 ANMIN: ANMIN
0x560240C0 B  REGISTER ADF_SADSDLVR (ro): ADF SAD sound level register
0x560240C0 C   FIELD 00w15 SDLVL: SDLVL
0x560240C4 B  REGISTER ADF_SADANLVR (ro): ADF SAD ambient noise level register
0x560240C4 C   FIELD 00w15 ANLVL: ANLVL
0x560240F0 B  REGISTER ADF_DFLT0DR (ro): ADF digital filter data register 0
0x560240F0 C   FIELD 08w24 DR: DR
0x56025000 A PERIPHERAL SEC_LPDMA1
0x56025000 B  REGISTER LPDMA_SECCFGR: LPDMA secure configuration register
0x56025000 C   FIELD 00w01 SEC0 (rw): SEC0
0x56025000 C   FIELD 01w01 SEC1 (rw): SEC1
0x56025000 C   FIELD 02w01 SEC2 (rw): SEC2
0x56025000 C   FIELD 03w01 SEC3 (rw): SEC3
0x56025004 B  REGISTER LPDMA_PRIVCFGR: LPDMA privileged configuration register
0x56025004 C   FIELD 00w01 PRIV0 (rw): PRIV0
0x56025004 C   FIELD 01w01 PRIV1 (rw): PRIV1
0x56025004 C   FIELD 02w01 PRIV2 (rw): PRIV2
0x56025004 C   FIELD 03w01 PRIV3 (rw): PRIV3
0x56025008 B  REGISTER LPDMA_RCFGLOCKR: LPDMA configuration lock register
0x56025008 C   FIELD 00w01 LOCK0 (rw): LOCK0
0x56025008 C   FIELD 01w01 LOCK1 (rw): LOCK1
0x56025008 C   FIELD 02w01 LOCK2 (rw): LOCK2
0x56025008 C   FIELD 03w01 LOCK3 (rw): LOCK3
0x5602500C B  REGISTER LPDMA_MISR: LPDMA non-secure masked interrupt status register
0x5602500C C   FIELD 00w01 MIS0 (ro): MIS0
0x5602500C C   FIELD 01w01 MIS1 (ro): MIS1
0x5602500C C   FIELD 02w01 MIS2 (ro): MIS2
0x5602500C C   FIELD 03w01 MIS3 (ro): MIS3
0x56025010 B  REGISTER LPDMA_SMISR: LPDMA secure masked interrupt status register
0x56025010 C   FIELD 00w01 MIS0 (ro): MIS0
0x56025010 C   FIELD 01w01 MIS1 (ro): MIS1
0x56025010 C   FIELD 02w01 MIS2 (ro): MIS2
0x56025010 C   FIELD 03w01 MIS3 (ro): MIS3
0x56025050 B  REGISTER LPDMA_C0LBAR: LPDMA channel 0 linked-list base address register
0x56025050 C   FIELD 16w16 LBA (rw): linked-list base address of LPDMA channel x
0x5602505C B  REGISTER LPDMA_C0FCR: LPDMA channel 0 flag clear register
0x5602505C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5602505C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5602505C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5602505C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5602505C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5602505C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5602505C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x56025060 B  REGISTER LPDMA_C0SR: LPDMA channel 0 status register
0x56025060 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (LPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x56025060 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is a block transfer complete or a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode LPDMA_CxTR2.TCEM[1:0].
0x56025060 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is an half block transfer that occurs when half of the bytes of the source block size (rounded-up integer of LPDMA_CxBR1.BNDT[15:0] / 2) has been transferred to the destination.
0x56025060 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x56025060 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x56025060 C   FIELD 12w01 USEF (ro): user setting error flag
0x56025060 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x56025060 C   FIELD 14w01 TOF (ro): trigger overrun flag clear
0x56025064 B  REGISTER LPDMA_C0CR: LPDMA channel 0 control register
0x56025064 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x56025064 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (LPDMA_CxSR.SUSPF = 1 and LPDMA_CxSR.IDLEF = LPDMA_CxCR.EN = 1) - channel in disabled state (LPDMA_CxSR.IDLEF = 1 and LPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (LPDMA_CxBR1, LPDMA_CxSAR and LPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x56025064 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going DMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in sequence.
0x56025064 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x56025064 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x56025064 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x56025064 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x56025064 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x56025064 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x56025064 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x56025064 C   FIELD 16w01 LSM (rw): Link step mode First the block transfer is executed as defined by the current internal register file until LPDMA_CxBR1.BNDT[15:0 ] =0). Secondly the next linked-list data structure is conditionally uploaded from memory as defined by LPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x56025064 C   FIELD 22w02 PRIO (rw): priority level of the channel x LPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x56025090 B  REGISTER LPDMA_C0TR1: LPDMA channel 0 transfer register 1
0x56025090 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. a source block size must be a multiple of the source data width (LPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address LPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x56025090 C   FIELD 03w01 SINC (rw): source incrementing single The source address, pointed by LPDMA_CxSAR, is kept constant after a single transfer or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x56025090 C   FIELD 11w01 PAM (rw): padding/alignment mode If DDW_LOG2[1:0]=SDW_LOG2[1:0]: if the data width of a single destination transfer is equal to the data width of a single source transfer, this bit is ignored. Else: Case 1: If destination data width > source data width Case 2: If destination data width < source data width
0x56025090 C   FIELD 15w01 SSEC (rw): security attribute of the LPDMA transfer from the source If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx =1 . A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer from the source is non-secure.
0x56025090 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination single transfer must have an aligned address with its data width (start address LPDMA_CxDAR[2:0] versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and none transfer is issued.
0x56025090 C   FIELD 19w01 DINC (rw): destination incrementing single The destination address, pointed by LPDMA_CxDAR, is kept constant after a single transfer, or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x56025090 C   FIELD 31w01 DSEC (rw): security attribute of the LPDMA transfer to the destination If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx = 1. A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer to the destination is non-secure.
0x56025094 B  REGISTER LPDMA_C0TR2: LPDMA channel 0 transfer register 2
0x56025094 C   FIELD 00w05 REQSEL (rw): DMA hardware request selection These bits are ignored if channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per request. Note: The user must not assign a same input hardware request (same REQSEL[4:0] value) to different active DMA channels (LPDMA_CxCR.EN = 1 and LPDMA_CxTR2.SWREQ = 0 for these channels). DMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x56025094 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when LPDMA_CxCR.EN is asserted.
0x56025094 C   FIELD 11w01 BREQ (rw): block hardware request If the channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x56025094 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (LPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 0b00 or 0b11, these TRIGM[1:0] bits are ignored. Else, a DMA transfer is conditioned by at least one trigger hit: The LPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 0b01 or respectively TRIGPOL[1:0] = 0b10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[4:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the LPDMA_CxTR2 with a new value for any of TRIGSEL[4:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized, and a trigger overrun flag is reported (LPDMA_CxSR.TOF = 1), an interrupt is generated if enabled (LPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun.
0x56025094 C   FIELD 16w05 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the LPDMA transfer (as per Programmed LPDMA1 trigger), with an active trigger event if TRIGPOL[1:0] = 00.
0x56025094 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[4:0].
0x56025094 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x56025098 B  REGISTER LPDMA_C0BR1: LPDMA channel 0 block register 1
0x56025098 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if LPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if LPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all LPDMA_CxLLR.Uxx = 0 and if LPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if LPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.
0x5602509C B  REGISTER LPDMA_C0SAR: LPDMA channel 0 source address register
0x5602509C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (LPDMA_CxTR1.SINC), this field is either kept fixed or incremented by the data width (LPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by LPDMA from the memory, provided the LLI is set with LPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[32:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x560250A0 B  REGISTER LPDMA_C0DAR: LPDMA channel 0 destination address register
0x560250A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (LPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (LPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by DMA from the memory, provided the LLI is set with LPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination single (DA[2:0] versus LPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x560250CC B  REGISTER LPDMA_C0LLR: LPDMA channel 0 linked-list address register
0x560250CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list DMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list DMA internal register file (LPDMA_CxCTR1, LPDMA_CxTR2, LPDMA_CxBR1, LPDMA_CxSAR, LPDMA_CxDAR and LPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x560250CC C   FIELD 16w01 ULL (rw): Update LPDMA_CxLLR register from memory This bit is used to control the update of the LPDMA_CxLLR register from the memory during the link transfer.
0x560250CC C   FIELD 27w01 UDA (rw): Update LPDMA_CxDAR register from memory This bit is used to control the update of the LPDMA_CxDAR register from the memory during the link transfer.
0x560250CC C   FIELD 28w01 USA (rw): update LPDMA_CxSAR from memory This bit controls the update of the LPDMA_CxSAR register from the memory during the link transfer.
0x560250CC C   FIELD 29w01 UB1 (rw): Update LPDMA_CxBR1 from memory This bit controls the update of the LPDMA_CxBR1 register from the memory during the link transfer.
0x560250CC C   FIELD 30w01 UT2 (rw): Update LPDMA_CxTR2 from memory This bit controls the update of the LPDMA_CxTR2 register from the memory during the link transfer.
0x560250CC C   FIELD 31w01 UT1 (rw): Update LPDMA_CxTR1 from memory This bit controls the update of the LPDMA_CxTR1 register from the memory during the link transfer.
0x560250D0 B  REGISTER LPDMA_C1LBAR: LPDMA channel 1 linked-list base address register
0x560250D0 C   FIELD 16w16 LBA (rw): linked-list base address of LPDMA channel x
0x560250DC B  REGISTER LPDMA_C1FCR: LPDMA channel 1 flag clear register
0x560250DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x560250DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x560250DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x560250DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x560250DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x560250DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x560250DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x560250E0 B  REGISTER LPDMA_C1SR: LPDMA channel 1 status register
0x560250E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (LPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x560250E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is a block transfer complete or a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode LPDMA_CxTR2.TCEM[1:0].
0x560250E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is an half block transfer that occurs when half of the bytes of the source block size (rounded-up integer of LPDMA_CxBR1.BNDT[15:0] / 2) has been transferred to the destination.
0x560250E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x560250E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x560250E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x560250E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x560250E0 C   FIELD 14w01 TOF (ro): trigger overrun flag clear
0x560250E4 B  REGISTER LPDMA_C1CR: LPDMA channel 1 control register
0x560250E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x560250E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (LPDMA_CxSR.SUSPF = 1 and LPDMA_CxSR.IDLEF = LPDMA_CxCR.EN = 1) - channel in disabled state (LPDMA_CxSR.IDLEF = 1 and LPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (LPDMA_CxBR1, LPDMA_CxSAR and LPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x560250E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going DMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in sequence.
0x560250E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x560250E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x560250E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x560250E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x560250E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x560250E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x560250E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x560250E4 C   FIELD 16w01 LSM (rw): Link step mode First the block transfer is executed as defined by the current internal register file until LPDMA_CxBR1.BNDT[15:0 ] =0). Secondly the next linked-list data structure is conditionally uploaded from memory as defined by LPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x560250E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x LPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x56025110 B  REGISTER LPDMA_C1TR1: LPDMA channel 1 transfer register 1
0x56025110 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. a source block size must be a multiple of the source data width (LPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address LPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x56025110 C   FIELD 03w01 SINC (rw): source incrementing single The source address, pointed by LPDMA_CxSAR, is kept constant after a single transfer or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x56025110 C   FIELD 11w01 PAM (rw): padding/alignment mode If DDW_LOG2[1:0]=SDW_LOG2[1:0]: if the data width of a single destination transfer is equal to the data width of a single source transfer, this bit is ignored. Else: Case 1: If destination data width > source data width Case 2: If destination data width < source data width
0x56025110 C   FIELD 15w01 SSEC (rw): security attribute of the LPDMA transfer from the source If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx =1 . A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer from the source is non-secure.
0x56025110 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination single transfer must have an aligned address with its data width (start address LPDMA_CxDAR[2:0] versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and none transfer is issued.
0x56025110 C   FIELD 19w01 DINC (rw): destination incrementing single The destination address, pointed by LPDMA_CxDAR, is kept constant after a single transfer, or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x56025110 C   FIELD 31w01 DSEC (rw): security attribute of the LPDMA transfer to the destination If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx = 1. A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer to the destination is non-secure.
0x56025114 B  REGISTER LPDMA_C1TR2: LPDMA channel 1 transfer register 2
0x56025114 C   FIELD 00w05 REQSEL (rw): DMA hardware request selection These bits are ignored if channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per request. Note: The user must not assign a same input hardware request (same REQSEL[4:0] value) to different active DMA channels (LPDMA_CxCR.EN = 1 and LPDMA_CxTR2.SWREQ = 0 for these channels). DMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x56025114 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when LPDMA_CxCR.EN is asserted.
0x56025114 C   FIELD 11w01 BREQ (rw): block hardware request If the channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x56025114 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (LPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 0b00 or 0b11, these TRIGM[1:0] bits are ignored. Else, a DMA transfer is conditioned by at least one trigger hit: The LPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 0b01 or respectively TRIGPOL[1:0] = 0b10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[4:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the LPDMA_CxTR2 with a new value for any of TRIGSEL[4:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized, and a trigger overrun flag is reported (LPDMA_CxSR.TOF = 1), an interrupt is generated if enabled (LPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun.
0x56025114 C   FIELD 16w05 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the LPDMA transfer (as per Programmed LPDMA1 trigger), with an active trigger event if TRIGPOL[1:0] = 00.
0x56025114 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[4:0].
0x56025114 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x56025118 B  REGISTER LPDMA_C1BR1: LPDMA channel 1 block register 1
0x56025118 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if LPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if LPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all LPDMA_CxLLR.Uxx = 0 and if LPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if LPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.
0x5602511C B  REGISTER LPDMA_C1SAR: LPDMA channel 1 source address register
0x5602511C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (LPDMA_CxTR1.SINC), this field is either kept fixed or incremented by the data width (LPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by LPDMA from the memory, provided the LLI is set with LPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[32:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x56025120 B  REGISTER LPDMA_C1DAR: LPDMA channel 1 destination address register
0x56025120 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (LPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (LPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by DMA from the memory, provided the LLI is set with LPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination single (DA[2:0] versus LPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x5602514C B  REGISTER LPDMA_C1LLR: LPDMA channel 1 linked-list address register
0x5602514C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list DMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list DMA internal register file (LPDMA_CxCTR1, LPDMA_CxTR2, LPDMA_CxBR1, LPDMA_CxSAR, LPDMA_CxDAR and LPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5602514C C   FIELD 16w01 ULL (rw): Update LPDMA_CxLLR register from memory This bit is used to control the update of the LPDMA_CxLLR register from the memory during the link transfer.
0x5602514C C   FIELD 27w01 UDA (rw): Update LPDMA_CxDAR register from memory This bit is used to control the update of the LPDMA_CxDAR register from the memory during the link transfer.
0x5602514C C   FIELD 28w01 USA (rw): update LPDMA_CxSAR from memory This bit controls the update of the LPDMA_CxSAR register from the memory during the link transfer.
0x5602514C C   FIELD 29w01 UB1 (rw): Update LPDMA_CxBR1 from memory This bit controls the update of the LPDMA_CxBR1 register from the memory during the link transfer.
0x5602514C C   FIELD 30w01 UT2 (rw): Update LPDMA_CxTR2 from memory This bit controls the update of the LPDMA_CxTR2 register from the memory during the link transfer.
0x5602514C C   FIELD 31w01 UT1 (rw): Update LPDMA_CxTR1 from memory This bit controls the update of the LPDMA_CxTR1 register from the memory during the link transfer.
0x56025150 B  REGISTER LPDMA_C2LBAR: LPDMA channel 2 linked-list base address register
0x56025150 C   FIELD 16w16 LBA (rw): linked-list base address of LPDMA channel x
0x5602515C B  REGISTER LPDMA_C2FCR: LPDMA channel 2 flag clear register
0x5602515C C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x5602515C C   FIELD 09w01 HTF (wo): half transfer flag clear
0x5602515C C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x5602515C C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x5602515C C   FIELD 12w01 USEF (wo): user setting error flag clear
0x5602515C C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x5602515C C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x56025160 B  REGISTER LPDMA_C2SR: LPDMA channel 2 status register
0x56025160 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (LPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x56025160 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is a block transfer complete or a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode LPDMA_CxTR2.TCEM[1:0].
0x56025160 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is an half block transfer that occurs when half of the bytes of the source block size (rounded-up integer of LPDMA_CxBR1.BNDT[15:0] / 2) has been transferred to the destination.
0x56025160 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x56025160 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x56025160 C   FIELD 12w01 USEF (ro): user setting error flag
0x56025160 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x56025160 C   FIELD 14w01 TOF (ro): trigger overrun flag clear
0x56025164 B  REGISTER LPDMA_C2CR: LPDMA channel 2 control register
0x56025164 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x56025164 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (LPDMA_CxSR.SUSPF = 1 and LPDMA_CxSR.IDLEF = LPDMA_CxCR.EN = 1) - channel in disabled state (LPDMA_CxSR.IDLEF = 1 and LPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (LPDMA_CxBR1, LPDMA_CxSAR and LPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x56025164 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going DMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in sequence.
0x56025164 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x56025164 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x56025164 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x56025164 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x56025164 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x56025164 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x56025164 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x56025164 C   FIELD 16w01 LSM (rw): Link step mode First the block transfer is executed as defined by the current internal register file until LPDMA_CxBR1.BNDT[15:0 ] =0). Secondly the next linked-list data structure is conditionally uploaded from memory as defined by LPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x56025164 C   FIELD 22w02 PRIO (rw): priority level of the channel x LPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x56025190 B  REGISTER LPDMA_C2TR1: LPDMA channel 2 transfer register 1
0x56025190 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. a source block size must be a multiple of the source data width (LPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address LPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x56025190 C   FIELD 03w01 SINC (rw): source incrementing single The source address, pointed by LPDMA_CxSAR, is kept constant after a single transfer or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x56025190 C   FIELD 11w01 PAM (rw): padding/alignment mode If DDW_LOG2[1:0]=SDW_LOG2[1:0]: if the data width of a single destination transfer is equal to the data width of a single source transfer, this bit is ignored. Else: Case 1: If destination data width > source data width Case 2: If destination data width < source data width
0x56025190 C   FIELD 15w01 SSEC (rw): security attribute of the LPDMA transfer from the source If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx =1 . A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer from the source is non-secure.
0x56025190 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination single transfer must have an aligned address with its data width (start address LPDMA_CxDAR[2:0] versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and none transfer is issued.
0x56025190 C   FIELD 19w01 DINC (rw): destination incrementing single The destination address, pointed by LPDMA_CxDAR, is kept constant after a single transfer, or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x56025190 C   FIELD 31w01 DSEC (rw): security attribute of the LPDMA transfer to the destination If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx = 1. A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer to the destination is non-secure.
0x56025194 B  REGISTER LPDMA_C2TR2: LPDMA channel 2 transfer register 2
0x56025194 C   FIELD 00w05 REQSEL (rw): DMA hardware request selection These bits are ignored if channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per request. Note: The user must not assign a same input hardware request (same REQSEL[4:0] value) to different active DMA channels (LPDMA_CxCR.EN = 1 and LPDMA_CxTR2.SWREQ = 0 for these channels). DMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x56025194 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when LPDMA_CxCR.EN is asserted.
0x56025194 C   FIELD 11w01 BREQ (rw): block hardware request If the channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x56025194 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (LPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 0b00 or 0b11, these TRIGM[1:0] bits are ignored. Else, a DMA transfer is conditioned by at least one trigger hit: The LPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 0b01 or respectively TRIGPOL[1:0] = 0b10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[4:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the LPDMA_CxTR2 with a new value for any of TRIGSEL[4:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized, and a trigger overrun flag is reported (LPDMA_CxSR.TOF = 1), an interrupt is generated if enabled (LPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun.
0x56025194 C   FIELD 16w05 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the LPDMA transfer (as per Programmed LPDMA1 trigger), with an active trigger event if TRIGPOL[1:0] = 00.
0x56025194 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[4:0].
0x56025194 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x56025198 B  REGISTER LPDMA_C2BR1: LPDMA channel 2 block register 1
0x56025198 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if LPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if LPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all LPDMA_CxLLR.Uxx = 0 and if LPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if LPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.
0x5602519C B  REGISTER LPDMA_C2SAR: LPDMA channel 2 source address register
0x5602519C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (LPDMA_CxTR1.SINC), this field is either kept fixed or incremented by the data width (LPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by LPDMA from the memory, provided the LLI is set with LPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[32:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x560251A0 B  REGISTER LPDMA_C2DAR: LPDMA channel 2 destination address register
0x560251A0 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (LPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (LPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by DMA from the memory, provided the LLI is set with LPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination single (DA[2:0] versus LPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x560251CC B  REGISTER LPDMA_C2LLR: LPDMA channel 2 linked-list address register
0x560251CC C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list DMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list DMA internal register file (LPDMA_CxCTR1, LPDMA_CxTR2, LPDMA_CxBR1, LPDMA_CxSAR, LPDMA_CxDAR and LPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x560251CC C   FIELD 16w01 ULL (rw): Update LPDMA_CxLLR register from memory This bit is used to control the update of the LPDMA_CxLLR register from the memory during the link transfer.
0x560251CC C   FIELD 27w01 UDA (rw): Update LPDMA_CxDAR register from memory This bit is used to control the update of the LPDMA_CxDAR register from the memory during the link transfer.
0x560251CC C   FIELD 28w01 USA (rw): update LPDMA_CxSAR from memory This bit controls the update of the LPDMA_CxSAR register from the memory during the link transfer.
0x560251CC C   FIELD 29w01 UB1 (rw): Update LPDMA_CxBR1 from memory This bit controls the update of the LPDMA_CxBR1 register from the memory during the link transfer.
0x560251CC C   FIELD 30w01 UT2 (rw): Update LPDMA_CxTR2 from memory This bit controls the update of the LPDMA_CxTR2 register from the memory during the link transfer.
0x560251CC C   FIELD 31w01 UT1 (rw): Update LPDMA_CxTR1 from memory This bit controls the update of the LPDMA_CxTR1 register from the memory during the link transfer.
0x560251D0 B  REGISTER LPDMA_C3LBAR: LPDMA channel 3 linked-list base address register
0x560251D0 C   FIELD 16w16 LBA (rw): linked-list base address of LPDMA channel x
0x560251DC B  REGISTER LPDMA_C3FCR: LPDMA channel 3 flag clear register
0x560251DC C   FIELD 08w01 TCF (wo): transfer complete flag clear
0x560251DC C   FIELD 09w01 HTF (wo): half transfer flag clear
0x560251DC C   FIELD 10w01 DTEF (wo): data transfer error flag clear
0x560251DC C   FIELD 11w01 ULEF (wo): update link transfer error flag clear
0x560251DC C   FIELD 12w01 USEF (wo): user setting error flag clear
0x560251DC C   FIELD 13w01 SUSPF (wo): completed suspension flag clear
0x560251DC C   FIELD 14w01 TOF (wo): trigger overrun flag clear
0x560251E0 B  REGISTER LPDMA_C3SR: LPDMA channel 3 status register
0x560251E0 C   FIELD 00w01 IDLEF (ro): idle flag This idle flag is de-asserted by hardware when the channel is enabled (LPDMA_CxCR.EN = 1) with a valid channel configuration (no USEF to be immediately reported). This idle flag is asserted after hard reset or by hardware when the channel is back in idle state (in suspended or disabled state).
0x560251E0 C   FIELD 08w01 TCF (ro): transfer complete flag A transfer complete event is a block transfer complete or a LLI transfer complete including the upload of the next LLI if any, or the full linked-list completion, depending on the transfer complete event mode LPDMA_CxTR2.TCEM[1:0].
0x560251E0 C   FIELD 09w01 HTF (ro): half transfer flag An half transfer event is an half block transfer that occurs when half of the bytes of the source block size (rounded-up integer of LPDMA_CxBR1.BNDT[15:0] / 2) has been transferred to the destination.
0x560251E0 C   FIELD 10w01 DTEF (ro): data transfer error flag
0x560251E0 C   FIELD 11w01 ULEF (ro): update link transfer error flag
0x560251E0 C   FIELD 12w01 USEF (ro): user setting error flag
0x560251E0 C   FIELD 13w01 SUSPF (ro): completed suspension flag
0x560251E0 C   FIELD 14w01 TOF (ro): trigger overrun flag clear
0x560251E4 B  REGISTER LPDMA_C3CR: LPDMA channel 3 control register
0x560251E4 C   FIELD 00w01 EN (rw): enable Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 0. Else: this bit is de-asserted by hardware when there is a transfer error (master bus error or user setting error) or when there is a channel transfer complete (channel ready to be configured, e.g. if LSM=1 at the end of a single execution of the LLI). Else, this bit can be asserted by software. Writing 0 into this EN bit is ignored.
0x560251E4 C   FIELD 01w01 RESET (wo): reset This bit is write only. Writing 0 has no impact. Writing 1 implies the reset of the following: the channel internal state, SUSP and EN bits (whatever is written receptively in bit 2 and bit 0). The reset is effective when the channel is in steady state, meaning one of the following: - active channel in suspended state (LPDMA_CxSR.SUSPF = 1 and LPDMA_CxSR.IDLEF = LPDMA_CxCR.EN = 1) - channel in disabled state (LPDMA_CxSR.IDLEF = 1 and LPDMA_CxCR.EN = 0). After writing a RESET, to continue using this channel, the user must explicitly reconfigure the channel including the hardware-modified configuration registers (LPDMA_CxBR1, LPDMA_CxSAR and LPDMA_CxDAR) before enabling again the channel (see the programming sequence in ).
0x560251E4 C   FIELD 02w01 SUSP (rw): suspend Writing 1 into the field RESET (bit 1) causes the hardware to de-assert this bit, whatever is written into this bit 2. Else: Software must write 1 in order to suspend an active channel i.e. a channel with an on-going DMA transfer over its master ports. The software must write 0 in order to resume a suspended channel, following the programming sequence detailed in sequence.
0x560251E4 C   FIELD 08w01 TCIE (rw): transfer complete interrupt enable
0x560251E4 C   FIELD 09w01 HTIE (rw): half transfer complete interrupt enable
0x560251E4 C   FIELD 10w01 DTEIE (rw): data transfer error interrupt enable
0x560251E4 C   FIELD 11w01 ULEIE (rw): update link transfer error interrupt enable
0x560251E4 C   FIELD 12w01 USEIE (rw): user setting error interrupt enable
0x560251E4 C   FIELD 13w01 SUSPIE (rw): completed suspension interrupt enable
0x560251E4 C   FIELD 14w01 TOIE (rw): trigger overrun interrupt enable
0x560251E4 C   FIELD 16w01 LSM (rw): Link step mode First the block transfer is executed as defined by the current internal register file until LPDMA_CxBR1.BNDT[15:0 ] =0). Secondly the next linked-list data structure is conditionally uploaded from memory as defined by LPDMA_CxLLR. Then channel execution is completed. Note: This bit must be written when EN=0. This bit is read-only when EN=1.
0x560251E4 C   FIELD 22w02 PRIO (rw): priority level of the channel x LPDMA transfer versus others Note: This bit must be written when EN = 0. This bit is read-only when EN = 1.
0x56025210 B  REGISTER LPDMA_C3TR1: LPDMA channel 3 transfer register 1
0x56025210 C   FIELD 00w02 SDW_LOG2 (rw): binary logarithm of the source data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. a source block size must be a multiple of the source data width (LPDMA_CxBR1.BNDT[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and no transfer is issued. A source single transfer must have an aligned address with its data width (start address LPDMA_CxSAR[2:0] versus SDW_LOG2[1:0]). Otherwise, a user setting error is reported and none transfer is issued.
0x56025210 C   FIELD 03w01 SINC (rw): source incrementing single The source address, pointed by LPDMA_CxSAR, is kept constant after a single transfer or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x56025210 C   FIELD 11w01 PAM (rw): padding/alignment mode If DDW_LOG2[1:0]=SDW_LOG2[1:0]: if the data width of a single destination transfer is equal to the data width of a single source transfer, this bit is ignored. Else: Case 1: If destination data width > source data width Case 2: If destination data width < source data width
0x56025210 C   FIELD 15w01 SSEC (rw): security attribute of the LPDMA transfer from the source If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx =1 . A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this SSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer from the source is non-secure.
0x56025210 C   FIELD 16w02 DDW_LOG2 (rw): binary logarithm of the destination data width of a single in bytes Note: Setting a 8-byte data width causes a user setting error to be reported and none transfer is issued. A destination single transfer must have an aligned address with its data width (start address LPDMA_CxDAR[2:0] versus DDW_LOG2[1:0]). Otherwise a user setting error is reported and none transfer is issued.
0x56025210 C   FIELD 19w01 DINC (rw): destination incrementing single The destination address, pointed by LPDMA_CxDAR, is kept constant after a single transfer, or is incremented by the offset value corresponding to a contiguous data after a single transfer.
0x56025210 C   FIELD 31w01 DSEC (rw): security attribute of the LPDMA transfer to the destination If LPDMA_SECCFGR.SECx = 1 and the access is secure: This is a secure register bit. This bit can only be read by a secure software. This bit must be written by a secure software when LPDMA_SECCFGR.SECx = 1. A secure write is ignored when LPDMA_SECCFGR.SECx = 0. When LPDMA_SECCFGR.SECx is de-asserted, this DSEC bit is also de-asserted by hardware (on a secure reconfiguration of the channel as non-secure), and the LPDMA transfer to the destination is non-secure.
0x56025214 B  REGISTER LPDMA_C3TR2: LPDMA channel 3 transfer register 2
0x56025214 C   FIELD 00w05 REQSEL (rw): DMA hardware request selection These bits are ignored if channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer). Else, the selected hardware request is internally taken into account as per request. Note: The user must not assign a same input hardware request (same REQSEL[4:0] value) to different active DMA channels (LPDMA_CxCR.EN = 1 and LPDMA_CxTR2.SWREQ = 0 for these channels). DMA is not intended to hardware support the case of simultaneous enabled channels incorrectly configured with a same hardware peripheral request signal, and there is no user setting error reporting.
0x56025214 C   FIELD 09w01 SWREQ (rw): software request This bit is internally taken into account when LPDMA_CxCR.EN is asserted.
0x56025214 C   FIELD 11w01 BREQ (rw): block hardware request If the channel x is activated (LPDMA_CxCR.EN asserted) with SWREQ = 1 (software request for a memory-to-memory transfer), this bit is ignored. Else:
0x56025214 C   FIELD 14w02 TRIGM (rw): trigger mode These bits define the transfer granularity for its conditioning by the trigger. If the channel x is enabled (LPDMA_CxCR.EN asserted) with TRIGPOL[1:0] = 0b00 or 0b11, these TRIGM[1:0] bits are ignored. Else, a DMA transfer is conditioned by at least one trigger hit: The LPDMA monitoring of a trigger for channel x is started when the channel is enabled/loaded with a new active trigger configuration: rising or falling edge on a selected trigger (TRIGPOL[1:0] = 0b01 or respectively TRIGPOL[1:0] = 0b10). The monitoring of this trigger is kept active during the triggered and uncompleted (data or link) transfer; and if a new trigger is detected then, this hit is internally memorized to grant the next transfer, as long as the defined rising or falling edge is not modified, and the TRIGSEL[4:0] is not modified, and the channel is enabled. Transferring a next LLIn+1 that updates the LPDMA_CxTR2 with a new value for any of TRIGSEL[4:0] or TRIGPOL[1:0], resets the monitoring, trashing the memorized hit of the formerly defined LLIn trigger. After a first new trigger hitn+1 is memorized, if another second trigger hitn+2 is detected and if the hitn triggered transfer is still not completed, hitn+2 is lost and not memorized, and a trigger overrun flag is reported (LPDMA_CxSR.TOF = 1), an interrupt is generated if enabled (LPDMA_CxCR.TOIE = 1). The channel is not automatically disabled by hardware due to a trigger overrun.
0x56025214 C   FIELD 16w05 TRIGSEL (rw): trigger event input selection These bits select the trigger event input of the LPDMA transfer (as per Programmed LPDMA1 trigger), with an active trigger event if TRIGPOL[1:0] = 00.
0x56025214 C   FIELD 24w02 TRIGPOL (rw): trigger event polarity These bits define the polarity of the selected trigger event input defined by TRIGSEL[4:0].
0x56025214 C   FIELD 30w02 TCEM (rw): transfer complete event mode These bits define the transfer granularity for the transfer complete and half transfer complete events generation. Note: If the initial LLI0 data transfer is null/void (directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] = 0), then neither the complete transfer event nor the half transfer event is generated. Note: If the initial LLI0 data transfer is null/void (i.e. directly programmed by the internal register file with LPDMA_CxBR1.BNDT[15:0] =0 ), then the half transfer event is not generated, and the transfer complete event is generated when is completed the loading of the LLI1.
0x56025218 B  REGISTER LPDMA_C3BR1: LPDMA channel 3 block register 1
0x56025218 C   FIELD 00w16 BNDT (rw): block number of data bytes to transfer from the source Block size transferred from the source. When the channel is enabled, this field becomes read-only and is decremented, indicating the remaining number of data items in the current source block to be transferred. BNDT[15:0] is programmed in number of bytes, maximum source block size is 64 Kbytes -1. Once the last data transfer is completed (BNDT[15:0] = 0): - if LPDMA_CxLLR.UB1 = 1, this field is updated by the LLI in the memory. - if LPDMA_CxLLR.UB1 = 0 and if there is at least one non null Uxx update bit, this field is internally restored to the programmed value. - if all LPDMA_CxLLR.Uxx = 0 and if LPDMA_CxLLR.LA[15:0] = 0, this field is internally restored to the programmed value (infinite/continuous last LLI). - if LPDMA_CxLLR = 0, this field is kept as zero following the last LLI data transfer. Note: A non-null source block size must be a multiple of the source data width (BNDT[2:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else a user setting error is reported and none transfer is issued.
0x5602521C B  REGISTER LPDMA_C3SAR: LPDMA channel 3 source address register
0x5602521C C   FIELD 00w32 SA (rw): source address This field is the pointer to the address from which the next data is read. During the channel activity, depending on the source addressing mode (LPDMA_CxTR1.SINC), this field is either kept fixed or incremented by the data width (LPDMA_CxTR1.SDW_LOG2[1:0]) after each single source data, reflecting the next address from which data is read. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by LPDMA from the memory, provided the LLI is set with LPDMA_CxLLR.USA = 1. Note: A source address must be aligned with the programmed data width of a source single (SA[32:0] versus LPDMA_CxTR1.SDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x56025220 B  REGISTER LPDMA_C3DAR: LPDMA channel 3 destination address register
0x56025220 C   FIELD 00w32 DA (rw): destination address This field is the pointer to the address from which the next data is written. During the channel activity, depending on the destination addressing mode (LPDMA_CxTR1.DINC), this field is kept fixed or incremented by the data width (LPDMA_CxTR1.DDW_LOG2[21:0]) after each single destination data, reflecting the next address from which data is written. In linked-list mode, after a LLI data transfer is completed, this register is automatically updated by DMA from the memory, provided the LLI is set with LPDMA_CxLLR.UDA = 1. Note: A destination address must be aligned with the programmed data width of a destination single (DA[2:0] versus LPDMA_CxTR1.DDW_LOG2[1:0]). Else, a user setting error is reported and no transfer is issued.
0x5602524C B  REGISTER LPDMA_C3LLR: LPDMA channel 3 linked-list address register
0x5602524C C   FIELD 02w14 LA (rw): pointer (16-bit low-significant address) to the next linked-list data structure If UT1 = UT2 = UB1 = USA = UDA = ULL = 0 and if LA[15:20] = 0, the current LLI is the last one. The channel transfer is completed without any update of the linked-list DMA register file. Else, this field is the pointer to the memory address offset from which the next linked-list data structure is automatically fetched from, once the data transfer is completed, in order to conditionally update the linked-list DMA internal register file (LPDMA_CxCTR1, LPDMA_CxTR2, LPDMA_CxBR1, LPDMA_CxSAR, LPDMA_CxDAR and LPDMA_CxLLR). Note: The user must program the pointer to be 32-bit aligned. The two low-significant bits are write ignored.
0x5602524C C   FIELD 16w01 ULL (rw): Update LPDMA_CxLLR register from memory This bit is used to control the update of the LPDMA_CxLLR register from the memory during the link transfer.
0x5602524C C   FIELD 27w01 UDA (rw): Update LPDMA_CxDAR register from memory This bit is used to control the update of the LPDMA_CxDAR register from the memory during the link transfer.
0x5602524C C   FIELD 28w01 USA (rw): update LPDMA_CxSAR from memory This bit controls the update of the LPDMA_CxSAR register from the memory during the link transfer.
0x5602524C C   FIELD 29w01 UB1 (rw): Update LPDMA_CxBR1 from memory This bit controls the update of the LPDMA_CxBR1 register from the memory during the link transfer.
0x5602524C C   FIELD 30w01 UT2 (rw): Update LPDMA_CxTR2 from memory This bit controls the update of the LPDMA_CxTR2 register from the memory during the link transfer.
0x5602524C C   FIELD 31w01 UT1 (rw): Update LPDMA_CxTR1 from memory This bit controls the update of the LPDMA_CxTR1 register from the memory during the link transfer.
0xE0044000 A PERIPHERAL DBGMCU
0xE0044000 B  REGISTER IDCODE (ro): DBGMCU_IDCODE
0xE0044000 C   FIELD 00w12 DEV_ID: Device dentification
0xE0044000 C   FIELD 16w16 REV_ID: Revision
0xE0044004 B  REGISTER CR (rw): Debug MCU configuration register
0xE0044004 C   FIELD 01w01 DBG_STOP: Debug Stop mode
0xE0044004 C   FIELD 02w01 DBG_STANDBY: Debug Standby mode
0xE0044004 C   FIELD 04w01 TRACE_IOEN: Trace pin assignment control
0xE0044004 C   FIELD 05w01 TRACE_EN: trace port and clock enable
0xE0044004 C   FIELD 06w02 TRACE_MODE: Trace pin assignment control
0xE0044008 B  REGISTER APB1LFZR (rw): Debug MCU APB1L peripheral freeze register
0xE0044008 C   FIELD 00w01 DBG_TIM2_STOP: TIM2 stop in debug
0xE0044008 C   FIELD 01w01 DBG_TIM3_STOP: TIM3 stop in debug
0xE0044008 C   FIELD 02w01 DBG_TIM4_STOP: TIM4 stop in debug
0xE0044008 C   FIELD 03w01 DBG_TIM5_STOP: TIM5 stop in debug
0xE0044008 C   FIELD 04w01 DBG_TIM6_STOP: TIM6 stop in debug
0xE0044008 C   FIELD 05w01 DBG_TIM7_STOP: TIM7 stop in debug
0xE0044008 C   FIELD 11w01 DBG_WWDG_STOP: Window watchdog counter stop in debug
0xE0044008 C   FIELD 12w01 DBG_IWDG_STOP: Independent watchdog counter stop in debug
0xE0044008 C   FIELD 21w01 DBG_I2C1_STOP: I2C1 SMBUS timeout stop in debug
0xE0044008 C   FIELD 22w01 DBG_I2C2_STOP: I2C2 SMBUS timeout stop in debug
0xE004400C B  REGISTER APB1HFZR (rw): Debug MCU APB1H peripheral freeze register
0xE004400C C   FIELD 01w01 DBG_I2C4_STOP: I2C4 stop in debug
0xE004400C C   FIELD 05w01 DBG_LPTIM2_STOP: LPTIM2 stop in debug
0xE0044010 B  REGISTER APB2FZR (rw): Debug MCU APB2 peripheral freeze register
0xE0044010 C   FIELD 11w01 DBG_TIM1_STOP: TIM1 counter stopped when core is halted
0xE0044010 C   FIELD 13w01 DBG_TIM8_STOP: TIM8 stop in debug
0xE0044010 C   FIELD 16w01 DBG_TIM15_STOP: TIM15 counter stopped when core is halted
0xE0044010 C   FIELD 17w01 DBG_TIM16_STOP: TIM16 counter stopped when core is halted
0xE0044010 C   FIELD 18w01 DBG_TIM17_STOP: DBG_TIM17_STOP
0xE0044014 B  REGISTER APB3FZR (rw): Debug MCU APB3 peripheral freeze register
0xE0044014 C   FIELD 10w01 DBG_I2C3_STOP: I2C3 stop in debug
0xE0044014 C   FIELD 17w01 DBG_LPTIM1_STOP: LPTIM1 stop in debug
0xE0044014 C   FIELD 18w01 DBG_LPTIM3_STOP: LPTIM3 stop in debug
0xE0044014 C   FIELD 19w01 DBG_LPTIM4_STOP: LPTIM4 stop in debug
0xE0044014 C   FIELD 30w01 DBG_RTC_STOP: RTC stop in debug
0xE0044020 B  REGISTER AHB1FZR (rw): Debug MCU AHB1 peripheral freeze register
0xE0044020 C   FIELD 00w01 DBG_GPDMA0_STOP: GPDMA channel 0 stop in debug
0xE0044020 C   FIELD 01w01 DBG_GPDMA1_STOP: GPDMA channel 1 stop in debug
0xE0044020 C   FIELD 02w01 DBG_GPDMA2_STOP: GPDMA channel 2 stop in debug
0xE0044020 C   FIELD 03w01 DBG_GPDMA3_STOP: GPDMA channel 3 stop in debug
0xE0044020 C   FIELD 04w01 DBG_GPDMA4_STOP: GPDMA channel 4 stop in debug
0xE0044020 C   FIELD 05w01 DBG_GPDMA5_STOP: GPDMA channel 5 stop in debug
0xE0044020 C   FIELD 06w01 DBG_GPDMA6_STOP: GPDMA channel 6 stop in debug
0xE0044020 C   FIELD 07w01 DBG_GPDMA7_STOP: GPDMA channel 7 stop in debug
0xE0044020 C   FIELD 08w01 DBG_GPDMA8_STOP: GPDMA channel 8 stop in debug
0xE0044020 C   FIELD 09w01 DBG_GPDMA9_STOP: GPDMA channel 9 stop in debug
0xE0044020 C   FIELD 10w01 DBG_GPDMA10_STOP: GPDMA channel 10 stop in debug
0xE0044020 C   FIELD 11w01 DBG_GPDMA11_STOP: GPDMA channel 11 stop in debug
0xE0044020 C   FIELD 12w01 DBG_GPDMA12_STOP: GPDMA channel 12 stop in debug
0xE0044020 C   FIELD 13w01 DBG_GPDMA13_STOP: GPDMA channel 13 stop in debug
0xE0044020 C   FIELD 14w01 DBG_GPDMA14_STOP: GPDMA channel 14 stop in debug
0xE0044020 C   FIELD 15w01 DBG_GPDMA15_STOP: GPDMA channel 15 stop in debug
0xE0044028 B  REGISTER AHB3FZR (rw): Debug MCU AHB3 peripheral freeze register
0xE0044028 C   FIELD 00w01 DBG_LPDMA0_STOP: LPDMA channel 0 stop in debug
0xE0044028 C   FIELD 01w01 DBG_LPDMA1_STOP: LPDMA channel 1 stop in debug
0xE0044028 C   FIELD 02w01 DBG_LPDMA2_STOP: LPDMA channel 2 stop in debug
0xE0044028 C   FIELD 03w01 DBG_LPDMA3_STOP: LPDMA channel 3 stop in debug
0xE00440FC B  REGISTER DBGMCU_SR (ro): DBGMCU status register
0xE00440FC C   FIELD 00w08 AP_PRESENT: Bit n identifies whether access port AP n is present in device Bit n = 0: APn absent Bit n = 1: APn present
0xE00440FC C   FIELD 08w08 AP_LOCKED: DECLARATION TO BE CONFIRMED by PRODUCT OWNER! Bit n identifies whether access port AP n is open (can be accessed via the debug port) or locked (debug access to the AP is blocked) Bit n = 0: APn locked Bit n = 1: APn enabled
0xE0044100 B  REGISTER DBGMCU_DBG_AUTH_HOST (ro): DBGMCU debug host authentication register
0xE0044100 C   FIELD 00w32 AUTH_KEY: Device authentication key The device specific 64-bit authentication key (OEM key) must be written to this register (in two successive 32-bit writes, least significant word first) to permit RDP regression. Writing a wrong key locks access to the device and prevent code execution from the Flash memory.
0xE0044104 B  REGISTER DBGMCU_DBG_AUTH_DEVICE (ro): DBGMCU debug device authentication register
0xE0044104 C   FIELD 00w32 AUTH_ID: Device specific ID Device specific ID used for RDP regression.
0xE0044FD0 B  REGISTER PIDR4 (ro): Debug MCU CoreSight peripheral identity register 4
0xE0044FD0 C   FIELD 00w04 JEP106CON: JEP106 continuation code
0xE0044FD0 C   FIELD 04w04 KCOUNT_4: register file size
0xE0044FE0 B  REGISTER PIDR0 (ro): Debug MCU CoreSight peripheral identity register 0
0xE0044FE0 C   FIELD 00w08 PARTNUM: part number bits [7:0]
0xE0044FE4 B  REGISTER PIDR1 (ro): Debug MCU CoreSight peripheral identity register 1
0xE0044FE4 C   FIELD 00w04 PARTNUM: part number bits [11:8]
0xE0044FE4 C   FIELD 04w04 JEP106ID: JEP106 identity code bits [3:0]
0xE0044FE8 B  REGISTER PIDR2 (ro): Debug MCU CoreSight peripheral identity register 2
0xE0044FE8 C   FIELD 00w03 JEP106ID: JEP106 identity code bits [6:4]
0xE0044FE8 C   FIELD 03w01 JEDEC: JEDEC assigned value
0xE0044FE8 C   FIELD 04w04 REVISION: component revision number
0xE0044FEC B  REGISTER PIDR3 (ro): Debug MCU CoreSight peripheral identity register 3
0xE0044FEC C   FIELD 00w04 CMOD: customer modified
0xE0044FEC C   FIELD 04w04 REVAND: metal fix version
0xE0044FF0 B  REGISTER CIDR0 (ro): Debug MCU CoreSight component identity register 0
0xE0044FF0 C   FIELD 00w08 PREAMBLE: component identification bits [7:0]
0xE0044FF4 B  REGISTER CIDR1 (ro): Debug MCU CoreSight component identity register 1
0xE0044FF4 C   FIELD 00w04 PREAMBLE: component identification bits [11:8]
0xE0044FF4 C   FIELD 04w04 CLASS: component identification bits [15:12] - component class
0xE0044FF8 B  REGISTER CIDR2 (ro): Debug MCU CoreSight component identity register 2
0xE0044FF8 C   FIELD 00w08 PREAMBLE: component identification bits [23:16]
0xE0044FFC B  REGISTER CIDR3 (ro): Debug MCU CoreSight component identity register 3
0xE0044FFC C   FIELD 00w08 PREAMBLE: component identification bits [31:24]
INTERRUPT 000: WWDG (WWDG): Window Watchdog interrupt
INTERRUPT 001: PDV_AVD (EXTI): Power voltage monitor/Analog voltage monitor
INTERRUPT 002: RTC (RTC): RTC global non-secure interrupts
INTERRUPT 003: RTC_S (RTC): RTC secure global secure interrupts
INTERRUPT 004: TAMP (TAMP): Tamper global interrupts
INTERRUPT 005: RAMCFG (RAMCFG): RAM configuration global interrupt
INTERRUPT 006: FLASH (FLASH): Flash memory non-secure global interrupt
INTERRUPT 007: FLASH_S (FLASH): Flash memory secure global interrupt
INTERRUPT 009: RCC (RCC): RCC secure global interrupt
INTERRUPT 010: RCC_S (RCC): RCC SECURE GLOBAL INTERRUPT
INTERRUPT 011: EXTI0 (EXTI): EXTI line0 interrupt
INTERRUPT 012: EXTI1 (EXTI): EXTI line1 interrupt
INTERRUPT 013: EXTI2 (EXTI): EXTI line2 interrupt
INTERRUPT 014: EXTI3 (EXTI): EXTI line3 interrupt
INTERRUPT 015: EXTI4 (EXTI): EXTI line4 interrupt
INTERRUPT 016: EXTI5 (EXTI): EXTI line5 interrupt
INTERRUPT 017: EXTI6 (EXTI): EXTI line6 interrupt
INTERRUPT 018: EXTI7 (EXTI): EXTI line7 interrupt
INTERRUPT 019: EXTI8 (EXTI): EXTI line8 interrupt
INTERRUPT 020: EXTI9 (EXTI): EXTI line9 interrupt
INTERRUPT 021: EXTI10 (EXTI): EXTI line10 interrupt
INTERRUPT 022: EXTI11 (EXTI): EXTI line11 interrupt
INTERRUPT 023: EXTI12 (EXTI): EXTI line12 interrupt
INTERRUPT 024: EXTI13 (EXTI): EXTI line13 interrupt
INTERRUPT 025: EXTI14 (EXTI): EXTI line14 interrupt
INTERRUPT 026: EXTI15 (EXTI): EXTI line15 interrupt
INTERRUPT 028: SAES (SAES): SAES global interrupt
INTERRUPT 029: GPDMA1_CH0 (GPDMA1): GPDMA1 channel 0 global interrupt
INTERRUPT 030: GPDMA1_CH1 (GPDMA1): GPDMA1 channel 1 global interrupt
INTERRUPT 031: GPDMA1_CH2 (GPDMA1): GPDMA1 channel 2 global interrupt
INTERRUPT 032: GPDMA1_CH3 (GPDMA1): GPDMA1 channel 3 global interrupt
INTERRUPT 033: GPDMA1_CH4 (GPDMA1): GPDMA1 channel 4 global interrupt
INTERRUPT 034: GPDMA1_CH5 (GPDMA1): GPDMA1 channel 5 global interrupt
INTERRUPT 035: GPDMA1_CH6 (GPDMA1): GPDMA1 channel 6 global interrupt
INTERRUPT 036: GPDMA1_CH7 (GPDMA1): GPDMA1 channel 7 global interrupt
INTERRUPT 037: ADC1 (ADC1): ADC1 (16 bits) global interrupt
INTERRUPT 038: DAC1 (DAC1): DAC1 global interrupt
INTERRUPT 039: FDCAN1_IT0 (FDCAN1_RAM): FDCAN1 Interrupt 0
INTERRUPT 040: FDCAN1_IT1 (FDCAN1_RAM): FDCAN1 Interrupt 1
INTERRUPT 041: TIM1_BRK (TIM1): TIM1 Break - transition error -index error
INTERRUPT 042: TIM1_UP (TIM1): TIM1 Update
INTERRUPT 043: TIM1_TRG_COM (TIM1): TIM1 Trigger and Commutation - direction change interrupt -index
INTERRUPT 044: TIM1_CC (TIM1): TIM1 Capture Compare interrupt
INTERRUPT 045: TIM2 (TIM2): TIM2 global interrupt
INTERRUPT 046: TIM3 (TIM3): TIM3 global interrupt
INTERRUPT 047: TIM4 (TIM4): TIM4 global interrupt
INTERRUPT 048: TIM5 (TIM5): TIM5 global interrupt
INTERRUPT 049: TIM6 (TIM6): TIM6 global interrupt
INTERRUPT 050: TIM7 (TIM7): TIM7 global interrupt
INTERRUPT 051: TIM8_BRK (TIM8): TIM8 Break Interrupt
INTERRUPT 052: TIM8_UP (TIM8): TIM8 Update Interrupt
INTERRUPT 053: TIM8_TRG_COM (TIM8): TIM8 Trigger and Commutation Interrupt
INTERRUPT 054: TIM8_CC (TIM8): TIM8 Capture Compare Interrupt
INTERRUPT 055: I2C1_EV (I2C1): I2C1 event interrupt
INTERRUPT 056: I2C1_ER (I2C1): I2C1 error interrupt
INTERRUPT 057: I2C2_EV (I2C2): I2C2 event interrupt
INTERRUPT 058: I2C2_ER (I2C2): I2C2 error interrupt
INTERRUPT 059: SPI1 (SPI1): SPI1 global interrupt
INTERRUPT 060: SPI2 (SPI2): SPI2 global interrupt
INTERRUPT 061: USART1 (USART1): USART1 global interrupt
INTERRUPT 062: USART2 (USART2): USART2 global interrupt
INTERRUPT 063: USART3 (USART3): USART3 global interrupt
INTERRUPT 064: UART4 (UART4): UART4 global interrupt
INTERRUPT 065: UART5 (UART5): UART5 global interrupt
INTERRUPT 066: LPUART1 (LPUART1): LPUART1 global interrupt
INTERRUPT 067: LPTIM1 (LPTIM1): LPTIM1 global interrupt
INTERRUPT 068: LPTIM2 (LPTIM2): LPTIM2 global interrupt
INTERRUPT 069: TIM15 (TIM15): TIM15 global interrupt
INTERRUPT 070: TIM16 (TIM16): TIM16 global interrupt
INTERRUPT 071: TIM17 (FDCAN1): TIM17 global interrupt
INTERRUPT 071: TIM17 (TIM17): TIM17 global interrupt
INTERRUPT 072: COMP (COMP): COMP1 and COMP2 interrupts
INTERRUPT 073: OTG_FS (OTG_FS): USB OTG FS global interrupt
INTERRUPT 075: FMC (FMC): FMC global interrupt
INTERRUPT 076: OCTOSPI1 (OCTOSPI1): OCTOSPI1 global interrupt
INTERRUPT 077: PWR_S3WU (PWR): PWR wakeup from Stop 3 interrupt
INTERRUPT 078: SDMMC1 (SDMMC1): SDMMC1 global interrupt
INTERRUPT 079: SDMMC2 (SDMMC2): SDMMC2 global interrupt
INTERRUPT 088: I2C3_EV (I2C3): I2C3 event interrupt
INTERRUPT 089: I2C3_ER (I2C3): I2C3 error interrupt
INTERRUPT 090: SAI1 (SAI1): SAI1 global interrupt
INTERRUPT 091: SAI2 (SAI2): SAI2 global interrupt
INTERRUPT 092: TSC (TSC): TSC global interrupt
INTERRUPT 093: AES (AES): AES global interrupt
INTERRUPT 094: RNG (RNG): RNG global interrupt
INTERRUPT 096: HASH (HASH): HASH interrupt
INTERRUPT 097: PKA (PKA): PKA global interrupt
INTERRUPT 098: LPTIM3 (LPTIM3): LPTIM3 global interrupt
INTERRUPT 099: SPI3 (SPI3): SPI3 global interrupt
INTERRUPT 100: I2C4_ER (I2C4): I2C4 error interrupt
INTERRUPT 101: I2C4_EV (I2C4): I2C4 event interrupt
INTERRUPT 102: MDF1_FLT0 (MDF1): MDF1 filter 0 global interrupt
INTERRUPT 103: MDF1_FLT1 (MDF1): MDF1 filter 1 global interrupt
INTERRUPT 104: MDF1_FLT2 (MDF1): MDF1 filter 2 global interrupt
INTERRUPT 105: MDF1_FLT3 (MDF1): MDF1 filter 3 global interrupt
INTERRUPT 106: UCPD1 (UCPD1): UCPD1 global interrupt
INTERRUPT 107: ICACHE (ICache): Instruction cache global interrupt
INTERRUPT 108: OTFDEC1 (OTFDEC1): OTFDEC1 interrupt
INTERRUPT 109: OTFDEC2 (OTFDEC2): OTFDEC2 interrupt
INTERRUPT 110: LPTIM4 (LPTIM4): LPTIM4 global interrupt
INTERRUPT 111: DCACHE (DCACHE): Data cache global interrupt
INTERRUPT 112: ADF1_FLT0 (ADF1): ADF1 filter 0 global interrupt
INTERRUPT 113: ADC4 (ADC4): ADC4 (12 bits) global interrupt
INTERRUPT 114: LPDMA1_CH0 (LPDMA1): LPDMA1 SmartRun channel 0 global interrupt
INTERRUPT 115: LPDMA1_CH1 (LPDMA1): LPDMA1 SmartRun channel 1 global interrupt
INTERRUPT 116: LPDMA1_CH2 (LPDMA1): LPDMA1 SmartRun channel 2 global interrupt
INTERRUPT 117: LPDMA1_CH3 (LPDMA1): LPDMA1 SmartRun channel 3 global interrupt
INTERRUPT 118: DMA2D (DMA2D): DMA2D global interrupt
INTERRUPT 119: DCMI (DCMI): Digital camera interface
INTERRUPT 120: OCTOSPI2 (OCTOSPI2): OCTOSPI2 global interrupt
INTERRUPT 121: MDF1_FLT4 (MDF1): MDF1 filter 4 global interrupt
INTERRUPT 122: MDF1_FLT5 (MDF1): MDF1 filter 5 global interrupt
INTERRUPT 123: Cordic (CORDIC): Cordic interrupt
INTERRUPT 124: FMAC (FMAC): FMAC interrupt
